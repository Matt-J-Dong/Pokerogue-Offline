var y6=Object.defineProperty;var r=(t,E)=>y6(t,"name",{value:E,configurable:!0});import{g as s,i as D,b as Ne,h as rv,X as w6,K as A,f as KA,a as UL,d as V6,t as mN,N as me,c as SA,Y as SE,k as iv,n as Ct,O as De,Z as nP,_ as v6,$ as mE,a0 as RO,a1 as VR,a2 as p1,B as he,a3 as VE,S as UM,E as Kt,w as oE,p as UT,a4 as Qw,l as gN,a5 as Go,J as Jw,m as DM,Q as y1,L as ov,a6 as x6,q as FM,e as b6,a7 as Js,a8 as w1,a9 as Z6,aa as aP,v as k6,ab as X6,r as DL,ac as Q6,ad as J6,P as rP,ae as Cv,D as YM,af as Ps,o as lI,A as $6,ag as WM,ah as q6,R as z6,I as uA,ai as lv,aj as ri,ak as j6,al as e8,am as A8,an as $w,ao as E8,ap as t8,aq as R8}from"./index-BleBCbtu.js";const _o=Object.freeze(Object.defineProperty({__proto__:null,get AddPokeballModifier(){return oD},get AddVoucherModifier(){return CD},get AttackTypeBoosterModifier(){return DI},get BaseStatModifier(){return mr},get BerryModifier(){return XE},get BoostBugSpawnModifier(){return zr},get BypassSpeedChanceModifier(){return zS},get ConsumableModifier(){return Ls},get ConsumablePokemonModifier(){return AO},get ConsumablePokemonMoveModifier(){return br},get ContactHeldItemTransferChanceModifier(){return is},get CritBoosterModifier(){return qS},get CriticalCatchChanceBoosterModifier(){return $r},get DamageMoneyRewardModifier(){return JL},get DoubleBattleChanceBoosterModifier(){return Kr},get EnemyAttackStatusEffectChanceModifier(){return RT},get EnemyDamageBoosterModifier(){return ei},get EnemyDamageReducerModifier(){return Ai},get EnemyEndureChanceModifier(){return Ei},get EnemyFusionChanceModifier(){return ti},get EnemyPersistentModifier(){return cI},get EnemyStatusEffectHealChanceModifier(){return gD},get EnemyTurnHealModifier(){return mD},get EvoTrackerModifier(){return gr},get EvolutionItemModifier(){return cD},get EvolutionStatBoosterModifier(){return lD},get ExpBalanceModifier(){return FD},get ExpBoosterModifier(){return fD},get ExpShareModifier(){return KD},get ExtraModifierModifier(){return qL},get FieldEffectModifier(){return AT},get FlinchChanceModifier(){return vr},get FusePokemonModifier(){return BD},get GigantamaxAccessModifier(){return XS},get HealShopCostModifier(){return $L},get HealingBoosterModifier(){return ET},get HeldItemTransferModifier(){return jr},get HiddenAbilityRateBoosterModifier(){return MI},get HitHealModifier(){return Ss},get IvScannerModifier(){return os},get LapsingPersistentModifier(){return XL},get LapsingPokemonHeldItemModifier(){return Wr},get LevelIncrementBoosterModifier(){return QL},get LockModifierTiersModifier(){return qr},get MapModifier(){return Yr},get MegaEvolutionAccessModifier(){return kS},get Modifier(){return dr},get ModifierBar(){return h1},get MoneyInterestModifier(){return Jr},get MoneyMultiplierModifier(){return CO},get MoneyRewardModifier(){return YD},get MultipleParticipantExpBonusModifier(){return hD},get PersistentModifier(){return WE},get PokemonAllMovePpRestoreModifier(){return PD},get PokemonBaseStatFlatModifier(){return yr},get PokemonBaseStatTotalModifier(){return pr},get PokemonExpBoosterModifier(){return dD},get PokemonFormChangeItemModifier(){return EI},get PokemonFriendshipBoosterModifier(){return kr},get PokemonHeldItemModifier(){return DA},get PokemonHpRestoreModifier(){return ns},get PokemonIncrementingStatModifier(){return JS},get PokemonInstantReviveModifier(){return eT},get PokemonLevelIncrementModifier(){return Zr},get PokemonMoveAccuracyBoosterModifier(){return Qr},get PokemonMultiHitModifier(){return $I},get PokemonNatureChangeModifier(){return _D},get PokemonNatureWeightModifier(){return Xr},get PokemonPpRestoreModifier(){return MD},get PokemonPpUpModifier(){return GD},get PokemonStatusHealModifier(){return DD},get PreserveBerryModifier(){return Ts},get RememberMoveModifier(){return HD},get ResetNegativeStatStageModifier(){return xr},get ShinyRateBoosterModifier(){return as},get SpeciesCritBoosterModifier(){return wr},get SpeciesStatBoosterModifier(){return Ns},get StatBoosterModifier(){return $S},get SurviveDamageModifier(){return Vr},get SwitchEffectTransferModifier(){return rs},get TempCritBoosterModifier(){return Fr},get TempExtraModifierModifier(){return zL},get TempStatStageBoosterModifier(){return ZS},get TerastallizeAccessModifier(){return QS},get TerrastalizeModifier(){return UD},get TmModifier(){return uD},get TurnHealModifier(){return jS},get TurnHeldItemTransferModifier(){return tT},get TurnStatusEffectModifier(){return ss},get modifierSortFunc(){return fr},get overrideHeldItems(){return Dc},get overrideModifiers(){return Uc}},Symbol.toStringTag,{value:"Module"}));var Uv=(t=>(t[t.MOVE=0]="MOVE",t[t.LEGENDARY=1]="LEGENDARY",t[t.SHINY=2]="SHINY",t))(Uv||{}),L=(t=>(t[t.UNKNOWN=-1]="UNKNOWN",t[t.NORMAL=0]="NORMAL",t[t.FIGHTING=1]="FIGHTING",t[t.FLYING=2]="FLYING",t[t.POISON=3]="POISON",t[t.GROUND=4]="GROUND",t[t.ROCK=5]="ROCK",t[t.BUG=6]="BUG",t[t.GHOST=7]="GHOST",t[t.STEEL=8]="STEEL",t[t.FIRE=9]="FIRE",t[t.WATER=10]="WATER",t[t.GRASS=11]="GRASS",t[t.ELECTRIC=12]="ELECTRIC",t[t.PSYCHIC=13]="PSYCHIC",t[t.ICE=14]="ICE",t[t.DRAGON=15]="DRAGON",t[t.DARK=16]="DARK",t[t.FAIRY=17]="FAIRY",t[t.STELLAR=18]="STELLAR",t))(L||{}),ye=(t=>(t[t.GENDERLESS=-1]="GENDERLESS",t[t.MALE=0]="MALE",t[t.FEMALE=1]="FEMALE",t))(ye||{});function SS(t){switch(t){case 0:return"♂";case 1:return"♀"}return""}r(SS,"getGenderSymbol");function WL(t,E){switch(t){case 0:return E?"#006090":"#40c8f8";case 1:return E?"#984038":"#f89890"}return"#ffffff"}r(WL,"getGenderColor");var Me=(t=>(t[t.POKEBALL=0]="POKEBALL",t[t.GREAT_BALL=1]="GREAT_BALL",t[t.ULTRA_BALL=2]="ULTRA_BALL",t[t.ROGUE_BALL=3]="ROGUE_BALL",t[t.MASTER_BALL=4]="MASTER_BALL",t[t.LUXURY_BALL=5]="LUXURY_BALL",t))(Me||{}),X=(t=>(t[t.NONE=0]="NONE",t[t.SUNNY=1]="SUNNY",t[t.RAIN=2]="RAIN",t[t.SANDSTORM=3]="SANDSTORM",t[t.HAIL=4]="HAIL",t[t.SNOW=5]="SNOW",t[t.FOG=6]="FOG",t[t.HEAVY_RAIN=7]="HEAVY_RAIN",t[t.HARSH_SUN=8]="HARSH_SUN",t[t.STRONG_WINDS=9]="STRONG_WINDS",t))(X||{}),be=(t=>(t[t.HARDY=0]="HARDY",t[t.LONELY=1]="LONELY",t[t.BRAVE=2]="BRAVE",t[t.ADAMANT=3]="ADAMANT",t[t.NAUGHTY=4]="NAUGHTY",t[t.BOLD=5]="BOLD",t[t.DOCILE=6]="DOCILE",t[t.RELAXED=7]="RELAXED",t[t.IMPISH=8]="IMPISH",t[t.LAX=9]="LAX",t[t.TIMID=10]="TIMID",t[t.HASTY=11]="HASTY",t[t.SERIOUS=12]="SERIOUS",t[t.JOLLY=13]="JOLLY",t[t.NAIVE=14]="NAIVE",t[t.MODEST=15]="MODEST",t[t.MILD=16]="MILD",t[t.QUIET=17]="QUIET",t[t.BASHFUL=18]="BASHFUL",t[t.RASH=19]="RASH",t[t.CALM=20]="CALM",t[t.GENTLE=21]="GENTLE",t[t.SASSY=22]="SASSY",t[t.CAREFUL=23]="CAREFUL",t[t.QUIRKY=24]="QUIRKY",t))(be||{}),n=(t=>(t[t.TOWN=0]="TOWN",t[t.PLAINS=1]="PLAINS",t[t.GRASS=2]="GRASS",t[t.TALL_GRASS=3]="TALL_GRASS",t[t.METROPOLIS=4]="METROPOLIS",t[t.FOREST=5]="FOREST",t[t.SEA=6]="SEA",t[t.SWAMP=7]="SWAMP",t[t.BEACH=8]="BEACH",t[t.LAKE=9]="LAKE",t[t.SEABED=10]="SEABED",t[t.MOUNTAIN=11]="MOUNTAIN",t[t.BADLANDS=12]="BADLANDS",t[t.CAVE=13]="CAVE",t[t.DESERT=14]="DESERT",t[t.ICE_CAVE=15]="ICE_CAVE",t[t.MEADOW=16]="MEADOW",t[t.POWER_PLANT=17]="POWER_PLANT",t[t.VOLCANO=18]="VOLCANO",t[t.GRAVEYARD=19]="GRAVEYARD",t[t.DOJO=20]="DOJO",t[t.FACTORY=21]="FACTORY",t[t.RUINS=22]="RUINS",t[t.WASTELAND=23]="WASTELAND",t[t.ABYSS=24]="ABYSS",t[t.SPACE=25]="SPACE",t[t.CONSTRUCTION_SITE=26]="CONSTRUCTION_SITE",t[t.JUNGLE=27]="JUNGLE",t[t.FAIRY_CAVE=28]="FAIRY_CAVE",t[t.TEMPLE=29]="TEMPLE",t[t.SLUM=30]="SLUM",t[t.SNOWY_FOREST=31]="SNOWY_FOREST",t[t.ISLAND=40]="ISLAND",t[t.LABORATORY=41]="LABORATORY",t[t.END=50]="END",t))(n||{}),e=(t=>(t[t.BULBASAUR=1]="BULBASAUR",t[t.IVYSAUR=2]="IVYSAUR",t[t.VENUSAUR=3]="VENUSAUR",t[t.CHARMANDER=4]="CHARMANDER",t[t.CHARMELEON=5]="CHARMELEON",t[t.CHARIZARD=6]="CHARIZARD",t[t.SQUIRTLE=7]="SQUIRTLE",t[t.WARTORTLE=8]="WARTORTLE",t[t.BLASTOISE=9]="BLASTOISE",t[t.CATERPIE=10]="CATERPIE",t[t.METAPOD=11]="METAPOD",t[t.BUTTERFREE=12]="BUTTERFREE",t[t.WEEDLE=13]="WEEDLE",t[t.KAKUNA=14]="KAKUNA",t[t.BEEDRILL=15]="BEEDRILL",t[t.PIDGEY=16]="PIDGEY",t[t.PIDGEOTTO=17]="PIDGEOTTO",t[t.PIDGEOT=18]="PIDGEOT",t[t.RATTATA=19]="RATTATA",t[t.RATICATE=20]="RATICATE",t[t.SPEAROW=21]="SPEAROW",t[t.FEAROW=22]="FEAROW",t[t.EKANS=23]="EKANS",t[t.ARBOK=24]="ARBOK",t[t.PIKACHU=25]="PIKACHU",t[t.RAICHU=26]="RAICHU",t[t.SANDSHREW=27]="SANDSHREW",t[t.SANDSLASH=28]="SANDSLASH",t[t.NIDORAN_F=29]="NIDORAN_F",t[t.NIDORINA=30]="NIDORINA",t[t.NIDOQUEEN=31]="NIDOQUEEN",t[t.NIDORAN_M=32]="NIDORAN_M",t[t.NIDORINO=33]="NIDORINO",t[t.NIDOKING=34]="NIDOKING",t[t.CLEFAIRY=35]="CLEFAIRY",t[t.CLEFABLE=36]="CLEFABLE",t[t.VULPIX=37]="VULPIX",t[t.NINETALES=38]="NINETALES",t[t.JIGGLYPUFF=39]="JIGGLYPUFF",t[t.WIGGLYTUFF=40]="WIGGLYTUFF",t[t.ZUBAT=41]="ZUBAT",t[t.GOLBAT=42]="GOLBAT",t[t.ODDISH=43]="ODDISH",t[t.GLOOM=44]="GLOOM",t[t.VILEPLUME=45]="VILEPLUME",t[t.PARAS=46]="PARAS",t[t.PARASECT=47]="PARASECT",t[t.VENONAT=48]="VENONAT",t[t.VENOMOTH=49]="VENOMOTH",t[t.DIGLETT=50]="DIGLETT",t[t.DUGTRIO=51]="DUGTRIO",t[t.MEOWTH=52]="MEOWTH",t[t.PERSIAN=53]="PERSIAN",t[t.PSYDUCK=54]="PSYDUCK",t[t.GOLDUCK=55]="GOLDUCK",t[t.MANKEY=56]="MANKEY",t[t.PRIMEAPE=57]="PRIMEAPE",t[t.GROWLITHE=58]="GROWLITHE",t[t.ARCANINE=59]="ARCANINE",t[t.POLIWAG=60]="POLIWAG",t[t.POLIWHIRL=61]="POLIWHIRL",t[t.POLIWRATH=62]="POLIWRATH",t[t.ABRA=63]="ABRA",t[t.KADABRA=64]="KADABRA",t[t.ALAKAZAM=65]="ALAKAZAM",t[t.MACHOP=66]="MACHOP",t[t.MACHOKE=67]="MACHOKE",t[t.MACHAMP=68]="MACHAMP",t[t.BELLSPROUT=69]="BELLSPROUT",t[t.WEEPINBELL=70]="WEEPINBELL",t[t.VICTREEBEL=71]="VICTREEBEL",t[t.TENTACOOL=72]="TENTACOOL",t[t.TENTACRUEL=73]="TENTACRUEL",t[t.GEODUDE=74]="GEODUDE",t[t.GRAVELER=75]="GRAVELER",t[t.GOLEM=76]="GOLEM",t[t.PONYTA=77]="PONYTA",t[t.RAPIDASH=78]="RAPIDASH",t[t.SLOWPOKE=79]="SLOWPOKE",t[t.SLOWBRO=80]="SLOWBRO",t[t.MAGNEMITE=81]="MAGNEMITE",t[t.MAGNETON=82]="MAGNETON",t[t.FARFETCHD=83]="FARFETCHD",t[t.DODUO=84]="DODUO",t[t.DODRIO=85]="DODRIO",t[t.SEEL=86]="SEEL",t[t.DEWGONG=87]="DEWGONG",t[t.GRIMER=88]="GRIMER",t[t.MUK=89]="MUK",t[t.SHELLDER=90]="SHELLDER",t[t.CLOYSTER=91]="CLOYSTER",t[t.GASTLY=92]="GASTLY",t[t.HAUNTER=93]="HAUNTER",t[t.GENGAR=94]="GENGAR",t[t.ONIX=95]="ONIX",t[t.DROWZEE=96]="DROWZEE",t[t.HYPNO=97]="HYPNO",t[t.KRABBY=98]="KRABBY",t[t.KINGLER=99]="KINGLER",t[t.VOLTORB=100]="VOLTORB",t[t.ELECTRODE=101]="ELECTRODE",t[t.EXEGGCUTE=102]="EXEGGCUTE",t[t.EXEGGUTOR=103]="EXEGGUTOR",t[t.CUBONE=104]="CUBONE",t[t.MAROWAK=105]="MAROWAK",t[t.HITMONLEE=106]="HITMONLEE",t[t.HITMONCHAN=107]="HITMONCHAN",t[t.LICKITUNG=108]="LICKITUNG",t[t.KOFFING=109]="KOFFING",t[t.WEEZING=110]="WEEZING",t[t.RHYHORN=111]="RHYHORN",t[t.RHYDON=112]="RHYDON",t[t.CHANSEY=113]="CHANSEY",t[t.TANGELA=114]="TANGELA",t[t.KANGASKHAN=115]="KANGASKHAN",t[t.HORSEA=116]="HORSEA",t[t.SEADRA=117]="SEADRA",t[t.GOLDEEN=118]="GOLDEEN",t[t.SEAKING=119]="SEAKING",t[t.STARYU=120]="STARYU",t[t.STARMIE=121]="STARMIE",t[t.MR_MIME=122]="MR_MIME",t[t.SCYTHER=123]="SCYTHER",t[t.JYNX=124]="JYNX",t[t.ELECTABUZZ=125]="ELECTABUZZ",t[t.MAGMAR=126]="MAGMAR",t[t.PINSIR=127]="PINSIR",t[t.TAUROS=128]="TAUROS",t[t.MAGIKARP=129]="MAGIKARP",t[t.GYARADOS=130]="GYARADOS",t[t.LAPRAS=131]="LAPRAS",t[t.DITTO=132]="DITTO",t[t.EEVEE=133]="EEVEE",t[t.VAPOREON=134]="VAPOREON",t[t.JOLTEON=135]="JOLTEON",t[t.FLAREON=136]="FLAREON",t[t.PORYGON=137]="PORYGON",t[t.OMANYTE=138]="OMANYTE",t[t.OMASTAR=139]="OMASTAR",t[t.KABUTO=140]="KABUTO",t[t.KABUTOPS=141]="KABUTOPS",t[t.AERODACTYL=142]="AERODACTYL",t[t.SNORLAX=143]="SNORLAX",t[t.ARTICUNO=144]="ARTICUNO",t[t.ZAPDOS=145]="ZAPDOS",t[t.MOLTRES=146]="MOLTRES",t[t.DRATINI=147]="DRATINI",t[t.DRAGONAIR=148]="DRAGONAIR",t[t.DRAGONITE=149]="DRAGONITE",t[t.MEWTWO=150]="MEWTWO",t[t.MEW=151]="MEW",t[t.CHIKORITA=152]="CHIKORITA",t[t.BAYLEEF=153]="BAYLEEF",t[t.MEGANIUM=154]="MEGANIUM",t[t.CYNDAQUIL=155]="CYNDAQUIL",t[t.QUILAVA=156]="QUILAVA",t[t.TYPHLOSION=157]="TYPHLOSION",t[t.TOTODILE=158]="TOTODILE",t[t.CROCONAW=159]="CROCONAW",t[t.FERALIGATR=160]="FERALIGATR",t[t.SENTRET=161]="SENTRET",t[t.FURRET=162]="FURRET",t[t.HOOTHOOT=163]="HOOTHOOT",t[t.NOCTOWL=164]="NOCTOWL",t[t.LEDYBA=165]="LEDYBA",t[t.LEDIAN=166]="LEDIAN",t[t.SPINARAK=167]="SPINARAK",t[t.ARIADOS=168]="ARIADOS",t[t.CROBAT=169]="CROBAT",t[t.CHINCHOU=170]="CHINCHOU",t[t.LANTURN=171]="LANTURN",t[t.PICHU=172]="PICHU",t[t.CLEFFA=173]="CLEFFA",t[t.IGGLYBUFF=174]="IGGLYBUFF",t[t.TOGEPI=175]="TOGEPI",t[t.TOGETIC=176]="TOGETIC",t[t.NATU=177]="NATU",t[t.XATU=178]="XATU",t[t.MAREEP=179]="MAREEP",t[t.FLAAFFY=180]="FLAAFFY",t[t.AMPHAROS=181]="AMPHAROS",t[t.BELLOSSOM=182]="BELLOSSOM",t[t.MARILL=183]="MARILL",t[t.AZUMARILL=184]="AZUMARILL",t[t.SUDOWOODO=185]="SUDOWOODO",t[t.POLITOED=186]="POLITOED",t[t.HOPPIP=187]="HOPPIP",t[t.SKIPLOOM=188]="SKIPLOOM",t[t.JUMPLUFF=189]="JUMPLUFF",t[t.AIPOM=190]="AIPOM",t[t.SUNKERN=191]="SUNKERN",t[t.SUNFLORA=192]="SUNFLORA",t[t.YANMA=193]="YANMA",t[t.WOOPER=194]="WOOPER",t[t.QUAGSIRE=195]="QUAGSIRE",t[t.ESPEON=196]="ESPEON",t[t.UMBREON=197]="UMBREON",t[t.MURKROW=198]="MURKROW",t[t.SLOWKING=199]="SLOWKING",t[t.MISDREAVUS=200]="MISDREAVUS",t[t.UNOWN=201]="UNOWN",t[t.WOBBUFFET=202]="WOBBUFFET",t[t.GIRAFARIG=203]="GIRAFARIG",t[t.PINECO=204]="PINECO",t[t.FORRETRESS=205]="FORRETRESS",t[t.DUNSPARCE=206]="DUNSPARCE",t[t.GLIGAR=207]="GLIGAR",t[t.STEELIX=208]="STEELIX",t[t.SNUBBULL=209]="SNUBBULL",t[t.GRANBULL=210]="GRANBULL",t[t.QWILFISH=211]="QWILFISH",t[t.SCIZOR=212]="SCIZOR",t[t.SHUCKLE=213]="SHUCKLE",t[t.HERACROSS=214]="HERACROSS",t[t.SNEASEL=215]="SNEASEL",t[t.TEDDIURSA=216]="TEDDIURSA",t[t.URSARING=217]="URSARING",t[t.SLUGMA=218]="SLUGMA",t[t.MAGCARGO=219]="MAGCARGO",t[t.SWINUB=220]="SWINUB",t[t.PILOSWINE=221]="PILOSWINE",t[t.CORSOLA=222]="CORSOLA",t[t.REMORAID=223]="REMORAID",t[t.OCTILLERY=224]="OCTILLERY",t[t.DELIBIRD=225]="DELIBIRD",t[t.MANTINE=226]="MANTINE",t[t.SKARMORY=227]="SKARMORY",t[t.HOUNDOUR=228]="HOUNDOUR",t[t.HOUNDOOM=229]="HOUNDOOM",t[t.KINGDRA=230]="KINGDRA",t[t.PHANPY=231]="PHANPY",t[t.DONPHAN=232]="DONPHAN",t[t.PORYGON2=233]="PORYGON2",t[t.STANTLER=234]="STANTLER",t[t.SMEARGLE=235]="SMEARGLE",t[t.TYROGUE=236]="TYROGUE",t[t.HITMONTOP=237]="HITMONTOP",t[t.SMOOCHUM=238]="SMOOCHUM",t[t.ELEKID=239]="ELEKID",t[t.MAGBY=240]="MAGBY",t[t.MILTANK=241]="MILTANK",t[t.BLISSEY=242]="BLISSEY",t[t.RAIKOU=243]="RAIKOU",t[t.ENTEI=244]="ENTEI",t[t.SUICUNE=245]="SUICUNE",t[t.LARVITAR=246]="LARVITAR",t[t.PUPITAR=247]="PUPITAR",t[t.TYRANITAR=248]="TYRANITAR",t[t.LUGIA=249]="LUGIA",t[t.HO_OH=250]="HO_OH",t[t.CELEBI=251]="CELEBI",t[t.TREECKO=252]="TREECKO",t[t.GROVYLE=253]="GROVYLE",t[t.SCEPTILE=254]="SCEPTILE",t[t.TORCHIC=255]="TORCHIC",t[t.COMBUSKEN=256]="COMBUSKEN",t[t.BLAZIKEN=257]="BLAZIKEN",t[t.MUDKIP=258]="MUDKIP",t[t.MARSHTOMP=259]="MARSHTOMP",t[t.SWAMPERT=260]="SWAMPERT",t[t.POOCHYENA=261]="POOCHYENA",t[t.MIGHTYENA=262]="MIGHTYENA",t[t.ZIGZAGOON=263]="ZIGZAGOON",t[t.LINOONE=264]="LINOONE",t[t.WURMPLE=265]="WURMPLE",t[t.SILCOON=266]="SILCOON",t[t.BEAUTIFLY=267]="BEAUTIFLY",t[t.CASCOON=268]="CASCOON",t[t.DUSTOX=269]="DUSTOX",t[t.LOTAD=270]="LOTAD",t[t.LOMBRE=271]="LOMBRE",t[t.LUDICOLO=272]="LUDICOLO",t[t.SEEDOT=273]="SEEDOT",t[t.NUZLEAF=274]="NUZLEAF",t[t.SHIFTRY=275]="SHIFTRY",t[t.TAILLOW=276]="TAILLOW",t[t.SWELLOW=277]="SWELLOW",t[t.WINGULL=278]="WINGULL",t[t.PELIPPER=279]="PELIPPER",t[t.RALTS=280]="RALTS",t[t.KIRLIA=281]="KIRLIA",t[t.GARDEVOIR=282]="GARDEVOIR",t[t.SURSKIT=283]="SURSKIT",t[t.MASQUERAIN=284]="MASQUERAIN",t[t.SHROOMISH=285]="SHROOMISH",t[t.BRELOOM=286]="BRELOOM",t[t.SLAKOTH=287]="SLAKOTH",t[t.VIGOROTH=288]="VIGOROTH",t[t.SLAKING=289]="SLAKING",t[t.NINCADA=290]="NINCADA",t[t.NINJASK=291]="NINJASK",t[t.SHEDINJA=292]="SHEDINJA",t[t.WHISMUR=293]="WHISMUR",t[t.LOUDRED=294]="LOUDRED",t[t.EXPLOUD=295]="EXPLOUD",t[t.MAKUHITA=296]="MAKUHITA",t[t.HARIYAMA=297]="HARIYAMA",t[t.AZURILL=298]="AZURILL",t[t.NOSEPASS=299]="NOSEPASS",t[t.SKITTY=300]="SKITTY",t[t.DELCATTY=301]="DELCATTY",t[t.SABLEYE=302]="SABLEYE",t[t.MAWILE=303]="MAWILE",t[t.ARON=304]="ARON",t[t.LAIRON=305]="LAIRON",t[t.AGGRON=306]="AGGRON",t[t.MEDITITE=307]="MEDITITE",t[t.MEDICHAM=308]="MEDICHAM",t[t.ELECTRIKE=309]="ELECTRIKE",t[t.MANECTRIC=310]="MANECTRIC",t[t.PLUSLE=311]="PLUSLE",t[t.MINUN=312]="MINUN",t[t.VOLBEAT=313]="VOLBEAT",t[t.ILLUMISE=314]="ILLUMISE",t[t.ROSELIA=315]="ROSELIA",t[t.GULPIN=316]="GULPIN",t[t.SWALOT=317]="SWALOT",t[t.CARVANHA=318]="CARVANHA",t[t.SHARPEDO=319]="SHARPEDO",t[t.WAILMER=320]="WAILMER",t[t.WAILORD=321]="WAILORD",t[t.NUMEL=322]="NUMEL",t[t.CAMERUPT=323]="CAMERUPT",t[t.TORKOAL=324]="TORKOAL",t[t.SPOINK=325]="SPOINK",t[t.GRUMPIG=326]="GRUMPIG",t[t.SPINDA=327]="SPINDA",t[t.TRAPINCH=328]="TRAPINCH",t[t.VIBRAVA=329]="VIBRAVA",t[t.FLYGON=330]="FLYGON",t[t.CACNEA=331]="CACNEA",t[t.CACTURNE=332]="CACTURNE",t[t.SWABLU=333]="SWABLU",t[t.ALTARIA=334]="ALTARIA",t[t.ZANGOOSE=335]="ZANGOOSE",t[t.SEVIPER=336]="SEVIPER",t[t.LUNATONE=337]="LUNATONE",t[t.SOLROCK=338]="SOLROCK",t[t.BARBOACH=339]="BARBOACH",t[t.WHISCASH=340]="WHISCASH",t[t.CORPHISH=341]="CORPHISH",t[t.CRAWDAUNT=342]="CRAWDAUNT",t[t.BALTOY=343]="BALTOY",t[t.CLAYDOL=344]="CLAYDOL",t[t.LILEEP=345]="LILEEP",t[t.CRADILY=346]="CRADILY",t[t.ANORITH=347]="ANORITH",t[t.ARMALDO=348]="ARMALDO",t[t.FEEBAS=349]="FEEBAS",t[t.MILOTIC=350]="MILOTIC",t[t.CASTFORM=351]="CASTFORM",t[t.KECLEON=352]="KECLEON",t[t.SHUPPET=353]="SHUPPET",t[t.BANETTE=354]="BANETTE",t[t.DUSKULL=355]="DUSKULL",t[t.DUSCLOPS=356]="DUSCLOPS",t[t.TROPIUS=357]="TROPIUS",t[t.CHIMECHO=358]="CHIMECHO",t[t.ABSOL=359]="ABSOL",t[t.WYNAUT=360]="WYNAUT",t[t.SNORUNT=361]="SNORUNT",t[t.GLALIE=362]="GLALIE",t[t.SPHEAL=363]="SPHEAL",t[t.SEALEO=364]="SEALEO",t[t.WALREIN=365]="WALREIN",t[t.CLAMPERL=366]="CLAMPERL",t[t.HUNTAIL=367]="HUNTAIL",t[t.GOREBYSS=368]="GOREBYSS",t[t.RELICANTH=369]="RELICANTH",t[t.LUVDISC=370]="LUVDISC",t[t.BAGON=371]="BAGON",t[t.SHELGON=372]="SHELGON",t[t.SALAMENCE=373]="SALAMENCE",t[t.BELDUM=374]="BELDUM",t[t.METANG=375]="METANG",t[t.METAGROSS=376]="METAGROSS",t[t.REGIROCK=377]="REGIROCK",t[t.REGICE=378]="REGICE",t[t.REGISTEEL=379]="REGISTEEL",t[t.LATIAS=380]="LATIAS",t[t.LATIOS=381]="LATIOS",t[t.KYOGRE=382]="KYOGRE",t[t.GROUDON=383]="GROUDON",t[t.RAYQUAZA=384]="RAYQUAZA",t[t.JIRACHI=385]="JIRACHI",t[t.DEOXYS=386]="DEOXYS",t[t.TURTWIG=387]="TURTWIG",t[t.GROTLE=388]="GROTLE",t[t.TORTERRA=389]="TORTERRA",t[t.CHIMCHAR=390]="CHIMCHAR",t[t.MONFERNO=391]="MONFERNO",t[t.INFERNAPE=392]="INFERNAPE",t[t.PIPLUP=393]="PIPLUP",t[t.PRINPLUP=394]="PRINPLUP",t[t.EMPOLEON=395]="EMPOLEON",t[t.STARLY=396]="STARLY",t[t.STARAVIA=397]="STARAVIA",t[t.STARAPTOR=398]="STARAPTOR",t[t.BIDOOF=399]="BIDOOF",t[t.BIBAREL=400]="BIBAREL",t[t.KRICKETOT=401]="KRICKETOT",t[t.KRICKETUNE=402]="KRICKETUNE",t[t.SHINX=403]="SHINX",t[t.LUXIO=404]="LUXIO",t[t.LUXRAY=405]="LUXRAY",t[t.BUDEW=406]="BUDEW",t[t.ROSERADE=407]="ROSERADE",t[t.CRANIDOS=408]="CRANIDOS",t[t.RAMPARDOS=409]="RAMPARDOS",t[t.SHIELDON=410]="SHIELDON",t[t.BASTIODON=411]="BASTIODON",t[t.BURMY=412]="BURMY",t[t.WORMADAM=413]="WORMADAM",t[t.MOTHIM=414]="MOTHIM",t[t.COMBEE=415]="COMBEE",t[t.VESPIQUEN=416]="VESPIQUEN",t[t.PACHIRISU=417]="PACHIRISU",t[t.BUIZEL=418]="BUIZEL",t[t.FLOATZEL=419]="FLOATZEL",t[t.CHERUBI=420]="CHERUBI",t[t.CHERRIM=421]="CHERRIM",t[t.SHELLOS=422]="SHELLOS",t[t.GASTRODON=423]="GASTRODON",t[t.AMBIPOM=424]="AMBIPOM",t[t.DRIFLOON=425]="DRIFLOON",t[t.DRIFBLIM=426]="DRIFBLIM",t[t.BUNEARY=427]="BUNEARY",t[t.LOPUNNY=428]="LOPUNNY",t[t.MISMAGIUS=429]="MISMAGIUS",t[t.HONCHKROW=430]="HONCHKROW",t[t.GLAMEOW=431]="GLAMEOW",t[t.PURUGLY=432]="PURUGLY",t[t.CHINGLING=433]="CHINGLING",t[t.STUNKY=434]="STUNKY",t[t.SKUNTANK=435]="SKUNTANK",t[t.BRONZOR=436]="BRONZOR",t[t.BRONZONG=437]="BRONZONG",t[t.BONSLY=438]="BONSLY",t[t.MIME_JR=439]="MIME_JR",t[t.HAPPINY=440]="HAPPINY",t[t.CHATOT=441]="CHATOT",t[t.SPIRITOMB=442]="SPIRITOMB",t[t.GIBLE=443]="GIBLE",t[t.GABITE=444]="GABITE",t[t.GARCHOMP=445]="GARCHOMP",t[t.MUNCHLAX=446]="MUNCHLAX",t[t.RIOLU=447]="RIOLU",t[t.LUCARIO=448]="LUCARIO",t[t.HIPPOPOTAS=449]="HIPPOPOTAS",t[t.HIPPOWDON=450]="HIPPOWDON",t[t.SKORUPI=451]="SKORUPI",t[t.DRAPION=452]="DRAPION",t[t.CROAGUNK=453]="CROAGUNK",t[t.TOXICROAK=454]="TOXICROAK",t[t.CARNIVINE=455]="CARNIVINE",t[t.FINNEON=456]="FINNEON",t[t.LUMINEON=457]="LUMINEON",t[t.MANTYKE=458]="MANTYKE",t[t.SNOVER=459]="SNOVER",t[t.ABOMASNOW=460]="ABOMASNOW",t[t.WEAVILE=461]="WEAVILE",t[t.MAGNEZONE=462]="MAGNEZONE",t[t.LICKILICKY=463]="LICKILICKY",t[t.RHYPERIOR=464]="RHYPERIOR",t[t.TANGROWTH=465]="TANGROWTH",t[t.ELECTIVIRE=466]="ELECTIVIRE",t[t.MAGMORTAR=467]="MAGMORTAR",t[t.TOGEKISS=468]="TOGEKISS",t[t.YANMEGA=469]="YANMEGA",t[t.LEAFEON=470]="LEAFEON",t[t.GLACEON=471]="GLACEON",t[t.GLISCOR=472]="GLISCOR",t[t.MAMOSWINE=473]="MAMOSWINE",t[t.PORYGON_Z=474]="PORYGON_Z",t[t.GALLADE=475]="GALLADE",t[t.PROBOPASS=476]="PROBOPASS",t[t.DUSKNOIR=477]="DUSKNOIR",t[t.FROSLASS=478]="FROSLASS",t[t.ROTOM=479]="ROTOM",t[t.UXIE=480]="UXIE",t[t.MESPRIT=481]="MESPRIT",t[t.AZELF=482]="AZELF",t[t.DIALGA=483]="DIALGA",t[t.PALKIA=484]="PALKIA",t[t.HEATRAN=485]="HEATRAN",t[t.REGIGIGAS=486]="REGIGIGAS",t[t.GIRATINA=487]="GIRATINA",t[t.CRESSELIA=488]="CRESSELIA",t[t.PHIONE=489]="PHIONE",t[t.MANAPHY=490]="MANAPHY",t[t.DARKRAI=491]="DARKRAI",t[t.SHAYMIN=492]="SHAYMIN",t[t.ARCEUS=493]="ARCEUS",t[t.VICTINI=494]="VICTINI",t[t.SNIVY=495]="SNIVY",t[t.SERVINE=496]="SERVINE",t[t.SERPERIOR=497]="SERPERIOR",t[t.TEPIG=498]="TEPIG",t[t.PIGNITE=499]="PIGNITE",t[t.EMBOAR=500]="EMBOAR",t[t.OSHAWOTT=501]="OSHAWOTT",t[t.DEWOTT=502]="DEWOTT",t[t.SAMUROTT=503]="SAMUROTT",t[t.PATRAT=504]="PATRAT",t[t.WATCHOG=505]="WATCHOG",t[t.LILLIPUP=506]="LILLIPUP",t[t.HERDIER=507]="HERDIER",t[t.STOUTLAND=508]="STOUTLAND",t[t.PURRLOIN=509]="PURRLOIN",t[t.LIEPARD=510]="LIEPARD",t[t.PANSAGE=511]="PANSAGE",t[t.SIMISAGE=512]="SIMISAGE",t[t.PANSEAR=513]="PANSEAR",t[t.SIMISEAR=514]="SIMISEAR",t[t.PANPOUR=515]="PANPOUR",t[t.SIMIPOUR=516]="SIMIPOUR",t[t.MUNNA=517]="MUNNA",t[t.MUSHARNA=518]="MUSHARNA",t[t.PIDOVE=519]="PIDOVE",t[t.TRANQUILL=520]="TRANQUILL",t[t.UNFEZANT=521]="UNFEZANT",t[t.BLITZLE=522]="BLITZLE",t[t.ZEBSTRIKA=523]="ZEBSTRIKA",t[t.ROGGENROLA=524]="ROGGENROLA",t[t.BOLDORE=525]="BOLDORE",t[t.GIGALITH=526]="GIGALITH",t[t.WOOBAT=527]="WOOBAT",t[t.SWOOBAT=528]="SWOOBAT",t[t.DRILBUR=529]="DRILBUR",t[t.EXCADRILL=530]="EXCADRILL",t[t.AUDINO=531]="AUDINO",t[t.TIMBURR=532]="TIMBURR",t[t.GURDURR=533]="GURDURR",t[t.CONKELDURR=534]="CONKELDURR",t[t.TYMPOLE=535]="TYMPOLE",t[t.PALPITOAD=536]="PALPITOAD",t[t.SEISMITOAD=537]="SEISMITOAD",t[t.THROH=538]="THROH",t[t.SAWK=539]="SAWK",t[t.SEWADDLE=540]="SEWADDLE",t[t.SWADLOON=541]="SWADLOON",t[t.LEAVANNY=542]="LEAVANNY",t[t.VENIPEDE=543]="VENIPEDE",t[t.WHIRLIPEDE=544]="WHIRLIPEDE",t[t.SCOLIPEDE=545]="SCOLIPEDE",t[t.COTTONEE=546]="COTTONEE",t[t.WHIMSICOTT=547]="WHIMSICOTT",t[t.PETILIL=548]="PETILIL",t[t.LILLIGANT=549]="LILLIGANT",t[t.BASCULIN=550]="BASCULIN",t[t.SANDILE=551]="SANDILE",t[t.KROKOROK=552]="KROKOROK",t[t.KROOKODILE=553]="KROOKODILE",t[t.DARUMAKA=554]="DARUMAKA",t[t.DARMANITAN=555]="DARMANITAN",t[t.MARACTUS=556]="MARACTUS",t[t.DWEBBLE=557]="DWEBBLE",t[t.CRUSTLE=558]="CRUSTLE",t[t.SCRAGGY=559]="SCRAGGY",t[t.SCRAFTY=560]="SCRAFTY",t[t.SIGILYPH=561]="SIGILYPH",t[t.YAMASK=562]="YAMASK",t[t.COFAGRIGUS=563]="COFAGRIGUS",t[t.TIRTOUGA=564]="TIRTOUGA",t[t.CARRACOSTA=565]="CARRACOSTA",t[t.ARCHEN=566]="ARCHEN",t[t.ARCHEOPS=567]="ARCHEOPS",t[t.TRUBBISH=568]="TRUBBISH",t[t.GARBODOR=569]="GARBODOR",t[t.ZORUA=570]="ZORUA",t[t.ZOROARK=571]="ZOROARK",t[t.MINCCINO=572]="MINCCINO",t[t.CINCCINO=573]="CINCCINO",t[t.GOTHITA=574]="GOTHITA",t[t.GOTHORITA=575]="GOTHORITA",t[t.GOTHITELLE=576]="GOTHITELLE",t[t.SOLOSIS=577]="SOLOSIS",t[t.DUOSION=578]="DUOSION",t[t.REUNICLUS=579]="REUNICLUS",t[t.DUCKLETT=580]="DUCKLETT",t[t.SWANNA=581]="SWANNA",t[t.VANILLITE=582]="VANILLITE",t[t.VANILLISH=583]="VANILLISH",t[t.VANILLUXE=584]="VANILLUXE",t[t.DEERLING=585]="DEERLING",t[t.SAWSBUCK=586]="SAWSBUCK",t[t.EMOLGA=587]="EMOLGA",t[t.KARRABLAST=588]="KARRABLAST",t[t.ESCAVALIER=589]="ESCAVALIER",t[t.FOONGUS=590]="FOONGUS",t[t.AMOONGUSS=591]="AMOONGUSS",t[t.FRILLISH=592]="FRILLISH",t[t.JELLICENT=593]="JELLICENT",t[t.ALOMOMOLA=594]="ALOMOMOLA",t[t.JOLTIK=595]="JOLTIK",t[t.GALVANTULA=596]="GALVANTULA",t[t.FERROSEED=597]="FERROSEED",t[t.FERROTHORN=598]="FERROTHORN",t[t.KLINK=599]="KLINK",t[t.KLANG=600]="KLANG",t[t.KLINKLANG=601]="KLINKLANG",t[t.TYNAMO=602]="TYNAMO",t[t.EELEKTRIK=603]="EELEKTRIK",t[t.EELEKTROSS=604]="EELEKTROSS",t[t.ELGYEM=605]="ELGYEM",t[t.BEHEEYEM=606]="BEHEEYEM",t[t.LITWICK=607]="LITWICK",t[t.LAMPENT=608]="LAMPENT",t[t.CHANDELURE=609]="CHANDELURE",t[t.AXEW=610]="AXEW",t[t.FRAXURE=611]="FRAXURE",t[t.HAXORUS=612]="HAXORUS",t[t.CUBCHOO=613]="CUBCHOO",t[t.BEARTIC=614]="BEARTIC",t[t.CRYOGONAL=615]="CRYOGONAL",t[t.SHELMET=616]="SHELMET",t[t.ACCELGOR=617]="ACCELGOR",t[t.STUNFISK=618]="STUNFISK",t[t.MIENFOO=619]="MIENFOO",t[t.MIENSHAO=620]="MIENSHAO",t[t.DRUDDIGON=621]="DRUDDIGON",t[t.GOLETT=622]="GOLETT",t[t.GOLURK=623]="GOLURK",t[t.PAWNIARD=624]="PAWNIARD",t[t.BISHARP=625]="BISHARP",t[t.BOUFFALANT=626]="BOUFFALANT",t[t.RUFFLET=627]="RUFFLET",t[t.BRAVIARY=628]="BRAVIARY",t[t.VULLABY=629]="VULLABY",t[t.MANDIBUZZ=630]="MANDIBUZZ",t[t.HEATMOR=631]="HEATMOR",t[t.DURANT=632]="DURANT",t[t.DEINO=633]="DEINO",t[t.ZWEILOUS=634]="ZWEILOUS",t[t.HYDREIGON=635]="HYDREIGON",t[t.LARVESTA=636]="LARVESTA",t[t.VOLCARONA=637]="VOLCARONA",t[t.COBALION=638]="COBALION",t[t.TERRAKION=639]="TERRAKION",t[t.VIRIZION=640]="VIRIZION",t[t.TORNADUS=641]="TORNADUS",t[t.THUNDURUS=642]="THUNDURUS",t[t.RESHIRAM=643]="RESHIRAM",t[t.ZEKROM=644]="ZEKROM",t[t.LANDORUS=645]="LANDORUS",t[t.KYUREM=646]="KYUREM",t[t.KELDEO=647]="KELDEO",t[t.MELOETTA=648]="MELOETTA",t[t.GENESECT=649]="GENESECT",t[t.CHESPIN=650]="CHESPIN",t[t.QUILLADIN=651]="QUILLADIN",t[t.CHESNAUGHT=652]="CHESNAUGHT",t[t.FENNEKIN=653]="FENNEKIN",t[t.BRAIXEN=654]="BRAIXEN",t[t.DELPHOX=655]="DELPHOX",t[t.FROAKIE=656]="FROAKIE",t[t.FROGADIER=657]="FROGADIER",t[t.GRENINJA=658]="GRENINJA",t[t.BUNNELBY=659]="BUNNELBY",t[t.DIGGERSBY=660]="DIGGERSBY",t[t.FLETCHLING=661]="FLETCHLING",t[t.FLETCHINDER=662]="FLETCHINDER",t[t.TALONFLAME=663]="TALONFLAME",t[t.SCATTERBUG=664]="SCATTERBUG",t[t.SPEWPA=665]="SPEWPA",t[t.VIVILLON=666]="VIVILLON",t[t.LITLEO=667]="LITLEO",t[t.PYROAR=668]="PYROAR",t[t.FLABEBE=669]="FLABEBE",t[t.FLOETTE=670]="FLOETTE",t[t.FLORGES=671]="FLORGES",t[t.SKIDDO=672]="SKIDDO",t[t.GOGOAT=673]="GOGOAT",t[t.PANCHAM=674]="PANCHAM",t[t.PANGORO=675]="PANGORO",t[t.FURFROU=676]="FURFROU",t[t.ESPURR=677]="ESPURR",t[t.MEOWSTIC=678]="MEOWSTIC",t[t.HONEDGE=679]="HONEDGE",t[t.DOUBLADE=680]="DOUBLADE",t[t.AEGISLASH=681]="AEGISLASH",t[t.SPRITZEE=682]="SPRITZEE",t[t.AROMATISSE=683]="AROMATISSE",t[t.SWIRLIX=684]="SWIRLIX",t[t.SLURPUFF=685]="SLURPUFF",t[t.INKAY=686]="INKAY",t[t.MALAMAR=687]="MALAMAR",t[t.BINACLE=688]="BINACLE",t[t.BARBARACLE=689]="BARBARACLE",t[t.SKRELP=690]="SKRELP",t[t.DRAGALGE=691]="DRAGALGE",t[t.CLAUNCHER=692]="CLAUNCHER",t[t.CLAWITZER=693]="CLAWITZER",t[t.HELIOPTILE=694]="HELIOPTILE",t[t.HELIOLISK=695]="HELIOLISK",t[t.TYRUNT=696]="TYRUNT",t[t.TYRANTRUM=697]="TYRANTRUM",t[t.AMAURA=698]="AMAURA",t[t.AURORUS=699]="AURORUS",t[t.SYLVEON=700]="SYLVEON",t[t.HAWLUCHA=701]="HAWLUCHA",t[t.DEDENNE=702]="DEDENNE",t[t.CARBINK=703]="CARBINK",t[t.GOOMY=704]="GOOMY",t[t.SLIGGOO=705]="SLIGGOO",t[t.GOODRA=706]="GOODRA",t[t.KLEFKI=707]="KLEFKI",t[t.PHANTUMP=708]="PHANTUMP",t[t.TREVENANT=709]="TREVENANT",t[t.PUMPKABOO=710]="PUMPKABOO",t[t.GOURGEIST=711]="GOURGEIST",t[t.BERGMITE=712]="BERGMITE",t[t.AVALUGG=713]="AVALUGG",t[t.NOIBAT=714]="NOIBAT",t[t.NOIVERN=715]="NOIVERN",t[t.XERNEAS=716]="XERNEAS",t[t.YVELTAL=717]="YVELTAL",t[t.ZYGARDE=718]="ZYGARDE",t[t.DIANCIE=719]="DIANCIE",t[t.HOOPA=720]="HOOPA",t[t.VOLCANION=721]="VOLCANION",t[t.ROWLET=722]="ROWLET",t[t.DARTRIX=723]="DARTRIX",t[t.DECIDUEYE=724]="DECIDUEYE",t[t.LITTEN=725]="LITTEN",t[t.TORRACAT=726]="TORRACAT",t[t.INCINEROAR=727]="INCINEROAR",t[t.POPPLIO=728]="POPPLIO",t[t.BRIONNE=729]="BRIONNE",t[t.PRIMARINA=730]="PRIMARINA",t[t.PIKIPEK=731]="PIKIPEK",t[t.TRUMBEAK=732]="TRUMBEAK",t[t.TOUCANNON=733]="TOUCANNON",t[t.YUNGOOS=734]="YUNGOOS",t[t.GUMSHOOS=735]="GUMSHOOS",t[t.GRUBBIN=736]="GRUBBIN",t[t.CHARJABUG=737]="CHARJABUG",t[t.VIKAVOLT=738]="VIKAVOLT",t[t.CRABRAWLER=739]="CRABRAWLER",t[t.CRABOMINABLE=740]="CRABOMINABLE",t[t.ORICORIO=741]="ORICORIO",t[t.CUTIEFLY=742]="CUTIEFLY",t[t.RIBOMBEE=743]="RIBOMBEE",t[t.ROCKRUFF=744]="ROCKRUFF",t[t.LYCANROC=745]="LYCANROC",t[t.WISHIWASHI=746]="WISHIWASHI",t[t.MAREANIE=747]="MAREANIE",t[t.TOXAPEX=748]="TOXAPEX",t[t.MUDBRAY=749]="MUDBRAY",t[t.MUDSDALE=750]="MUDSDALE",t[t.DEWPIDER=751]="DEWPIDER",t[t.ARAQUANID=752]="ARAQUANID",t[t.FOMANTIS=753]="FOMANTIS",t[t.LURANTIS=754]="LURANTIS",t[t.MORELULL=755]="MORELULL",t[t.SHIINOTIC=756]="SHIINOTIC",t[t.SALANDIT=757]="SALANDIT",t[t.SALAZZLE=758]="SALAZZLE",t[t.STUFFUL=759]="STUFFUL",t[t.BEWEAR=760]="BEWEAR",t[t.BOUNSWEET=761]="BOUNSWEET",t[t.STEENEE=762]="STEENEE",t[t.TSAREENA=763]="TSAREENA",t[t.COMFEY=764]="COMFEY",t[t.ORANGURU=765]="ORANGURU",t[t.PASSIMIAN=766]="PASSIMIAN",t[t.WIMPOD=767]="WIMPOD",t[t.GOLISOPOD=768]="GOLISOPOD",t[t.SANDYGAST=769]="SANDYGAST",t[t.PALOSSAND=770]="PALOSSAND",t[t.PYUKUMUKU=771]="PYUKUMUKU",t[t.TYPE_NULL=772]="TYPE_NULL",t[t.SILVALLY=773]="SILVALLY",t[t.MINIOR=774]="MINIOR",t[t.KOMALA=775]="KOMALA",t[t.TURTONATOR=776]="TURTONATOR",t[t.TOGEDEMARU=777]="TOGEDEMARU",t[t.MIMIKYU=778]="MIMIKYU",t[t.BRUXISH=779]="BRUXISH",t[t.DRAMPA=780]="DRAMPA",t[t.DHELMISE=781]="DHELMISE",t[t.JANGMO_O=782]="JANGMO_O",t[t.HAKAMO_O=783]="HAKAMO_O",t[t.KOMMO_O=784]="KOMMO_O",t[t.TAPU_KOKO=785]="TAPU_KOKO",t[t.TAPU_LELE=786]="TAPU_LELE",t[t.TAPU_BULU=787]="TAPU_BULU",t[t.TAPU_FINI=788]="TAPU_FINI",t[t.COSMOG=789]="COSMOG",t[t.COSMOEM=790]="COSMOEM",t[t.SOLGALEO=791]="SOLGALEO",t[t.LUNALA=792]="LUNALA",t[t.NIHILEGO=793]="NIHILEGO",t[t.BUZZWOLE=794]="BUZZWOLE",t[t.PHEROMOSA=795]="PHEROMOSA",t[t.XURKITREE=796]="XURKITREE",t[t.CELESTEELA=797]="CELESTEELA",t[t.KARTANA=798]="KARTANA",t[t.GUZZLORD=799]="GUZZLORD",t[t.NECROZMA=800]="NECROZMA",t[t.MAGEARNA=801]="MAGEARNA",t[t.MARSHADOW=802]="MARSHADOW",t[t.POIPOLE=803]="POIPOLE",t[t.NAGANADEL=804]="NAGANADEL",t[t.STAKATAKA=805]="STAKATAKA",t[t.BLACEPHALON=806]="BLACEPHALON",t[t.ZERAORA=807]="ZERAORA",t[t.MELTAN=808]="MELTAN",t[t.MELMETAL=809]="MELMETAL",t[t.GROOKEY=810]="GROOKEY",t[t.THWACKEY=811]="THWACKEY",t[t.RILLABOOM=812]="RILLABOOM",t[t.SCORBUNNY=813]="SCORBUNNY",t[t.RABOOT=814]="RABOOT",t[t.CINDERACE=815]="CINDERACE",t[t.SOBBLE=816]="SOBBLE",t[t.DRIZZILE=817]="DRIZZILE",t[t.INTELEON=818]="INTELEON",t[t.SKWOVET=819]="SKWOVET",t[t.GREEDENT=820]="GREEDENT",t[t.ROOKIDEE=821]="ROOKIDEE",t[t.CORVISQUIRE=822]="CORVISQUIRE",t[t.CORVIKNIGHT=823]="CORVIKNIGHT",t[t.BLIPBUG=824]="BLIPBUG",t[t.DOTTLER=825]="DOTTLER",t[t.ORBEETLE=826]="ORBEETLE",t[t.NICKIT=827]="NICKIT",t[t.THIEVUL=828]="THIEVUL",t[t.GOSSIFLEUR=829]="GOSSIFLEUR",t[t.ELDEGOSS=830]="ELDEGOSS",t[t.WOOLOO=831]="WOOLOO",t[t.DUBWOOL=832]="DUBWOOL",t[t.CHEWTLE=833]="CHEWTLE",t[t.DREDNAW=834]="DREDNAW",t[t.YAMPER=835]="YAMPER",t[t.BOLTUND=836]="BOLTUND",t[t.ROLYCOLY=837]="ROLYCOLY",t[t.CARKOL=838]="CARKOL",t[t.COALOSSAL=839]="COALOSSAL",t[t.APPLIN=840]="APPLIN",t[t.FLAPPLE=841]="FLAPPLE",t[t.APPLETUN=842]="APPLETUN",t[t.SILICOBRA=843]="SILICOBRA",t[t.SANDACONDA=844]="SANDACONDA",t[t.CRAMORANT=845]="CRAMORANT",t[t.ARROKUDA=846]="ARROKUDA",t[t.BARRASKEWDA=847]="BARRASKEWDA",t[t.TOXEL=848]="TOXEL",t[t.TOXTRICITY=849]="TOXTRICITY",t[t.SIZZLIPEDE=850]="SIZZLIPEDE",t[t.CENTISKORCH=851]="CENTISKORCH",t[t.CLOBBOPUS=852]="CLOBBOPUS",t[t.GRAPPLOCT=853]="GRAPPLOCT",t[t.SINISTEA=854]="SINISTEA",t[t.POLTEAGEIST=855]="POLTEAGEIST",t[t.HATENNA=856]="HATENNA",t[t.HATTREM=857]="HATTREM",t[t.HATTERENE=858]="HATTERENE",t[t.IMPIDIMP=859]="IMPIDIMP",t[t.MORGREM=860]="MORGREM",t[t.GRIMMSNARL=861]="GRIMMSNARL",t[t.OBSTAGOON=862]="OBSTAGOON",t[t.PERRSERKER=863]="PERRSERKER",t[t.CURSOLA=864]="CURSOLA",t[t.SIRFETCHD=865]="SIRFETCHD",t[t.MR_RIME=866]="MR_RIME",t[t.RUNERIGUS=867]="RUNERIGUS",t[t.MILCERY=868]="MILCERY",t[t.ALCREMIE=869]="ALCREMIE",t[t.FALINKS=870]="FALINKS",t[t.PINCURCHIN=871]="PINCURCHIN",t[t.SNOM=872]="SNOM",t[t.FROSMOTH=873]="FROSMOTH",t[t.STONJOURNER=874]="STONJOURNER",t[t.EISCUE=875]="EISCUE",t[t.INDEEDEE=876]="INDEEDEE",t[t.MORPEKO=877]="MORPEKO",t[t.CUFANT=878]="CUFANT",t[t.COPPERAJAH=879]="COPPERAJAH",t[t.DRACOZOLT=880]="DRACOZOLT",t[t.ARCTOZOLT=881]="ARCTOZOLT",t[t.DRACOVISH=882]="DRACOVISH",t[t.ARCTOVISH=883]="ARCTOVISH",t[t.DURALUDON=884]="DURALUDON",t[t.DREEPY=885]="DREEPY",t[t.DRAKLOAK=886]="DRAKLOAK",t[t.DRAGAPULT=887]="DRAGAPULT",t[t.ZACIAN=888]="ZACIAN",t[t.ZAMAZENTA=889]="ZAMAZENTA",t[t.ETERNATUS=890]="ETERNATUS",t[t.KUBFU=891]="KUBFU",t[t.URSHIFU=892]="URSHIFU",t[t.ZARUDE=893]="ZARUDE",t[t.REGIELEKI=894]="REGIELEKI",t[t.REGIDRAGO=895]="REGIDRAGO",t[t.GLASTRIER=896]="GLASTRIER",t[t.SPECTRIER=897]="SPECTRIER",t[t.CALYREX=898]="CALYREX",t[t.WYRDEER=899]="WYRDEER",t[t.KLEAVOR=900]="KLEAVOR",t[t.URSALUNA=901]="URSALUNA",t[t.BASCULEGION=902]="BASCULEGION",t[t.SNEASLER=903]="SNEASLER",t[t.OVERQWIL=904]="OVERQWIL",t[t.ENAMORUS=905]="ENAMORUS",t[t.SPRIGATITO=906]="SPRIGATITO",t[t.FLORAGATO=907]="FLORAGATO",t[t.MEOWSCARADA=908]="MEOWSCARADA",t[t.FUECOCO=909]="FUECOCO",t[t.CROCALOR=910]="CROCALOR",t[t.SKELEDIRGE=911]="SKELEDIRGE",t[t.QUAXLY=912]="QUAXLY",t[t.QUAXWELL=913]="QUAXWELL",t[t.QUAQUAVAL=914]="QUAQUAVAL",t[t.LECHONK=915]="LECHONK",t[t.OINKOLOGNE=916]="OINKOLOGNE",t[t.TAROUNTULA=917]="TAROUNTULA",t[t.SPIDOPS=918]="SPIDOPS",t[t.NYMBLE=919]="NYMBLE",t[t.LOKIX=920]="LOKIX",t[t.PAWMI=921]="PAWMI",t[t.PAWMO=922]="PAWMO",t[t.PAWMOT=923]="PAWMOT",t[t.TANDEMAUS=924]="TANDEMAUS",t[t.MAUSHOLD=925]="MAUSHOLD",t[t.FIDOUGH=926]="FIDOUGH",t[t.DACHSBUN=927]="DACHSBUN",t[t.SMOLIV=928]="SMOLIV",t[t.DOLLIV=929]="DOLLIV",t[t.ARBOLIVA=930]="ARBOLIVA",t[t.SQUAWKABILLY=931]="SQUAWKABILLY",t[t.NACLI=932]="NACLI",t[t.NACLSTACK=933]="NACLSTACK",t[t.GARGANACL=934]="GARGANACL",t[t.CHARCADET=935]="CHARCADET",t[t.ARMAROUGE=936]="ARMAROUGE",t[t.CERULEDGE=937]="CERULEDGE",t[t.TADBULB=938]="TADBULB",t[t.BELLIBOLT=939]="BELLIBOLT",t[t.WATTREL=940]="WATTREL",t[t.KILOWATTREL=941]="KILOWATTREL",t[t.MASCHIFF=942]="MASCHIFF",t[t.MABOSSTIFF=943]="MABOSSTIFF",t[t.SHROODLE=944]="SHROODLE",t[t.GRAFAIAI=945]="GRAFAIAI",t[t.BRAMBLIN=946]="BRAMBLIN",t[t.BRAMBLEGHAST=947]="BRAMBLEGHAST",t[t.TOEDSCOOL=948]="TOEDSCOOL",t[t.TOEDSCRUEL=949]="TOEDSCRUEL",t[t.KLAWF=950]="KLAWF",t[t.CAPSAKID=951]="CAPSAKID",t[t.SCOVILLAIN=952]="SCOVILLAIN",t[t.RELLOR=953]="RELLOR",t[t.RABSCA=954]="RABSCA",t[t.FLITTLE=955]="FLITTLE",t[t.ESPATHRA=956]="ESPATHRA",t[t.TINKATINK=957]="TINKATINK",t[t.TINKATUFF=958]="TINKATUFF",t[t.TINKATON=959]="TINKATON",t[t.WIGLETT=960]="WIGLETT",t[t.WUGTRIO=961]="WUGTRIO",t[t.BOMBIRDIER=962]="BOMBIRDIER",t[t.FINIZEN=963]="FINIZEN",t[t.PALAFIN=964]="PALAFIN",t[t.VAROOM=965]="VAROOM",t[t.REVAVROOM=966]="REVAVROOM",t[t.CYCLIZAR=967]="CYCLIZAR",t[t.ORTHWORM=968]="ORTHWORM",t[t.GLIMMET=969]="GLIMMET",t[t.GLIMMORA=970]="GLIMMORA",t[t.GREAVARD=971]="GREAVARD",t[t.HOUNDSTONE=972]="HOUNDSTONE",t[t.FLAMIGO=973]="FLAMIGO",t[t.CETODDLE=974]="CETODDLE",t[t.CETITAN=975]="CETITAN",t[t.VELUZA=976]="VELUZA",t[t.DONDOZO=977]="DONDOZO",t[t.TATSUGIRI=978]="TATSUGIRI",t[t.ANNIHILAPE=979]="ANNIHILAPE",t[t.CLODSIRE=980]="CLODSIRE",t[t.FARIGIRAF=981]="FARIGIRAF",t[t.DUDUNSPARCE=982]="DUDUNSPARCE",t[t.KINGAMBIT=983]="KINGAMBIT",t[t.GREAT_TUSK=984]="GREAT_TUSK",t[t.SCREAM_TAIL=985]="SCREAM_TAIL",t[t.BRUTE_BONNET=986]="BRUTE_BONNET",t[t.FLUTTER_MANE=987]="FLUTTER_MANE",t[t.SLITHER_WING=988]="SLITHER_WING",t[t.SANDY_SHOCKS=989]="SANDY_SHOCKS",t[t.IRON_TREADS=990]="IRON_TREADS",t[t.IRON_BUNDLE=991]="IRON_BUNDLE",t[t.IRON_HANDS=992]="IRON_HANDS",t[t.IRON_JUGULIS=993]="IRON_JUGULIS",t[t.IRON_MOTH=994]="IRON_MOTH",t[t.IRON_THORNS=995]="IRON_THORNS",t[t.FRIGIBAX=996]="FRIGIBAX",t[t.ARCTIBAX=997]="ARCTIBAX",t[t.BAXCALIBUR=998]="BAXCALIBUR",t[t.GIMMIGHOUL=999]="GIMMIGHOUL",t[t.GHOLDENGO=1e3]="GHOLDENGO",t[t.WO_CHIEN=1001]="WO_CHIEN",t[t.CHIEN_PAO=1002]="CHIEN_PAO",t[t.TING_LU=1003]="TING_LU",t[t.CHI_YU=1004]="CHI_YU",t[t.ROARING_MOON=1005]="ROARING_MOON",t[t.IRON_VALIANT=1006]="IRON_VALIANT",t[t.KORAIDON=1007]="KORAIDON",t[t.MIRAIDON=1008]="MIRAIDON",t[t.WALKING_WAKE=1009]="WALKING_WAKE",t[t.IRON_LEAVES=1010]="IRON_LEAVES",t[t.DIPPLIN=1011]="DIPPLIN",t[t.POLTCHAGEIST=1012]="POLTCHAGEIST",t[t.SINISTCHA=1013]="SINISTCHA",t[t.OKIDOGI=1014]="OKIDOGI",t[t.MUNKIDORI=1015]="MUNKIDORI",t[t.FEZANDIPITI=1016]="FEZANDIPITI",t[t.OGERPON=1017]="OGERPON",t[t.ARCHALUDON=1018]="ARCHALUDON",t[t.HYDRAPPLE=1019]="HYDRAPPLE",t[t.GOUGING_FIRE=1020]="GOUGING_FIRE",t[t.RAGING_BOLT=1021]="RAGING_BOLT",t[t.IRON_BOULDER=1022]="IRON_BOULDER",t[t.IRON_CROWN=1023]="IRON_CROWN",t[t.TERAPAGOS=1024]="TERAPAGOS",t[t.PECHARUNT=1025]="PECHARUNT",t[t.ALOLA_RATTATA=2019]="ALOLA_RATTATA",t[t.ALOLA_RATICATE=2020]="ALOLA_RATICATE",t[t.ALOLA_RAICHU=2026]="ALOLA_RAICHU",t[t.ALOLA_SANDSHREW=2027]="ALOLA_SANDSHREW",t[t.ALOLA_SANDSLASH=2028]="ALOLA_SANDSLASH",t[t.ALOLA_VULPIX=2037]="ALOLA_VULPIX",t[t.ALOLA_NINETALES=2038]="ALOLA_NINETALES",t[t.ALOLA_DIGLETT=2050]="ALOLA_DIGLETT",t[t.ALOLA_DUGTRIO=2051]="ALOLA_DUGTRIO",t[t.ALOLA_MEOWTH=2052]="ALOLA_MEOWTH",t[t.ALOLA_PERSIAN=2053]="ALOLA_PERSIAN",t[t.ALOLA_GEODUDE=2074]="ALOLA_GEODUDE",t[t.ALOLA_GRAVELER=2075]="ALOLA_GRAVELER",t[t.ALOLA_GOLEM=2076]="ALOLA_GOLEM",t[t.ALOLA_GRIMER=2088]="ALOLA_GRIMER",t[t.ALOLA_MUK=2089]="ALOLA_MUK",t[t.ALOLA_EXEGGUTOR=2103]="ALOLA_EXEGGUTOR",t[t.ALOLA_MAROWAK=2105]="ALOLA_MAROWAK",t[t.ETERNAL_FLOETTE=2670]="ETERNAL_FLOETTE",t[t.GALAR_MEOWTH=4052]="GALAR_MEOWTH",t[t.GALAR_PONYTA=4077]="GALAR_PONYTA",t[t.GALAR_RAPIDASH=4078]="GALAR_RAPIDASH",t[t.GALAR_SLOWPOKE=4079]="GALAR_SLOWPOKE",t[t.GALAR_SLOWBRO=4080]="GALAR_SLOWBRO",t[t.GALAR_FARFETCHD=4083]="GALAR_FARFETCHD",t[t.GALAR_WEEZING=4110]="GALAR_WEEZING",t[t.GALAR_MR_MIME=4122]="GALAR_MR_MIME",t[t.GALAR_ARTICUNO=4144]="GALAR_ARTICUNO",t[t.GALAR_ZAPDOS=4145]="GALAR_ZAPDOS",t[t.GALAR_MOLTRES=4146]="GALAR_MOLTRES",t[t.GALAR_SLOWKING=4199]="GALAR_SLOWKING",t[t.GALAR_CORSOLA=4222]="GALAR_CORSOLA",t[t.GALAR_ZIGZAGOON=4263]="GALAR_ZIGZAGOON",t[t.GALAR_LINOONE=4264]="GALAR_LINOONE",t[t.GALAR_DARUMAKA=4554]="GALAR_DARUMAKA",t[t.GALAR_DARMANITAN=4555]="GALAR_DARMANITAN",t[t.GALAR_YAMASK=4562]="GALAR_YAMASK",t[t.GALAR_STUNFISK=4618]="GALAR_STUNFISK",t[t.HISUI_GROWLITHE=6058]="HISUI_GROWLITHE",t[t.HISUI_ARCANINE=6059]="HISUI_ARCANINE",t[t.HISUI_VOLTORB=6100]="HISUI_VOLTORB",t[t.HISUI_ELECTRODE=6101]="HISUI_ELECTRODE",t[t.HISUI_TYPHLOSION=6157]="HISUI_TYPHLOSION",t[t.HISUI_QWILFISH=6211]="HISUI_QWILFISH",t[t.HISUI_SNEASEL=6215]="HISUI_SNEASEL",t[t.HISUI_SAMUROTT=6503]="HISUI_SAMUROTT",t[t.HISUI_LILLIGANT=6549]="HISUI_LILLIGANT",t[t.HISUI_ZORUA=6570]="HISUI_ZORUA",t[t.HISUI_ZOROARK=6571]="HISUI_ZOROARK",t[t.HISUI_BRAVIARY=6628]="HISUI_BRAVIARY",t[t.HISUI_SLIGGOO=6705]="HISUI_SLIGGOO",t[t.HISUI_GOODRA=6706]="HISUI_GOODRA",t[t.HISUI_AVALUGG=6713]="HISUI_AVALUGG",t[t.HISUI_DECIDUEYE=6724]="HISUI_DECIDUEYE",t[t.PALDEA_TAUROS=8128]="PALDEA_TAUROS",t[t.PALDEA_WOOPER=8194]="PALDEA_WOOPER",t[t.BLOODMOON_URSALUNA=8901]="BLOODMOON_URSALUNA",t))(e||{}),a=(t=>(t[t.ALL=-1]="ALL",t[t.DAWN=0]="DAWN",t[t.DAY=1]="DAY",t[t.DUSK=2]="DUSK",t[t.NIGHT=3]="NIGHT",t))(a||{}),tt=(t=>(t[t.DEFAULT=0]="DEFAULT",t[t.FINAL_BOSS=1]="FINAL_BOSS",t))(tt||{});function Z(t,E=!0){if(!t)return"Missigno";switch(s.currentBattle.battleSpec){case tt.DEFAULT:return t.isPlayer()?t.getNameToRender(E):t.hasTrainer()?D.t("battle:foePokemonWithAffix",{pokemonName:t.getNameToRender(E)}):D.t("battle:wildPokemonWithAffix",{pokemonName:t.getNameToRender(E)});case tt.FINAL_BOSS:return t.isPlayer()?t.getNameToRender(E):D.t("battle:foePokemonWithAffix",{pokemonName:t.getNameToRender(E)});default:return t.getNameToRender(E)}}r(Z,"getPokemonNameWithAffix");var yO=(t=>(t[t.STANDARD=0]="STANDARD",t[t.RARE=1]="RARE",t[t.EPIC=2]="EPIC",t))(yO||{});const O8=new Set,I8=/^pkmn__?(back__)?(shiny__)?(female__)?(\d+)(\-.*?)?(?:_[1-3])?$/;function V1(t){const E=I8.exec(t);if(!E)return!1;let R=E[4];return E[2]&&(R+="s"),E[1]&&(R+="b"),E[3]&&(R+="f"),E[5]&&(R+=E[5]),!!O8.has(R)}r(V1,"hasExpSprite");const QR={},hL={};function nO(t){switch(t){case 0:return 16302112;case 1:return 2160880;case 2:return 15208520}}r(nO,"getVariantTint");function KX(t){switch(t){case 0:return yO.STANDARD;case 1:return yO.RARE;case 2:return yO.EPIC}}r(KX,"getVariantIcon");function FX(){for(const t in QR)delete QR[t]}r(FX,"clearVariantData");async function qw(t,E=!1,R=!0){const I=t.getBattleSpriteAtlasPath(E,R).replace("variant/","").replace(/_[1-3]$/,"");let N=QR;const S=s.experimentalSprites&&V1(t.getBattleSpriteKey(E,R));I.split("/").map(o=>N?N=N[o]:null);const T=N;if(!T||T[t.variant]!==1)return;const i=t.getBattleSpriteKey(E);hL.hasOwnProperty(i)||await v1(i,S,I)}r(qw,"populateVariantColors");async function zw(t,E,R,I,...N){console.warn(`Could not load ${E}!`,...N),R&&await v1(t,!1,I)}r(zw,"fallbackVariantColor");async function v1(t,E,R){const I=`./images/pokemon/variant/${E?"exp/":""}${R}.json`;return s.cachedFetch(I).then(N=>N.ok?N.json():zw(t,N.url,E,R,N.status,N.statusText)).catch(N=>zw(t,I,E,R,N)).then(N=>{Ne(N)||(hL[t]=N)})}r(v1,"populateVariantColorCache");var P=(t=>(t[t.ERRATIC=0]="ERRATIC",t[t.FAST=1]="FAST",t[t.MEDIUM_FAST=2]="MEDIUM_FAST",t[t.MEDIUM_SLOW=3]="MEDIUM_SLOW",t[t.SLOW=4]="SLOW",t[t.FLUCTUATING=5]="FLUCTUATING",t))(P||{});const L8=[[0,15,52,122,237,406,637,942,1326,1800,2369,3041,3822,4719,5737,6881,8155,9564,11111,12800,14632,16610,18737,21012,23437,26012,28737,31610,34632,37800,41111,44564,48155,51881,55737,59719,63822,68041,72369,76800,81326,85942,90637,95406,100237,105122,110052,115015,120001,125e3,131324,137795,144410,151165,158056,165079,172229,179503,186894,194400,202013,209728,217540,225443,233431,241496,249633,257834,267406,276458,286328,296358,305767,316074,326531,336255,346965,357812,367807,378880,390077,400293,411686,423190,433572,445239,457001,467489,479378,491346,501878,513934,526049,536557,548720,560922,571333,583539,591882,6e5],[0,6,21,51,100,172,274,409,583,800,1064,1382,1757,2195,2700,3276,3930,4665,5487,6400,7408,8518,9733,11059,12500,14060,15746,17561,19511,21600,23832,26214,28749,31443,34300,37324,40522,43897,47455,51200,55136,59270,63605,68147,72900,77868,83058,88473,94119,1e5,106120,112486,119101,125971,133100,140492,148154,156089,164303,172800,181584,190662,200037,209715,219700,229996,240610,251545,262807,274400,286328,298598,311213,324179,337500,351180,365226,379641,394431,409600,425152,441094,457429,474163,491300,508844,526802,545177,563975,583200,602856,622950,643485,664467,685900,707788,730138,752953,776239,8e5],[0,8,27,64,125,216,343,512,729,1e3,1331,1728,2197,2744,3375,4096,4913,5832,6859,8e3,9261,10648,12167,13824,15625,17576,19683,21952,24389,27e3,29791,32768,35937,39304,42875,46656,50653,54872,59319,64e3,68921,74088,79507,85184,91125,97336,103823,110592,117649,125e3,132651,140608,148877,157464,166375,175616,185193,195112,205379,216e3,226981,238328,250047,262144,274625,287496,300763,314432,328509,343e3,357911,373248,389017,405224,421875,438976,456533,474552,493039,512e3,531441,551368,571787,592704,614125,636056,658503,681472,704969,729e3,753571,778688,804357,830584,857375,884736,912673,941192,970299,1e6],[0,9,57,96,135,179,236,314,419,560,742,973,1261,1612,2035,2535,3120,3798,4575,5460,6458,7577,8825,10208,11735,13411,15244,17242,19411,21760,24294,27021,29949,33084,36435,40007,43808,47846,52127,56660,61450,66505,71833,77440,83335,89523,96012,102810,109923,117360,125126,133229,141677,150476,159635,169159,179056,189334,199999,211060,222522,234393,246681,259392,272535,286115,300140,314618,329555,344960,360838,377197,394045,411388,429235,447591,466464,485862,505791,526260,547274,568841,590969,613664,636935,660787,685228,710266,735907,762160,789030,816525,844653,873420,902835,932903,963632,995030,1027103,1059860],[0,10,33,80,156,270,428,640,911,1250,1663,2160,2746,3430,4218,5120,6141,7290,8573,1e4,11576,13310,15208,17280,19531,21970,24603,27440,30486,33750,37238,40960,44921,49130,53593,58320,63316,68590,74148,8e4,86151,92610,99383,106480,113906,121670,129778,138240,147061,156250,165813,175760,186096,196830,207968,219520,231491,243890,256723,27e4,283726,297910,312558,327680,343281,359370,375953,393040,410636,428750,447388,466560,486271,506530,527343,548720,570666,593190,616298,64e4,664301,689210,714733,740880,767656,795070,823128,851840,881211,911250,941963,973360,1005446,1038230,1071718,1105920,1140841,1176490,1212873,125e4],[0,4,13,32,65,112,178,276,393,540,745,967,1230,1591,1957,2457,3046,3732,4526,5440,6482,7666,9003,10506,12187,14060,16140,18439,20974,23760,26811,30146,33780,37731,42017,46656,50653,55969,60505,66560,71677,78533,84277,91998,98415,107069,114205,123863,131766,142500,151222,163105,172697,185807,196322,210739,222231,238036,250562,267840,281456,300293,315059,335544,351520,373744,390991,415050,433631,459620,479600,507617,529063,559209,582187,614566,639146,673863,700115,737280,765275,804997,834809,877201,908905,954084,987754,1035837,1071552,1122660,1160499,1214753,1254796,1312322,1354652,1415577,1460276,1524731,1571884,164e4]];function SO(t,E){if(t<100){const I=L8[E][t-1];return E!==2?Math.floor(I*.325+SO(t,2)*.675):I}let R;switch(E){case 0:R=(Math.pow(t,4)+Math.pow(t,3)*2e3)/3500;break;case 1:R=Math.pow(t,3)*4/5;break;case 2:R=Math.pow(t,3);break;case 3:R=Math.pow(t,3)*6/5-15*Math.pow(t,2)+100*t-140;break;case 4:R=Math.pow(t,3)*5/4;break;case 5:R=Math.pow(t,3)*(t/2+8)*4/(100+t);break}return Math.floor(E!==2?R*.325+SO(t,2)*.675:R)}r(SO,"getLevelTotalExp");function Dv(t,E){return SO(t,E)-SO(t-1,E)}r(Dv,"getLevelRelExp");function YX(t,E){switch(t){case 0:return E?"#906060":"#f85888";case 1:return E?"#b8a038":"#f8d030";case 2:return E?"#588040":"#78c850";case 3:return E?"#807870":"#6890f0";case 4:return E?"#c03028":"#f08030";case 5:return E?"#483850":"#a040a0"}}r(YX,"getGrowthRateColor");var K=(t=>(t[t.COMMON=0]="COMMON",t[t.RARE=1]="RARE",t[t.EPIC=2]="EPIC",t[t.LEGENDARY=3]="LEGENDARY",t))(K||{}),XO=(t=>(t[t.DEFAULT=0]="DEFAULT",t[t.LEGACY=1]="LEGACY",t))(XO||{}),p=(t=>(t[t.COMMON=0]="COMMON",t[t.GREAT=1]="GREAT",t[t.ULTRA=2]="ULTRA",t[t.ROGUE=3]="ROGUE",t[t.MASTER=4]="MASTER",t[t.LUXURY=5]="LUXURY",t))(p||{}),Se=(t=>(t[t.MESSAGE=0]="MESSAGE",t[t.WINDOW=1]="WINDOW",t[t.WINDOW_ALT=2]="WINDOW_ALT",t[t.BATTLE_INFO=3]="BATTLE_INFO",t[t.PARTY=4]="PARTY",t[t.PARTY_RED=5]="PARTY_RED",t[t.SUMMARY=6]="SUMMARY",t[t.SUMMARY_ALT=7]="SUMMARY_ALT",t[t.SUMMARY_RED=8]="SUMMARY_RED",t[t.SUMMARY_BLUE=9]="SUMMARY_BLUE",t[t.SUMMARY_PINK=10]="SUMMARY_PINK",t[t.SUMMARY_GOLD=11]="SUMMARY_GOLD",t[t.SUMMARY_GRAY=12]="SUMMARY_GRAY",t[t.SUMMARY_GREEN=13]="SUMMARY_GREEN",t[t.MONEY=14]="MONEY",t[t.MONEY_WINDOW=15]="MONEY_WINDOW",t[t.STATS_LABEL=16]="STATS_LABEL",t[t.STATS_VALUE=17]="STATS_VALUE",t[t.SETTINGS_VALUE=18]="SETTINGS_VALUE",t[t.SETTINGS_LABEL=19]="SETTINGS_LABEL",t[t.SETTINGS_SELECTED=20]="SETTINGS_SELECTED",t[t.SETTINGS_LOCKED=21]="SETTINGS_LOCKED",t[t.TOOLTIP_TITLE=22]="TOOLTIP_TITLE",t[t.TOOLTIP_CONTENT=23]="TOOLTIP_CONTENT",t[t.MOVE_INFO_CONTENT=24]="MOVE_INFO_CONTENT",t[t.MOVE_PP_FULL=25]="MOVE_PP_FULL",t[t.MOVE_PP_HALF_FULL=26]="MOVE_PP_HALF_FULL",t[t.MOVE_PP_NEAR_EMPTY=27]="MOVE_PP_NEAR_EMPTY",t[t.MOVE_PP_EMPTY=28]="MOVE_PP_EMPTY",t[t.SMALLER_WINDOW_ALT=29]="SMALLER_WINDOW_ALT",t[t.BGM_BAR=30]="BGM_BAR",t[t.PERFECT_IV=31]="PERFECT_IV",t[t.ME_OPTION_DEFAULT=32]="ME_OPTION_DEFAULT",t[t.ME_OPTION_SPECIAL=33]="ME_OPTION_SPECIAL",t[t.SHADOW_TEXT=34]="SHADOW_TEXT",t))(Se||{});function We(t,E,R,I,N){const{scale:S,styleOptions:T,shadowColor:i,shadowXpos:o,shadowYpos:C}=OT(I,s.uiTheme,N),U=s.add.text(t,E,R,T);return U.setScale(S),U.setShadow(o,C,i),T.lineSpacing||U.setLineSpacing(S*30),U.lineSpacing<12&&D.resolvedLanguage==="ja"&&U.setLineSpacing(U.lineSpacing+35),U}r(We,"addTextObject");function WX(t,E,R){const{scale:I,styleOptions:N,shadowColor:S,shadowXpos:T,shadowYpos:i}=OT(E,s.uiTheme,R);t.setScale(I),t.setShadow(T,i,S),N.lineSpacing||t.setLineSpacing(I*30),t.lineSpacing<12&&D.resolvedLanguage==="ja"&&t.setLineSpacing(t.lineSpacing+35)}r(WX,"setTextStyle");function MO(t,E,R,I,N){const{scale:S,styleOptions:T,shadowColor:i,shadowXpos:o,shadowYpos:C}=OT(I,s.uiTheme,N),U=new rv(s,t,E,R,T);return s.add.existing(U),U.setScale(S),U.setShadow(o,C,i),T.lineSpacing||U.setLineSpacing(S*60),U.lineSpacing<12&&D.resolvedLanguage==="ja"&&U.setLineSpacing(U.lineSpacing+35),U}r(MO,"addBBCodeTextObject");function mX(t,E,R,I,N,S){const{scale:T,styleOptions:i}=OT(N,s.uiTheme,S),o=new w6(s,t,E,R,I,i);return s.add.existing(o),o.setScale(T),o}r(mX,"addTextInputObject");function OT(t,E,R){var U;const I=D.resolvedLanguage;let N=4,S=5,T=.1666666667;const i=96;let o={fontFamily:"emerald",fontSize:96,color:pA(t,!1,E),padding:{bottom:6}};switch(D.resolvedLanguage==="ja"&&(T=.1388888889,o.padding={top:2,bottom:4}),t){case 6:case 7:case 9:case 8:case 10:case 11:case 12:case 13:case 1:case 2:case 32:case 33:N=3,S=3;break;case 16:{let _="96px";switch(I){case"de":N=3,S=3,_="80px";break;default:_="96px";break}o.fontSize=_;break}case 17:{N=3,S=3;let _="96px";switch(I){case"de":_="80px";break;default:_="96px";break}o.fontSize=_;break}case 0:case 19:case 21:case 20:break;case 3:case 14:case 15:case 22:o.fontSize=i-24,N=3.5,S=3.5;break;case 4:case 5:o.fontSize=i-30,o.fontFamily="pkmnems";break;case 23:o.fontSize=i-32,N=3,S=3;break;case 24:o.fontSize=i-40,N=3,S=3;break;case 29:o.fontSize=i-36,N=3,S=3;break;case 30:o.fontSize=i-24,N=3,S=3;break}const C=pA(t,!0,E);if(R){if(R.fontSize){const _=Number.parseInt(R.fontSize.toString().slice(0,-2))/Number.parseInt(((U=o.fontSize)==null?void 0:U.toString().slice(0,-2))??"1");N*=_}o=Object.assign(o,R)}return{scale:T,styleOptions:o,shadowColor:C,shadowXpos:N,shadowYpos:S}}r(OT,"getTextStyleOptions");function mI(t,E,R=XO.DEFAULT){return`[color=${pA(E,!1,R)}][shadow=${pA(E,!0,R)}]${t}`}r(mI,"getBBCodeFrag");function N8(t,E,R,I){let N=mI(t,E,R)+"[/color][/shadow]";const S=[...N.match(new RegExp(/\[color=[^\[]*\]\[shadow=[^\[]*\]/i))][0];return N=N.replace(/@\[MONEY\]/g,T=>"@[MONEY_WINDOW]"),N=N.replace(/@\[([^{]*)\]{([^}]*)}/gi,(T,i,o)=>"[/color][/shadow]"+mI(o,Se[i],R)+"[/color][/shadow]"+S),N.replace(/\[color=[^\[]*\]\[shadow=[^\[]*\]\[\/color\]\[\/shadow\]/gi,"")}r(N8,"getTextWithColors");function pA(t,E,R=XO.DEFAULT){const I=R===XO.LEGACY;switch(t){case 0:return E?"#6b5a73":"#f8f8f8";case 1:case 24:case 25:case 23:case 18:return I?E?"#d0d0c8":"#484848":E?"#6b5a73":"#f8f8f8";case 26:return I?E?"#ebd773":"#a68e17":E?"#6e672c":"#ccbe00";case 27:return I?E?"#f7b18b":"#d64b00":E?"#69402a":"#d64b00";case 28:return I?E?"#fca2a2":"#e13d3d":E?"#632929":"#e13d3d";case 2:return E?"#d0d0c8":"#484848";case 3:return I?E?"#ded6b5":"#404040":E?"#6b5a73":"#f8f8f8";case 4:return E?"#707070":"#f8f8f8";case 5:return E?"#984038":"#f89890";case 6:return E?"#636363":"#f8f8f8";case 7:return I?E?"#636363":"#f8f8f8":E?"#d0d0c8":"#484848";case 8:case 22:return E?"#ffbd73":"#e70808";case 9:return E?"#006090":"#40c8f8";case 10:return E?"#984038":"#f89890";case 11:case 14:return E?"#a0a060":"#e8e8a8";case 15:return I?E?"#c07800":"#f8b050":E?"#a0a060":"#e8e8a8";case 21:case 12:return E?"#636363":"#a0a0a0";case 16:return E?"#c07800":"#f8b050";case 17:return I?E?"#d0d0c8":"#484848":E?"#6b5a73":"#f8f8f8";case 13:return E?"#306850":"#78c850";case 19:case 31:return E?"#c07800":"#f8b050";case 20:return E?"#f83018":"#f88880";case 29:return E?"#d0d0c8":"#484848";case 30:return E?"#6b5a73":"#f8f8f8";case 32:return E?"#6b5a73":"#f8f8f8";case 33:return I?E?"#c07800":"#f8b050":E?"#306850":"#78c850";case 34:return I?"#d0d0c8":"#6b5a73"}}r(pA,"getTextColor");function ds(t){switch(t){case p.COMMON:return 16316664;case p.GREAT:return 4823288;case p.ULTRA:return 16306232;case p.ROGUE:return 14369603;case p.MASTER:return 14889413;case p.LUXURY:return 15158296}}r(ds,"getModifierTierTextTint");function gX(t){switch(t){case K.COMMON:return ds(p.COMMON);case K.RARE:return ds(p.GREAT);case K.EPIC:return ds(p.ULTRA);case K.LEGENDARY:return ds(p.MASTER)}}r(gX,"getEggTierTextTint");var J=(t=>(t[t.NONE=0]="NONE",t[t.POISON=1]="POISON",t[t.TOXIC=2]="TOXIC",t[t.PARALYSIS=3]="PARALYSIS",t[t.SLEEP=4]="SLEEP",t[t.FREEZE=5]="FREEZE",t[t.BURN=6]="BURN",t[t.FAINT=7]="FAINT",t))(J||{});function iP(t,E){if(t===L.UNKNOWN||E===L.UNKNOWN)return 1;switch(E){case L.NORMAL:switch(t){case L.FIGHTING:return 2;case L.GHOST:return 0;default:return 1}case L.FIGHTING:switch(t){case L.FLYING:case L.PSYCHIC:case L.FAIRY:return 2;case L.ROCK:case L.BUG:case L.DARK:return .5;default:return 1}case L.FLYING:switch(t){case L.ROCK:case L.ELECTRIC:case L.ICE:return 2;case L.FIGHTING:case L.BUG:case L.GRASS:return .5;case L.GROUND:return 0;default:return 1}case L.POISON:switch(t){case L.GROUND:case L.PSYCHIC:return 2;case L.FIGHTING:case L.POISON:case L.BUG:case L.GRASS:case L.FAIRY:return .5;default:return 1}case L.GROUND:switch(t){case L.WATER:case L.GRASS:case L.ICE:return 2;case L.POISON:case L.ROCK:return .5;case L.ELECTRIC:return 0;default:return 1}case L.ROCK:switch(t){case L.FIGHTING:case L.GROUND:case L.STEEL:case L.WATER:case L.GRASS:return 2;case L.NORMAL:case L.FLYING:case L.POISON:case L.FIRE:return .5;default:return 1}case L.BUG:switch(t){case L.FLYING:case L.ROCK:case L.FIRE:return 2;case L.FIGHTING:case L.GROUND:case L.GRASS:return .5;default:return 1}case L.GHOST:switch(t){case L.GHOST:case L.DARK:return 2;case L.POISON:case L.BUG:return .5;case L.NORMAL:case L.FIGHTING:return 0;default:return 1}case L.STEEL:switch(t){case L.FIGHTING:case L.GROUND:case L.FIRE:return 2;case L.NORMAL:case L.FLYING:case L.ROCK:case L.BUG:case L.STEEL:case L.GRASS:case L.PSYCHIC:case L.ICE:case L.DRAGON:case L.FAIRY:return .5;case L.POISON:return 0;default:return 1}case L.FIRE:switch(t){case L.GROUND:case L.ROCK:case L.WATER:return 2;case L.BUG:case L.STEEL:case L.FIRE:case L.GRASS:case L.ICE:case L.FAIRY:return .5;default:return 1}case L.WATER:switch(t){case L.GRASS:case L.ELECTRIC:return 2;case L.STEEL:case L.FIRE:case L.WATER:case L.ICE:return .5;default:return 1}case L.GRASS:switch(t){case L.FLYING:case L.POISON:case L.BUG:case L.FIRE:case L.ICE:return 2;case L.GROUND:case L.WATER:case L.GRASS:case L.ELECTRIC:return .5;default:return 1}case L.ELECTRIC:switch(t){case L.GROUND:return 2;case L.FLYING:case L.STEEL:case L.ELECTRIC:return .5;default:return 1}case L.PSYCHIC:switch(t){case L.BUG:case L.GHOST:case L.DARK:return 2;case L.FIGHTING:case L.PSYCHIC:return .5;default:return 1}case L.ICE:switch(t){case L.FIGHTING:case L.ROCK:case L.STEEL:case L.FIRE:return 2;case L.ICE:return .5;default:return 1}case L.DRAGON:switch(t){case L.ICE:case L.DRAGON:case L.FAIRY:return 2;case L.FIRE:case L.WATER:case L.GRASS:case L.ELECTRIC:return .5;default:return 1}case L.DARK:switch(t){case L.FIGHTING:case L.BUG:case L.FAIRY:return 2;case L.GHOST:case L.DARK:return .5;case L.PSYCHIC:return 0;default:return 1}case L.FAIRY:switch(t){case L.POISON:case L.STEEL:return 2;case L.FIGHTING:case L.BUG:case L.DARK:return .5;case L.DRAGON:return 0;default:return 1}case L.STELLAR:return 1}return 1}r(iP,"getTypeDamageMultiplier");function pX(t,E){switch(t){case 0:return"#929292";case .125:return"#FF5500";case .25:return"#FF7400";case .5:return"#FE8E00";case 1:return;case 2:return"#4AA500";case 4:return"#4BB400";case 8:return"#52C200"}}r(pX,"getTypeDamageMultiplierColor");function iO(t){switch(t){case L.NORMAL:return[168,168,120];case L.FIGHTING:return[192,48,40];case L.FLYING:return[168,144,240];case L.POISON:return[160,64,160];case L.GROUND:return[224,192,104];case L.ROCK:return[184,160,56];case L.BUG:return[168,184,32];case L.GHOST:return[112,88,152];case L.STEEL:return[184,184,208];case L.FIRE:return[240,128,48];case L.WATER:return[104,144,240];case L.GRASS:return[120,200,80];case L.ELECTRIC:return[248,208,48];case L.PSYCHIC:return[248,88,136];case L.ICE:return[152,216,216];case L.DRAGON:return[112,56,248];case L.DARK:return[112,88,72];case L.FAIRY:return[232,136,200];case L.STELLAR:return[255,255,255];default:return[0,0,0]}}r(iO,"getTypeRgb");var h=(t=>(t[t.HP=0]="HP",t[t.ATK=1]="ATK",t[t.DEF=2]="DEF",t[t.SPATK=3]="SPATK",t[t.SPDEF=4]="SPDEF",t[t.SPD=5]="SPD",t[t.ACC=6]="ACC",t[t.EVA=7]="EVA",t))(h||{});const uN=[0,1,2,3,4,5],mL=[1,2,3,4,5],cO=[1,2,3,4,5,6,7],Mv=[1,2,3,4,5,6];function jw(t,E){return t===1?E?"battle:statRose":"battle:statFell":t===2?E?"battle:statSharplyRose":"battle:statHarshlyFell":t>2&&t<=6?E?"battle:statRoseDrastically":"battle:statSeverelyFell":E?"battle:statWontGoAnyHigher":"battle:statWontGoAnyLower"}r(jw,"getStatStageChangeDescriptionKey");function et(t){return`pokemonInfo:Stat.${h[t]}`}r(et,"getStatKey");function Ks(t){return`pokemonInfo:Stat.${h[t]}shortened`}r(Ks,"getShortenedStatKey");var DT=(t=>(t.CANDY_UPGRADE_NOTIFICATION_CHANGED="onCandyUpgradeNotificationChanged",t.MOVE_USED="onMoveUsed",t.BERRY_USED="onBerryUsed",t.ENCOUNTER_PHASE="onEncounterPhase",t.TURN_INIT="onTurnInit",t.TURN_END="onTurnEnd",t.NEW_ARENA="onNewArena",t))(DT||{});const Mc=class Mc extends Event{constructor(E){super("onCandyUpgradeNotificationChanged"),this.newValue=E}};r(Mc,"CandyUpgradeNotificationChangedEvent");let oP=Mc;const Pc=class Pc extends Event{constructor(E,R,I){super("onMoveUsed"),this.pokemonId=E,this.move=R,this.ppUsed=I}};r(Pc,"MoveUsedEvent");let Ga=Pc;const Gc=class Gc extends Event{constructor(E){super("onBerryUsed"),this.berryModifier=E}};r(Gc,"BerryUsedEvent");let CP=Gc;const _c=class _c extends Event{constructor(){super("onEncounterPhase")}};r(_c,"EncounterPhaseEvent");let lP=_c;const uc=class uc extends Event{constructor(){super("onTurnInit")}};r(uc,"TurnInitEvent");let eV=uc;const Hc=class Hc extends Event{constructor(E){super("onTurnEnd"),this.turnCount=E}};r(Hc,"TurnEndEvent");let AV=Hc;const cc=class cc extends Event{constructor(){super("onNewArena")}};r(cc,"NewArenaEvent");let EV=cc;var OA=(t=>(t[t.SITRUS=0]="SITRUS",t[t.LUM=1]="LUM",t[t.ENIGMA=2]="ENIGMA",t[t.LIECHI=3]="LIECHI",t[t.GANLON=4]="GANLON",t[t.PETAYA=5]="PETAYA",t[t.APICOT=6]="APICOT",t[t.SALAC=7]="SALAC",t[t.LANSAT=8]="LANSAT",t[t.STARF=9]="STARF",t[t.LEPPA=10]="LEPPA",t))(OA||{});const Bc=class Bc extends Phaser.GameObjects.Container{constructor(E){super(s,0,0),this.flyoutWidth=118,this.flyoutHeight=23,this.flyoutText=new Array(4),this.moveInfo=new Array,this.flyoutVisible=!1,this.onMoveUsedEvent=R=>this.onMoveUsed(R),this.onBerryUsedEvent=R=>this.onBerryUsed(R),this.player=E,this.translationX=this.player?-this.flyoutWidth:this.flyoutWidth,this.anchorX=this.player?-130:-40,this.anchorY=-2.5+(this.player?-18.5:-13),this.flyoutParent=s.add.container(this.anchorX-this.translationX,this.anchorY),this.flyoutParent.setAlpha(0),this.add(this.flyoutParent),this.flyoutBackground=s.add.sprite(0,0,"pbinfo_enemy_boss_stats"),this.flyoutBackground.setOrigin(0,0),this.flyoutParent.add(this.flyoutBackground),this.flyoutContainer=s.add.container(44+(this.player?-this.flyoutWidth:0),2),this.flyoutParent.add(this.flyoutContainer);for(let R=0;R<4;R++)this.flyoutText[R]=We(this.flyoutWidth/4+this.flyoutWidth/2*(R%2),this.flyoutHeight/4+this.flyoutHeight/2*(R<2?0:1),"???",Se.BATTLE_INFO),this.flyoutText[R].setFontSize(45),this.flyoutText[R].setLineSpacing(-10),this.flyoutText[R].setAlign("center"),this.flyoutText[R].setOrigin();this.flyoutContainer.add(this.flyoutText),this.flyoutContainer.add(new Phaser.GameObjects.Rectangle(s,this.flyoutWidth/2,0,1,this.flyoutHeight+(s.uiTheme===XO.LEGACY?1:0),2171169).setOrigin(.5,0)),this.flyoutContainer.add(new Phaser.GameObjects.Rectangle(s,0,this.flyoutHeight/2,this.flyoutWidth+6,1,2171169).setOrigin(0,.5))}initInfo(E){this.pokemon=E,this.name=`Flyout ${Z(this.pokemon)}`,this.flyoutParent.name=`Flyout Parent ${Z(this.pokemon)}`,s.eventTarget.addEventListener(DT.MOVE_USED,this.onMoveUsedEvent),s.eventTarget.addEventListener(DT.BERRY_USED,this.onBerryUsedEvent)}setText(){for(let E=0;E<this.flyoutText.length;E++){const R=this.flyoutText[E],I=this.moveInfo[E];if(!I)continue;const N=I.maxPp-I.ppUsed;R.text=`${I.move.name}  ${N}/${I.maxPp}`}}onMoveUsed(E){var N;const R=E;if(!R||R.pokemonId!==((N=this.pokemon)==null?void 0:N.id)||R.move.id===A.STRUGGLE)return;const I=this.moveInfo.find(S=>(S==null?void 0:S.move.id)===R.move.id);I?I.ppUsed=R.ppUsed:this.moveInfo.push({move:R.move,maxPp:R.move.pp,ppUsed:R.ppUsed}),this.setText()}onBerryUsed(E){var N;const R=E;if(!R||R.berryModifier.pokemonId!==((N=this.pokemon)==null?void 0:N.id)||R.berryModifier.berryType!==OA.LEPPA)return;const I=this.moveInfo.find(S=>S.ppUsed===S.maxPp);I&&(I.ppUsed=Math.max(I.ppUsed-10,0),this.setText())}toggleFlyout(E){this.flyoutVisible=E,s.tweens.add({targets:this.flyoutParent,x:E?this.anchorX:this.anchorX-this.translationX,duration:KA(125),ease:"Sine.easeInOut",alpha:E?1:0})}destroy(E){s.eventTarget.removeEventListener(DT.MOVE_USED,this.onMoveUsedEvent),s.eventTarget.removeEventListener(DT.BERRY_USED,this.onBerryUsedEvent),super.destroy(E)}};r(Bc,"BattleFlyout");let UP=Bc;const $s=[],hc=class hc extends Phaser.Scene{constructor(){super(...arguments),this.scaledCanvas={width:1920/6,height:1080/6}}getCachedUrl(E){const R=this.game.manifest;if(R){const I=R[`/${E}`];I&&(E+=`?t=${I}`)}return E}loadImage(E,R,I){I||(I=`${E}.png`),this.load.image(E,this.getCachedUrl(`images/${R}/${I}`)),R.startsWith("ui")&&($s.push(E),R=R.replace("ui","ui/legacy"),this.load.image(`${E}_legacy`,this.getCachedUrl(`images/${R}/${I}`)))}loadSpritesheet(E,R,I,N){N||(N=`${E}.png`),this.load.spritesheet(E,this.getCachedUrl(`images/${R}/${N}`),{frameWidth:I,frameHeight:I}),R.startsWith("ui")&&($s.push(E),R=R.replace("ui","ui/legacy"),this.load.spritesheet(`${E}_legacy`,this.getCachedUrl(`images/${R}/${N}`),{frameWidth:I,frameHeight:I}))}loadAtlas(E,R,I){I||(I=E),R&&(R+="/"),this.load.atlas(E,this.getCachedUrl(`images/${R}${I}.png`),this.getCachedUrl(`images/${R}${I}.json`)),R.startsWith("ui")&&($s.push(E),R=R.replace("ui","ui/legacy"),this.load.atlas(`${E}_legacy`,this.getCachedUrl(`images/${R}${I}.png`),this.getCachedUrl(`images/${R}${I}.json`)))}loadSe(E,R,I){I||(I=`${E}.wav`),R?R+="/":R="se/",Array.isArray(I)||(I=[I]);for(const N of I)this.load.audio(R+E,this.getCachedUrl(`audio/${R}${N}`))}loadBgm(E,R){R||(R=`${E}.mp3`),this.load.audio(E,this.getCachedUrl(`audio/bgm/${R}`))}};r(hc,"SceneBase");let DP=hc;var x1=(t=>(t[t.NORMAL=0]="NORMAL",t[t.THIN=1]="THIN",t[t.XTHIN=2]="XTHIN",t))(x1||{});function GT(t){switch(t){case 1:return"_thin";case 2:return"_xthin";default:return""}}r(GT,"getWindowVariantSuffix");const s8={[XO.DEFAULT]:{0:["#6b5a73","#DD5748","#7E4955"],1:["#6b5a73","#48DDAA","#4D7574"],2:["#6b5a73","#C5C5C5","#766D7E"],3:["#6b5a73","#EBC07C","#836C66"],4:["#686868","#E8E8E8","#919191"]},[XO.LEGACY]:{0:["#706880","#8888c8","#484868"],1:["#d04028","#e0a028","#902008"],2:["#48b840","#88d880","#089040"],3:["#2068d0","#80b0e0","#104888"],4:["#706880","#8888c8","#484868"]}};function bt(t,E,R,I,N,S,T,i,o){o===void 0&&(o=0);const C=s.uiTheme?6:8,U=s.add.nineslice(t,E,`window_${s.windowType}${GT(o)}`,void 0,R,I,C,C,C,C);if(U.setOrigin(0,0),S||N||T||i){const _=new Phaser.GameObjects.Rectangle(s,6*(t-(S?2:0)-(T||0)),6*(E+(N?2:0)+(i||0)),R-(S?2:0),I-(N?2:0),16777215);_.setOrigin(0),_.setScale(6);const G=_.createGeometryMask();U.setMask(G)}return U}r(bt,"addWindow");function S8(t){const E=[],R=[],I=r(T=>{var i,o;if(T.hasOwnProperty("children")&&T.children instanceof Phaser.GameObjects.DisplayList){const C=T.children;for(const U of C.getAll())I(U)}else if(T instanceof Phaser.GameObjects.Container)for(const C of T.getAll())I(C);else T instanceof Phaser.GameObjects.NineSlice?T.texture.key.startsWith("window_")?E.push([T,T.texture.key.endsWith(GT(2))?2:T.texture.key.endsWith(GT(1))?1:0]):((i=T.texture)==null?void 0:i.key)==="namebox"&&R.push(T):T instanceof Phaser.GameObjects.Sprite&&((o=T.texture)==null?void 0:o.key)==="bg"&&R.push(T)},"traverse");I(s),s.windowType=t;const N=document.documentElement.style;["base","light","dark"].map((T,i)=>N.setProperty(`--color-${T}`,s8[s.uiTheme][t-1][i]));const S=`window_${t}`;for(const[T,i]of E)T.setTexture(`${S}${GT(i)}`);for(const T of R)T.setFrame(t)}r(S8,"updateWindowType");function yX(){const t=s.add.image;s.add.image=function(I,N,S,T){let i=!1;typeof S=="string"&&s.uiTheme&&$s.includes(S)&&(i=!0,S+="_legacy");const o=t.apply(this,[I,N,S,T]);if(i){const C=o.setTexture;o.setTexture=function(U,_){return U+="_legacy",C.apply(this,[U,_])}}return o};const E=s.add.sprite;s.add.sprite=function(I,N,S,T){let i=!1;typeof S=="string"&&s.uiTheme&&$s.includes(S)&&(i=!0,S+="_legacy");const o=E.apply(this,[I,N,S,T]);if(i){const C=o.setTexture;o.setTexture=function(U,_){return U+="_legacy",C.apply(this,[U,_])}}return o};const R=s.add.nineslice;s.add.nineslice=function(I,N,S,T,i,o,C,U,_,G){let H=!1;typeof S=="string"&&s.uiTheme&&$s.includes(S)&&(H=!0,S+="_legacy");const c=R.apply(this,[I,N,S,T,i,o,C,U,_,G]);if(H){const f=c.setTexture;c.setTexture=function(d,w,m,W){return d+="_legacy",f.apply(this,[d,w,m,W])}}return c}}r(yX,"addUiThemeOverrides");var Wi=(t=>(t[t.DEFAULT=0]="DEFAULT",t[t.FAST=1]="FAST",t[t.FASTER=2]="FASTER",t[t.SKIP=3]="SKIP",t))(Wi||{});const Nn=class Nn extends Phaser.GameObjects.Container{constructor(E,R,I){super(s,E,R),this.statOrderPlayer=[h.ATK,h.DEF,h.SPATK,h.SPDEF,h.ACC,h.EVA,h.SPD],this.statOrderEnemy=[h.HP,h.ATK,h.DEF,h.SPATK,h.SPDEF,h.ACC,h.EVA,h.SPD],this.baseY=R,this.player=I,this.mini=!I,this.boss=!1,this.offset=!1,this.lastName=null,this.lastTeraType=L.UNKNOWN,this.lastStatus=J.NONE,this.lastHp=-1,this.lastMaxHp=-1,this.lastHpFrame=null,this.lastExp=-1,this.lastLevelExp=-1,this.lastLevel=-1,this.setVisible(!1),this.box=s.add.sprite(0,0,this.getTextureName()),this.box.setName("box"),this.box.setOrigin(1,.5),this.add(this.box),this.nameText=We(I?-115:-124,I?-15.2:-11.2,"",Se.BATTLE_INFO),this.nameText.setName("text_name"),this.nameText.setOrigin(0,0),this.add(this.nameText),this.genderText=We(0,0,"",Se.BATTLE_INFO),this.genderText.setName("text_gender"),this.genderText.setOrigin(0,0),this.genderText.setPositionRelative(this.nameText,0,2),this.add(this.genderText),this.player||(this.ownedIcon=s.add.sprite(0,0,"icon_owned"),this.ownedIcon.setName("icon_owned"),this.ownedIcon.setVisible(!1),this.ownedIcon.setOrigin(0,0),this.ownedIcon.setPositionRelative(this.nameText,0,11.75),this.add(this.ownedIcon),this.championRibbon=s.add.sprite(0,0,"champion_ribbon"),this.championRibbon.setName("icon_champion_ribbon"),this.championRibbon.setVisible(!1),this.championRibbon.setOrigin(0,0),this.championRibbon.setPositionRelative(this.nameText,8,11.75),this.add(this.championRibbon)),this.teraIcon=s.add.sprite(0,0,"icon_tera"),this.teraIcon.setName("icon_tera"),this.teraIcon.setVisible(!1),this.teraIcon.setOrigin(0,0),this.teraIcon.setScale(.5),this.teraIcon.setPositionRelative(this.nameText,0,2),this.teraIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.add(this.teraIcon),this.shinyIcon=s.add.sprite(0,0,"shiny_star"),this.shinyIcon.setName("icon_shiny"),this.shinyIcon.setVisible(!1),this.shinyIcon.setOrigin(0,0),this.shinyIcon.setScale(.5),this.shinyIcon.setPositionRelative(this.nameText,0,2),this.shinyIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.add(this.shinyIcon),this.fusionShinyIcon=s.add.sprite(0,0,"shiny_star_2"),this.fusionShinyIcon.setName("icon_fusion_shiny"),this.fusionShinyIcon.setVisible(!1),this.fusionShinyIcon.setOrigin(0,0),this.fusionShinyIcon.setScale(.5),this.fusionShinyIcon.setPosition(this.shinyIcon.x,this.shinyIcon.y),this.add(this.fusionShinyIcon),this.splicedIcon=s.add.sprite(0,0,"icon_spliced"),this.splicedIcon.setName("icon_spliced"),this.splicedIcon.setVisible(!1),this.splicedIcon.setOrigin(0,0),this.splicedIcon.setScale(.5),this.splicedIcon.setPositionRelative(this.nameText,0,2),this.splicedIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.add(this.splicedIcon),this.statusIndicator=s.add.sprite(0,0,UL("statuses")),this.statusIndicator.setName("icon_status"),this.statusIndicator.setVisible(!1),this.statusIndicator.setOrigin(0,0),this.statusIndicator.setPositionRelative(this.nameText,0,11.5),this.add(this.statusIndicator),this.levelContainer=s.add.container(I?-41:-50,I?-10:-5),this.levelContainer.setName("container_level"),this.add(this.levelContainer);const N=s.add.image(0,0,"overlay_lv");if(this.levelContainer.add(N),this.hpBar=s.add.image(I?-61:-71,I?-1:4.5,"overlay_hp"),this.hpBar.setName("hp_bar"),this.hpBar.setOrigin(0),this.add(this.hpBar),this.hpBarSegmentDividers=[],this.levelNumbersContainer=s.add.container(9.5,s.uiTheme?0:-.5),this.levelNumbersContainer.setName("container_level"),this.levelContainer.add(this.levelNumbersContainer),this.player){this.hpNumbersContainer=s.add.container(-15,10),this.hpNumbersContainer.setName("container_hp"),this.add(this.hpNumbersContainer);const o=s.add.image(-98,18,"overlay_exp");o.setName("overlay_exp"),o.setOrigin(0),this.add(o);const C=s.make.graphics({});C.setScale(6),C.fillStyle(16777215),C.beginPath(),C.fillRect(127,126,85,2);const U=C.createGeometryMask();o.setMask(U),this.expBar=o,this.expMaskRect=C}this.statsContainer=s.add.container(0,0),this.statsContainer.setName("container_stats"),this.statsContainer.setAlpha(0),this.add(this.statsContainer),this.statsBox=s.add.sprite(0,0,`${this.getTextureName()}_stats`),this.statsBox.setName("box_stats"),this.statsBox.setOrigin(1,.5),this.statsContainer.add(this.statsBox),this.statNumbers=[],this.statValuesContainer=s.add.container(0,0),this.statsContainer.add(this.statValuesContainer);const S=this.player?-this.statsBox.width+8:-this.statsBox.width+5,T=this.player?4:2,i=this.player?1:0;this.statOrder=this.player?this.statOrderPlayer:this.statOrderEnemy,this.statOrder.map((o,C)=>{const U=C>i?this.statNumbers[Math.max(C-2,0)].x+this.statNumbers[Math.max(C-2,0)].width+T:S,_=-this.statsBox.height/2+4;let G;this.statOrder[C]===h.SPD||this.statOrder[C]===h.HP?G=_+5:G=_+(!!(C%2)===this.player?10:0);const H=s.add.sprite(U,G,"pbinfo_stat",h[o]);H.setName("icon_stat_label_"+C.toString()),H.setOrigin(0,0),this.statValuesContainer.add(H);const c=s.add.sprite(U+H.width,G,"pbinfo_stat_numbers",this.statOrder[C]!==h.HP?"3":"empty");c.setName("icon_stat_number_"+C.toString()),c.setOrigin(0,0),this.statNumbers.push(c),this.statValuesContainer.add(c),this.statOrder[C]===h.HP&&(H.setVisible(!1),c.setVisible(!1))}),this.player||(this.flyoutMenu=new UP(this.player),this.add(this.flyoutMenu),this.moveBelow(this.flyoutMenu,this.box)),this.type1Icon=s.add.sprite(I?-139:-15,I?-17:-15.5,`pbinfo_${I?"player":"enemy"}_type1`),this.type1Icon.setName("icon_type_1"),this.type1Icon.setOrigin(0,0),this.add(this.type1Icon),this.type2Icon=s.add.sprite(I?-139:-15,I?-1:-2.5,`pbinfo_${I?"player":"enemy"}_type2`),this.type2Icon.setName("icon_type_2"),this.type2Icon.setOrigin(0,0),this.add(this.type2Icon),this.type3Icon=s.add.sprite(I?-154:0,I?-17:-15.5,`pbinfo_${I?"player":"enemy"}_type`),this.type3Icon.setName("icon_type_3"),this.type3Icon.setOrigin(0,0),this.add(this.type3Icon),this.player||(this.effectivenessContainer=s.add.container(0,0),this.effectivenessContainer.setPositionRelative(this.type1Icon,22,4),this.effectivenessContainer.setVisible(!1),this.add(this.effectivenessContainer),this.effectivenessText=We(5,4.5,"",Se.BATTLE_INFO),this.effectivenessWindow=bt(0,0,0,20,void 0,!1,void 0,void 0,x1.XTHIN),this.effectivenessContainer.add(this.effectivenessWindow),this.effectivenessContainer.add(this.effectivenessText))}getStatsValueContainer(){return this.statValuesContainer}initInfo(E){var o;this.updateNameText(E);const R=this.nameText.displayWidth;this.name=E.getNameToRender(),this.box.name=E.getNameToRender(),(o=this.flyoutMenu)==null||o.initInfo(E),this.genderText.setText(SS(E.gender)),this.genderText.setColor(WL(E.gender)),this.genderText.setPositionRelative(this.nameText,R,0),this.lastTeraType=E.getTeraType(),this.teraIcon.setPositionRelative(this.nameText,R+this.genderText.displayWidth+1,2),this.teraIcon.setVisible(E.isTerastallized),this.teraIcon.on("pointerover",()=>{E.isTerastallized&&s.ui.showTooltip("",D.t("fightUiHandler:teraHover",{type:D.t(`pokemonInfo:Type.${L[this.lastTeraType]}`)}))}),this.teraIcon.on("pointerout",()=>s.ui.hideTooltip());const I=E.isFusion(!0);this.splicedIcon.setPositionRelative(this.nameText,R+this.genderText.displayWidth+1+(this.teraIcon.visible?this.teraIcon.displayWidth+1:0),2.5),this.splicedIcon.setVisible(I),this.splicedIcon.visible&&(this.splicedIcon.on("pointerover",()=>{var C;return s.ui.showTooltip("",`${E.species.getName(E.formIndex)}/${(C=E.fusionSpecies)==null?void 0:C.getName(E.fusionFormIndex)}`)}),this.splicedIcon.on("pointerout",()=>s.ui.hideTooltip()));const N=I&&E.shiny&&E.fusionShiny,S=N?E.variant:E.getVariant(!0);if(this.shinyIcon.setPositionRelative(this.nameText,R+this.genderText.displayWidth+1+(this.teraIcon.visible?this.teraIcon.displayWidth+1:0)+(this.splicedIcon.visible?this.splicedIcon.displayWidth+1:0),2.5),this.shinyIcon.setTexture(`shiny_star${N?"_1":""}`),this.shinyIcon.setVisible(E.isShiny()),this.shinyIcon.setTint(nO(S)),this.shinyIcon.visible){const C=N||S?`${S===2?D.t("common:epicShiny"):S===1?D.t("common:rareShiny"):D.t("common:commonShiny")}${N?`/${E.fusionVariant===2?D.t("common:epicShiny"):E.fusionVariant===1?D.t("common:rareShiny"):D.t("common:commonShiny")}`:""}`:"";this.shinyIcon.on("pointerover",()=>s.ui.showTooltip("",`${D.t("common:shinyOnHover")}${C?` (${C})`:""}`)),this.shinyIcon.on("pointerout",()=>s.ui.hideTooltip())}if(this.fusionShinyIcon.setPosition(this.shinyIcon.x,this.shinyIcon.y),this.fusionShinyIcon.setVisible(N),I&&this.fusionShinyIcon.setTint(nO(E.fusionVariant)),!this.player){this.nameText.visible&&(this.nameText.on("pointerover",()=>s.ui.showTooltip("",D.t("battleInfo:generation",{generation:D.t(`starterSelectUiHandler:gen${E.species.generation}`)}))),this.nameText.on("pointerout",()=>s.ui.hideTooltip()));const C=s.gameData.dexData[E.species.speciesId];this.ownedIcon.setVisible(!!C.caughtAttr);const U=E.getDexAttr();s.gameMode.isClassic&&s.gameData.starterData[E.species.getRootSpeciesId()].classicWinCount>0&&s.gameData.starterData[E.species.getRootSpeciesId(!0)].classicWinCount>0&&this.championRibbon.setVisible(!0);const _=(C.caughtAttr&U)<U,G=s.gameData.starterData[E.species.getRootSpeciesId()].abilityAttr,H=E.checkIfPlayerHasAbilityOfStarter(G);(_||!H)&&this.ownedIcon.setTint(8421504),this.boss&&this.updateBossSegmentDividers(E)}this.hpBar.setScale(E.getHpRatio(!0),1),this.lastHpFrame=this.hpBar.scaleX>.5?"high":this.hpBar.scaleX>.25?"medium":"low",this.hpBar.setFrame(this.lastHpFrame),this.player&&this.setHpNumbers(E.hp,E.getMaxHp()),this.lastHp=E.hp,this.lastMaxHp=E.getMaxHp(),this.setLevel(E.level),this.lastLevel=E.level,this.shinyIcon.setVisible(E.isShiny());const T=E.getTypes(!0,!1,void 0,!0);this.type1Icon.setTexture(`pbinfo_${this.player?"player":"enemy"}_type${T.length>1?"1":""}`),this.type1Icon.setFrame(L[T[0]].toLowerCase()),this.type2Icon.setVisible(T.length>1),this.type3Icon.setVisible(T.length>2),T.length>1&&this.type2Icon.setFrame(L[T[1]].toLowerCase()),T.length>2&&this.type3Icon.setFrame(L[T[2]].toLowerCase()),this.player&&(this.expMaskRect.x=E.levelExp/SO(E.level,E.species.growthRate)*510,this.lastExp=E.exp,this.lastLevelExp=E.levelExp,this.statValuesContainer.setPosition(8,7));const i=this.statOrder.map(()=>0);this.lastStats=i.join(""),this.updateStats(i)}getTextureName(){return`pbinfo_${this.player?"player":"enemy"}${!this.player&&this.boss?"_boss":this.mini?"_mini":""}`}setMini(E){if(this.mini===E)return;this.mini=E,this.box.setTexture(this.getTextureName()),this.statsBox.setTexture(`${this.getTextureName()}_stats`),this.player&&(this.y-=12*(E?1:-1),this.baseY=this.y),[this.nameText,this.genderText,this.teraIcon,this.splicedIcon,this.shinyIcon,this.statusIndicator,this.levelContainer].forEach(N=>N.y+=1.5*(E?-1:1)),[this.type1Icon,this.type2Icon,this.type3Icon].forEach(N=>{N.x+=4*(E?1:-1),N.y+=-8*(E?1:-1)}),this.statValuesContainer.x+=2*(E?1:-1),this.statValuesContainer.y+=-7*(E?1:-1),[this.hpNumbersContainer,this.expBar].forEach(N=>N.setVisible(!E))}toggleStats(E){s.tweens.add({targets:this.statsContainer,duration:KA(125),ease:"Sine.easeInOut",alpha:E?1:0})}updateBossSegments(E){const R=!!E.bossSegments;R!==this.boss&&(this.boss=R,[this.nameText,this.genderText,this.teraIcon,this.splicedIcon,this.shinyIcon,this.ownedIcon,this.championRibbon,this.statusIndicator,this.statValuesContainer].map(I=>I.x+=48*(R?-1:1)),this.hpBar.x+=38*(R?-1:1),this.hpBar.y+=2*(this.boss?-1:1),this.levelContainer.x+=2*(R?-1:1),this.hpBar.setTexture(`overlay_hp${R?"_boss":""}`),this.box.setTexture(this.getTextureName()),this.statsBox.setTexture(`${this.getTextureName()}_stats`)),this.bossSegments=R?E.bossSegments:0,this.updateBossSegmentDividers(E)}updateBossSegmentDividers(E){var R;for(;this.hpBarSegmentDividers.length;)(R=this.hpBarSegmentDividers.pop())==null||R.destroy();if(this.boss&&this.bossSegments>1){const I=s.uiTheme,N=E.getMaxHp();for(let S=1;S<this.bossSegments;S++){const T=Math.round(N/this.bossSegments*S)/N*this.hpBar.width,i=s.add.rectangle(0,0,1,this.hpBar.height-(I?0:1),E.bossSegmentIndex>=S?16777215:4210752);i.setOrigin(.5,0),i.setName("hpBar_divider_"+S.toString()),this.add(i),this.moveBelow(i,this.statsContainer),i.setPositionRelative(this.hpBar,T,I?0:1),this.hpBarSegmentDividers.push(i)}}}setOffset(E){this.offset!==E&&(this.offset=E,this.x+=10*(this.offset===this.player?1:-1),this.y+=27*(this.offset?1:-1),this.baseY=this.y)}updateInfo(E,R){return new Promise(I=>{var d,w,m;if(!s)return I();const N=((d=E.summonData.illusion)==null?void 0:d.gender)??E.gender;this.genderText.setText(SS(N)),this.genderText.setColor(WL(N));const S=this.lastName!==E.getNameToRender();S&&(this.updateNameText(E),this.genderText.setPositionRelative(this.nameText,this.nameText.displayWidth,0));const T=E.isTerastallized?E.getTeraType():L.UNKNOWN,i=this.lastTeraType!==T;i&&(this.teraIcon.setVisible(T!==L.UNKNOWN),this.teraIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+this.genderText.displayWidth+1,2),this.teraIcon.setTintFill(Phaser.Display.Color.GetColor(...iO(T))),this.lastTeraType=T);const o=E.isFusion(!0);if((S||i)&&(this.splicedIcon.setVisible(o),this.teraIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+this.genderText.displayWidth+1,2),this.splicedIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+this.genderText.displayWidth+1+(this.teraIcon.visible?this.teraIcon.displayWidth+1:0),1.5),this.shinyIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+this.genderText.displayWidth+1+(this.teraIcon.visible?this.teraIcon.displayWidth+1:0)+(this.splicedIcon.visible?this.splicedIcon.displayWidth+1:0),2.5)),this.lastStatus!==(((w=E.status)==null?void 0:w.effect)||J.NONE)){this.lastStatus=((m=E.status)==null?void 0:m.effect)||J.NONE,this.lastStatus!==J.NONE&&this.statusIndicator.setFrame(J[this.lastStatus].toLowerCase());const W=this.player?0:(this.ownedIcon.visible?8:0)+(this.championRibbon.visible?8:0);this.statusIndicator.setPositionRelative(this.nameText,W,11.5),this.statusIndicator.setVisible(!!this.lastStatus)}const C=E.getTypes(!0,!1,void 0,!0);this.type1Icon.setTexture(`pbinfo_${this.player?"player":"enemy"}_type${C.length>1?"1":""}`),this.type1Icon.setFrame(L[C[0]].toLowerCase()),this.type2Icon.setVisible(C.length>1),this.type3Icon.setVisible(C.length>2),C.length>1&&this.type2Icon.setFrame(L[C[1]].toLowerCase()),C.length>2&&this.type3Icon.setFrame(L[C[2]].toLowerCase());const U=r(()=>{const W=this.hpBar.scaleX>.5?"high":this.hpBar.scaleX>.25?"medium":"low";W!==this.lastHpFrame&&(this.hpBar.setFrame(W),this.lastHpFrame=W)},"updateHpFrame"),_=r(()=>{let W=R?0:Phaser.Math.Clamp(Math.abs(this.lastHp-E.hp)*5,250,5e3);const v=s.hpBarSpeed;v&&(W=v>=3?0:W/Math.pow(2,v)),s.tweens.add({targets:this.hpBar,ease:"Sine.easeOut",scaleX:E.getHpRatio(!0),duration:W,onUpdate:r(()=>{if(this.player&&this.lastHp!==E.hp){const $=Math.ceil(this.hpBar.scaleX*E.getMaxHp());this.setHpNumbers($,E.getMaxHp()),this.lastHp=$}U()},"onUpdate"),onComplete:r(()=>{U(),this.player&&this.lastHp!==E.hp&&(this.setHpNumbers(E.hp,E.getMaxHp()),this.lastHp=E.hp),I()},"onComplete")}),this.player||(this.lastHp=E.hp),this.lastMaxHp=E.getMaxHp()},"updatePokemonHp");if(this.player){const W=E.level>=s.getMaxExpLevel();if(this.lastExp!==E.exp||this.lastLevel!==E.level){const v=I,$=Math.max(Phaser.Tweens.Builders.GetEaseFunction("Cubic.easeIn")(1-Math.min(E.level-this.lastLevel,10)/10),.1);I=r(()=>this.updatePokemonExp(E,!1,$).then(()=>v()),"resolve")}else W!==this.lastLevelCapped&&this.setLevel(E.level);this.lastLevelCapped=W}if(this.lastHp!==E.hp||this.lastMaxHp!==E.getMaxHp())return _();!this.player&&this.lastLevel!==E.level&&(this.setLevel(E.level),this.lastLevel=E.level);const G=E.getStatStages(),H=G.join("");this.lastStats!==H&&(this.updateStats(G),this.lastStats=H),this.shinyIcon.setVisible(E.isShiny(!0));const c=o&&E.shiny&&E.fusionShiny,f=c?E.variant:E.getVariant(!0);this.shinyIcon.setTint(nO(f)),this.fusionShinyIcon.setVisible(c),o&&this.fusionShinyIcon.setTint(nO(E.fusionVariant)),this.fusionShinyIcon.setPosition(this.shinyIcon.x,this.shinyIcon.y),I()})}updateNameText(E){var T;let R=E.getNameToRender().replace(/[♂♀]/g,""),I;const N=We(0,0,R,Se.BATTLE_INFO);I=N.displayWidth;const S=((T=E.summonData.illusion)==null?void 0:T.gender)??E.gender;for(;I>(this.player||!this.boss?60:98)-((S!==ye.GENDERLESS?6:0)+(E.fusionSpecies?8:0)+(E.isShiny()?8:0)+(Math.min(E.level.toString().length,3)-3)*8);)R=`${R.slice(0,R.endsWith(".")?-2:-1).trimEnd()}.`,N.setText(R),I=N.displayWidth;N.destroy(),this.nameText.setText(R),this.lastName=E.getNameToRender(),this.nameText.visible&&this.nameText.setInteractive(new Phaser.Geom.Rectangle(0,0,this.nameText.width,this.nameText.height),Phaser.Geom.Rectangle.Contains)}updatePokemonExp(E,R,I=1){return new Promise(N=>{const S=this.lastLevel<E.level,T=Dv(this.lastLevel+1,E.species.growthRate),i=S?T:E.levelExp;let o=T?i/T:0;this.lastLevel>=s.getMaxExpLevel(!0)&&(S?o=1:o=0,R=!0);const C=Phaser.Tweens.Builders.GetEaseFunction("Sine.easeIn")(1-Math.max(this.lastLevel-100,0)/150);let U=this.visible&&!R?(i-this.lastLevelExp)/T*Nn.EXP_GAINS_DURATION_BASE*C*I:0;const _=s.expGainsSpeed;_&&_>=Wi.DEFAULT&&(U=_>=Wi.SKIP?Wi.DEFAULT:U/Math.pow(2,_)),o===1?(this.lastLevelExp=0,this.lastLevel++):(this.lastExp=E.exp,this.lastLevelExp=E.levelExp),U&&s.playSound("se/exp"),s.tweens.add({targets:this.expMaskRect,ease:"Sine.easeIn",x:o*510,duration:U,onComplete:r(()=>{if(!s)return N();if(U&&s.sound.stopByKey("se/exp"),o===1){s.playSound("se/level_up"),this.setLevel(this.lastLevel),s.time.delayedCall(500*I,()=>{this.expMaskRect.x=0,this.updateInfo(E,R).then(()=>N())});return}N()},"onComplete")})})}setLevel(E){const R=E>=s.getMaxExpLevel();this.levelNumbersContainer.removeAll(!0);const I=E.toString();for(let N=0;N<I.length;N++)this.levelNumbersContainer.add(s.add.image(N*8,0,`numbers${R&&this.player?"_red":""}`,I[N]));this.levelContainer.setX((this.player?-41:-50)-8*Math.max(I.length-3,0))}setHpNumbers(E,R){if(!this.player||!s)return;this.hpNumbersContainer.removeAll(!0);const I=E.toString(),N=R.toString();let S=0;for(let T=N.length-1;T>=0;T--)this.hpNumbersContainer.add(s.add.image(S++*-8,0,"numbers",N[T]));this.hpNumbersContainer.add(s.add.image(S++*-8,0,"numbers","/"));for(let T=I.length-1;T>=0;T--)this.hpNumbersContainer.add(s.add.image(S++*-8,0,"numbers",I[T]))}updateStats(E){this.statOrder.map((R,I)=>{R!==h.HP&&this.statNumbers[I].setFrame(E[R-1].toString())})}toggleFlyout(E){var R,I;(R=this.flyoutMenu)==null||R.toggleFlyout(E),E?(I=this.effectivenessContainer)==null||I.setVisible(!1):this.updateEffectiveness(this.currentEffectiveness)}updateEffectiveness(E){var R;if(!this.player){if(this.currentEffectiveness=E,!s.typeHints||E===void 0||(R=this.flyoutMenu)!=null&&R.flyoutVisible){this.effectivenessContainer.setVisible(!1);return}this.effectivenessText.setText(E),this.effectivenessWindow.width=10+this.effectivenessText.displayWidth,this.effectivenessContainer.setVisible(!0)}}getBaseY(){return this.baseY}resetY(){this.y=this.baseY}};r(Nn,"BattleInfo"),Nn.EXP_GAINS_DURATION_BASE=1650;let _a=Nn;const fc=class fc extends _a{constructor(){super(Math.floor(s.game.canvas.width/6)-10,-72,!0)}};r(fc,"PlayerBattleInfo");let uo=fc;const dc=class dc extends _a{constructor(){super(140,-141,!1)}setMini(E){}};r(dc,"EnemyBattleInfo");let MP=dc;var je=(t=>(t[t.NONE=0]="NONE",t[t.MAKES_CONTACT=1]="MAKES_CONTACT",t[t.IGNORE_PROTECT=2]="IGNORE_PROTECT",t[t.SOUND_BASED=4]="SOUND_BASED",t[t.HIDE_USER=8]="HIDE_USER",t[t.HIDE_TARGET=16]="HIDE_TARGET",t[t.BITING_MOVE=32]="BITING_MOVE",t[t.PULSE_MOVE=64]="PULSE_MOVE",t[t.PUNCHING_MOVE=128]="PUNCHING_MOVE",t[t.SLICING_MOVE=256]="SLICING_MOVE",t[t.RECKLESS_MOVE=512]="RECKLESS_MOVE",t[t.BALLBOMB_MOVE=1024]="BALLBOMB_MOVE",t[t.POWDER_MOVE=2048]="POWDER_MOVE",t[t.DANCE_MOVE=4096]="DANCE_MOVE",t[t.WIND_MOVE=8192]="WIND_MOVE",t[t.TRIAGE_MOVE=16384]="TRIAGE_MOVE",t[t.IGNORE_ABILITIES=32768]="IGNORE_ABILITIES",t[t.CHECK_ALL_HITS=65536]="CHECK_ALL_HITS",t[t.IGNORE_SUBSTITUTE=131072]="IGNORE_SUBSTITUTE",t[t.REDIRECT_COUNTER=262144]="REDIRECT_COUNTER",t[t.REFLECTABLE=524288]="REFLECTABLE",t))(je||{}),O=(t=>(t[t.NONE=0]="NONE",t[t.STENCH=1]="STENCH",t[t.DRIZZLE=2]="DRIZZLE",t[t.SPEED_BOOST=3]="SPEED_BOOST",t[t.BATTLE_ARMOR=4]="BATTLE_ARMOR",t[t.STURDY=5]="STURDY",t[t.DAMP=6]="DAMP",t[t.LIMBER=7]="LIMBER",t[t.SAND_VEIL=8]="SAND_VEIL",t[t.STATIC=9]="STATIC",t[t.VOLT_ABSORB=10]="VOLT_ABSORB",t[t.WATER_ABSORB=11]="WATER_ABSORB",t[t.OBLIVIOUS=12]="OBLIVIOUS",t[t.CLOUD_NINE=13]="CLOUD_NINE",t[t.COMPOUND_EYES=14]="COMPOUND_EYES",t[t.INSOMNIA=15]="INSOMNIA",t[t.COLOR_CHANGE=16]="COLOR_CHANGE",t[t.IMMUNITY=17]="IMMUNITY",t[t.FLASH_FIRE=18]="FLASH_FIRE",t[t.SHIELD_DUST=19]="SHIELD_DUST",t[t.OWN_TEMPO=20]="OWN_TEMPO",t[t.SUCTION_CUPS=21]="SUCTION_CUPS",t[t.INTIMIDATE=22]="INTIMIDATE",t[t.SHADOW_TAG=23]="SHADOW_TAG",t[t.ROUGH_SKIN=24]="ROUGH_SKIN",t[t.WONDER_GUARD=25]="WONDER_GUARD",t[t.LEVITATE=26]="LEVITATE",t[t.EFFECT_SPORE=27]="EFFECT_SPORE",t[t.SYNCHRONIZE=28]="SYNCHRONIZE",t[t.CLEAR_BODY=29]="CLEAR_BODY",t[t.NATURAL_CURE=30]="NATURAL_CURE",t[t.LIGHTNING_ROD=31]="LIGHTNING_ROD",t[t.SERENE_GRACE=32]="SERENE_GRACE",t[t.SWIFT_SWIM=33]="SWIFT_SWIM",t[t.CHLOROPHYLL=34]="CHLOROPHYLL",t[t.ILLUMINATE=35]="ILLUMINATE",t[t.TRACE=36]="TRACE",t[t.HUGE_POWER=37]="HUGE_POWER",t[t.POISON_POINT=38]="POISON_POINT",t[t.INNER_FOCUS=39]="INNER_FOCUS",t[t.MAGMA_ARMOR=40]="MAGMA_ARMOR",t[t.WATER_VEIL=41]="WATER_VEIL",t[t.MAGNET_PULL=42]="MAGNET_PULL",t[t.SOUNDPROOF=43]="SOUNDPROOF",t[t.RAIN_DISH=44]="RAIN_DISH",t[t.SAND_STREAM=45]="SAND_STREAM",t[t.PRESSURE=46]="PRESSURE",t[t.THICK_FAT=47]="THICK_FAT",t[t.EARLY_BIRD=48]="EARLY_BIRD",t[t.FLAME_BODY=49]="FLAME_BODY",t[t.RUN_AWAY=50]="RUN_AWAY",t[t.KEEN_EYE=51]="KEEN_EYE",t[t.HYPER_CUTTER=52]="HYPER_CUTTER",t[t.PICKUP=53]="PICKUP",t[t.TRUANT=54]="TRUANT",t[t.HUSTLE=55]="HUSTLE",t[t.CUTE_CHARM=56]="CUTE_CHARM",t[t.PLUS=57]="PLUS",t[t.MINUS=58]="MINUS",t[t.FORECAST=59]="FORECAST",t[t.STICKY_HOLD=60]="STICKY_HOLD",t[t.SHED_SKIN=61]="SHED_SKIN",t[t.GUTS=62]="GUTS",t[t.MARVEL_SCALE=63]="MARVEL_SCALE",t[t.LIQUID_OOZE=64]="LIQUID_OOZE",t[t.OVERGROW=65]="OVERGROW",t[t.BLAZE=66]="BLAZE",t[t.TORRENT=67]="TORRENT",t[t.SWARM=68]="SWARM",t[t.ROCK_HEAD=69]="ROCK_HEAD",t[t.DROUGHT=70]="DROUGHT",t[t.ARENA_TRAP=71]="ARENA_TRAP",t[t.VITAL_SPIRIT=72]="VITAL_SPIRIT",t[t.WHITE_SMOKE=73]="WHITE_SMOKE",t[t.PURE_POWER=74]="PURE_POWER",t[t.SHELL_ARMOR=75]="SHELL_ARMOR",t[t.AIR_LOCK=76]="AIR_LOCK",t[t.TANGLED_FEET=77]="TANGLED_FEET",t[t.MOTOR_DRIVE=78]="MOTOR_DRIVE",t[t.RIVALRY=79]="RIVALRY",t[t.STEADFAST=80]="STEADFAST",t[t.SNOW_CLOAK=81]="SNOW_CLOAK",t[t.GLUTTONY=82]="GLUTTONY",t[t.ANGER_POINT=83]="ANGER_POINT",t[t.UNBURDEN=84]="UNBURDEN",t[t.HEATPROOF=85]="HEATPROOF",t[t.SIMPLE=86]="SIMPLE",t[t.DRY_SKIN=87]="DRY_SKIN",t[t.DOWNLOAD=88]="DOWNLOAD",t[t.IRON_FIST=89]="IRON_FIST",t[t.POISON_HEAL=90]="POISON_HEAL",t[t.ADAPTABILITY=91]="ADAPTABILITY",t[t.SKILL_LINK=92]="SKILL_LINK",t[t.HYDRATION=93]="HYDRATION",t[t.SOLAR_POWER=94]="SOLAR_POWER",t[t.QUICK_FEET=95]="QUICK_FEET",t[t.NORMALIZE=96]="NORMALIZE",t[t.SNIPER=97]="SNIPER",t[t.MAGIC_GUARD=98]="MAGIC_GUARD",t[t.NO_GUARD=99]="NO_GUARD",t[t.STALL=100]="STALL",t[t.TECHNICIAN=101]="TECHNICIAN",t[t.LEAF_GUARD=102]="LEAF_GUARD",t[t.KLUTZ=103]="KLUTZ",t[t.MOLD_BREAKER=104]="MOLD_BREAKER",t[t.SUPER_LUCK=105]="SUPER_LUCK",t[t.AFTERMATH=106]="AFTERMATH",t[t.ANTICIPATION=107]="ANTICIPATION",t[t.FOREWARN=108]="FOREWARN",t[t.UNAWARE=109]="UNAWARE",t[t.TINTED_LENS=110]="TINTED_LENS",t[t.FILTER=111]="FILTER",t[t.SLOW_START=112]="SLOW_START",t[t.SCRAPPY=113]="SCRAPPY",t[t.STORM_DRAIN=114]="STORM_DRAIN",t[t.ICE_BODY=115]="ICE_BODY",t[t.SOLID_ROCK=116]="SOLID_ROCK",t[t.SNOW_WARNING=117]="SNOW_WARNING",t[t.HONEY_GATHER=118]="HONEY_GATHER",t[t.FRISK=119]="FRISK",t[t.RECKLESS=120]="RECKLESS",t[t.MULTITYPE=121]="MULTITYPE",t[t.FLOWER_GIFT=122]="FLOWER_GIFT",t[t.BAD_DREAMS=123]="BAD_DREAMS",t[t.PICKPOCKET=124]="PICKPOCKET",t[t.SHEER_FORCE=125]="SHEER_FORCE",t[t.CONTRARY=126]="CONTRARY",t[t.UNNERVE=127]="UNNERVE",t[t.DEFIANT=128]="DEFIANT",t[t.DEFEATIST=129]="DEFEATIST",t[t.CURSED_BODY=130]="CURSED_BODY",t[t.HEALER=131]="HEALER",t[t.FRIEND_GUARD=132]="FRIEND_GUARD",t[t.WEAK_ARMOR=133]="WEAK_ARMOR",t[t.HEAVY_METAL=134]="HEAVY_METAL",t[t.LIGHT_METAL=135]="LIGHT_METAL",t[t.MULTISCALE=136]="MULTISCALE",t[t.TOXIC_BOOST=137]="TOXIC_BOOST",t[t.FLARE_BOOST=138]="FLARE_BOOST",t[t.HARVEST=139]="HARVEST",t[t.TELEPATHY=140]="TELEPATHY",t[t.MOODY=141]="MOODY",t[t.OVERCOAT=142]="OVERCOAT",t[t.POISON_TOUCH=143]="POISON_TOUCH",t[t.REGENERATOR=144]="REGENERATOR",t[t.BIG_PECKS=145]="BIG_PECKS",t[t.SAND_RUSH=146]="SAND_RUSH",t[t.WONDER_SKIN=147]="WONDER_SKIN",t[t.ANALYTIC=148]="ANALYTIC",t[t.ILLUSION=149]="ILLUSION",t[t.IMPOSTER=150]="IMPOSTER",t[t.INFILTRATOR=151]="INFILTRATOR",t[t.MUMMY=152]="MUMMY",t[t.MOXIE=153]="MOXIE",t[t.JUSTIFIED=154]="JUSTIFIED",t[t.RATTLED=155]="RATTLED",t[t.MAGIC_BOUNCE=156]="MAGIC_BOUNCE",t[t.SAP_SIPPER=157]="SAP_SIPPER",t[t.PRANKSTER=158]="PRANKSTER",t[t.SAND_FORCE=159]="SAND_FORCE",t[t.IRON_BARBS=160]="IRON_BARBS",t[t.ZEN_MODE=161]="ZEN_MODE",t[t.VICTORY_STAR=162]="VICTORY_STAR",t[t.TURBOBLAZE=163]="TURBOBLAZE",t[t.TERAVOLT=164]="TERAVOLT",t[t.AROMA_VEIL=165]="AROMA_VEIL",t[t.FLOWER_VEIL=166]="FLOWER_VEIL",t[t.CHEEK_POUCH=167]="CHEEK_POUCH",t[t.PROTEAN=168]="PROTEAN",t[t.FUR_COAT=169]="FUR_COAT",t[t.MAGICIAN=170]="MAGICIAN",t[t.BULLETPROOF=171]="BULLETPROOF",t[t.COMPETITIVE=172]="COMPETITIVE",t[t.STRONG_JAW=173]="STRONG_JAW",t[t.REFRIGERATE=174]="REFRIGERATE",t[t.SWEET_VEIL=175]="SWEET_VEIL",t[t.STANCE_CHANGE=176]="STANCE_CHANGE",t[t.GALE_WINGS=177]="GALE_WINGS",t[t.MEGA_LAUNCHER=178]="MEGA_LAUNCHER",t[t.GRASS_PELT=179]="GRASS_PELT",t[t.SYMBIOSIS=180]="SYMBIOSIS",t[t.TOUGH_CLAWS=181]="TOUGH_CLAWS",t[t.PIXILATE=182]="PIXILATE",t[t.GOOEY=183]="GOOEY",t[t.AERILATE=184]="AERILATE",t[t.PARENTAL_BOND=185]="PARENTAL_BOND",t[t.DARK_AURA=186]="DARK_AURA",t[t.FAIRY_AURA=187]="FAIRY_AURA",t[t.AURA_BREAK=188]="AURA_BREAK",t[t.PRIMORDIAL_SEA=189]="PRIMORDIAL_SEA",t[t.DESOLATE_LAND=190]="DESOLATE_LAND",t[t.DELTA_STREAM=191]="DELTA_STREAM",t[t.STAMINA=192]="STAMINA",t[t.WIMP_OUT=193]="WIMP_OUT",t[t.EMERGENCY_EXIT=194]="EMERGENCY_EXIT",t[t.WATER_COMPACTION=195]="WATER_COMPACTION",t[t.MERCILESS=196]="MERCILESS",t[t.SHIELDS_DOWN=197]="SHIELDS_DOWN",t[t.STAKEOUT=198]="STAKEOUT",t[t.WATER_BUBBLE=199]="WATER_BUBBLE",t[t.STEELWORKER=200]="STEELWORKER",t[t.BERSERK=201]="BERSERK",t[t.SLUSH_RUSH=202]="SLUSH_RUSH",t[t.LONG_REACH=203]="LONG_REACH",t[t.LIQUID_VOICE=204]="LIQUID_VOICE",t[t.TRIAGE=205]="TRIAGE",t[t.GALVANIZE=206]="GALVANIZE",t[t.SURGE_SURFER=207]="SURGE_SURFER",t[t.SCHOOLING=208]="SCHOOLING",t[t.DISGUISE=209]="DISGUISE",t[t.BATTLE_BOND=210]="BATTLE_BOND",t[t.POWER_CONSTRUCT=211]="POWER_CONSTRUCT",t[t.CORROSION=212]="CORROSION",t[t.COMATOSE=213]="COMATOSE",t[t.QUEENLY_MAJESTY=214]="QUEENLY_MAJESTY",t[t.INNARDS_OUT=215]="INNARDS_OUT",t[t.DANCER=216]="DANCER",t[t.BATTERY=217]="BATTERY",t[t.FLUFFY=218]="FLUFFY",t[t.DAZZLING=219]="DAZZLING",t[t.SOUL_HEART=220]="SOUL_HEART",t[t.TANGLING_HAIR=221]="TANGLING_HAIR",t[t.RECEIVER=222]="RECEIVER",t[t.POWER_OF_ALCHEMY=223]="POWER_OF_ALCHEMY",t[t.BEAST_BOOST=224]="BEAST_BOOST",t[t.RKS_SYSTEM=225]="RKS_SYSTEM",t[t.ELECTRIC_SURGE=226]="ELECTRIC_SURGE",t[t.PSYCHIC_SURGE=227]="PSYCHIC_SURGE",t[t.MISTY_SURGE=228]="MISTY_SURGE",t[t.GRASSY_SURGE=229]="GRASSY_SURGE",t[t.FULL_METAL_BODY=230]="FULL_METAL_BODY",t[t.SHADOW_SHIELD=231]="SHADOW_SHIELD",t[t.PRISM_ARMOR=232]="PRISM_ARMOR",t[t.NEUROFORCE=233]="NEUROFORCE",t[t.INTREPID_SWORD=234]="INTREPID_SWORD",t[t.DAUNTLESS_SHIELD=235]="DAUNTLESS_SHIELD",t[t.LIBERO=236]="LIBERO",t[t.BALL_FETCH=237]="BALL_FETCH",t[t.COTTON_DOWN=238]="COTTON_DOWN",t[t.PROPELLER_TAIL=239]="PROPELLER_TAIL",t[t.MIRROR_ARMOR=240]="MIRROR_ARMOR",t[t.GULP_MISSILE=241]="GULP_MISSILE",t[t.STALWART=242]="STALWART",t[t.STEAM_ENGINE=243]="STEAM_ENGINE",t[t.PUNK_ROCK=244]="PUNK_ROCK",t[t.SAND_SPIT=245]="SAND_SPIT",t[t.ICE_SCALES=246]="ICE_SCALES",t[t.RIPEN=247]="RIPEN",t[t.ICE_FACE=248]="ICE_FACE",t[t.POWER_SPOT=249]="POWER_SPOT",t[t.MIMICRY=250]="MIMICRY",t[t.SCREEN_CLEANER=251]="SCREEN_CLEANER",t[t.STEELY_SPIRIT=252]="STEELY_SPIRIT",t[t.PERISH_BODY=253]="PERISH_BODY",t[t.WANDERING_SPIRIT=254]="WANDERING_SPIRIT",t[t.GORILLA_TACTICS=255]="GORILLA_TACTICS",t[t.NEUTRALIZING_GAS=256]="NEUTRALIZING_GAS",t[t.PASTEL_VEIL=257]="PASTEL_VEIL",t[t.HUNGER_SWITCH=258]="HUNGER_SWITCH",t[t.QUICK_DRAW=259]="QUICK_DRAW",t[t.UNSEEN_FIST=260]="UNSEEN_FIST",t[t.CURIOUS_MEDICINE=261]="CURIOUS_MEDICINE",t[t.TRANSISTOR=262]="TRANSISTOR",t[t.DRAGONS_MAW=263]="DRAGONS_MAW",t[t.CHILLING_NEIGH=264]="CHILLING_NEIGH",t[t.GRIM_NEIGH=265]="GRIM_NEIGH",t[t.AS_ONE_GLASTRIER=266]="AS_ONE_GLASTRIER",t[t.AS_ONE_SPECTRIER=267]="AS_ONE_SPECTRIER",t[t.LINGERING_AROMA=268]="LINGERING_AROMA",t[t.SEED_SOWER=269]="SEED_SOWER",t[t.THERMAL_EXCHANGE=270]="THERMAL_EXCHANGE",t[t.ANGER_SHELL=271]="ANGER_SHELL",t[t.PURIFYING_SALT=272]="PURIFYING_SALT",t[t.WELL_BAKED_BODY=273]="WELL_BAKED_BODY",t[t.WIND_RIDER=274]="WIND_RIDER",t[t.GUARD_DOG=275]="GUARD_DOG",t[t.ROCKY_PAYLOAD=276]="ROCKY_PAYLOAD",t[t.WIND_POWER=277]="WIND_POWER",t[t.ZERO_TO_HERO=278]="ZERO_TO_HERO",t[t.COMMANDER=279]="COMMANDER",t[t.ELECTROMORPHOSIS=280]="ELECTROMORPHOSIS",t[t.PROTOSYNTHESIS=281]="PROTOSYNTHESIS",t[t.QUARK_DRIVE=282]="QUARK_DRIVE",t[t.GOOD_AS_GOLD=283]="GOOD_AS_GOLD",t[t.VESSEL_OF_RUIN=284]="VESSEL_OF_RUIN",t[t.SWORD_OF_RUIN=285]="SWORD_OF_RUIN",t[t.TABLETS_OF_RUIN=286]="TABLETS_OF_RUIN",t[t.BEADS_OF_RUIN=287]="BEADS_OF_RUIN",t[t.ORICHALCUM_PULSE=288]="ORICHALCUM_PULSE",t[t.HADRON_ENGINE=289]="HADRON_ENGINE",t[t.OPPORTUNIST=290]="OPPORTUNIST",t[t.CUD_CHEW=291]="CUD_CHEW",t[t.SHARPNESS=292]="SHARPNESS",t[t.SUPREME_OVERLORD=293]="SUPREME_OVERLORD",t[t.COSTAR=294]="COSTAR",t[t.TOXIC_DEBRIS=295]="TOXIC_DEBRIS",t[t.ARMOR_TAIL=296]="ARMOR_TAIL",t[t.EARTH_EATER=297]="EARTH_EATER",t[t.MYCELIUM_MIGHT=298]="MYCELIUM_MIGHT",t[t.MINDS_EYE=299]="MINDS_EYE",t[t.SUPERSWEET_SYRUP=300]="SUPERSWEET_SYRUP",t[t.HOSPITALITY=301]="HOSPITALITY",t[t.TOXIC_CHAIN=302]="TOXIC_CHAIN",t[t.EMBODY_ASPECT_TEAL=303]="EMBODY_ASPECT_TEAL",t[t.EMBODY_ASPECT_WELLSPRING=304]="EMBODY_ASPECT_WELLSPRING",t[t.EMBODY_ASPECT_HEARTHFLAME=305]="EMBODY_ASPECT_HEARTHFLAME",t[t.EMBODY_ASPECT_CORNERSTONE=306]="EMBODY_ASPECT_CORNERSTONE",t[t.TERA_SHIFT=307]="TERA_SHIFT",t[t.TERA_SHELL=308]="TERA_SHELL",t[t.TERAFORM_ZERO=309]="TERAFORM_ZERO",t[t.POISON_PUPPETEER=310]="POISON_PUPPETEER",t))(O||{});const T8={},Kc=class Kc{constructor(){this.SEED_OVERRIDE="",this.DAILY_RUN_SEED_OVERRIDE=null,this.WEATHER_OVERRIDE=X.NONE,this.BATTLE_STYLE_OVERRIDE=null,this.STARTING_WAVE_OVERRIDE=0,this.STARTING_BIOME_OVERRIDE=n.TOWN,this.ARENA_TINT_OVERRIDE=null,this.XP_MULTIPLIER_OVERRIDE=null,this.LEVEL_CAP_OVERRIDE=0,this.NEVER_CRIT_OVERRIDE=!1,this.STARTING_MONEY_OVERRIDE=0,this.WAIVE_SHOP_FEES_OVERRIDE=!1,this.WAIVE_ROLL_FEE_OVERRIDE=!1,this.FREE_CANDY_UPGRADE_OVERRIDE=!1,this.POKEBALL_OVERRIDE={active:!1,pokeballs:{[Me.POKEBALL]:5,[Me.GREAT_BALL]:0,[Me.ULTRA_BALL]:0,[Me.ROGUE_BALL]:0,[Me.MASTER_BALL]:0}},this.ITEM_UNLOCK_OVERRIDE=[],this.BYPASS_TUTORIAL_SKIP_OVERRIDE=!1,this.ACHIEVEMENTS_REUNLOCK_OVERRIDE=!1,this.STATUS_ACTIVATION_OVERRIDE=null,this.CONFUSION_ACTIVATION_OVERRIDE=null,this.STARTER_FORM_OVERRIDES={},this.STARTING_LEVEL_OVERRIDE=0,this.STARTER_SPECIES_OVERRIDE=0,this.STARTER_FUSION_OVERRIDE=!1,this.STARTER_FUSION_SPECIES_OVERRIDE=0,this.ABILITY_OVERRIDE=O.NONE,this.PASSIVE_ABILITY_OVERRIDE=O.NONE,this.HAS_PASSIVE_ABILITY_OVERRIDE=null,this.STATUS_OVERRIDE=J.NONE,this.GENDER_OVERRIDE=null,this.MOVESET_OVERRIDE=[],this.SHINY_OVERRIDE=null,this.VARIANT_OVERRIDE=null,this.OPP_SPECIES_OVERRIDE=0,this.OPP_FUSION_OVERRIDE=!1,this.OPP_FUSION_SPECIES_OVERRIDE=0,this.OPP_LEVEL_OVERRIDE=0,this.OPP_ABILITY_OVERRIDE=O.NONE,this.OPP_PASSIVE_ABILITY_OVERRIDE=O.NONE,this.OPP_HAS_PASSIVE_ABILITY_OVERRIDE=null,this.OPP_STATUS_OVERRIDE=J.NONE,this.OPP_GENDER_OVERRIDE=null,this.OPP_MOVESET_OVERRIDE=[],this.OPP_SHINY_OVERRIDE=null,this.OPP_VARIANT_OVERRIDE=null,this.OPP_IVS_OVERRIDE=[],this.OPP_FORM_OVERRIDES={},this.OPP_HEALTH_SEGMENTS_OVERRIDE=0,this.EGG_IMMEDIATE_HATCH_OVERRIDE=!1,this.EGG_TIER_OVERRIDE=null,this.EGG_SHINY_OVERRIDE=!1,this.EGG_VARIANT_OVERRIDE=null,this.EGG_FREE_GACHA_PULLS_OVERRIDE=!1,this.EGG_GACHA_PULL_COUNT_OVERRIDE=0,this.UNLIMITED_EGG_COUNT_OVERRIDE=!1,this.MYSTERY_ENCOUNTER_RATE_OVERRIDE=null,this.MYSTERY_ENCOUNTER_TIER_OVERRIDE=null,this.MYSTERY_ENCOUNTER_OVERRIDE=null,this.STARTING_MODIFIER_OVERRIDE=[],this.OPP_MODIFIER_OVERRIDE=[],this.STARTING_HELD_ITEMS_OVERRIDE=[],this.OPP_HELD_ITEMS_OVERRIDE=[],this.ITEM_REWARD_OVERRIDE=[],this.DISABLE_STANDARD_TRAINERS_OVERRIDE=!1,this.BATTLE_TYPE_OVERRIDE=null,this.RANDOM_TRAINER_OVERRIDE=null}};r(Kc,"DefaultOverrides");let PP=Kc;const n8=new PP,Ze={...n8,...T8},Fc=class Fc{constructor(E,R=0,I){this.toxicTurnCount=0,this.effect=E,this.toxicTurnCount=R,this.sleepTurnsRemaining=I}incrementTurn(){this.toxicTurnCount++,this.sleepTurnsRemaining&&this.sleepTurnsRemaining--}isPostTurn(){return this.effect===J.POISON||this.effect===J.TOXIC||this.effect===J.BURN}};r(Fc,"Status");let pN=Fc;function TS(t){switch(t){case J.POISON:return"statusEffect:poison";case J.TOXIC:return"statusEffect:toxic";case J.PARALYSIS:return"statusEffect:paralysis";case J.SLEEP:return"statusEffect:sleep";case J.FREEZE:return"statusEffect:freeze";case J.BURN:return"statusEffect:burn";default:return"statusEffect:none"}}r(TS,"getStatusEffectMessageKey");function a8(t,E,R){if(t===J.NONE)return"";if(!R){const N=`${TS(t)}.obtain`;return D.t(N,{pokemonNameWithAffix:E})}const I=`${TS(t)}.obtainSource`;return D.t(I,{pokemonNameWithAffix:E,sourceText:R})}r(a8,"getStatusEffectObtainText");function Pv(t,E){if(t===J.NONE)return"";const R=`${TS(t)}.activation`;return D.t(R,{pokemonNameWithAffix:E})}r(Pv,"getStatusEffectActivationText");function Gv(t,E){if(t===J.NONE)return"";const R=`${TS(t)}.overlap`;return D.t(R,{pokemonNameWithAffix:E})}r(Gv,"getStatusEffectOverlapText");function qI(t,E){if(t===J.NONE)return"";const R=`${TS(t)}.heal`;return D.t(R,{pokemonNameWithAffix:E})}r(qI,"getStatusEffectHealText");function _v(t){if(t===J.NONE)return"";const E=`${TS(t)}.description`;return D.t(E)}r(_v,"getStatusEffectDescriptor");function r8(t){switch(t){case J.POISON:case J.TOXIC:case J.PARALYSIS:case J.BURN:return 1.5;case J.SLEEP:case J.FREEZE:return 2.5}return 1}r(r8,"getStatusEffectCatchRateMultiplier");function i8(t,E){return!t||t.effect===J.NONE||t.effect===J.FAINT?E:!E||E.effect===J.NONE||E.effect===J.FAINT||V6(0,2)?t:E}r(i8,"getRandomStatus");function _T(){return[J.POISON,J.TOXIC,J.PARALYSIS,J.SLEEP,J.FREEZE,J.BURN]}r(_T,"getNonVolatileStatusEffects");function tV(t){return _T().includes(t)}r(tV,"isNonVolatileStatusEffect");var ee=(t=>(t[t.USER=0]="USER",t[t.OTHER=1]="OTHER",t[t.ALL_OTHERS=2]="ALL_OTHERS",t[t.NEAR_OTHER=3]="NEAR_OTHER",t[t.ALL_NEAR_OTHERS=4]="ALL_NEAR_OTHERS",t[t.NEAR_ENEMY=5]="NEAR_ENEMY",t[t.ALL_NEAR_ENEMIES=6]="ALL_NEAR_ENEMIES",t[t.RANDOM_NEAR_ENEMY=7]="RANDOM_NEAR_ENEMY",t[t.ALL_ENEMIES=8]="ALL_ENEMIES",t[t.ATTACKER=9]="ATTACKER",t[t.NEAR_ALLY=10]="NEAR_ALLY",t[t.ALLY=11]="ALLY",t[t.USER_OR_NEAR_ALLY=12]="USER_OR_NEAR_ALLY",t[t.USER_AND_ALLIES=13]="USER_AND_ALLIES",t[t.ALL=14]="ALL",t[t.USER_SIDE=15]="USER_SIDE",t[t.ENEMY_SIDE=16]="ENEMY_SIDE",t[t.BOTH_SIDES=17]="BOTH_SIDES",t[t.PARTY=18]="PARTY",t[t.CURSE=19]="CURSE",t))(ee||{}),u=(t=>(t[t.PHYSICAL=0]="PHYSICAL",t[t.SPECIAL=1]="SPECIAL",t[t.STATUS=2]="STATUS",t))(u||{}),oe=(t=>(t.NONE="NONE",t.MUD_SPORT="MUD_SPORT",t.WATER_SPORT="WATER_SPORT",t.SPIKES="SPIKES",t.TOXIC_SPIKES="TOXIC_SPIKES",t.MIST="MIST",t.FUTURE_SIGHT="FUTURE_SIGHT",t.DOOM_DESIRE="DOOM_DESIRE",t.WISH="WISH",t.STEALTH_ROCK="STEALTH_ROCK",t.STICKY_WEB="STICKY_WEB",t.TRICK_ROOM="TRICK_ROOM",t.GRAVITY="GRAVITY",t.REFLECT="REFLECT",t.LIGHT_SCREEN="LIGHT_SCREEN",t.AURORA_VEIL="AURORA_VEIL",t.QUICK_GUARD="QUICK_GUARD",t.WIDE_GUARD="WIDE_GUARD",t.MAT_BLOCK="MAT_BLOCK",t.CRAFTY_SHIELD="CRAFTY_SHIELD",t.TAILWIND="TAILWIND",t.HAPPY_HOUR="HAPPY_HOUR",t.SAFEGUARD="SAFEGUARD",t.NO_CRIT="NO_CRIT",t.IMPRISON="IMPRISON",t.ION_DELUGE="ION_DELUGE",t.FIRE_GRASS_PLEDGE="FIRE_GRASS_PLEDGE",t.WATER_FIRE_PLEDGE="WATER_FIRE_PLEDGE",t.GRASS_WATER_PLEDGE="GRASS_WATER_PLEDGE",t.FAIRY_LOCK="FAIRY_LOCK",t.NEUTRALIZING_GAS="NEUTRALIZING_GAS",t))(oe||{}),Y=(t=>(t.NONE="NONE",t.RECHARGING="RECHARGING",t.FLINCHED="FLINCHED",t.INTERRUPTED="INTERRUPTED",t.CONFUSED="CONFUSED",t.INFATUATED="INFATUATED",t.SEEDED="SEEDED",t.NIGHTMARE="NIGHTMARE",t.FRENZY="FRENZY",t.CHARGING="CHARGING",t.ENCORE="ENCORE",t.HELPING_HAND="HELPING_HAND",t.INGRAIN="INGRAIN",t.OCTOLOCK="OCTOLOCK",t.AQUA_RING="AQUA_RING",t.DROWSY="DROWSY",t.TRAPPED="TRAPPED",t.BIND="BIND",t.WRAP="WRAP",t.FIRE_SPIN="FIRE_SPIN",t.WHIRLPOOL="WHIRLPOOL",t.CLAMP="CLAMP",t.SAND_TOMB="SAND_TOMB",t.MAGMA_STORM="MAGMA_STORM",t.SNAP_TRAP="SNAP_TRAP",t.THUNDER_CAGE="THUNDER_CAGE",t.INFESTATION="INFESTATION",t.PROTECTED="PROTECTED",t.SPIKY_SHIELD="SPIKY_SHIELD",t.KINGS_SHIELD="KINGS_SHIELD",t.OBSTRUCT="OBSTRUCT",t.SILK_TRAP="SILK_TRAP",t.BANEFUL_BUNKER="BANEFUL_BUNKER",t.BURNING_BULWARK="BURNING_BULWARK",t.ENDURING="ENDURING",t.STURDY="STURDY",t.PERISH_SONG="PERISH_SONG",t.TRUANT="TRUANT",t.SLOW_START="SLOW_START",t.PROTOSYNTHESIS="PROTOSYNTHESIS",t.QUARK_DRIVE="QUARK_DRIVE",t.FLYING="FLYING",t.UNDERGROUND="UNDERGROUND",t.UNDERWATER="UNDERWATER",t.HIDDEN="HIDDEN",t.FIRE_BOOST="FIRE_BOOST",t.CRIT_BOOST="CRIT_BOOST",t.ALWAYS_CRIT="ALWAYS_CRIT",t.IGNORE_ACCURACY="IGNORE_ACCURACY",t.BYPASS_SLEEP="BYPASS_SLEEP",t.IGNORE_FLYING="IGNORE_FLYING",t.SALT_CURED="SALT_CURED",t.CURSED="CURSED",t.CHARGED="CHARGED",t.ROOSTED="ROOSTED",t.FLOATING="FLOATING",t.MINIMIZED="MINIMIZED",t.DESTINY_BOND="DESTINY_BOND",t.CENTER_OF_ATTENTION="CENTER_OF_ATTENTION",t.ICE_FACE="ICE_FACE",t.DISGUISE="DISGUISE",t.STOCKPILING="STOCKPILING",t.RECEIVE_DOUBLE_DAMAGE="RECEIVE_DOUBLE_DAMAGE",t.ALWAYS_GET_HIT="ALWAYS_GET_HIT",t.DISABLED="DISABLED",t.SUBSTITUTE="SUBSTITUTE",t.IGNORE_GHOST="IGNORE_GHOST",t.IGNORE_DARK="IGNORE_DARK",t.GULP_MISSILE_ARROKUDA="GULP_MISSILE_ARROKUDA",t.GULP_MISSILE_PIKACHU="GULP_MISSILE_PIKACHU",t.BEAK_BLAST_CHARGING="BEAK_BLAST_CHARGING",t.SHELL_TRAP="SHELL_TRAP",t.DRAGON_CHEER="DRAGON_CHEER",t.NO_RETREAT="NO_RETREAT",t.GORILLA_TACTICS="GORILLA_TACTICS",t.UNBURDEN="UNBURDEN",t.THROAT_CHOPPED="THROAT_CHOPPED",t.TAR_SHOT="TAR_SHOT",t.BURNED_UP="BURNED_UP",t.DOUBLE_SHOCKED="DOUBLE_SHOCKED",t.AUTOTOMIZED="AUTOTOMIZED",t.MYSTERY_ENCOUNTER_POST_SUMMON="MYSTERY_ENCOUNTER_POST_SUMMON",t.POWER_TRICK="POWER_TRICK",t.HEAL_BLOCK="HEAL_BLOCK",t.TORMENT="TORMENT",t.TAUNT="TAUNT",t.IMPRISON="IMPRISON",t.SYRUP_BOMB="SYRUP_BOMB",t.ELECTRIFIED="ELECTRIFIED",t.TELEKINESIS="TELEKINESIS",t.COMMANDED="COMMANDED",t.GRUDGE="GRUDGE",t.PSYCHO_SHIFT="PSYCHO_SHIFT",t.ENDURE_TOKEN="ENDURE_TOKEN",t.POWDER="POWDER",t.MAGIC_COAT="MAGIC_COAT",t))(Y||{}),ce=(t=>(t[t.WEAKEST=0]="WEAKEST",t[t.WEAKER=1]="WEAKER",t[t.WEAK=2]="WEAK",t[t.AVERAGE=3]="AVERAGE",t[t.STRONG=4]="STRONG",t[t.STRONGER=5]="STRONGER",t))(ce||{});/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function vR(t){return t<0?-1:t===0?0:1}r(vR,"signum");function uT(t,E,R){return(1-R)*t+R*E}r(uT,"lerp");function o8(t,E,R){return R<t?t:R>E?E:R}r(o8,"clampInt");function Ho(t,E,R){return R<t?t:R>E?E:R}r(Ho,"clampDouble");function C8(t){return t=t%360,t<0&&(t=t+360),t}r(C8,"sanitizeDegreesDouble");function GP(t,E){const R=t[0]*E[0][0]+t[1]*E[0][1]+t[2]*E[0][2],I=t[0]*E[1][0]+t[1]*E[1][1]+t[2]*E[1][2],N=t[0]*E[2][0]+t[1]*E[2][1]+t[2]*E[2][2];return[R,I,N]}r(GP,"matrixMultiply");/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const uv=[[.41233895,.35762064,.18051042],[.2126,.7152,.0722],[.01932141,.11916382,.95034478]],l8=[[3.2413774792388685,-1.5376652402851851,-.49885366846268053],[-.9691452513005321,1.8758853451067872,.04156585616912061],[.05562093689691305,-.20395524564742123,1.0571799111220335]],b1=[95.047,100,108.883];function Z1(t,E,R){return(255<<24|(t&255)<<16|(E&255)<<8|R&255)>>>0}r(Z1,"argbFromRgb");function RV(t){const E=HN(t[0]),R=HN(t[1]),I=HN(t[2]);return Z1(E,R,I)}r(RV,"argbFromLinrgb");function Hv(t){return t>>24&255}r(Hv,"alphaFromArgb");function MM(t){return t>>16&255}r(MM,"redFromArgb");function PM(t){return t>>8&255}r(PM,"greenFromArgb");function GM(t){return t&255}r(GM,"blueFromArgb");function cv(t,E,R){const I=l8,N=I[0][0]*t+I[0][1]*E+I[0][2]*R,S=I[1][0]*t+I[1][1]*E+I[1][2]*R,T=I[2][0]*t+I[2][1]*E+I[2][2]*R,i=HN(N),o=HN(S),C=HN(T);return Z1(i,o,C)}r(cv,"argbFromXyz");function U8(t){const E=wI(MM(t)),R=wI(PM(t)),I=wI(GM(t));return GP([E,R,I],uv)}r(U8,"xyzFromArgb");function D8(t,E,R){const I=b1,N=(t+16)/116,S=E/500+N,T=N-R/200,i=mi(S),o=mi(N),C=mi(T),U=i*I[0],_=o*I[1],G=C*I[2];return cv(U,_,G)}r(D8,"argbFromLab");function M8(t){const E=wI(MM(t)),R=wI(PM(t)),I=wI(GM(t)),N=uv,S=N[0][0]*E+N[0][1]*R+N[0][2]*I,T=N[1][0]*E+N[1][1]*R+N[1][2]*I,i=N[2][0]*E+N[2][1]*R+N[2][2]*I,o=b1,C=S/o[0],U=T/o[1],_=i/o[2],G=HT(C),H=HT(U),c=HT(_),f=116*H-16,d=500*(G-H),w=200*(H-c);return[f,d,w]}r(M8,"labFromArgb");function P8(t){const E=ML(t),R=HN(E);return Z1(R,R,R)}r(P8,"argbFromLstar");function OV(t){const E=U8(t)[1];return 116*HT(E/100)-16}r(OV,"lstarFromArgb");function ML(t){return 100*mi((t+16)/116)}r(ML,"yFromLstar");function _P(t){return HT(t/100)*116-16}r(_P,"lstarFromY");function wI(t){const E=t/255;return E<=.040449936?E/12.92*100:Math.pow((E+.055)/1.055,2.4)*100}r(wI,"linearized");function HN(t){const E=t/100;let R=0;return E<=.0031308?R=E*12.92:R=1.055*Math.pow(E,1/2.4)-.055,o8(0,255,Math.round(R*255))}r(HN,"delinearized");function G8(){return b1}r(G8,"whitePointD65");function uP(t){const E=MM(t),R=PM(t),I=GM(t),N=Hv(t);return{r:E,g:R,b:I,a:N}}r(uP,"rgbaFromArgb");function fL({r:t,g:E,b:R,a:I}){const N=ii(t),S=ii(E),T=ii(R);return ii(I)<<24|N<<16|S<<8|T}r(fL,"argbFromRgba");function ii(t){return t<0?0:t>255?255:t}r(ii,"clampComponent");function HT(t){const E=.008856451679035631,R=24389/27;return t>E?Math.pow(t,1/3):(R*t+16)/116}r(HT,"labF");function mi(t){const E=.008856451679035631,R=24389/27,I=t*t*t;return I>E?I:(116*t-16)/R}r(mi,"labInvf");/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const xD=class xD{static make(E=G8(),R=200/Math.PI*ML(50)/100,I=50,N=2,S=!1){const T=E,i=T[0]*.401288+T[1]*.650173+T[2]*-.051461,o=T[0]*-.250268+T[1]*1.204414+T[2]*.045854,C=T[0]*-.002079+T[1]*.048952+T[2]*.953127,U=.8+N/10,_=U>=.9?uT(.59,.69,(U-.9)*10):uT(.525,.59,(U-.8)*10);let G=S?1:U*(1-1/3.6*Math.exp((-R-42)/92));G=G>1?1:G<0?0:G;const H=U,c=[G*(100/i)+1-G,G*(100/o)+1-G,G*(100/C)+1-G],f=1/(5*R+1),d=f*f*f*f,w=1-d,m=d*R+.1*w*w*Math.cbrt(5*R),W=ML(I)/E[1],v=1.48+Math.sqrt(W),$=.725/Math.pow(W,.2),Oe=$,q=[Math.pow(m*c[0]*i/100,.42),Math.pow(m*c[1]*o/100,.42),Math.pow(m*c[2]*C/100,.42)],Ie=[400*q[0]/(q[0]+27.13),400*q[1]/(q[1]+27.13),400*q[2]/(q[2]+27.13)],le=(2*Ie[0]+Ie[1]+.05*Ie[2])*$;return new xD(W,le,$,Oe,_,H,c,m,Math.pow(m,.25),v)}constructor(E,R,I,N,S,T,i,o,C,U){this.n=E,this.aw=R,this.nbb=I,this.ncb=N,this.c=S,this.nc=T,this.rgbD=i,this.fl=o,this.fLRoot=C,this.z=U}};r(xD,"ViewingConditions");let xO=xD;xO.DEFAULT=xO.make();/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const sI=class sI{constructor(E,R,I,N,S,T,i,o,C){this.hue=E,this.chroma=R,this.j=I,this.q=N,this.m=S,this.s=T,this.jstar=i,this.astar=o,this.bstar=C}distance(E){const R=this.jstar-E.jstar,I=this.astar-E.astar,N=this.bstar-E.bstar,S=Math.sqrt(R*R+I*I+N*N);return 1.41*Math.pow(S,.63)}static fromInt(E){return sI.fromIntInViewingConditions(E,xO.DEFAULT)}static fromIntInViewingConditions(E,R){const I=(E&16711680)>>16,N=(E&65280)>>8,S=E&255,T=wI(I),i=wI(N),o=wI(S),C=.41233895*T+.35762064*i+.18051042*o,U=.2126*T+.7152*i+.0722*o,_=.01932141*T+.11916382*i+.95034478*o,G=.401288*C+.650173*U-.051461*_,H=-.250268*C+1.204414*U+.045854*_,c=-.002079*C+.048952*U+.953127*_,f=R.rgbD[0]*G,d=R.rgbD[1]*H,w=R.rgbD[2]*c,m=Math.pow(R.fl*Math.abs(f)/100,.42),W=Math.pow(R.fl*Math.abs(d)/100,.42),v=Math.pow(R.fl*Math.abs(w)/100,.42),$=vR(f)*400*m/(m+27.13),Oe=vR(d)*400*W/(W+27.13),q=vR(w)*400*v/(v+27.13),Ie=(11*$+-12*Oe+q)/11,le=($+Oe-2*q)/9,Ae=(20*$+20*Oe+21*q)/20,Re=(40*$+20*Oe+q)/20,ie=Math.atan2(le,Ie)*180/Math.PI,He=ie<0?ie+360:ie>=360?ie-360:ie,ve=He*Math.PI/180,xe=Re*R.nbb,EA=100*Math.pow(xe/R.aw,R.c*R.z),NA=4/R.c*Math.sqrt(EA/100)*(R.aw+4)*R.fLRoot,rA=He<20.14?He+360:He,Be=.25*(Math.cos(rA*Math.PI/180+2)+3.8),Pe=5e4/13*Be*R.nc*R.ncb*Math.sqrt(Ie*Ie+le*le)/(Ae+.305),Te=Math.pow(Pe,.9)*Math.pow(1.64-Math.pow(.29,R.n),.73),Ge=Te*Math.sqrt(EA/100),ze=Ge*R.fLRoot,eA=50*Math.sqrt(Te*R.c/(R.aw+4)),GA=(1+100*.007)*EA/(1+.007*EA),IA=1/.0228*Math.log(1+.0228*ze),yA=IA*Math.cos(ve),DE=IA*Math.sin(ve);return new sI(He,Ge,EA,NA,ze,eA,GA,yA,DE)}static fromJch(E,R,I){return sI.fromJchInViewingConditions(E,R,I,xO.DEFAULT)}static fromJchInViewingConditions(E,R,I,N){const S=4/N.c*Math.sqrt(E/100)*(N.aw+4)*N.fLRoot,T=R*N.fLRoot,i=R/Math.sqrt(E/100),o=50*Math.sqrt(i*N.c/(N.aw+4)),C=I*Math.PI/180,U=(1+100*.007)*E/(1+.007*E),_=1/.0228*Math.log(1+.0228*T),G=_*Math.cos(C),H=_*Math.sin(C);return new sI(I,R,E,S,T,o,U,G,H)}static fromUcs(E,R,I){return sI.fromUcsInViewingConditions(E,R,I,xO.DEFAULT)}static fromUcsInViewingConditions(E,R,I,N){const S=R,T=I,i=Math.sqrt(S*S+T*T),C=(Math.exp(i*.0228)-1)/.0228/N.fLRoot;let U=Math.atan2(T,S)*(180/Math.PI);U<0&&(U+=360);const _=E/(1-(E-100)*.007);return sI.fromJchInViewingConditions(_,C,U,N)}toInt(){return this.viewed(xO.DEFAULT)}viewed(E){const R=this.chroma===0||this.j===0?0:this.chroma/Math.sqrt(this.j/100),I=Math.pow(R/Math.pow(1.64-Math.pow(.29,E.n),.73),1/.9),N=this.hue*Math.PI/180,S=.25*(Math.cos(N+2)+3.8),T=E.aw*Math.pow(this.j/100,1/E.c/E.z),i=S*(5e4/13)*E.nc*E.ncb,o=T/E.nbb,C=Math.sin(N),U=Math.cos(N),_=23*(o+.305)*I/(23*i+11*I*U+108*I*C),G=_*U,H=_*C,c=(460*o+451*G+288*H)/1403,f=(460*o-891*G-261*H)/1403,d=(460*o-220*G-6300*H)/1403,w=Math.max(0,27.13*Math.abs(c)/(400-Math.abs(c))),m=vR(c)*(100/E.fl)*Math.pow(w,1/.42),W=Math.max(0,27.13*Math.abs(f)/(400-Math.abs(f))),v=vR(f)*(100/E.fl)*Math.pow(W,1/.42),$=Math.max(0,27.13*Math.abs(d)/(400-Math.abs(d))),Oe=vR(d)*(100/E.fl)*Math.pow($,1/.42),q=m/E.rgbD[0],Ie=v/E.rgbD[1],le=Oe/E.rgbD[2],Ae=1.86206786*q-1.01125463*Ie+.14918677*le,Re=.38752654*q+.62144744*Ie-.00897398*le,se=-.0158415*q-.03412294*Ie+1.04996444*le;return cv(Ae,Re,se)}static fromXyzInViewingConditions(E,R,I,N){const S=.401288*E+.650173*R-.051461*I,T=-.250268*E+1.204414*R+.045854*I,i=-.002079*E+.048952*R+.953127*I,o=N.rgbD[0]*S,C=N.rgbD[1]*T,U=N.rgbD[2]*i,_=Math.pow(N.fl*Math.abs(o)/100,.42),G=Math.pow(N.fl*Math.abs(C)/100,.42),H=Math.pow(N.fl*Math.abs(U)/100,.42),c=vR(o)*400*_/(_+27.13),f=vR(C)*400*G/(G+27.13),d=vR(U)*400*H/(H+27.13),w=(11*c+-12*f+d)/11,m=(c+f-2*d)/9,W=(20*c+20*f+21*d)/20,v=(40*c+20*f+d)/20,Oe=Math.atan2(m,w)*180/Math.PI,q=Oe<0?Oe+360:Oe>=360?Oe-360:Oe,Ie=q*Math.PI/180,le=v*N.nbb,Ae=100*Math.pow(le/N.aw,N.c*N.z),Re=4/N.c*Math.sqrt(Ae/100)*(N.aw+4)*N.fLRoot,se=q<20.14?q+360:q,ie=1/4*(Math.cos(se*Math.PI/180+2)+3.8),ve=5e4/13*ie*N.nc*N.ncb*Math.sqrt(w*w+m*m)/(W+.305),xe=Math.pow(ve,.9)*Math.pow(1.64-Math.pow(.29,N.n),.73),EA=xe*Math.sqrt(Ae/100),NA=EA*N.fLRoot,rA=50*Math.sqrt(xe*N.c/(N.aw+4)),Be=(1+100*.007)*Ae/(1+.007*Ae),ae=Math.log(1+.0228*NA)/.0228,Pe=ae*Math.cos(Ie),Te=ae*Math.sin(Ie);return new sI(q,EA,Ae,Re,NA,rA,Be,Pe,Te)}xyzInViewingConditions(E){const R=this.chroma===0||this.j===0?0:this.chroma/Math.sqrt(this.j/100),I=Math.pow(R/Math.pow(1.64-Math.pow(.29,E.n),.73),1/.9),N=this.hue*Math.PI/180,S=.25*(Math.cos(N+2)+3.8),T=E.aw*Math.pow(this.j/100,1/E.c/E.z),i=S*(5e4/13)*E.nc*E.ncb,o=T/E.nbb,C=Math.sin(N),U=Math.cos(N),_=23*(o+.305)*I/(23*i+11*I*U+108*I*C),G=_*U,H=_*C,c=(460*o+451*G+288*H)/1403,f=(460*o-891*G-261*H)/1403,d=(460*o-220*G-6300*H)/1403,w=Math.max(0,27.13*Math.abs(c)/(400-Math.abs(c))),m=vR(c)*(100/E.fl)*Math.pow(w,1/.42),W=Math.max(0,27.13*Math.abs(f)/(400-Math.abs(f))),v=vR(f)*(100/E.fl)*Math.pow(W,1/.42),$=Math.max(0,27.13*Math.abs(d)/(400-Math.abs(d))),Oe=vR(d)*(100/E.fl)*Math.pow($,1/.42),q=m/E.rgbD[0],Ie=v/E.rgbD[1],le=Oe/E.rgbD[2],Ae=1.86206786*q-1.01125463*Ie+.14918677*le,Re=.38752654*q+.62144744*Ie-.00897398*le,se=-.0158415*q-.03412294*Ie+1.04996444*le;return[Ae,Re,se]}};r(sI,"Cam16");let nN=sI;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const dA=class dA{static sanitizeRadians(E){return(E+Math.PI*8)%(Math.PI*2)}static trueDelinearized(E){const R=E/100;let I=0;return R<=.0031308?I=R*12.92:I=1.055*Math.pow(R,1/2.4)-.055,I*255}static chromaticAdaptation(E){const R=Math.pow(Math.abs(E),.42);return vR(E)*400*R/(R+27.13)}static hueOf(E){const R=GP(E,dA.SCALED_DISCOUNT_FROM_LINRGB),I=dA.chromaticAdaptation(R[0]),N=dA.chromaticAdaptation(R[1]),S=dA.chromaticAdaptation(R[2]),T=(11*I+-12*N+S)/11,i=(I+N-2*S)/9;return Math.atan2(i,T)}static areInCyclicOrder(E,R,I){const N=dA.sanitizeRadians(R-E),S=dA.sanitizeRadians(I-E);return N<S}static intercept(E,R,I){return(R-E)/(I-E)}static lerpPoint(E,R,I){return[E[0]+(I[0]-E[0])*R,E[1]+(I[1]-E[1])*R,E[2]+(I[2]-E[2])*R]}static setCoordinate(E,R,I,N){const S=dA.intercept(E[N],R,I[N]);return dA.lerpPoint(E,S,I)}static isBounded(E){return 0<=E&&E<=100}static nthVertex(E,R){const I=dA.Y_FROM_LINRGB[0],N=dA.Y_FROM_LINRGB[1],S=dA.Y_FROM_LINRGB[2],T=R%4<=1?0:100,i=R%2===0?0:100;if(R<4){const o=T,C=i,U=(E-o*N-C*S)/I;return dA.isBounded(U)?[U,o,C]:[-1,-1,-1]}else if(R<8){const o=T,C=i,U=(E-C*I-o*S)/N;return dA.isBounded(U)?[C,U,o]:[-1,-1,-1]}else{const o=T,C=i,U=(E-o*I-C*N)/S;return dA.isBounded(U)?[o,C,U]:[-1,-1,-1]}}static bisectToSegment(E,R){let I=[-1,-1,-1],N=I,S=0,T=0,i=!1,o=!0;for(let C=0;C<12;C++){const U=dA.nthVertex(E,C);if(U[0]<0)continue;const _=dA.hueOf(U);if(!i){I=U,N=U,S=_,T=_,i=!0;continue}(o||dA.areInCyclicOrder(S,_,T))&&(o=!1,dA.areInCyclicOrder(S,R,_)?(N=U,T=_):(I=U,S=_))}return[I,N]}static midpoint(E,R){return[(E[0]+R[0])/2,(E[1]+R[1])/2,(E[2]+R[2])/2]}static criticalPlaneBelow(E){return Math.floor(E-.5)}static criticalPlaneAbove(E){return Math.ceil(E-.5)}static bisectToLimit(E,R){const I=dA.bisectToSegment(E,R);let N=I[0],S=dA.hueOf(N),T=I[1];for(let i=0;i<3;i++)if(N[i]!==T[i]){let o=-1,C=255;N[i]<T[i]?(o=dA.criticalPlaneBelow(dA.trueDelinearized(N[i])),C=dA.criticalPlaneAbove(dA.trueDelinearized(T[i]))):(o=dA.criticalPlaneAbove(dA.trueDelinearized(N[i])),C=dA.criticalPlaneBelow(dA.trueDelinearized(T[i])));for(let U=0;U<8&&!(Math.abs(C-o)<=1);U++){const _=Math.floor((o+C)/2),G=dA.CRITICAL_PLANES[_],H=dA.setCoordinate(N,G,T,i),c=dA.hueOf(H);dA.areInCyclicOrder(S,R,c)?(T=H,C=_):(N=H,S=c,o=_)}}return dA.midpoint(N,T)}static inverseChromaticAdaptation(E){const R=Math.abs(E),I=Math.max(0,27.13*R/(400-R));return vR(E)*Math.pow(I,1/.42)}static findResultByJ(E,R,I){let N=Math.sqrt(I)*11;const S=xO.DEFAULT,T=1/Math.pow(1.64-Math.pow(.29,S.n),.73),o=.25*(Math.cos(E+2)+3.8)*(5e4/13)*S.nc*S.ncb,C=Math.sin(E),U=Math.cos(E);for(let _=0;_<5;_++){const G=N/100,H=R===0||N===0?0:R/Math.sqrt(G),c=Math.pow(H*T,1/.9),d=S.aw*Math.pow(G,1/S.c/S.z)/S.nbb,w=23*(d+.305)*c/(23*o+11*c*U+108*c*C),m=w*U,W=w*C,v=(460*d+451*m+288*W)/1403,$=(460*d-891*m-261*W)/1403,Oe=(460*d-220*m-6300*W)/1403,q=dA.inverseChromaticAdaptation(v),Ie=dA.inverseChromaticAdaptation($),le=dA.inverseChromaticAdaptation(Oe),Ae=GP([q,Ie,le],dA.LINRGB_FROM_SCALED_DISCOUNT);if(Ae[0]<0||Ae[1]<0||Ae[2]<0)return 0;const Re=dA.Y_FROM_LINRGB[0],se=dA.Y_FROM_LINRGB[1],ie=dA.Y_FROM_LINRGB[2],He=Re*Ae[0]+se*Ae[1]+ie*Ae[2];if(He<=0)return 0;if(_===4||Math.abs(He-I)<.002)return Ae[0]>100.01||Ae[1]>100.01||Ae[2]>100.01?0:RV(Ae);N=N-(He-I)*N/(2*He)}return 0}static solveToInt(E,R,I){if(R<1e-4||I<1e-4||I>99.9999)return P8(I);E=C8(E);const N=E/180*Math.PI,S=ML(I),T=dA.findResultByJ(N,R,S);if(T!==0)return T;const i=dA.bisectToLimit(S,N);return RV(i)}static solveToCam(E,R,I){return nN.fromInt(dA.solveToInt(E,R,I))}};r(dA,"HctSolver");let oI=dA;oI.SCALED_DISCOUNT_FROM_LINRGB=[[.001200833568784504,.002389694492170889,.0002795742885861124],[.0005891086651375999,.0029785502573438758,.0003270666104008398],[.00010146692491640572,.0005364214359186694,.0032979401770712076]];oI.LINRGB_FROM_SCALED_DISCOUNT=[[1373.2198709594231,-1100.4251190754821,-7.278681089101213],[-271.815969077903,559.6580465940733,-32.46047482791194],[1.9622899599665666,-57.173814538844006,308.7233197812385]];oI.Y_FROM_LINRGB=[.2126,.7152,.0722];oI.CRITICAL_PLANES=[.015176349177441876,.045529047532325624,.07588174588720938,.10623444424209313,.13658714259697685,.16693984095186062,.19729253930674434,.2276452376616281,.2579979360165119,.28835063437139563,.3188300904430532,.350925934958123,.3848314933096426,.42057480301049466,.458183274052838,.4976837250274023,.5391024159806381,.5824650784040898,.6277969426914107,.6751227633498623,.7244668422128921,.775853049866786,.829304845476233,.8848452951698498,.942497089126609,1.0022825574869039,1.0642236851973577,1.1283421258858297,1.1946592148522128,1.2631959812511864,1.3339731595349034,1.407011200216447,1.4823302800086415,1.5599503113873272,1.6398909516233677,1.7221716113234105,1.8068114625156377,1.8938294463134073,1.9832442801866852,2.075074464868551,2.1693382909216234,2.2660538449872063,2.36523901573795,2.4669114995532007,2.5710888059345764,2.6777882626779785,2.7870270208169257,2.898822059350997,3.0131901897720907,3.1301480604002863,3.2497121605402226,3.3718988244681087,3.4967242352587946,3.624204428461639,3.754355295633311,3.887192587735158,4.022731918402185,4.160988767090289,4.301978482107941,4.445716283538092,4.592217266055746,4.741496401646282,4.893568542229298,5.048448422192488,5.20615066083972,5.3666897647573375,5.5300801301023865,5.696336044816294,5.865471690767354,6.037501145825082,6.212438385869475,6.390297286737924,6.571091626112461,6.7548350853498045,6.941541251256611,7.131223617812143,7.323895587840543,7.5195704746346665,7.7182615035334345,7.919981813454504,8.124744458384042,8.332562408825165,8.543448553206703,8.757415699253682,8.974476575321063,9.194643831691977,9.417930041841839,9.644347703669503,9.873909240696694,10.106627003236781,10.342513269534024,10.58158024687427,10.8238400726681,11.069304815507364,11.317986476196008,11.569896988756009,11.825048221409341,12.083451977536606,12.345119996613247,12.610063955123938,12.878295467455942,13.149826086772048,13.42466730586372,13.702830557985108,13.984327217668513,14.269168601521828,14.55736596900856,14.848930523210871,15.143873411576273,15.44220572664832,15.743938506781891,16.04908273684337,16.35764934889634,16.66964922287304,16.985093187232053,17.30399201960269,17.62635644741625,17.95219714852476,18.281524751807332,18.614349837764564,18.95068293910138,19.290534541298456,19.633915083172692,19.98083495742689,20.331304511189067,20.685334046541502,21.042933821039977,21.404114048223256,21.76888489811322,22.137256497705877,22.50923893145328,22.884842241736916,23.264076429332462,23.6469514538663,24.033477234264016,24.42366364919083,24.817520537484558,25.21505769858089,25.61628489293138,26.021211842414342,26.429848230738664,26.842203703840827,27.258287870275353,27.678110301598522,28.10168053274597,28.529008062403893,28.96010235337422,29.39497283293396,29.83362889318845,30.276079891419332,30.722335150426627,31.172403958865512,31.62629557157785,32.08401920991837,32.54558406207592,33.010999283389665,33.4802739966603,33.953417292456834,34.430438229418264,34.911345834551085,35.39614910352207,35.88485700094671,36.37747846067349,36.87402238606382,37.37449765026789,37.87891309649659,38.38727753828926,38.89959975977785,39.41588851594697,39.93615253289054,40.460400508064545,40.98864111053629,41.520882981230194,42.05713473317016,42.597404951718396,43.141702194811224,43.6900349931913,44.24241185063697,44.798841244188324,45.35933162437017,45.92389141541209,46.49252901546552,47.065252796817916,47.64207110610409,48.22299226451468,48.808024568002054,49.3971762874833,49.9904556690408,50.587870934119984,51.189430279724725,51.79514187861014,52.40501387947288,53.0190544071392,53.637271562750364,54.259673423945976,54.88626804504493,55.517063457223934,56.15206766869424,56.79128866487574,57.43473440856916,58.08241284012621,58.734331877617365,59.39049941699807,60.05092333227251,60.715611475655585,61.38457167773311,62.057811747619894,62.7353394731159,63.417162620860914,64.10328893648692,64.79372614476921,65.48848194977529,66.18756403501224,66.89098006357258,67.59873767827808,68.31084450182222,69.02730813691093,69.74813616640164,70.47333615344107,71.20291564160104,71.93688215501312,72.67524319850172,73.41800625771542,74.16517879925733,74.9167682708136,75.67278210128072,76.43322770089146,77.1981124613393,77.96744375590167,78.74122893956174,79.51947534912904,80.30219030335869,81.08938110306934,81.88105503125999,82.67721935322541,83.4778813166706,84.28304815182372,85.09272707154808,85.90692527145302,86.72564993000343,87.54890820862819,88.3767072518277,89.2090541872801,90.04595612594655,90.88742016217518,91.73345337380438,92.58406282226491,93.43925555268066,94.29903859396902,95.16341895893969,96.03240364439274,96.9059996312159,97.78421388448044,98.6670533535366,99.55452497210776];/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Xs=class Xs{static from(E,R,I){return new Xs(oI.solveToInt(E,R,I))}static fromInt(E){return new Xs(E)}toInt(){return this.argb}get hue(){return this.internalHue}set hue(E){this.setInternalState(oI.solveToInt(E,this.internalChroma,this.internalTone))}get chroma(){return this.internalChroma}set chroma(E){this.setInternalState(oI.solveToInt(this.internalHue,E,this.internalTone))}get tone(){return this.internalTone}set tone(E){this.setInternalState(oI.solveToInt(this.internalHue,this.internalChroma,E))}constructor(E){this.argb=E;const R=nN.fromInt(E);this.internalHue=R.hue,this.internalChroma=R.chroma,this.internalTone=OV(E),this.argb=E}setInternalState(E){const R=nN.fromInt(E);this.internalHue=R.hue,this.internalChroma=R.chroma,this.internalTone=OV(E),this.argb=E}inViewingConditions(E){const I=nN.fromInt(this.toInt()).xyzInViewingConditions(E),N=nN.fromXyzInViewingConditions(I[0],I[1],I[2],xO.make());return Xs.from(N.hue,N.chroma,_P(I[1]))}};r(Xs,"Hct");let ua=Xs;/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const rL=class rL{static ratioOfTones(E,R){return E=Ho(0,100,E),R=Ho(0,100,R),rL.ratioOfYs(ML(E),ML(R))}static ratioOfYs(E,R){const I=E>R?E:R,N=I===R?E:R;return(I+5)/(N+5)}static lighter(E,R){if(E<0||E>100)return-1;const I=ML(E),N=R*(I+5)-5,S=rL.ratioOfYs(N,I),T=Math.abs(S-R);if(S<R&&T>.04)return-1;const i=_P(N)+.4;return i<0||i>100?-1:i}static darker(E,R){if(E<0||E>100)return-1;const I=ML(E),N=(I+5)/R-5,S=rL.ratioOfYs(I,N),T=Math.abs(S-R);if(S<R&&T>.04)return-1;const i=_P(N)-.4;return i<0||i>100?-1:i}static lighterUnsafe(E,R){const I=rL.lighter(E,R);return I<0?100:I}static darkerUnsafe(E,R){const I=rL.darker(E,R);return I<0?0:I}};r(rL,"Contrast");let xR=rL;/**
 * @license
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const bD=class bD{static isDisliked(E){const R=Math.round(E.hue)>=90&&Math.round(E.hue)<=111,I=Math.round(E.chroma)>16,N=Math.round(E.tone)<65;return R&&I&&N}static fixIfDisliked(E){return bD.isDisliked(E)?ua.from(E.hue,E.chroma,70):E}};r(bD,"DislikeAnalyzer");let HP=bD;/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const fR=class fR{static fromPalette(E){return new fR(E.name??"",E.palette,E.tone,E.isBackground??!1,E.background,E.secondBackground,E.contrastCurve,E.toneDeltaPair)}constructor(E,R,I,N,S,T,i,o){if(this.name=E,this.palette=R,this.tone=I,this.isBackground=N,this.background=S,this.secondBackground=T,this.contrastCurve=i,this.toneDeltaPair=o,this.hctCache=new Map,!S&&T)throw new Error(`Color ${E} has secondBackgrounddefined, but background is not defined.`);if(!S&&i)throw new Error(`Color ${E} has contrastCurvedefined, but background is not defined.`);if(S&&!i)throw new Error(`Color ${E} has backgrounddefined, but contrastCurve is not defined.`)}getArgb(E){return this.getHct(E).toInt()}getHct(E){const R=this.hctCache.get(E);if(R!=null)return R;const I=this.getTone(E),N=this.palette(E).getHct(I);return this.hctCache.size>4&&this.hctCache.clear(),this.hctCache.set(E,N),N}getTone(E){const R=E.contrastLevel<0;if(this.toneDeltaPair){const I=this.toneDeltaPair(E),N=I.roleA,S=I.roleB,T=I.delta,i=I.polarity,o=I.stayTogether,U=this.background(E).getTone(E),_=i==="nearer"||i==="lighter"&&!E.isDark||i==="darker"&&E.isDark,G=_?N:S,H=_?S:N,c=this.name===G.name,f=E.isDark?1:-1,d=G.contrastCurve.getContrast(E.contrastLevel),w=H.contrastCurve.getContrast(E.contrastLevel),m=G.tone(E);let W=xR.ratioOfTones(U,m)>=d?m:fR.foregroundTone(U,d);const v=H.tone(E);let $=xR.ratioOfTones(U,v)>=w?v:fR.foregroundTone(U,w);return R&&(W=fR.foregroundTone(U,d),$=fR.foregroundTone(U,w)),($-W)*f>=T||($=Ho(0,100,W+T*f),($-W)*f>=T||(W=Ho(0,100,$-T*f))),50<=W&&W<60?f>0?(W=60,$=Math.max($,W+T*f)):(W=49,$=Math.min($,W+T*f)):50<=$&&$<60&&(o?f>0?(W=60,$=Math.max($,W+T*f)):(W=49,$=Math.min($,W+T*f)):f>0?$=60:$=49),c?W:$}else{let I=this.tone(E);if(this.background==null)return I;const N=this.background(E).getTone(E),S=this.contrastCurve.getContrast(E.contrastLevel);if(xR.ratioOfTones(N,I)>=S||(I=fR.foregroundTone(N,S)),R&&(I=fR.foregroundTone(N,S)),this.isBackground&&50<=I&&I<60&&(xR.ratioOfTones(49,N)>=S?I=49:I=60),this.secondBackground){const[T,i]=[this.background,this.secondBackground],[o,C]=[T(E).getTone(E),i(E).getTone(E)],[U,_]=[Math.max(o,C),Math.min(o,C)];if(xR.ratioOfTones(U,I)>=S&&xR.ratioOfTones(_,I)>=S)return I;const G=xR.lighter(U,S),H=xR.darker(_,S),c=[];return G!==-1&&c.push(G),H!==-1&&c.push(H),fR.tonePrefersLightForeground(o)||fR.tonePrefersLightForeground(C)?G<0?100:G:c.length===1?c[0]:H<0?0:H}return I}}static foregroundTone(E,R){const I=xR.lighterUnsafe(E,R),N=xR.darkerUnsafe(E,R),S=xR.ratioOfTones(I,E),T=xR.ratioOfTones(N,E);if(fR.tonePrefersLightForeground(E)){const o=Math.abs(S-T)<.1&&S<R&&T<R;return S>=R||S>=T||o?I:N}else return T>=R||T>=S?N:I}static tonePrefersLightForeground(E){return Math.round(E)<60}static toneAllowsLightForeground(E){return Math.round(E)<=49}static enableLightForeground(E){return fR.tonePrefersLightForeground(E)&&!fR.toneAllowsLightForeground(E)?49:E}};r(fR,"DynamicColor");let iA=fR;/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var Ha;(function(t){t[t.MONOCHROME=0]="MONOCHROME",t[t.NEUTRAL=1]="NEUTRAL",t[t.TONAL_SPOT=2]="TONAL_SPOT",t[t.VIBRANT=3]="VIBRANT",t[t.EXPRESSIVE=4]="EXPRESSIVE",t[t.FIDELITY=5]="FIDELITY",t[t.CONTENT=6]="CONTENT",t[t.RAINBOW=7]="RAINBOW",t[t.FRUIT_SALAD=8]="FRUIT_SALAD"})(Ha||(Ha={}));/**
 * @license
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Yc=class Yc{constructor(E,R,I,N){this.low=E,this.normal=R,this.medium=I,this.high=N}getContrast(E){return E<=-1?this.low:E<0?uT(this.low,this.normal,(E- -1)/1):E<.5?uT(this.normal,this.medium,(E-0)/.5):E<1?uT(this.medium,this.high,(E-.5)/.5):this.high}};r(Yc,"ContrastCurve");let bA=Yc;/**
 * @license
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Wc=class Wc{constructor(E,R,I,N,S){this.roleA=E,this.roleB=R,this.delta=I,this.polarity=N,this.stayTogether=S}};r(Wc,"ToneDeltaPair");let MR=Wc;/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function IT(t){return t.variant===Ha.FIDELITY||t.variant===Ha.CONTENT}r(IT,"isFidelity");function Tt(t){return t.variant===Ha.MONOCHROME}r(Tt,"isMonochrome");function _8(t,E,R,I){let N=R,S=ua.from(t,E,R);if(S.chroma<E){let T=S.chroma;for(;S.chroma<E;){N+=I?-1:1;const i=ua.from(t,E,N);if(T>i.chroma||Math.abs(i.chroma-E)<.4)break;const o=Math.abs(i.chroma-E),C=Math.abs(S.chroma-E);o<C&&(S=i),T=Math.max(T,i.chroma)}}return N}r(_8,"findDesiredChromaByTone");function u8(t){return xO.make(void 0,void 0,t.isDark?30:80,void 0,void 0)}r(u8,"viewingConditionsForAlbers");function k1(t,E){const R=t.inViewingConditions(u8(E));return iA.tonePrefersLightForeground(t.tone)&&!iA.toneAllowsLightForeground(R.tone)?iA.enableLightForeground(t.tone):iA.enableLightForeground(R.tone)}r(k1,"performAlbers");const sn=class sn{static highestSurface(E){return E.isDark?sn.surfaceBright:sn.surfaceDim}};r(sn,"MaterialDynamicColors");let fe=sn;fe.contentAccentToneDelta=15;fe.primaryPaletteKeyColor=iA.fromPalette({name:"primary_palette_key_color",palette:r(t=>t.primaryPalette,"palette"),tone:r(t=>t.primaryPalette.keyColor.tone,"tone")});fe.secondaryPaletteKeyColor=iA.fromPalette({name:"secondary_palette_key_color",palette:r(t=>t.secondaryPalette,"palette"),tone:r(t=>t.secondaryPalette.keyColor.tone,"tone")});fe.tertiaryPaletteKeyColor=iA.fromPalette({name:"tertiary_palette_key_color",palette:r(t=>t.tertiaryPalette,"palette"),tone:r(t=>t.tertiaryPalette.keyColor.tone,"tone")});fe.neutralPaletteKeyColor=iA.fromPalette({name:"neutral_palette_key_color",palette:r(t=>t.neutralPalette,"palette"),tone:r(t=>t.neutralPalette.keyColor.tone,"tone")});fe.neutralVariantPaletteKeyColor=iA.fromPalette({name:"neutral_variant_palette_key_color",palette:r(t=>t.neutralVariantPalette,"palette"),tone:r(t=>t.neutralVariantPalette.keyColor.tone,"tone")});fe.background=iA.fromPalette({name:"background",palette:r(t=>t.neutralPalette,"palette"),tone:r(t=>t.isDark?6:98,"tone"),isBackground:!0});fe.onBackground=iA.fromPalette({name:"on_background",palette:r(t=>t.neutralPalette,"palette"),tone:r(t=>t.isDark?90:10,"tone"),background:r(t=>fe.background,"background"),contrastCurve:new bA(3,3,4.5,7)});fe.surface=iA.fromPalette({name:"surface",palette:r(t=>t.neutralPalette,"palette"),tone:r(t=>t.isDark?6:98,"tone"),isBackground:!0});fe.surfaceDim=iA.fromPalette({name:"surface_dim",palette:r(t=>t.neutralPalette,"palette"),tone:r(t=>t.isDark?6:87,"tone"),isBackground:!0});fe.surfaceBright=iA.fromPalette({name:"surface_bright",palette:r(t=>t.neutralPalette,"palette"),tone:r(t=>t.isDark?24:98,"tone"),isBackground:!0});fe.surfaceContainerLowest=iA.fromPalette({name:"surface_container_lowest",palette:r(t=>t.neutralPalette,"palette"),tone:r(t=>t.isDark?4:100,"tone"),isBackground:!0});fe.surfaceContainerLow=iA.fromPalette({name:"surface_container_low",palette:r(t=>t.neutralPalette,"palette"),tone:r(t=>t.isDark?10:96,"tone"),isBackground:!0});fe.surfaceContainer=iA.fromPalette({name:"surface_container",palette:r(t=>t.neutralPalette,"palette"),tone:r(t=>t.isDark?12:94,"tone"),isBackground:!0});fe.surfaceContainerHigh=iA.fromPalette({name:"surface_container_high",palette:r(t=>t.neutralPalette,"palette"),tone:r(t=>t.isDark?17:92,"tone"),isBackground:!0});fe.surfaceContainerHighest=iA.fromPalette({name:"surface_container_highest",palette:r(t=>t.neutralPalette,"palette"),tone:r(t=>t.isDark?22:90,"tone"),isBackground:!0});fe.onSurface=iA.fromPalette({name:"on_surface",palette:r(t=>t.neutralPalette,"palette"),tone:r(t=>t.isDark?90:10,"tone"),background:r(t=>fe.highestSurface(t),"background"),contrastCurve:new bA(4.5,7,11,21)});fe.surfaceVariant=iA.fromPalette({name:"surface_variant",palette:r(t=>t.neutralVariantPalette,"palette"),tone:r(t=>t.isDark?30:90,"tone"),isBackground:!0});fe.onSurfaceVariant=iA.fromPalette({name:"on_surface_variant",palette:r(t=>t.neutralVariantPalette,"palette"),tone:r(t=>t.isDark?80:30,"tone"),background:r(t=>fe.highestSurface(t),"background"),contrastCurve:new bA(3,4.5,7,11)});fe.inverseSurface=iA.fromPalette({name:"inverse_surface",palette:r(t=>t.neutralPalette,"palette"),tone:r(t=>t.isDark?90:20,"tone")});fe.inverseOnSurface=iA.fromPalette({name:"inverse_on_surface",palette:r(t=>t.neutralPalette,"palette"),tone:r(t=>t.isDark?20:95,"tone"),background:r(t=>fe.inverseSurface,"background"),contrastCurve:new bA(4.5,7,11,21)});fe.outline=iA.fromPalette({name:"outline",palette:r(t=>t.neutralVariantPalette,"palette"),tone:r(t=>t.isDark?60:50,"tone"),background:r(t=>fe.highestSurface(t),"background"),contrastCurve:new bA(1.5,3,4.5,7)});fe.outlineVariant=iA.fromPalette({name:"outline_variant",palette:r(t=>t.neutralVariantPalette,"palette"),tone:r(t=>t.isDark?30:80,"tone"),background:r(t=>fe.highestSurface(t),"background"),contrastCurve:new bA(1,1,3,7)});fe.shadow=iA.fromPalette({name:"shadow",palette:r(t=>t.neutralPalette,"palette"),tone:r(t=>0,"tone")});fe.scrim=iA.fromPalette({name:"scrim",palette:r(t=>t.neutralPalette,"palette"),tone:r(t=>0,"tone")});fe.surfaceTint=iA.fromPalette({name:"surface_tint",palette:r(t=>t.primaryPalette,"palette"),tone:r(t=>t.isDark?80:40,"tone"),isBackground:!0});fe.primary=iA.fromPalette({name:"primary",palette:r(t=>t.primaryPalette,"palette"),tone:r(t=>Tt(t)?t.isDark?100:0:t.isDark?80:40,"tone"),isBackground:!0,background:r(t=>fe.highestSurface(t),"background"),contrastCurve:new bA(3,4.5,7,11),toneDeltaPair:r(t=>new MR(fe.primaryContainer,fe.primary,15,"nearer",!1),"toneDeltaPair")});fe.onPrimary=iA.fromPalette({name:"on_primary",palette:r(t=>t.primaryPalette,"palette"),tone:r(t=>Tt(t)?t.isDark?10:90:t.isDark?20:100,"tone"),background:r(t=>fe.primary,"background"),contrastCurve:new bA(4.5,7,11,21)});fe.primaryContainer=iA.fromPalette({name:"primary_container",palette:r(t=>t.primaryPalette,"palette"),tone:r(t=>IT(t)?k1(t.sourceColorHct,t):Tt(t)?t.isDark?85:25:t.isDark?30:90,"tone"),isBackground:!0,background:r(t=>fe.highestSurface(t),"background"),contrastCurve:new bA(1,1,3,7),toneDeltaPair:r(t=>new MR(fe.primaryContainer,fe.primary,15,"nearer",!1),"toneDeltaPair")});fe.onPrimaryContainer=iA.fromPalette({name:"on_primary_container",palette:r(t=>t.primaryPalette,"palette"),tone:r(t=>IT(t)?iA.foregroundTone(fe.primaryContainer.tone(t),4.5):Tt(t)?t.isDark?0:100:t.isDark?90:10,"tone"),background:r(t=>fe.primaryContainer,"background"),contrastCurve:new bA(4.5,7,11,21)});fe.inversePrimary=iA.fromPalette({name:"inverse_primary",palette:r(t=>t.primaryPalette,"palette"),tone:r(t=>t.isDark?40:80,"tone"),background:r(t=>fe.inverseSurface,"background"),contrastCurve:new bA(3,4.5,7,11)});fe.secondary=iA.fromPalette({name:"secondary",palette:r(t=>t.secondaryPalette,"palette"),tone:r(t=>t.isDark?80:40,"tone"),isBackground:!0,background:r(t=>fe.highestSurface(t),"background"),contrastCurve:new bA(3,4.5,7,11),toneDeltaPair:r(t=>new MR(fe.secondaryContainer,fe.secondary,15,"nearer",!1),"toneDeltaPair")});fe.onSecondary=iA.fromPalette({name:"on_secondary",palette:r(t=>t.secondaryPalette,"palette"),tone:r(t=>Tt(t)?t.isDark?10:100:t.isDark?20:100,"tone"),background:r(t=>fe.secondary,"background"),contrastCurve:new bA(4.5,7,11,21)});fe.secondaryContainer=iA.fromPalette({name:"secondary_container",palette:r(t=>t.secondaryPalette,"palette"),tone:r(t=>{const E=t.isDark?30:90;if(Tt(t))return t.isDark?30:85;if(!IT(t))return E;let R=_8(t.secondaryPalette.hue,t.secondaryPalette.chroma,E,!t.isDark);return R=k1(t.secondaryPalette.getHct(R),t),R},"tone"),isBackground:!0,background:r(t=>fe.highestSurface(t),"background"),contrastCurve:new bA(1,1,3,7),toneDeltaPair:r(t=>new MR(fe.secondaryContainer,fe.secondary,15,"nearer",!1),"toneDeltaPair")});fe.onSecondaryContainer=iA.fromPalette({name:"on_secondary_container",palette:r(t=>t.secondaryPalette,"palette"),tone:r(t=>IT(t)?iA.foregroundTone(fe.secondaryContainer.tone(t),4.5):t.isDark?90:10,"tone"),background:r(t=>fe.secondaryContainer,"background"),contrastCurve:new bA(4.5,7,11,21)});fe.tertiary=iA.fromPalette({name:"tertiary",palette:r(t=>t.tertiaryPalette,"palette"),tone:r(t=>Tt(t)?t.isDark?90:25:t.isDark?80:40,"tone"),isBackground:!0,background:r(t=>fe.highestSurface(t),"background"),contrastCurve:new bA(3,4.5,7,11),toneDeltaPair:r(t=>new MR(fe.tertiaryContainer,fe.tertiary,15,"nearer",!1),"toneDeltaPair")});fe.onTertiary=iA.fromPalette({name:"on_tertiary",palette:r(t=>t.tertiaryPalette,"palette"),tone:r(t=>Tt(t)?t.isDark?10:90:t.isDark?20:100,"tone"),background:r(t=>fe.tertiary,"background"),contrastCurve:new bA(4.5,7,11,21)});fe.tertiaryContainer=iA.fromPalette({name:"tertiary_container",palette:r(t=>t.tertiaryPalette,"palette"),tone:r(t=>{if(Tt(t))return t.isDark?60:49;if(!IT(t))return t.isDark?30:90;const E=k1(t.tertiaryPalette.getHct(t.sourceColorHct.tone),t),R=t.tertiaryPalette.getHct(E);return HP.fixIfDisliked(R).tone},"tone"),isBackground:!0,background:r(t=>fe.highestSurface(t),"background"),contrastCurve:new bA(1,1,3,7),toneDeltaPair:r(t=>new MR(fe.tertiaryContainer,fe.tertiary,15,"nearer",!1),"toneDeltaPair")});fe.onTertiaryContainer=iA.fromPalette({name:"on_tertiary_container",palette:r(t=>t.tertiaryPalette,"palette"),tone:r(t=>Tt(t)?t.isDark?0:100:IT(t)?iA.foregroundTone(fe.tertiaryContainer.tone(t),4.5):t.isDark?90:10,"tone"),background:r(t=>fe.tertiaryContainer,"background"),contrastCurve:new bA(4.5,7,11,21)});fe.error=iA.fromPalette({name:"error",palette:r(t=>t.errorPalette,"palette"),tone:r(t=>t.isDark?80:40,"tone"),isBackground:!0,background:r(t=>fe.highestSurface(t),"background"),contrastCurve:new bA(3,4.5,7,11),toneDeltaPair:r(t=>new MR(fe.errorContainer,fe.error,15,"nearer",!1),"toneDeltaPair")});fe.onError=iA.fromPalette({name:"on_error",palette:r(t=>t.errorPalette,"palette"),tone:r(t=>t.isDark?20:100,"tone"),background:r(t=>fe.error,"background"),contrastCurve:new bA(4.5,7,11,21)});fe.errorContainer=iA.fromPalette({name:"error_container",palette:r(t=>t.errorPalette,"palette"),tone:r(t=>t.isDark?30:90,"tone"),isBackground:!0,background:r(t=>fe.highestSurface(t),"background"),contrastCurve:new bA(1,1,3,7),toneDeltaPair:r(t=>new MR(fe.errorContainer,fe.error,15,"nearer",!1),"toneDeltaPair")});fe.onErrorContainer=iA.fromPalette({name:"on_error_container",palette:r(t=>t.errorPalette,"palette"),tone:r(t=>t.isDark?90:10,"tone"),background:r(t=>fe.errorContainer,"background"),contrastCurve:new bA(4.5,7,11,21)});fe.primaryFixed=iA.fromPalette({name:"primary_fixed",palette:r(t=>t.primaryPalette,"palette"),tone:r(t=>Tt(t)?40:90,"tone"),isBackground:!0,background:r(t=>fe.highestSurface(t),"background"),contrastCurve:new bA(1,1,3,7),toneDeltaPair:r(t=>new MR(fe.primaryFixed,fe.primaryFixedDim,10,"lighter",!0),"toneDeltaPair")});fe.primaryFixedDim=iA.fromPalette({name:"primary_fixed_dim",palette:r(t=>t.primaryPalette,"palette"),tone:r(t=>Tt(t)?30:80,"tone"),isBackground:!0,background:r(t=>fe.highestSurface(t),"background"),contrastCurve:new bA(1,1,3,7),toneDeltaPair:r(t=>new MR(fe.primaryFixed,fe.primaryFixedDim,10,"lighter",!0),"toneDeltaPair")});fe.onPrimaryFixed=iA.fromPalette({name:"on_primary_fixed",palette:r(t=>t.primaryPalette,"palette"),tone:r(t=>Tt(t)?100:10,"tone"),background:r(t=>fe.primaryFixedDim,"background"),secondBackground:r(t=>fe.primaryFixed,"secondBackground"),contrastCurve:new bA(4.5,7,11,21)});fe.onPrimaryFixedVariant=iA.fromPalette({name:"on_primary_fixed_variant",palette:r(t=>t.primaryPalette,"palette"),tone:r(t=>Tt(t)?90:30,"tone"),background:r(t=>fe.primaryFixedDim,"background"),secondBackground:r(t=>fe.primaryFixed,"secondBackground"),contrastCurve:new bA(3,4.5,7,11)});fe.secondaryFixed=iA.fromPalette({name:"secondary_fixed",palette:r(t=>t.secondaryPalette,"palette"),tone:r(t=>Tt(t)?80:90,"tone"),isBackground:!0,background:r(t=>fe.highestSurface(t),"background"),contrastCurve:new bA(1,1,3,7),toneDeltaPair:r(t=>new MR(fe.secondaryFixed,fe.secondaryFixedDim,10,"lighter",!0),"toneDeltaPair")});fe.secondaryFixedDim=iA.fromPalette({name:"secondary_fixed_dim",palette:r(t=>t.secondaryPalette,"palette"),tone:r(t=>Tt(t)?70:80,"tone"),isBackground:!0,background:r(t=>fe.highestSurface(t),"background"),contrastCurve:new bA(1,1,3,7),toneDeltaPair:r(t=>new MR(fe.secondaryFixed,fe.secondaryFixedDim,10,"lighter",!0),"toneDeltaPair")});fe.onSecondaryFixed=iA.fromPalette({name:"on_secondary_fixed",palette:r(t=>t.secondaryPalette,"palette"),tone:r(t=>10,"tone"),background:r(t=>fe.secondaryFixedDim,"background"),secondBackground:r(t=>fe.secondaryFixed,"secondBackground"),contrastCurve:new bA(4.5,7,11,21)});fe.onSecondaryFixedVariant=iA.fromPalette({name:"on_secondary_fixed_variant",palette:r(t=>t.secondaryPalette,"palette"),tone:r(t=>Tt(t)?25:30,"tone"),background:r(t=>fe.secondaryFixedDim,"background"),secondBackground:r(t=>fe.secondaryFixed,"secondBackground"),contrastCurve:new bA(3,4.5,7,11)});fe.tertiaryFixed=iA.fromPalette({name:"tertiary_fixed",palette:r(t=>t.tertiaryPalette,"palette"),tone:r(t=>Tt(t)?40:90,"tone"),isBackground:!0,background:r(t=>fe.highestSurface(t),"background"),contrastCurve:new bA(1,1,3,7),toneDeltaPair:r(t=>new MR(fe.tertiaryFixed,fe.tertiaryFixedDim,10,"lighter",!0),"toneDeltaPair")});fe.tertiaryFixedDim=iA.fromPalette({name:"tertiary_fixed_dim",palette:r(t=>t.tertiaryPalette,"palette"),tone:r(t=>Tt(t)?30:80,"tone"),isBackground:!0,background:r(t=>fe.highestSurface(t),"background"),contrastCurve:new bA(1,1,3,7),toneDeltaPair:r(t=>new MR(fe.tertiaryFixed,fe.tertiaryFixedDim,10,"lighter",!0),"toneDeltaPair")});fe.onTertiaryFixed=iA.fromPalette({name:"on_tertiary_fixed",palette:r(t=>t.tertiaryPalette,"palette"),tone:r(t=>Tt(t)?100:10,"tone"),background:r(t=>fe.tertiaryFixedDim,"background"),secondBackground:r(t=>fe.tertiaryFixed,"secondBackground"),contrastCurve:new bA(4.5,7,11,21)});fe.onTertiaryFixedVariant=iA.fromPalette({name:"on_tertiary_fixed_variant",palette:r(t=>t.tertiaryPalette,"palette"),tone:r(t=>Tt(t)?90:30,"tone"),background:r(t=>fe.tertiaryFixedDim,"background"),secondBackground:r(t=>fe.tertiaryFixed,"secondBackground"),contrastCurve:new bA(3,4.5,7,11)});/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const mc=class mc{fromInt(E){return M8(E)}toInt(E){return D8(E[0],E[1],E[2])}distance(E,R){const I=E[0]-R[0],N=E[1]-R[1],S=E[2]-R[2];return I*I+N*N+S*S}};r(mc,"LabPointProvider");let cP=mc;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const H8=10,c8=3,gc=class gc{static quantize(E,R,I){const N=new Map,S=new Array,T=new Array,i=new cP;let o=0;for(let m=0;m<E.length;m++){const W=E[m],v=N.get(W);v===void 0?(o++,S.push(i.fromInt(W)),T.push(W),N.set(W,1)):N.set(W,v+1)}const C=new Array;for(let m=0;m<o;m++){const W=T[m],v=N.get(W);v!==void 0&&(C[m]=v)}let U=Math.min(I,o);R.length>0&&(U=Math.min(U,R.length));const _=new Array;for(let m=0;m<R.length;m++)_.push(i.fromInt(R[m]));const G=U-_.length;if(R.length===0&&G>0)for(let m=0;m<G;m++){const W=Math.random()*100,v=Math.random()*201+-100,$=Math.random()*201+-100;_.push(new Array(W,v,$))}const H=new Array;for(let m=0;m<o;m++)H.push(Math.floor(Math.random()*U));const c=new Array;for(let m=0;m<U;m++){c.push(new Array);for(let W=0;W<U;W++)c[m].push(0)}const f=new Array;for(let m=0;m<U;m++){f.push(new Array);for(let W=0;W<U;W++)f[m].push(new hP)}const d=new Array;for(let m=0;m<U;m++)d.push(0);for(let m=0;m<H8;m++){for(let q=0;q<U;q++){for(let Ie=q+1;Ie<U;Ie++){const le=i.distance(_[q],_[Ie]);f[Ie][q].distance=le,f[Ie][q].index=q,f[q][Ie].distance=le,f[q][Ie].index=Ie}f[q].sort();for(let Ie=0;Ie<U;Ie++)c[q][Ie]=f[q][Ie].index}let W=0;for(let q=0;q<o;q++){const Ie=S[q],le=H[q],Ae=_[le],Re=i.distance(Ie,Ae);let se=Re,ie=-1;for(let He=0;He<U;He++){if(f[le][He].distance>=4*Re)continue;const ve=i.distance(Ie,_[He]);ve<se&&(se=ve,ie=He)}ie!==-1&&Math.abs(Math.sqrt(se)-Math.sqrt(Re))>c8&&(W++,H[q]=ie)}if(W===0&&m!==0)break;const v=new Array(U).fill(0),$=new Array(U).fill(0),Oe=new Array(U).fill(0);for(let q=0;q<U;q++)d[q]=0;for(let q=0;q<o;q++){const Ie=H[q],le=S[q],Ae=C[q];d[Ie]+=Ae,v[Ie]+=le[0]*Ae,$[Ie]+=le[1]*Ae,Oe[Ie]+=le[2]*Ae}for(let q=0;q<U;q++){const Ie=d[q];if(Ie===0){_[q]=[0,0,0];continue}const le=v[q]/Ie,Ae=$[q]/Ie,Re=Oe[q]/Ie;_[q]=[le,Ae,Re]}}const w=new Map;for(let m=0;m<U;m++){const W=d[m];if(W===0)continue;const v=i.toInt(_[m]);w.has(v)||w.set(v,W)}return w}};r(gc,"QuantizerWsmeans");let BP=gc;const pc=class pc{constructor(){this.distance=-1,this.index=-1}};r(pc,"DistanceAndIndex");let hP=pc;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const yc=class yc{static quantize(E){const R=new Map;for(let I=0;I<E.length;I++){const N=E[I];Hv(N)<255||R.set(N,(R.get(N)??0)+1)}return R}};r(yc,"QuantizerMap");let fP=yc;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const oi=5,hO=33,sT=35937,uR={RED:"red",GREEN:"green",BLUE:"blue"},wc=class wc{constructor(E=[],R=[],I=[],N=[],S=[],T=[]){this.weights=E,this.momentsR=R,this.momentsG=I,this.momentsB=N,this.moments=S,this.cubes=T}quantize(E,R){this.constructHistogram(E),this.computeMoments();const I=this.createBoxes(R);return this.createResult(I.resultCount)}constructHistogram(E){this.weights=Array.from({length:sT}).fill(0),this.momentsR=Array.from({length:sT}).fill(0),this.momentsG=Array.from({length:sT}).fill(0),this.momentsB=Array.from({length:sT}).fill(0),this.moments=Array.from({length:sT}).fill(0);const R=fP.quantize(E);for(const[I,N]of R.entries()){const S=MM(I),T=PM(I),i=GM(I),o=8-oi,C=(S>>o)+1,U=(T>>o)+1,_=(i>>o)+1,G=this.getIndex(C,U,_);this.weights[G]=(this.weights[G]??0)+N,this.momentsR[G]+=N*S,this.momentsG[G]+=N*T,this.momentsB[G]+=N*i,this.moments[G]+=N*(S*S+T*T+i*i)}}computeMoments(){for(let E=1;E<hO;E++){const R=Array.from({length:hO}).fill(0),I=Array.from({length:hO}).fill(0),N=Array.from({length:hO}).fill(0),S=Array.from({length:hO}).fill(0),T=Array.from({length:hO}).fill(0);for(let i=1;i<hO;i++){let o=0,C=0,U=0,_=0,G=0;for(let H=1;H<hO;H++){const c=this.getIndex(E,i,H);o+=this.weights[c],C+=this.momentsR[c],U+=this.momentsG[c],_+=this.momentsB[c],G+=this.moments[c],R[H]+=o,I[H]+=C,N[H]+=U,S[H]+=_,T[H]+=G;const f=this.getIndex(E-1,i,H);this.weights[c]=this.weights[f]+R[H],this.momentsR[c]=this.momentsR[f]+I[H],this.momentsG[c]=this.momentsG[f]+N[H],this.momentsB[c]=this.momentsB[f]+S[H],this.moments[c]=this.moments[f]+T[H]}}}}createBoxes(E){this.cubes=Array.from({length:E}).fill(0).map(()=>new KP);const R=Array.from({length:E}).fill(0);this.cubes[0].r0=0,this.cubes[0].g0=0,this.cubes[0].b0=0,this.cubes[0].r1=hO-1,this.cubes[0].g1=hO-1,this.cubes[0].b1=hO-1;let I=E,N=0;for(let S=1;S<E;S++){this.cut(this.cubes[N],this.cubes[S])?(R[N]=this.cubes[N].vol>1?this.variance(this.cubes[N]):0,R[S]=this.cubes[S].vol>1?this.variance(this.cubes[S]):0):(R[N]=0,S--),N=0;let T=R[0];for(let i=1;i<=S;i++)R[i]>T&&(T=R[i],N=i);if(T<=0){I=S+1;break}}return new FP(E,I)}createResult(E){const R=[];for(let I=0;I<E;++I){const N=this.cubes[I],S=this.volume(N,this.weights);if(S>0){const T=Math.round(this.volume(N,this.momentsR)/S),i=Math.round(this.volume(N,this.momentsG)/S),o=Math.round(this.volume(N,this.momentsB)/S),C=255<<24|(T&255)<<16|(i&255)<<8|o&255;R.push(C)}}return R}variance(E){const R=this.volume(E,this.momentsR),I=this.volume(E,this.momentsG),N=this.volume(E,this.momentsB),S=this.moments[this.getIndex(E.r1,E.g1,E.b1)]-this.moments[this.getIndex(E.r1,E.g1,E.b0)]-this.moments[this.getIndex(E.r1,E.g0,E.b1)]+this.moments[this.getIndex(E.r1,E.g0,E.b0)]-this.moments[this.getIndex(E.r0,E.g1,E.b1)]+this.moments[this.getIndex(E.r0,E.g1,E.b0)]+this.moments[this.getIndex(E.r0,E.g0,E.b1)]-this.moments[this.getIndex(E.r0,E.g0,E.b0)],T=R*R+I*I+N*N,i=this.volume(E,this.weights);return S-T/i}cut(E,R){const I=this.volume(E,this.momentsR),N=this.volume(E,this.momentsG),S=this.volume(E,this.momentsB),T=this.volume(E,this.weights),i=this.maximize(E,uR.RED,E.r0+1,E.r1,I,N,S,T),o=this.maximize(E,uR.GREEN,E.g0+1,E.g1,I,N,S,T),C=this.maximize(E,uR.BLUE,E.b0+1,E.b1,I,N,S,T);let U;const _=i.maximum,G=o.maximum,H=C.maximum;if(_>=G&&_>=H){if(i.cutLocation<0)return!1;U=uR.RED}else G>=_&&G>=H?U=uR.GREEN:U=uR.BLUE;switch(R.r1=E.r1,R.g1=E.g1,R.b1=E.b1,U){case uR.RED:E.r1=i.cutLocation,R.r0=E.r1,R.g0=E.g0,R.b0=E.b0;break;case uR.GREEN:E.g1=o.cutLocation,R.r0=E.r0,R.g0=E.g1,R.b0=E.b0;break;case uR.BLUE:E.b1=C.cutLocation,R.r0=E.r0,R.g0=E.g0,R.b0=E.b1;break;default:throw new Error("unexpected direction "+U)}return E.vol=(E.r1-E.r0)*(E.g1-E.g0)*(E.b1-E.b0),R.vol=(R.r1-R.r0)*(R.g1-R.g0)*(R.b1-R.b0),!0}maximize(E,R,I,N,S,T,i,o){const C=this.bottom(E,R,this.momentsR),U=this.bottom(E,R,this.momentsG),_=this.bottom(E,R,this.momentsB),G=this.bottom(E,R,this.weights);let H=0,c=-1,f=0,d=0,w=0,m=0;for(let W=I;W<N;W++){if(f=C+this.top(E,R,W,this.momentsR),d=U+this.top(E,R,W,this.momentsG),w=_+this.top(E,R,W,this.momentsB),m=G+this.top(E,R,W,this.weights),m===0)continue;let v=(f*f+d*d+w*w)*1,$=m*1,Oe=v/$;f=S-f,d=T-d,w=i-w,m=o-m,m!==0&&(v=(f*f+d*d+w*w)*1,$=m*1,Oe+=v/$,Oe>H&&(H=Oe,c=W))}return new YP(c,H)}volume(E,R){return R[this.getIndex(E.r1,E.g1,E.b1)]-R[this.getIndex(E.r1,E.g1,E.b0)]-R[this.getIndex(E.r1,E.g0,E.b1)]+R[this.getIndex(E.r1,E.g0,E.b0)]-R[this.getIndex(E.r0,E.g1,E.b1)]+R[this.getIndex(E.r0,E.g1,E.b0)]+R[this.getIndex(E.r0,E.g0,E.b1)]-R[this.getIndex(E.r0,E.g0,E.b0)]}bottom(E,R,I){switch(R){case uR.RED:return-I[this.getIndex(E.r0,E.g1,E.b1)]+I[this.getIndex(E.r0,E.g1,E.b0)]+I[this.getIndex(E.r0,E.g0,E.b1)]-I[this.getIndex(E.r0,E.g0,E.b0)];case uR.GREEN:return-I[this.getIndex(E.r1,E.g0,E.b1)]+I[this.getIndex(E.r1,E.g0,E.b0)]+I[this.getIndex(E.r0,E.g0,E.b1)]-I[this.getIndex(E.r0,E.g0,E.b0)];case uR.BLUE:return-I[this.getIndex(E.r1,E.g1,E.b0)]+I[this.getIndex(E.r1,E.g0,E.b0)]+I[this.getIndex(E.r0,E.g1,E.b0)]-I[this.getIndex(E.r0,E.g0,E.b0)];default:throw new Error("unexpected direction $direction")}}top(E,R,I,N){switch(R){case uR.RED:return N[this.getIndex(I,E.g1,E.b1)]-N[this.getIndex(I,E.g1,E.b0)]-N[this.getIndex(I,E.g0,E.b1)]+N[this.getIndex(I,E.g0,E.b0)];case uR.GREEN:return N[this.getIndex(E.r1,I,E.b1)]-N[this.getIndex(E.r1,I,E.b0)]-N[this.getIndex(E.r0,I,E.b1)]+N[this.getIndex(E.r0,I,E.b0)];case uR.BLUE:return N[this.getIndex(E.r1,E.g1,I)]-N[this.getIndex(E.r1,E.g0,I)]-N[this.getIndex(E.r0,E.g1,I)]+N[this.getIndex(E.r0,E.g0,I)];default:throw new Error("unexpected direction $direction")}}getIndex(E,R,I){return(E<<oi*2)+(E<<oi+1)+E+(R<<oi)+R+I}};r(wc,"QuantizerWu");let dP=wc;const Vc=class Vc{constructor(E=0,R=0,I=0,N=0,S=0,T=0,i=0){this.r0=E,this.r1=R,this.g0=I,this.g1=N,this.b0=S,this.b1=T,this.vol=i}};r(Vc,"Box");let KP=Vc;const vc=class vc{constructor(E,R){this.requestedCount=E,this.resultCount=R}};r(vc,"CreateBoxesResult");let FP=vc;const xc=class xc{constructor(E,R){this.cutLocation=E,this.maximum=R}};r(xc,"MaximizeResult");let YP=xc;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const bc=class bc{static quantize(E,R){const N=new dP().quantize(E,R);return BP.quantize(E,N,R)}};r(bc,"QuantizerCelebi");let ca=bc;const tO=!0,B8=5,h8=3,wX=3,f8=6;function Bv(t){switch(t){case 1:return 25;case 2:return 50;case 3:return 75;case 4:return 100;case 5:return 150;case 6:return 200;case 7:return 300;case 8:case 9:return 450;default:return 600}}r(Bv,"getStarterValueFriendshipCap");const kE={[e.BULBASAUR]:3,[e.CHARMANDER]:3,[e.SQUIRTLE]:3,[e.CATERPIE]:2,[e.WEEDLE]:1,[e.PIDGEY]:1,[e.RATTATA]:1,[e.SPEAROW]:1,[e.EKANS]:2,[e.PIKACHU]:4,[e.SANDSHREW]:2,[e.NIDORAN_F]:3,[e.NIDORAN_M]:3,[e.VULPIX]:3,[e.ZUBAT]:3,[e.ODDISH]:3,[e.PARAS]:2,[e.VENONAT]:2,[e.DIGLETT]:2,[e.MEOWTH]:3,[e.PSYDUCK]:2,[e.MANKEY]:4,[e.GROWLITHE]:4,[e.POLIWAG]:2,[e.ABRA]:4,[e.MACHOP]:3,[e.BELLSPROUT]:2,[e.TENTACOOL]:3,[e.GEODUDE]:3,[e.PONYTA]:2,[e.SLOWPOKE]:3,[e.MAGNEMITE]:4,[e.FARFETCHD]:2,[e.DODUO]:3,[e.SEEL]:1,[e.GRIMER]:2,[e.SHELLDER]:5,[e.GASTLY]:4,[e.ONIX]:3,[e.DROWZEE]:2,[e.KRABBY]:3,[e.VOLTORB]:2,[e.EXEGGCUTE]:3,[e.CUBONE]:3,[e.LICKITUNG]:3,[e.KOFFING]:2,[e.RHYHORN]:4,[e.TANGELA]:3,[e.KANGASKHAN]:4,[e.HORSEA]:3,[e.GOLDEEN]:2,[e.STARYU]:3,[e.SCYTHER]:5,[e.PINSIR]:4,[e.TAUROS]:4,[e.MAGIKARP]:4,[e.LAPRAS]:4,[e.DITTO]:2,[e.EEVEE]:3,[e.PORYGON]:4,[e.OMANYTE]:3,[e.KABUTO]:3,[e.AERODACTYL]:5,[e.ARTICUNO]:5,[e.ZAPDOS]:6,[e.MOLTRES]:6,[e.DRATINI]:4,[e.MEWTWO]:8,[e.MEW]:5,[e.CHIKORITA]:2,[e.CYNDAQUIL]:3,[e.TOTODILE]:3,[e.SENTRET]:1,[e.HOOTHOOT]:2,[e.LEDYBA]:1,[e.SPINARAK]:1,[e.CHINCHOU]:2,[e.PICHU]:4,[e.CLEFFA]:2,[e.IGGLYBUFF]:1,[e.TOGEPI]:3,[e.NATU]:2,[e.MAREEP]:2,[e.HOPPIP]:2,[e.AIPOM]:2,[e.SUNKERN]:1,[e.YANMA]:3,[e.WOOPER]:2,[e.MURKROW]:3,[e.MISDREAVUS]:3,[e.UNOWN]:1,[e.GIRAFARIG]:3,[e.PINECO]:2,[e.DUNSPARCE]:3,[e.GLIGAR]:3,[e.SNUBBULL]:2,[e.QWILFISH]:3,[e.SHUCKLE]:3,[e.HERACROSS]:5,[e.SNEASEL]:4,[e.TEDDIURSA]:4,[e.SLUGMA]:2,[e.SWINUB]:3,[e.CORSOLA]:2,[e.REMORAID]:2,[e.DELIBIRD]:2,[e.SKARMORY]:4,[e.HOUNDOUR]:3,[e.PHANPY]:3,[e.STANTLER]:3,[e.SMEARGLE]:1,[e.TYROGUE]:3,[e.SMOOCHUM]:3,[e.ELEKID]:3,[e.MAGBY]:3,[e.MILTANK]:4,[e.RAIKOU]:6,[e.ENTEI]:6,[e.SUICUNE]:6,[e.LARVITAR]:4,[e.LUGIA]:8,[e.HO_OH]:8,[e.CELEBI]:5,[e.TREECKO]:3,[e.TORCHIC]:4,[e.MUDKIP]:3,[e.POOCHYENA]:2,[e.ZIGZAGOON]:2,[e.WURMPLE]:1,[e.LOTAD]:3,[e.SEEDOT]:2,[e.TAILLOW]:3,[e.WINGULL]:2,[e.RALTS]:4,[e.SURSKIT]:2,[e.SHROOMISH]:3,[e.SLAKOTH]:4,[e.NINCADA]:4,[e.WHISMUR]:2,[e.MAKUHITA]:3,[e.AZURILL]:4,[e.NOSEPASS]:2,[e.SKITTY]:1,[e.SABLEYE]:2,[e.MAWILE]:2,[e.ARON]:3,[e.MEDITITE]:3,[e.ELECTRIKE]:2,[e.PLUSLE]:2,[e.MINUN]:2,[e.VOLBEAT]:2,[e.ILLUMISE]:2,[e.GULPIN]:1,[e.CARVANHA]:3,[e.WAILMER]:2,[e.NUMEL]:2,[e.TORKOAL]:3,[e.SPOINK]:2,[e.SPINDA]:1,[e.TRAPINCH]:3,[e.CACNEA]:2,[e.SWABLU]:2,[e.ZANGOOSE]:4,[e.SEVIPER]:3,[e.LUNATONE]:3,[e.SOLROCK]:3,[e.BARBOACH]:2,[e.CORPHISH]:3,[e.BALTOY]:2,[e.LILEEP]:3,[e.ANORITH]:3,[e.FEEBAS]:4,[e.CASTFORM]:1,[e.KECLEON]:2,[e.SHUPPET]:2,[e.DUSKULL]:3,[e.TROPIUS]:3,[e.ABSOL]:4,[e.WYNAUT]:2,[e.SNORUNT]:2,[e.SPHEAL]:2,[e.CLAMPERL]:3,[e.RELICANTH]:3,[e.LUVDISC]:1,[e.BAGON]:4,[e.BELDUM]:4,[e.REGIROCK]:6,[e.REGICE]:5,[e.REGISTEEL]:6,[e.LATIAS]:7,[e.LATIOS]:7,[e.KYOGRE]:9,[e.GROUDON]:9,[e.RAYQUAZA]:9,[e.JIRACHI]:7,[e.DEOXYS]:7,[e.TURTWIG]:3,[e.CHIMCHAR]:3,[e.PIPLUP]:3,[e.STARLY]:3,[e.BIDOOF]:2,[e.KRICKETOT]:1,[e.SHINX]:2,[e.BUDEW]:3,[e.CRANIDOS]:2,[e.SHIELDON]:3,[e.BURMY]:2,[e.COMBEE]:2,[e.PACHIRISU]:2,[e.BUIZEL]:2,[e.CHERUBI]:1,[e.SHELLOS]:3,[e.DRIFLOON]:2,[e.BUNEARY]:2,[e.GLAMEOW]:2,[e.CHINGLING]:2,[e.STUNKY]:2,[e.BRONZOR]:3,[e.BONSLY]:2,[e.MIME_JR]:2,[e.HAPPINY]:2,[e.CHATOT]:2,[e.SPIRITOMB]:4,[e.GIBLE]:4,[e.MUNCHLAX]:4,[e.RIOLU]:3,[e.HIPPOPOTAS]:3,[e.SKORUPI]:3,[e.CROAGUNK]:2,[e.CARNIVINE]:2,[e.FINNEON]:1,[e.MANTYKE]:2,[e.SNOVER]:2,[e.ROTOM]:4,[e.UXIE]:5,[e.MESPRIT]:5,[e.AZELF]:6,[e.DIALGA]:8,[e.PALKIA]:8,[e.HEATRAN]:7,[e.REGIGIGAS]:7,[e.GIRATINA]:8,[e.CRESSELIA]:6,[e.PHIONE]:4,[e.MANAPHY]:7,[e.DARKRAI]:7,[e.SHAYMIN]:6,[e.ARCEUS]:9,[e.VICTINI]:6,[e.SNIVY]:3,[e.TEPIG]:3,[e.OSHAWOTT]:3,[e.PATRAT]:1,[e.LILLIPUP]:3,[e.PURRLOIN]:2,[e.PANSAGE]:2,[e.PANSEAR]:2,[e.PANPOUR]:2,[e.MUNNA]:2,[e.PIDOVE]:1,[e.BLITZLE]:2,[e.ROGGENROLA]:3,[e.WOOBAT]:3,[e.DRILBUR]:4,[e.AUDINO]:3,[e.TIMBURR]:4,[e.TYMPOLE]:3,[e.THROH]:4,[e.SAWK]:4,[e.SEWADDLE]:2,[e.VENIPEDE]:3,[e.COTTONEE]:3,[e.PETILIL]:3,[e.BASCULIN]:4,[e.SANDILE]:4,[e.DARUMAKA]:4,[e.MARACTUS]:2,[e.DWEBBLE]:2,[e.SCRAGGY]:3,[e.SIGILYPH]:4,[e.YAMASK]:3,[e.TIRTOUGA]:3,[e.ARCHEN]:3,[e.TRUBBISH]:2,[e.ZORUA]:3,[e.MINCCINO]:3,[e.GOTHITA]:3,[e.SOLOSIS]:3,[e.DUCKLETT]:2,[e.VANILLITE]:3,[e.DEERLING]:2,[e.EMOLGA]:2,[e.KARRABLAST]:3,[e.FOONGUS]:3,[e.FRILLISH]:3,[e.ALOMOMOLA]:4,[e.JOLTIK]:3,[e.FERROSEED]:3,[e.KLINK]:3,[e.TYNAMO]:2,[e.ELGYEM]:2,[e.LITWICK]:3,[e.AXEW]:4,[e.CUBCHOO]:2,[e.CRYOGONAL]:4,[e.SHELMET]:2,[e.STUNFISK]:3,[e.MIENFOO]:3,[e.DRUDDIGON]:4,[e.GOLETT]:3,[e.PAWNIARD]:4,[e.BOUFFALANT]:4,[e.RUFFLET]:3,[e.VULLABY]:3,[e.HEATMOR]:3,[e.DURANT]:4,[e.DEINO]:4,[e.LARVESTA]:4,[e.COBALION]:6,[e.TERRAKION]:6,[e.VIRIZION]:6,[e.TORNADUS]:7,[e.THUNDURUS]:7,[e.RESHIRAM]:8,[e.ZEKROM]:8,[e.LANDORUS]:7,[e.KYUREM]:8,[e.KELDEO]:6,[e.MELOETTA]:7,[e.GENESECT]:6,[e.CHESPIN]:3,[e.FENNEKIN]:3,[e.FROAKIE]:4,[e.BUNNELBY]:3,[e.FLETCHLING]:3,[e.SCATTERBUG]:2,[e.LITLEO]:2,[e.FLABEBE]:3,[e.SKIDDO]:2,[e.PANCHAM]:3,[e.FURFROU]:3,[e.ESPURR]:2,[e.HONEDGE]:4,[e.SPRITZEE]:2,[e.SWIRLIX]:3,[e.INKAY]:3,[e.BINACLE]:3,[e.SKRELP]:2,[e.CLAUNCHER]:3,[e.HELIOPTILE]:3,[e.TYRUNT]:3,[e.AMAURA]:2,[e.HAWLUCHA]:4,[e.DEDENNE]:2,[e.CARBINK]:2,[e.GOOMY]:4,[e.KLEFKI]:3,[e.PHANTUMP]:2,[e.PUMPKABOO]:2,[e.BERGMITE]:3,[e.NOIBAT]:3,[e.XERNEAS]:8,[e.YVELTAL]:8,[e.ZYGARDE]:8,[e.DIANCIE]:7,[e.HOOPA]:7,[e.VOLCANION]:7,[e.ETERNAL_FLOETTE]:4,[e.ROWLET]:3,[e.LITTEN]:3,[e.POPPLIO]:4,[e.PIKIPEK]:2,[e.YUNGOOS]:2,[e.GRUBBIN]:3,[e.CRABRAWLER]:3,[e.ORICORIO]:3,[e.CUTIEFLY]:3,[e.ROCKRUFF]:3,[e.WISHIWASHI]:2,[e.MAREANIE]:2,[e.MUDBRAY]:3,[e.DEWPIDER]:3,[e.FOMANTIS]:2,[e.MORELULL]:2,[e.SALANDIT]:3,[e.STUFFUL]:3,[e.BOUNSWEET]:3,[e.COMFEY]:4,[e.ORANGURU]:4,[e.PASSIMIAN]:4,[e.WIMPOD]:3,[e.SANDYGAST]:3,[e.PYUKUMUKU]:2,[e.TYPE_NULL]:5,[e.MINIOR]:4,[e.KOMALA]:3,[e.TURTONATOR]:4,[e.TOGEDEMARU]:3,[e.MIMIKYU]:4,[e.BRUXISH]:4,[e.DRAMPA]:4,[e.DHELMISE]:4,[e.JANGMO_O]:4,[e.TAPU_KOKO]:6,[e.TAPU_LELE]:7,[e.TAPU_BULU]:6,[e.TAPU_FINI]:5,[e.COSMOG]:7,[e.NIHILEGO]:6,[e.BUZZWOLE]:6,[e.PHEROMOSA]:7,[e.XURKITREE]:6,[e.CELESTEELA]:6,[e.KARTANA]:8,[e.GUZZLORD]:6,[e.NECROZMA]:8,[e.MAGEARNA]:7,[e.MARSHADOW]:8,[e.POIPOLE]:8,[e.STAKATAKA]:6,[e.BLACEPHALON]:7,[e.ZERAORA]:6,[e.MELTAN]:6,[e.ALOLA_RATTATA]:1,[e.ALOLA_SANDSHREW]:2,[e.ALOLA_VULPIX]:3,[e.ALOLA_DIGLETT]:2,[e.ALOLA_MEOWTH]:3,[e.ALOLA_GEODUDE]:3,[e.ALOLA_GRIMER]:3,[e.GROOKEY]:3,[e.SCORBUNNY]:4,[e.SOBBLE]:3,[e.SKWOVET]:2,[e.ROOKIDEE]:3,[e.BLIPBUG]:2,[e.NICKIT]:1,[e.GOSSIFLEUR]:2,[e.WOOLOO]:2,[e.CHEWTLE]:3,[e.YAMPER]:2,[e.ROLYCOLY]:3,[e.APPLIN]:3,[e.SILICOBRA]:3,[e.CRAMORANT]:3,[e.ARROKUDA]:3,[e.TOXEL]:3,[e.SIZZLIPEDE]:3,[e.CLOBBOPUS]:2,[e.SINISTEA]:3,[e.HATENNA]:3,[e.IMPIDIMP]:3,[e.MILCERY]:3,[e.FALINKS]:4,[e.PINCURCHIN]:3,[e.SNOM]:3,[e.STONJOURNER]:3,[e.EISCUE]:3,[e.INDEEDEE]:4,[e.MORPEKO]:3,[e.CUFANT]:3,[e.DRACOZOLT]:5,[e.ARCTOZOLT]:4,[e.DRACOVISH]:5,[e.ARCTOVISH]:4,[e.DURALUDON]:5,[e.DREEPY]:4,[e.ZACIAN]:9,[e.ZAMAZENTA]:8,[e.ETERNATUS]:10,[e.KUBFU]:6,[e.ZARUDE]:5,[e.REGIELEKI]:6,[e.REGIDRAGO]:6,[e.GLASTRIER]:6,[e.SPECTRIER]:8,[e.CALYREX]:8,[e.ENAMORUS]:7,[e.GALAR_MEOWTH]:3,[e.GALAR_PONYTA]:2,[e.GALAR_SLOWPOKE]:3,[e.GALAR_FARFETCHD]:3,[e.GALAR_ARTICUNO]:6,[e.GALAR_ZAPDOS]:6,[e.GALAR_MOLTRES]:6,[e.GALAR_CORSOLA]:3,[e.GALAR_ZIGZAGOON]:3,[e.GALAR_DARUMAKA]:4,[e.GALAR_YAMASK]:3,[e.GALAR_STUNFISK]:2,[e.HISUI_GROWLITHE]:4,[e.HISUI_VOLTORB]:3,[e.HISUI_QWILFISH]:4,[e.HISUI_SNEASEL]:5,[e.HISUI_ZORUA]:3,[e.SPRIGATITO]:4,[e.FUECOCO]:4,[e.QUAXLY]:4,[e.LECHONK]:2,[e.TAROUNTULA]:1,[e.NYMBLE]:3,[e.PAWMI]:3,[e.TANDEMAUS]:4,[e.FIDOUGH]:2,[e.SMOLIV]:3,[e.SQUAWKABILLY]:2,[e.NACLI]:4,[e.CHARCADET]:4,[e.TADBULB]:3,[e.WATTREL]:3,[e.MASCHIFF]:3,[e.SHROODLE]:2,[e.BRAMBLIN]:3,[e.TOEDSCOOL]:3,[e.KLAWF]:3,[e.CAPSAKID]:3,[e.RELLOR]:2,[e.FLITTLE]:3,[e.TINKATINK]:4,[e.WIGLETT]:2,[e.BOMBIRDIER]:3,[e.FINIZEN]:3,[e.VAROOM]:4,[e.CYCLIZAR]:4,[e.ORTHWORM]:4,[e.GLIMMET]:4,[e.GREAVARD]:3,[e.FLAMIGO]:4,[e.CETODDLE]:3,[e.VELUZA]:4,[e.DONDOZO]:4,[e.TATSUGIRI]:4,[e.GREAT_TUSK]:7,[e.SCREAM_TAIL]:5,[e.BRUTE_BONNET]:5,[e.FLUTTER_MANE]:7,[e.SLITHER_WING]:6,[e.SANDY_SHOCKS]:6,[e.IRON_TREADS]:6,[e.IRON_BUNDLE]:6,[e.IRON_HANDS]:6,[e.IRON_JUGULIS]:6,[e.IRON_MOTH]:6,[e.IRON_THORNS]:5,[e.FRIGIBAX]:4,[e.GIMMIGHOUL]:4,[e.WO_CHIEN]:5,[e.CHIEN_PAO]:7,[e.TING_LU]:6,[e.CHI_YU]:7,[e.ROARING_MOON]:7,[e.IRON_VALIANT]:6,[e.KORAIDON]:9,[e.MIRAIDON]:9,[e.WALKING_WAKE]:7,[e.IRON_LEAVES]:6,[e.POLTCHAGEIST]:4,[e.OKIDOGI]:6,[e.MUNKIDORI]:6,[e.FEZANDIPITI]:5,[e.OGERPON]:7,[e.GOUGING_FIRE]:7,[e.RAGING_BOLT]:7,[e.IRON_BOULDER]:7,[e.IRON_CROWN]:7,[e.TERAPAGOS]:9,[e.PECHARUNT]:6,[e.PALDEA_TAUROS]:5,[e.PALDEA_WOOPER]:3,[e.BLOODMOON_URSALUNA]:5},X1=[{passive:40,costReduction:[25,60],egg:30},{passive:40,costReduction:[25,60],egg:30},{passive:35,costReduction:[20,50],egg:25},{passive:30,costReduction:[15,40],egg:20},{passive:25,costReduction:[12,35],egg:18},{passive:20,costReduction:[10,30],egg:15},{passive:15,costReduction:[8,20],egg:12},{passive:10,costReduction:[5,15],egg:10},{passive:10,costReduction:[5,15],egg:10},{passive:10,costReduction:[5,15],egg:10}];function VX(t){return X1[t-1].passive}r(VX,"getPassiveCandyCount");function vX(t){return X1[t-1].costReduction}r(vX,"getValueReductionCandyCounts");function xX(t){return X1[t-1].egg}r(xX,"getSameSpeciesEggCandyCounts");var AA=(t=>(t[t.WILD=0]="WILD",t[t.TRAINER=1]="TRAINER",t[t.CLEAR=2]="CLEAR",t[t.MYSTERY_ENCOUNTER=3]="MYSTERY_ENCOUNTER",t))(AA||{}),b=(t=>(t[t.NONE=0]="NONE",t[t.TRAINER=1]="TRAINER",t[t.TRAINER_PARTNER=2]="TRAINER_PARTNER",t))(b||{});const Zc=class Zc{constructor(E){this.spriteScale=-1,this.hitsRecCount=null,this.spriteScale=(E==null?void 0:E.spriteScale)??-1,this.ability=(E==null?void 0:E.ability)??-1,this.passive=(E==null?void 0:E.passive)??-1,this.nature=(E==null?void 0:E.nature)??-1,this.types=(E==null?void 0:E.types)??[],this.hitsRecCount=(E==null?void 0:E.hitsRecCount)??null}};r(Zc,"CustomPokemonData");let lR=Zc;const kc=class kc{constructor(E){var I,N,S,T,i,o,C;const R=E instanceof bS?E:void 0;this.id=E.id,this.player=(R==null?void 0:R.isPlayer())??E.player,this.species=(R==null?void 0:R.species.speciesId)??E.species,this.nickname=((I=R==null?void 0:R.summonData.illusion)==null?void 0:I.basePokemon.nickname)??E.nickname,this.formIndex=Math.max(Math.min(E.formIndex,de(this.species).forms.length-1),0),this.abilityIndex=E.abilityIndex,this.passive=E.passive,this.shiny=((N=R==null?void 0:R.summonData.illusion)==null?void 0:N.basePokemon.shiny)??E.shiny,this.variant=((S=R==null?void 0:R.summonData.illusion)==null?void 0:S.basePokemon.variant)??E.variant,this.pokeball=E.pokeball??Me.POKEBALL,this.level=E.level,this.exp=E.exp,this.levelExp=E.levelExp,this.gender=E.gender,this.hp=E.hp,this.stats=E.stats,this.ivs=E.ivs,this.nature=E.nature??be.HARDY,this.moveset=E.moveset.map(U=>Ye.loadMove(U)),this.status=E.status?new pN(E.status.effect,E.status.toxicTurnCount,E.status.sleepTurnsRemaining):null,this.friendship=E.friendship??de(this.species).baseFriendship,this.metLevel=E.metLevel||5,this.metBiome=E.metBiome??-1,this.metSpecies=E.metSpecies,this.metWave=E.metWave??(this.metBiome===-1?-1:0),this.luck=E.luck??(E.shiny?E.variant+1:0),this.pauseEvolutions=!!E.pauseEvolutions,this.pokerus=!!E.pokerus,this.usedTMs=E.usedTMs??[],this.evoCounter=E.evoCounter??0,this.teraType=E.teraType,this.isTerastallized=!!E.isTerastallized,this.stellarTypesBoosted=E.stellarTypesBoosted??[],this.natureOverride=E.natureOverride,this.mysteryEncounterPokemonData=E.mysteryEncounterPokemonData?new lR(E.mysteryEncounterPokemonData):null,this.fusionMysteryEncounterPokemonData=E.fusionMysteryEncounterPokemonData?new lR(E.fusionMysteryEncounterPokemonData):null,this.fusionSpecies=((T=R==null?void 0:R.fusionSpecies)==null?void 0:T.speciesId)??E.fusionSpecies,this.fusionFormIndex=E.fusionFormIndex,this.fusionAbilityIndex=E.fusionAbilityIndex,this.fusionShiny=((i=R==null?void 0:R.summonData.illusion)==null?void 0:i.basePokemon.fusionShiny)??E.fusionShiny,this.fusionVariant=((o=R==null?void 0:R.summonData.illusion)==null?void 0:o.basePokemon.fusionVariant)??E.fusionVariant,this.fusionGender=E.fusionGender,this.fusionLuck=E.fusionLuck??(E.fusionShiny?E.fusionVariant+1:0),this.fusionTeraType=E.fusionTeraType??0,this.boss=E instanceof pR&&!!E.bossSegments||!this.player&&!!E.boss,this.bossSegments=E.bossSegments??0,this.summonData=new LS(E.summonData),this.battleData=new NS(E.battleData),this.summonDataSpeciesFormIndex=((C=R==null?void 0:R.summonData.speciesForm)==null?void 0:C.formIndex)??E.summonDataSpeciesFormIndex,this.customPokemonData=new lR(E.customPokemonData),this.fusionCustomPokemonData=new lR(E.fusionCustomPokemonData)}toPokemon(E,R=0,I=!1){const N=de(this.species),S=this.player?s.addPlayerPokemon(N,this.level,this.abilityIndex,this.formIndex,this.gender,this.shiny,this.variant,this.ivs,this.nature,this,T=>{this.nickname&&(T.nickname=this.nickname)}):s.addEnemyPokemon(N,this.level,E===AA.TRAINER?!I||!(R%2)?b.TRAINER:b.TRAINER_PARTNER:b.NONE,this.boss,!1,this);return this.summonData.speciesForm&&(S.summonData.speciesForm=XN(this.summonData.speciesForm.speciesId,this.summonDataSpeciesFormIndex)),S}};r(kc,"PokemonData");let Zt=kc;const d8=[],UI={[A.MEGA_PUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.LEDYBA,e.LEDIAN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GRUMPIG,e.SPINDA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.JIRACHI,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.GALLADE,e.DUSKNOIR,e.REGIGIGAS,e.VICTINI,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ZOROARK,e.REUNICLUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HELIOLISK,e.HAWLUCHA,e.GOODRA,e.INCINEROAR,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.TURTONATOR,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.GUZZLORD,e.MARSHADOW,e.ZERAORA,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.COALOSSAL,e.TOXTRICITY,e.CLOBBOPUS,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.MR_RIME,e.DRACOZOLT,e.ARCTOZOLT,e.KUBFU,e.URSHIFU,e.ZARUDE,[e.DEOXYS,"attack","defense","speed"],e.ALOLA_RAICHU,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN],[A.PAY_DAY]:[e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.RHYDON,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEWTWO,e.MEW,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.ESPEON,e.UMBREON,e.SLOWKING,e.SKITTY,e.DELCATTY,e.MUNCHLAX,e.RHYPERIOR,e.LEAFEON,e.GLACEON,e.PURRLOIN,e.LIEPARD,e.ESPURR,e.MEOWSTIC,e.SYLVEON,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.ZERAORA,e.PERRSERKER,e.INDEEDEE,e.CALYREX,e.ANNIHILAPE,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING],[A.FIRE_PUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MANKEY,e.PRIMEAPE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.SENTRET,e.FURRET,e.FLAAFFY,e.AMPHAROS,e.SUDOWOODO,e.AIPOM,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.COMBUSKEN,e.BLAZIKEN,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SABLEYE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.FLYGON,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.REGIROCK,e.GROUDON,e.JIRACHI,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.VICTINI,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.PANSEAR,e.SIMISEAR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.REUNICLUS,e.EELEKTROSS,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.HEATMOR,e.MELOETTA,e.BRAIXEN,e.DELPHOX,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HELIOLISK,e.HAWLUCHA,e.GOODRA,e.HOOPA,e.INCINEROAR,e.GUMSHOOS,[e.LYCANROC,"midnight"],e.KOMMO_O,e.MARSHADOW,e.BLACEPHALON,e.ZERAORA,e.CINDERACE,e.COALOSSAL,e.TOXTRICITY,e.GRIMMSNARL,e.OBSTAGOON,e.KUBFU,e.URSHIFU,e.URSALUNA,e.SNEASLER,e.PAWMOT,e.GARGANACL,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_HANDS,e.IRON_THORNS,e.IRON_VALIANT,e.OKIDOGI,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_TYPHLOSION,e.HISUI_GOODRA,e.BLOODMOON_URSALUNA],[A.ICE_PUNCH]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.SLOWBRO,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.SMOOCHUM,e.ELEKID,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.JIRACHI,e.DEOXYS,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.WATCHOG,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCRAGGY,e.SCRAFTY,e.REUNICLUS,e.CUBCHOO,e.BEARTIC,e.GOLETT,e.GOLURK,e.MELOETTA,e.FROGADIER,e.GRENINJA,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HOOPA,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.STUFFUL,e.BEWEAR,e.KOMMO_O,e.TAPU_FINI,e.BUZZWOLE,e.MARSHADOW,e.MELMETAL,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.OBSTAGOON,e.MR_RIME,e.EISCUE,e.KUBFU,e.URSHIFU,e.URSALUNA,e.PAWMOT,e.GARGANACL,e.PALAFIN,e.CETITAN,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_THORNS,e.IRON_VALIANT,e.OKIDOGI,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.BLOODMOON_URSALUNA],[A.THUNDER_PUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MANKEY,e.PRIMEAPE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.PICHU,e.FLAAFFY,e.AMPHAROS,e.SUDOWOODO,e.AIPOM,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.JIRACHI,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.PACHIRISU,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.VICTINI,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SCRAGGY,e.SCRAFTY,e.REUNICLUS,e.EELEKTROSS,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.HEATMOR,e.THUNDURUS,e.ZEKROM,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BRAIXEN,e.DELPHOX,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HELIOLISK,e.HAWLUCHA,e.DEDENNE,e.GOODRA,e.HOOPA,e.INCINEROAR,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.STUFFUL,e.BEWEAR,[e.LYCANROC,"midnight"],e.KOMMO_O,e.TAPU_KOKO,e.BUZZWOLE,e.XURKITREE,e.MARSHADOW,e.ZERAORA,e.MELMETAL,e.TOXTRICITY,e.GRIMMSNARL,e.OBSTAGOON,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.KUBFU,e.URSHIFU,e.URSALUNA,e.FLORAGATO,e.MEOWSCARADA,e.PAWMO,e.PAWMOT,e.GARGANACL,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.OKIDOGI,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_SLOWKING,e.HISUI_TYPHLOSION,e.HISUI_GOODRA,e.BLOODMOON_URSALUNA],[A.SWORDS_DANCE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BEEDRILL,e.RATICATE,e.SANDSHREW,e.SANDSLASH,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.RAPIDASH,e.FARFETCHD,e.DODUO,e.DODRIO,e.KRABBY,e.KINGLER,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.TANGELA,e.GOLDEEN,e.SEAKING,e.SCYTHER,e.PINSIR,e.KABUTOPS,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.LEDYBA,e.LEDIAN,e.ARIADOS,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.YANMA,e.GLIGAR,e.QWILFISH,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SKARMORY,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.NINJASK,e.MAWILE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.SOLROCK,e.CORPHISH,e.CRAWDAUNT,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.BANETTE,e.TROPIUS,e.ABSOL,e.WALREIN,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.CHERUBI,e.CHERRIM,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.TOXICROAK,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.YANMEGA,e.LEAFEON,e.GLISCOR,e.GALLADE,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.DRILBUR,e.EXCADRILL,e.LEAVANNY,e.SCOLIPEDE,e.LILLIGANT,e.DWEBBLE,e.CRUSTLE,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.SAWSBUCK,e.KARRABLAST,e.ESCAVALIER,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.LANDORUS,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.HAWLUCHA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.ROCKRUFF,e.LYCANROC,e.FOMANTIS,e.LURANTIS,e.STUFFUL,e.BEWEAR,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.MIMIKYU,e.BRUXISH,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.KARTANA,e.NECROZMA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.RABOOT,e.CINDERACE,e.INTELEON,e.GREEDENT,e.DUBWOOL,e.DREDNAW,e.HATTERENE,e.PERRSERKER,e.SIRFETCHD,e.FALINKS,e.DURALUDON,e.ZACIAN,e.KUBFU,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.OVERQWIL,e.QUAQUAVAL,e.LOKIX,e.CERULEDGE,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FLAMIGO,e.KINGAMBIT,e.IRON_HANDS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.IRON_LEAVES,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_RAPIDASH,e.GALAR_FARFETCHD,[e.CALYREX,"ice"],e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[A.CUT]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BEEDRILL,e.RATTATA,e.RATICATE,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.FARFETCHD,e.KRABBY,e.KINGLER,e.LICKITUNG,e.RHYDON,e.TANGELA,e.KANGASKHAN,e.SCYTHER,e.PINSIR,e.KABUTOPS,e.DRAGONITE,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.BELLOSSOM,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.ESPEON,e.UMBREON,e.GLIGAR,e.STEELIX,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SKARMORY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.TYRANITAR,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.ZIGZAGOON,e.LINOONE,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.ROSELIA,e.CACNEA,e.CACTURNE,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.KECLEON,e.TROPIUS,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.GROUDON,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.BUDEW,e.ROSERADE,e.RAMPARDOS,e.VESPIQUEN,e.PACHIRISU,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.GIBLE,e.GABITE,e.GARCHOMP,e.SKORUPI,e.DRAPION,e.TOXICROAK,e.CARNIVINE,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.GLISCOR,e.GALLADE,e.DIALGA,e.PALKIA,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.SCOLIPEDE,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.FERROTHORN,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.VOLCANION,e.KARTANA,e.OBSTAGOON,e.PERRSERKER,e.URSALUNA,e.BASCULEGION,e.KINGAMBIT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA],[A.FLY]:[e.CHARIZARD,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.FARFETCHD,e.DODUO,e.DODRIO,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.TOGETIC,e.XATU,e.MURKROW,e.DELIBIRD,e.SKARMORY,e.LUGIA,e.HO_OH,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.STARLY,e.STARAVIA,e.STARAPTOR,e.DRIFLOON,e.DRIFBLIM,e.HONCHKROW,e.CHATOT,e.TOGEKISS,e.GIRATINA,e.ARCEUS,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.GOLURK,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.GENESECT,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.VIKAVOLT,e.ORICORIO,e.DRAMPA,e.TAPU_KOKO,e.LUNALA,e.CELESTEELA,e.NAGANADEL,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.FLAPPLE,e.CRAMORANT,e.DRAGAPULT,e.ETERNATUS,e.ENAMORUS,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.IRON_JUGULIS,e.ROARING_MOON,e.FEZANDIPITI,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_BRAVIARY],[A.MEGA_KICK]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GOLEM,e.SLOWBRO,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.KABUTOPS,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GRUMPIG,e.SPINDA,e.FLYGON,e.CACTURNE,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.JIRACHI,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.GALLADE,e.DUSKNOIR,e.REGIGIGAS,e.VICTINI,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ZOROARK,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HELIOLISK,e.HAWLUCHA,e.GOODRA,e.INCINEROAR,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.TSAREENA,e.ORANGURU,e.PASSIMIAN,e.TURTONATOR,e.HAKAMO_O,e.KOMMO_O,e.GUZZLORD,e.MARSHADOW,e.STAKATAKA,e.ZERAORA,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.DUBWOOL,e.COALOSSAL,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.MR_RIME,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.KUBFU,e.URSHIFU,e.ZARUDE,e.QUAQUAVAL,e.FLAMIGO,[e.DEOXYS,"attack","defense","speed"],e.ALOLA_RAICHU,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_LILLIGANT],[A.BODY_SLAM]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VILEPLUME,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.WEEPINBELL,e.VICTREEBEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.CLOYSTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.GOLDEEN,e.SEAKING,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.NOCTOWL,e.SPINARAK,e.ARIADOS,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.DELIBIRD,e.MANTINE,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.LUXRAY,e.ROSERADE,e.SHIELDON,e.BASTIODON,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SNOVER,e.ABOMASNOW,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.ARCEUS,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.SAMUROTT,e.BLITZLE,e.ZEBSTRIKA,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.CONKELDURR,e.THROH,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.GARBODOR,e.ZOROARK,e.GOTHITELLE,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.ALOMOMOLA,e.EELEKTRIK,e.EELEKTROSS,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.CLAWITZER,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.BERGMITE,e.AVALUGG,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.BRIONNE,e.PRIMARINA,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.ARAQUANID,e.SALAZZLE,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.PALOSSAND,e.KOMALA,e.TURTONATOR,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.NIHILEGO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.CORVIKNIGHT,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.FALINKS,e.PINCURCHIN,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.WYRDEER,e.URSALUNA,e.ENAMORUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.FIDOUGH,e.DACHSBUN,e.NACLI,e.NACLSTACK,e.GARGANACL,e.MASCHIFF,e.MABOSSTIFF,e.KLAWF,e.ESPATHRA,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.WO_CHIEN,e.TING_LU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.DIPPLIN,e.OKIDOGI,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARMANITAN,[e.CALYREX,"ice","shadow"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.TAKE_DOWN]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CHINCHOU,e.LANTURN,e.PICHU,e.IGGLYBUFF,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.DELIBIRD,e.MANTINE,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.STANTLER,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.MILOTIC,e.TROPIUS,e.CHIMECHO,e.SNORUNT,e.GLALIE,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.BELDUM,e.METANG,e.METAGROSS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.HAPPINY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.RHYPERIOR,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.FROSLASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.GIRATINA,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.BLITZLE,e.ROGGENROLA,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.DEERLING,e.SAWSBUCK,e.KARRABLAST,e.ESCAVALIER,e.ALOMOMOLA,e.EELEKTRIK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.MIENFOO,e.MIENSHAO,e.PAWNIARD,e.BISHARP,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.FURFROU,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.TREVENANT,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MUDBRAY,e.MUDSDALE,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.ORANGURU,e.PASSIMIAN,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.MIMIKYU,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.MAGEARNA,e.STAKATAKA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.FALINKS,e.PINCURCHIN,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.OKIDOGI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER],[A.DOUBLE_EDGE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TYROGUE,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.FLOATZEL,e.AMBIPOM,e.HONCHKROW,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.SNOVER,e.ABOMASNOW,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.PROBOPASS,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.SHAYMIN,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.BLITZLE,e.ZEBSTRIKA,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.CINCCINO,e.DUCKLETT,e.SWANNA,e.DEERLING,e.SAWSBUCK,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.MIENSHAO,e.GOLETT,e.GOLURK,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KELDEO,e.CHESNAUGHT,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.SYLVEON,e.CARBINK,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIVERN,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.PASSIMIAN,e.MINIOR,e.KOMALA,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.CORVIKNIGHT,e.DREDNAW,e.ARROKUDA,e.BARRASKEWDA,e.PERRSERKER,e.EISCUE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.KUBFU,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,[e.CALYREX,"ice","shadow"],e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.OVERQWIL,e.LECHONK,e.OINKOLOGNE,e.LOKIX,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SQUAWKABILLY,e.NACLSTACK,e.GARGANACL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.ESPATHRA,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.SLITHER_WING,e.IRON_TREADS,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.BAXCALIBUR,e.TING_LU,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.OKIDOGI,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_ZAPDOS,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_BRAVIARY,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.PIN_MISSILE]:[e.BEEDRILL,e.SANDSLASH,e.CLOYSTER,e.JOLTEON,e.OMASTAR,e.MEW,e.SPINARAK,e.ARIADOS,e.PINECO,e.FORRETRESS,e.QWILFISH,e.HERACROSS,e.ZIGZAGOON,e.LINOONE,e.ROSELIA,e.CACNEA,e.CACTURNE,e.BUDEW,e.ROSERADE,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.MARACTUS,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.MAREANIE,e.TOXAPEX,e.GOLISOPOD,e.TOGEDEMARU,e.POIPOLE,e.NAGANADEL,e.OBSTAGOON,e.CURSOLA,e.PINCURCHIN,e.OVERQWIL,e.IRON_THORNS,e.ALOLA_SANDSLASH,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_QWILFISH],[A.ROAR]:[e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BLASTOISE,e.RATICATE,e.NIDOQUEEN,e.NIDOKING,e.VULPIX,e.NINETALES,e.PERSIAN,e.GROWLITHE,e.ARCANINE,e.GOLEM,e.ONIX,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.CROCONAW,e.FERALIGATR,e.FLAAFFY,e.AMPHAROS,e.ESPEON,e.UMBREON,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.STANTLER,e.RAIKOU,e.ENTEI,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.HO_OH,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.LINOONE,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.ARON,e.LAIRON,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.ALTARIA,e.ZANGOOSE,e.TROPIUS,e.SEALEO,e.WALREIN,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.RHYPERIOR,e.LEAFEON,e.GLACEON,e.MAMOSWINE,e.DIALGA,e.PALKIA,e.HEATRAN,e.GIRATINA,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.AVALUGG,e.XERNEAS,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.TYPE_NULL,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.YAMPER,e.BOLTUND,e.ZAMAZENTA,e.ZARUDE,e.GLASTRIER,e.WYRDEER,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.GREAVARD,e.HOUNDSTONE,e.FARIGIRAF,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_JUGULIS,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.OKIDOGI,e.ARCHALUDON,e.GOUGING_FIRE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_RATICATE,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_PERSIAN,e.ALOLA_GOLEM,[e.URSHIFU,"single-strike"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.BLOODMOON_URSALUNA],[A.FLAMETHROWER]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GROWLITHE,e.ARCANINE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MAGMAR,e.TAUROS,e.GYARADOS,e.FLAREON,e.AERODACTYL,e.SNORLAX,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.SLOWKING,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.SLUGMA,e.MAGCARGO,e.REMORAID,e.OCTILLERY,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.BLISSEY,e.ENTEI,e.TYRANITAR,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAWILE,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.SOLROCK,e.CASTFORM,e.KECLEON,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.STUNKY,e.SKUNTANK,e.HAPPINY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.PANSEAR,e.SIMISEAR,e.AUDINO,e.DARUMAKA,e.DARMANITAN,e.ZOROARK,e.EELEKTROSS,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.DRUDDIGON,e.HEATMOR,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.GENESECT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.GOODRA,e.PUMPKABOO,e.GOURGEIST,e.NOIVERN,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.KOMMO_O,e.SOLGALEO,e.CELESTEELA,e.GUZZLORD,e.NAGANADEL,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.CENTISKORCH,e.DRACOZOLT,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SCOVILLAIN,e.DUDUNSPARCE,e.SCREAM_TAIL,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.GOUGING_FIRE,e.TERAPAGOS,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_ZOROARK,e.HISUI_GOODRA,[e.PALDEA_TAUROS,"blaze"]],[A.HYDRO_PUMP]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SHELLDER,e.CLOYSTER,e.KINGLER,e.LICKITUNG,e.RHYDON,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MAGIKARP,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.EXPLOUD,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.MILOTIC,e.CASTFORM,e.WALREIN,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.MANTYKE,e.LICKILICKY,e.RHYPERIOR,e.PALKIA,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.HYDREIGON,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOODRA,e.AVALUGG,e.VOLCANION,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.GRAPPLOCT,e.CURSOLA,e.PINCURCHIN,e.EISCUE,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DRAKLOAK,e.DRAGAPULT,e.BASCULEGION,e.OVERQWIL,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.CLODSIRE,e.IRON_BUNDLE,e.IRON_JUGULIS,e.ROARING_MOON,e.WALKING_WAKE,e.HYDRAPPLE,[e.ROTOM,"wash"],e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_GOODRA,[e.PALDEA_TAUROS,"aqua"],e.PALDEA_WOOPER],[A.SURF]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.LICKITUNG,e.RHYDON,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.PICHU,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.SNEASEL,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.MILTANK,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.ZANGOOSE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.RAMPARDOS,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.GARCHOMP,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.MANTYKE,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.HERDIER,e.STOUTLAND,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.DRUDDIGON,e.BOUFFALANT,e.HYDREIGON,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.SWIRLIX,e.SLURPUFF,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.GOODRA,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.WIMPOD,e.GOLISOPOD,e.SILVALLY,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.GRAPPLOCT,e.OBSTAGOON,e.CURSOLA,e.PINCURCHIN,e.EISCUE,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DRAKLOAK,e.DRAGAPULT,e.BASCULEGION,e.OVERQWIL,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.CLODSIRE,e.WALKING_WAKE,e.TERAPAGOS,e.ALOLA_RAICHU,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_STUNFISK,e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_GOODRA,[e.PALDEA_TAUROS,"combat","aqua"],e.PALDEA_WOOPER],[A.ICE_BEAM]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.JYNX,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.ARTICUNO,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.QWILFISH,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.PORYGON2,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.MAWILE,e.AGGRON,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.LUNATONE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.REGICE,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.DEOXYS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.GLACEON,e.MAMOSWINE,e.PORYGON_Z,e.DUSKNOIR,e.FROSLASS,e.MESPRIT,e.DIALGA,e.PALKIA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.BASCULIN,e.SIGILYPH,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.GOLETT,e.GOLURK,e.KYUREM,e.GENESECT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.SLIGGOO,e.GOODRA,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABOMINABLE,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.SILVALLY,e.BRUXISH,e.DRAMPA,e.TAPU_FINI,e.LUNALA,e.PHEROMOSA,e.MAGEARNA,e.MELMETAL,e.INTELEON,e.DREDNAW,e.CRAMORANT,e.BARRASKEWDA,e.OBSTAGOON,e.CURSOLA,e.MR_RIME,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.BASCULEGION,e.OVERQWIL,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.CETODDLE,e.CETITAN,e.VELUZA,e.DUDUNSPARCE,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,[e.CALYREX,"ice"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG],[A.BLIZZARD]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.JYNX,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.ARTICUNO,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.QWILFISH,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.PORYGON2,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.ZANGOOSE,e.LUNATONE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.REGICE,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.LOPUNNY,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.GLACEON,e.MAMOSWINE,e.PORYGON_Z,e.DUSKNOIR,e.FROSLASS,e.MESPRIT,e.DIALGA,e.PALKIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.KYUREM,e.GENESECT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.SLIGGOO,e.GOODRA,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.BRUXISH,e.DRAMPA,e.TAPU_FINI,e.LUNALA,e.PHEROMOSA,e.INTELEON,e.DREDNAW,e.CRAMORANT,e.BARRASKEWDA,e.OBSTAGOON,e.CURSOLA,e.MR_RIME,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.BASCULEGION,e.OVERQWIL,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.CETODDLE,e.CETITAN,e.VELUZA,e.DUDUNSPARCE,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,[e.ROTOM,"frost"],e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,[e.CALYREX,"ice"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG],[A.PSYBEAM]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.PARAS,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.KOFFING,e.WEEZING,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.PORYGON,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.SPINARAK,e.CHINCHOU,e.CLEFFA,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.REMORAID,e.OCTILLERY,e.MANTINE,e.PORYGON2,e.STANTLER,e.DUSTOX,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SPINDA,e.BALTOY,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.CHIMECHO,e.WORMADAM,e.MOTHIM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.FINNEON,e.LUMINEON,e.PORYGON_Z,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MUNNA,e.MUSHARNA,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.ESPURR,e.MEOWSTIC,e.INKAY,e.MALAMAR,e.HOOPA,e.ORANGURU,e.TAPU_LELE,e.MAGEARNA,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.FARIGIRAF,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.MUNKIDORI,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[A.HYPER_BEAM]:[e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEOT,e.RATICATE,e.FEAROW,e.ARBOK,e.RAICHU,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFABLE,e.NINETALES,e.WIGGLYTUFF,e.GOLBAT,e.VILEPLUME,e.PARASECT,e.VENOMOTH,e.DUGTRIO,e.PERSIAN,e.GOLDUCK,e.PRIMEAPE,e.ARCANINE,e.POLIWRATH,e.ALAKAZAM,e.MACHAMP,e.VICTREEBEL,e.TENTACRUEL,e.GOLEM,e.RAPIDASH,e.SLOWBRO,e.MAGNETON,e.DODRIO,e.DEWGONG,e.MUK,e.CLOYSTER,e.GENGAR,e.HYPNO,e.KINGLER,e.ELECTRODE,e.EXEGGUTOR,e.MAROWAK,e.LICKITUNG,e.WEEZING,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.SEADRA,e.SEAKING,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMASTAR,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.FURRET,e.NOCTOWL,e.LEDIAN,e.ARIADOS,e.CROBAT,e.LANTURN,e.TOGETIC,e.XATU,e.AMPHAROS,e.BELLOSSOM,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.JUMPLUFF,e.SUNFLORA,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.FORRETRESS,e.DUNSPARCE,e.STEELIX,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.URSARING,e.MAGCARGO,e.PILOSWINE,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.HOUNDOOM,e.KINGDRA,e.DONPHAN,e.PORYGON2,e.STANTLER,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.MIGHTYENA,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.SWELLOW,e.PELIPPER,e.KIRLIA,e.GARDEVOIR,e.MASQUERAIN,e.BRELOOM,e.SLAKING,e.NINJASK,e.SHEDINJA,e.EXPLOUD,e.HARIYAMA,e.DELCATTY,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDICHAM,e.MANECTRIC,e.SWALOT,e.SHARPEDO,e.WAILORD,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACTURNE,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.WHISCASH,e.CRAWDAUNT,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.MILOTIC,e.BANETTE,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.GLALIE,e.WALREIN,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.STARAPTOR,e.BIBAREL,e.KRICKETUNE,e.LUXRAY,e.ROSERADE,e.RAMPARDOS,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.FLOATZEL,e.CHERRIM,e.GASTRODON,e.AMBIPOM,e.DRIFBLIM,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.PURUGLY,e.SKUNTANK,e.BRONZONG,e.SPIRITOMB,e.GARCHOMP,e.LUCARIO,e.HIPPOWDON,e.DRAPION,e.TOXICROAK,e.CARNIVINE,e.LUMINEON,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.WATCHOG,e.STOUTLAND,e.LIEPARD,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.MUSHARNA,e.UNFEZANT,e.ZEBSTRIKA,e.GIGALITH,e.SWOOBAT,e.EXCADRILL,e.AUDINO,e.CONKELDURR,e.SEISMITOAD,e.LEAVANNY,e.SCOLIPEDE,e.WHIMSICOTT,e.LILLIGANT,e.KROOKODILE,e.DARMANITAN,e.CRUSTLE,e.SCRAFTY,e.SIGILYPH,e.COFAGRIGUS,e.CARRACOSTA,e.ARCHEOPS,e.GARBODOR,e.ZOROARK,e.CINCCINO,e.GOTHITELLE,e.REUNICLUS,e.SWANNA,e.VANILLUXE,e.SAWSBUCK,e.ESCAVALIER,e.AMOONGUSS,e.JELLICENT,e.ALOMOMOLA,e.GALVANTULA,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTROSS,e.BEHEEYEM,e.CHANDELURE,e.HAXORUS,e.BEARTIC,e.CRYOGONAL,e.ACCELGOR,e.MIENSHAO,e.DRUDDIGON,e.GOLURK,e.BISHARP,e.BRAVIARY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DIGGERSBY,e.TALONFLAME,e.VIVILLON,e.PYROAR,e.FLORGES,e.GOGOAT,e.PANGORO,e.MEOWSTIC,e.AEGISLASH,e.AROMATISSE,e.SLURPUFF,e.MALAMAR,e.BARBARACLE,e.DRAGALGE,e.CLAWITZER,e.HELIOLISK,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOODRA,e.KLEFKI,e.TREVENANT,e.GOURGEIST,e.AVALUGG,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.GUMSHOOS,e.VIKAVOLT,e.CRABOMINABLE,e.RIBOMBEE,e.TOXAPEX,e.MUDSDALE,e.LURANTIS,e.SHIINOTIC,e.SALAZZLE,e.BEWEAR,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.NAGANADEL,e.BLACEPHALON,e.ZERAORA,e.MELMETAL,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.GREEDENT,e.CORVIKNIGHT,e.ORBEETLE,e.THIEVUL,e.ELDEGOSS,e.DUBWOOL,e.DREDNAW,e.BOLTUND,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SANDACONDA,e.CRAMORANT,e.BARRASKEWDA,e.TOXTRICITY,e.CENTISKORCH,e.GRAPPLOCT,e.POLTEAGEIST,e.HATTERENE,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL,e.OINKOLOGNE,e.PAWMOT,e.MAUSHOLD,e.DACHSBUN,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLSTACK,e.GARGANACL,e.BELLIBOLT,e.KILOWATTREL,e.MABOSSTIFF,e.BRAMBLEGHAST,e.TOEDSCRUEL,e.KLAWF,e.SCOVILLAIN,e.RABSCA,e.ESPATHRA,e.WUGTRIO,e.BOMBIRDIER,e.PALAFIN,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMORA,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.BAXCALIBUR,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.ARCHALUDON,e.IRON_CROWN,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES,e.ALOLA_DUGTRIO,e.ALOLA_PERSIAN,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_RAPIDASH,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_LINOONE,e.GALAR_DARMANITAN,e.HISUI_ARCANINE,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA,[e.BASCULIN,"blue-striped","red-striped"]],[A.LOW_KICK]:[e.SANDSHREW,e.SANDSLASH,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.PONYTA,e.RAPIDASH,e.DODUO,e.DODRIO,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.KANGASKHAN,e.ELECTABUZZ,e.MAGMAR,e.KABUTOPS,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.FLAAFFY,e.AMPHAROS,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.GIRAFARIG,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.TYROGUE,e.HITMONTOP,e.ELEKID,e.MAGBY,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.ARMALDO,e.KECLEON,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.BONSLY,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.PIGNITE,e.EMBOAR,e.PATRAT,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.BLITZLE,e.ZEBSTRIKA,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.LEAVANNY,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.CARRACOSTA,e.ZOROARK,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.HEATMOR,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BRAIXEN,e.DELPHOX,e.FROGADIER,e.GRENINJA,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.BARBARACLE,e.HELIOLISK,e.HAWLUCHA,e.DECIDUEYE,e.INCINEROAR,e.MUDBRAY,e.MUDSDALE,e.BEWEAR,e.TSAREENA,e.PASSIMIAN,e.KOMALA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.PHEROMOSA,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.STONJOURNER,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.KUBFU,e.URSHIFU,e.ZARUDE,e.URSALUNA,e.SNEASLER,e.FLORAGATO,e.MEOWSCARADA,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.GRAFAIAI,e.ESPATHRA,e.FLAMIGO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.KINGAMBIT,e.SLITHER_WING,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.KORAIDON,e.WALKING_WAKE,e.OKIDOGI,e.OGERPON,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_ZAPDOS,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.COUNTER]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PARAS,e.PARASECT,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.LEDYBA,e.LEDIAN,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.WOBBUFFET,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.MILTANK,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.TAILLOW,e.SWELLOW,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.KECLEON,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.SHIELDON,e.BASTIODON,e.RIOLU,e.LUCARIO,e.SHELLOS,e.GASTRODON,e.CROAGUNK,e.TOXICROAK,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SAWK,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.KARRABLAST,e.ESCAVALIER,e.ACCELGOR,e.AXEW,e.FRAXURE,e.HAXORUS,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.GOOMY,e.SLIGGOO,e.GOODRA,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.PASSIMIAN,e.PYUKUMUKU,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.BUZZWOLE,e.MARSHADOW,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.FALINKS,e.KUBFU,e.URSHIFU,e.QUAQUAVAL,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.FINIZEN,e.PALAFIN,e.TATSUGIRI,e.KORAIDON,e.OKIDOGI,e.OGERPON,e.IRON_BOULDER],[A.STRENGTH]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATICATE,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.GENGAR,e.ONIX,e.KRABBY,e.KINGLER,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.JOLTEON,e.FLAREON,e.AERODACTYL,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.BAYLEEF,e.MEGANIUM,e.QUILAVA,e.TYPHLOSION,e.CROCONAW,e.FERALIGATR,e.FURRET,e.LEDIAN,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.TYRANITAR,e.LUGIA,e.HO_OH,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.MIGHTYENA,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.DELCATTY,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.GULPIN,e.SWALOT,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.KECLEON,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.GASTRODON,e.AMBIPOM,e.LOPUNNY,e.SKUNTANK,e.BRONZONG,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.SAMUROTT,e.WATCHOG,e.HERDIER,e.STOUTLAND,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.REUNICLUS,e.FERROTHORN,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.GOODRA,e.PHANTUMP,e.TREVENANT,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.VOLCANION,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.OBSTAGOON,e.CUFANT,e.COPPERAJAH,e.URSALUNA,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_BRAVIARY,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[A.SOLAR_BEAM]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.ARCANINE,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.PONYTA,e.RAPIDASH,e.EXEGGCUTE,e.EXEGGUTOR,e.LICKITUNG,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.MR_MIME,e.TAUROS,e.LAPRAS,e.PORYGON,e.SNORLAX,e.MOLTRES,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.TYPHLOSION,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.PORYGON2,e.STANTLER,e.MILTANK,e.BLISSEY,e.ENTEI,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BLAZIKEN,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.SKITTY,e.DELCATTY,e.MAWILE,e.AGGRON,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.CASTFORM,e.KECLEON,e.TROPIUS,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.INFERNAPE,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.CHERUBI,e.CHERRIM,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.MUNCHLAX,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.LICKILICKY,e.TANGROWTH,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.PORYGON_Z,e.UXIE,e.HEATRAN,e.CRESSELIA,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.GIGALITH,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SIGILYPH,e.GARBODOR,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.CRYOGONAL,e.GOLURK,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.VIRIZION,e.RESHIRAM,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.HELIOLISK,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.VIKAVOLT,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.MINIOR,e.TURTONATOR,e.DRAMPA,e.DHELMISE,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.XURKITREE,e.CELESTEELA,e.NECROZMA,e.MAGEARNA,e.BLACEPHALON,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.DOTTLER,e.ORBEETLE,e.GOSSIFLEUR,e.ELDEGOSS,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.CENTISKORCH,e.MR_RIME,e.ALCREMIE,e.DURALUDON,e.DRAGAPULT,e.ZAMAZENTA,e.ETERNATUS,e.ZARUDE,e.CALYREX,e.WYRDEER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SKELEDIRGE,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.ARMAROUGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.GLIMMORA,e.DUDUNSPARCE,e.BRUTE_BONNET,e.IRON_MOTH,e.WO_CHIEN,e.KORAIDON,e.MIRAIDON,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_NINETALES,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_MR_MIME,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[A.FIRE_SPIN]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.VULPIX,e.NINETALES,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.MAGMAR,e.FLAREON,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.FLYGON,e.ALTARIA,e.SOLROCK,e.BAGON,e.SHELGON,e.SALAMENCE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.SKUNTANK,e.MAGMORTAR,e.HEATRAN,e.VICTINI,e.PANSEAR,e.SIMISEAR,e.DARUMAKA,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.TURTONATOR,e.SOLGALEO,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.SIZZLIPEDE,e.CENTISKORCH,e.DRACOZOLT,e.ETERNATUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.IRON_MOTH,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.GOUGING_FIRE,e.ALOLA_MAROWAK,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,[e.PALDEA_TAUROS,"blaze"]],[A.THUNDERBOLT]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.VOLTORB,e.ELECTRODE,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.STARYU,e.STARMIE,e.MR_MIME,e.ELECTABUZZ,e.TAUROS,e.GYARADOS,e.LAPRAS,e.JOLTEON,e.PORYGON,e.SNORLAX,e.ZAPDOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.AIPOM,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.PORYGON2,e.STANTLER,e.ELEKID,e.MILTANK,e.BLISSEY,e.RAIKOU,e.TYRANITAR,e.LUGIA,e.HO_OH,e.ZIGZAGOON,e.LINOONE,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ZANGOOSE,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.PACHIRISU,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.MIME_JR,e.MUNCHLAX,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.BLITZLE,e.ZEBSTRIKA,e.AUDINO,e.GARBODOR,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.STUNFISK,e.GOLURK,e.THUNDURUS,e.ZEKROM,e.MELOETTA,e.GENESECT,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.SKRELP,e.DRAGALGE,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.DEDENNE,e.GOOMY,e.SLIGGOO,e.GOODRA,e.XERNEAS,e.HOOPA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.ORANGURU,e.SILVALLY,e.TOGEDEMARU,e.MIMIKYU,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.MAGEARNA,e.NAGANADEL,e.ZERAORA,e.MELTAN,e.MELMETAL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.REGIELEKI,e.WYRDEER,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.CYCLIZAR,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.MIRAIDON,e.ARCHALUDON,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[A.THUNDER_WAVE]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.GENGAR,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.CHANSEY,e.STARYU,e.STARMIE,e.MR_MIME,e.ELECTABUZZ,e.GYARADOS,e.JOLTEON,e.PORYGON,e.ZAPDOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.AIPOM,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.FORRETRESS,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.PORYGON2,e.STANTLER,e.ELEKID,e.MILTANK,e.BLISSEY,e.RAIKOU,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.ZIGZAGOON,e.LINOONE,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.VIGOROTH,e.SLAKING,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.SPOINK,e.GRUMPIG,e.ZANGOOSE,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.CHIMECHO,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.MIME_JR,e.HAPPINY,e.MAGNEZONE,e.ELECTIVIRE,e.TOGEKISS,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SIGILYPH,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.TYNAMO,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.STUNFISK,e.PAWNIARD,e.BISHARP,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.THUNDURUS,e.ZEKROM,e.MELOETTA,e.GENESECT,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.DEDENNE,e.KLEFKI,e.XERNEAS,e.HOOPA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.TYPE_NULL,e.SILVALLY,e.TOGEDEMARU,e.MIMIKYU,e.DRAMPA,e.TAPU_KOKO,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.NECROZMA,e.MAGEARNA,e.ZERAORA,e.MELTAN,e.MELMETAL,e.WOOLOO,e.DUBWOOL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.MR_RIME,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.REGIELEKI,e.WYRDEER,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FARIGIRAF,e.KINGAMBIT,e.SCREAM_TAIL,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.MIRAIDON,e.ARCHALUDON,e.RAGING_BOLT,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_STUNFISK,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[A.THUNDER]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.VOLTORB,e.ELECTRODE,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.STARYU,e.STARMIE,e.MR_MIME,e.ELECTABUZZ,e.TAUROS,e.GYARADOS,e.LAPRAS,e.JOLTEON,e.PORYGON,e.SNORLAX,e.ZAPDOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.AIPOM,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.PORYGON2,e.STANTLER,e.ELEKID,e.MILTANK,e.BLISSEY,e.RAIKOU,e.TYRANITAR,e.LUGIA,e.HO_OH,e.ZIGZAGOON,e.LINOONE,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ZANGOOSE,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.PACHIRISU,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.LOPUNNY,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.MIME_JR,e.MUNCHLAX,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.PORYGON_Z,e.PROBOPASS,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.WATCHOG,e.STOUTLAND,e.BLITZLE,e.ZEBSTRIKA,e.AUDINO,e.CINCCINO,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.EMOLGA,e.GALVANTULA,e.FERROTHORN,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.STUNFISK,e.THUNDURUS,e.ZEKROM,e.MELOETTA,e.GENESECT,e.AROMATISSE,e.SLURPUFF,e.DRAGALGE,e.HELIOPTILE,e.HELIOLISK,e.AURORUS,e.DEDENNE,e.SLIGGOO,e.GOODRA,e.XERNEAS,e.CHARJABUG,e.VIKAVOLT,e.ORANGURU,e.TOGEDEMARU,e.MIMIKYU,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.ZERAORA,e.MELMETAL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.REGIELEKI,e.WYRDEER,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.MIRAIDON,e.ARCHALUDON,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[A.EARTHQUAKE]:[e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.ONIX,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.PINSIR,e.TAUROS,e.GYARADOS,e.AERODACTYL,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.SUDOWOODO,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.MANTINE,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.SCEPTILE,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.SWALOT,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ALTARIA,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.DUSCLOPS,e.TROPIUS,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.RELICANTH,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.MANTYKE,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.ARCEUS,e.EMBOAR,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.HAXORUS,e.BEARTIC,e.STUNFISK,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.HYDREIGON,e.TERRAKION,e.LANDORUS,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.GOGOAT,e.PANGORO,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AURORUS,e.GOODRA,e.TREVENANT,e.AVALUGG,e.ZYGARDE,e.VOLCANION,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.WISHIWASHI,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.KOMALA,e.TURTONATOR,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.STAKATAKA,e.MELMETAL,e.RILLABOOM,e.GREEDENT,e.DREDNAW,e.COALOSSAL,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.DRACOVISH,e.REGIDRAGO,e.WYRDEER,e.URSALUNA,e.SKELEDIRGE,e.NACLI,e.NACLSTACK,e.GARGANACL,e.ORTHWORM,e.CETODDLE,e.CETITAN,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.BAXCALIBUR,e.TING_LU,e.ROARING_MOON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.TERAPAGOS,[e.WORMADAM,"sandy"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_TYPHLOSION,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.DIG]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.ONIX,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.PINSIR,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CLEFFA,e.IGGLYBUFF,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.SLOWKING,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.PHANPY,e.DONPHAN,e.STANTLER,e.HITMONTOP,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.MAKUHITA,e.HARIYAMA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.CRADILY,e.ANORITH,e.ARMALDO,e.KECLEON,e.REGIROCK,e.GROUDON,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.GASTRODON,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.HEATRAN,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.HEATMOR,e.DURANT,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.MEOWSTIC,e.BINACLE,e.BARBARACLE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.PHANTUMP,e.TREVENANT,e.ZYGARDE,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.SKWOVET,e.GREEDENT,e.NICKIT,e.THIEVUL,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.GRAPPLOCT,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.CUFANT,e.COPPERAJAH,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ZARUDE,e.WYRDEER,e.URSALUNA,e.SNEASLER,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.NACLI,e.NACLSTACK,e.GARGANACL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.RELLOR,e.RABSCA,e.WIGLETT,e.WUGTRIO,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.TING_LU,e.ROARING_MOON,e.KORAIDON,e.OKIDOGI,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.TOXIC]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.TOXTRICITY,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.BELLIBOLT,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.DUDUNSPARCE,e.IRON_MOTH,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.PALDEA_WOOPER],[A.PSYCHIC]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.LAPRAS,e.PORYGON,e.SNORLAX,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.SPINARAK,e.ARIADOS,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.POLITOED,e.YANMA,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.BLISSEY,e.LUGIA,e.HO_OH,e.CELEBI,e.BEAUTIFLY,e.DUSTOX,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.GOREBYSS,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.WORMADAM,e.MOTHIM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.MUNCHLAX,e.LUCARIO,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.WHIMSICOTT,e.DARMANITAN,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GARBODOR,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.MELOETTA,e.GENESECT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.AURORUS,e.SYLVEON,e.CARBINK,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.DIANCIE,e.HOOPA,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.ORANGURU,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.MIMIKYU,e.BRUXISH,e.TAPU_LELE,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.NECROZMA,e.MAGEARNA,e.BLACEPHALON,e.DOTTLER,e.ORBEETLE,e.THIEVUL,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.INDEEDEE,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.ENAMORUS,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.VELUZA,e.FARIGIRAF,e.SCREAM_TAIL,e.IRON_MOTH,e.GHOLDENGO,e.CHI_YU,e.IRON_VALIANT,e.MUNKIDORI,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.HISUI_ZOROARK,e.HISUI_BRAVIARY],[A.AGILITY]:[e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.VULPIX,e.NINETALES,e.ZUBAT,e.GOLBAT,e.PARAS,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.FARFETCHD,e.DODUO,e.DODRIO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.HITMONCHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARMIE,e.SCYTHER,e.JOLTEON,e.PORYGON,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.FERALIGATR,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.AIPOM,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.QWILFISH,e.SCIZOR,e.SNEASEL,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.KINGDRA,e.PORYGON2,e.STANTLER,e.HITMONTOP,e.RAIKOU,e.ENTEI,e.SUICUNE,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.NINJASK,e.SHEDINJA,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.CARVANHA,e.SHARPEDO,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.GOREBYSS,e.LUVDISC,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.LUXRAY,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.CHATOT,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.FINNEON,e.LUMINEON,e.MANTYKE,e.WEAVILE,e.GLISCOR,e.PORYGON_Z,e.GALLADE,e.ARCEUS,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.SEWADDLE,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.BASCULIN,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.ELGYEM,e.BEHEEYEM,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.RUFFLET,e.BRAVIARY,e.DURANT,e.TORNADUS,e.THUNDURUS,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HELIOPTILE,e.HELIOLISK,e.HAWLUCHA,e.DEDENNE,e.NOIBAT,e.NOIVERN,e.VIKAVOLT,e.ORICORIO,e.RIBOMBEE,e.LYCANROC,e.SALANDIT,e.SALAZZLE,e.TOGEDEMARU,e.BRUXISH,e.TAPU_KOKO,e.SOLGALEO,e.LUNALA,e.PHEROMOSA,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.WOOLOO,e.DUBWOOL,e.BOLTUND,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.HATTERENE,e.FALINKS,e.EISCUE,e.MORPEKO,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.REGIELEKI,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.QUAQUAVAL,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.WATTREL,e.KILOWATTREL,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.CYCLIZAR,e.FLAMIGO,e.VELUZA,e.FARIGIRAF,e.DUDUNSPARCE,e.IRON_BUNDLE,e.IRON_MOTH,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.FEZANDIPITI,e.IRON_BOULDER,[e.DEOXYS,"speed"],e.ALOLA_RAICHU,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY],[A.NIGHT_SHADE]:[e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.VENONAT,e.VENOMOTH,e.KADABRA,e.ALAKAZAM,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.SPINARAK,e.ARIADOS,e.NATU,e.XATU,e.MURKROW,e.MISDREAVUS,e.GARDEVOIR,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.BRONZONG,e.CHATOT,e.SPIRITOMB,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.DARKRAI,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.DELPHOX,e.PHANTUMP,e.TREVENANT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.SANDYGAST,e.PALOSSAND,e.MIMIKYU,e.LUNALA,e.BLACEPHALON,e.SINISTEA,e.POLTEAGEIST,e.CURSOLA,e.RUNERIGUS,e.DRAKLOAK,e.DRAGAPULT,e.SPECTRIER,e.BASCULEGION,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.ESPATHRA,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.FARIGIRAF,e.FLUTTER_MANE,e.GIMMIGHOUL,e.GHOLDENGO,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.PECHARUNT,e.GALAR_CORSOLA,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_TYPHLOSION,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[A.SCREECH]:[e.RATTATA,e.EKANS,e.ARBOK,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GOLBAT,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.TENTACOOL,e.TENTACRUEL,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.ONIX,e.VOLTORB,e.ELECTRODE,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.KOFFING,e.WEEZING,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.IGGLYBUFF,e.MAREEP,e.POLITOED,e.AIPOM,e.YANMA,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNEASEL,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.ELEKID,e.MAGBY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.SHIFTRY,e.NINJASK,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.ARON,e.LAIRON,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.VIBRAVA,e.FLYGON,e.SEVIPER,e.ANORITH,e.ARMALDO,e.KECLEON,e.SHUPPET,e.BANETTE,e.HUNTAIL,e.KRICKETUNE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.VESPIQUEN,e.AMBIPOM,e.STUNKY,e.SKUNTANK,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.ELECTIVIRE,e.MAGMORTAR,e.YANMEGA,e.GLISCOR,e.OSHAWOTT,e.PATRAT,e.PURRLOIN,e.LIEPARD,e.BLITZLE,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.MARACTUS,e.GARBODOR,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.PAWNIARD,e.BISHARP,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.GENESECT,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.NOIBAT,e.NOIVERN,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.WIMPOD,e.GOLISOPOD,e.PYUKUMUKU,e.MIMIKYU,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.KARTANA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.SILICOBRA,e.SANDACONDA,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.MR_RIME,e.FALINKS,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ETERNATUS,e.REGIELEKI,e.SNEASLER,e.NYMBLE,e.LOKIX,e.TOEDSCOOL,e.TOEDSCRUEL,e.VAROOM,e.REVAVROOM,e.ANNIHILAPE,e.DUDUNSPARCE,e.SANDY_SHOCKS,e.IRON_MOTH,e.IRON_THORNS,e.KORAIDON,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_STUNFISK,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_SNEASEL],[A.DOUBLE_TEAM]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.NAGANADEL,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.CONFUSE_RAY]:[e.VULPIX,e.NINETALES,e.ZUBAT,e.GOLBAT,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.TENTACOOL,e.TENTACRUEL,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.HYPNO,e.STARYU,e.STARMIE,e.MR_MIME,e.MAGMAR,e.LAPRAS,e.KABUTO,e.KABUTOPS,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.CHINCHOU,e.LANTURN,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.ESPEON,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.GIRAFARIG,e.CORSOLA,e.MANTINE,e.STANTLER,e.MAGBY,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHEDINJA,e.SABLEYE,e.VOLBEAT,e.ILLUMISE,e.SPOINK,e.GRUMPIG,e.LILEEP,e.CRADILY,e.FEEBAS,e.MILOTIC,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.JIRACHI,e.SHINX,e.LUXIO,e.LUXRAY,e.VESPIQUEN,e.MISMAGIUS,e.HONCHKROW,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.FINNEON,e.LUMINEON,e.MANTYKE,e.MAGNEZONE,e.MAGMORTAR,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.WATCHOG,e.ZORUA,e.ZOROARK,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.EELEKTROSS,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.CRYOGONAL,e.GOLETT,e.GOLURK,e.DELPHOX,e.VIVILLON,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.MORELULL,e.SHIINOTIC,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.MIMIKYU,e.LUNALA,e.MAGEARNA,e.BLACEPHALON,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.CURSOLA,e.MR_RIME,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.SPECTRIER,e.WYRDEER,e.BASCULEGION,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FARIGIRAF,e.BRUTE_BONNET,e.FLUTTER_MANE,e.IRON_MOTH,e.GIMMIGHOUL,e.GHOLDENGO,e.CHI_YU,e.IRON_VALIANT,e.MIRAIDON,e.MUNKIDORI,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MR_MIME,e.GALAR_CORSOLA,[e.CALYREX,"shadow"],e.HISUI_TYPHLOSION,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[A.LIGHT_SCREEN]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PARAS,e.PARASECT,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.JOLTEON,e.ARTICUNO,e.ZAPDOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.LEDYBA,e.LEDIAN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.ESPEON,e.UMBREON,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.SCIZOR,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.STANTLER,e.SMOOCHUM,e.ELEKID,e.BLISSEY,e.RAIKOU,e.LUGIA,e.HO_OH,e.CELEBI,e.DUSTOX,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.AZURILL,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.FEEBAS,e.MILOTIC,e.CHIMECHO,e.SNORUNT,e.GLALIE,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SNOVER,e.ABOMASNOW,e.MAGNEZONE,e.ELECTIVIRE,e.TOGEKISS,e.MAMOSWINE,e.GALLADE,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MANAPHY,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.WATCHOG,e.MUNNA,e.MUSHARNA,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.WHIMSICOTT,e.LILLIGANT,e.SIGILYPH,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.CRYOGONAL,e.LARVESTA,e.VOLCARONA,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.GENESECT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.SYLVEON,e.DEDENNE,e.CARBINK,e.KLEFKI,e.PUMPKABOO,e.GOURGEIST,e.XERNEAS,e.DIANCIE,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PRIMARINA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.TOXAPEX,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PYUKUMUKU,e.MINIOR,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.BLACEPHALON,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.GOSSIFLEUR,e.ELDEGOSS,e.APPLETUN,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.CURSOLA,e.MR_RIME,e.ALCREMIE,e.FROSMOTH,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.ZAMAZENTA,e.ETERNATUS,e.REGIELEKI,e.REGIDRAGO,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.ARBOLIVA,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.TOEDSCOOL,e.TOEDSCRUEL,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.GLIMMET,e.GLIMMORA,e.FARIGIRAF,e.SCREAM_TAIL,e.SANDY_SHOCKS,e.IRON_MOTH,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHI_YU,e.IRON_VALIANT,e.MIRAIDON,e.MUNKIDORI,e.FEZANDIPITI,e.ARCHALUDON,e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_SLOWKING,e.GALAR_CORSOLA,[e.INDEEDEE,"female"]],[A.HAZE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.EKANS,e.ARBOK,e.ZUBAT,e.GOLBAT,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.KOFFING,e.WEEZING,e.GOLDEEN,e.SEAKING,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.ARTICUNO,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.NATU,e.XATU,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.MURKROW,e.QWILFISH,e.SWINUB,e.PILOSWINE,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SURSKIT,e.MASQUERAIN,e.SWABLU,e.ALTARIA,e.SEVIPER,e.FEEBAS,e.MILOTIC,e.DUSKULL,e.DUSCLOPS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.DRIFLOON,e.DRIFBLIM,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.MANTYKE,e.GLACEON,e.MAMOSWINE,e.DUSKNOIR,e.FROSLASS,e.PHIONE,e.MANAPHY,e.DARKRAI,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.CRYOGONAL,e.ZEKROM,e.GRENINJA,e.SKRELP,e.DRAGALGE,e.AMAURA,e.AURORUS,e.TREVENANT,e.ZYGARDE,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PRIMARINA,e.MAREANIE,e.TOXAPEX,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.RUNERIGUS,e.SPECTRIER,e.OVERQWIL,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CLODSIRE,e.CHIEN_PAO,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_CORSOLA,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_QWILFISH,e.HISUI_DECIDUEYE,e.PALDEA_WOOPER],[A.REFLECT]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.GROWLITHE,e.ARCANINE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SHELLDER,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.TANGELA,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.ESPEON,e.UMBREON,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.STANTLER,e.SMOOCHUM,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BASTIODON,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.WEAVILE,e.MAGNEZONE,e.TANGROWTH,e.ELECTIVIRE,e.TOGEKISS,e.MAMOSWINE,e.GALLADE,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MANAPHY,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.LEAVANNY,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.CRYOGONAL,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.KELDEO,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.INKAY,e.MALAMAR,e.AMAURA,e.AURORUS,e.SYLVEON,e.CARBINK,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.XERNEAS,e.DIANCIE,e.HOOPA,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.ARAQUANID,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.ORANGURU,e.PYUKUMUKU,e.MINIOR,e.TOGEDEMARU,e.BRUXISH,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.CURSOLA,e.MR_RIME,e.FROSMOTH,e.EISCUE,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.ZAMAZENTA,e.ETERNATUS,e.REGIELEKI,e.REGIDRAGO,e.CALYREX,e.WYRDEER,e.ARBOLIVA,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.TOEDSCOOL,e.TOEDSCRUEL,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.GLIMMET,e.GLIMMORA,e.FARIGIRAF,e.SCREAM_TAIL,e.SANDY_SHOCKS,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHI_YU,e.IRON_VALIANT,e.MIRAIDON,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.ARCHALUDON,e.HYDRAPPLE,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_EXEGGUTOR,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_CORSOLA,[e.INDEEDEE,"female"],e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[A.FOCUS_ENERGY]:[e.BEEDRILL,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.MANKEY,e.PRIMEAPE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.FARFETCHD,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.SCYTHER,e.MAGMAR,e.PINSIR,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEW,e.SENTRET,e.FURRET,e.ARIADOS,e.ESPEON,e.UMBREON,e.SCIZOR,e.TEDDIURSA,e.REMORAID,e.OCTILLERY,e.KINGDRA,e.PHANPY,e.TYROGUE,e.HITMONTOP,e.MAGBY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.TAILLOW,e.SWELLOW,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.CARVANHA,e.SHARPEDO,e.NUMEL,e.CAMERUPT,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.KRICKETUNE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.DRIFLOON,e.DRIFBLIM,e.STUNKY,e.SKUNTANK,e.LUCARIO,e.MAGMORTAR,e.LEAFEON,e.GLACEON,e.VICTINI,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.AXEW,e.FRAXURE,e.HAXORUS,e.MIENFOO,e.MIENSHAO,e.BOUFFALANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.PANGORO,e.SYLVEON,e.VOLCANION,e.PASSIMIAN,e.BUZZWOLE,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.BOLTUND,e.FLAPPLE,e.ARROKUDA,e.BARRASKEWDA,e.GRIMMSNARL,e.OBSTAGOON,e.SIRFETCHD,e.FALINKS,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.REGIDRAGO,e.KLEAVOR,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.FINIZEN,e.PALAFIN,e.FLAMIGO,e.VELUZA,e.ANNIHILAPE,e.IRON_HANDS,e.IRON_JUGULIS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.OGERPON,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.PIKACHU,e.ALOLA_MAROWAK,[e.LYCANROC,"dusk"],e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_SAMUROTT],[A.METRONOME]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.GRIMER,e.MUK,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.HITMONLEE,e.HITMONCHAN,e.CHANSEY,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.POLITOED,e.AIPOM,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.CELEBI,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.SWALOT,e.GRUMPIG,e.SPINDA,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSCLOPS,e.JIRACHI,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.FLOATZEL,e.AMBIPOM,e.HAPPINY,e.MUNCHLAX,e.LUCARIO,e.WEAVILE,e.TOGEKISS,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.GOTHORITA,e.GOTHITELLE,e.TORNADUS,e.MELOETTA,e.DELPHOX,e.FLOETTE,e.FLORGES,e.AROMATISSE,e.SLURPUFF,e.DIANCIE,e.INTELEON,e.TOXTRICITY,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.MR_RIME,e.ALCREMIE,e.INDEEDEE,e.CALYREX,e.URSALUNA,e.PAWMOT,e.ARBOLIVA,e.SHROODLE,e.GRAFAIAI,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_HANDS,e.IRON_VALIANT,e.MUNKIDORI,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.HISUI_LILLIGANT],[A.SELF_DESTRUCT]:[e.JIGGLYPUFF,e.WIGGLYTUFF,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.KOFFING,e.WEEZING,e.SNORLAX,e.MEWTWO,e.MEW,e.SUDOWOODO,e.PINECO,e.FORRETRESS,e.STEELIX,e.QWILFISH,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.NOSEPASS,e.GULPIN,e.SWALOT,e.WAILMER,e.WAILORD,e.CAMERUPT,e.TORKOAL,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.GLALIE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.DRIFLOON,e.DRIFBLIM,e.BONSLY,e.MUNCHLAX,e.MAGNEZONE,e.LICKILICKY,e.AZELF,e.HEATRAN,e.GIGALITH,e.TRUBBISH,e.GARBODOR,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FERROSEED,e.FERROTHORN,e.CRYOGONAL,e.GOLETT,e.GOLURK,e.LANDORUS,e.GENESECT,e.VOLCANION,e.SILVALLY,e.MINIOR,e.CELESTEELA,e.MAGEARNA,e.BLACEPHALON,e.MELMETAL,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.POLTEAGEIST,e.CURSOLA,e.PINCURCHIN,e.STONJOURNER,e.REGIELEKI,e.REGIDRAGO,e.VAROOM,e.GLIMMET,e.GLIMMORA,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.GALAR_WEEZING,e.GALAR_CORSOLA,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_QWILFISH],[A.FIRE_BLAST]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GROWLITHE,e.ARCANINE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MAGMAR,e.TAUROS,e.GYARADOS,e.FLAREON,e.AERODACTYL,e.SNORLAX,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.SLOWKING,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.SLUGMA,e.MAGCARGO,e.REMORAID,e.OCTILLERY,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.BLISSEY,e.ENTEI,e.TYRANITAR,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAWILE,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.SOLROCK,e.CASTFORM,e.KECLEON,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.STUNKY,e.SKUNTANK,e.HAPPINY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.LICKILICKY,e.RHYPERIOR,e.MAGMORTAR,e.TOGEKISS,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.AUDINO,e.DARUMAKA,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.GOODRA,e.PUMPKABOO,e.GOURGEIST,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.DRAMPA,e.SOLGALEO,e.CELESTEELA,e.GUZZLORD,e.NAGANADEL,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.CENTISKORCH,e.DRACOZOLT,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SCOVILLAIN,e.DUDUNSPARCE,e.SCREAM_TAIL,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.GOUGING_FIRE,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_GOODRA,[e.PALDEA_TAUROS,"blaze"]],[A.WATERFALL]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.SUICUNE,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.AZURILL,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.FINNEON,e.LUMINEON,e.MANTYKE,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.DEWPIDER,e.ARAQUANID,e.WIMPOD,e.GOLISOPOD,e.BRUXISH,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.ARROKUDA,e.BARRASKEWDA,e.CLOBBOPUS,e.GRAPPLOCT,e.EISCUE,e.DRACOVISH,e.ARCTOVISH,e.BASCULEGION,e.OVERQWIL,e.FINIZEN,e.PALAFIN,e.VELUZA,e.DONDOZO,e.CLODSIRE,e.WALKING_WAKE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,[e.URSHIFU,"rapid-strike"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.PALDEA_WOOPER],[A.SWIFT]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.VENONAT,e.VENOMOTH,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.WEEPINBELL,e.VICTREEBEL,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.MUK,e.SHELLDER,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.CHANSEY,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.SCYTHER,e.ELECTABUZZ,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.POLITOED,e.AIPOM,e.YANMA,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.GLIGAR,e.QWILFISH,e.SCIZOR,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.ELEKID,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.NINJASK,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.SKITTY,e.DELCATTY,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.SPINDA,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.CHIMECHO,e.ABSOL,e.HUNTAIL,e.GOREBYSS,e.LUVDISC,e.SALAMENCE,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,[e.DEOXYS,"","speed"],e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.CHATOT,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.FINNEON,e.LUMINEON,e.MANTYKE,e.WEAVILE,e.MAGNEZONE,e.ELECTIVIRE,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.COTTONEE,e.WHIMSICOTT,e.BASCULIN,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.HELIOPTILE,e.HELIOLISK,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.KLEFKI,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.LYCANROC,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.ORANGURU,e.WIMPOD,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.TOGEDEMARU,e.DRAMPA,e.TAPU_KOKO,e.SOLGALEO,e.LUNALA,e.PHEROMOSA,e.MAGEARNA,e.MARSHADOW,e.NAGANADEL,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.YAMPER,e.BOLTUND,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.HATENNA,e.HATTREM,e.HATTERENE,e.OBSTAGOON,e.PINCURCHIN,e.FROSMOTH,e.INDEEDEE,e.MORPEKO,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.TOEDSCOOL,e.TOEDSCRUEL,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.ANNIHILAPE,e.FARIGIRAF,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_BUNDLE,e.IRON_MOTH,e.IRON_VALIANT,e.WALKING_WAKE,e.IRON_LEAVES,e.MUNKIDORI,e.FEZANDIPITI,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[A.AMNESIA]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.SLOWPOKE,e.SLOWBRO,e.KRABBY,e.KINGLER,e.LICKITUNG,e.TANGELA,e.SNORLAX,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CHINCHOU,e.LANTURN,e.CLEFFA,e.MARILL,e.AZUMARILL,e.POLITOED,e.HOPPIP,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.WOBBUFFET,e.GIRAFARIG,e.DUNSPARCE,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.MANTINE,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.GULPIN,e.SWALOT,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.BARBOACH,e.WHISCASH,e.LILEEP,e.CRADILY,e.CASTFORM,e.WYNAUT,e.GOREBYSS,e.RELICANTH,e.REGICE,e.REGISTEEL,e.JIRACHI,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BIDOOF,e.BIBAREL,e.SHELLOS,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.MANTYKE,e.LICKILICKY,e.TANGROWTH,e.TOGEKISS,e.MAMOSWINE,e.UXIE,e.PANSEAR,e.SIMISEAR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SCRAGGY,e.SCRAFTY,e.TRUBBISH,e.GARBODOR,e.BOUFFALANT,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.SWIRLIX,e.SLURPUFF,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABRAWLER,e.CRABOMINABLE,e.MORELULL,e.SHIINOTIC,e.COMFEY,e.SANDYGAST,e.PALOSSAND,e.DRAMPA,e.GUZZLORD,e.SKWOVET,e.GREEDENT,e.APPLETUN,e.CRAMORANT,e.PERRSERKER,e.CURSOLA,e.RUNERIGUS,e.EISCUE,e.CETODDLE,e.CETITAN,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,[e.DEOXYS,"defense"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.PALDEA_WOOPER],[A.DREAM_EATER]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENOMOTH,e.MEOWTH,e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.LICKITUNG,e.CHANSEY,e.STARMIE,e.MR_MIME,e.JYNX,e.LAPRAS,e.PORYGON,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.AIPOM,e.YANMA,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.BLISSEY,e.LUGIA,e.HO_OH,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHEDINJA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.GULPIN,e.SWALOT,e.SPOINK,e.GRUMPIG,e.SPINDA,e.SWABLU,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.WORMADAM,e.MOTHIM,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.WEAVILE,e.LICKILICKY,e.TOGEKISS,e.YANMEGA,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.AMAURA,e.AURORUS,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.CUTIEFLY,e.RIBOMBEE,e.MORELULL,e.SHIINOTIC,e.ORANGURU,e.MIMIKYU,e.BRUXISH,e.LUNALA,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_ARTICUNO],[A.LEECH_LIFE]:[e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.ZUBAT,e.GOLBAT,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.KABUTO,e.KABUTOPS,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.YANMA,e.BEAUTIFLY,e.DUSTOX,e.SURSKIT,e.MASQUERAIN,e.NINCADA,e.NINJASK,e.SHEDINJA,e.DUSKULL,e.DUSCLOPS,e.KRICKETUNE,e.DRAPION,e.YANMEGA,e.DUSKNOIR,e.JOLTIK,e.GALVANTULA,e.SHELMET,e.ACCELGOR,e.LARVESTA,e.VOLCARONA,e.GENESECT,e.NOIBAT,e.NOIVERN,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.WIMPOD,e.GOLISOPOD,e.MIMIKYU,e.BUZZWOLE,e.NAGANADEL,e.DOTTLER,e.ORBEETLE,e.SIZZLIPEDE,e.CENTISKORCH,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.CURSOLA,e.FROSMOTH,e.DRACOVISH,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.RELLOR,e.RABSCA,e.SLITHER_WING,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH],[A.FLASH]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BUTTERFREE,e.BEEDRILL,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.KOFFING,e.WEEZING,e.CHANSEY,e.TANGELA,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.JOLTEON,e.PORYGON,e.ZAPDOS,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.SHUCKLE,e.SKARMORY,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.ELEKID,e.BLISSEY,e.RAIKOU,e.ENTEI,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.CHERUBI,e.CHERRIM,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.SNOVER,e.ABOMASNOW,e.MAGNEZONE,e.TANGROWTH,e.ELECTIVIRE,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.MUNNA,e.MUSHARNA,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.STUNFISK,e.GOLETT,e.GOLURK,e.VIRIZION,e.ZEKROM,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.SYLVEON,e.DEDENNE,e.CARBINK,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.XERNEAS,e.DIANCIE,e.HOOPA,e.MORELULL,e.SHIINOTIC,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.WYRDEER,e.CLODSIRE,e.FARIGIRAF,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_YAMASK,e.HISUI_LILLIGANT,e.HISUI_AVALUGG,e.PALDEA_WOOPER],[A.EXPLOSION]:[e.GEODUDE,e.GRAVELER,e.GOLEM,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.KOFFING,e.WEEZING,e.MEW,e.SUDOWOODO,e.PINECO,e.FORRETRESS,e.STEELIX,e.QWILFISH,e.MAGCARGO,e.CORSOLA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.NOSEPASS,e.GULPIN,e.SWALOT,e.CAMERUPT,e.TORKOAL,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.GLALIE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.DRIFLOON,e.DRIFBLIM,e.STUNKY,e.SKUNTANK,e.BRONZONG,e.BONSLY,e.MAGNEZONE,e.LICKILICKY,e.PROBOPASS,e.AZELF,e.HEATRAN,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.TRUBBISH,e.GARBODOR,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FERROSEED,e.FERROTHORN,e.CRYOGONAL,e.LANDORUS,e.GENESECT,e.CARBINK,e.PUMPKABOO,e.GOURGEIST,e.DIANCIE,e.VOLCANION,e.SILVALLY,e.MINIOR,e.TURTONATOR,e.CELESTEELA,e.MAGEARNA,e.BLACEPHALON,e.ROLYCOLY,e.REGIELEKI,e.REGIDRAGO,e.GARGANACL,e.GLIMMET,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.GALAR_WEEZING,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[A.REST]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.ROCK_SLIDE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.ONIX,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.PINSIR,e.TAUROS,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.MANTINE,e.SKARMORY,e.PHANPY,e.DONPHAN,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.KECLEON,e.DUSCLOPS,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.MANTYKE,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.DARKRAI,e.ARCEUS,e.PIGNITE,e.EMBOAR,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.DURANT,e.HYDREIGON,e.TERRAKION,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.SOLGALEO,e.NIHILEGO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.STAKATAKA,e.MELMETAL,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.FALINKS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.URSHIFU,e.ZARUDE,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.TING_LU,e.ROARING_MOON,e.ARCHALUDON,e.TERAPAGOS,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_CORSOLA,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.TRI_ATTACK]:[e.SPEAROW,e.FEAROW,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DUGTRIO,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.MAGNETON,e.DODUO,e.DODRIO,e.SHELLDER,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.CHANSEY,e.STARYU,e.STARMIE,e.PORYGON,e.MEWTWO,e.MEW,e.TOGEPI,e.TOGETIC,e.SLOWKING,e.PORYGON2,e.BLISSEY,e.LATIAS,e.LATIOS,e.MAGNEZONE,e.TOGEKISS,e.PORYGON_Z,e.PROBOPASS,e.UXIE,e.MESPRIT,e.AZELF,e.BEHEEYEM,e.HYDREIGON,e.GENESECT,e.TYPE_NULL,e.SILVALLY,e.MAGEARNA,e.ALCREMIE,e.INDEEDEE,e.DRAGAPULT,e.CALYREX,e.SANDY_SHOCKS,e.IRON_JUGULIS,e.ALOLA_DUGTRIO,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING],[A.SUPER_FANG]:[e.RATTATA,e.RATICATE,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.ZUBAT,e.GOLBAT,e.MEW,e.SENTRET,e.FURRET,e.CROBAT,e.SNUBBULL,e.GRANBULL,e.HOUNDOUR,e.HOUNDOOM,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.MAWILE,e.PLUSLE,e.MINUN,e.CARVANHA,e.SHARPEDO,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.HUNTAIL,e.BIDOOF,e.BIBAREL,e.PACHIRISU,e.GLAMEOW,e.PURUGLY,e.SKUNTANK,e.CROAGUNK,e.TOXICROAK,e.PATRAT,e.WATCHOG,e.WOOBAT,e.SWOOBAT,e.SCRAGGY,e.SCRAFTY,e.MINCCINO,e.CINCCINO,e.EELEKTRIK,e.EELEKTROSS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.DEDENNE,e.NOIBAT,e.NOIVERN,e.YUNGOOS,e.GUMSHOOS,e.KOMALA,e.TOGEDEMARU,e.BRUXISH,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.DREDNAW,e.MORPEKO,e.DRACOVISH,e.ARCTOVISH,e.LECHONK,e.OINKOLOGNE,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.SHROODLE,e.GRAFAIAI,e.CAPSAKID,e.SCOVILLAIN,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH],[A.SUBSTITUTE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.THIEF]:[e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEW,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.NATU,e.XATU,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.YANMA,e.QUAGSIRE,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.BLISSEY,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINJASK,e.SHEDINJA,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BONSLY,e.MIME_JR,e.CHATOT,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.YANMEGA,e.GLISCOR,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.ROTOM,e.DARKRAI,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.WOOBAT,e.SWOOBAT,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.WHIMSICOTT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.JOLTIK,e.GALVANTULA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.CUBCHOO,e.BEARTIC,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.PANGORO,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HAWLUCHA,e.DEDENNE,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.CUTIEFLY,e.RIBOMBEE,e.SALANDIT,e.SALAZZLE,e.COMFEY,e.PASSIMIAN,e.KOMALA,e.TOGEDEMARU,e.MIMIKYU,e.DHELMISE,e.TAPU_KOKO,e.TAPU_LELE,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.NAGANADEL,e.BLACEPHALON,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.CRAMORANT,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.MORPEKO,e.DRAKLOAK,e.DRAGAPULT,e.ZARUDE,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.MEOWSCARADA,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.SQUAWKABILLY,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.BRUTE_BONNET,e.IRON_BUNDLE,e.GIMMIGHOUL,e.GHOLDENGO,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[A.SNORE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.CATERPIE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.WURMPLE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETOT,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BURMY,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.URSALUNA,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK],[A.CURSE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.HARIYAMA,e.NOSEPASS,e.GULPIN,e.SWALOT,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.WHISCASH,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.REGIROCK,e.REGICE,e.REGISTEEL,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.BONSLY,e.SPIRITOMB,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.GIRATINA,e.DARKRAI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.YAMASK,e.COFAGRIGUS,e.SAWSBUCK,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.BEARTIC,e.GOLETT,e.GOLURK,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.SYLVEON,e.GOOMY,e.SLIGGOO,e.GOODRA,e.PHANTUMP,e.TREVENANT,e.BERGMITE,e.AVALUGG,e.DECIDUEYE,e.GUMSHOOS,e.MUDBRAY,e.MUDSDALE,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.KOMALA,e.MIMIKYU,e.SKWOVET,e.GREEDENT,e.CORVIKNIGHT,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SINISTEA,e.POLTEAGEIST,e.PERRSERKER,e.RUNERIGUS,e.PINCURCHIN,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.GLASTRIER,e.SPECTRIER,[e.CALYREX,"ice","shadow"],e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.OVERQWIL,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CERULEDGE,e.MABOSSTIFF,e.BRAMBLIN,e.BRAMBLEGHAST,e.BOMBIRDIER,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.CETODDLE,e.CETITAN,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.SLITHER_WING,e.IRON_THORNS,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.HYDRAPPLE,e.PECHARUNT,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_YAMASK,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER],[A.REVERSAL]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.HITMONLEE,e.HITMONCHAN,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.SCYTHER,e.PINSIR,e.TAUROS,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.PICHU,e.YANMA,e.PINECO,e.FORRETRESS,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.DELIBIRD,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.HITMONTOP,e.MILTANK,e.ENTEI,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ZANGOOSE,e.SEVIPER,e.MONFERNO,e.INFERNAPE,e.VESPIQUEN,e.LOPUNNY,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.RHYPERIOR,e.YANMEGA,e.MAMOSWINE,e.GALLADE,e.VICTINI,e.PIGNITE,e.EMBOAR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.DARMANITAN,e.SCRAFTY,e.ESCAVALIER,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.BISHARP,e.BOUFFALANT,e.BRAVIARY,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.KELDEO,e.MELOETTA,e.CHESNAUGHT,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.MALAMAR,e.HAWLUCHA,e.ZYGARDE,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,[e.LYCANROC,"midnight","dusk"],e.BEWEAR,e.PASSIMIAN,e.SILVALLY,e.KOMALA,e.TOGEDEMARU,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.WOOLOO,e.DUBWOOL,e.CRAMORANT,e.CLOBBOPUS,e.GRAPPLOCT,e.OBSTAGOON,e.FALINKS,e.PINCURCHIN,e.EISCUE,e.MORPEKO,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.REGIDRAGO,e.KLEAVOR,e.SNEASLER,e.OVERQWIL,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.SQUAWKABILLY,e.MASCHIFF,e.MABOSSTIFF,e.KLAWF,e.PALAFIN,e.FLAMIGO,e.ANNIHILAPE,e.KINGAMBIT,e.GREAT_TUSK,e.SLITHER_WING,e.IRON_HANDS,e.IRON_VALIANT,e.KORAIDON,e.IRON_LEAVES,e.OKIDOGI,e.OGERPON,e.GOUGING_FIRE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,[e.LYCANROC,"midnight","dusk"],e.GALAR_ZAPDOS,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,[e.BASCULIN,"blue-striped","red-striped"]],[A.SPITE]:[e.EKANS,e.ARBOK,e.VULPIX,e.NINETALES,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.TAUROS,e.GYARADOS,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.HOOTHOOT,e.NOCTOWL,e.SPINARAK,e.ARIADOS,e.AIPOM,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.DUNSPARCE,e.QWILFISH,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.STANTLER,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.CACNEA,e.CACTURNE,e.CORPHISH,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.SNORUNT,e.GLALIE,e.CRANIDOS,e.RAMPARDOS,e.VESPIQUEN,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.SPIRITOMB,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.RHYPERIOR,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.GIRATINA,e.DARKRAI,e.PURRLOIN,e.LIEPARD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.FRILLISH,e.JELLICENT,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.STUNFISK,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.SKRELP,e.DRAGALGE,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ZYGARDE,e.DECIDUEYE,e.MAREANIE,e.TOXAPEX,e.ORANGURU,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.MIMIKYU,e.DHELMISE,e.LUNALA,e.NIHILEGO,e.BLACEPHALON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.SINISTEA,e.POLTEAGEIST,e.PERRSERKER,e.CURSOLA,e.MORPEKO,e.WYRDEER,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.LOKIX,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.MABOSSTIFF,e.BRAMBLIN,e.BRAMBLEGHAST,e.ANNIHILAPE,e.DUDUNSPARCE,e.KINGAMBIT,e.FLUTTER_MANE,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MOLTRES,e.GALAR_CORSOLA,e.GALAR_STUNFISK,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK],[A.PROTECT]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BURMY,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.SPEWPA,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.SCARY_FACE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.RATICATE,e.SPEAROW,e.EKANS,e.ARBOK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.VICTREEBEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.HYPNO,e.ELECTRODE,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.SCYTHER,e.MAGMAR,e.TAUROS,e.GYARADOS,e.FLAREON,e.AERODACTYL,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.NOCTOWL,e.SPINARAK,e.ARIADOS,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SNEASEL,e.URSARING,e.SWINUB,e.PILOSWINE,e.HOUNDOUR,e.HOUNDOOM,e.DONPHAN,e.STANTLER,e.MAGBY,e.ENTEI,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.MASQUERAIN,e.VIGOROTH,e.SLAKING,e.HARIYAMA,e.AGGRON,e.MANECTRIC,e.CARVANHA,e.SHARPEDO,e.NUMEL,e.CAMERUPT,e.CACNEA,e.CACTURNE,e.SEVIPER,e.WHISCASH,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.GLALIE,e.HUNTAIL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.VESPIQUEN,e.FLOATZEL,e.MISMAGIUS,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.RHYPERIOR,e.MAGMORTAR,e.YANMEGA,e.GLISCOR,e.MAMOSWINE,e.FROSLASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.GIRATINA,e.CRESSELIA,e.ARCEUS,e.SAMUROTT,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.COFAGRIGUS,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.KARRABLAST,e.ESCAVALIER,e.AMOONGUSS,e.EELEKTRIK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.CRYOGONAL,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.KYUREM,e.CHESNAUGHT,e.PANGORO,e.MALAMAR,e.SKRELP,e.DRAGALGE,e.CLAWITZER,e.TYRUNT,e.TYRANTRUM,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.AVALUGG,e.NOIVERN,e.HOOPA,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.TOXAPEX,e.MUDSDALE,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.NECROZMA,e.ZERAORA,e.THWACKEY,e.RILLABOOM,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CHEWTLE,e.DREDNAW,e.FLAPPLE,e.SILICOBRA,e.SANDACONDA,e.BARRASKEWDA,e.TOXTRICITY,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.RUNERIGUS,e.MORPEKO,e.COPPERAJAH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.OVERQWIL,e.ENAMORUS,e.SKELEDIRGE,e.SPIDOPS,e.LOKIX,e.DACHSBUN,e.SQUAWKABILLY,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.SCOVILLAIN,e.BOMBIRDIER,e.VAROOM,e.REVAVROOM,e.GREAVARD,e.HOUNDSTONE,e.DONDOZO,e.ANNIHILAPE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.IRON_TREADS,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.ARCTIBAX,e.BAXCALIBUR,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.OKIDOGI,e.OGERPON,e.ARCHALUDON,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RATICATE,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_ELECTRODE,e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[A.SLUDGE_BOMB]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BEEDRILL,e.RATTATA,e.RATICATE,e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.EXEGGCUTE,e.EXEGGUTOR,e.KOFFING,e.WEEZING,e.TANGELA,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.BELLOSSOM,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SHUCKLE,e.OCTILLERY,e.HOUNDOUR,e.HOUNDOOM,e.DUSTOX,e.SHROOMISH,e.BRELOOM,e.MAWILE,e.ROSELIA,e.GULPIN,e.SWALOT,e.TORKOAL,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.LILEEP,e.CRADILY,e.METANG,e.METAGROSS,e.BUDEW,e.ROSERADE,e.VESPIQUEN,e.GASTRODON,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.TANGROWTH,e.GLISCOR,e.DARKRAI,e.ARCEUS,e.DRILBUR,e.EXCADRILL,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.DRUDDIGON,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOOMY,e.SLIGGOO,e.GOODRA,e.PUMPKABOO,e.GOURGEIST,e.VOLCANION,e.MAREANIE,e.TOXAPEX,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.NIHILEGO,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.TOXTRICITY,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.RELLOR,e.RABSCA,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_STUNFISK,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.PALDEA_WOOPER],[A.MUD_SLAP]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.FARFETCHD,e.DODUO,e.DODRIO,e.GRIMER,e.MUK,e.ONIX,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.GOLDEEN,e.SEAKING,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.MILOTIC,e.KECLEON,e.BANETTE,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETOT,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.LILLIPUP,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TYMPOLE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.MINCCINO,e.CUBCHOO,e.BEARTIC,e.SHELMET,e.STUNFISK,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.LANDORUS,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,[e.LYCANROC,"midday","midnight"],e.MUDBRAY,e.MUDSDALE,e.SALANDIT,e.SALAZZLE,e.SANDYGAST,e.PALOSSAND,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.ROLYCOLY,e.CARKOL,e.SILICOBRA,e.SANDACONDA,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.TADBULB,e.BELLIBOLT,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.CYCLIZAR,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.IRON_TREADS,e.WO_CHIEN,e.TING_LU,e.KORAIDON,e.MUNKIDORI,[e.WORMADAM,"sandy"],e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_STUNFISK,e.PALDEA_WOOPER],[A.SPIKES]:[e.SANDSHREW,e.SANDSLASH,e.SHELLDER,e.CLOYSTER,e.OMANYTE,e.OMASTAR,e.MEW,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.PINECO,e.FORRETRESS,e.GLIGAR,e.QWILFISH,e.HERACROSS,e.DELIBIRD,e.SKARMORY,e.ROSELIA,e.CACNEA,e.CACTURNE,e.WHISCASH,e.SNORUNT,e.GLALIE,e.GROUDON,e.BUDEW,e.ROSERADE,e.VESPIQUEN,e.GASTRODON,e.BONSLY,e.GARCHOMP,e.GLISCOR,e.FROSLASS,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.TRUBBISH,e.GARBODOR,e.FERROSEED,e.FERROTHORN,e.SHELMET,e.ACCELGOR,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.CARBINK,e.KLEFKI,e.DIANCIE,e.WIMPOD,e.GOLISOPOD,e.MAGEARNA,e.NAGANADEL,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.PINCURCHIN,e.OVERQWIL,e.MEOWSCARADA,e.TAROUNTULA,e.SPIDOPS,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.SANDY_SHOCKS,e.IRON_THORNS,e.TING_LU,e.OGERPON,[e.DEOXYS,"defense"],e.ALOLA_SANDSLASH,e.HISUI_QWILFISH,e.PALDEA_WOOPER],[A.ICY_WIND]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.ARTICUNO,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.CLEFFA,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.QWILFISH,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.KINGDRA,e.PORYGON2,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SHIFTRY,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.SPOINK,e.GRUMPIG,e.SPINDA,e.ZANGOOSE,e.LUNATONE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.METANG,e.METAGROSS,e.REGICE,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.JIRACHI,[e.DEOXYS,"","speed"],e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.MUNCHLAX,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.GLACEON,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.SIGILYPH,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.GOLETT,e.GOLURK,e.TORNADUS,e.KYUREM,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABOMINABLE,e.ORICORIO,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.BRUXISH,e.DRAMPA,e.TAPU_FINI,e.LUNALA,e.PHEROMOSA,e.INTELEON,e.CRAMORANT,e.OBSTAGOON,e.CURSOLA,e.MR_RIME,e.SNOM,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.BASCULEGION,e.OVERQWIL,e.QUAQUAVAL,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.CETODDLE,e.CETITAN,e.VELUZA,e.TATSUGIRI,e.FLUTTER_MANE,e.IRON_BUNDLE,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.IRON_VALIANT,e.FEZANDIPITI,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,[e.CALYREX,"ice"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_AVALUGG],[A.OUTRAGE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BEEDRILL,e.NIDOQUEEN,e.NIDOKING,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.MAROWAK,e.RHYDON,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.MEGANIUM,e.FERALIGATR,e.AMPHAROS,e.GRANBULL,e.KINGDRA,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.SCEPTILE,e.SWAMPERT,e.VIGOROTH,e.SLAKING,e.EXPLOUD,e.AGGRON,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.BARBOACH,e.WHISCASH,e.TROPIUS,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.TORTERRA,e.RAMPARDOS,e.BASTIODON,e.GIBLE,e.GABITE,e.GARCHOMP,e.ABOMASNOW,e.RHYPERIOR,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.SERPERIOR,e.KROOKODILE,e.SCRAFTY,e.ARCHEOPS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.BOUFFALANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.PANGORO,e.SKRELP,e.DRAGALGE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.GOOMY,e.SLIGGOO,e.GOODRA,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.ZYGARDE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.BUZZWOLE,e.PHEROMOSA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.NAGANADEL,e.ZERAORA,e.FLAPPLE,e.APPLETUN,e.SANDACONDA,e.MORPEKO,e.COPPERAJAH,e.DRACOZOLT,e.DRACOVISH,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.REGIDRAGO,e.GLASTRIER,e.BASCULEGION,e.ENAMORUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.MABOSSTIFF,e.PALAFIN,e.CYCLIZAR,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.DUDUNSPARCE,e.BRUTE_BONNET,e.IRON_JUGULIS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.DIPPLIN,e.OKIDOGI,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight","dusk"],[e.CALYREX,"ice"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.PALDEA_TAUROS],[A.SANDSTORM]:[e.CHARIZARD,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.GEODUDE,e.GRAVELER,e.GOLEM,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.ONIX,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.TAUROS,e.GYARADOS,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEWTWO,e.MEW,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SCIZOR,e.SHUCKLE,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.SKARMORY,e.PHANPY,e.DONPHAN,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.NINCADA,e.NINJASK,e.SHEDINJA,e.NOSEPASS,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.CASTFORM,e.ABSOL,e.RELICANTH,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.TORTERRA,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.GLISCOR,e.MAMOSWINE,e.PROBOPASS,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.ACCELGOR,e.STUNFISK,e.PAWNIARD,e.BISHARP,e.MANDIBUZZ,e.DURANT,e.COBALION,e.TERRAKION,e.TORNADUS,e.LANDORUS,e.BUNNELBY,e.DIGGERSBY,e.BINACLE,e.BARBARACLE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.KLEFKI,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.ORICORIO,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.NIHILEGO,e.STAKATAKA,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.ZAMAZENTA,e.KLEAVOR,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_THORNS,e.GHOLDENGO,e.TING_LU,e.OGERPON,e.IRON_BOULDER,[e.WORMADAM,"sandy"],e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_SLOWBRO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_CORSOLA,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER],[A.GIGA_DRAIN]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BUTTERFREE,e.BEEDRILL,e.EKANS,e.ARBOK,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.KABUTO,e.KABUTOPS,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.NATU,e.XATU,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.YANMA,e.PINECO,e.FORRETRESS,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.LILEEP,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.KRICKETUNE,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.CHERUBI,e.CHERRIM,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.YANMEGA,e.LEAFEON,e.UXIE,e.SHAYMIN,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.WOOBAT,e.SWOOBAT,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.TRUBBISH,e.GARBODOR,e.DEERLING,e.SAWSBUCK,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.EELEKTRIK,e.EELEKTROSS,e.SHELMET,e.ACCELGOR,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.VIRIZION,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.SANDYGAST,e.PALOSSAND,e.MIMIKYU,e.DHELMISE,e.TAPU_BULU,e.CELESTEELA,e.KARTANA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.ORBEETLE,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.CURSOLA,e.ALCREMIE,e.FROSMOTH,e.ZARUDE,e.CALYREX,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.TAROUNTULA,e.SPIDOPS,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.BRUTE_BONNET,e.SLITHER_WING,e.WO_CHIEN,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.HYDRAPPLE,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_CORSOLA,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[A.ENDURE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.CHARM]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.CHANSEY,e.MR_MIME,e.JYNX,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEW,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.ESPEON,e.UMBREON,e.MISDREAVUS,e.WOBBUFFET,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.PHANPY,e.DONPHAN,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.AZURILL,e.SKITTY,e.DELCATTY,e.PLUSLE,e.MINUN,e.ILLUMISE,e.NUMEL,e.CAMERUPT,e.CHIMECHO,e.WYNAUT,e.LUVDISC,e.LATIAS,e.JIRACHI,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.PACHIRISU,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.MIME_JR,e.HAPPINY,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.MAMOSWINE,e.GALLADE,e.FROSLASS,e.MESPRIT,e.PHIONE,e.MANAPHY,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.WOOBAT,e.SWOOBAT,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.CUBCHOO,e.BEARTIC,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLABEBE,e.FLOETTE,e.FLORGES,e.FURFROU,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.TYRUNT,e.TYRANTRUM,e.SYLVEON,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.KOMALA,e.MIMIKYU,e.TAPU_LELE,e.POIPOLE,e.NAGANADEL,e.GOSSIFLEUR,e.ELDEGOSS,e.YAMPER,e.BOLTUND,e.TOXEL,e.TOXTRICITY,e.HATENNA,e.HATTREM,e.HATTERENE,e.PERRSERKER,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.URSALUNA,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.MASCHIFF,e.MABOSSTIFF,e.FINIZEN,e.PALAFIN,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.FLUTTER_MANE,e.FEZANDIPITI,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_MR_MIME,[e.INDEEDEE,"female"],e.HISUI_LILLIGANT,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[A.FALSE_SWIPE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BEEDRILL,e.SPEAROW,e.FEAROW,e.SANDSHREW,e.SANDSLASH,e.PARAS,e.PARASECT,e.MEOWTH,e.PERSIAN,e.FARFETCHD,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.SCYTHER,e.PINSIR,e.JOLTEON,e.MEW,e.GLIGAR,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.GROVYLE,e.SCEPTILE,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.MAWILE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.ABSOL,e.EMPOLEON,e.KRICKETUNE,e.GIBLE,e.GABITE,e.GARCHOMP,e.SKORUPI,e.DRAPION,e.WEAVILE,e.GLISCOR,e.GALLADE,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.LEAVANNY,e.KARRABLAST,e.ESCAVALIER,e.AXEW,e.FRAXURE,e.HAXORUS,e.PAWNIARD,e.BISHARP,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.GOLISOPOD,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_BULU,e.BUZZWOLE,e.PHEROMOSA,e.KARTANA,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.CHEWTLE,e.DREDNAW,e.PERRSERKER,e.FALINKS,e.ZACIAN,e.URSHIFU,e.KLEAVOR,e.SNEASLER,e.TAROUNTULA,e.SPIDOPS,e.CERULEDGE,e.KINGAMBIT,e.BAXCALIBUR,e.CHIEN_PAO,e.IRON_VALIANT,e.IRON_LEAVES,e.OGERPON,e.ALOLA_SANDSLASH,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_DECIDUEYE],[A.SWAGGER]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.BLACEPHALON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.WOOLOO,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.MORPEKO,e.CUFANT,e.ZARUDE,e.SQUAWKABILLY,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.VAROOM,e.REVAVROOM,e.ANNIHILAPE,e.CHI_YU,e.FEZANDIPITI,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_SLOWKING,e.PALDEA_TAUROS],[A.STEEL_WING]:[e.CHARIZARD,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.FARFETCHD,e.DODUO,e.DODRIO,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.YANMA,e.MURKROW,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.SKARMORY,e.LUGIA,e.HO_OH,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.HONCHKROW,e.CHATOT,e.TOGEKISS,e.YANMEGA,e.GLISCOR,e.GIRATINA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.LEAVANNY,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.ELGYEM,e.BEHEEYEM,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.SILVALLY,e.DRAMPA,e.TAPU_KOKO,e.CORVIKNIGHT,e.CRAMORANT,e.SIRFETCHD,e.DRAKLOAK,e.DRAGAPULT,e.GALAR_FARFETCHD,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES],[A.ATTRACT]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINJASK,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.HEATRAN,e.CRESSELIA,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.KUBFU,e.URSHIFU,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.DIPPLIN,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.SLEEP_TALK]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.HEAL_BELL]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.LICKITUNG,e.CHANSEY,e.JYNX,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.ARTICUNO,e.DRAGONITE,e.MEW,e.CHINCHOU,e.LANTURN,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.ESPEON,e.UMBREON,e.MISDREAVUS,e.SNUBBULL,e.GRANBULL,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.CELEBI,e.POOCHYENA,e.MIGHTYENA,e.GARDEVOIR,e.SKITTY,e.DELCATTY,e.SPOINK,e.GRUMPIG,e.SWABLU,e.ALTARIA,e.CHIMECHO,e.KRICKETUNE,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.CHINGLING,e.HAPPINY,e.LICKILICKY,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.UXIE,e.PHIONE,e.MANAPHY,e.MUNNA,e.MUSHARNA,e.AUDINO,e.PETILIL,e.LILLIGANT,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.MELOETTA,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.SYLVEON,e.DIANCIE,e.COMFEY,e.MAGEARNA,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.HISUI_LILLIGANT,e.ETERNAL_FLOETTE],[A.RETURN]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.FRUSTRATION]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.SAFEGUARD]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BUTTERFREE,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VILEPLUME,e.GROWLITHE,e.ARCANINE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.DROWZEE,e.HYPNO,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.LAPRAS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.LEDYBA,e.LEDIAN,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.WOBBUFFET,e.SCIZOR,e.SHUCKLE,e.CORSOLA,e.BLISSEY,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BEAUTIFLY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.SKITTY,e.DELCATTY,e.SPINDA,e.SWABLU,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.MILOTIC,e.TROPIUS,e.CHIMECHO,e.WYNAUT,e.SNORUNT,e.GLALIE,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.WORMADAM,e.MOTHIM,e.CHERUBI,e.CHERRIM,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.FINNEON,e.LUMINEON,e.SNOVER,e.ABOMASNOW,e.TOGEKISS,e.GALLADE,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.KELDEO,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SWIRLIX,e.SLURPUFF,e.BINACLE,e.BARBARACLE,e.AMAURA,e.AURORUS,e.SYLVEON,e.CARBINK,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.MAREANIE,e.TOXAPEX,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PYUKUMUKU,e.MINIOR,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.STAKATAKA,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.DOTTLER,e.ORBEETLE,e.APPLETUN,e.HATENNA,e.HATTREM,e.HATTERENE,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.FROSMOTH,e.STONJOURNER,e.ZAMAZENTA,e.CALYREX,e.ARBOLIVA,e.RABSCA,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_YAMASK,[e.INDEEDEE,"female"]],[A.PAIN_SPLIT]:[e.ARBOK,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.TANGELA,e.STARYU,e.STARMIE,e.PORYGON,e.MEW,e.IGGLYBUFF,e.NATU,e.XATU,e.MISDREAVUS,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.QWILFISH,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.PORYGON2,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.GULPIN,e.SWALOT,e.LUNATONE,e.SOLROCK,e.LILEEP,e.CRADILY,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.DEOXYS,e.RAMPARDOS,e.SHELLOS,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.SPIRITOMB,e.TANGROWTH,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.GIRATINA,e.MUNNA,e.MUSHARNA,e.AUDINO,e.THROH,e.SAWK,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.STUNFISK,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ZYGARDE,e.MAREANIE,e.TOXAPEX,e.STUFFUL,e.BEWEAR,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.MIMIKYU,e.BRUXISH,e.DHELMISE,e.NIHILEGO,e.MAGEARNA,e.BLACEPHALON,e.CLOBBOPUS,e.GRAPPLOCT,e.POLTEAGEIST,e.HATTERENE,e.ALCREMIE,e.PINCURCHIN,e.SPECTRIER,e.BASCULEGION,e.OVERQWIL,e.SPIDOPS,e.MABOSSTIFF,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.WUGTRIO,e.GREAVARD,e.HOUNDSTONE,e.VELUZA,e.DUDUNSPARCE,e.FLUTTER_MANE,e.POLTCHAGEIST,e.SINISTCHA,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_WEEZING,e.GALAR_MOLTRES,e.GALAR_STUNFISK,e.HISUI_QWILFISH,e.HISUI_ZORUA,e.HISUI_ZOROARK],[A.MEGAHORN]:[e.NIDOKING,e.RAPIDASH,e.SEEL,e.DEWGONG,e.RHYHORN,e.RHYDON,e.GOLDEEN,e.SEAKING,e.TAUROS,e.LAPRAS,e.MEW,e.SPINARAK,e.ARIADOS,e.HERACROSS,e.STANTLER,e.ABSOL,e.RHYPERIOR,e.SAMUROTT,e.SCOLIPEDE,e.SAWSBUCK,e.KARRABLAST,e.ESCAVALIER,e.BOUFFALANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.XERNEAS,e.TAPU_BULU,e.CELESTEELA,e.DREDNAW,e.FALINKS,e.GLASTRIER,e.WYRDEER,e.CLODSIRE,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_LEAVES,e.IRON_BOULDER,e.GALAR_RAPIDASH,[e.CALYREX,"ice"],e.HISUI_SAMUROTT],[A.BATON_PASS]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENONAT,e.VENOMOTH,e.POLIWRATH,e.RAPIDASH,e.FARFETCHD,e.HYPNO,e.MR_MIME,e.SCYTHER,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.ZAPDOS,e.MEW,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.ESPEON,e.UMBREON,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.CELEBI,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SURSKIT,e.MASQUERAIN,e.NINJASK,e.SKITTY,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.SPINDA,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.CHIMECHO,e.ABSOL,e.HUNTAIL,e.GOREBYSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.KRICKETUNE,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.CHINGLING,e.MIME_JR,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GLISCOR,e.UXIE,e.MESPRIT,e.AZELF,e.VICTINI,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.WOOBAT,e.SWOOBAT,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.SCOLIPEDE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.ALOMOMOLA,e.SHELMET,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.DURANT,e.MELOETTA,e.FLABEBE,e.FLOETTE,e.FLORGES,e.INKAY,e.MALAMAR,e.SYLVEON,e.HAWLUCHA,e.DIANCIE,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.PASSIMIAN,e.PYUKUMUKU,e.MAGEARNA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.DUBWOOL,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.PERRSERKER,e.MR_RIME,e.MORPEKO,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.CALYREX,e.KLEAVOR,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.FIDOUGH,e.DACHSBUN,e.SHROODLE,e.GRAFAIAI,e.FLITTLE,e.ESPATHRA,e.TATSUGIRI,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.MUNKIDORI,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE,e.GALAR_RAPIDASH,e.GALAR_MR_MIME,[e.INDEEDEE,"female"],e.HISUI_DECIDUEYE],[A.ENCORE]:[e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.SEEL,e.DEWGONG,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.HITMONCHAN,e.MR_MIME,e.JYNX,e.SNORLAX,e.DRAGONITE,e.MEW,e.LEDYBA,e.LEDIAN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.WOBBUFFET,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.PHANPY,e.DONPHAN,e.SMOOCHUM,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.AZURILL,e.SABLEYE,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.SHUPPET,e.BANETTE,e.CHIMECHO,e.WYNAUT,e.SPHEAL,e.SEALEO,e.WALREIN,e.JIRACHI,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PACHIRISU,e.BUNEARY,e.LOPUNNY,e.MIME_JR,e.CHATOT,e.MUNCHLAX,e.CROAGUNK,e.TOXICROAK,e.LUMINEON,e.TOGEKISS,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.VICTINI,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PURRLOIN,e.LIEPARD,e.AUDINO,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.CUBCHOO,e.BEARTIC,e.SHELMET,e.ACCELGOR,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.SPRITZEE,e.AROMATISSE,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.TOUCANNON,e.SALAZZLE,e.COMFEY,e.ORANGURU,e.TOGEDEMARU,e.MAGEARNA,e.BLACEPHALON,e.TOXEL,e.TOXTRICITY,e.MR_RIME,e.ALCREMIE,[e.INDEEDEE,"male"],e.ZARUDE,e.CALYREX,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.ARBOLIVA,e.SHROODLE,e.GRAFAIAI,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FINIZEN,e.PALAFIN,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_VALIANT,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.GALAR_MR_MIME,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT],[A.IRON_TAIL]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.FARFETCHD,e.SEEL,e.DEWGONG,e.ONIX,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.ELECTABUZZ,e.MAGMAR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.AERODACTYL,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.SLOWKING,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.GRANBULL,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BRELOOM,e.AZURILL,e.SKITTY,e.DELCATTY,e.ARON,e.LAIRON,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.KECLEON,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.LEAFEON,e.GLACEON,e.GLISCOR,e.PORYGON_Z,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.GIRATINA,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.MINCCINO,e.CINCCINO,e.EMOLGA,e.EELEKTRIK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.DEDENNE,e.GOOMY,e.SLIGGOO,e.GOODRA,e.NOIBAT,e.NOIVERN,e.ZYGARDE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.SALANDIT,e.SALAZZLE,e.PASSIMIAN,e.TURTONATOR,e.TOGEDEMARU,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.ZERAORA,e.SKWOVET,e.GREEDENT,e.DREDNAW,e.OBSTAGOON,e.PERRSERKER,e.DRACOZOLT,e.ARCTOZOLT,e.ZACIAN,e.ZAMAZENTA,e.ZARUDE,e.WYRDEER,e.SNEASLER,e.CYCLIZAR,e.ORTHWORM,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[A.METAL_CLAW]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SANDSHREW,e.SANDSLASH,e.PARAS,e.MEOWTH,e.PERSIAN,e.KRABBY,e.KINGLER,e.MEW,e.TOTODILE,e.GLIGAR,e.SCIZOR,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SKARMORY,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.METANG,e.METAGROSS,e.REGISTEEL,e.GROUDON,e.PRINPLUP,e.EMPOLEON,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.WEAVILE,e.GLISCOR,e.DIALGA,e.HEATRAN,e.DRILBUR,e.EXCADRILL,e.GARBODOR,e.FERROSEED,e.FERROTHORN,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BRAVIARY,e.DURANT,e.COBALION,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.WIMPOD,e.KOMALA,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.NECROZMA,e.CORVIKNIGHT,e.PERRSERKER,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.URSALUNA,e.SNEASLER,e.PAWMI,e.PAWMO,e.PAWMOT,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.KINGAMBIT,e.IRON_THORNS,e.ROARING_MOON,e.OKIDOGI,e.ARCHALUDON,e.IRON_CROWN,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_STUNFISK,e.HISUI_SNEASEL,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA],[A.SYNTHESIS]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.ROSELIA,e.CACNEA,e.CACTURNE,e.LILEEP,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,[e.WORMADAM,"plant"],e.CHERUBI,e.CHERRIM,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SHAYMIN,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.DHELMISE,e.TAPU_BULU,e.KARTANA,e.GOSSIFLEUR,e.ELDEGOSS,e.ZARUDE,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRUTE_BONNET,e.OGERPON,e.ALOLA_EXEGGUTOR,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[A.HIDDEN_POWER]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.UNOWN,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BURMY,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.RAIN_DANCE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.POLITOED,e.HOPPIP,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.BASCULIN,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.BERGMITE,e.AVALUGG,e.XERNEAS,e.YVELTAL,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.LURANTIS,e.SHIINOTIC,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_FINI,e.XURKITREE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.GREEDENT,e.CORVIKNIGHT,e.CHEWTLE,e.DREDNAW,e.APPLETUN,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.FALINKS,e.PINCURCHIN,e.EISCUE,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.ZAMAZENTA,e.ETERNATUS,e.REGIELEKI,e.WYRDEER,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.NACLI,e.NACLSTACK,e.GARGANACL,e.TADBULB,e.BELLIBOLT,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.SCREAM_TAIL,e.SLITHER_WING,e.IRON_BUNDLE,e.IRON_JUGULIS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.WO_CHIEN,e.CHIEN_PAO,e.WALKING_WAKE,e.OGERPON,e.HYDRAPPLE,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_YAMASK,e.GALAR_STUNFISK,[e.URSHIFU,"rapid-strike"],e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.SUNNY_DAY]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.SUDOWOODO,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.CHERUBI,e.CHERRIM,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.EELEKTROSS,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,[e.LYCANROC,"midday","midnight"],e.MUDBRAY,e.MUDSDALE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.TURTONATOR,e.MIMIKYU,e.DRAMPA,e.DHELMISE,e.HAKAMO_O,e.KOMMO_O,e.TAPU_LELE,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.XURKITREE,e.MAGEARNA,e.BLACEPHALON,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.GREEDENT,e.CORVISQUIRE,e.CORVIKNIGHT,e.GOSSIFLEUR,e.ELDEGOSS,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.FALINKS,e.STONJOURNER,e.DRACOZOLT,e.DRAKLOAK,e.DRAGAPULT,e.ZAMAZENTA,e.ETERNATUS,e.ZARUDE,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.ENAMORUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.BOMBIRDIER,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.WO_CHIEN,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.DIPPLIN,e.OGERPON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_DECIDUEYE,[e.PALDEA_TAUROS,"combat","blaze"],e.BLOODMOON_URSALUNA],[A.CRUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BLASTOISE,e.RATTATA,e.RATICATE,e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.ZUBAT,e.GOLBAT,e.GROWLITHE,e.ARCANINE,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.GYARADOS,e.OMASTAR,e.AERODACTYL,e.SNORLAX,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CROBAT,e.UMBREON,e.GIRAFARIG,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.TEDDIURSA,e.URSARING,e.HOUNDOUR,e.HOUNDOOM,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.POOCHYENA,e.MIGHTYENA,e.EXPLOUD,e.MAWILE,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.CARVANHA,e.SHARPEDO,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.SNORUNT,e.GLALIE,e.WALREIN,e.HUNTAIL,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.BUIZEL,e.FLOATZEL,e.STUNKY,e.SKUNTANK,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CARNIVINE,e.RHYPERIOR,e.YANMEGA,e.GLISCOR,e.FROSLASS,e.HEATRAN,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISAGE,e.PANPOUR,e.SIMIPOUR,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.ZOROARK,e.EELEKTRIK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.CHESNAUGHT,e.LITLEO,e.PYROAR,e.PANCHAM,e.PANGORO,e.TYRUNT,e.TYRANTRUM,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.ROCKRUFF,e.LYCANROC,e.DEWPIDER,e.ARAQUANID,e.SILVALLY,e.BRUXISH,e.SOLGALEO,e.GUZZLORD,e.SKWOVET,e.GREEDENT,e.THIEVUL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ARROKUDA,e.BARRASKEWDA,e.SIZZLIPEDE,e.CENTISKORCH,e.GRIMMSNARL,e.PERRSERKER,e.MORPEKO,e.DRACOVISH,e.ARCTOVISH,e.ZACIAN,e.ZAMAZENTA,e.ZARUDE,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.URSALUNA,e.BASCULEGION,e.OVERQWIL,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.CAPSAKID,e.SCOVILLAIN,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.VELUZA,e.DONDOZO,e.FARIGIRAF,e.SCREAM_TAIL,e.BRUTE_BONNET,e.IRON_JUGULIS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.OKIDOGI,e.GOUGING_FIRE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MEOWTH,e.GALAR_STUNFISK,[e.URSHIFU,"single-strike"],[e.CALYREX,"ice","shadow"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_QWILFISH,e.HISUI_ZOROARK,e.HISUI_AVALUGG,e.BLOODMOON_URSALUNA],[A.PSYCH_UP]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.LICKITUNG,e.CHANSEY,e.TANGELA,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.SNORLAX,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.SUDOWOODO,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.STEELIX,e.SNEASEL,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.SPOINK,e.GRUMPIG,e.SPINDA,e.SWABLU,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.FINNEON,e.LUMINEON,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.TANGROWTH,e.TOGEKISS,e.YANMEGA,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.MIENFOO,e.MIENSHAO,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.SYLVEON,e.CARBINK,e.KLEFKI,e.XERNEAS,e.DIANCIE,e.HOOPA,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.COMFEY,e.ORANGURU,e.GOLISOPOD,e.PYUKUMUKU,e.MINIOR,e.KOMALA,e.MIMIKYU,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.MARSHADOW,e.INDEEDEE,e.RABSCA,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING],[A.SHADOW_BALL]:[e.BUTTERFREE,e.RATTATA,e.RATICATE,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.LICKITUNG,e.KOFFING,e.WEEZING,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.SNORLAX,e.MEWTWO,e.MEW,e.TYPHLOSION,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.AIPOM,e.YANMA,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SNEASEL,e.CORSOLA,e.HOUNDOUR,e.HOUNDOOM,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACTURNE,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.GOREBYSS,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.BIDOOF,e.BIBAREL,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.MUNCHLAX,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.VICTINI,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.WHIMSICOTT,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.VULLABY,e.MANDIBUZZ,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.DELPHOX,e.MEOWSTIC,e.AEGISLASH,e.SKRELP,e.DRAGALGE,e.CLAWITZER,e.SYLVEON,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.DECIDUEYE,e.PRIMARINA,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.SILVALLY,e.MIMIKYU,e.DRAMPA,e.DHELMISE,e.TAPU_LELE,e.TAPU_FINI,e.LUNALA,e.MAGEARNA,e.MARSHADOW,e.BLACEPHALON,e.CINDERACE,e.INTELEON,e.DOTTLER,e.ORBEETLE,e.THIEVUL,e.SINISTEA,e.POLTEAGEIST,e.HATTERENE,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.SPECTRIER,e.WYRDEER,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.MEOWSCARADA,e.SKELEDIRGE,e.ARMAROUGE,e.CERULEDGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.RABSCA,e.ESPATHRA,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.FLUTTER_MANE,e.GIMMIGHOUL,e.GHOLDENGO,e.IRON_VALIANT,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY],[A.FUTURE_SIGHT]:[e.PSYDUCK,e.GOLDUCK,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.MR_MIME,e.JYNX,e.LAPRAS,e.MEWTWO,e.MEW,e.NOCTOWL,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MARILL,e.AZUMARILL,e.ESPEON,e.SLOWKING,e.GIRAFARIG,e.DELIBIRD,e.LUGIA,e.HO_OH,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SPOINK,e.LUNATONE,e.BARBOACH,e.WHISCASH,e.CLAYDOL,e.CASTFORM,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.TOGEKISS,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.DARMANITAN,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.BEHEEYEM,e.DELPHOX,e.INKAY,e.MALAMAR,e.ORANGURU,e.TAPU_LELE,e.SOLGALEO,e.LUNALA,e.NECROZMA,e.DOTTLER,e.ORBEETLE,e.HATTERENE,e.MR_RIME,e.INDEEDEE,e.CALYREX,e.IRON_VALIANT,e.MUNKIDORI,e.IRON_CROWN,[e.MEOWSTIC,"female"],e.ALOLA_RAICHU,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING],[A.ROCK_SMASH]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BEEDRILL,e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.MUK,e.GENGAR,e.ONIX,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.SCYTHER,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.JOLTEON,e.FLAREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEWTWO,e.MEW,e.BAYLEEF,e.MEGANIUM,e.QUILAVA,e.TYPHLOSION,e.CROCONAW,e.FERALIGATR,e.FURRET,e.LEDIAN,e.TOGEPI,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.TYROGUE,e.HITMONTOP,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.GULPIN,e.SWALOT,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.CLAYDOL,e.CRADILY,e.ANORITH,e.ARMALDO,e.KECLEON,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.GASTRODON,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.STUNKY,e.SKUNTANK,e.BRONZONG,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.ZOROARK,e.REUNICLUS,e.SAWSBUCK,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.GOODRA,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.VOLCANION,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.CRABRAWLER,e.CRABOMINABLE,e.MUDBRAY,e.MUDSDALE,e.PASSIMIAN,e.GOLISOPOD,e.TAPU_BULU,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CLOBBOPUS,e.GRAPPLOCT,e.OBSTAGOON,e.SIRFETCHD,e.FALINKS,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.KUBFU,e.URSHIFU,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.ENAMORUS,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.KORAIDON,e.ARCHALUDON,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MAROWAK,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.WHIRLPOOL]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.LICKITUNG,e.RHYDON,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.SNEASEL,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.MILTANK,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.RAMPARDOS,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.GARCHOMP,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.MANTYKE,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.BRUXISH,e.DHELMISE,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.GRAPPLOCT,e.OBSTAGOON,e.CURSOLA,e.EISCUE,e.DRACOVISH,e.ARCTOVISH,e.BASCULEGION,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.WIGLETT,e.WUGTRIO,e.PALAFIN,e.TATSUGIRI,e.IRON_BUNDLE,e.WALKING_WAKE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,[e.URSHIFU,"rapid-strike"],e.HISUI_SAMUROTT,[e.PALDEA_TAUROS,"aqua"]],[A.BEAT_UP]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.KANGASKHAN,e.MEW,e.AIPOM,e.GIRAFARIG,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.VESPIQUEN,e.AMBIPOM,e.WEAVILE,e.COTTONEE,e.WHIMSICOTT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.VANILLUXE,e.PAWNIARD,e.BISHARP,e.DURANT,e.ZWEILOUS,e.HYDREIGON,e.PANGORO,e.BINACLE,e.BARBARACLE,e.WISHIWASHI,e.SALANDIT,e.SALAZZLE,e.PASSIMIAN,e.MIMIKYU,e.NICKIT,e.THIEVUL,e.FALINKS,e.DRAKLOAK,e.DRAGAPULT,e.URSHIFU,e.TANDEMAUS,e.MAUSHOLD,e.BRAMBLIN,e.BRAMBLEGHAST,e.ANNIHILAPE,e.FARIGIRAF,e.KINGAMBIT,e.FEZANDIPITI,e.PIKACHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_PERSIAN],[A.UPROAR]:[e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.FARFETCHD,e.DODUO,e.DODRIO,e.GASTLY,e.HAUNTER,e.GENGAR,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.TAUROS,e.GYARADOS,e.SNORLAX,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.MURKROW,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.TEDDIURSA,e.URSARING,e.HOUNDOUR,e.HOUNDOOM,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.CELEBI,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.WINGULL,e.PELIPPER,e.VIGOROTH,e.SLAKING,e.NINJASK,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.ARON,e.LAIRON,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.ROSELIA,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.SPINDA,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.WHISCASH,e.CHIMECHO,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.KRICKETOT,e.KRICKETUNE,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.WORMADAM,e.VESPIQUEN,e.PACHIRISU,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.MUNCHLAX,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.PORYGON_Z,e.ROTOM,e.AZELF,e.HEATRAN,e.PHIONE,e.MANAPHY,e.VICTINI,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.KLINK,e.KLANG,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.STUNFISK,e.BOUFFALANT,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.MELOETTA,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.FURFROU,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.HOOPA,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.WISHIWASHI,e.PASSIMIAN,e.TURTONATOR,e.BRUXISH,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.POIPOLE,e.NAGANADEL,e.BLACEPHALON,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.YAMPER,e.BOLTUND,e.CRAMORANT,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.MR_RIME,e.FALINKS,e.MORPEKO,e.GLASTRIER,e.SPECTRIER,e.WYRDEER,e.BASCULEGION,e.ENAMORUS,e.LECHONK,e.OINKOLOGNE,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.FLITTLE,e.ESPATHRA,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.KORAIDON,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.HYDRAPPLE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,[e.CALYREX,"ice","shadow"],e.BLOODMOON_URSALUNA],[A.HEAT_WAVE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.VULPIX,e.NINETALES,e.ZUBAT,e.GOLBAT,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.FARFETCHD,e.WEEZING,e.MAGMAR,e.FLAREON,e.AERODACTYL,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.MURKROW,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.SOLROCK,e.SALAMENCE,e.GROUDON,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.HONCHKROW,e.CHATOT,e.MAGMORTAR,e.TOGEKISS,e.HEATRAN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.DARUMAKA,e.DARMANITAN,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.DRUDDIGON,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.SALANDIT,e.SALAZZLE,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.LUNALA,e.GUZZLORD,e.NECROZMA,e.NAGANADEL,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.SIZZLIPEDE,e.CENTISKORCH,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.SQUAWKABILLY,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.BOMBIRDIER,e.SLITHER_WING,e.IRON_JUGULIS,e.IRON_MOTH,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.FEZANDIPITI,e.GOUGING_FIRE,e.ALOLA_MAROWAK,e.GALAR_WEEZING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_BRAVIARY],[A.HAIL]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.JYNX,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.ARTICUNO,e.ZAPDOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.SMOOCHUM,e.BLISSEY,e.SUICUNE,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.AZURILL,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.LUNATONE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.REGICE,e.KYOGRE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.HAPPINY,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.GLACEON,e.MAMOSWINE,e.FROSLASS,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.KYUREM,e.KELDEO,e.SKRELP,e.DRAGALGE,e.AMAURA,e.AURORUS,e.CARBINK,e.GOODRA,e.BERGMITE,e.AVALUGG,e.XERNEAS,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABOMINABLE,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.WIMPOD,e.GOLISOPOD,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.CURSOLA,e.MR_RIME,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,[e.CALYREX,"ice"]],[A.TORMENT]:[e.EKANS,e.ARBOK,e.NIDOQUEEN,e.NIDOKING,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.DODRIO,e.GRIMER,e.MUK,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.KOFFING,e.WEEZING,e.MR_MIME,e.JYNX,e.GYARADOS,e.AERODACTYL,e.MEWTWO,e.MEW,e.CROBAT,e.SUDOWOODO,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.LOUDRED,e.EXPLOUD,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.GLALIE,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.SHIELDON,e.BASTIODON,e.FLOATZEL,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.MIME_JR,e.CHATOT,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.AZELF,e.HEATRAN,e.DARKRAI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.KLEFKI,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.SALANDIT,e.SALAZZLE,e.BRUXISH,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.PHEROMOSA,e.BLACEPHALON,e.NICKIT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.MORPEKO,e.GLASTRIER,e.ENAMORUS,e.SQUAWKABILLY,e.BOMBIRDIER,e.VAROOM,e.KINGAMBIT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,[e.CALYREX,"ice"],e.HISUI_ZORUA,e.HISUI_ZOROARK],[A.WILL_O_WISP]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.VULPIX,e.NINETALES,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.MISDREAVUS,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHEDINJA,e.SABLEYE,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.ALTARIA,e.SOLROCK,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.GROUDON,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.SPIRITOMB,e.MAGMORTAR,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.HEATRAN,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.DARUMAKA,e.DARMANITAN,e.YAMASK,e.COFAGRIGUS,e.FRILLISH,e.JELLICENT,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.MIMIKYU,e.LUNALA,e.MARSHADOW,e.BLACEPHALON,e.CINDERACE,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.CENTISKORCH,e.SINISTEA,e.POLTEAGEIST,e.CURSOLA,e.RUNERIGUS,e.DRAKLOAK,e.DRAGAPULT,e.SPECTRIER,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SCOVILLAIN,e.HOUNDSTONE,e.SLITHER_WING,e.CHI_YU,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_WEEZING,e.GALAR_CORSOLA,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_ZORUA,e.HISUI_ZOROARK,[e.PALDEA_TAUROS,"blaze"]],[A.FACADE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.FOCUS_PUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.MUK,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.LUDICOLO,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BIBAREL,e.RAMPARDOS,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MIME_JR,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.GALLADE,e.DUSKNOIR,e.PALKIA,e.REGIGIGAS,e.DARKRAI,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.REUNICLUS,e.EELEKTROSS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.HEATMOR,e.ZEKROM,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HAWLUCHA,e.GOODRA,e.HOOPA,e.INCINEROAR,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.RILLABOOM,e.GRIMMSNARL,e.MR_RIME,e.KUBFU,e.URSHIFU,e.ZARUDE,e.URSALUNA,e.SNEASLER,e.PAWMO,e.PAWMOT,e.GARGANACL,e.PALAFIN,e.ANNIHILAPE,e.IRON_HANDS,e.GHOLDENGO,e.KORAIDON,e.OKIDOGI,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MUK,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_MR_MIME,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[A.NATURE_POWER]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.KABUTOPS,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.BELLOSSOM,e.SUDOWOODO,e.SUNKERN,e.SUNFLORA,e.STEELIX,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.ROSELIA,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.CACNEA,e.CACTURNE,e.CRAWDAUNT,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.BONSLY,e.CARNIVINE,e.FINNEON,e.TANGROWTH,e.LEAFEON,e.HEATRAN,e.REGIGIGAS,e.SHAYMIN,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.BINACLE,e.BARBARACLE,e.AMAURA,e.AURORUS,e.CARBINK,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.XERNEAS,e.DIANCIE,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.XURKITREE,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.CURSOLA,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_CORSOLA,e.HISUI_TYPHLOSION,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[A.CHARGE]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.ELECTABUZZ,e.JOLTEON,e.ZAPDOS,e.MEW,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.ELEKID,e.RAIKOU,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.ROTOM,e.BLITZLE,e.ZEBSTRIKA,e.EMOLGA,e.KLINK,e.KLANG,e.KLINKLANG,e.TYNAMO,e.EELEKTRIK,e.EELEKTROSS,e.STUNFISK,e.THUNDURUS,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.XURKITREE,e.ZERAORA,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.REGIELEKI,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.SANDY_SHOCKS,e.IRON_HANDS,e.IRON_THORNS,e.MIRAIDON,e.RAGING_BOLT,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[A.TAUNT]:[e.RATTATA,e.RATICATE,e.NIDOQUEEN,e.NIDOKING,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.DODRIO,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.KOFFING,e.WEEZING,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.GYARADOS,e.AERODACTYL,e.MEWTWO,e.MEW,e.CROBAT,e.SUDOWOODO,e.AIPOM,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.GLALIE,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHIELDON,e.BASTIODON,e.VESPIQUEN,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.MIME_JR,e.CHATOT,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.AZELF,e.HEATRAN,e.DARKRAI,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.COTTONEE,e.WHIMSICOTT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.EMOLGA,e.ESCAVALIER,e.FRILLISH,e.JELLICENT,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.ORICORIO,e.ROCKRUFF,e.LYCANROC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.PYUKUMUKU,e.TURTONATOR,e.MIMIKYU,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.BUZZWOLE,e.PHEROMOSA,e.BLACEPHALON,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.TOXTRICITY,e.CLOBBOPUS,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.MORPEKO,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.URSALUNA,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.TANDEMAUS,e.MAUSHOLD,e.SQUAWKABILLY,e.ARMAROUGE,e.CERULEDGE,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.BOMBIRDIER,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.FLAMIGO,e.TATSUGIRI,e.ANNIHILAPE,e.KINGAMBIT,e.GREAT_TUSK,e.BRUTE_BONNET,e.FLUTTER_MANE,e.IRON_BUNDLE,e.IRON_JUGULIS,e.IRON_THORNS,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.IRON_LEAVES,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.RAGING_BOLT,e.IRON_BOULDER,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,[e.CALYREX,"ice","shadow"],e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[A.HELPING_HAND]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.MILOTIC,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.SNORUNT,e.GLALIE,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.MARACTUS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.ALOMOMOLA,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.RUFFLET,e.BRAVIARY,e.DURANT,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.DIANCIE,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.PYUKUMUKU,e.TOGEDEMARU,e.DRAMPA,e.DHELMISE,e.KOMMO_O,e.SOLGALEO,e.LUNALA,e.MAGEARNA,e.POIPOLE,e.NAGANADEL,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.DOTTLER,e.ORBEETLE,e.GOSSIFLEUR,e.ELDEGOSS,e.YAMPER,e.BOLTUND,e.APPLETUN,e.TOXTRICITY,e.HATENNA,e.HATTREM,e.HATTERENE,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.FALINKS,e.FROSMOTH,e.INDEEDEE,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ZARUDE,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_BUNDLE,e.IRON_MOTH,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.IRON_LEAVES,e.MUNKIDORI,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.TRICK]:[e.CLEFAIRY,e.CLEFABLE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.BLISSEY,e.LUGIA,e.CELEBI,e.ZIGZAGOON,e.LINOONE,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHEDINJA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.SPOINK,e.GRUMPIG,e.SPINDA,e.BALTOY,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.TOGEKISS,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.DARMANITAN,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLURK,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.HOOPA,e.CUTIEFLY,e.RIBOMBEE,e.COMFEY,e.ORANGURU,e.SANDYGAST,e.PALOSSAND,e.MIMIKYU,e.TAPU_FINI,e.LUNALA,e.MAGEARNA,e.BLACEPHALON,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.MEOWSCARADA,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.GREAVARD,e.HOUNDSTONE,e.FARIGIRAF,e.SCREAM_TAIL,e.GHOLDENGO,e.IRON_VALIANT,e.MUNKIDORI,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_YAMASK,e.HISUI_ZORUA,e.HISUI_ZOROARK],[A.SUPERPOWER]:[e.NIDOQUEEN,e.NIDOKING,e.ARCANINE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.KRABBY,e.KINGLER,e.HITMONLEE,e.RHYHORN,e.RHYDON,e.PINSIR,e.FLAREON,e.KABUTOPS,e.SNORLAX,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.MARILL,e.AZUMARILL,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.PHANPY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.BRELOOM,e.MAKUHITA,e.HARIYAMA,e.ARON,e.LAIRON,e.AGGRON,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACTURNE,e.CORPHISH,e.CRAWDAUNT,e.ARMALDO,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BIDOOF,e.BIBAREL,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.HONCHKROW,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.RHYPERIOR,e.MAMOSWINE,e.REGIGIGAS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.SAMUROTT,e.STOUTLAND,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.GIGALITH,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SCOLIPEDE,e.BASCULIN,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.CARRACOSTA,e.REUNICLUS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.DIGGERSBY,e.GOGOAT,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.GOODRA,e.AVALUGG,e.ZYGARDE,e.VOLCANION,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.MUDBRAY,e.MUDSDALE,e.LURANTIS,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.KOMALA,e.DRAMPA,e.KOMMO_O,e.TAPU_BULU,e.SOLGALEO,e.BUZZWOLE,e.CELESTEELA,e.MARSHADOW,e.STAKATAKA,e.ZERAORA,e.MELMETAL,e.RILLABOOM,e.GREEDENT,e.DREDNAW,e.APPLETUN,e.CRAMORANT,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.SIRFETCHD,e.FALINKS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.KUBFU,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.ENAMORUS,e.CETODDLE,e.SLITHER_WING,e.OKIDOGI,e.OGERPON,[e.DEOXYS,"attack"],e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,[e.CALYREX,"ice"],e.HISUI_BRAVIARY],[A.RECYCLE]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.CHANSEY,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.SNORLAX,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.IGGLYBUFF,e.SLOWKING,e.GIRAFARIG,e.DELIBIRD,e.PORYGON2,e.SMOOCHUM,e.BLISSEY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.KECLEON,e.CHIMECHO,e.JIRACHI,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.MUNCHLAX,e.MAGNEZONE,e.PORYGON_Z,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.ARCEUS,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.TRUBBISH,e.GARBODOR,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.KLINK,e.KLANG,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.HEATMOR,e.MELOETTA,e.GENESECT,e.BRAIXEN,e.DELPHOX,e.BUNNELBY,e.DIGGERSBY,e.ESPURR,e.MEOWSTIC,e.DEDENNE,e.KLEFKI,e.HOOPA,e.MORELULL,e.SHIINOTIC,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.NECROZMA,e.STAKATAKA,e.BLACEPHALON,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.MR_RIME,e.FARIGIRAF,e.DIPPLIN,e.HYDRAPPLE,e.ALOLA_RAICHU,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MR_MIME,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[A.REVENGE]:[e.RATTATA,e.RATICATE,e.MANKEY,e.PRIMEAPE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.FARFETCHD,e.HITMONLEE,e.HITMONCHAN,e.PINSIR,e.TAUROS,e.MEW,e.AIPOM,e.PINECO,e.FORRETRESS,e.QWILFISH,e.HERACROSS,e.HITMONTOP,e.TYRANITAR,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.MAKUHITA,e.HARIYAMA,e.CACTURNE,e.ZANGOOSE,e.CRAWDAUNT,e.DUSKULL,e.DUSCLOPS,e.STARLY,e.STARAVIA,e.STARAPTOR,e.AMBIPOM,e.VESPIQUEN,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.GALLADE,e.DUSKNOIR,e.REGIGIGAS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.BASCULIN,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.KELDEO,e.PANGORO,e.HAWLUCHA,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.MUDSDALE,e.BEWEAR,e.PASSIMIAN,e.TURTONATOR,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.CINDERACE,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CHEWTLE,e.DREDNAW,e.CLOBBOPUS,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.CURSOLA,e.SIRFETCHD,e.RUNERIGUS,e.FALINKS,e.MORPEKO,e.COPPERAJAH,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ZARUDE,e.BASCULEGION,e.ANNIHILAPE,e.KINGAMBIT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,[e.LYCANROC,"midnight"],e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.HISUI_SAMUROTT,e.GALAR_STUNFISK],[A.BRICK_BREAK]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BEEDRILL,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PARAS,e.PARASECT,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.MUK,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.KABUTOPS,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.TYROGUE,e.HITMONTOP,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.SWALOT,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.KECLEON,e.DUSCLOPS,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.KRICKETUNE,e.RAMPARDOS,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BONSLY,e.MIME_JR,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.GLISCOR,e.GALLADE,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.DARKRAI,e.ARCEUS,e.VICTINI,e.PIGNITE,e.EMBOAR,e.DEWOTT,e.SAMUROTT,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ZOROARK,e.GOTHITELLE,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.ZYGARDE,e.HOOPA,e.VOLCANION,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.CRABRAWLER,e.CRABOMINABLE,e.LYCANROC,e.LURANTIS,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.KOMALA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.PHEROMOSA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.MELMETAL,e.RILLABOOM,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.MR_RIME,e.FALINKS,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ZARUDE,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.MEOWSCARADA,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.PAWMOT,e.GARGANACL,e.CERULEDGE,e.KLAWF,e.TINKATUFF,e.TINKATON,e.ANNIHILAPE,e.KINGAMBIT,e.GREAT_TUSK,e.SLITHER_WING,e.IRON_HANDS,e.IRON_THORNS,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.IRON_LEAVES,e.OKIDOGI,e.OGERPON,e.ARCHALUDON,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[A.KNOCK_OFF]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BEEDRILL,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PARAS,e.PARASECT,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.FARFETCHD,e.DODUO,e.DODRIO,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.LICKITUNG,e.TANGELA,e.GOLDEEN,e.SEAKING,e.SCYTHER,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEWTWO,e.MEW,e.BAYLEEF,e.MEGANIUM,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.MARILL,e.AZUMARILL,e.AIPOM,e.GLIGAR,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.PHANPY,e.DONPHAN,e.ELEKID,e.TYRANITAR,e.BLAZIKEN,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.SABLEYE,e.MAWILE,e.SWALOT,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.KECLEON,e.SHUPPET,e.BANETTE,e.CHIMECHO,e.ABSOL,e.METAGROSS,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.KRICKETUNE,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.WEAVILE,e.LICKILICKY,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.LEAFEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.KROKOROK,e.KROOKODILE,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.REUNICLUS,e.SWANNA,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.ALOMOMOLA,e.FERROSEED,e.FERROTHORN,e.TYNAMO,e.EELEKTRIK,e.EELEKTROSS,e.CRYOGONAL,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.MELOETTA,e.CHESNAUGHT,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.GOODRA,e.TREVENANT,e.YVELTAL,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.KOMALA,e.DHELMISE,e.TAPU_FINI,e.SOLGALEO,e.NIHILEGO,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.BLACEPHALON,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GREEDENT,e.NICKIT,e.SIZZLIPEDE,e.PERRSERKER,e.SIRFETCHD,e.FALINKS,e.MORPEKO,e.COPPERAJAH,e.ZARUDE,e.MEOWSCARADA,e.QUAQUAVAL,e.TAROUNTULA,e.SPIDOPS,e.LOKIX,e.PAWMO,e.PAWMOT,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.CYCLIZAR,e.CETODDLE,e.CETITAN,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_JUGULIS,e.WO_CHIEN,e.ROARING_MOON,e.IRON_VALIANT,e.WALKING_WAKE,e.OKIDOGI,e.OGERPON,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_GOODRA,e.HISUI_DECIDUEYE],[A.ENDEAVOR]:[e.BEEDRILL,e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.DODUO,e.DODRIO,e.DEWGONG,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.TAUROS,e.GYARADOS,e.FLAREON,e.MEW,e.MEGANIUM,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.SUDOWOODO,e.POLITOED,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.DELIBIRD,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.HITMONTOP,e.BLISSEY,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.ARON,e.LAIRON,e.AGGRON,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.NUMEL,e.CAMERUPT,e.SPOINK,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.LUVDISC,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.KRICKETOT,e.KRICKETUNE,e.CRANIDOS,e.RAMPARDOS,e.WORMADAM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.HONCHKROW,e.SKUNTANK,e.HAPPINY,e.RHYPERIOR,e.TANGROWTH,e.TOGEKISS,e.MAMOSWINE,e.AZELF,e.SHAYMIN,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PATRAT,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.BASCULIN,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.MINCCINO,e.CINCCINO,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.DEERLING,e.SAWSBUCK,e.FERROSEED,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.BOUFFALANT,e.DURANT,e.KYUREM,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.XERNEAS,e.DIANCIE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.PASSIMIAN,e.ORANGURU,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.DRAMPA,e.KOMMO_O,e.SOLGALEO,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.FLAPPLE,e.SANDACONDA,e.CRAMORANT,e.TOXEL,e.TOXTRICITY,e.PERRSERKER,e.ALCREMIE,e.FALINKS,e.STONJOURNER,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.BASCULEGION,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.FIDOUGH,e.DACHSBUN,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.PALAFIN,e.REVAVROOM,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.VELUZA,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.IRON_TREADS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_ZAPDOS,e.HISUI_TYPHLOSION,e.PALDEA_TAUROS],[A.SKILL_SWAP]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.STARMIE,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.NATU,e.XATU,e.ESPEON,e.UMBREON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.STANTLER,e.SMOOCHUM,e.BLISSEY,e.LUGIA,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.JIRACHI,e.DEOXYS,e.WORMADAM,e.MOTHIM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MANAPHY,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.INKAY,e.MALAMAR,e.SYLVEON,e.CARBINK,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DIANCIE,e.HOOPA,e.CUTIEFLY,e.RIBOMBEE,e.ORANGURU,e.SANDYGAST,e.PALOSSAND,e.TAPU_LELE,e.MAGEARNA,e.STAKATAKA,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.MEOWSCARADA,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FARIGIRAF,e.IRON_VALIANT,e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.GALAR_YAMASK],[A.IMPRISON]:[e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.TOGETIC,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.STANTLER,e.LUGIA,e.HO_OH,e.CELEBI,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.BALTOY,e.CLAYDOL,e.MILOTIC,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.JIRACHI,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.BRONZOR,e.BRONZONG,e.SPIRITOMB,e.TOGEKISS,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.ARCEUS,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,[e.MEOWSTIC,"male"],e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DECIDUEYE,e.CUTIEFLY,e.RIBOMBEE,e.ORANGURU,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.NECROZMA,e.MAGEARNA,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MORGREM,e.GRIMMSNARL,e.RUNERIGUS,e.ALCREMIE,e.FROSMOTH,e.STONJOURNER,e.INDEEDEE,e.ZACIAN,e.ZAMAZENTA,e.CALYREX,e.WYRDEER,e.ENAMORUS,e.SKELEDIRGE,e.RABSCA,e.FARIGIRAF,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.IRON_LEAVES,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.PECHARUNT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_ARTICUNO,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_YAMASK,e.HISUI_ZORUA,e.HISUI_ZOROARK],[A.SECRET_POWER]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.DIVE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTOPS,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.SUICUNE,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.FINNEON,e.LUMINEON,e.MANTYKE,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.BEARTIC,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.ARAQUANID,e.GOLISOPOD,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.CLOBBOPUS,e.GRAPPLOCT,e.EISCUE,e.DRACOVISH,e.ARCTOVISH,e.DRAKLOAK,e.DRAGAPULT,e.FINIZEN,e.PALAFIN,e.DONDOZO,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,[e.URSHIFU,"rapid-strike"]],[A.FEATHER_DANCE]:[e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.FARFETCHD,e.DODUO,e.DODRIO,e.ARTICUNO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.NATU,e.XATU,e.MURKROW,e.DELIBIRD,e.LUGIA,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.WINGULL,e.PELIPPER,e.SWABLU,e.ALTARIA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.HONCHKROW,e.CHATOT,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.DUCKLETT,e.SWANNA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HAWLUCHA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.CRAMORANT,e.FROSMOTH,e.EISCUE,e.QUAXWELL,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.ESPATHRA,e.BOMBIRDIER,e.FLAMIGO,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[A.BLAZE_KICK]:[e.CHARIZARD,e.HITMONLEE,e.MEW,e.COMBUSKEN,e.BLAZIKEN,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.RIOLU,e.LUCARIO,e.VICTINI,e.MIENSHAO,e.GENESECT,e.INCINEROAR,e.MARSHADOW,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.GALAR_ZAPDOS],[A.HYPER_VOICE]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.ARCANINE,e.CHANSEY,e.JYNX,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEW,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.POLITOED,e.ESPEON,e.UMBREON,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.BLISSEY,e.LUGIA,e.HO_OH,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.MANECTRIC,e.WAILMER,e.WAILORD,e.GRUMPIG,e.SPINDA,e.SWABLU,e.ALTARIA,e.CHIMECHO,e.BAGON,e.SHELGON,e.SALAMENCE,e.RAYQUAZA,e.TORTERRA,e.KRICKETUNE,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.HAPPINY,e.CHATOT,e.MUNCHLAX,e.HIPPOWDON,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.ROTOM,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.AUDINO,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.MARACTUS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.DELPHOX,e.LITLEO,e.PYROAR,e.PANCHAM,e.PANGORO,e.FURFROU,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ROCKRUFF,e.LYCANROC,e.SALAZZLE,e.ORANGURU,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.KOMMO_O,e.TAPU_KOKO,e.SOLGALEO,e.NECROZMA,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.GOSSIFLEUR,e.ELDEGOSS,e.BOLTUND,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.INDEEDEE,e.ARCTOZOLT,e.ZACIAN,e.ZAMAZENTA,e.ZARUDE,e.URSALUNA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.TANDEMAUS,e.MAUSHOLD,e.ARBOLIVA,e.SQUAWKABILLY,e.TADBULB,e.BELLIBOLT,e.MABOSSTIFF,e.ESPATHRA,e.BOMBIRDIER,e.PALAFIN,e.CYCLIZAR,e.CETODDLE,e.CETITAN,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_JUGULIS,e.ROARING_MOON,e.IRON_VALIANT,e.RAGING_BOLT,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_ARTICUNO,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_ARCANINE,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA],[A.BLAST_BURN]:[e.CHARIZARD,e.MEW,e.TYPHLOSION,e.BLAZIKEN,e.INFERNAPE,e.EMBOAR,e.DELPHOX,e.INCINEROAR,e.CINDERACE,e.SKELEDIRGE,e.HISUI_TYPHLOSION],[A.HYDRO_CANNON]:[e.BLASTOISE,e.MEW,e.FERALIGATR,e.SWAMPERT,e.EMPOLEON,e.SAMUROTT,e.GRENINJA,e.PRIMARINA,e.INTELEON,e.QUAQUAVAL,e.HISUI_SAMUROTT],[A.WEATHER_BALL]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.VULPIX,e.NINETALES,e.VILEPLUME,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.CLOYSTER,e.HORSEA,e.SEADRA,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.BELLOSSOM,e.POLITOED,e.SUNKERN,e.SUNFLORA,e.ESPEON,e.UMBREON,e.SLOWKING,e.DELIBIRD,e.KINGDRA,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.SWAMPERT,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.PELIPPER,e.MASQUERAIN,e.ROSELIA,e.WAILMER,e.WAILORD,e.TORKOAL,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.WHISCASH,e.MILOTIC,e.CASTFORM,e.SNORUNT,e.GLALIE,e.LATIAS,e.LATIOS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUDEW,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.BRONZONG,e.HIPPOPOTAS,e.HIPPOWDON,e.SNOVER,e.ABOMASNOW,e.ELECTIVIRE,e.MAGMORTAR,e.LEAFEON,e.GLACEON,e.FROSLASS,e.PHIONE,e.MANAPHY,e.GIGALITH,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.LILLIGANT,e.MARACTUS,e.SWANNA,e.VANILLUXE,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.GRENINJA,e.VIVILLON,e.CLAUNCHER,e.CLAWITZER,e.HELIOLISK,e.AMAURA,e.AURORUS,e.SYLVEON,e.GOODRA,e.VOLCANION,e.PRIMARINA,e.FOMANTIS,e.LURANTIS,e.SHIINOTIC,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.ELDEGOSS,e.CRAMORANT,e.FROSMOTH,e.EISCUE,e.ENAMORUS,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.ARMAROUGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.RELLOR,e.RABSCA,e.WALKING_WAKE,e.GOUGING_FIRE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.HISUI_LILLIGANT,e.HISUI_GOODRA],[A.FAKE_TEARS]:[e.PIKACHU,e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.JYNX,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEW,e.TOTODILE,e.CLEFFA,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.ESPEON,e.UMBREON,e.MISDREAVUS,e.SNUBBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SMOOCHUM,e.SHROOMISH,e.BRELOOM,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.MAWILE,e.PLUSLE,e.MINUN,e.ILLUMISE,e.SPINDA,e.CHIMECHO,e.SNORUNT,e.GLALIE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.GLAMEOW,e.BONSLY,e.WEAVILE,e.LEAFEON,e.GLACEON,e.FROSLASS,e.PURRLOIN,e.LIEPARD,e.WOOBAT,e.SWOOBAT,e.COTTONEE,e.WHIMSICOTT,e.SCRAGGY,e.SCRAFTY,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.DEERLING,e.SAWSBUCK,e.VULLABY,e.MANDIBUZZ,e.MELOETTA,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.SYLVEON,e.DIANCIE,e.CUTIEFLY,e.RIBOMBEE,e.SALAZZLE,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.MORPEKO,e.URSALUNA,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.TANDEMAUS,e.MAUSHOLD,e.SQUAWKABILLY,e.MASCHIFF,e.MABOSSTIFF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.SCREAM_TAIL,e.FLUTTER_MANE,e.PECHARUNT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_YAMASK,e.HISUI_ZORUA,e.HISUI_ZOROARK],[A.AIR_CUTTER]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.FARFETCHD,e.DODUO,e.DODRIO,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.YANMA,e.MURKROW,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.LUGIA,e.HO_OH,e.BEAUTIFLY,e.DUSTOX,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.DRIFLOON,e.DRIFBLIM,e.HONCHKROW,e.CHATOT,e.FINNEON,e.LUMINEON,e.MANTYKE,e.TOGEKISS,e.YANMEGA,e.GIRATINA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.DUCKLETT,e.SWANNA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.VOLCARONA,e.TORNADUS,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.NOIBAT,e.NOIVERN,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.KARTANA,e.NAGANADEL,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.KLEAVOR,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.IRON_BUNDLE,e.IRON_JUGULIS,e.FEZANDIPITI,e.SHAYMIN,e.GALAR_ARTICUNO,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[A.OVERHEAT]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.VULPIX,e.NINETALES,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SNUBBULL,e.GRANBULL,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.LOUDRED,e.EXPLOUD,e.MANECTRIC,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SOLROCK,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.MAGMORTAR,e.DIALGA,e.HEATRAN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.ZEBSTRIKA,e.DARUMAKA,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.TOUCANNON,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.CENTISKORCH,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SCOVILLAIN,e.REVAVROOM,e.CYCLIZAR,e.ANNIHILAPE,e.IRON_MOTH,e.CHI_YU,e.KORAIDON,e.MIRAIDON,e.GOUGING_FIRE,[e.ROTOM,"heat"],e.GALAR_WEEZING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,[e.PALDEA_TAUROS,"blaze"]],[A.ROCK_TOMB]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.ONIX,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.PINSIR,e.TAUROS,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.MANTINE,e.SKARMORY,e.PHANPY,e.DONPHAN,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.KECLEON,e.DUSCLOPS,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.HUNTAIL,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.DARKRAI,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.HYDREIGON,e.TERRAKION,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.BINACLE,e.BARBARACLE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.CARBINK,e.BERGMITE,e.AVALUGG,e.DIANCIE,e.HOOPA,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.KOMALA,e.TURTONATOR,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.SOLGALEO,e.NIHILEGO,e.BUZZWOLE,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.STAKATAKA,e.MELMETAL,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.FALINKS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.URSHIFU,e.ZARUDE,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.SPIDOPS,e.PAWMOT,e.GARGANACL,e.KLAWF,e.RELLOR,e.RABSCA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_TREADS,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.TING_LU,e.OKIDOGI,e.OGERPON,e.ARCHALUDON,e.IRON_BOULDER,[e.WORMADAM,"sandy"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_CORSOLA,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.METAL_SOUND]:[e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.ELECTABUZZ,e.JOLTEON,e.KABUTO,e.KABUTOPS,e.ZAPDOS,e.MEW,e.FORRETRESS,e.SKARMORY,e.ELEKID,e.ARON,e.LAIRON,e.AGGRON,e.REGISTEEL,e.JIRACHI,e.EMPOLEON,e.SHIELDON,e.BASTIODON,[e.WORMADAM,"trash"],e.BRONZOR,e.BRONZONG,e.LUCARIO,e.MAGNEZONE,e.ELECTIVIRE,e.PROBOPASS,e.DIALGA,e.HEATRAN,e.DRILBUR,e.EXCADRILL,e.KLINK,e.KLANG,e.KLINKLANG,e.PAWNIARD,e.BISHARP,e.DURANT,e.COBALION,e.GENESECT,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.KLEFKI,e.TYPE_NULL,e.SILVALLY,e.DHELMISE,e.KOMMO_O,e.SOLGALEO,e.CELESTEELA,e.MAGEARNA,e.CORVIKNIGHT,e.TOXEL,e.TOXTRICITY,e.PERRSERKER,e.DURALUDON,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.KINGAMBIT,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_JUGULIS,e.IRON_MOTH,e.GHOLDENGO,e.MIRAIDON,e.IRON_LEAVES,e.ARCHALUDON,e.IRON_CROWN,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.GALAR_MEOWTH,e.GALAR_STUNFISK],[A.COSMIC_POWER]:[e.CLEFAIRY,e.CLEFABLE,e.STARYU,e.STARMIE,e.MEW,e.NATU,e.XATU,e.SKITTY,e.DELCATTY,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.CASTFORM,e.CHIMECHO,e.METANG,e.METAGROSS,e.RAYQUAZA,e.JIRACHI,[e.DEOXYS,"","attack"],e.BUNEARY,e.LOPUNNY,e.CHINGLING,e.ARCEUS,e.SIGILYPH,e.GOTHITELLE,e.ELGYEM,e.BEHEEYEM,e.MINIOR,e.COSMOEM,e.SOLGALEO,e.LUNALA,e.NECROZMA,e.ETERNATUS,e.RELLOR,e.RABSCA],[A.SIGNAL_BEAM]:[e.BLASTOISE,e.BUTTERFREE,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.SEEL,e.DEWGONG,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.LAPRAS,e.VAPOREON,e.JOLTEON,e.PORYGON,e.ARTICUNO,e.ZAPDOS,e.MEWTWO,e.MEW,e.SPINARAK,e.ARIADOS,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.YANMA,e.ESPEON,e.SLOWKING,e.GIRAFARIG,e.FORRETRESS,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.ELEKID,e.RAIKOU,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.BEAUTIFLY,e.DUSTOX,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.SPOINK,e.GRUMPIG,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.CHIMECHO,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.GOREBYSS,e.METANG,e.METAGROSS,e.REGICE,e.KYOGRE,e.JIRACHI,e.DEOXYS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.SHINX,e.LUXIO,e.LUXRAY,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.FINNEON,e.LUMINEON,e.MANTYKE,e.MAGNEZONE,e.ELECTIVIRE,e.TOGEKISS,e.YANMEGA,e.GLACEON,e.PORYGON_Z,e.GALLADE,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.VICTINI,e.WATCHOG,e.MUNNA,e.MUSHARNA,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.GOLETT,e.GOLURK,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.ZEKROM,e.KYUREM,e.MELOETTA,e.GENESECT,e.DELPHOX,e.VIVILLON,e.ESPURR,e.MEOWSTIC,e.MALAMAR,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.HOOPA,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.TYPE_NULL,e.SILVALLY,e.BRUXISH,e.DRAMPA,e.LUNALA,e.PHEROMOSA,e.XURKITREE,e.NECROZMA,e.MAGEARNA,e.POIPOLE,e.NAGANADEL,e.WYRDEER,e.FARIGIRAF,e.ALOLA_RAICHU],[A.SAND_TOMB]:[e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.ONIX,e.MEW,e.SUDOWOODO,e.PINECO,e.FORRETRESS,e.GLIGAR,e.STEELIX,e.SCIZOR,e.SHUCKLE,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.SKARMORY,e.PHANPY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.MARSHTOMP,e.SWAMPERT,e.NOSEPASS,e.LAIRON,e.AGGRON,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.LUNATONE,e.SOLROCK,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.REGIROCK,e.REGISTEEL,e.GROUDON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.GASTRODON,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.GLISCOR,e.MAMOSWINE,e.PROBOPASS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.LANDORUS,e.DIGGERSBY,e.CARBINK,e.DIANCIE,e.MUDBRAY,e.MUDSDALE,e.SANDYGAST,e.PALOSSAND,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.RUNERIGUS,e.STONJOURNER,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.SANDY_SHOCKS,e.IRON_THORNS,e.TING_LU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO],[A.MUDDY_WATER]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWBRO,e.SEEL,e.DEWGONG,e.LICKITUNG,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.KINGDRA,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.AZURILL,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CLAMPERL,e.RELICANTH,e.KYOGRE,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.HIPPOPOTAS,e.HIPPOWDON,e.LICKILICKY,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.JELLICENT,e.STUNFISK,e.KELDEO,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOOMY,e.SLIGGOO,e.GOODRA,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.GOLISOPOD,e.DHELMISE,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.DREDNAW,e.CLOBBOPUS,e.GRAPPLOCT,e.PINCURCHIN,e.BASCULEGION,e.TADBULB,e.BELLIBOLT,e.WIGLETT,e.WUGTRIO,e.TATSUGIRI,e.CLODSIRE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_STUNFISK,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[A.BULLET_SEED]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.HERACROSS,e.REMORAID,e.OCTILLERY,e.MANTINE,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.ROSELIA,e.GULPIN,e.SWALOT,e.CACNEA,e.CACTURNE,e.LILEEP,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SHAYMIN,e.ARCEUS,e.PATRAT,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.SKIDDO,e.GOGOAT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.FOMANTIS,e.LURANTIS,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.TAPU_BULU,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.MORPEKO,e.ZARUDE,e.CALYREX,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.TANDEMAUS,e.MAUSHOLD,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.BRUTE_BONNET,e.WO_CHIEN,e.DIPPLIN,e.OGERPON,e.HYDRAPPLE,[e.WORMADAM,"plant"],e.ALOLA_EXEGGUTOR,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[A.AERIAL_ACE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.ZUBAT,e.GOLBAT,e.PARAS,e.PARASECT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.SLOWBRO,e.FARFETCHD,e.DODUO,e.DODRIO,e.CUBONE,e.MAROWAK,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.PORYGON,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.YANMA,e.MURKROW,e.MISDREAVUS,e.GLIGAR,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.PORYGON2,e.HITMONTOP,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.BEAUTIFLY,e.DUSTOX,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.FLYGON,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.KECLEON,e.TROPIUS,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGISTEEL,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.KRICKETUNE,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHATOT,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.MANTYKE,e.WEAVILE,e.TANGROWTH,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLISCOR,e.PORYGON_Z,e.GALLADE,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.LEAVANNY,e.KROKOROK,e.KROOKODILE,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.KELDEO,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.GOGOAT,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.DEDENNE,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.LURANTIS,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.BRUXISH,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.LUNALA,e.KARTANA,e.NECROZMA,e.NAGANADEL,e.ZERAORA,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.FLAPPLE,e.CRAMORANT,e.DRACOZOLT,e.KUBFU,e.URSHIFU,e.ZARUDE,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.FLORAGATO,e.MEOWSCARADA,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.TANDEMAUS,e.MAUSHOLD,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.ESPATHRA,e.BOMBIRDIER,e.CYCLIZAR,e.FLAMIGO,e.KINGAMBIT,e.SLITHER_WING,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.ROARING_MOON,e.IRON_VALIANT,e.IRON_LEAVES,e.FEZANDIPITI,e.IRON_BOULDER,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[A.ICICLE_SPEAR]:[e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.JYNX,e.LAPRAS,e.ARTICUNO,e.MEW,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.DELIBIRD,e.SNORUNT,e.GLALIE,e.SEALEO,e.WALREIN,e.REGICE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.GLACEON,e.MAMOSWINE,e.FROSLASS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.KYUREM,e.AURORUS,e.BERGMITE,e.AVALUGG,e.INTELEON,e.CURSOLA,e.MR_RIME,e.SNOM,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.CETODDLE,e.CETITAN,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.GALAR_MR_MIME,e.GALAR_CORSOLA,[e.CALYREX,"ice"],e.HISUI_AVALUGG],[A.IRON_DEFENSE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.METAPOD,e.BUTTERFREE,e.KAKUNA,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.RHYDON,e.MR_MIME,e.PINSIR,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEW,e.SUDOWOODO,e.SLOWKING,e.PINECO,e.FORRETRESS,e.STEELIX,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.SKARMORY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.SILCOON,e.CASCOON,e.NOSEPASS,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.TORKOAL,e.SOLROCK,e.CORPHISH,e.CRAWDAUNT,e.CLAYDOL,e.ANORITH,e.ARMALDO,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.BELDUM,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.JIRACHI,e.TORTERRA,e.EMPOLEON,e.SHIELDON,e.BASTIODON,e.BRONZOR,e.BRONZONG,e.RIOLU,e.LUCARIO,e.DRAPION,e.MAGNEZONE,e.RHYPERIOR,e.PROBOPASS,e.DIALGA,e.HEATRAN,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.KARRABLAST,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.CRYOGONAL,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.DURANT,e.COBALION,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.SPEWPA,e.VIVILLON,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.KLEFKI,e.BERGMITE,e.AVALUGG,e.DIANCIE,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.TURTONATOR,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.MELTAN,e.MELMETAL,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SANDACONDA,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.FALINKS,e.STONJOURNER,e.EISCUE,e.CUFANT,e.COPPERAJAH,e.ARCTOVISH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.URSHIFU,e.GLASTRIER,e.ENAMORUS,e.NACLI,e.NACLSTACK,e.GARGANACL,e.ARMAROUGE,e.CERULEDGE,e.KLAWF,e.RELLOR,e.RABSCA,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.KINGAMBIT,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.IRON_LEAVES,e.POLTCHAGEIST,e.SINISTCHA,e.ARCHALUDON,e.IRON_CROWN,[e.DEOXYS,"defense"],[e.WORMADAM,"trash"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,[e.CALYREX,"ice"],e.HISUI_AVALUGG],[A.DRAGON_CLAW]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.AERODACTYL,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.TYRANITAR,e.SCEPTILE,e.AGGRON,e.FLYGON,e.ALTARIA,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.GIBLE,e.GABITE,e.GARCHOMP,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.CHESNAUGHT,e.PANGORO,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.GOODRA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.SALANDIT,e.SALAZZLE,e.BEWEAR,e.TYPE_NULL,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.GUZZLORD,e.NAGANADEL,e.DRACOZOLT,e.DURALUDON,e.DRAGAPULT,e.REGIDRAGO,e.CERULEDGE,e.CYCLIZAR,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.ARCHALUDON,e.GOUGING_FIRE,e.HISUI_GOODRA],[A.FRENZY_PLANT]:[e.VENUSAUR,e.MEW,e.MEGANIUM,e.SCEPTILE,e.TORTERRA,e.SERPERIOR,e.CHESNAUGHT,e.DECIDUEYE,e.RILLABOOM,e.MEOWSCARADA,e.HISUI_DECIDUEYE],[A.BULK_UP]:[e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.HITMONLEE,e.HITMONCHAN,e.ELECTABUZZ,e.PINSIR,e.MEWTWO,e.MEW,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.TYROGUE,e.HITMONTOP,e.COMBUSKEN,e.BLAZIKEN,e.SWAMPERT,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BUIZEL,e.FLOATZEL,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.ELECTIVIRE,e.GALLADE,e.DIALGA,e.PALKIA,e.ARCEUS,e.PIGNITE,e.EMBOAR,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.KROOKODILE,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.EELEKTROSS,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.RUFFLET,e.BRAVIARY,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.TALONFLAME,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.BARBARACLE,e.HAWLUCHA,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.LYCANROC,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.GOLISOPOD,e.KOMALA,e.TURTONATOR,e.MIMIKYU,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.RILLABOOM,e.RABOOT,e.CINDERACE,e.CORVIKNIGHT,e.BOLTUND,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.OBSTAGOON,e.FALINKS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.URSALUNA,e.SNEASLER,e.QUAQUAVAL,e.PAWMOT,e.CERULEDGE,e.PALAFIN,e.FLAMIGO,e.ANNIHILAPE,e.GREAT_TUSK,e.SCREAM_TAIL,e.SLITHER_WING,e.KORAIDON,e.OKIDOGI,e.ALOLA_RATICATE,e.GALAR_ZAPDOS,e.GALAR_DARMANITAN,e.HISUI_SNEASEL,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS],[A.BOUNCE]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PONYTA,e.RAPIDASH,e.HITMONLEE,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.MAGIKARP,e.GYARADOS,e.MEW,e.SPINARAK,e.ARIADOS,e.CHINCHOU,e.LANTURN,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.DONPHAN,e.STANTLER,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.AZURILL,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.SPOINK,e.GRUMPIG,e.BARBOACH,e.WHISCASH,e.ABSOL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.MANTYKE,e.PHIONE,e.MANAPHY,e.VICTINI,e.BLITZLE,e.ZEBSTRIKA,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.MARACTUS,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.DEERLING,e.SAWSBUCK,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.COBALION,e.VIRIZION,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.PYROAR,e.GOGOAT,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HAWLUCHA,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.TOGEDEMARU,e.BUZZWOLE,e.PHEROMOSA,e.MARSHADOW,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.DUBWOOL,e.ARROKUDA,e.BARRASKEWDA,e.REGIELEKI,e.LOKIX,e.FINIZEN,e.CETODDLE,e.CETITAN,e.CHI_YU,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_ZAPDOS,e.GALAR_STUNFISK],[A.MUD_SHOT]:[e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.RHYHORN,e.RHYDON,e.GOLDEEN,e.SEAKING,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEW,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.GLIGAR,e.QWILFISH,e.SHUCKLE,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.REMORAID,e.OCTILLERY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.SURSKIT,e.MASQUERAIN,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.SABLEYE,e.GULPIN,e.SWALOT,e.NUMEL,e.CAMERUPT,e.GRUMPIG,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.RELICANTH,e.GROUDON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.PACHIRISU,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.CROAGUNK,e.TOXICROAK,e.RHYPERIOR,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.DRILBUR,e.EXCADRILL,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.TIRTOUGA,e.CARRACOSTA,e.CUBCHOO,e.BEARTIC,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.BOUFFALANT,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.SKIDDO,e.GOGOAT,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.GOOMY,e.SLIGGOO,e.GOODRA,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDSDALE,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.NICKIT,e.THIEVUL,e.CHEWTLE,e.DREDNAW,e.SILICOBRA,e.SANDACONDA,e.CLOBBOPUS,e.GRAPPLOCT,e.OBSTAGOON,e.CUFANT,e.COPPERAJAH,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.BASCULEGION,e.OVERQWIL,e.LECHONK,e.OINKOLOGNE,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.NACLI,e.NACLSTACK,e.GARGANACL,e.TADBULB,e.BELLIBOLT,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.RELLOR,e.RABSCA,e.WIGLETT,e.WUGTRIO,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.SANDY_SHOCKS,e.IRON_TREADS,e.WO_CHIEN,e.TING_LU,e.KORAIDON,e.WALKING_WAKE,e.PIKACHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_STUNFISK,e.HISUI_QWILFISH,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.POISON_TAIL]:[e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORAN_M,e.MEW,e.DUNSPARCE,e.GLIGAR,e.QWILFISH,e.SEVIPER,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.GLISCOR,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.DRUDDIGON,e.SKRELP,e.DRAGALGE,e.GOOMY,e.GOODRA,e.SALANDIT,e.SALAZZLE,e.SILICOBRA,e.SANDACONDA,e.TOXTRICITY,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.GRAFAIAI,e.CLODSIRE,e.DUDUNSPARCE,e.OKIDOGI,e.FEZANDIPITI,e.PIKACHU,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.PALDEA_WOOPER],[A.COVET]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.FARFETCHD,e.HITMONLEE,e.HITMONCHAN,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.AIPOM,e.ESPEON,e.UMBREON,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.TEDDIURSA,e.URSARING,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.BLISSEY,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.AZURILL,e.SKITTY,e.DELCATTY,e.PLUSLE,e.MINUN,e.ILLUMISE,e.ROSELIA,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LATIAS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.BUDEW,e.ROSERADE,e.PACHIRISU,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.BONSLY,e.MIME_JR,e.HAPPINY,e.MUNCHLAX,e.ELECTIVIRE,e.MAGMORTAR,e.LICKILICKY,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.PHIONE,e.MANAPHY,e.SHAYMIN,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANPOUR,e.SIMIPOUR,e.PANSEAR,e.SIMISEAR,e.AUDINO,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.EMOLGA,e.CUBCHOO,e.BEARTIC,e.KELDEO,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLABEBE,e.FLOETTE,e.FLORGES,e.PANCHAM,e.PANGORO,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.SYLVEON,e.DEDENNE,e.CARBINK,e.KLEFKI,e.DIANCIE,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.TOGEDEMARU,e.MIMIKYU,e.POIPOLE,e.GREEDENT,e.PERRSERKER,e.SIRFETCHD,e.MR_RIME,e.URSALUNA,e.LECHONK,e.OINKOLOGNE,e.FIDOUGH,e.DACHSBUN,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.ANNIHILAPE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_FARFETCHD,e.GALAR_MR_MIME,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE,e.ETERNAL_FLOETTE],[A.MAGICAL_LEAF]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGUTOR,e.MR_MIME,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CLEFFA,e.TOGETIC,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.ESPEON,e.MISDREAVUS,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.ROSELIA,e.CACNEA,e.CACTURNE,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.MISMAGIUS,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TOGEKISS,e.LEAFEON,e.GALLADE,e.SHAYMIN,e.ARCEUS,e.SNIVY,e.PANSAGE,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.SYLVEON,e.PHANTUMP,e.TREVENANT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.CUTIEFLY,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.ALCREMIE,e.INDEEDEE,e.ZARUDE,e.CALYREX,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.BRUTE_BONNET,e.FLUTTER_MANE,e.WO_CHIEN,e.IRON_VALIANT,e.IRON_LEAVES,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.HYDRAPPLE,[e.MEOWSTIC,"female"],e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[A.CALM_MIND]:[e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.CHANSEY,e.MR_MIME,e.JYNX,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.NATU,e.XATU,e.SUDOWOODO,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.SNEASEL,e.CORSOLA,e.STANTLER,e.SMOOCHUM,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.RELICANTH,e.LATIAS,e.LATIOS,e.KYOGRE,e.JIRACHI,e.DEOXYS,e.INFERNAPE,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.SPIRITOMB,e.LUCARIO,e.WEAVILE,e.LEAFEON,e.GLACEON,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.MIENFOO,e.MIENSHAO,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.LANDORUS,e.KELDEO,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.AMAURA,e.AURORUS,e.SYLVEON,e.CARBINK,e.KLEFKI,e.TREVENANT,e.XERNEAS,e.DIANCIE,e.HOOPA,e.PRIMARINA,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.COMFEY,e.ORANGURU,e.MINIOR,e.KOMALA,e.BRUXISH,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.XURKITREE,e.KARTANA,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.BLACEPHALON,e.ZERAORA,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.FROSMOTH,e.INDEEDEE,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.SNEASLER,e.ENAMORUS,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.MIRAIDON,e.IRON_LEAVES,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.FEZANDIPITI,e.RAGING_BOLT,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_YAMASK,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA],[A.LEAF_BLADE]:[e.VICTREEBEL,e.FARFETCHD,e.MEW,e.BELLOSSOM,e.CELEBI,e.GROVYLE,e.SCEPTILE,e.NUZLEAF,e.SHIFTRY,e.TROPIUS,e.LEAFEON,e.GALLADE,e.SNIVY,e.SERVINE,e.SERPERIOR,e.LEAVANNY,e.LILLIGANT,e.VIRIZION,e.SKIDDO,e.GOGOAT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.KARTANA,e.SIRFETCHD,e.IRON_VALIANT,e.IRON_LEAVES,e.GALAR_FARFETCHD,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[A.DRAGON_DANCE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.ONIX,e.HORSEA,e.SEADRA,e.GYARADOS,e.LAPRAS,e.AERODACTYL,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.STEELIX,e.KINGDRA,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.SCEPTILE,e.FLYGON,e.ALTARIA,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.MILOTIC,e.TROPIUS,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.ARCEUS,e.SCRAGGY,e.SCRAFTY,e.AXEW,e.FRAXURE,e.HAXORUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.TYRUNT,e.TYRANTRUM,e.NOIVERN,e.ZYGARDE,e.SALAZZLE,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.NECROZMA,e.NAGANADEL,e.FLAPPLE,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.REGIDRAGO,e.TATSUGIRI,e.IRON_THORNS,e.BAXCALIBUR,e.ROARING_MOON,e.WALKING_WAKE,e.GOUGING_FIRE],[A.ROCK_BLAST]:[e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SHELLDER,e.CLOYSTER,e.ONIX,e.RHYHORN,e.RHYDON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEW,e.SUDOWOODO,e.PINECO,e.FORRETRESS,e.STEELIX,e.SHUCKLE,e.HERACROSS,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.NOSEPASS,e.LAIRON,e.AGGRON,e.LUNATONE,e.SOLROCK,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.RELICANTH,e.REGIROCK,e.GROUDON,e.TORTERRA,e.SHIELDON,e.BASTIODON,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.RHYPERIOR,e.MAMOSWINE,e.PROBOPASS,e.HEATRAN,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.EXCADRILL,e.CONKELDURR,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.CINCCINO,e.TERRAKION,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.TRUMBEAK,e.TOUCANNON,e.LYCANROC,e.MINIOR,e.NECROZMA,e.STAKATAKA,e.BLACEPHALON,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.KLEAVOR,e.GARGANACL,e.KLAWF,e.BOMBIRDIER,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.IRON_THORNS,e.IRON_BOULDER,[e.WORMADAM,"sandy"],e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.GALAR_SLOWBRO,e.GALAR_CORSOLA,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_AVALUGG],[A.WATER_PULSE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.LICKITUNG,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.JYNX,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.ARTICUNO,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SNEASEL,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.CELEBI,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.SPINDA,e.ZANGOOSE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.HAPPINY,e.SPIRITOMB,e.MUNCHLAX,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.TOGEKISS,e.GLACEON,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.STUNFISK,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.GOOMY,e.SLIGGOO,e.GOODRA,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.VOLCANION,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.BRUXISH,e.DRAMPA,e.KOMMO_O,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.EISCUE,e.BASCULEGION,e.QUAXWELL,e.QUAQUAVAL,e.TANDEMAUS,e.MAUSHOLD,e.TADBULB,e.BELLIBOLT,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.CLODSIRE,e.SCREAM_TAIL,e.IRON_BUNDLE,e.WALKING_WAKE,e.TERAPAGOS,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_SLIGGOO,e.HISUI_GOODRA,[e.PALDEA_TAUROS,"aqua"],e.PALDEA_WOOPER],[A.ROOST]:[e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.FARFETCHD,e.DODUO,e.DODRIO,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.YANMA,e.MURKROW,e.DUNSPARCE,e.GLIGAR,e.SCIZOR,e.MANTINE,e.SKARMORY,e.LUGIA,e.HO_OH,e.BEAUTIFLY,e.DUSTOX,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.VESPIQUEN,e.HONCHKROW,e.CHATOT,e.TOGEKISS,e.YANMEGA,e.GLISCOR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.VIKAVOLT,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.DRAMPA,e.TAPU_KOKO,e.LUNALA,e.BUZZWOLE,e.PHEROMOSA,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.KLEAVOR,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.FLITTLE,e.ESPATHRA,e.BOMBIRDIER,e.FLAMIGO,e.DUDUNSPARCE,e.ROARING_MOON,e.FEZANDIPITI,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[A.GRAVITY]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MAGNEMITE,e.MAGNETON,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.STARYU,e.STARMIE,e.PORYGON,e.MEWTWO,e.MEW,e.CLEFFA,e.IGGLYBUFF,e.ESPEON,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.PORYGON2,e.STANTLER,e.BLISSEY,e.GARDEVOIR,e.NOSEPASS,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.JIRACHI,e.DEOXYS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.HAPPINY,e.MAGNEZONE,e.GLACEON,e.PORYGON_Z,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.ARCEUS,e.MUNNA,e.MUSHARNA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.AUDINO,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.GOLETT,e.GOLURK,e.LANDORUS,e.MELOETTA,e.GENESECT,e.ESPURR,e.MEOWSTIC,e.CARBINK,e.XERNEAS,e.DIANCIE,e.HOOPA,e.ORANGURU,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.TOGEDEMARU,e.TAPU_LELE,e.TAPU_FINI,e.XURKITREE,e.CELESTEELA,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.HATTERENE,e.STONJOURNER,e.INDEEDEE,e.ETERNATUS,e.CALYREX,e.WYRDEER,e.GARGANACL,e.RABSCA,e.FARIGIRAF,e.SANDY_SHOCKS,e.IRON_LEAVES,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_EXEGGUTOR,[e.INDEEDEE,"male"]],[A.GYRO_BALL]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.SANDSHREW,e.SANDSLASH,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GEODUDE,e.GRAVELER,e.GOLEM,e.MAGNEMITE,e.MAGNETON,e.ONIX,e.VOLTORB,e.ELECTRODE,e.KOFFING,e.WEEZING,e.STARYU,e.STARMIE,e.OMANYTE,e.OMASTAR,e.MEW,e.TYPHLOSION,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.STEELIX,e.QWILFISH,e.SHUCKLE,e.MAGCARGO,e.DONPHAN,e.HITMONTOP,e.MILTANK,e.SABLEYE,e.TORKOAL,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.GLALIE,e.METANG,e.METAGROSS,e.RAYQUAZA,e.DRIFLOON,e.DRIFBLIM,e.BRONZOR,e.BRONZONG,e.MAGNEZONE,e.LICKILICKY,e.TEPIG,e.PIGNITE,e.EMBOAR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.DARUMAKA,e.DARMANITAN,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FERROSEED,e.FERROTHORN,e.GOLETT,e.GOLURK,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.CARBINK,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.DIANCIE,e.VOLCANION,e.PASSIMIAN,e.MINIOR,e.TOGEDEMARU,e.DHELMISE,e.SOLGALEO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.MELTAN,e.MELMETAL,e.SKWOVET,e.GREEDENT,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.PERRSERKER,e.DURALUDON,e.OVERQWIL,e.VAROOM,e.REVAVROOM,e.DUDUNSPARCE,e.SCREAM_TAIL,e.IRON_TREADS,e.DIPPLIN,e.ARCHALUDON,e.HYDRAPPLE,e.TERAPAGOS,[e.WORMADAM,"trash"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG],[A.BRINE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.HORSEA,e.SEADRA,e.STARYU,e.STARMIE,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEW,e.CHINCHOU,e.LANTURN,e.SLOWKING,e.QWILFISH,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.SUICUNE,e.LUGIA,e.WINGULL,e.PELIPPER,e.HARIYAMA,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.KYOGRE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.FINNEON,e.LUMINEON,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.PANPOUR,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.SANDYGAST,e.PALOSSAND,e.DHELMISE,e.TAPU_FINI,e.CLOBBOPUS,e.GRAPPLOCT,e.CURSOLA,e.PINCURCHIN,e.EISCUE,e.DRACOVISH,e.ARCTOVISH,e.DRAKLOAK,e.DRAGAPULT,e.OVERQWIL,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,[e.URSHIFU,"rapid-strike"],e.HISUI_QWILFISH],[A.PLUCK]:[e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.FARFETCHD,e.DODUO,e.DODRIO,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.NATU,e.XATU,e.MURKROW,e.DELIBIRD,e.SKARMORY,e.HO_OH,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.SWABLU,e.ALTARIA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.HONCHKROW,e.CHATOT,e.TOGEKISS,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.INKAY,e.MALAMAR,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.DRACOZOLT,e.ARCTOZOLT,e.WATTREL,e.KILOWATTREL,e.FLITTLE,e.ESPATHRA,e.BOMBIRDIER,e.VELUZA,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.GALAR_ZAPDOS,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[A.TAILWIND]:[e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.FARFETCHD,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.YANMA,e.MURKROW,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.SUICUNE,e.LUGIA,e.HO_OH,e.BEAUTIFLY,e.DUSTOX,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.CASTFORM,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.DRIFLOON,e.DRIFBLIM,e.HONCHKROW,e.CHATOT,e.FINNEON,e.LUMINEON,e.MANTYKE,e.TOGEKISS,e.YANMEGA,e.GLISCOR,e.ARCEUS,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.COTTONEE,e.WHIMSICOTT,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.TORNADUS,e.RESHIRAM,e.ZEKROM,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.COMFEY,e.SILVALLY,e.DRAMPA,e.LUNALA,e.KARTANA,e.NAGANADEL,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.FROSMOTH,e.KLEAVOR,e.ENAMORUS,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.DUDUNSPARCE,e.IRON_JUGULIS,e.ROARING_MOON,e.FEZANDIPITI,e.SHAYMIN,e.GIRATINA,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[A.U_TURN]:[e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.FARFETCHD,e.SCYTHER,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.MEW,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.CROBAT,e.NATU,e.XATU,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.YANMA,e.MURKROW,e.GLIGAR,e.SCIZOR,e.CELEBI,e.BLAZIKEN,e.BEAUTIFLY,e.DUSTOX,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.TROPIUS,e.RAYQUAZA,e.JIRACHI,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.AMBIPOM,e.LOPUNNY,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHATOT,e.FINNEON,e.LUMINEON,e.YANMEGA,e.GLISCOR,e.UXIE,e.MESPRIT,e.AZELF,e.PHIONE,e.MANAPHY,e.VICTINI,e.PURRLOIN,e.LIEPARD,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.WHIMSICOTT,e.DARUMAKA,e.DARMANITAN,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.EMOLGA,e.EELEKTRIK,e.EELEKTROSS,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.MELOETTA,e.GENESECT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.FURFROU,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.HAWLUCHA,e.DEDENNE,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.WISHIWASHI,e.TSAREENA,e.COMFEY,e.PASSIMIAN,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TOGEDEMARU,e.TAPU_KOKO,e.PHEROMOSA,e.NAGANADEL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.ORBEETLE,e.THIEVUL,e.FLAPPLE,e.PERRSERKER,e.FROSMOTH,e.DRAKLOAK,e.DRAGAPULT,e.KUBFU,e.URSHIFU,e.ZARUDE,e.KLEAVOR,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.QUAQUAVAL,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.TANDEMAUS,e.MAUSHOLD,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.SHROODLE,e.GRAFAIAI,e.FLITTLE,e.ESPATHRA,e.BOMBIRDIER,e.CYCLIZAR,e.FLAMIGO,e.ANNIHILAPE,e.SLITHER_WING,e.IRON_BUNDLE,e.IRON_JUGULIS,e.IRON_MOTH,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[A.CLOSE_COMBAT]:[e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.FARFETCHD,e.HITMONLEE,e.HITMONCHAN,e.SCYTHER,e.PINSIR,e.TAUROS,e.MEW,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.HITMONTOP,e.COMBUSKEN,e.BLAZIKEN,e.BRELOOM,e.MAKUHITA,e.HARIYAMA,e.MEDITITE,e.MEDICHAM,e.SHARPEDO,e.ZANGOOSE,e.CRAWDAUNT,e.ABSOL,e.MONFERNO,e.INFERNAPE,e.STARAPTOR,e.LOPUNNY,e.RIOLU,e.LUCARIO,e.TOXICROAK,e.GALLADE,e.PIGNITE,e.EMBOAR,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SAWK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ESCAVALIER,e.EELEKTROSS,e.HAXORUS,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.MELOETTA,e.CHESNAUGHT,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.XERNEAS,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.BEWEAR,e.PASSIMIAN,e.GOLISOPOD,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.SOLGALEO,e.BUZZWOLE,e.PHEROMOSA,e.MARSHADOW,e.ZERAORA,e.ARROKUDA,e.BARRASKEWDA,e.CLOBBOPUS,e.GRAPPLOCT,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.FALINKS,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.QUAQUAVAL,e.PAWMOT,e.CERULEDGE,e.PALAFIN,e.FLAMIGO,e.ANNIHILAPE,e.GREAT_TUSK,e.BRUTE_BONNET,e.SLITHER_WING,e.IRON_HANDS,e.IRON_VALIANT,e.KORAIDON,e.IRON_LEAVES,e.OKIDOGI,e.IRON_BOULDER,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,[e.CALYREX,"ice"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS],[A.PAYBACK]:[e.BEEDRILL,e.EKANS,e.ARBOK,e.VULPIX,e.NINETALES,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.TENTACOOL,e.TENTACRUEL,e.DODRIO,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.MR_MIME,e.JYNX,e.TAUROS,e.GYARADOS,e.AERODACTYL,e.MEW,e.CROBAT,e.POLITOED,e.AIPOM,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.PINECO,e.FORRETRESS,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.OCTILLERY,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.SMOOCHUM,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.PELIPPER,e.HARIYAMA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.GLALIE,e.CRANIDOS,e.RAMPARDOS,e.FLOATZEL,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.SPIRITOMB,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.WEAVILE,e.RHYPERIOR,e.TANGROWTH,e.GLISCOR,e.DUSKNOIR,e.FROSLASS,e.AZELF,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.ESPURR,e.MEOWSTIC,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.YVELTAL,e.ZYGARDE,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.STEENEE,e.TSAREENA,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.GUZZLORD,e.MARSHADOW,e.BLACEPHALON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.APPLETUN,e.TOXTRICITY,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.FALINKS,e.PINCURCHIN,e.MORPEKO,e.COPPERAJAH,e.ARCTOZOLT,e.ZAMAZENTA,e.ETERNATUS,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.URSALUNA,e.MASCHIFF,e.MABOSSTIFF,e.BOMBIRDIER,e.FLAMIGO,e.BRUTE_BONNET,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,[e.CALYREX,"ice","shadow"]],[A.ASSURANCE]:[e.BEEDRILL,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.MACHAMP,e.DODUO,e.KOFFING,e.WEEZING,e.KANGASKHAN,e.SCYTHER,e.TAUROS,e.AERODACTYL,e.MEW,e.CROBAT,e.UMBREON,e.MURKROW,e.GIRAFARIG,e.QWILFISH,e.SCIZOR,e.HERACROSS,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.MAWILE,e.CARVANHA,e.SHARPEDO,e.CACNEA,e.CACTURNE,e.SEVIPER,e.ABSOL,e.CRANIDOS,e.RAMPARDOS,e.VESPIQUEN,e.BUNEARY,e.LOPUNNY,e.HONCHKROW,e.GLAMEOW,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.AZELF,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.PATRAT,e.PURRLOIN,e.LIEPARD,e.WOOBAT,e.SWOOBAT,e.SCOLIPEDE,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENSHAO,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.GENESECT,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.GOODRA,e.INCINEROAR,e.LYCANROC,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.TOGEDEMARU,e.DHELMISE,e.TAPU_KOKO,e.PHEROMOSA,e.MARSHADOW,e.NAGANADEL,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.FALINKS,e.PINCURCHIN,e.STONJOURNER,e.MORPEKO,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ETERNATUS,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.GLASTRIER,e.SPECTRIER,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.VAROOM,e.REVAVROOM,e.ANNIHILAPE,e.FARIGIRAF,e.KINGAMBIT,e.IRON_JUGULIS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.GALAR_MEOWTH,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,[e.CALYREX,"ice","shadow"],[e.PALDEA_TAUROS,"combat"]],[A.EMBARGO]:[e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.GASTLY,e.HAUNTER,e.GENGAR,e.MEWTWO,e.MEW,e.MURKROW,e.MISDREAVUS,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.SABLEYE,e.MAWILE,e.CACTURNE,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.SPIRITOMB,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.PORYGON_Z,e.DUSKNOIR,e.FROSLASS,e.DARKRAI,e.VICTINI,e.PURRLOIN,e.LIEPARD,e.WOOBAT,e.SWOOBAT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.TORNADUS,e.THUNDURUS,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.PANGORO,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.YVELTAL,e.HOOPA,e.INCINEROAR,e.ORICORIO,e.ORANGURU,e.PALOSSAND,e.MIMIKYU,e.BRUXISH,e.DHELMISE,e.NECROZMA,e.MAGEARNA,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK],[A.FLING]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GLOOM,e.VILEPLUME,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.KECLEON,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MIME_JR,e.HAPPINY,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.GLISCOR,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.PALKIA,e.REGIGIGAS,e.PHIONE,e.MANAPHY,e.DARKRAI,e.VICTINI,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.WHIMSICOTT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.REUNICLUS,e.EMOLGA,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.HEATMOR,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.DEDENNE,e.HOOPA,e.VOLCANION,e.INCINEROAR,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.BLACEPHALON,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.CINDERACE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.KUBFU,e.URSHIFU,e.ZARUDE,e.URSALUNA,e.SNEASLER,e.FLORAGATO,e.MEOWSCARADA,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.ARBOLIVA,e.GARGANACL,e.ARMAROUGE,e.CERULEDGE,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.RELLOR,e.RABSCA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FINIZEN,e.PALAFIN,e.FLAMIGO,e.ANNIHILAPE,e.KINGAMBIT,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.OKIDOGI,e.MUNKIDORI,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.BLOODMOON_URSALUNA],[A.GASTRO_ACID]:[e.EKANS,e.ARBOK,e.ODDISH,e.GLOOM,e.VILEPLUME,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.SNORLAX,e.MEW,e.BELLOSSOM,e.SHUCKLE,e.GULPIN,e.SWALOT,e.SEVIPER,e.LILEEP,e.CRADILY,e.MUNCHLAX,e.CARNIVINE,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.PALPITOAD,e.SEISMITOAD,e.FOONGUS,e.AMOONGUSS,e.JOLTIK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.SHELMET,e.ACCELGOR,e.HEATMOR,e.DIGGERSBY,e.SWIRLIX,e.SLURPUFF,e.MAREANIE,e.TOXAPEX,e.PYUKUMUKU,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.CHEWTLE,e.DREDNAW,e.TAROUNTULA,e.SPIDOPS,e.ALOLA_GRIMER,e.ALOLA_MUK],[A.POWER_SWAP]:[e.VULPIX,e.NINETALES,e.ABRA,e.KADABRA,e.ALAKAZAM,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MR_MIME,e.MAGMAR,e.PORYGON,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.ESPEON,e.GIRAFARIG,e.PORYGON2,e.MAGBY,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.GARDEVOIR,e.MEDITITE,e.SWABLU,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.BRONZOR,e.BRONZONG,e.TANGROWTH,e.MAGMORTAR,e.PORYGON_Z,e.CRESSELIA,e.VICTINI,e.MUNNA,e.MUSHARNA,e.DARMANITAN,e.SIGILYPH,e.COFAGRIGUS,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.ACCELGOR,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.MAGEARNA,e.DOTTLER,e.ORBEETLE,e.HATTERENE,e.GRIMMSNARL,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.ZAMAZENTA,e.CALYREX,e.RABSCA,e.FARIGIRAF,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_EXEGGUTOR,e.GALAR_MR_MIME,e.GALAR_ARTICUNO],[A.GUARD_SWAP]:[e.ABRA,e.KADABRA,e.ALAKAZAM,e.DROWZEE,e.MR_MIME,e.PORYGON,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.WOOPER,e.QUAGSIRE,e.UMBREON,e.GIRAFARIG,e.SLUGMA,e.MAGCARGO,e.SKARMORY,e.PORYGON2,e.GARDEVOIR,e.MAWILE,e.MEDITITE,e.BALTOY,e.CLAYDOL,e.CASTFORM,e.BRONZOR,e.BRONZONG,e.PORYGON_Z,e.CRESSELIA,e.VICTINI,e.MUNNA,e.MUSHARNA,e.DARMANITAN,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.SHELMET,e.ACCELGOR,e.INKAY,e.MALAMAR,e.CARBINK,e.DIANCIE,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.MAGEARNA,e.DOTTLER,e.ORBEETLE,e.WOOLOO,e.DUBWOOL,e.HATTERENE,e.MR_RIME,e.RUNERIGUS,e.ZAMAZENTA,e.CALYREX,e.RABSCA,e.FARIGIRAF,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,[e.INDEEDEE,"female"]],[A.WORRY_SEED]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.PSYDUCK,e.GOLDUCK,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.ROSELIA,e.CACNEA,e.CACTURNE,e.LILEEP,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,e.WORMADAM,e.CHERUBI,e.CHERRIM,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SHAYMIN,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.MUNNA,e.MUSHARNA,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.TAPU_BULU,e.NIHILEGO,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GOSSIFLEUR,e.ELDEGOSS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.CAPSAKID,e.SCOVILLAIN,e.ALOLA_EXEGGUTOR,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE,e.ETERNAL_FLOETTE],[A.TOXIC_SPIKES]:[e.BEEDRILL,e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.VENONAT,e.VENOMOTH,e.TENTACOOL,e.TENTACRUEL,e.MUK,e.SHELLDER,e.CLOYSTER,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.OMANYTE,e.OMASTAR,e.MEW,e.SPINARAK,e.ARIADOS,e.QUAGSIRE,e.PINECO,e.FORRETRESS,e.GLIGAR,e.QWILFISH,e.SHIFTRY,e.ROSELIA,e.GULPIN,e.SWALOT,e.CACNEA,e.CACTURNE,e.ROSERADE,e.VESPIQUEN,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.DRAPION,e.GLISCOR,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.SHELMET,e.ACCELGOR,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.SKRELP,e.DRAGALGE,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.NIHILEGO,e.POIPOLE,e.NAGANADEL,e.TOXTRICITY,e.RUNERIGUS,e.PINCURCHIN,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.MEOWSCARADA,e.TAROUNTULA,e.SPIDOPS,e.TOEDSCOOL,e.TOEDSCRUEL,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.IRON_MOTH,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_YAMASK,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.PALDEA_WOOPER],[A.FLARE_BLITZ]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.VULPIX,e.NINETALES,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SOLROCK,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.MAGMORTAR,e.HEATRAN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.DARUMAKA,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.SOLGALEO,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.CENTISKORCH,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SLITHER_WING,e.IRON_MOTH,e.CHI_YU,e.KORAIDON,e.GOUGING_FIRE,e.TERAPAGOS,e.ALOLA_MAROWAK,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,[e.PALDEA_TAUROS,"blaze"]],[A.AURA_SPHERE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.HITMONLEE,e.HITMONCHAN,e.MEWTWO,e.MEW,e.RAIKOU,e.CELEBI,e.BLAZIKEN,e.GARDEVOIR,e.MEDICHAM,e.ZANGOOSE,e.LATIAS,e.LATIOS,e.JIRACHI,e.INFERNAPE,e.LOPUNNY,e.LUCARIO,e.TOGEKISS,e.GALLADE,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.MIENFOO,e.MIENSHAO,e.KELDEO,e.CLAUNCHER,e.CLAWITZER,e.KOMMO_O,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.URSHIFU,e.MEOWSCARADA,e.ARMAROUGE,e.PALAFIN,e.IRON_VALIANT,e.ARCHALUDON,e.TERAPAGOS,e.HISUI_DECIDUEYE],[A.ROCK_POLISH]:[e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.RHYHORN,e.RHYDON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEW,e.SUDOWOODO,e.FORRETRESS,e.GLIGAR,e.STEELIX,e.SHUCKLE,e.MAGCARGO,e.CORSOLA,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.CAMERUPT,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.RELICANTH,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.TORTERRA,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.RHYPERIOR,e.GLISCOR,e.PROBOPASS,e.REGIGIGAS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.GARBODOR,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.DURANT,e.COBALION,e.TERRAKION,e.LANDORUS,e.GENESECT,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.BERGMITE,e.AVALUGG,e.DIANCIE,e.ROCKRUFF,e.LYCANROC,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.KOMMO_O,e.NECROZMA,e.STAKATAKA,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.STONJOURNER,e.NACLI,e.NACLSTACK,e.GARGANACL,e.GLIMMET,e.GLIMMORA,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK],[A.POISON_JAB]:[e.BEEDRILL,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.RAPIDASH,e.FARFETCHD,e.GRIMER,e.MUK,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.HITMONLEE,e.RHYHORN,e.RHYDON,e.GOLDEEN,e.SEAKING,e.MEWTWO,e.MEW,e.SPINARAK,e.ARIADOS,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.QWILFISH,e.SNEASEL,e.DONPHAN,e.COMBUSKEN,e.BLAZIKEN,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.ROSELIA,e.GULPIN,e.SWALOT,e.SHARPEDO,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.ROSERADE,e.STUNKY,e.SKUNTANK,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.RHYPERIOR,e.TANGROWTH,e.GLISCOR,e.GALLADE,e.DARKRAI,e.ARCEUS,e.PIGNITE,e.EMBOAR,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.CRYOGONAL,e.MIENFOO,e.MIENSHAO,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.VOLCARONA,e.COBALION,e.TERRAKION,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.PANGORO,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.PHANTUMP,e.TREVENANT,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.GOLISOPOD,e.TOGEDEMARU,e.KOMMO_O,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.GUZZLORD,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.CHEWTLE,e.DREDNAW,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.SIRFETCHD,e.FALINKS,e.PINCURCHIN,e.ZACIAN,e.ETERNATUS,e.URSHIFU,e.SNEASLER,e.OVERQWIL,e.TAROUNTULA,e.SPIDOPS,e.CERULEDGE,e.SHROODLE,e.GRAFAIAI,e.VAROOM,e.REVAVROOM,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.IRON_VALIANT,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.IRON_BOULDER,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_SLOWKING,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.PALDEA_WOOPER],[A.DARK_PULSE]:[e.BLASTOISE,e.EKANS,e.ARBOK,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.GYARADOS,e.MEWTWO,e.MEW,e.CROBAT,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.GLIGAR,e.STEELIX,e.SNEASEL,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.SABLEYE,e.MAWILE,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.CACNEA,e.CACTURNE,e.SEVIPER,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.GLALIE,e.DEOXYS,e.MISMAGIUS,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.SPIRITOMB,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.GLISCOR,e.PORYGON_Z,e.DUSKNOIR,e.ROTOM,e.HEATRAN,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.PURRLOIN,e.LIEPARD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.FRILLISH,e.JELLICENT,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.GENESECT,e.FROGADIER,e.GRENINJA,e.LITLEO,e.PYROAR,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.INKAY,e.MALAMAR,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.INCINEROAR,e.GOLISOPOD,e.MIMIKYU,e.GUZZLORD,e.NECROZMA,e.NAGANADEL,e.BLACEPHALON,e.INTELEON,e.THIEVUL,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.RUNERIGUS,e.MORPEKO,e.DURALUDON,e.ZARUDE,e.SPECTRIER,e.OVERQWIL,e.MEOWSCARADA,e.LOKIX,e.ARMAROUGE,e.MASCHIFF,e.MABOSSTIFF,e.BOMBIRDIER,e.KINGAMBIT,e.BRUTE_BONNET,e.FLUTTER_MANE,e.IRON_JUGULIS,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.FEZANDIPITI,e.ARCHALUDON,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MOLTRES,e.GALAR_YAMASK,[e.URSHIFU,"single-strike"],[e.CALYREX,"shadow"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK],[A.AQUA_TAIL]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.EKANS,e.ARBOK,e.NIDOQUEEN,e.NIDOKING,e.PSYDUCK,e.GOLDUCK,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.GOLDEEN,e.SEAKING,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.KABUTOPS,e.AERODACTYL,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LANTURN,e.MARILL,e.AZUMARILL,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.QWILFISH,e.MANTINE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.AGGRON,e.SEVIPER,e.BARBOACH,e.WHISCASH,e.ARMALDO,e.MILOTIC,e.KECLEON,e.SPHEAL,e.SEALEO,e.WALREIN,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.SALAMENCE,e.KYOGRE,e.RAYQUAZA,e.BIDOOF,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.GARCHOMP,e.SKORUPI,e.DRAPION,e.FINNEON,e.LUMINEON,e.LICKILICKY,e.RHYPERIOR,e.GLACEON,e.GLISCOR,e.PALKIA,e.GIRATINA,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PANPOUR,e.SIMIPOUR,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.MINCCINO,e.CINCCINO,e.EELEKTRIK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.STUNFISK,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.KELDEO,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.GOODRA,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.BASCULEGION,e.OVERQWIL,e.FINIZEN,e.PALAFIN,e.CYCLIZAR,e.DONDOZO,e.DUDUNSPARCE,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.HISUI_QWILFISH,e.HISUI_SAMUROTT],[A.SEED_BOMB]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.EKANS,e.ARBOK,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.SNORLAX,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.SENTRET,e.FURRET,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.PINECO,e.FORRETRESS,e.TEDDIURSA,e.URSARING,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.PHANPY,e.DONPHAN,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.PELIPPER,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.ROSELIA,e.GULPIN,e.SWALOT,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.LILEEP,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,e.WORMADAM,e.PACHIRISU,e.CHERUBI,e.CHERRIM,e.AMBIPOM,e.MUNCHLAX,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SHAYMIN,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.TRUBBISH,e.GARBODOR,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.DEDENNE,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.PASSIMIAN,e.KOMALA,e.TAPU_BULU,e.CELESTEELA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.OBSTAGOON,e.PERRSERKER,e.MORPEKO,e.ZARUDE,e.CALYREX,e.URSALUNA,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.FLITTLE,e.ESPATHRA,e.ANNIHILAPE,e.BRUTE_BONNET,e.WO_CHIEN,e.DIPPLIN,e.OGERPON,e.HYDRAPPLE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[A.AIR_SLASH]:[e.CHARIZARD,e.BUTTERFREE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.FARFETCHD,e.SCYTHER,e.ARTICUNO,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.NATU,e.XATU,e.YANMA,e.MURKROW,e.DUNSPARCE,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.SUICUNE,e.LUGIA,e.HO_OH,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.TROPIUS,e.ABSOL,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.VESPIQUEN,e.DRIFBLIM,e.HONCHKROW,e.LUMINEON,e.MANTYKE,e.TOGEKISS,e.YANMEGA,e.GALLADE,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.SIGILYPH,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.PAWNIARD,e.BISHARP,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.KELDEO,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.AEGISLASH,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.VIKAVOLT,e.ORICORIO,e.TYPE_NULL,e.SILVALLY,e.LUNALA,e.CELESTEELA,e.KARTANA,e.NAGANADEL,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.FLAPPLE,e.CRAMORANT,e.FROSMOTH,e.ZACIAN,e.KLEAVOR,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.DUDUNSPARCE,e.KINGAMBIT,e.IRON_JUGULIS,e.IRON_MOTH,e.ROARING_MOON,e.IRON_LEAVES,e.FEZANDIPITI,e.IRON_BOULDER,e.IRON_CROWN,e.SHAYMIN,[e.ROTOM,"fan"],e.GALAR_ARTICUNO,e.GALAR_MOLTRES,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[A.X_SCISSOR]:[e.BEEDRILL,e.SANDSHREW,e.SANDSLASH,e.PARAS,e.PARASECT,e.KRABBY,e.KINGLER,e.SCYTHER,e.PINSIR,e.KABUTOPS,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.GLIGAR,e.SCIZOR,e.SNEASEL,e.SKARMORY,e.GROVYLE,e.SCEPTILE,e.SHIFTRY,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.ABSOL,e.KRICKETUNE,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.LEAFEON,e.GLISCOR,e.GALLADE,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.DRILBUR,e.EXCADRILL,e.LEAVANNY,e.SCOLIPEDE,e.DWEBBLE,e.CRUSTLE,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.PAWNIARD,e.BISHARP,e.DURANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.GENESECT,e.PANGORO,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.TREVENANT,e.NOIBAT,e.NOIVERN,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.MIMIKYU,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.KARTANA,e.NECROZMA,e.NAGANADEL,e.CENTISKORCH,e.OBSTAGOON,e.PERRSERKER,e.KLEAVOR,e.SNEASLER,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.CERULEDGE,e.GRAFAIAI,e.KLAWF,e.RELLOR,e.RABSCA,e.KINGAMBIT,e.ROARING_MOON,e.IRON_VALIANT,e.IRON_LEAVES,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.GALAR_MEOWTH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT],[A.BUG_BUZZ]:[e.BUTTERFREE,e.VENONAT,e.VENOMOTH,e.SCYTHER,e.MEW,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.YANMA,e.PINECO,e.FORRETRESS,e.SCIZOR,e.HERACROSS,e.BEAUTIFLY,e.DUSTOX,e.SURSKIT,e.MASQUERAIN,e.NINCADA,e.NINJASK,e.SHEDINJA,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.KRICKETUNE,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.YANMEGA,e.ARCEUS,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.SHELMET,e.ACCELGOR,e.LARVESTA,e.VOLCARONA,e.GENESECT,e.VIVILLON,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.WIMPOD,e.GOLISOPOD,e.PHEROMOSA,e.DOTTLER,e.ORBEETLE,e.SIZZLIPEDE,e.CENTISKORCH,e.SNOM,e.FROSMOTH,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.RELLOR,e.RABSCA,e.SLITHER_WING,e.IRON_MOTH,e.TERAPAGOS],[A.DRAGON_PULSE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.ARCANINE,e.ONIX,e.RHYHORN,e.RHYDON,e.HORSEA,e.SEADRA,e.GYARADOS,e.LAPRAS,e.AERODACTYL,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.FERALIGATR,e.AMPHAROS,e.STEELIX,e.KINGDRA,e.TYRANITAR,e.LUGIA,e.SCEPTILE,e.AGGRON,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.FEEBAS,e.MILOTIC,e.TROPIUS,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.CRANIDOS,e.RAMPARDOS,e.GIBLE,e.GABITE,e.GARCHOMP,e.LUCARIO,e.RHYPERIOR,e.DIALGA,e.PALKIA,e.HEATRAN,e.GIRATINA,e.ARCEUS,e.SERPERIOR,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.GOOMY,e.SLIGGOO,e.GOODRA,e.NOIBAT,e.NOIVERN,e.ZYGARDE,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.GUZZLORD,e.NECROZMA,e.POIPOLE,e.NAGANADEL,e.FLAPPLE,e.APPLETUN,e.RUNERIGUS,e.DRACOZOLT,e.DRACOVISH,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.REGIDRAGO,e.ARMAROUGE,e.CYCLIZAR,e.TATSUGIRI,e.IRON_JUGULIS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.DIPPLIN,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_EXEGGUTOR,e.HISUI_ARCANINE,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[A.POWER_GEM]:[e.MEOWTH,e.PERSIAN,e.GOLDUCK,e.STARYU,e.STARMIE,e.MEWTWO,e.MEW,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.SUDOWOODO,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.TYRANITAR,e.NOSEPASS,e.SABLEYE,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.VESPIQUEN,e.MISMAGIUS,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GABITE,e.GARCHOMP,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.CRESSELIA,e.ARCEUS,e.BOLDORE,e.GIGALITH,e.KLINK,e.KLANG,e.KLINKLANG,e.CARBINK,e.DIANCIE,e.MINIOR,e.NIHILEGO,e.NECROZMA,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.CURSOLA,e.STONJOURNER,e.MEOWSCARADA,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.RABSCA,e.BOMBIRDIER,e.GLIMMET,e.GLIMMORA,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_THORNS,e.GIMMIGHOUL,e.GHOLDENGO,e.MIRAIDON,e.TERAPAGOS,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.HISUI_GROWLITHE,e.HISUI_ARCANINE],[A.DRAIN_PUNCH]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GLOOM,e.VILEPLUME,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWBRO,e.GRIMER,e.MUK,e.GENGAR,e.DROWZEE,e.HYPNO,e.HITMONCHAN,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.LEDYBA,e.LEDIAN,e.TOGETIC,e.BELLOSSOM,e.SUDOWOODO,e.QUAGSIRE,e.SLOWKING,e.BLISSEY,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOMBRE,e.LUDICOLO,e.SHROOMISH,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.KECLEON,e.REGIROCK,e.JIRACHI,e.DEOXYS,e.MONFERNO,e.INFERNAPE,e.BUNEARY,e.LOPUNNY,e.MIME_JR,e.HAPPINY,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.TOGEKISS,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.DARKRAI,e.PIGNITE,e.EMBOAR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.TRUBBISH,e.GARBODOR,e.REUNICLUS,e.EELEKTROSS,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.HEATMOR,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.PANCHAM,e.PANGORO,e.AROMATISSE,e.SLURPUFF,e.HAWLUCHA,e.TREVENANT,e.HOOPA,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.SHIINOTIC,e.BEWEAR,e.PASSIMIAN,e.MIMIKYU,e.HAKAMO_O,e.KOMMO_O,e.BUZZWOLE,e.GUZZLORD,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.TOXTRICITY,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.MR_RIME,e.ALCREMIE,e.INDEEDEE,e.URSHIFU,e.ZARUDE,e.URSALUNA,e.PALAFIN,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_HANDS,e.IRON_VALIANT,e.KORAIDON,e.OKIDOGI,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING],[A.VACUUM_WAVE]:[e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.HITMONLEE,e.HITMONCHAN,e.SCYTHER,e.MEW,e.SCIZOR,e.HERACROSS,e.TYROGUE,e.HITMONTOP,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.GARDEVOIR,e.BRELOOM,e.MAKUHITA,e.HARIYAMA,e.MEDITITE,e.MEDICHAM,e.FLYGON,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.GALLADE,e.DEWOTT,e.SAMUROTT,e.MIENSHAO,e.COBALION,e.VIRIZION,e.KELDEO,e.PASSIMIAN,e.HAKAMO_O,e.KOMMO_O,e.KARTANA,e.INTELEON,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.CERULEDGE,e.ANNIHILAPE,e.IRON_VALIANT,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA],[A.FOCUS_BLAST]:[e.CHARMANDER,e.CHARIZARD,e.BLASTOISE,e.RAICHU,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFABLE,e.WIGGLYTUFF,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.MUK,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.FERALIGATR,e.FURRET,e.LEDIAN,e.AMPHAROS,e.AZUMARILL,e.POLITOED,e.QUAGSIRE,e.SLOWKING,e.GRANBULL,e.HERACROSS,e.URSARING,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.SWAMPERT,e.LUDICOLO,e.SHIFTRY,e.GARDEVOIR,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.GRUMPIG,e.CACTURNE,e.ZANGOOSE,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.MONFERNO,e.INFERNAPE,e.RAMPARDOS,e.FLOATZEL,e.LOPUNNY,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.DARKRAI,e.ARCEUS,e.VICTINI,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.KROOKODILE,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.CARRACOSTA,e.ARCHEOPS,e.GARBODOR,e.ZOROARK,e.CINCCINO,e.GOTHITELLE,e.REUNICLUS,e.ESCAVALIER,e.HAXORUS,e.BEARTIC,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BISHARP,e.HEATMOR,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESNAUGHT,e.DELPHOX,e.PANGORO,e.BARBARACLE,e.DRAGALGE,e.CLAWITZER,e.HELIOLISK,e.HAWLUCHA,e.GOODRA,e.TREVENANT,e.GOURGEIST,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.HOOPA,e.VOLCANION,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_LELE,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.PHEROMOSA,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.RILLABOOM,e.CINDERACE,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.MR_RIME,e.FALINKS,e.ZACIAN,e.ZAMAZENTA,e.URSHIFU,e.SNEASLER,e.ENAMORUS,e.PAWMOT,e.ARMAROUGE,e.PALAFIN,e.ANNIHILAPE,e.KINGAMBIT,e.SCREAM_TAIL,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.KORAIDON,e.IRON_LEAVES,e.OKIDOGI,e.MUNKIDORI,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_SANDSLASH,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_DARMANITAN,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[A.ENERGY_BALL]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BUTTERFREE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.GASTLY,e.HAUNTER,e.GENGAR,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.MISDREAVUS,e.GIRAFARIG,e.OCTILLERY,e.STANTLER,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.GARDEVOIR,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SABLEYE,e.MEDICHAM,e.ROSELIA,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.LILEEP,e.CRADILY,e.CASTFORM,e.TROPIUS,e.CHIMECHO,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,[e.WORMADAM,"plant"],e.MOTHIM,e.CHERUBI,e.CHERRIM,e.MISMAGIUS,e.CHINGLING,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.SHELMET,e.ACCELGOR,e.DURANT,e.VIRIZION,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PRIMARINA,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.DRAMPA,e.DHELMISE,e.TAPU_LELE,e.TAPU_BULU,e.XURKITREE,e.CELESTEELA,e.MAGEARNA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.DOTTLER,e.ORBEETLE,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.INDEEDEE,e.ZARUDE,e.CALYREX,e.WYRDEER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.OINKOLOGNE,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.ARMAROUGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.RABSCA,e.ESPATHRA,e.GLIMMORA,e.FARIGIRAF,e.BRUTE_BONNET,e.FLUTTER_MANE,e.IRON_MOTH,e.WO_CHIEN,e.IRON_VALIANT,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.HYDRAPPLE,e.TERAPAGOS,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_MR_MIME,e.GALAR_YAMASK,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[A.BRAVE_BIRD]:[e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.ZUBAT,e.GOLBAT,e.FARFETCHD,e.DODUO,e.DODRIO,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.MURKROW,e.DELIBIRD,e.SKARMORY,e.LUGIA,e.HO_OH,e.BLAZIKEN,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.SWABLU,e.ALTARIA,e.STARLY,e.STARAVIA,e.STARAPTOR,e.HONCHKROW,e.UNFEZANT,e.DUCKLETT,e.SWANNA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HAWLUCHA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.TAPU_KOKO,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.SIRFETCHD,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.ESPATHRA,e.BOMBIRDIER,e.FLAMIGO,e.FEZANDIPITI,e.GALAR_FARFETCHD,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[A.EARTH_POWER]:[e.VENUSAUR,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.CUBONE,e.MAROWAK,e.RHYHORN,e.RHYDON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEWTWO,e.MEW,e.SUDOWOODO,e.POLITOED,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SHUCKLE,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.PHANPY,e.DONPHAN,e.STANTLER,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.RELICANTH,e.REGIROCK,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.ABOMASNOW,e.RHYPERIOR,e.GLISCOR,e.MAMOSWINE,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.SHAYMIN,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.STUNFISK,e.GOLETT,e.GOLURK,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TERRAKION,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.DIGGERSBY,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.NECROZMA,e.RILLABOOM,e.DREDNAW,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.DRACOVISH,e.REGIDRAGO,e.WYRDEER,e.URSALUNA,e.ENAMORUS,e.SKELEDIRGE,e.OINKOLOGNE,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.NACLI,e.NACLSTACK,e.GARGANACL,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.RABSCA,e.WIGLETT,e.WUGTRIO,e.ORTHWORM,e.GLIMMORA,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.BRUTE_BONNET,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_JUGULIS,e.IRON_THORNS,e.TING_LU,e.HYDRAPPLE,e.TERAPAGOS,[e.WORMADAM,"sandy"],e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.GALAR_CORSOLA,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.GIGA_IMPACT]:[e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEOT,e.RATICATE,e.FEAROW,e.ARBOK,e.RAICHU,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFABLE,e.NINETALES,e.WIGGLYTUFF,e.GOLBAT,e.VILEPLUME,e.PARASECT,e.VENOMOTH,e.DUGTRIO,e.PERSIAN,e.GOLDUCK,e.PRIMEAPE,e.ARCANINE,e.POLIWRATH,e.ALAKAZAM,e.MACHAMP,e.VICTREEBEL,e.TENTACRUEL,e.GOLEM,e.RAPIDASH,e.SLOWBRO,e.MAGNETON,e.DODRIO,e.DEWGONG,e.MUK,e.CLOYSTER,e.GENGAR,e.HYPNO,e.KINGLER,e.ELECTRODE,e.EXEGGUTOR,e.MAROWAK,e.LICKITUNG,e.WEEZING,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.SEADRA,e.SEAKING,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMASTAR,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.FURRET,e.NOCTOWL,e.LEDIAN,e.ARIADOS,e.CROBAT,e.LANTURN,e.TOGETIC,e.XATU,e.AMPHAROS,e.BELLOSSOM,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.JUMPLUFF,e.SUNFLORA,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.FORRETRESS,e.DUNSPARCE,e.STEELIX,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.URSARING,e.MAGCARGO,e.PILOSWINE,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.HOUNDOOM,e.KINGDRA,e.DONPHAN,e.PORYGON2,e.STANTLER,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.MIGHTYENA,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LUDICOLO,e.SHIFTRY,e.SWELLOW,e.PELIPPER,e.GARDEVOIR,e.MASQUERAIN,e.BRELOOM,e.SLAKING,e.NINJASK,e.SHEDINJA,e.EXPLOUD,e.HARIYAMA,e.DELCATTY,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDICHAM,e.MANECTRIC,e.SWALOT,e.SHARPEDO,e.WAILORD,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.FLYGON,e.CACTURNE,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.WHISCASH,e.CRAWDAUNT,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.MILOTIC,e.BANETTE,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.GLALIE,e.WALREIN,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.STARAPTOR,e.BIBAREL,e.KRICKETUNE,e.LUXRAY,e.ROSERADE,e.RAMPARDOS,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.FLOATZEL,e.CHERRIM,e.GASTRODON,e.AMBIPOM,e.DRIFBLIM,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.PURUGLY,e.SKUNTANK,e.BRONZONG,e.SPIRITOMB,e.GARCHOMP,e.MUNCHLAX,e.LUCARIO,e.HIPPOWDON,e.DRAPION,e.TOXICROAK,e.CARNIVINE,e.LUMINEON,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.LIEPARD,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.MUSHARNA,e.UNFEZANT,e.ZEBSTRIKA,e.GIGALITH,e.SWOOBAT,e.EXCADRILL,e.AUDINO,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.LEAVANNY,e.SCOLIPEDE,e.WHIMSICOTT,e.LILLIGANT,e.KROOKODILE,e.DARMANITAN,e.CRUSTLE,e.SCRAFTY,e.SIGILYPH,e.COFAGRIGUS,e.CARRACOSTA,e.ARCHEOPS,e.GARBODOR,e.ZOROARK,e.CINCCINO,e.GOTHITELLE,e.REUNICLUS,e.SWANNA,e.VANILLUXE,e.SAWSBUCK,e.ESCAVALIER,e.AMOONGUSS,e.JELLICENT,e.ALOMOMOLA,e.GALVANTULA,e.FERROTHORN,e.KLINKLANG,e.EELEKTROSS,e.BEHEEYEM,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.CRYOGONAL,e.ACCELGOR,e.MIENSHAO,e.DRUDDIGON,e.GOLURK,e.BISHARP,e.BOUFFALANT,e.BRAVIARY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.HYDREIGON,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DIGGERSBY,e.TALONFLAME,e.VIVILLON,e.PYROAR,e.FLORGES,e.GOGOAT,e.PANGORO,e.FURFROU,e.MEOWSTIC,e.AEGISLASH,e.AROMATISSE,e.SLURPUFF,e.MALAMAR,e.BARBARACLE,e.DRAGALGE,e.CLAWITZER,e.HELIOLISK,e.TYRANTRUM,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOODRA,e.KLEFKI,e.TREVENANT,e.GOURGEIST,e.AVALUGG,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.GUMSHOOS,e.VIKAVOLT,e.CRABOMINABLE,e.RIBOMBEE,e.LYCANROC,e.TOXAPEX,e.MUDSDALE,e.LURANTIS,e.SHIINOTIC,e.SALAZZLE,e.BEWEAR,e.TSAREENA,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.NAGANADEL,e.STAKATAKA,e.ZERAORA,e.MELMETAL,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.GREEDENT,e.CORVIKNIGHT,e.ORBEETLE,e.THIEVUL,e.ELDEGOSS,e.DUBWOOL,e.DREDNAW,e.BOLTUND,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SANDACONDA,e.CRAMORANT,e.BARRASKEWDA,e.TOXTRICITY,e.CENTISKORCH,e.GRAPPLOCT,e.POLTEAGEIST,e.HATTERENE,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL,e.OINKOLOGNE,e.SPIDOPS,e.LOKIX,e.PAWMOT,e.MAUSHOLD,e.DACHSBUN,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLSTACK,e.GARGANACL,e.BELLIBOLT,e.KILOWATTREL,e.MABOSSTIFF,e.GRAFAIAI,e.BRAMBLEGHAST,e.TOEDSCRUEL,e.KLAWF,e.SCOVILLAIN,e.RABSCA,e.ESPATHRA,e.WUGTRIO,e.BOMBIRDIER,e.PALAFIN,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMORA,e.HOUNDSTONE,e.FLAMIGO,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.BAXCALIBUR,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES,e.ALOLA_DUGTRIO,e.ALOLA_PERSIAN,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_RAPIDASH,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_LINOONE,e.GALAR_DARMANITAN,e.HISUI_ARCANINE,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA,[e.BASCULIN,"blue-striped","red-striped"]],[A.NASTY_PLOT]:[e.PIKACHU,e.RAICHU,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.ALAKAZAM,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.PICHU,e.TOGEPI,e.TOGETIC,e.AIPOM,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.SMOOCHUM,e.CELEBI,e.POOCHYENA,e.MIGHTYENA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SKITTY,e.DELCATTY,e.SABLEYE,e.PLUSLE,e.MINUN,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.LUNATONE,e.CRAWDAUNT,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.AMBIPOM,e.MISMAGIUS,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.MIME_JR,e.CHATOT,e.SPIRITOMB,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.TOGEKISS,e.PORYGON_Z,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DARKRAI,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.WOOBAT,e.SWOOBAT,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.ELGYEM,e.BEHEEYEM,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.INKAY,e.MALAMAR,e.GOURGEIST,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.ORANGURU,e.POIPOLE,e.NAGANADEL,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.SINISTEA,e.POLTEAGEIST,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.MORPEKO,e.ZARUDE,e.SPECTRIER,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SHROODLE,e.GRAFAIAI,e.BOMBIRDIER,e.TATSUGIRI,e.FARIGIRAF,e.GIMMIGHOUL,e.GHOLDENGO,e.CHI_YU,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.FEZANDIPITI,e.HYDRAPPLE,e.PECHARUNT,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE],[A.AVALANCHE]:[e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.SLOWPOKE,e.SLOWBRO,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.RHYDON,e.KANGASKHAN,e.STARMIE,e.JYNX,e.GYARADOS,e.LAPRAS,e.ARTICUNO,e.MEWTWO,e.MEW,e.FERALIGATR,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.DELIBIRD,e.SMOOCHUM,e.BLISSEY,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.EXPLOUD,e.AGGRON,e.SHARPEDO,e.WAILMER,e.WAILORD,e.CRAWDAUNT,e.MILOTIC,e.CASTFORM,e.SNORUNT,e.GLALIE,e.WALREIN,e.REGICE,e.KYOGRE,e.RAYQUAZA,e.DEOXYS,e.EMPOLEON,e.RAMPARDOS,e.BASTIODON,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.RHYPERIOR,e.GLACEON,e.MAMOSWINE,e.FROSLASS,e.PALKIA,e.REGIGIGAS,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.AMAURA,e.AURORUS,e.BERGMITE,e.AVALUGG,e.CRABOMINABLE,e.MR_RIME,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.URSALUNA,e.GARGANACL,e.CETODDLE,e.CETITAN,e.DONDOZO,e.IRON_BUNDLE,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,[e.CALYREX,"ice"],e.HISUI_SAMUROTT,e.HISUI_AVALUGG,e.BLOODMOON_URSALUNA],[A.SHADOW_CLAW]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.HAUNTER,e.GENGAR,e.RHYDON,e.KANGASKHAN,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.AIPOM,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.TYRANITAR,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.LINOONE,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.ZANGOOSE,e.ARMALDO,e.KECLEON,e.BANETTE,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METAGROSS,e.REGISTEEL,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PRINPLUP,e.EMPOLEON,e.AMBIPOM,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.RHYPERIOR,e.GALLADE,e.DIALGA,e.PALKIA,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.LEAVANNY,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.COFAGRIGUS,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.RUFFLET,e.BRAVIARY,e.HEATMOR,e.DURANT,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.PHANTUMP,e.TREVENANT,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.BEWEAR,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.MIMIKYU,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.LUNALA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.NAGANADEL,e.BLACEPHALON,e.THIEVUL,e.HATTERENE,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.RUNERIGUS,e.URSALUNA,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SKELEDIRGE,e.TAROUNTULA,e.SPIDOPS,e.TANDEMAUS,e.MAUSHOLD,e.CERULEDGE,e.GRAFAIAI,e.KLAWF,e.ANNIHILAPE,e.KINGAMBIT,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_LINOONE,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[A.THUNDER_FANG]:[e.ARBOK,e.GROWLITHE,e.ARCANINE,e.RHYHORN,e.RHYDON,e.JOLTEON,e.AERODACTYL,e.MEW,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.HOUNDOUR,e.HOUNDOOM,e.DONPHAN,e.RAIKOU,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.EXPLOUD,e.MAWILE,e.ELECTRIKE,e.MANECTRIC,e.SEVIPER,e.BAGON,e.SHELGON,e.SALAMENCE,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.RHYPERIOR,e.GLISCOR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.EELEKTRIK,e.EELEKTROSS,e.DRUDDIGON,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.ZEKROM,e.LITLEO,e.PYROAR,e.TYRUNT,e.TYRANTRUM,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.SILVALLY,e.GREEDENT,e.THIEVUL,e.YAMPER,e.BOLTUND,e.SANDACONDA,e.TOXTRICITY,e.CENTISKORCH,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.ZACIAN,e.ZAMAZENTA,e.REGIDRAGO,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.PAWMI,e.PAWMO,e.PAWMOT,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_TREADS,e.IRON_THORNS,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.OKIDOGI,e.GOUGING_FIRE,e.RAGING_BOLT,e.HISUI_GROWLITHE,e.HISUI_ARCANINE],[A.ICE_FANG]:[e.ARBOK,e.RHYHORN,e.RHYDON,e.GYARADOS,e.AERODACTYL,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SWINUB,e.PILOSWINE,e.DONPHAN,e.SUICUNE,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.EXPLOUD,e.MAWILE,e.ELECTRIKE,e.MANECTRIC,e.CARVANHA,e.SHARPEDO,e.SEVIPER,e.SNORUNT,e.GLALIE,e.WALREIN,e.HUNTAIL,e.SHINX,e.LUXIO,e.LUXRAY,e.BUIZEL,e.FLOATZEL,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.RHYPERIOR,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.FROSLASS,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.BASCULIN,e.CUBCHOO,e.BEARTIC,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TYRUNT,e.TYRANTRUM,e.BERGMITE,e.AVALUGG,e.YUNGOOS,e.GUMSHOOS,e.SILVALLY,e.BRUXISH,e.GREEDENT,e.THIEVUL,e.CHEWTLE,e.DREDNAW,e.ARROKUDA,e.BARRASKEWDA,e.MORPEKO,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.ZACIAN,e.ZAMAZENTA,e.REGIDRAGO,e.BASCULEGION,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_TREADS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.KORAIDON,e.OKIDOGI,e.GALAR_SLOWBRO,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,e.HISUI_AVALUGG],[A.FIRE_FANG]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.EKANS,e.ARBOK,e.GROWLITHE,e.ARCANINE,e.RHYHORN,e.RHYDON,e.FLAREON,e.AERODACTYL,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.HOUNDOUR,e.HOUNDOOM,e.DONPHAN,e.ENTEI,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.EXPLOUD,e.MAWILE,e.ELECTRIKE,e.MANECTRIC,e.SEVIPER,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.SHINX,e.LUXIO,e.LUXRAY,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.RHYPERIOR,e.GLISCOR,e.HEATRAN,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.LITLEO,e.PYROAR,e.TYRUNT,e.TYRANTRUM,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.SALANDIT,e.SALAZZLE,e.SILVALLY,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.GREEDENT,e.THIEVUL,e.YAMPER,e.BOLTUND,e.SANDACONDA,e.CENTISKORCH,e.MORPEKO,e.DRACOZOLT,e.ZACIAN,e.ZAMAZENTA,e.REGIDRAGO,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.SCOVILLAIN,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_JUGULIS,e.IRON_THORNS,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.OKIDOGI,e.GOUGING_FIRE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION],[A.PSYCHO_CUT]:[e.KADABRA,e.ALAKAZAM,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.STARMIE,e.SCYTHER,e.JYNX,e.KABUTOPS,e.MEWTWO,e.MEW,e.SCIZOR,e.SNEASEL,e.CELEBI,e.MEDITITE,e.MEDICHAM,e.SPINDA,e.ABSOL,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.WEAVILE,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.LIEPARD,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.HAXORUS,e.PAWNIARD,e.BISHARP,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.DECIDUEYE,e.LURANTIS,e.TAPU_LELE,e.LUNALA,e.KARTANA,e.NECROZMA,e.ORBEETLE,e.HATTERENE,e.ZACIAN,e.SPECTRIER,e.KLEAVOR,e.CERULEDGE,e.VELUZA,e.IRON_VALIANT,e.IRON_BOULDER,e.IRON_CROWN,e.GALAR_RAPIDASH,e.GALAR_ARTICUNO,[e.CALYREX,"shadow"],e.HISUI_SAMUROTT,e.HISUI_DECIDUEYE],[A.ZEN_HEADBUTT]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.LICKITUNG,e.CHANSEY,e.MR_MIME,e.JYNX,e.TAUROS,e.LAPRAS,e.PORYGON,e.SNORLAX,e.MEWTWO,e.MEW,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.GIRAFARIG,e.DUNSPARCE,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.LUGIA,e.HO_OH,e.CELEBI,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.BELDUM,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.GROUDON,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.HAPPINY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.LICKILICKY,e.TOGEKISS,e.PORYGON_Z,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.CRESSELIA,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PATRAT,e.WATCHOG,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.THROH,e.SAWK,e.BASCULIN,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.ALOMOMOLA,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BRAIXEN,e.DELPHOX,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.HOOPA,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.ORANGURU,e.SILVALLY,e.MINIOR,e.KOMALA,e.TOGEDEMARU,e.TAPU_BULU,e.SOLGALEO,e.NIHILEGO,e.CELESTEELA,e.MAGEARNA,e.MARSHADOW,e.STAKATAKA,e.BLACEPHALON,e.CINDERACE,e.DOTTLER,e.ORBEETLE,e.DUBWOOL,e.APPLETUN,e.SANDACONDA,e.MR_RIME,e.RUNERIGUS,e.FALINKS,e.EISCUE,e.INDEEDEE,e.CUFANT,e.COPPERAJAH,e.DRACOVISH,e.ARCTOVISH,e.KUBFU,e.URSHIFU,e.GLASTRIER,e.CALYREX,e.WYRDEER,e.ENAMORUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CAPSAKID,e.SCOVILLAIN,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.VELUZA,e.DONDOZO,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.SLITHER_WING,e.IRON_TREADS,e.IRON_JUGULIS,e.BAXCALIBUR,e.WO_CHIEN,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.OGERPON,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.HISUI_TYPHLOSION,e.HISUI_BRAVIARY,e.PALDEA_TAUROS],[A.FLASH_CANNON]:[e.BLASTOISE,e.MAGNEMITE,e.MAGNETON,e.ONIX,e.HORSEA,e.SEADRA,e.STARYU,e.STARMIE,e.MEW,e.FORRETRESS,e.STEELIX,e.SCIZOR,e.OCTILLERY,e.SKARMORY,e.KINGDRA,e.NOSEPASS,e.MAWILE,e.AGGRON,e.NUMEL,e.CAMERUPT,e.SPOINK,e.GRUMPIG,e.ARMALDO,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.JIRACHI,e.DEOXYS,e.EMPOLEON,e.SHIELDON,e.BASTIODON,e.BRONZOR,e.BRONZONG,e.LUCARIO,e.MAGNEZONE,e.RHYPERIOR,e.PROBOPASS,e.DIALGA,e.HEATRAN,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.SIGILYPH,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.BEHEEYEM,e.CRYOGONAL,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.DURANT,e.HYDREIGON,e.COBALION,e.THUNDURUS,e.ZEKROM,e.KYUREM,e.GENESECT,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.CARBINK,e.KLEFKI,e.BERGMITE,e.AVALUGG,e.XERNEAS,e.DIANCIE,e.VOLCANION,e.TOUCANNON,e.VIKAVOLT,e.SANDYGAST,e.PALOSSAND,e.SILVALLY,e.TURTONATOR,e.DHELMISE,e.KOMMO_O,e.SOLGALEO,e.CELESTEELA,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.MELTAN,e.MELMETAL,e.CORVIKNIGHT,e.PERRSERKER,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.NACLI,e.NACLSTACK,e.GARGANACL,e.ARMAROUGE,e.TOEDSCOOL,e.TOEDSCRUEL,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.GLIMMORA,e.KINGAMBIT,e.GREAT_TUSK,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_JUGULIS,e.IRON_MOTH,e.GHOLDENGO,e.MIRAIDON,e.ARCHALUDON,e.IRON_CROWN,[e.WORMADAM,"trash"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.GALAR_MEOWTH,e.GALAR_STUNFISK,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[A.ROCK_CLIMB]:[e.VENUSAUR,e.BLASTOISE,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.ARCANINE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.OMASTAR,e.KABUTOPS,e.SNORLAX,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.AMPHAROS,e.GLIGAR,e.STEELIX,e.GRANBULL,e.URSARING,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.TYRANITAR,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LUDICOLO,e.VIGOROTH,e.SLAKING,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AGGRON,e.ZANGOOSE,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.LUCARIO,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.MAMOSWINE,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.DRILBUR,e.EXCADRILL,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.DRUDDIGON,e.BOUFFALANT,e.DURANT,e.ROCKRUFF,e.LYCANROC,e.OBSTAGOON,e.URSALUNA,e.ANNIHILAPE,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[A.DEFOG]:[e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.FARFETCHD,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDIAN,e.CROBAT,e.TOGETIC,e.XATU,e.YANMA,e.MURKROW,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.LUGIA,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.BEAUTIFLY,e.DUSTOX,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.CASTFORM,e.TROPIUS,e.CHIMECHO,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.VESPIQUEN,e.DRIFLOON,e.DRIFBLIM,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.CHATOT,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.TOGEKISS,e.YANMEGA,e.GLISCOR,e.ROTOM,e.GIRATINA,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.COTTONEE,e.WHIMSICOTT,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.CRYOGONAL,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.FLORGES,e.HAWLUCHA,e.KLEFKI,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.COMFEY,e.SILVALLY,e.DRAMPA,e.TAPU_KOKO,e.TAPU_FINI,e.LUNALA,e.KARTANA,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.SIRFETCHD,e.FROSMOTH,e.KLEAVOR,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[A.TRICK_ROOM]:[e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.JIRACHI,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.CRESSELIA,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.WHIMSICOTT,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.INKAY,e.MALAMAR,e.CARBINK,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DIANCIE,e.HOOPA,e.COMFEY,e.ORANGURU,e.MIMIKYU,e.BRUXISH,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.MEOWSCARADA,e.ARMAROUGE,e.TOEDSCOOL,e.TOEDSCRUEL,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.FARIGIRAF,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.POLTCHAGEIST,e.SINISTCHA,e.ALOLA_EXEGGUTOR,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.GALAR_YAMASK],[A.DRACO_METEOR]:[e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.KINGDRA,e.VIBRAVA,e.FLYGON,e.ALTARIA,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.GIBLE,e.GABITE,e.GARCHOMP,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.DRAGALGE,e.TYRUNT,e.TYRANTRUM,e.GOOMY,e.SLIGGOO,e.GOODRA,e.NOIBAT,e.NOIVERN,e.ZYGARDE,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.GUZZLORD,e.NAGANADEL,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.DRACOZOLT,e.DRACOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.REGIDRAGO,e.CYCLIZAR,e.TATSUGIRI,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.DIPPLIN,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_EXEGGUTOR,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[A.LEAF_STORM]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.ROSELIA,e.CACNEA,e.CACTURNE,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,[e.WORMADAM,"plant"],e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.SKIDDO,e.GOGOAT,e.TREVENANT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.ZARUDE,e.CALYREX,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.BRUTE_BONNET,e.WO_CHIEN,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.HYDRAPPLE,e.SHAYMIN,[e.ROTOM,"mow"],e.ALOLA_EXEGGUTOR,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[A.POWER_WHIP]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGUTOR,e.LICKITUNG,e.TANGELA,e.GYARADOS,e.MEW,e.ROSELIA,e.CRADILY,e.ROSERADE,e.CARNIVINE,e.LICKILICKY,e.TANGROWTH,e.PALPITOAD,e.SEISMITOAD,e.FERROTHORN,e.GOODRA,e.GOURGEIST,e.TSAREENA,e.DHELMISE,e.XURKITREE,e.SIZZLIPEDE,e.CENTISKORCH,e.HATTERENE,e.GRIMMSNARL,e.CUFANT,e.COPPERAJAH,e.ZARUDE,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CYCLIZAR,e.WO_CHIEN,e.OGERPON,e.ALOLA_EXEGGUTOR],[A.CROSS_POISON]:[e.PARAS,e.PARASECT,e.MACHAMP,e.TENTACOOL,e.TENTACRUEL,e.SCYTHER,e.KABUTOPS,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.GLIGAR,e.SCIZOR,e.SCEPTILE,e.ANORITH,e.ARMALDO,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.TOXICROAK,e.GLISCOR,e.SCOLIPEDE,e.GARBODOR,e.JOLTIK,e.GALVANTULA,e.TOXAPEX,e.LURANTIS,e.SALAZZLE,e.NIHILEGO,e.NAGANADEL,e.OBSTAGOON,e.ETERNATUS,e.KLEAVOR,e.SHROODLE,e.GRAFAIAI,e.FEZANDIPITI],[A.GUNK_SHOT]:[e.EKANS,e.ARBOK,e.SANDSLASH,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.SNORLAX,e.MEW,e.AIPOM,e.GLIGAR,e.QWILFISH,e.TEDDIURSA,e.URSARING,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.PHANPY,e.DONPHAN,e.ZIGZAGOON,e.LINOONE,e.PELIPPER,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.GULPIN,e.SWALOT,e.ZANGOOSE,e.SEVIPER,e.SHUPPET,e.BANETTE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PACHIRISU,e.AMBIPOM,e.STUNKY,e.SKUNTANK,e.MUNCHLAX,e.CROAGUNK,e.TOXICROAK,e.GLISCOR,e.ARCEUS,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.KROOKODILE,e.TRUBBISH,e.GARBODOR,e.MINCCINO,e.CINCCINO,e.DRUDDIGON,e.GENESECT,e.FROGADIER,e.GRENINJA,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.SKRELP,e.DRAGALGE,e.HOOPA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.CRABRAWLER,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.PASSIMIAN,e.KOMALA,e.NIHILEGO,e.POIPOLE,e.NAGANADEL,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.ETERNATUS,e.URSALUNA,e.SNEASLER,e.OVERQWIL,e.SHROODLE,e.GRAFAIAI,e.RELLOR,e.RABSCA,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.ANNIHILAPE,e.CLODSIRE,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,[e.WORMADAM,"trash"],e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.IRON_HEAD]:[e.ARCANINE,e.GRAVELER,e.GOLEM,e.MAGNEMITE,e.MAGNETON,e.ONIX,e.CUBONE,e.MAROWAK,e.TAUROS,e.GYARADOS,e.LAPRAS,e.AERODACTYL,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.FORRETRESS,e.STEELIX,e.SCIZOR,e.MANTINE,e.SKARMORY,e.KINGDRA,e.PHANPY,e.DONPHAN,e.MILTANK,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.HARIYAMA,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.WAILORD,e.NUMEL,e.CAMERUPT,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.MILOTIC,e.GLALIE,e.WALREIN,e.BAGON,e.SHELGON,e.SALAMENCE,e.BELDUM,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BRONZOR,e.BRONZONG,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOWDON,e.MAGNEZONE,e.RHYPERIOR,e.MAMOSWINE,e.PROBOPASS,e.DIALGA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.ARCEUS,e.EMBOAR,e.STOUTLAND,e.GIGALITH,e.EXCADRILL,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.CARRACOSTA,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.BRAVIARY,e.DURANT,e.COBALION,e.TERRAKION,e.KYUREM,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.CARBINK,e.AVALUGG,e.INCINEROAR,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.SOLGALEO,e.NIHILEGO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.STAKATAKA,e.MELMETAL,e.CINDERACE,e.CORVIKNIGHT,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SANDACONDA,e.PERRSERKER,e.FALINKS,e.EISCUE,e.CUFANT,e.COPPERAJAH,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ENAMORUS,e.LECHONK,e.OINKOLOGNE,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CERULEDGE,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.CLODSIRE,e.FARIGIRAF,e.KINGAMBIT,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.ARCTIBAX,e.BAXCALIBUR,e.GHOLDENGO,e.ROARING_MOON,e.KORAIDON,e.OKIDOGI,e.ARCHALUDON,e.GOUGING_FIRE,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,[e.WORMADAM,"trash"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_DARMANITAN,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS],[A.STONE_EDGE]:[e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.RHYHORN,e.RHYDON,e.PINSIR,e.TAUROS,e.GYARADOS,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.DRAGONITE,e.MEWTWO,e.MEW,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.PHANPY,e.DONPHAN,e.HITMONTOP,e.ENTEI,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.BLAZIKEN,e.SWAMPERT,e.BRELOOM,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.MAWILE,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.ABSOL,e.RELICANTH,e.SALAMENCE,e.METAGROSS,e.REGIROCK,e.GROUDON,e.RAYQUAZA,e.TORTERRA,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.TOXICROAK,e.RHYPERIOR,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.ARCEUS,e.PIGNITE,e.EMBOAR,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.BEARTIC,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.DURANT,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.CARBINK,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.TURTONATOR,e.TAPU_BULU,e.SOLGALEO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.STAKATAKA,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.ZAMAZENTA,e.URSHIFU,e.KLEAVOR,e.URSALUNA,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.GLIMMET,e.GLIMMORA,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_THORNS,e.TING_LU,e.ROARING_MOON,e.ARCHALUDON,e.GOUGING_FIRE,e.IRON_BOULDER,e.TERAPAGOS,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_CORSOLA,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.STEALTH_ROCK]:[e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.PRIMEAPE,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.CUBONE,e.MAROWAK,e.RHYHORN,e.RHYDON,e.CHANSEY,e.PINSIR,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEW,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SHUCKLE,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.SKARMORY,e.PHANPY,e.DONPHAN,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.CELEBI,e.MARSHTOMP,e.SWAMPERT,e.NOSEPASS,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.KECLEON,e.RELICANTH,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.RHYPERIOR,e.GLISCOR,e.MAMOSWINE,e.PROBOPASS,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.HEATRAN,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.PALPITOAD,e.SEISMITOAD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.FERROSEED,e.FERROTHORN,e.STUNFISK,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.HYDREIGON,e.COBALION,e.TERRAKION,e.ZEKROM,e.LANDORUS,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.DIANCIE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.KOMMO_O,e.NIHILEGO,e.NECROZMA,e.STAKATAKA,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.PERRSERKER,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.KLEAVOR,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_THORNS,e.TING_LU,e.ARCHALUDON,e.TERAPAGOS,[e.WORMADAM,"sandy","trash"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_CORSOLA,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_AVALUGG,e.PALDEA_WOOPER],[A.GRASS_KNOT]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.TANGELA,e.STARMIE,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.SMOOCHUM,e.BLISSEY,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.SKITTY,e.DELCATTY,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.ROSELIA,e.SPOINK,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.KECLEON,e.TROPIUS,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.BUDEW,e.ROSERADE,[e.WORMADAM,"plant"],e.PACHIRISU,e.CHERUBI,e.CHERRIM,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.TOGEKISS,e.LEAFEON,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROTHORN,e.EELEKTROSS,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.BINACLE,e.BARBARACLE,e.HELIOPTILE,e.HELIOLISK,e.HAWLUCHA,e.DEDENNE,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.XERNEAS,e.ZYGARDE,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.CUTIEFLY,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.PASSIMIAN,e.TOGEDEMARU,e.DRAMPA,e.DHELMISE,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.NIHILEGO,e.XURKITREE,e.CELESTEELA,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.OBSTAGOON,e.MR_RIME,e.RUNERIGUS,e.ZARUDE,e.CALYREX,e.SNEASLER,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.TAROUNTULA,e.SPIDOPS,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.PALAFIN,e.FARIGIRAF,e.KINGAMBIT,e.SCREAM_TAIL,e.BRUTE_BONNET,e.WO_CHIEN,e.IRON_VALIANT,e.IRON_LEAVES,e.DIPPLIN,e.MUNKIDORI,e.OGERPON,e.HYDRAPPLE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE],[A.BUG_BITE]:[e.CATERPIE,e.METAPOD,e.BUTTERFREE,e.WEEDLE,e.KAKUNA,e.BEEDRILL,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.WEEPINBELL,e.VICTREEBEL,e.SCYTHER,e.PINSIR,e.MEW,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.YANMA,e.PINECO,e.FORRETRESS,e.GLIGAR,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.WURMPLE,e.SILCOON,e.BEAUTIFLY,e.CASCOON,e.DUSTOX,e.SURSKIT,e.MASQUERAIN,e.NINCADA,e.NINJASK,e.SHEDINJA,e.VOLBEAT,e.ILLUMISE,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ANORITH,e.ARMALDO,e.KRICKETOT,e.KRICKETUNE,e.BURMY,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.CARNIVINE,e.YANMEGA,e.GLISCOR,e.HEATRAN,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.DWEBBLE,e.CRUSTLE,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.SHELMET,e.ACCELGOR,e.HEATMOR,e.DURANT,e.LARVESTA,e.VOLCARONA,e.GENESECT,e.SCATTERBUG,e.SPEWPA,e.VIVILLON,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.GOLISOPOD,e.BUZZWOLE,e.PHEROMOSA,e.SIZZLIPEDE,e.CENTISKORCH,e.SNOM,e.FROSMOTH,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.RELLOR,e.RABSCA,e.SLITHER_WING,e.DIPPLIN,e.HYDRAPPLE],[A.CHARGE_BEAM]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.CHANSEY,e.MR_MIME,e.ELECTABUZZ,e.JOLTEON,e.PORYGON,e.ZAPDOS,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.REMORAID,e.OCTILLERY,e.PORYGON2,e.STANTLER,e.ELEKID,e.BLISSEY,e.RAIKOU,e.LUGIA,e.HO_OH,e.CELEBI,e.ZIGZAGOON,e.LINOONE,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SKITTY,e.DELCATTY,e.MAWILE,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.MAGNEZONE,e.ELECTIVIRE,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.TYNAMO,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.DRUDDIGON,e.GOLURK,e.HYDREIGON,e.THUNDURUS,e.ZEKROM,e.MELOETTA,e.GENESECT,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.DEDENNE,e.PUMPKABOO,e.GOURGEIST,e.HOOPA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.SHIINOTIC,e.ORANGURU,e.MINIOR,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.TAPU_LELE,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.NECROZMA,e.MAGEARNA,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.REGIELEKI,e.WYRDEER,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.FARIGIRAF,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.MIRAIDON,e.RAGING_BOLT,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[A.HONE_CLAWS]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.KRABBY,e.KINGLER,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.SPINARAK,e.ARIADOS,e.AIPOM,e.GLIGAR,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.TYRANITAR,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.KECLEON,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGISTEEL,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PRINPLUP,e.EMPOLEON,e.KRICKETUNE,e.VESPIQUEN,e.AMBIPOM,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.GIBLE,e.GABITE,e.GARCHOMP,e.LUCARIO,e.SKORUPI,e.DRAPION,e.WEAVILE,e.GLISCOR,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.LEAVANNY,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.FERROSEED,e.FERROTHORN,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.RUFFLET,e.BRAVIARY,e.HEATMOR,e.DURANT,e.COBALION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.GENESECT,e.QUILLADIN,e.CHESNAUGHT,e.TALONFLAME,e.PANGORO,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.TREVENANT,e.NOIVERN,e.YVELTAL,e.MIMIKYU,e.ZERAORA,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.OBSTAGOON,e.PERRSERKER,e.DURALUDON,e.URSALUNA,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.MASCHIFF,e.MABOSSTIFF,e.BOMBIRDIER,e.KINGAMBIT,e.WALKING_WAKE,e.ARCHALUDON,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.GALAR_MEOWTH,e.GALAR_LINOONE,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY],[A.WONDER_ROOM]:[e.CLEFAIRY,e.CLEFABLE,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.MEWTWO,e.MEW,e.CLEFFA,e.UMBREON,e.SLOWKING,e.MISDREAVUS,e.PORYGON2,e.SMOOCHUM,e.LUGIA,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SABLEYE,e.ALTARIA,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.KECLEON,e.DUSKULL,e.DUSCLOPS,e.LATIOS,e.DEOXYS,e.MISMAGIUS,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.DARKRAI,e.MUNNA,e.MUSHARNA,e.YAMASK,e.COFAGRIGUS,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.MELOETTA,e.BRAIXEN,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.CARBINK,e.XERNEAS,e.DIANCIE,e.HOOPA,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.MORELULL,e.SHIINOTIC,e.ORANGURU,e.BRUXISH,e.TAPU_LELE,e.TAPU_FINI,e.LUNALA,e.NIHILEGO,e.STAKATAKA,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATTERENE,e.GRIMMSNARL,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.STONJOURNER,e.INDEEDEE,e.CALYREX,e.ALOLA_NINETALES,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_YAMASK],[A.PSYSHOCK]:[e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.MEWTWO,e.MEW,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.LUGIA,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.TOGEKISS,e.PORYGON_Z,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.AROMATISSE,e.INKAY,e.MALAMAR,e.SYLVEON,e.KLEFKI,e.XERNEAS,e.DIANCIE,e.HOOPA,e.ORANGURU,e.BRUXISH,e.TAPU_LELE,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.NECROZMA,e.MAGEARNA,e.BLACEPHALON,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.ALCREMIE,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.FARIGIRAF,e.GREAT_TUSK,e.SCREAM_TAIL,e.FLUTTER_MANE,e.GHOLDENGO,e.IRON_VALIANT,e.MUNKIDORI,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_NINETALES,e.ALOLA_EXEGGUTOR,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[A.VENOSHOCK]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BUTTERFREE,e.BEEDRILL,e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.BELLOSSOM,e.PINECO,e.FORRETRESS,e.GLIGAR,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.BEAUTIFLY,e.DUSTOX,e.SHROOMISH,e.BRELOOM,e.ROSELIA,e.GULPIN,e.SWALOT,e.CACNEA,e.CACTURNE,e.SEVIPER,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.GLISCOR,e.SEISMITOAD,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.TRUBBISH,e.GARBODOR,e.FOONGUS,e.AMOONGUSS,e.SHELMET,e.ACCELGOR,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.GOLISOPOD,e.TURTONATOR,e.BRUXISH,e.NIHILEGO,e.POIPOLE,e.NAGANADEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.PINCURCHIN,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.BRUTE_BONNET,e.IRON_MOTH,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_RATICATE,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.PALDEA_WOOPER],[A.MAGIC_ROOM]:[e.WIGGLYTUFF,e.ABRA,e.KADABRA,e.ALAKAZAM,e.DROWZEE,e.HYPNO,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.ESPEON,e.MISDREAVUS,e.STANTLER,e.SMOOCHUM,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.LUNATONE,e.SHUPPET,e.BANETTE,e.LATIAS,e.JIRACHI,e.MISMAGIUS,e.MIME_JR,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.KLEFKI,e.HOOPA,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.MORELULL,e.SHIINOTIC,e.ORANGURU,e.MIMIKYU,e.BRUXISH,e.TAPU_LELE,e.TAPU_FINI,e.LUNALA,e.STAKATAKA,e.DOTTLER,e.ORBEETLE,e.HATTERENE,e.MR_RIME,e.ALCREMIE,e.INDEEDEE,e.CALYREX,e.ALOLA_RAICHU,e.GALAR_RAPIDASH,e.GALAR_MR_MIME],[A.SMACK_DOWN]:[e.BLASTOISE,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.CUBONE,e.MAROWAK,e.RHYHORN,e.RHYDON,e.PINSIR,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.MEW,e.SUDOWOODO,e.AIPOM,e.STEELIX,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.REMORAID,e.OCTILLERY,e.PHANPY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.AGGRON,e.CAMERUPT,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.RELICANTH,e.REGIROCK,e.GROUDON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.AMBIPOM,e.BONSLY,e.RHYPERIOR,e.MAMOSWINE,e.PROBOPASS,e.REGIGIGAS,e.EMBOAR,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.KROOKODILE,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.GARBODOR,e.DRUDDIGON,e.TERRAKION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.CARBINK,e.DIANCIE,e.VOLCANION,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.PASSIMIAN,e.TURTONATOR,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.MARSHADOW,e.STAKATAKA,e.BLACEPHALON,e.CINDERACE,e.INTELEON,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.STONJOURNER,e.COPPERAJAH,e.KLEAVOR,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.TINKATON,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.ANNIHILAPE,e.GREAT_TUSK,e.IRON_THORNS,e.ARCHALUDON,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.GALAR_SLOWBRO,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[A.SLUDGE_WAVE]:[e.EKANS,e.ARBOK,e.NIDOQUEEN,e.NIDOKING,e.VILEPLUME,e.VENOMOTH,e.DUGTRIO,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.MEW,e.SPINARAK,e.ARIADOS,e.WOOPER,e.QUAGSIRE,e.QWILFISH,e.SHUCKLE,e.OCTILLERY,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.GULPIN,e.SWALOT,e.SEVIPER,e.CRAWDAUNT,e.CRADILY,e.GASTRODON,e.STUNKY,e.SKUNTANK,e.CROAGUNK,e.TOXICROAK,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.TRUBBISH,e.GARBODOR,e.FRILLISH,e.JELLICENT,e.STUNFISK,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOOMY,e.SLIGGOO,e.GOODRA,e.ZYGARDE,e.VOLCANION,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.GOLISOPOD,e.DHELMISE,e.NIHILEGO,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.TOXTRICITY,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.SHROODLE,e.GRAFAIAI,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.IRON_MOTH,e.OKIDOGI,e.MUNKIDORI,e.PECHARUNT,e.ALOLA_RATICATE,e.ALOLA_DUGTRIO,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_STUNFISK,e.HISUI_SNEASEL,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.PALDEA_WOOPER],[A.HEAVY_SLAM]:[e.MACHOP,e.MACHOKE,e.MACHAMP,e.GRAVELER,e.GOLEM,e.MAGNEMITE,e.MAGNETON,e.ONIX,e.RHYHORN,e.RHYDON,e.SNORLAX,e.MEW,e.FORRETRESS,e.STEELIX,e.PHANPY,e.DONPHAN,e.MILTANK,e.TYRANITAR,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.WALREIN,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BRONZOR,e.BRONZONG,e.HIPPOWDON,e.MAGNEZONE,e.RHYPERIOR,e.MAMOSWINE,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.CRUSTLE,e.FERROTHORN,e.EELEKTROSS,e.CUBCHOO,e.BEARTIC,e.GOLETT,e.GOLURK,e.COBALION,e.CARBINK,e.AVALUGG,e.VOLCANION,e.MUDBRAY,e.MUDSDALE,e.TURTONATOR,e.DHELMISE,e.SOLGALEO,e.CELESTEELA,e.GUZZLORD,e.MAGEARNA,e.STAKATAKA,e.MELMETAL,e.CORVIKNIGHT,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.PERRSERKER,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ZAMAZENTA,e.GLASTRIER,e.URSALUNA,e.NACLI,e.NACLSTACK,e.GARGANACL,e.TINKATON,e.REVAVROOM,e.ORTHWORM,e.CETODDLE,e.CETITAN,e.DONDOZO,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.TING_LU,e.KORAIDON,e.MIRAIDON,e.ARCHALUDON,e.HYDRAPPLE,e.RAGING_BOLT,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_GOLEM,[e.CALYREX,"ice"],e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.BLOODMOON_URSALUNA],[A.ELECTRO_BALL]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.ELECTABUZZ,e.JOLTEON,e.ZAPDOS,e.MEWTWO,e.MEW,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.ELEKID,e.RAIKOU,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.ROTOM,e.BLITZLE,e.ZEBSTRIKA,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.THUNDURUS,e.ZEKROM,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.XURKITREE,e.MAGEARNA,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.WOOLOO,e.DUBWOOL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.REGIELEKI,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.RABSCA,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_THORNS,e.GHOLDENGO,e.MIRAIDON,e.RAGING_BOLT,e.ALOLA_RAICHU,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[A.FLAME_CHARGE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.VULPIX,e.NINETALES,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.MAGMORTAR,e.HEATRAN,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.BLITZLE,e.ZEBSTRIKA,e.DARUMAKA,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.GENESECT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.PUMPKABOO,e.GOURGEIST,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.SALANDIT,e.SALAZZLE,e.TYPE_NULL,e.SILVALLY,e.TURTONATOR,e.SOLGALEO,e.CELESTEELA,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.YAMPER,e.CARKOL,e.COALOSSAL,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SLITHER_WING,e.IRON_MOTH,e.CHI_YU,e.KORAIDON,e.GOUGING_FIRE,e.ALOLA_MAROWAK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,[e.PALDEA_TAUROS,"blaze"]],[A.LOW_SWEEP]:[e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.DROWZEE,e.HYPNO,e.HITMONLEE,e.HITMONCHAN,e.ELECTABUZZ,e.MAGMAR,e.MEWTWO,e.MEW,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.SNEASEL,e.TYROGUE,e.HITMONTOP,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.GRUMPIG,e.ZANGOOSE,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.PIGNITE,e.EMBOAR,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ZOROARK,e.GOTHITELLE,e.HAXORUS,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.GRENINJA,e.PANCHAM,e.PANGORO,e.HELIOPTILE,e.HELIOLISK,e.HAWLUCHA,e.DECIDUEYE,e.INCINEROAR,e.GUMSHOOS,e.MUDBRAY,e.MUDSDALE,e.LURANTIS,e.STUFFUL,e.BEWEAR,e.STEENEE,e.TSAREENA,e.PASSIMIAN,e.KOMALA,e.BUZZWOLE,e.PHEROMOSA,e.MARSHADOW,e.ZERAORA,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.GRIMMSNARL,e.STONJOURNER,e.KUBFU,e.URSHIFU,e.ZARUDE,e.SNEASLER,e.FLORAGATO,e.MEOWSCARADA,e.QUAXWELL,e.QUAQUAVAL,e.LOKIX,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.GRAFAIAI,e.FLAMIGO,e.ANNIHILAPE,e.KINGAMBIT,e.SLITHER_WING,e.IRON_HANDS,e.GHOLDENGO,e.KORAIDON,e.OKIDOGI,e.OGERPON,[e.LYCANROC,"midnight"],e.GALAR_ZAPDOS,e.GALAR_SLOWKING,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE],[A.ACID_SPRAY]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.EKANS,e.ARBOK,e.ODDISH,e.GLOOM,e.VILEPLUME,e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.MAGMAR,e.MEW,e.SPINARAK,e.ARIADOS,e.BELLOSSOM,e.WOOPER,e.QUAGSIRE,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.MAGBY,e.GULPIN,e.SWALOT,e.SEVIPER,e.STUNKY,e.SKUNTANK,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.MAGMORTAR,e.ARCEUS,e.SCRAGGY,e.SCRAFTY,e.TRUBBISH,e.GARBODOR,e.KARRABLAST,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.EELEKTRIK,e.EELEKTROSS,e.ACCELGOR,e.SKRELP,e.DRAGALGE,e.SLIGGOO,e.GOODRA,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.NIHILEGO,e.FLAPPLE,e.TOXTRICITY,e.SNEASLER,e.OVERQWIL,e.ARMAROUGE,e.TADBULB,e.BELLIBOLT,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.IRON_MOTH,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.PALDEA_WOOPER],[A.FOUL_PLAY]:[e.VULPIX,e.NINETALES,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.MR_MIME,e.PORYGON,e.MEWTWO,e.MEW,e.SPINARAK,e.ARIADOS,e.XATU,e.SUDOWOODO,e.AIPOM,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.SNEASEL,e.DELIBIRD,e.HOUNDOUR,e.HOUNDOOM,e.PORYGON2,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.MASQUERAIN,e.SABLEYE,e.MAWILE,e.CACNEA,e.CACTURNE,e.KECLEON,e.SHUPPET,e.BANETTE,e.ABSOL,e.GLALIE,e.AMBIPOM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BONSLY,e.SPIRITOMB,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.PORYGON_Z,e.ROTOM,e.UXIE,e.DARKRAI,e.ARCEUS,e.PURRLOIN,e.LIEPARD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.FOONGUS,e.AMOONGUSS,e.STUNFISK,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.TORNADUS,e.THUNDURUS,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.YVELTAL,e.HOOPA,e.SALANDIT,e.SALAZZLE,e.ORANGURU,e.NIHILEGO,e.PHEROMOSA,e.MARSHADOW,e.BLACEPHALON,e.NICKIT,e.THIEVUL,e.SINISTEA,e.POLTEAGEIST,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.MR_RIME,e.MORPEKO,e.DURALUDON,e.SPECTRIER,e.MEOWSCARADA,e.SQUAWKABILLY,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FARIGIRAF,e.KINGAMBIT,e.WO_CHIEN,e.POLTCHAGEIST,e.SINISTCHA,e.ARCHALUDON,e.PECHARUNT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MUK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_STUNFISK,[e.URSHIFU,"single-strike"],[e.CALYREX,"shadow"],e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_ZORUA,e.HISUI_ZOROARK],[A.ROUND]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK],[A.ECHOED_VOICE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SPEAROW,e.FEAROW,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.CUBONE,e.MAROWAK,e.CHANSEY,e.JYNX,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.POLITOED,e.ESPEON,e.UMBREON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PHANPY,e.DONPHAN,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.LUGIA,e.HO_OH,e.CELEBI,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.SKITTY,e.DELCATTY,e.PLUSLE,e.MINUN,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.SWABLU,e.ALTARIA,e.CHIMECHO,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.HAPPINY,e.CHATOT,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PURRLOIN,e.LIEPARD,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.AUDINO,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.ELGYEM,e.BEHEEYEM,e.CUBCHOO,e.BEARTIC,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.AMAURA,e.AURORUS,e.SYLVEON,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.COMFEY,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.NIHILEGO,e.PHEROMOSA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.ZERAORA,e.ARCTOZOLT,e.LECHONK,e.OINKOLOGNE,e.TANDEMAUS,e.MAUSHOLD,e.CETODDLE,e.CETITAN,e.ALOLA_RAICHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE],[A.STORED_POWER]:[e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.MR_MIME,e.JYNX,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.ESPEON,e.UMBREON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.STANTLER,e.SMOOCHUM,e.BLISSEY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.CLAYDOL,e.CHIMECHO,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MANAPHY,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLABEBE,e.FLOETTE,e.FLORGES,e.MEOWSTIC,e.INKAY,e.MALAMAR,e.SYLVEON,e.KLEFKI,e.DIANCIE,e.PRIMARINA,e.RIBOMBEE,e.COMFEY,e.ORANGURU,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.NECROZMA,e.MAGEARNA,e.BLACEPHALON,e.DOTTLER,e.ORBEETLE,e.TOXTRICITY,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.ARMAROUGE,e.CERULEDGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.VELUZA,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.MUNKIDORI,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ETERNAL_FLOETTE,e.ALOLA_NINETALES,e.ALOLA_EXEGGUTOR,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[A.ALLY_SWITCH]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.ABRA,e.KADABRA,e.ALAKAZAM,e.PONYTA,e.RAPIDASH,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.MAROWAK,e.CHANSEY,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.FORRETRESS,e.PORYGON2,e.TYROGUE,e.BLISSEY,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHEDINJA,e.SABLEYE,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.WORMADAM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.MAGNEZONE,e.TOGEKISS,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MUNNA,e.MUSHARNA,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.YAMASK,e.COFAGRIGUS,e.ARCHEN,e.ARCHEOPS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.KLANG,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.MELOETTA,e.GENESECT,e.BRAIXEN,e.DELPHOX,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.INKAY,e.MALAMAR,e.HELIOPTILE,e.HELIOLISK,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DIANCIE,e.HOOPA,e.CUTIEFLY,e.RIBOMBEE,e.COMFEY,e.ORANGURU,e.BRUXISH,e.DHELMISE,e.TAPU_LELE,e.NIHILEGO,e.NECROZMA,e.NAGANADEL,e.STAKATAKA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.DRAKLOAK,e.DRAGAPULT,e.CALYREX,e.SPRIGATITO,e.ARMAROUGE,e.CERULEDGE,e.FLITTLE,e.GREAVARD,e.IRON_LEAVES,e.ALOLA_RAICHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_YAMASK],[A.SCALD]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.KRABBY,e.KINGLER,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.GYARADOS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.RAIKOU,e.SUICUNE,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.AZURILL,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.KYOGRE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.FINNEON,e.LUMINEON,e.MANTYKE,e.PHIONE,e.MANAPHY,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.STUNFISK,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOODRA,e.VOLCANION,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABRAWLER,e.CRABOMINABLE,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.WIMPOD,e.GOLISOPOD,e.BRUXISH,e.TAPU_FINI,e.INTELEON,e.DREDNAW,e.CARKOL,e.COALOSSAL,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.SIZZLIPEDE,e.CENTISKORCH,e.CURSOLA,e.PINCURCHIN,e.DRACOVISH,e.DRAKLOAK,e.DRAGAPULT,e.WALKING_WAKE,e.POLTCHAGEIST,e.SINISTCHA,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_STUNFISK,[e.URSHIFU,"rapid-strike"]],[A.HEX]:[e.NIDOQUEEN,e.NIDOKING,e.VULPIX,e.NINETALES,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.HYPNO,e.MEWTWO,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.MURKROW,e.MISDREAVUS,e.DUNSPARCE,e.QWILFISH,e.SHIFTRY,e.SHEDINJA,e.SABLEYE,e.BALTOY,e.CLAYDOL,e.CASTFORM,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.SNORUNT,e.GLALIE,e.VESPIQUEN,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.SPIRITOMB,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.GIRATINA,e.ARCEUS,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.EELEKTROSS,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.DELPHOX,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DECIDUEYE,e.TOXAPEX,e.SANDYGAST,e.PALOSSAND,e.MIMIKYU,e.DHELMISE,e.LUNALA,e.NIHILEGO,e.MARSHADOW,e.NAGANADEL,e.TOXTRICITY,e.SINISTEA,e.POLTEAGEIST,e.CURSOLA,e.RUNERIGUS,e.PINCURCHIN,e.DRAKLOAK,e.DRAGAPULT,e.SPECTRIER,e.BASCULEGION,e.SKELEDIRGE,e.CERULEDGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.ESPATHRA,e.GREAVARD,e.HOUNDSTONE,e.DUDUNSPARCE,e.BRUTE_BONNET,e.FLUTTER_MANE,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.IRON_VALIANT,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_ZORUA,e.HISUI_ZOROARK],[A.SKY_DROP]:[e.CHARIZARD,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.SKARMORY,e.LUGIA,e.HO_OH,e.PELIPPER,e.RAYQUAZA,e.RUFFLET,e.BRAVIARY,e.TORNADUS,e.THUNDURUS,e.HAWLUCHA,e.YVELTAL,e.VIKAVOLT,e.TAPU_KOKO,e.LUNALA,e.NAGANADEL],[A.INCINERATE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GROWLITHE,e.ARCANINE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MAGMAR,e.TAUROS,e.GYARADOS,e.FLAREON,e.AERODACTYL,e.SNORLAX,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.SLOWKING,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.SLUGMA,e.MAGCARGO,e.REMORAID,e.OCTILLERY,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.BLISSEY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.POOCHYENA,e.MIGHTYENA,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.SABLEYE,e.MAWILE,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.SOLROCK,e.CASTFORM,e.KECLEON,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.HAPPINY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.LICKILICKY,e.RHYPERIOR,e.MAGMORTAR,e.TOGEKISS,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.DARKRAI,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.AUDINO,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.GOODRA,e.PUMPKABOO,e.GOURGEIST,e.VOLCANION,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.BLACEPHALON,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.DUDUNSPARCE,e.CHI_YU,e.ROARING_MOON,e.GOUGING_FIRE,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_GOODRA,e.PALDEA_TAUROS],[A.QUASH]:[e.NIDOQUEEN,e.NIDOKING,e.KINGLER,e.MEW,e.MURKROW,e.SLOWKING,e.KINGDRA,e.RAIKOU,e.ENTEI,e.SUICUNE,e.SLAKING,e.SABLEYE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.VESPIQUEN,e.HONCHKROW,e.SPIRITOMB,e.ARCEUS,e.PANCHAM,e.PANGORO,e.HOOPA,e.INCINEROAR,e.ORICORIO,e.ORANGURU,e.PALOSSAND,e.PYUKUMUKU,e.KOMALA,e.BLACEPHALON,e.HATENNA,e.MORPEKO,e.TINKATINK,e.IRON_LEAVES,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK],[A.ACROBATICS]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.MANKEY,e.PRIMEAPE,e.FARFETCHD,e.SCYTHER,e.ZAPDOS,e.MOLTRES,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.MURKROW,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BLAZIKEN,e.BEAUTIFLY,e.DUSTOX,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.SWABLU,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.VESPIQUEN,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.LOPUNNY,e.HONCHKROW,e.FINNEON,e.LUMINEON,e.MANTYKE,e.GLISCOR,e.UXIE,e.MESPRIT,e.AZELF,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.WOOBAT,e.SWOOBAT,e.ARCHEN,e.ARCHEOPS,e.SWANNA,e.EMOLGA,e.ALOMOMOLA,e.EELEKTRIK,e.EELEKTROSS,e.CRYOGONAL,e.MIENFOO,e.MIENSHAO,e.RUFFLET,e.BRAVIARY,e.MANDIBUZZ,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.MELOETTA,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.SALAZZLE,e.TSAREENA,e.COMFEY,e.PASSIMIAN,e.MINIOR,e.KOMALA,e.TAPU_KOKO,e.LUNALA,e.CELESTEELA,e.MARSHADOW,e.NAGANADEL,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.INTELEON,e.THIEVUL,e.FLAPPLE,e.CRAMORANT,e.FROSMOTH,e.DRAKLOAK,e.DRAGAPULT,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.KLEAVOR,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.WATTREL,e.KILOWATTREL,e.SHROODLE,e.GRAFAIAI,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.CYCLIZAR,e.FLAMIGO,e.ANNIHILAPE,e.SLITHER_WING,e.IRON_BUNDLE,e.IRON_JUGULIS,e.IRON_MOTH,e.CHIEN_PAO,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.FEZANDIPITI,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY],[A.RETALIATE]:[e.RATTATA,e.RATICATE,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.FARFETCHD,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.CHANSEY,e.KANGASKHAN,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEW,e.SENTRET,e.FURRET,e.TOGETIC,e.AIPOM,e.ESPEON,e.UMBREON,e.MURKROW,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.HOUNDOUR,e.HOUNDOOM,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.CARVANHA,e.SHARPEDO,e.SPINDA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CRAWDAUNT,e.CASTFORM,e.KECLEON,e.ABSOL,e.LATIAS,e.LATIOS,e.MONFERNO,e.INFERNAPE,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.SPIRITOMB,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.LICKILICKY,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.REGIGIGAS,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.LEAVANNY,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.DURANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.ZYGARDE,e.PASSIMIAN,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DUBWOOL,e.CLOBBOPUS,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.FALINKS,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.MASCHIFF,e.KINGAMBIT,e.IRON_LEAVES,e.OGERPON,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SAMUROTT],[A.WATER_PLEDGE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.SILVALLY,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.HISUI_SAMUROTT],[A.FIRE_PLEDGE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SILVALLY,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.HISUI_TYPHLOSION],[A.GRASS_PLEDGE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TURTWIG,e.GROTLE,e.TORTERRA,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.SILVALLY,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.HISUI_DECIDUEYE],[A.VOLT_SWITCH]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.ELECTABUZZ,e.JOLTEON,e.ZAPDOS,e.MEW,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.FORRETRESS,e.ELEKID,e.RAIKOU,e.NOSEPASS,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.PROBOPASS,e.ROTOM,e.BLITZLE,e.ZEBSTRIKA,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.COBALION,e.THUNDURUS,e.ZEKROM,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.XURKITREE,e.MAGEARNA,e.ZERAORA,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.MORPEKO,e.REGIELEKI,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.MIRAIDON,e.RAGING_BOLT,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[A.STRUGGLE_BUG]:[e.BUTTERFREE,e.BEEDRILL,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.SCYTHER,e.PINSIR,e.MEW,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.YANMA,e.PINECO,e.FORRETRESS,e.GLIGAR,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.BEAUTIFLY,e.DUSTOX,e.SURSKIT,e.MASQUERAIN,e.NINCADA,e.NINJASK,e.SHEDINJA,e.VOLBEAT,e.ILLUMISE,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ANORITH,e.ARMALDO,e.STARAPTOR,e.KRICKETOT,e.KRICKETUNE,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.YANMEGA,e.GLISCOR,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.DWEBBLE,e.CRUSTLE,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.SHELMET,e.ACCELGOR,e.DURANT,e.LARVESTA,e.VOLCARONA,e.GENESECT,e.SCATTERBUG,e.SPEWPA,e.VIVILLON,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.WIMPOD,e.GOLISOPOD,e.BLIPBUG,e.DOTTLER,e.ORBEETLE,e.SIZZLIPEDE,e.SNOM,e.FROSMOTH,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.RELLOR,e.RABSCA,e.IRON_MOTH],[A.BULLDOZE]:[e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.ONIX,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.AERODACTYL,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.MANTINE,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.SCEPTILE,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.SWALOT,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ALTARIA,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.MILOTIC,e.DUSCLOPS,e.TROPIUS,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.RELICANTH,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.PURUGLY,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.MANTYKE,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.ARCEUS,e.PIGNITE,e.EMBOAR,e.SAMUROTT,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.CONKELDURR,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.DEERLING,e.SAWSBUCK,e.FERROTHORN,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.HYDREIGON,e.TERRAKION,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.BINACLE,e.BARBARACLE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.GOODRA,e.PHANTUMP,e.TREVENANT,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.KOMALA,e.TURTONATOR,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.STAKATAKA,e.RILLABOOM,e.GREEDENT,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.GLASTRIER,e.SPECTRIER,e.WYRDEER,e.URSALUNA,e.LECHONK,e.OINKOLOGNE,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.BAXCALIBUR,e.TING_LU,e.KORAIDON,e.GOUGING_FIRE,e.IRON_BOULDER,e.IRON_CROWN,[e.WORMADAM,"sandy"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,[e.CALYREX,"ice","shadow"],e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.FROST_BREATH]:[e.DEWGONG,e.CLOYSTER,e.JYNX,e.LAPRAS,e.ARTICUNO,e.MEW,e.DELIBIRD,e.SMOOCHUM,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.REGICE,e.SNOVER,e.ABOMASNOW,e.GLACEON,e.FROSLASS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.AMAURA,e.AURORUS,e.BERGMITE,e.AVALUGG,e.CRABRAWLER,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.BRUXISH,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES],[A.DRAGON_TAIL]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BLASTOISE,e.ARBOK,e.NIDOQUEEN,e.NIDOKING,e.ONIX,e.LICKITUNG,e.RHYDON,e.GYARADOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.MEGANIUM,e.FERALIGATR,e.AMPHAROS,e.SLOWKING,e.STEELIX,e.TYRANITAR,e.LUGIA,e.AGGRON,e.VIBRAVA,e.FLYGON,e.SEVIPER,e.MILOTIC,e.TROPIUS,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.RAMPARDOS,e.GIBLE,e.GABITE,e.GARCHOMP,e.LICKILICKY,e.RHYPERIOR,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.SERPERIOR,e.SAMUROTT,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ARCHEOPS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.SKRELP,e.DRAGALGE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.GOODRA,e.NOIVERN,e.ZYGARDE,e.SALAZZLE,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.GUZZLORD,e.NAGANADEL,e.CHEWTLE,e.APPLETUN,e.DRACOZOLT,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.CYCLIZAR,e.DUDUNSPARCE,e.IRON_JUGULIS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.DIPPLIN,e.ARCHALUDON,e.HYDRAPPLE,e.RAGING_BOLT,e.ALOLA_EXEGGUTOR,e.HISUI_GOODRA],[A.WORK_UP]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.FARFETCHD,e.DODUO,e.DODRIO,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.CHANSEY,e.KANGASKHAN,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.AIPOM,e.ESPEON,e.UMBREON,e.GIRAFARIG,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.TAILLOW,e.SWELLOW,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.SKITTY,e.DELCATTY,e.MEDITITE,e.MEDICHAM,e.SPINDA,e.ZANGOOSE,e.CASTFORM,e.KECLEON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.HAPPINY,e.CHATOT,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.LICKILICKY,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.MIENFOO,e.MIENSHAO,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SYLVEON,e.HAWLUCHA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CLOBBOPUS,e.GRAPPLOCT,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.CUFANT,e.COPPERAJAH,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.FIDOUGH,e.DACHSBUN,e.IRON_JUGULIS,e.IRON_LEAVES,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,[e.LYCANROC,"dusk"],e.GALAR_MEOWTH,e.GALAR_FARFETCHD,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.PALDEA_TAUROS],[A.ELECTROWEB]:[e.CATERPIE,e.METAPOD,e.BUTTERFREE,e.WEEDLE,e.KAKUNA,e.BEEDRILL,e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.ELECTABUZZ,e.PORYGON,e.MEW,e.SPINARAK,e.ARIADOS,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.PORYGON2,e.ELEKID,e.WURMPLE,e.SILCOON,e.BEAUTIFLY,e.CASCOON,e.DUSTOX,e.PLUSLE,e.MINUN,e.BURMY,e.WORMADAM,e.MOTHIM,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.PORYGON_Z,e.ROTOM,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.STUNFISK,e.THUNDURUS,e.GENESECT,e.SPEWPA,e.VIVILLON,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.PASSIMIAN,e.TOGEDEMARU,e.TAPU_KOKO,e.PHEROMOSA,e.XURKITREE,e.MAGEARNA,e.ZERAORA,e.MORPEKO,e.REGIELEKI,e.SPIDOPS,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.SANDY_SHOCKS,e.IRON_THORNS,e.RAGING_BOLT,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM],[A.WILD_CHARGE]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.CHANSEY,e.ELECTABUZZ,e.TAUROS,e.JOLTEON,e.SNORLAX,e.ZAPDOS,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.CHINCHOU,e.LANTURN,e.PICHU,e.IGGLYBUFF,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.STANTLER,e.ELEKID,e.BLISSEY,e.RAIKOU,e.SLAKING,e.SKITTY,e.DELCATTY,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.SPINDA,e.RAYQUAZA,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.BLITZLE,e.ZEBSTRIKA,e.AUDINO,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.BOUFFALANT,e.LARVESTA,e.VOLCARONA,e.THUNDURUS,e.ZEKROM,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.FURFROU,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.NOIBAT,e.NOIVERN,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.SOLGALEO,e.XURKITREE,e.ZERAORA,e.GREEDENT,e.WOOLOO,e.DUBWOOL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.ZACIAN,e.ZAMAZENTA,e.REGIELEKI,e.WYRDEER,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MABOSSTIFF,e.CYCLIZAR,e.DUDUNSPARCE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.KORAIDON,e.MIRAIDON,e.IRON_LEAVES,e.RAGING_BOLT,e.IRON_BOULDER,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.PALDEA_TAUROS],[A.DRILL_RUN]:[e.BEEDRILL,e.SPEAROW,e.FEAROW,e.SANDSLASH,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.RAPIDASH,e.DODRIO,e.SEEL,e.DEWGONG,e.CLOYSTER,e.ONIX,e.RHYHORN,e.RHYDON,e.GOLDEEN,e.SEAKING,e.LAPRAS,e.MEW,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.STEELIX,e.SKARMORY,e.DELIBIRD,e.HITMONTOP,e.BALTOY,e.CLAYDOL,e.RHYPERIOR,e.SAMUROTT,e.DRILBUR,e.EXCADRILL,e.KARRABLAST,e.ESCAVALIER,[e.LYCANROC,"midday","dusk"],e.GOLISOPOD,e.PHEROMOSA,e.SILICOBRA,e.SANDACONDA,e.ARROKUDA,e.BARRASKEWDA,e.BOMBIRDIER,e.VELUZA,e.DUDUNSPARCE,e.ALOLA_SANDSLASH,e.GALAR_RAPIDASH,e.HISUI_SAMUROTT,e.PALDEA_TAUROS],[A.RAZOR_SHELL]:[e.SLOWBRO,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.KABUTOPS,e.MEW,e.SLOWKING,e.CORPHISH,e.CRAWDAUNT,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.CARRACOSTA,e.ESCAVALIER,e.BINACLE,e.BARBARACLE,e.GOLISOPOD,e.DREDNAW,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.HISUI_SAMUROTT],[A.HEAT_CRASH]:[e.CHARIZARD,e.ARCANINE,e.RHYDON,e.SNORLAX,e.MEW,e.SLUGMA,e.MAGCARGO,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GROUDON,e.RHYPERIOR,e.MAGMORTAR,e.HEATRAN,e.REGIGIGAS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.GOLURK,e.RESHIRAM,e.VOLCANION,e.INCINEROAR,e.TURTONATOR,e.SOLGALEO,e.GUZZLORD,e.STAKATAKA,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SIZZLIPEDE,e.CENTISKORCH,e.STONJOURNER,e.COPPERAJAH,e.SKELEDIRGE,e.SLITHER_WING,e.KORAIDON,e.GOUGING_FIRE,e.TERAPAGOS,e.HISUI_ARCANINE],[A.TAIL_SLAP]:[e.VULPIX,e.NINETALES,e.MEW,e.AIPOM,e.ZIGZAGOON,e.LINOONE,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.STUNKY,e.SKUNTANK,e.MINCCINO,e.CINCCINO,e.MEOWSTIC,[e.LYCANROC,"midday","dusk"],e.SKWOVET,e.GREEDENT,e.NICKIT,e.THIEVUL,e.ZACIAN,e.ZAMAZENTA,e.FEZANDIPITI,e.ALOLA_VULPIX,e.ALOLA_NINETALES],[A.HURRICANE]:[e.CHARIZARD,e.BUTTERFREE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.GYARADOS,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.MURKROW,e.MANTINE,e.KINGDRA,e.LUGIA,e.SHIFTRY,e.TAILLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.SWABLU,e.ALTARIA,e.CASTFORM,e.TROPIUS,e.SALAMENCE,e.RAYQUAZA,e.STARLY,e.STARAVIA,e.STARAPTOR,e.VESPIQUEN,e.HONCHKROW,e.ARCEUS,e.UNFEZANT,e.WHIMSICOTT,e.DUCKLETT,e.SWANNA,e.RUFFLET,e.BRAVIARY,e.MANDIBUZZ,e.VOLCARONA,e.TORNADUS,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.DECIDUEYE,e.ORICORIO,e.DRAMPA,e.CORVISQUIRE,e.CORVIKNIGHT,e.SANDACONDA,e.CRAMORANT,e.FROSMOTH,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.DUDUNSPARCE,e.SLITHER_WING,e.IRON_JUGULIS,e.IRON_MOTH,e.ROARING_MOON,e.WALKING_WAKE,e.FEZANDIPITI,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY],[A.SNARL]:[e.EKANS,e.ARBOK,e.VULPIX,e.NINETALES,e.MEOWTH,e.PERSIAN,e.GROWLITHE,e.ARCANINE,e.MEW,e.UMBREON,e.MURKROW,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.SABLEYE,e.ELECTRIKE,e.MANECTRIC,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.SEVIPER,e.CRAWDAUNT,e.CHIMECHO,e.ABSOL,e.SHINX,e.LUXIO,e.LUXRAY,e.FLOATZEL,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.SPIRITOMB,e.DRAPION,e.WEAVILE,e.DARKRAI,e.ARCEUS,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.THUNDURUS,e.LITLEO,e.PYROAR,e.PANGORO,e.FURFROU,e.YVELTAL,e.INCINEROAR,e.ROCKRUFF,e.LYCANROC,e.GOLISOPOD,e.SILVALLY,e.DRAMPA,e.TAPU_BULU,e.SOLGALEO,e.GUZZLORD,e.NAGANADEL,e.ZERAORA,e.RILLABOOM,e.CINDERACE,e.NICKIT,e.THIEVUL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.OBSTAGOON,e.MORPEKO,e.COPPERAJAH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.BOMBIRDIER,e.GREAVARD,e.HOUNDSTONE,e.KINGAMBIT,e.IRON_JUGULIS,e.IRON_THORNS,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.OKIDOGI,e.ARCHALUDON,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_ARCANINE,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA,[e.URSHIFU,"single-strike"]],[A.PHANTOM_FORCE]:[e.HAUNTER,e.GENGAR,e.MEW,e.MISDREAVUS,e.SHEDINJA,e.SABLEYE,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.SPIRITOMB,e.DUSKNOIR,e.GIRATINA,e.ARCEUS,e.COFAGRIGUS,e.GOLETT,e.GOLURK,e.PHANTUMP,e.TREVENANT,e.GOURGEIST,e.YVELTAL,e.HOOPA,e.DECIDUEYE,e.MIMIKYU,e.DHELMISE,e.LUNALA,e.MARSHADOW,e.SINISTEA,e.POLTEAGEIST,e.RUNERIGUS,e.DRAKLOAK,e.DRAGAPULT,e.SPECTRIER,e.BASCULEGION,e.CERULEDGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.FLUTTER_MANE,e.POLTCHAGEIST,e.SINISTCHA,e.PECHARUNT,[e.CALYREX,"shadow"],e.HISUI_ZORUA,e.HISUI_ZOROARK],[A.PETAL_BLIZZARD]:[e.VENUSAUR,e.GLOOM,e.VILEPLUME,e.MEW,e.MEGANIUM,e.BELLOSSOM,e.SUNFLORA,e.SHIFTRY,e.ROSELIA,e.TROPIUS,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.SHAYMIN,e.SNIVY,e.SERVINE,e.SERPERIOR,e.LILLIGANT,e.MARACTUS,e.SAWSBUCK,e.FLABEBE,e.FLOETTE,e.FLORGES,e.FOMANTIS,e.LURANTIS,e.STEENEE,e.TSAREENA,e.COMFEY,e.ZARUDE,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.ARBOLIVA,e.ETERNAL_FLOETTE,e.HISUI_LILLIGANT],[A.DISARMING_VOICE]:[e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.CHANSEY,e.MEW,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.BLISSEY,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.WHISMUR,e.SKITTY,e.DELCATTY,e.ILLUMISE,e.SWABLU,e.ALTARIA,e.MILOTIC,e.CHIMECHO,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.HAPPINY,e.GALLADE,e.PANSAGE,e.PANSEAR,e.PANPOUR,e.AUDINO,e.DUCKLETT,e.SWANNA,e.MELOETTA,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SYLVEON,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.TOGEDEMARU,e.TAPU_FINI,e.MAGEARNA,e.HATENNA,e.HATTREM,e.HATTERENE,e.INDEEDEE,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.FLITTLE,e.ESPATHRA,e.FINIZEN,e.PALAFIN,e.FLUTTER_MANE,e.FEZANDIPITI,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE],[A.DRAINING_KISS]:[e.BUTTERFREE,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DROWZEE,e.HYPNO,e.JYNX,e.MEW,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.ESPEON,e.MISDREAVUS,e.SMOOCHUM,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.AZURILL,e.MAWILE,e.ILLUMISE,e.MILOTIC,e.CHIMECHO,e.GOREBYSS,e.LUVDISC,e.LATIAS,e.CHERUBI,e.CHERRIM,e.MISMAGIUS,e.TOGEKISS,e.GALLADE,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.AUDINO,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.SYLVEON,e.DEDENNE,e.KLEFKI,e.XERNEAS,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.MIMIKYU,e.TAPU_LELE,e.TAPU_FINI,e.MAGEARNA,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.MILCERY,e.ALCREMIE,e.INDEEDEE,e.SPECTRIER,e.CALYREX,e.ENAMORUS,e.DACHSBUN,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FINIZEN,e.PALAFIN,e.FLUTTER_MANE,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE],[A.GRASSY_TERRAIN]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.CHIKORITA,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.CACNEA,e.CACTURNE,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.TANGROWTH,e.ARCEUS,e.SNIVY,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.LILLIGANT,e.MARACTUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PHANTUMP,e.TREVENANT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.TAPU_BULU,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.ZARUDE,e.CALYREX,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.BRUTE_BONNET,e.WO_CHIEN,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.HYDRAPPLE,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[A.MISTY_TERRAIN]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MR_MIME,e.MEW,e.CLEFFA,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MAWILE,e.MIME_JR,e.GALLADE,e.ARCEUS,e.AUDINO,e.COTTONEE,e.WHIMSICOTT,e.ALOMOMOLA,e.FLABEBE,e.FLOETTE,e.FLORGES,[e.MEOWSTIC,"male"],e.SPRITZEE,e.AROMATISSE,e.SYLVEON,e.DEDENNE,e.CARBINK,e.KLEFKI,e.XERNEAS,e.VOLCANION,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.MIMIKYU,e.TAPU_FINI,e.MAGEARNA,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.ZACIAN,e.ENAMORUS,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.FIDOUGH,e.DACHSBUN,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE,e.GALAR_RAPIDASH,e.GALAR_WEEZING,e.GALAR_MR_MIME],[A.PLAY_ROUGH]:[e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.DEWGONG,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.PHANPY,e.DONPHAN,e.MILTANK,e.POOCHYENA,e.MIGHTYENA,e.LINOONE,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.SKITTY,e.DELCATTY,e.MAWILE,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.SWABLU,e.ALTARIA,e.ABSOL,e.JIRACHI,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.CHERRIM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.TOGEKISS,e.UXIE,e.MESPRIT,e.AZELF,e.SHAYMIN,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.WHIMSICOTT,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.MELOETTA,e.SKIDDO,e.GOGOAT,e.ESPURR,e.MEOWSTIC,e.SWIRLIX,e.SLURPUFF,e.SKRELP,e.DRAGALGE,e.TYRUNT,e.TYRANTRUM,e.SYLVEON,e.DEDENNE,e.KLEFKI,e.XERNEAS,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.KOMALA,e.MIMIKYU,e.DRAMPA,e.TAPU_LELE,e.TAPU_FINI,e.MAGEARNA,e.ZERAORA,e.NICKIT,e.THIEVUL,e.YAMPER,e.BOLTUND,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.ALCREMIE,e.FROSMOTH,e.INDEEDEE,e.CUFANT,e.COPPERAJAH,e.ZACIAN,e.ZAMAZENTA,e.URSALUNA,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.LECHONK,e.OINKOLOGNE,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_HANDS,e.FEZANDIPITI,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_WEEZING,e.HISUI_TYPHLOSION],[A.CONFIDE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.BLACEPHALON,e.ZERAORA,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE],[A.MYSTICAL_FIRE]:[e.CHARIZARD,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.PONYTA,e.RAPIDASH,e.MR_MIME,e.FLAREON,e.MOLTRES,e.MEW,e.TOGEPI,e.TOGETIC,e.HO_OH,e.RALTS,e.GARDEVOIR,e.LATIAS,e.LATIOS,e.MISMAGIUS,e.MAGMORTAR,e.TOGEKISS,e.VICTINI,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.VOLCARONA,e.RESHIRAM,e.DELPHOX,e.SYLVEON,e.PUMPKABOO,e.GOURGEIST,e.DIANCIE,e.SOLGALEO,e.BLACEPHALON,e.CENTISKORCH,e.HATENNA,e.HATTREM,e.HATTERENE,e.ALCREMIE,e.INDEEDEE,e.ETERNATUS,e.ENAMORUS,e.ARMAROUGE,e.FLUTTER_MANE,e.GALAR_PONYTA,e.GALAR_RAPIDASH],[A.EERIE_IMPULSE]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.JOLTEON,e.PORYGON,e.ZAPDOS,e.MEW,e.LANTURN,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.WOOPER,e.QUAGSIRE,e.PORYGON2,e.RAIKOU,e.ELECTRIKE,e.MANECTRIC,e.BALTOY,e.CLAYDOL,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.PORYGON_Z,e.ROTOM,e.EMOLGA,e.EELEKTRIK,e.EELEKTROSS,e.STUNFISK,e.THUNDURUS,e.HELIOLISK,e.DEDENNE,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.XURKITREE,e.MAGEARNA,e.BOLTUND,e.TOXTRICITY,e.MORPEKO,e.REGIELEKI,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.SANDY_SHOCKS,e.IRON_THORNS,e.MIRAIDON,e.RAGING_BOLT,e.ALOLA_RAICHU],[A.VENOM_DRENCH]:[e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.ZUBAT,e.GOLBAT,e.TENTACRUEL,e.KOFFING,e.WEEZING,e.MEW,e.CROBAT,e.QWILFISH,e.ROSERADE,e.STUNKY,e.SKUNTANK,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WOOBAT,e.SWOOBAT,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.TRUBBISH,e.GARBODOR,e.ACCELGOR,e.SKRELP,e.DRAGALGE,e.PHANTUMP,e.TREVENANT,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.PYUKUMUKU,e.NIHILEGO,e.POIPOLE,e.NAGANADEL,e.PINCURCHIN,e.ETERNATUS,e.GALAR_WEEZING,e.GALAR_SLOWKING,[e.TOXTRICITY,"low-key"]],[A.ELECTRIC_TERRAIN]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.CHANSEY,e.JOLTEON,e.ZAPDOS,e.MEW,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BLISSEY,e.RAIKOU,e.MANECTRIC,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.ROTOM,e.ARCEUS,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.STUNFISK,e.THUNDURUS,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.XURKITREE,e.ZERAORA,e.MELMETAL,e.BOLTUND,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.REGIELEKI,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.IRON_VALIANT,e.MIRAIDON,e.IRON_LEAVES,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[A.DAZZLING_GLEAM]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.ABRA,e.KADABRA,e.ALAKAZAM,e.TENTACOOL,e.TENTACRUEL,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.CHANSEY,e.STARYU,e.STARMIE,e.MR_MIME,e.MEW,e.CHINCHOU,e.LANTURN,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNFLORA,e.ESPEON,e.MISDREAVUS,e.GIRAFARIG,e.SNUBBULL,e.GRANBULL,e.BLISSEY,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.NOSEPASS,e.SABLEYE,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.SPOINK,e.GRUMPIG,e.SWABLU,e.ALTARIA,e.BALTOY,e.CLAYDOL,e.SHUPPET,e.BANETTE,e.CHIMECHO,e.JIRACHI,e.BUDEW,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.MISMAGIUS,e.CHINGLING,e.MIME_JR,e.FINNEON,e.LUMINEON,e.TOGEKISS,e.GALLADE,e.PROBOPASS,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.AUDINO,e.COTTONEE,e.WHIMSICOTT,e.SIGILYPH,e.MINCCINO,e.CINCCINO,e.FRILLISH,e.JELLICENT,e.MELOETTA,e.DELPHOX,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.SYLVEON,e.DEDENNE,e.CARBINK,e.KLEFKI,e.XERNEAS,e.DIANCIE,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.MINIOR,e.MIMIKYU,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.MAGEARNA,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.FROSMOTH,e.INDEEDEE,e.ZACIAN,e.ZAMAZENTA,e.ENAMORUS,e.FIDOUGH,e.DACHSBUN,e.ARBOLIVA,e.TOEDSCOOL,e.TOEDSCRUEL,e.RABSCA,e.ESPATHRA,e.GLIMMET,e.GLIMMORA,e.FARIGIRAF,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_MOTH,e.GHOLDENGO,e.IRON_VALIANT,e.MIRAIDON,e.FEZANDIPITI,e.TERAPAGOS,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.HISUI_BRAVIARY],[A.INFESTATION]:[e.BUTTERFREE,e.BEEDRILL,e.EKANS,e.ARBOK,e.ODDISH,e.GLOOM,e.VILEPLUME,e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.EXEGGCUTE,e.EXEGGUTOR,e.KOFFING,e.WEEZING,e.TANGELA,e.MR_MIME,e.MEW,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.WOOPER,e.QUAGSIRE,e.SHUCKLE,e.SLUGMA,e.MAGCARGO,e.BEAUTIFLY,e.DUSTOX,e.SURSKIT,e.MASQUERAIN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.SEVIPER,e.LILEEP,e.CRADILY,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.HUNTAIL,e.GOREBYSS,e.KRICKETUNE,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.SHELLOS,e.GASTRODON,e.MIME_JR,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.CARNIVINE,e.TANGROWTH,e.DUSKNOIR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.DURANT,e.GENESECT,e.VIVILLON,e.PANGORO,e.BINACLE,e.BARBARACLE,e.GOOMY,e.SLIGGOO,e.GOODRA,e.CUTIEFLY,e.RIBOMBEE,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.SANDYGAST,e.PALOSSAND,e.MIMIKYU,e.STAKATAKA,e.BLIPBUG,e.FROSMOTH,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.BRAMBLIN,e.BRAMBLEGHAST,e.DIPPLIN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR],[A.POWER_UP_PUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.JIRACHI,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.KRICKETUNE,e.CRANIDOS,e.RAMPARDOS,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.DARKRAI,e.VICTINI,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.GOTHITELLE,e.REUNICLUS,e.EELEKTROSS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.HEATMOR,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.MEOWSTIC,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.PHANTUMP,e.TREVENANT,e.HOOPA,e.CRABRAWLER,e.CRABOMINABLE,e.BUZZWOLE,e.ZERAORA,e.TOXEL,e.TOXTRICITY,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.URSALUNA,e.ANNIHILAPE,e.KINGAMBIT,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN],[A.DARKEST_LARIAT]:[e.POLIWRATH,e.MACHAMP,e.SNORLAX,e.MEW,e.SWAMPERT,e.ELECTIVIRE,e.DUSKNOIR,e.REGIGIGAS,e.KROOKODILE,e.GOLURK,e.PANGORO,e.INCINEROAR,e.BEWEAR,e.TAPU_BULU,e.BUZZWOLE,e.MELMETAL,e.RILLABOOM,e.GRIMMSNARL,e.URSHIFU,e.ZARUDE],[A.HIGH_HORSEPOWER]:[e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DUGTRIO,e.POLIWRATH,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.ONIX,e.KINGLER,e.RHYHORN,e.RHYDON,e.PINSIR,e.TAUROS,e.SNORLAX,e.MEW,e.SUDOWOODO,e.QUAGSIRE,e.GIRAFARIG,e.GLIGAR,e.STEELIX,e.HERACROSS,e.URSARING,e.SLUGMA,e.SWINUB,e.PILOSWINE,e.PHANPY,e.DONPHAN,e.MILTANK,e.PUPITAR,e.TYRANITAR,e.SWAMPERT,e.SLAKING,e.NOSEPASS,e.AGGRON,e.NUMEL,e.CAMERUPT,e.BARBOACH,e.WHISCASH,e.GROUDON,e.TORTERRA,e.HIPPOPOTAS,e.HIPPOWDON,e.RHYPERIOR,e.GLISCOR,e.MAMOSWINE,e.PROBOPASS,e.REGIGIGAS,e.PIGNITE,e.EMBOAR,e.ZEBSTRIKA,e.DRILBUR,e.EXCADRILL,e.GURDURR,e.CONKELDURR,e.KROOKODILE,e.SAWSBUCK,e.GOLURK,e.BOUFFALANT,e.TERRAKION,e.CHESNAUGHT,e.DIGGERSBY,e.GOGOAT,e.TYRANTRUM,e.AVALUGG,e.ZYGARDE,e.MUDBRAY,e.MUDSDALE,e.BEWEAR,e.TAPU_BULU,e.BUZZWOLE,e.GUZZLORD,e.STAKATAKA,e.MELMETAL,e.RILLABOOM,e.GREEDENT,e.DREDNAW,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SANDACONDA,e.FALINKS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.GLASTRIER,e.WYRDEER,e.URSALUNA,e.OINKOLOGNE,e.KLAWF,e.REVAVROOM,e.ORTHWORM,e.CETODDLE,e.CETITAN,e.CLODSIRE,e.FARIGIRAF,e.GREAT_TUSK,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_THORNS,e.BAXCALIBUR,e.OKIDOGI,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.GALAR_PONYTA,e.GALAR_RAPIDASH,[e.CALYREX,"ice"],e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[A.SOLAR_BLADE]:[e.PONYTA,e.RAPIDASH,e.FARFETCHD,e.MEW,e.CELEBI,e.GROVYLE,e.SCEPTILE,e.NUZLEAF,e.SHIFTRY,e.TROPIUS,e.CHERRIM,e.TANGROWTH,e.LEAFEON,e.GALLADE,e.LILLIGANT,e.CRUSTLE,e.VIRIZION,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.DECIDUEYE,e.LURANTIS,e.TSAREENA,e.DHELMISE,e.KARTANA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SIRFETCHD,e.ZACIAN,e.ZARUDE,e.CALYREX,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.CERULEDGE,e.WO_CHIEN,e.IRON_LEAVES,e.OGERPON,e.IRON_BOULDER,e.IRON_CROWN,e.GALAR_FARFETCHD,e.HISUI_LILLIGANT],[A.THROAT_CHOP]:[e.BEEDRILL,e.RATICATE,e.FEAROW,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.PARASECT,e.MEOWTH,e.PERSIAN,e.PRIMEAPE,e.POLIWRATH,e.MACHAMP,e.RAPIDASH,e.FARFETCHD,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.GOLDEEN,e.SEAKING,e.PINSIR,e.TAUROS,e.MEW,e.TYPHLOSION,e.ARIADOS,e.UMBREON,e.GLIGAR,e.QWILFISH,e.HERACROSS,e.SNEASEL,e.URSARING,e.CORSOLA,e.HOUNDOOM,e.STANTLER,e.RAIKOU,e.SCEPTILE,e.MIGHTYENA,e.LINOONE,e.SHIFTRY,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.HARIYAMA,e.VIBRAVA,e.FLYGON,e.ZANGOOSE,e.SEVIPER,e.BANETTE,e.ABSOL,e.DEOXYS,e.EMPOLEON,e.KRICKETUNE,e.LUXRAY,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.DRAPION,e.TOXICROAK,e.CARNIVINE,e.WEAVILE,e.GLISCOR,e.GALLADE,e.DARKRAI,e.LIEPARD,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.GIGALITH,e.AUDINO,e.SAWK,e.LEAVANNY,e.SCOLIPEDE,e.KROOKODILE,e.MARACTUS,e.SCRAFTY,e.ZOROARK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.BEARTIC,e.BISHARP,e.BOUFFALANT,e.HEATMOR,e.HYDREIGON,e.PANGORO,e.MALAMAR,e.HAWLUCHA,e.HOOPA,e.INCINEROAR,e.GOLISOPOD,e.PHEROMOSA,e.MARSHADOW,e.NAGANADEL,e.ZERAORA,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.FALINKS,e.PINCURCHIN,e.ZARUDE,e.GLASTRIER,e.TAROUNTULA,e.SPIDOPS,e.LOKIX,e.WIGLETT,e.WUGTRIO,e.FLAMIGO,e.CHIEN_PAO,e.TING_LU,e.ROARING_MOON,e.OGERPON,e.IRON_BOULDER,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_RAPIDASH,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_CORSOLA,e.GALAR_LINOONE,[e.URSHIFU,"single-strike"],[e.CALYREX,"ice"]],[A.POLLEN_PUFF]:[e.BUTTERFREE,e.GLOOM,e.VILEPLUME,e.MEW,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.CELEBI,e.VESPIQUEN,e.CHERUBI,e.CHERRIM,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.FOONGUS,e.AMOONGUSS,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.CUTIEFLY,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.COMFEY,e.GOSSIFLEUR,e.ELDEGOSS,e.CALYREX,e.MEOWSCARADA,e.ARBOLIVA,e.BRUTE_BONNET,e.WO_CHIEN,e.DIPPLIN,e.HYDRAPPLE,e.ETERNAL_FLOETTE,e.HISUI_LILLIGANT],[A.PSYCHIC_TERRAIN]:[e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.ESPEON,e.SLOWKING,e.GIRAFARIG,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.GALLADE,e.CRESSELIA,e.ARCEUS,e.MUSHARNA,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.BEHEEYEM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.MEOWSTIC,e.HOOPA,e.ORANGURU,e.BRUXISH,e.TAPU_LELE,e.DOTTLER,e.ORBEETLE,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.INDEEDEE,e.CALYREX,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.VELUZA,e.FARIGIRAF,e.SCREAM_TAIL,e.IRON_VALIANT,e.IRON_LEAVES,e.MUNKIDORI,e.ALOLA_RAICHU,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[A.LUNGE]:[e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.DODUO,e.DODRIO,e.MUK,e.SCYTHER,e.MEW,e.SPINARAK,e.ARIADOS,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.YANMA,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.SCIZOR,e.HERACROSS,e.STANTLER,e.SURSKIT,e.MASQUERAIN,e.VOLBEAT,e.SPOINK,e.GRUMPIG,e.CACTURNE,e.KRICKETOT,e.KRICKETUNE,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.YANMEGA,e.GLISCOR,e.HEATRAN,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.JOLTIK,e.EELEKTRIK,e.EELEKTROSS,e.LARVESTA,e.VOLCARONA,e.HAWLUCHA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.RIBOMBEE,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.BUZZWOLE,e.PHEROMOSA,e.SIZZLIPEDE,e.CENTISKORCH,e.FALINKS,e.SNOM,e.FROSMOTH,e.WYRDEER,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.LOKIX,e.TOEDSCOOL,e.TOEDSCRUEL,e.RELLOR,e.RABSCA,e.FLAMIGO,e.TATSUGIRI,e.DUDUNSPARCE,e.SLITHER_WING,e.IRON_MOTH],[A.SPEED_SWAP]:[e.RAICHU,e.ABRA,e.KADABRA,e.ALAKAZAM,e.PORYGON,e.MEWTWO,e.MEW,e.PORYGON2,e.BRONZOR,e.BRONZONG,e.PORYGON_Z,e.VICTINI,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.CUTIEFLY,e.RIBOMBEE,e.TAPU_LELE,e.PHEROMOSA,e.MAGEARNA,e.CALYREX,e.RABSCA,e.ALOLA_RAICHU],[A.SMART_STRIKE]:[e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.RAPIDASH,e.SEEL,e.DEWGONG,e.CLOYSTER,e.RHYHORN,e.RHYDON,e.GOLDEEN,e.SEAKING,e.TAUROS,e.LAPRAS,e.MEW,e.ARIADOS,e.TOGETIC,e.FORRETRESS,e.DUNSPARCE,e.HERACROSS,e.DONPHAN,e.AGGRON,e.RHYPERIOR,e.TOGEKISS,e.SAMUROTT,e.EXCADRILL,e.SCOLIPEDE,e.SAWSBUCK,e.ESCAVALIER,e.BOUFFALANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.THUNDURUS,e.KELDEO,e.XERNEAS,e.TAPU_BULU,e.TAPU_FINI,e.CELESTEELA,e.KARTANA,e.NECROZMA,e.NAGANADEL,e.DREDNAW,e.FALINKS,e.GLASTRIER,e.OVERQWIL,e.DUDUNSPARCE,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_LEAVES,e.GOUGING_FIRE,e.IRON_CROWN,e.GALAR_RAPIDASH,[e.CALYREX,"ice"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SAMUROTT,e.PALDEA_TAUROS],[A.BRUTAL_SWING]:[e.CHARIZARD,e.BEEDRILL,e.EKANS,e.ARBOK,e.RAICHU,e.TENTACOOL,e.TENTACRUEL,e.FARFETCHD,e.ONIX,e.KINGLER,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYDON,e.SCYTHER,e.PINSIR,e.GYARADOS,e.AERODACTYL,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.STEELIX,e.SCIZOR,e.HERACROSS,e.DELIBIRD,e.DONPHAN,e.HITMONTOP,e.TYRANITAR,e.SCEPTILE,e.SHIFTRY,e.AZURILL,e.MAWILE,e.AGGRON,e.FLYGON,e.SEVIPER,e.ARMALDO,e.MILOTIC,e.TROPIUS,e.ABSOL,e.SALAMENCE,e.METAGROSS,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.LOPUNNY,e.GARCHOMP,e.DRAPION,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.GLISCOR,e.GIRATINA,e.SERPERIOR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.KROKOROK,e.KROOKODILE,e.ESCAVALIER,e.FERROTHORN,e.HAXORUS,e.MIENSHAO,e.HEATMOR,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.GRENINJA,e.DIGGERSBY,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.MALAMAR,e.BARBARACLE,e.HELIOLISK,e.TYRANTRUM,e.GOODRA,e.TREVENANT,e.GOURGEIST,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.TURTONATOR,e.DHELMISE,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.NIHILEGO,e.XURKITREE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.STAKATAKA,e.ZERAORA,e.MELMETAL,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.SILICOBRA,e.SANDACONDA,e.SIZZLIPEDE,e.CENTISKORCH,e.GRAPPLOCT,e.HATTREM,e.HATTERENE,e.SIRFETCHD,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.DRACOVISH,e.ZACIAN,e.ETERNATUS,e.ZARUDE,e.KLEAVOR,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.OKIDOGI,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_YAMASK],[A.AURORA_VEIL]:[e.JYNX,e.ARTICUNO,e.MEW,e.DELIBIRD,e.SMOOCHUM,e.REGICE,e.ABOMASNOW,e.GLACEON,e.FROSLASS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.CRYOGONAL,e.AMAURA,e.AURORUS,e.BERGMITE,e.AVALUGG,e.EISCUE,e.ARCTOVISH,e.IRON_BUNDLE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.HISUI_AVALUGG],[A.PSYCHIC_FANGS]:[e.EKANS,e.ARBOK,e.GROWLITHE,e.ARCANINE,e.AERODACTYL,e.MEW,e.CROCONAW,e.FERALIGATR,e.ESPEON,e.GIRAFARIG,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.HOUNDOUR,e.HOUNDOOM,e.POOCHYENA,e.MIGHTYENA,e.MAWILE,e.ELECTRIKE,e.MANECTRIC,e.CARVANHA,e.SHARPEDO,e.SEVIPER,e.SALAMENCE,e.METAGROSS,e.SHINX,e.LUXIO,e.LUXRAY,e.GLISCOR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.SWOOBAT,e.BASCULIN,e.LITLEO,e.PYROAR,e.TYRUNT,e.TYRANTRUM,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.SILVALLY,e.BRUXISH,e.SOLGALEO,e.NECROZMA,e.GREEDENT,e.BOLTUND,e.ARROKUDA,e.BARRASKEWDA,e.MORPEKO,e.DRACOVISH,e.ARCTOVISH,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.BASCULEGION,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.GREAVARD,e.HOUNDSTONE,e.VELUZA,e.FARIGIRAF,e.SCREAM_TAIL,e.CHIEN_PAO,e.OKIDOGI,e.GOUGING_FIRE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE],[A.STOMPING_TANTRUM]:[e.VENUSAUR,e.RATICATE,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDORINA,e.NIDOQUEEN,e.NIDORINO,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.DODRIO,e.ONIX,e.KINGLER,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TAUROS,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.ARIADOS,e.AMPHAROS,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.GIRAFARIG,e.DUNSPARCE,e.STEELIX,e.GRANBULL,e.URSARING,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.PHANPY,e.DONPHAN,e.MILTANK,e.BLISSEY,e.ENTEI,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.SWAMPERT,e.LINOONE,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.DELCATTY,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.SPINDA,e.CACTURNE,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.ARMALDO,e.TROPIUS,e.WALREIN,e.RELICANTH,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.DEOXYS,e.TORTERRA,e.BIBAREL,e.RAMPARDOS,e.BASTIODON,e.GASTRODON,e.PURUGLY,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GARCHOMP,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.MAMOSWINE,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.STOUTLAND,e.BOLDORE,e.GIGALITH,e.EXCADRILL,e.AUDINO,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.CRUSTLE,e.GARBODOR,e.SAWSBUCK,e.AMOONGUSS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.STUNFISK,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.HEATMOR,e.DURANT,e.ZWEILOUS,e.HYDREIGON,e.TERRAKION,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.DIGGERSBY,e.SKIDDO,e.GOGOAT,e.PANGORO,e.TYRUNT,e.TYRANTRUM,e.CARBINK,e.GOODRA,e.AVALUGG,e.ZYGARDE,e.VOLCANION,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.KOMALA,e.TURTONATOR,e.DRAMPA,e.KOMMO_O,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.STAKATAKA,e.RILLABOOM,e.GREEDENT,e.CHEWTLE,e.DREDNAW,e.APPLETUN,e.GRAPPLOCT,e.GRIMMSNARL,e.OBSTAGOON,e.CURSOLA,e.MR_RIME,e.STONJOURNER,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.DURALUDON,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.URSALUNA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.OINKOLOGNE,e.FIDOUGH,e.DACHSBUN,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.WIGLETT,e.WUGTRIO,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.BAXCALIBUR,e.TING_LU,e.ROARING_MOON,e.KORAIDON,e.OKIDOGI,e.OGERPON,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_RATICATE,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_LINOONE,e.GALAR_STUNFISK,[e.CALYREX,"ice","shadow"],e.HISUI_TYPHLOSION,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.LIQUIDATION]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.HORSEA,e.SEADRA,e.LAPRAS,e.VAPOREON,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.CORSOLA,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.SUICUNE,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.CARVANHA,e.SHARPEDO,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.ARMALDO,e.WALREIN,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.KYOGRE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.GARCHOMP,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.ALOMOMOLA,e.EELEKTROSS,e.CUBCHOO,e.BEARTIC,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.VOLCANION,e.PRIMARINA,e.CRABRAWLER,e.CRABOMINABLE,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.BRUXISH,e.DHELMISE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.CLOBBOPUS,e.GRAPPLOCT,e.CURSOLA,e.PINCURCHIN,e.EISCUE,e.DRACOVISH,e.ARCTOVISH,e.BASCULEGION,e.OVERQWIL,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.CLODSIRE,e.IRON_VALIANT,e.WALKING_WAKE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,[e.URSHIFU,"rapid-strike"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,[e.PALDEA_TAUROS,"aqua"],e.PALDEA_WOOPER],[A.BODY_PRESS]:[e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.ONIX,e.HYPNO,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.LAPRAS,e.SNORLAX,e.DRAGONITE,e.MEW,e.MEGANIUM,e.SUDOWOODO,e.QUAGSIRE,e.FORRETRESS,e.STEELIX,e.MANTINE,e.SKARMORY,e.DONPHAN,e.MILTANK,e.TYRANITAR,e.SWAMPERT,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.SWALOT,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.CLAYDOL,e.TROPIUS,e.WALREIN,e.RELICANTH,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.GROUDON,e.TORTERRA,e.RAMPARDOS,e.BASTIODON,e.BRONZONG,e.HIPPOPOTAS,e.HIPPOWDON,e.ABOMASNOW,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.MAMOSWINE,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.ARCEUS,e.EMBOAR,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DARMANITAN,e.CRUSTLE,e.COFAGRIGUS,e.GARBODOR,e.FERROTHORN,e.EELEKTROSS,e.CUBCHOO,e.BEARTIC,e.GOLURK,e.COBALION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.CHESNAUGHT,e.HAWLUCHA,e.CARBINK,e.GOODRA,e.AVALUGG,e.DIANCIE,e.VOLCANION,e.CRABOMINABLE,e.MUDSDALE,e.BEWEAR,e.TURTONATOR,e.DHELMISE,e.KOMMO_O,e.GUZZLORD,e.STAKATAKA,e.MELMETAL,e.RILLABOOM,e.GREEDENT,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.DUBWOOL,e.DREDNAW,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SANDACONDA,e.GRIMMSNARL,e.OBSTAGOON,e.RUNERIGUS,e.FALINKS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ZAMAZENTA,e.URSHIFU,e.GLASTRIER,[e.CALYREX,"","ice"],e.URSALUNA,e.OINKOLOGNE,e.PAWMOT,e.DACHSBUN,e.NACLSTACK,e.GARGANACL,e.ORTHWORM,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.DONDOZO,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.BRUTE_BONNET,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.BAXCALIBUR,e.WO_CHIEN,e.TING_LU,e.ROARING_MOON,e.KORAIDON,e.OKIDOGI,e.ARCHALUDON,e.HYDRAPPLE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_GOLEM,e.GALAR_SLOWBRO,e.GALAR_LINOONE,e.GALAR_DARMANITAN,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.BREAKING_SWIPE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.ARBOK,e.ONIX,e.RHYDON,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.AMPHAROS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.KINGDRA,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.FLYGON,e.ALTARIA,e.SEVIPER,e.MILOTIC,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.RAMPARDOS,e.GABITE,e.GARCHOMP,e.RHYPERIOR,e.GLISCOR,e.DIALGA,e.PALKIA,e.GIRATINA,e.SERPERIOR,e.KROKOROK,e.KROOKODILE,e.AXEW,e.FRAXURE,e.HAXORUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.HELIOLISK,e.TYRANTRUM,e.GOODRA,e.NOIVERN,e.ZYGARDE,e.SALAZZLE,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.NECROZMA,e.NAGANADEL,e.INTELEON,e.DRACOZOLT,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.REGIDRAGO,e.CYCLIZAR,e.DUDUNSPARCE,e.IRON_THORNS,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_EXEGGUTOR,e.HISUI_GOODRA],[A.STEEL_BEAM]:[e.MAGNEMITE,e.MAGNETON,e.MEW,e.FORRETRESS,e.STEELIX,e.SCIZOR,e.SKARMORY,e.NOSEPASS,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.BELDUM,e.METANG,e.METAGROSS,e.REGISTEEL,e.JIRACHI,e.EMPOLEON,e.BRONZOR,e.BRONZONG,e.LUCARIO,e.MAGNEZONE,e.PROBOPASS,e.DIALGA,e.HEATRAN,e.ARCEUS,e.EXCADRILL,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.PAWNIARD,e.BISHARP,e.DURANT,e.COBALION,e.GENESECT,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.KLEFKI,e.SILVALLY,e.TOGEDEMARU,e.SOLGALEO,e.CELESTEELA,e.KARTANA,e.MAGEARNA,e.STAKATAKA,e.MELTAN,e.MELMETAL,e.CORVIKNIGHT,e.PERRSERKER,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.KINGAMBIT,e.IRON_TREADS,e.GHOLDENGO,e.ARCHALUDON,e.IRON_CROWN,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.GALAR_MEOWTH,e.GALAR_STUNFISK,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[A.EXPANDING_FORCE]:[e.WIGGLYTUFF,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.STARMIE,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.GIRAFARIG,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.BALTOY,e.CLAYDOL,e.CHIMECHO,e.METANG,e.METAGROSS,e.JIRACHI,e.DEOXYS,e.BRONZOR,e.BRONZONG,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.DARMANITAN,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.INKAY,e.MALAMAR,e.HOOPA,e.ORANGURU,e.BRUXISH,e.SOLGALEO,e.LUNALA,e.NECROZMA,e.BLACEPHALON,e.DOTTLER,e.ORBEETLE,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.ARMAROUGE,e.RABSCA,e.ESPATHRA,e.VELUZA,e.FARIGIRAF,e.SCREAM_TAIL,e.IRON_VALIANT,e.IRON_CROWN,e.ALOLA_RAICHU,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[A.STEEL_ROLLER]:[e.SANDSHREW,e.SANDSLASH,e.JIGGLYPUFF,e.WIGGLYTUFF,e.CLOYSTER,e.LICKITUNG,e.SNORLAX,e.MEW,e.MARILL,e.AZUMARILL,e.STEELIX,e.QWILFISH,e.SHUCKLE,e.MILTANK,e.ARON,e.LAIRON,e.AGGRON,e.WAILMER,e.WAILORD,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.METANG,e.METAGROSS,e.REGISTEEL,e.BRONZOR,e.BRONZONG,e.MAGNEZONE,e.LICKILICKY,e.HEATRAN,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.TOGEDEMARU,e.DHELMISE,e.SOLGALEO,e.CELESTEELA,e.GUZZLORD,e.MAGEARNA,e.STAKATAKA,e.MELMETAL,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.IRON_TREADS,e.ARCHALUDON,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH],[A.SCALE_SHOT]:[e.CHARIZARD,e.EKANS,e.ARBOK,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.GYARADOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.DUNSPARCE,e.GLIGAR,e.QWILFISH,e.KINGDRA,e.LUGIA,e.SCEPTILE,e.CARVANHA,e.SHARPEDO,e.FLYGON,e.FEEBAS,e.MILOTIC,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.GIBLE,e.GABITE,e.GARCHOMP,e.DIALGA,e.PALKIA,e.BASCULIN,e.KROKOROK,e.KROOKODILE,e.ALOMOMOLA,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.SKRELP,e.DRAGALGE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.ZYGARDE,e.WISHIWASHI,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.NAGANADEL,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.SILICOBRA,e.SANDACONDA,e.ARROKUDA,e.BARRASKEWDA,e.REGIDRAGO,e.BASCULEGION,e.OVERQWIL,e.CYCLIZAR,e.VELUZA,e.DUDUNSPARCE,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.GOUGING_FIRE,e.HISUI_QWILFISH],[A.METEOR_BEAM]:[e.CLEFAIRY,e.CLEFABLE,e.ONIX,e.RHYDON,e.STARMIE,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEW,e.AMPHAROS,e.SUDOWOODO,e.STEELIX,e.SHUCKLE,e.CORSOLA,e.NOSEPASS,e.AGGRON,e.LUNATONE,e.SOLROCK,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.RELICANTH,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.BASTIODON,e.BRONZONG,e.RHYPERIOR,e.PROBOPASS,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.ELGYEM,e.BEHEEYEM,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.DIANCIE,e.MINIOR,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.CELESTEELA,e.NECROZMA,e.STAKATAKA,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.CURSOLA,e.STONJOURNER,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.ETERNATUS,e.NACLI,e.NACLSTACK,e.GARGANACL,e.ARMAROUGE,e.KLAWF,e.GLIMMET,e.GLIMMORA,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.KORAIDON,e.ARCHALUDON,e.IRON_BOULDER,e.TERAPAGOS,e.ALOLA_GOLEM,e.GALAR_CORSOLA,e.HISUI_AVALUGG],[A.MISTY_EXPLOSION]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEW,e.MARILL,e.AZUMARILL,e.GARDEVOIR,e.MUSHARNA,e.FLORGES,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.SYLVEON,e.CARBINK,e.XERNEAS,e.DIANCIE,e.PRIMARINA,e.MAGEARNA,e.HATTERENE,e.ALCREMIE,e.ENAMORUS,e.SCREAM_TAIL,e.GALAR_WEEZING],[A.GRASSY_GLIDE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.BELLOSSOM,e.SUNFLORA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.ROSELIA,e.CACNEA,e.CACTURNE,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SHAYMIN,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.DEERLING,e.SAWSBUCK,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.SKIDDO,e.GOGOAT,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.DHELMISE,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.SIRFETCHD,e.ZARUDE,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.DIPPLIN,e.OGERPON,e.HYDRAPPLE,e.ALOLA_EXEGGUTOR,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[A.RISING_VOLTAGE]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.ELECTABUZZ,e.JOLTEON,e.ZAPDOS,e.MEW,e.CHINCHOU,e.LANTURN,e.RAIKOU,e.ELECTRIKE,e.MANECTRIC,e.SHINX,e.LUXIO,e.LUXRAY,e.MAGNEZONE,e.ELECTIVIRE,e.ROTOM,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.THUNDURUS,e.ZEKROM,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.XURKITREE,e.ZERAORA,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.REGIELEKI,e.RAGING_BOLT,e.ALOLA_RAICHU],[A.TERRAIN_PULSE]:[e.VENUSAUR,e.BLASTOISE,e.EXEGGUTOR,e.LICKITUNG,e.KANGASKHAN,e.SNORLAX,e.MEW,e.DUNSPARCE,e.EXPLOUD,e.LUCARIO,e.LICKILICKY,e.REGIGIGAS,e.CLAUNCHER,e.CLAWITZER,e.CARBINK,e.XERNEAS,e.DIANCIE,e.ORANGURU,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.INDEEDEE,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.DUDUNSPARCE,e.ALOLA_EXEGGUTOR,e.GALAR_STUNFISK],[A.SKITTER_SMACK]:[e.EKANS,e.ARBOK,e.VENONAT,e.VENOMOTH,e.PERSIAN,e.TENTACRUEL,e.GASTLY,e.HAUNTER,e.GENGAR,e.SCYTHER,e.MEW,e.SPINARAK,e.ARIADOS,e.YANMA,e.DUNSPARCE,e.GLIGAR,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.OCTILLERY,e.SURSKIT,e.MASQUERAIN,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.VOLBEAT,e.ILLUMISE,e.CACNEA,e.CACTURNE,e.SEVIPER,e.MILOTIC,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.KRICKETOT,e.KRICKETUNE,e.COMBEE,e.VESPIQUEN,e.SHELLOS,e.GASTRODON,e.SKORUPI,e.DRAPION,e.YANMEGA,e.GLISCOR,e.DUSKNOIR,e.GIRATINA,e.LIEPARD,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.ZORUA,e.ZOROARK,e.JOLTIK,e.GALVANTULA,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.SHELMET,e.ACCELGOR,e.DURANT,e.LARVESTA,e.VOLCARONA,e.VIVILLON,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ZYGARDE,e.HOOPA,e.DECIDUEYE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.WIMPOD,e.GOLISOPOD,e.PHEROMOSA,e.MARSHADOW,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.SILICOBRA,e.SANDACONDA,e.SIZZLIPEDE,e.CENTISKORCH,e.GRAPPLOCT,e.SNOM,e.FROSMOTH,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.SHROODLE,e.GRAFAIAI,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.RELLOR,e.RABSCA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.DUDUNSPARCE,e.SLITHER_WING,e.ALOLA_PERSIAN,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[A.BURNING_JEALOUSY]:[e.VULPIX,e.NINETALES,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.MISDREAVUS,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.TORKOAL,e.BANETTE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.MISMAGIUS,e.SKUNTANK,e.SPIRITOMB,e.MAGMORTAR,e.HEATRAN,e.LIEPARD,e.DARMANITAN,e.ZORUA,e.ZOROARK,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.PYROAR,e.TREVENANT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.MIMIKYU,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.THIEVUL,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.CURSOLA,e.SCOVILLAIN,e.CHI_YU,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,e.GALAR_DARMANITAN,e.HISUI_TYPHLOSION,e.HISUI_ZORUA,e.HISUI_ZOROARK],[A.LASH_OUT]:[e.EKANS,e.ARBOK,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.MUK,e.TAUROS,e.GYARADOS,e.MEWTWO,e.MEW,e.UMBREON,e.MURKROW,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.VIGOROTH,e.SLAKING,e.HARIYAMA,e.SABLEYE,e.NUMEL,e.CAMERUPT,e.CACTURNE,e.SEVIPER,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.MISMAGIUS,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.SPIRITOMB,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.DARKRAI,e.PURRLOIN,e.LIEPARD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.LAMPENT,e.CHANDELURE,e.STUNFISK,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.VULLABY,e.MANDIBUZZ,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.TYRUNT,e.TYRANTRUM,e.PHANTUMP,e.TREVENANT,e.YVELTAL,e.HOOPA,e.INCINEROAR,e.MUDSDALE,e.TURTONATOR,e.DRAMPA,e.GUZZLORD,e.NICKIT,e.THIEVUL,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.MORPEKO,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.SNEASLER,e.OVERQWIL,e.MEOWSCARADA,e.OINKOLOGNE,e.LOKIX,e.SQUAWKABILLY,e.MASCHIFF,e.MABOSSTIFF,e.SCOVILLAIN,e.BOMBIRDIER,e.REVAVROOM,e.ANNIHILAPE,e.KINGAMBIT,e.BRUTE_BONNET,e.IRON_JUGULIS,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.PECHARUNT,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MUK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,[e.URSHIFU,"single-strike"],[e.CALYREX,"ice","shadow"],e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_GOODRA,e.PALDEA_TAUROS],[A.POLTERGEIST]:[e.GASTLY,e.HAUNTER,e.GENGAR,e.MEW,e.MISDREAVUS,e.SHEDINJA,e.SABLEYE,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.MISMAGIUS,e.SPIRITOMB,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.GIRATINA,e.YAMASK,e.COFAGRIGUS,e.FRILLISH,e.JELLICENT,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DECIDUEYE,e.SANDYGAST,e.PALOSSAND,e.DHELMISE,e.LUNALA,e.MARSHADOW,e.SINISTEA,e.POLTEAGEIST,e.CURSOLA,e.RUNERIGUS,e.SPECTRIER,e.SKELEDIRGE,e.CERULEDGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.RABSCA,e.GREAVARD,e.HOUNDSTONE,e.FLUTTER_MANE,e.GHOLDENGO,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.PECHARUNT,e.ALOLA_MAROWAK,e.GALAR_YAMASK,e.HISUI_TYPHLOSION,e.HISUI_ZOROARK],[A.CORROSIVE_GAS]:[e.VILEPLUME,e.TENTACRUEL,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.MEW,e.STUNKY,e.SKUNTANK,e.TOXICROAK,e.TRUBBISH,e.GARBODOR,e.SALAZZLE,e.NIHILEGO,e.GUZZLORD,e.GALAR_WEEZING],[A.COACHING]:[e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.HITMONLEE,e.HITMONCHAN,e.MEW,e.HERACROSS,e.HITMONTOP,e.COMBUSKEN,e.BLAZIKEN,e.MAKUHITA,e.HARIYAMA,e.INFERNAPE,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.GALLADE,e.PIGNITE,e.EMBOAR,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SCRAGGY,e.SCRAFTY,e.MIENFOO,e.MIENSHAO,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.MELOETTA,e.CHESNAUGHT,e.PANCHAM,e.PANGORO,e.HAWLUCHA,e.CRABRAWLER,e.CRABOMINABLE,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.HAKAMO_O,e.KOMMO_O,e.BUZZWOLE,e.PHEROMOSA,e.MARSHADOW,e.ZERAORA,e.CINDERACE,e.CLOBBOPUS,e.GRAPPLOCT,e.SIRFETCHD,e.FALINKS,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.SNEASLER,e.QUAQUAVAL,e.PAWMO,e.PAWMOT,e.ANNIHILAPE,e.IRON_VALIANT,e.IRON_LEAVES,e.GALAR_ZAPDOS,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[A.FLIP_TURN]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.TENTACOOL,e.TENTACRUEL,e.SEEL,e.DEWGONG,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.VAPOREON,e.KABUTOPS,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.QWILFISH,e.KINGDRA,e.SWAMPERT,e.CARVANHA,e.SHARPEDO,e.MILOTIC,e.LUVDISC,e.LATIOS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.FINNEON,e.LUMINEON,e.PHIONE,e.MANAPHY,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.BASCULIN,e.SWANNA,e.ALOMOMOLA,e.KELDEO,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.BRUXISH,e.INTELEON,e.ARROKUDA,e.BARRASKEWDA,e.EISCUE,e.BASCULEGION,e.QUAXWELL,e.QUAQUAVAL,e.PALAFIN,e.VELUZA,e.IRON_BUNDLE,e.WALKING_WAKE,e.HISUI_SAMUROTT],[A.TRIPLE_AXEL]:[e.SEEL,e.DEWGONG,e.JYNX,e.ARTICUNO,e.MEW,e.BELLOSSOM,e.SNEASEL,e.DELIBIRD,e.HITMONTOP,e.KIRLIA,e.GARDEVOIR,e.MILOTIC,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.WEAVILE,e.GLACEON,e.GALLADE,e.FROSLASS,e.LEAVANNY,e.MINCCINO,e.CINCCINO,e.CRYOGONAL,e.MIENSHAO,e.MELOETTA,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.STEENEE,e.TSAREENA,e.PHEROMOSA,e.MR_RIME,e.FROSMOTH,e.MEOWSCARADA,e.QUAXWELL,e.QUAQUAVAL,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES,e.GALAR_MR_MIME,e.HISUI_LILLIGANT],[A.DUAL_WINGBEAT]:[e.CHARIZARD,e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.ZUBAT,e.GOLBAT,e.FARFETCHD,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.MURKROW,e.DUNSPARCE,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.LUGIA,e.HO_OH,e.CELEBI,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.COMBEE,e.VESPIQUEN,e.HONCHKROW,e.TOGEKISS,e.YANMEGA,e.GLISCOR,e.PALKIA,e.GIRATINA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.EMOLGA,e.DRUDDIGON,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.VIKAVOLT,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.LUNALA,e.BUZZWOLE,e.NAGANADEL,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.FLAPPLE,e.CRAMORANT,e.SIRFETCHD,e.FROSMOTH,e.KLEAVOR,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.DUDUNSPARCE,e.SLITHER_WING,e.IRON_JUGULIS,e.KORAIDON,e.FEZANDIPITI,e.GALAR_FARFETCHD,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[A.SCORCHING_SANDS]:[e.CHARIZARD,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.NINETALES,e.DIGLETT,e.DUGTRIO,e.ARCANINE,e.RAPIDASH,e.ONIX,e.CUBONE,e.MAROWAK,e.RHYHORN,e.RHYDON,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEW,e.TYPHLOSION,e.STEELIX,e.MAGCARGO,e.ENTEI,e.HO_OH,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.BALTOY,e.CLAYDOL,e.GROUDON,e.INFERNAPE,e.TORTERRA,e.SHIELDON,e.BASTIODON,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.RHYPERIOR,e.MAGMORTAR,e.HEATRAN,e.ARCEUS,e.VICTINI,e.DRILBUR,e.EXCADRILL,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.GOLETT,e.GOLURK,e.HEATMOR,e.RESHIRAM,e.LANDORUS,e.DELPHOX,e.DIGGERSBY,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.INCINEROAR,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.TURTONATOR,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.SIZZLIPEDE,e.CENTISKORCH,e.SKELEDIRGE,e.ARMAROUGE,e.SANDY_SHOCKS,e.GOUGING_FIRE,e.TERAPAGOS,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MAROWAK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE],[A.TERA_BLAST]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.CATERPIE,e.METAPOD,e.BUTTERFREE,e.WEEDLE,e.KAKUNA,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.WURMPLE,e.SILCOON,e.BEAUTIFLY,e.CASCOON,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.BELDUM,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETOT,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BURMY,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.TYNAMO,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.SCATTERBUG,e.SPEWPA,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.BLIPBUG,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.PECHARUNT,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.ICE_SPINNER]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.ARTICUNO,e.DRAGONITE,e.MEW,e.MARILL,e.AZUMARILL,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.DELIBIRD,e.DONPHAN,e.HITMONTOP,e.LUDICOLO,e.SNORUNT,e.GLALIE,e.REGICE,e.REGISTEEL,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.BRONZOR,e.BRONZONG,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.FROSLASS,e.CINCCINO,e.CRYOGONAL,e.MIENSHAO,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.KOMALA,e.MAGEARNA,e.DREDNAW,e.FROSMOTH,e.EISCUE,e.QUAQUAVAL,e.CYCLIZAR,e.CETODDLE,e.CETITAN,e.DUDUNSPARCE,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_BUNDLE,e.CHIEN_PAO,e.TERAPAGOS,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,[e.URSHIFU,"rapid-strike"],e.HISUI_LILLIGANT,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG],[A.SNOWSCAPE]:[e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.CHANSEY,e.LAPRAS,e.ARTICUNO,e.DRAGONITE,e.MEW,e.MARILL,e.AZUMARILL,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.MISDREAVUS,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.DELIBIRD,e.BLISSEY,e.SUICUNE,e.WINGULL,e.PELIPPER,e.SPOINK,e.GRUMPIG,e.ALTARIA,e.SNORUNT,e.GLALIE,e.LUVDISC,e.REGICE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.SHELLOS,e.GASTRODON,e.MISMAGIUS,e.HAPPINY,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.GLACEON,e.MAMOSWINE,e.FROSLASS,e.PALKIA,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.BASCULIN,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.TORNADUS,e.KYUREM,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.SKRELP,e.DRAGALGE,e.BERGMITE,e.AVALUGG,e.DIANCIE,e.PRIMARINA,e.CRABOMINABLE,e.MAGEARNA,e.INTELEON,e.FROSMOTH,e.EISCUE,e.GLASTRIER,e.BASCULEGION,e.CETODDLE,e.CETITAN,e.VELUZA,e.SCREAM_TAIL,e.IRON_BUNDLE,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_ARTICUNO,[e.CALYREX,"ice"],e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_AVALUGG],[A.POUNCE]:[e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.SCYTHER,e.MEW,e.SPINARAK,e.ARIADOS,e.YANMA,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.SCIZOR,e.HERACROSS,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKING,e.VOLBEAT,e.ILLUMISE,e.SEVIPER,e.SHUPPET,e.BANETTE,e.KRICKETUNE,e.VESPIQUEN,e.YANMEGA,e.HEATRAN,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.LARVESTA,e.VOLCARONA,e.SCATTERBUG,e.SPEWPA,e.VIVILLON,e.CLAUNCHER,e.CLAWITZER,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.MAREANIE,e.TOXAPEX,e.MIMIKYU,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.CRAMORANT,e.SNOM,e.FROSMOTH,e.DRAKLOAK,e.DRAGAPULT,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.SQUAWKABILLY,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FLAMIGO,e.DUDUNSPARCE,e.IRON_MOTH,e.DIPPLIN,e.HYDRAPPLE],[A.TRAILBLAZE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.DODRIO,e.DROWZEE,e.HYPNO,e.HITMONCHAN,e.CHANSEY,e.SCYTHER,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.SPINARAK,e.ARIADOS,e.PICHU,e.IGGLYBUFF,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.GIRAFARIG,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.DELIBIRD,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.STANTLER,e.ELEKID,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.POOCHYENA,e.MIGHTYENA,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.VIGOROTH,e.SLAKING,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.NUMEL,e.CAMERUPT,e.SPOINK,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.SEVIPER,e.BANETTE,e.TROPIUS,e.SNORUNT,e.GLALIE,e.METANG,e.METAGROSS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.PACHIRISU,e.AMBIPOM,e.STUNKY,e.SKUNTANK,e.BONSLY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.ELECTIVIRE,e.LEAFEON,e.GLACEON,e.MAMOSWINE,e.FROSLASS,e.SHAYMIN,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.BLITZLE,e.ZEBSTRIKA,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.SCRAGGY,e.SCRAFTY,e.DUCKLETT,e.MINCCINO,e.CINCCINO,e.SWANNA,e.DEERLING,e.SAWSBUCK,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.LARVESTA,e.VOLCARONA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.MEOWSTIC,e.MALAMAR,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.PHANTUMP,e.TREVENANT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.YUNGOOS,e.GUMSHOOS,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.KOMALA,e.MIMIKYU,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.FLAPPLE,e.APPLETUN,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.FALINKS,e.ZACIAN,e.ZAMAZENTA,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.CYCLIZAR,e.CLODSIRE,e.FARIGIRAF,e.BRUTE_BONNET,e.SLITHER_WING,e.WO_CHIEN,e.IRON_LEAVES,e.MUNKIDORI,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_ZAPDOS,[e.CALYREX,"ice"],e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[A.CHILLING_WATER]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.CHANSEY,e.HORSEA,e.SEADRA,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.CLEFFA,e.MARILL,e.AZUMARILL,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.QWILFISH,e.DELIBIRD,e.KINGDRA,e.BLISSEY,e.SUICUNE,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.VOLBEAT,e.SPOINK,e.GRUMPIG,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.SNORUNT,e.GLALIE,e.LATIAS,e.LATIOS,e.KYOGRE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.HONCHKROW,e.MUNCHLAX,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.GLACEON,e.FROSLASS,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.BASCULIN,e.MINCCINO,e.CINCCINO,e.DUCKLETT,e.SWANNA,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.TORNADUS,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOOMY,e.SLIGGOO,e.GOODRA,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.BRUXISH,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.PINCURCHIN,e.EISCUE,e.BASCULEGION,e.OVERQWIL,e.MEOWSCARADA,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.MAUSHOLD,e.TADBULB,e.BELLIBOLT,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.CLODSIRE,e.DUDUNSPARCE,e.IRON_BUNDLE,e.WALKING_WAKE,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,[e.URSHIFU,"rapid-strike"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,[e.PALDEA_TAUROS,"aqua"],e.PALDEA_WOOPER],[A.HARD_PRESS]:[e.GRAVELER,e.GOLEM,e.SNORLAX,e.MEW,e.FORRETRESS,e.SCIZOR,e.TYRANITAR,e.SWAMPERT,e.SLAKING,e.CRAWDAUNT,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.TORTERRA,e.SHIELDON,e.BASTIODON,e.BRONZONG,e.HIPPOWDON,e.ABOMASNOW,e.MAGNEZONE,e.MAMOSWINE,e.PROBOPASS,e.DUSKNOIR,e.HEATRAN,e.REGIGIGAS,e.EMBOAR,e.CONKELDURR,e.BEARTIC,e.GOLURK,e.CRABOMINABLE,e.STONJOURNER,e.COPPERAJAH,e.URSALUNA,e.GARGANACL,e.TINKATON,e.PALAFIN,e.REVAVROOM,e.CETITAN,e.IRON_TREADS,e.IRON_HANDS,e.OKIDOGI,e.ARCHALUDON,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_AVALUGG,e.BLOODMOON_URSALUNA],[A.DRAGON_CHEER]:[e.CHARIZARD,e.GYARADOS,e.LAPRAS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.AMPHAROS,e.SCEPTILE,e.FLYGON,e.SWABLU,e.ALTARIA,e.MILOTIC,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.CRANIDOS,e.RAMPARDOS,e.GIBLE,e.GABITE,e.GARCHOMP,e.AXEW,e.FRAXURE,e.HAXORUS,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.GOODRA,e.NOIVERN,e.SALAZZLE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.REGIDRAGO,e.CYCLIZAR,e.TATSUGIRI,e.IRON_JUGULIS,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.DIPPLIN,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_EXEGGUTOR,e.HISUI_GOODRA],[A.ALLURING_VOICE]:[e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DEWGONG,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEW,e.CLEFFA,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.ESPEON,e.UMBREON,e.BLISSEY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.AZURILL,e.PLUSLE,e.MINUN,e.FLYGON,e.ALTARIA,e.MILOTIC,e.LATIAS,e.PACHIRISU,e.FINNEON,e.LUMINEON,e.LEAFEON,e.GLACEON,e.GALLADE,e.PHIONE,e.MANAPHY,e.LILLIGANT,e.MINCCINO,e.CINCCINO,e.SWANNA,e.ALOMOMOLA,e.MELOETTA,e.FLABEBE,e.FLOETTE,e.FLORGES,e.MEOWSTIC,e.SYLVEON,e.PRIMARINA,e.ORICORIO,e.RIBOMBEE,e.COMFEY,e.ALCREMIE,e.ENAMORUS,e.SKELEDIRGE,e.FIDOUGH,e.DACHSBUN,e.ARBOLIVA,e.FEZANDIPITI,e.ALOLA_RAICHU,e.ETERNAL_FLOETTE,[e.INDEEDEE,"female"]],[A.TEMPER_FLARE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.GROWLITHE,e.ARCANINE,e.MAGMAR,e.GYARADOS,e.FLAREON,e.MOLTRES,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SNUBBULL,e.GRANBULL,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SHELGON,e.SALAMENCE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.DRIFLOON,e.DRIFBLIM,e.STUNKY,e.SKUNTANK,e.RHYPERIOR,e.MAGMORTAR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.FLETCHINDER,e.TALONFLAME,e.PYROAR,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.TOUCANNON,e.SALANDIT,e.SALAZZLE,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.KLAWF,e.SCOVILLAIN,e.REVAVROOM,e.CYCLIZAR,e.GREAT_TUSK,e.SLITHER_WING,e.CHI_YU,e.KORAIDON,e.GOUGING_FIRE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,[e.PALDEA_TAUROS,"blaze"]],[A.SUPERCELL_SLAM]:[e.ELECTRODE,e.RHYHORN,e.RHYDON,e.ELECTABUZZ,e.SNORLAX,e.ZAPDOS,e.MEW,e.AMPHAROS,e.ELEKID,e.RAIKOU,e.MANECTRIC,e.LUXRAY,e.RAMPARDOS,e.MAGNEZONE,e.RHYPERIOR,e.ELECTIVIRE,e.PROBOPASS,e.ARCEUS,e.BLITZLE,e.ZEBSTRIKA,e.EELEKTROSS,e.THUNDURUS,e.ZEKROM,e.VIKAVOLT,e.PINCURCHIN,e.COPPERAJAH,e.REGIELEKI,e.URSALUNA,e.PAWMOT,e.BELLIBOLT,e.KILOWATTREL,e.CYCLIZAR,e.GREAT_TUSK,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.MIRAIDON,e.RAGING_BOLT,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_ELECTRODE],[A.PSYCHIC_NOISE]:[e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.SLOWBRO,e.GENGAR,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.LAPRAS,e.MEWTWO,e.MEW,e.NOCTOWL,e.YANMA,e.ESPEON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.LUGIA,e.GARDEVOIR,e.GRUMPIG,e.FLYGON,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.VESPIQUEN,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.YANMEGA,e.UXIE,e.MESPRIT,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.REUNICLUS,e.DELPHOX,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.MALAMAR,e.TREVENANT,e.NOIVERN,e.HOOPA,e.PRIMARINA,e.RIBOMBEE,e.ORANGURU,e.BRUXISH,e.TOXTRICITY,e.HATTERENE,e.INDEEDEE,e.WYRDEER,e.RABSCA,e.FARIGIRAF,e.SCREAM_TAIL,e.MUNKIDORI,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[A.UPPER_HAND]:[e.PIKACHU,e.RAICHU,e.POLIWRATH,e.HITMONLEE,e.HITMONCHAN,e.MEW,e.AIPOM,e.HERACROSS,e.SNEASEL,e.TYROGUE,e.HITMONTOP,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BLAZIKEN,e.SHIFTRY,e.HARIYAMA,e.MEDITITE,e.MEDICHAM,e.ZANGOOSE,e.MONFERNO,e.INFERNAPE,e.AMBIPOM,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.GALLADE,e.SAMUROTT,e.CONKELDURR,e.SCRAGGY,e.SCRAFTY,e.MIENFOO,e.MIENSHAO,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.GRENINJA,e.TALONFLAME,e.HAWLUCHA,e.CRABRAWLER,e.CRABOMINABLE,[e.LYCANROC,"midnight"],e.PASSIMIAN,e.HAKAMO_O,e.KOMMO_O,e.FALINKS,e.SNEASLER,e.QUAQUAVAL,e.SPIDOPS,e.PAWMO,e.PAWMOT,e.FLAMIGO,e.OKIDOGI,e.ALOLA_RAICHU,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE]};function K8(){const t={};for(const E in UI){const R=Number(E),I=UI[E];for(const N of I)if(Array.isArray(N)){const[S,...T]=N,i=Number(S);t[i]||(t[i]=[]);for(const o of T)t[i].push([o,R])}else{const S=Number(N);t[S]||(t[S]=[]),t[S].push(R)}}return t}r(K8,"transposeTmSpecies");const bX=K8(),gi={[A.MEGA_PUNCH]:p.GREAT,[A.PAY_DAY]:p.ULTRA,[A.FIRE_PUNCH]:p.GREAT,[A.ICE_PUNCH]:p.GREAT,[A.THUNDER_PUNCH]:p.GREAT,[A.SWORDS_DANCE]:p.COMMON,[A.CUT]:p.COMMON,[A.FLY]:p.COMMON,[A.MEGA_KICK]:p.GREAT,[A.BODY_SLAM]:p.GREAT,[A.TAKE_DOWN]:p.GREAT,[A.DOUBLE_EDGE]:p.ULTRA,[A.PIN_MISSILE]:p.COMMON,[A.ROAR]:p.COMMON,[A.FLAMETHROWER]:p.ULTRA,[A.HYDRO_PUMP]:p.ULTRA,[A.SURF]:p.ULTRA,[A.ICE_BEAM]:p.ULTRA,[A.BLIZZARD]:p.ULTRA,[A.PSYBEAM]:p.GREAT,[A.HYPER_BEAM]:p.ULTRA,[A.LOW_KICK]:p.COMMON,[A.COUNTER]:p.COMMON,[A.STRENGTH]:p.GREAT,[A.SOLAR_BEAM]:p.ULTRA,[A.FIRE_SPIN]:p.COMMON,[A.THUNDERBOLT]:p.ULTRA,[A.THUNDER_WAVE]:p.COMMON,[A.THUNDER]:p.ULTRA,[A.EARTHQUAKE]:p.ULTRA,[A.DIG]:p.GREAT,[A.TOXIC]:p.GREAT,[A.PSYCHIC]:p.ULTRA,[A.AGILITY]:p.COMMON,[A.NIGHT_SHADE]:p.COMMON,[A.SCREECH]:p.COMMON,[A.DOUBLE_TEAM]:p.COMMON,[A.CONFUSE_RAY]:p.COMMON,[A.LIGHT_SCREEN]:p.COMMON,[A.HAZE]:p.COMMON,[A.REFLECT]:p.COMMON,[A.FOCUS_ENERGY]:p.COMMON,[A.METRONOME]:p.COMMON,[A.SELF_DESTRUCT]:p.GREAT,[A.FIRE_BLAST]:p.ULTRA,[A.WATERFALL]:p.GREAT,[A.SWIFT]:p.COMMON,[A.AMNESIA]:p.COMMON,[A.DREAM_EATER]:p.GREAT,[A.LEECH_LIFE]:p.ULTRA,[A.FLASH]:p.COMMON,[A.EXPLOSION]:p.GREAT,[A.REST]:p.COMMON,[A.ROCK_SLIDE]:p.GREAT,[A.TRI_ATTACK]:p.ULTRA,[A.SUPER_FANG]:p.COMMON,[A.SUBSTITUTE]:p.COMMON,[A.THIEF]:p.GREAT,[A.SNORE]:p.COMMON,[A.CURSE]:p.COMMON,[A.REVERSAL]:p.COMMON,[A.SPITE]:p.COMMON,[A.PROTECT]:p.COMMON,[A.SCARY_FACE]:p.COMMON,[A.SLUDGE_BOMB]:p.GREAT,[A.MUD_SLAP]:p.COMMON,[A.SPIKES]:p.COMMON,[A.ICY_WIND]:p.GREAT,[A.OUTRAGE]:p.ULTRA,[A.SANDSTORM]:p.COMMON,[A.GIGA_DRAIN]:p.ULTRA,[A.ENDURE]:p.COMMON,[A.CHARM]:p.COMMON,[A.FALSE_SWIPE]:p.COMMON,[A.SWAGGER]:p.COMMON,[A.STEEL_WING]:p.GREAT,[A.ATTRACT]:p.COMMON,[A.SLEEP_TALK]:p.COMMON,[A.HEAL_BELL]:p.COMMON,[A.RETURN]:p.ULTRA,[A.FRUSTRATION]:p.COMMON,[A.SAFEGUARD]:p.COMMON,[A.PAIN_SPLIT]:p.COMMON,[A.MEGAHORN]:p.ULTRA,[A.BATON_PASS]:p.COMMON,[A.ENCORE]:p.COMMON,[A.IRON_TAIL]:p.GREAT,[A.METAL_CLAW]:p.COMMON,[A.SYNTHESIS]:p.GREAT,[A.HIDDEN_POWER]:p.GREAT,[A.RAIN_DANCE]:p.COMMON,[A.SUNNY_DAY]:p.COMMON,[A.CRUNCH]:p.GREAT,[A.PSYCH_UP]:p.COMMON,[A.SHADOW_BALL]:p.ULTRA,[A.FUTURE_SIGHT]:p.GREAT,[A.ROCK_SMASH]:p.COMMON,[A.WHIRLPOOL]:p.COMMON,[A.BEAT_UP]:p.COMMON,[A.UPROAR]:p.GREAT,[A.HEAT_WAVE]:p.ULTRA,[A.HAIL]:p.COMMON,[A.TORMENT]:p.COMMON,[A.WILL_O_WISP]:p.COMMON,[A.FACADE]:p.GREAT,[A.FOCUS_PUNCH]:p.COMMON,[A.NATURE_POWER]:p.COMMON,[A.CHARGE]:p.COMMON,[A.TAUNT]:p.COMMON,[A.HELPING_HAND]:p.COMMON,[A.TRICK]:p.COMMON,[A.SUPERPOWER]:p.ULTRA,[A.RECYCLE]:p.COMMON,[A.REVENGE]:p.GREAT,[A.BRICK_BREAK]:p.GREAT,[A.KNOCK_OFF]:p.GREAT,[A.ENDEAVOR]:p.COMMON,[A.SKILL_SWAP]:p.COMMON,[A.IMPRISON]:p.COMMON,[A.SECRET_POWER]:p.COMMON,[A.DIVE]:p.GREAT,[A.FEATHER_DANCE]:p.COMMON,[A.BLAZE_KICK]:p.GREAT,[A.HYPER_VOICE]:p.ULTRA,[A.BLAST_BURN]:p.ULTRA,[A.HYDRO_CANNON]:p.ULTRA,[A.WEATHER_BALL]:p.COMMON,[A.FAKE_TEARS]:p.COMMON,[A.AIR_CUTTER]:p.GREAT,[A.OVERHEAT]:p.ULTRA,[A.ROCK_TOMB]:p.GREAT,[A.METAL_SOUND]:p.COMMON,[A.COSMIC_POWER]:p.COMMON,[A.SIGNAL_BEAM]:p.GREAT,[A.SAND_TOMB]:p.COMMON,[A.MUDDY_WATER]:p.GREAT,[A.BULLET_SEED]:p.GREAT,[A.AERIAL_ACE]:p.GREAT,[A.ICICLE_SPEAR]:p.GREAT,[A.IRON_DEFENSE]:p.GREAT,[A.DRAGON_CLAW]:p.ULTRA,[A.FRENZY_PLANT]:p.ULTRA,[A.BULK_UP]:p.COMMON,[A.BOUNCE]:p.GREAT,[A.MUD_SHOT]:p.GREAT,[A.POISON_TAIL]:p.GREAT,[A.COVET]:p.GREAT,[A.MAGICAL_LEAF]:p.GREAT,[A.CALM_MIND]:p.GREAT,[A.LEAF_BLADE]:p.ULTRA,[A.DRAGON_DANCE]:p.GREAT,[A.ROCK_BLAST]:p.GREAT,[A.WATER_PULSE]:p.GREAT,[A.ROOST]:p.GREAT,[A.GRAVITY]:p.COMMON,[A.GYRO_BALL]:p.COMMON,[A.BRINE]:p.GREAT,[A.PLUCK]:p.GREAT,[A.TAILWIND]:p.GREAT,[A.U_TURN]:p.GREAT,[A.CLOSE_COMBAT]:p.ULTRA,[A.PAYBACK]:p.COMMON,[A.ASSURANCE]:p.COMMON,[A.EMBARGO]:p.COMMON,[A.FLING]:p.COMMON,[A.GASTRO_ACID]:p.GREAT,[A.POWER_SWAP]:p.COMMON,[A.GUARD_SWAP]:p.COMMON,[A.WORRY_SEED]:p.GREAT,[A.TOXIC_SPIKES]:p.GREAT,[A.FLARE_BLITZ]:p.ULTRA,[A.AURA_SPHERE]:p.GREAT,[A.ROCK_POLISH]:p.COMMON,[A.POISON_JAB]:p.GREAT,[A.DARK_PULSE]:p.GREAT,[A.AQUA_TAIL]:p.GREAT,[A.SEED_BOMB]:p.GREAT,[A.AIR_SLASH]:p.GREAT,[A.X_SCISSOR]:p.GREAT,[A.BUG_BUZZ]:p.GREAT,[A.DRAGON_PULSE]:p.GREAT,[A.POWER_GEM]:p.GREAT,[A.DRAIN_PUNCH]:p.GREAT,[A.VACUUM_WAVE]:p.COMMON,[A.FOCUS_BLAST]:p.GREAT,[A.ENERGY_BALL]:p.GREAT,[A.BRAVE_BIRD]:p.ULTRA,[A.EARTH_POWER]:p.ULTRA,[A.GIGA_IMPACT]:p.GREAT,[A.NASTY_PLOT]:p.COMMON,[A.AVALANCHE]:p.GREAT,[A.SHADOW_CLAW]:p.GREAT,[A.THUNDER_FANG]:p.GREAT,[A.ICE_FANG]:p.GREAT,[A.FIRE_FANG]:p.GREAT,[A.PSYCHO_CUT]:p.GREAT,[A.ZEN_HEADBUTT]:p.GREAT,[A.FLASH_CANNON]:p.GREAT,[A.ROCK_CLIMB]:p.GREAT,[A.DEFOG]:p.COMMON,[A.TRICK_ROOM]:p.COMMON,[A.DRACO_METEOR]:p.ULTRA,[A.LEAF_STORM]:p.ULTRA,[A.POWER_WHIP]:p.ULTRA,[A.CROSS_POISON]:p.GREAT,[A.GUNK_SHOT]:p.ULTRA,[A.IRON_HEAD]:p.GREAT,[A.STONE_EDGE]:p.ULTRA,[A.STEALTH_ROCK]:p.COMMON,[A.GRASS_KNOT]:p.ULTRA,[A.BUG_BITE]:p.GREAT,[A.CHARGE_BEAM]:p.GREAT,[A.HONE_CLAWS]:p.COMMON,[A.WONDER_ROOM]:p.COMMON,[A.PSYSHOCK]:p.GREAT,[A.VENOSHOCK]:p.GREAT,[A.MAGIC_ROOM]:p.COMMON,[A.SMACK_DOWN]:p.COMMON,[A.SLUDGE_WAVE]:p.GREAT,[A.HEAVY_SLAM]:p.GREAT,[A.ELECTRO_BALL]:p.GREAT,[A.FLAME_CHARGE]:p.GREAT,[A.LOW_SWEEP]:p.GREAT,[A.ACID_SPRAY]:p.COMMON,[A.FOUL_PLAY]:p.ULTRA,[A.ROUND]:p.COMMON,[A.ECHOED_VOICE]:p.COMMON,[A.STORED_POWER]:p.COMMON,[A.ALLY_SWITCH]:p.COMMON,[A.SCALD]:p.GREAT,[A.HEX]:p.GREAT,[A.SKY_DROP]:p.GREAT,[A.INCINERATE]:p.GREAT,[A.QUASH]:p.COMMON,[A.ACROBATICS]:p.GREAT,[A.RETALIATE]:p.GREAT,[A.WATER_PLEDGE]:p.GREAT,[A.FIRE_PLEDGE]:p.GREAT,[A.GRASS_PLEDGE]:p.GREAT,[A.VOLT_SWITCH]:p.GREAT,[A.STRUGGLE_BUG]:p.COMMON,[A.BULLDOZE]:p.GREAT,[A.FROST_BREATH]:p.GREAT,[A.DRAGON_TAIL]:p.GREAT,[A.WORK_UP]:p.COMMON,[A.ELECTROWEB]:p.GREAT,[A.WILD_CHARGE]:p.GREAT,[A.DRILL_RUN]:p.GREAT,[A.RAZOR_SHELL]:p.GREAT,[A.HEAT_CRASH]:p.GREAT,[A.TAIL_SLAP]:p.GREAT,[A.HURRICANE]:p.ULTRA,[A.SNARL]:p.COMMON,[A.PHANTOM_FORCE]:p.ULTRA,[A.PETAL_BLIZZARD]:p.GREAT,[A.DISARMING_VOICE]:p.GREAT,[A.DRAINING_KISS]:p.GREAT,[A.GRASSY_TERRAIN]:p.COMMON,[A.MISTY_TERRAIN]:p.COMMON,[A.PLAY_ROUGH]:p.GREAT,[A.CONFIDE]:p.COMMON,[A.MYSTICAL_FIRE]:p.GREAT,[A.EERIE_IMPULSE]:p.COMMON,[A.VENOM_DRENCH]:p.COMMON,[A.ELECTRIC_TERRAIN]:p.COMMON,[A.DAZZLING_GLEAM]:p.ULTRA,[A.INFESTATION]:p.COMMON,[A.POWER_UP_PUNCH]:p.GREAT,[A.DARKEST_LARIAT]:p.GREAT,[A.HIGH_HORSEPOWER]:p.ULTRA,[A.SOLAR_BLADE]:p.GREAT,[A.THROAT_CHOP]:p.GREAT,[A.POLLEN_PUFF]:p.GREAT,[A.PSYCHIC_TERRAIN]:p.COMMON,[A.LUNGE]:p.GREAT,[A.SPEED_SWAP]:p.COMMON,[A.SMART_STRIKE]:p.GREAT,[A.BRUTAL_SWING]:p.GREAT,[A.AURORA_VEIL]:p.COMMON,[A.PSYCHIC_FANGS]:p.GREAT,[A.STOMPING_TANTRUM]:p.GREAT,[A.LIQUIDATION]:p.ULTRA,[A.BODY_PRESS]:p.ULTRA,[A.BREAKING_SWIPE]:p.GREAT,[A.STEEL_BEAM]:p.ULTRA,[A.EXPANDING_FORCE]:p.GREAT,[A.STEEL_ROLLER]:p.COMMON,[A.SCALE_SHOT]:p.ULTRA,[A.METEOR_BEAM]:p.GREAT,[A.MISTY_EXPLOSION]:p.COMMON,[A.GRASSY_GLIDE]:p.COMMON,[A.RISING_VOLTAGE]:p.COMMON,[A.TERRAIN_PULSE]:p.COMMON,[A.SKITTER_SMACK]:p.GREAT,[A.BURNING_JEALOUSY]:p.GREAT,[A.LASH_OUT]:p.GREAT,[A.POLTERGEIST]:p.ULTRA,[A.CORROSIVE_GAS]:p.COMMON,[A.COACHING]:p.COMMON,[A.FLIP_TURN]:p.COMMON,[A.TRIPLE_AXEL]:p.COMMON,[A.DUAL_WINGBEAT]:p.COMMON,[A.SCORCHING_SANDS]:p.GREAT,[A.TERA_BLAST]:p.GREAT,[A.ICE_SPINNER]:p.GREAT,[A.SNOWSCAPE]:p.COMMON,[A.POUNCE]:p.COMMON,[A.TRAILBLAZE]:p.COMMON,[A.CHILLING_WATER]:p.COMMON,[A.HARD_PRESS]:p.GREAT,[A.DRAGON_CHEER]:p.COMMON,[A.ALLURING_VOICE]:p.GREAT,[A.TEMPER_FLARE]:p.GREAT,[A.SUPERCELL_SLAM]:p.GREAT,[A.PSYCHIC_NOISE]:p.GREAT,[A.UPPER_HAND]:p.COMMON};function QO(t,E=!1,R=!1,I=!1,N=XO.DEFAULT){let S=mN(be[t]);if(D.exists(`nature:${S}`)&&(S=D.t(`nature:${S}`)),E){let T=null,i=null;for(const U of mL){const _=Ri(t,U);_>1?T=U:_<1&&(i=U)}const o=R?Se.SUMMARY_ALT:Se.WINDOW,C=I?(U,_)=>U:(U,_)=>mI(U,_,N);T&&i?S=`${C(`${S}${R?" ":`
`}(`,o)}${C(`+${D.t(Ks(T))}`,Se.SUMMARY_PINK)}${C("/",o)}${C(`-${D.t(Ks(i))}`,Se.SUMMARY_BLUE)}${C(")",o)}`:S=C(`${S}${R?" ":`
`}(-)`,o)}return S}r(QO,"getNatureName");function Ri(t,E){switch(E){case h.ATK:switch(t){case be.LONELY:case be.BRAVE:case be.ADAMANT:case be.NAUGHTY:return 1.1;case be.BOLD:case be.TIMID:case be.MODEST:case be.CALM:return .9}break;case h.DEF:switch(t){case be.BOLD:case be.RELAXED:case be.IMPISH:case be.LAX:return 1.1;case be.LONELY:case be.HASTY:case be.MILD:case be.GENTLE:return .9}break;case h.SPATK:switch(t){case be.MODEST:case be.MILD:case be.QUIET:case be.RASH:return 1.1;case be.ADAMANT:case be.IMPISH:case be.JOLLY:case be.CAREFUL:return .9}break;case h.SPDEF:switch(t){case be.CALM:case be.GENTLE:case be.SASSY:case be.CAREFUL:return 1.1;case be.NAUGHTY:case be.LAX:case be.NAIVE:case be.RASH:return .9}break;case h.SPD:switch(t){case be.TIMID:case be.HASTY:case be.JOLLY:case be.NAIVE:return 1.1;case be.BRAVE:case be.RELAXED:case be.QUIET:case be.SASSY:return .9}break}return 1}r(Ri,"getNatureStatMultiplier");const hv=99;function xI(t){switch(t){case Me.POKEBALL:return"pb";case Me.GREAT_BALL:return"gb";case Me.ULTRA_BALL:return"ub";case Me.ROGUE_BALL:return"rb";case Me.MASTER_BALL:return"mb";case Me.LUXURY_BALL:return"lb"}}r(xI,"getPokeballAtlasKey");function WP(t){let E;switch(t){case Me.POKEBALL:E=D.t("pokeball:pokeBall");break;case Me.GREAT_BALL:E=D.t("pokeball:greatBall");break;case Me.ULTRA_BALL:E=D.t("pokeball:ultraBall");break;case Me.ROGUE_BALL:E=D.t("pokeball:rogueBall");break;case Me.MASTER_BALL:E=D.t("pokeball:masterBall");break;case Me.LUXURY_BALL:E=D.t("pokeball:luxuryBall");break}return E}r(WP,"getPokeballName");function mP(t){switch(t){case Me.POKEBALL:return 1;case Me.GREAT_BALL:return 1.5;case Me.ULTRA_BALL:return 2;case Me.ROGUE_BALL:return 3;case Me.MASTER_BALL:return-1;case Me.LUXURY_BALL:return 1}}r(mP,"getPokeballCatchMultiplier");function bI(t){switch(t){case Me.POKEBALL:return 13969705;case Me.GREAT_BALL:return 9745630;case Me.ULTRA_BALL:return 15125809;case Me.ROGUE_BALL:return 13969705;case Me.MASTER_BALL:return 10764733;case Me.LUXURY_BALL:return 16768618}}r(bI,"getPokeballTintColor");function ZX(t){var N;if(s.gameMode.isFreshStartChallenge())return 0;const E=s.gameData.getSpeciesCount(S=>!!S.caughtAttr),R=new me(1);(N=s.findModifier(S=>S instanceof $r))==null||N.apply(R);const I=s.gameMode.isDaily||E>800?2.5:E>600?2:E>400?1.5:E>200?1:E>100?.5:0;return Math.floor(R.value*I*Math.min(255,t)/6)}r(ZX,"getCriticalCaptureChance");function F8(t,E,R,I,N,S=!1){let T=1,i=E,o=R;const C=R-E,U=t.x,_=U+3,G=U-3;let H=4;const c=r(()=>{s.tweens.add({targets:t,y:R,duration:T*I,ease:"Cubic.easeIn",onComplete:r(()=>{s.playSound("se/pb_bounce_1",{volume:T}),T=T>.01?T*.5:0,T?(i=C*T,o=R-i,s.tweens.add({targets:t,y:o,duration:T*I,ease:"Cubic.easeOut",onComplete:r(()=>c(),"onComplete")})):N&&N()},"onComplete")})},"doBounce"),f=r(()=>{s.tweens.add({targets:t,x:G,duration:125,ease:"Linear",onComplete:r(()=>{s.tweens.add({targets:t,x:_,duration:125,ease:"Linear",onComplete:r(()=>{H--,H>0?f():s.tweens.add({targets:t,x:U,duration:60,ease:"Linear",onComplete:r(()=>s.time.delayedCall(500,c),"onComplete")})},"onComplete")})},"onComplete")})},"doCritShake");S?s.time.delayedCall(500,f):c()}r(F8,"doPokeballBounceAnim");var Je=(t=>(t[t.SINGLE_GENERATION=0]="SINGLE_GENERATION",t[t.SINGLE_TYPE=1]="SINGLE_TYPE",t[t.LOWER_MAX_STARTER_COST=2]="LOWER_MAX_STARTER_COST",t[t.LOWER_STARTER_POINTS=3]="LOWER_STARTER_POINTS",t[t.FRESH_START=4]="FRESH_START",t[t.INVERSE_BATTLE=5]="INVERSE_BATTLE",t[t.FLIP_STAT=6]="FLIP_STAT",t))(Je||{}),te=(t=>(t.MEGA="mega",t.MEGA_X="mega-x",t.MEGA_Y="mega-y",t.PRIMAL="primal",t.ORIGIN="origin",t.INCARNATE="incarnate",t.THERIAN="therian",t.GIGANTAMAX="gigantamax",t.GIGANTAMAX_SINGLE="gigantamax-single",t.GIGANTAMAX_RAPID="gigantamax-rapid",t.ETERNAMAX="eternamax",t))(te||{}),TO=(t=>(t[t.NONE=0]="NONE",t[t.ABOMASITE=1]="ABOMASITE",t[t.ABSOLITE=2]="ABSOLITE",t[t.AERODACTYLITE=3]="AERODACTYLITE",t[t.AGGRONITE=4]="AGGRONITE",t[t.ALAKAZITE=5]="ALAKAZITE",t[t.ALTARIANITE=6]="ALTARIANITE",t[t.AMPHAROSITE=7]="AMPHAROSITE",t[t.AUDINITE=8]="AUDINITE",t[t.BANETTITE=9]="BANETTITE",t[t.BEEDRILLITE=10]="BEEDRILLITE",t[t.BLASTOISINITE=11]="BLASTOISINITE",t[t.BLAZIKENITE=12]="BLAZIKENITE",t[t.CAMERUPTITE=13]="CAMERUPTITE",t[t.CHARIZARDITE_X=14]="CHARIZARDITE_X",t[t.CHARIZARDITE_Y=15]="CHARIZARDITE_Y",t[t.DIANCITE=16]="DIANCITE",t[t.GALLADITE=17]="GALLADITE",t[t.GARCHOMPITE=18]="GARCHOMPITE",t[t.GARDEVOIRITE=19]="GARDEVOIRITE",t[t.GENGARITE=20]="GENGARITE",t[t.GLALITITE=21]="GLALITITE",t[t.GYARADOSITE=22]="GYARADOSITE",t[t.HERACRONITE=23]="HERACRONITE",t[t.HOUNDOOMINITE=24]="HOUNDOOMINITE",t[t.KANGASKHANITE=25]="KANGASKHANITE",t[t.LATIASITE=26]="LATIASITE",t[t.LATIOSITE=27]="LATIOSITE",t[t.LOPUNNITE=28]="LOPUNNITE",t[t.LUCARIONITE=29]="LUCARIONITE",t[t.MANECTITE=30]="MANECTITE",t[t.MAWILITE=31]="MAWILITE",t[t.MEDICHAMITE=32]="MEDICHAMITE",t[t.METAGROSSITE=33]="METAGROSSITE",t[t.MEWTWONITE_X=34]="MEWTWONITE_X",t[t.MEWTWONITE_Y=35]="MEWTWONITE_Y",t[t.PIDGEOTITE=36]="PIDGEOTITE",t[t.PINSIRITE=37]="PINSIRITE",t[t.RAYQUAZITE=38]="RAYQUAZITE",t[t.SABLENITE=39]="SABLENITE",t[t.SALAMENCITE=40]="SALAMENCITE",t[t.SCEPTILITE=41]="SCEPTILITE",t[t.SCIZORITE=42]="SCIZORITE",t[t.SHARPEDONITE=43]="SHARPEDONITE",t[t.SLOWBRONITE=44]="SLOWBRONITE",t[t.STEELIXITE=45]="STEELIXITE",t[t.SWAMPERTITE=46]="SWAMPERTITE",t[t.TYRANITARITE=47]="TYRANITARITE",t[t.VENUSAURITE=48]="VENUSAURITE",t[t.BLUE_ORB=50]="BLUE_ORB",t[t.RED_ORB=51]="RED_ORB",t[t.ADAMANT_CRYSTAL=52]="ADAMANT_CRYSTAL",t[t.LUSTROUS_GLOBE=53]="LUSTROUS_GLOBE",t[t.GRISEOUS_CORE=54]="GRISEOUS_CORE",t[t.REVEAL_GLASS=55]="REVEAL_GLASS",t[t.MAX_MUSHROOMS=56]="MAX_MUSHROOMS",t[t.DARK_STONE=57]="DARK_STONE",t[t.LIGHT_STONE=58]="LIGHT_STONE",t[t.PRISON_BOTTLE=59]="PRISON_BOTTLE",t[t.RUSTED_SWORD=60]="RUSTED_SWORD",t[t.RUSTED_SHIELD=61]="RUSTED_SHIELD",t[t.ICY_REINS_OF_UNITY=62]="ICY_REINS_OF_UNITY",t[t.SHADOW_REINS_OF_UNITY=63]="SHADOW_REINS_OF_UNITY",t[t.ULTRANECROZIUM_Z=64]="ULTRANECROZIUM_Z",t[t.SHARP_METEORITE=100]="SHARP_METEORITE",t[t.HARD_METEORITE=101]="HARD_METEORITE",t[t.SMOOTH_METEORITE=102]="SMOOTH_METEORITE",t[t.GRACIDEA=103]="GRACIDEA",t[t.SHOCK_DRIVE=104]="SHOCK_DRIVE",t[t.BURN_DRIVE=105]="BURN_DRIVE",t[t.CHILL_DRIVE=106]="CHILL_DRIVE",t[t.DOUSE_DRIVE=107]="DOUSE_DRIVE",t[t.N_SOLARIZER=108]="N_SOLARIZER",t[t.N_LUNARIZER=109]="N_LUNARIZER",t[t.WELLSPRING_MASK=110]="WELLSPRING_MASK",t[t.HEARTHFLAME_MASK=111]="HEARTHFLAME_MASK",t[t.CORNERSTONE_MASK=112]="CORNERSTONE_MASK",t[t.FIST_PLATE=113]="FIST_PLATE",t[t.SKY_PLATE=114]="SKY_PLATE",t[t.TOXIC_PLATE=115]="TOXIC_PLATE",t[t.EARTH_PLATE=116]="EARTH_PLATE",t[t.STONE_PLATE=117]="STONE_PLATE",t[t.INSECT_PLATE=118]="INSECT_PLATE",t[t.SPOOKY_PLATE=119]="SPOOKY_PLATE",t[t.IRON_PLATE=120]="IRON_PLATE",t[t.FLAME_PLATE=121]="FLAME_PLATE",t[t.SPLASH_PLATE=122]="SPLASH_PLATE",t[t.MEADOW_PLATE=123]="MEADOW_PLATE",t[t.ZAP_PLATE=124]="ZAP_PLATE",t[t.MIND_PLATE=125]="MIND_PLATE",t[t.ICICLE_PLATE=126]="ICICLE_PLATE",t[t.DRACO_PLATE=127]="DRACO_PLATE",t[t.DREAD_PLATE=128]="DREAD_PLATE",t[t.PIXIE_PLATE=129]="PIXIE_PLATE",t[t.BLANK_PLATE=130]="BLANK_PLATE",t[t.LEGEND_PLATE=131]="LEGEND_PLATE",t[t.FIGHTING_MEMORY=132]="FIGHTING_MEMORY",t[t.FLYING_MEMORY=133]="FLYING_MEMORY",t[t.POISON_MEMORY=134]="POISON_MEMORY",t[t.GROUND_MEMORY=135]="GROUND_MEMORY",t[t.ROCK_MEMORY=136]="ROCK_MEMORY",t[t.BUG_MEMORY=137]="BUG_MEMORY",t[t.GHOST_MEMORY=138]="GHOST_MEMORY",t[t.STEEL_MEMORY=139]="STEEL_MEMORY",t[t.FIRE_MEMORY=140]="FIRE_MEMORY",t[t.WATER_MEMORY=141]="WATER_MEMORY",t[t.GRASS_MEMORY=142]="GRASS_MEMORY",t[t.ELECTRIC_MEMORY=143]="ELECTRIC_MEMORY",t[t.PSYCHIC_MEMORY=144]="PSYCHIC_MEMORY",t[t.ICE_MEMORY=145]="ICE_MEMORY",t[t.DRAGON_MEMORY=146]="DRAGON_MEMORY",t[t.DARK_MEMORY=147]="DARK_MEMORY",t[t.FAIRY_MEMORY=148]="FAIRY_MEMORY",t[t.NORMAL_MEMORY=149]="NORMAL_MEMORY",t))(TO||{});const Xc=class Xc{constructor(E,R,I,N,S=!1,...T){this.speciesId=E,this.preFormKey=R,this.formKey=I,this.trigger=N,this.quiet=S,this.conditions=T}canChange(E){if(E.species.speciesId!==this.speciesId||!E.species.forms.length)return!1;const R=E.species.forms.map(I=>I.formKey);if(R[E.formIndex]!==this.preFormKey||R[E.formIndex]===this.formKey)return!1;for(const I of this.conditions)if(!I.predicate(E))return!1;return!!this.trigger.canChange(E)}findTrigger(E){if(!this.trigger.hasTriggerType(E))return null;const R=this.trigger;return R instanceof Ba?R.triggers.find(I=>I.hasTriggerType(E)):R}};r(Xc,"SpeciesFormChange");let Ee=Xc;const Qc=class Qc{constructor(E,R){this.predicate=E,this.enforceFunc=R}};r(Qc,"SpeciesFormChangeCondition");let WA=Qc;const Jc=class Jc{constructor(){this.description=""}canChange(E){return!0}hasTriggerType(E){return this instanceof E}};r(Jc,"SpeciesFormChangeTrigger");let mR=Jc;const $c=class $c extends mR{};r($c,"SpeciesFormChangeManualTrigger");let gP=$c;const qc=class qc extends mR{constructor(){super(...arguments),this.description=D.t("pokemonEvolutions:Forms.ability")}};r(qc,"SpeciesFormChangeAbilityTrigger");let cA=qc;const zc=class zc{constructor(...E){this.description="",this.triggers=E,this.description=this.triggers.filter(R=>{var I;return((I=R==null?void 0:R.description)==null?void 0:I.length)>0}).map(R=>R.description).join(", ")}canChange(E){for(const R of this.triggers)if(!R.canChange(E))return!1;return!0}hasTriggerType(E){return!!this.triggers.find(R=>R.hasTriggerType(E))}};r(zc,"SpeciesFormChangeCompoundTrigger");let Ba=zc;const jc=class jc extends mR{constructor(E,R=!0){super(),this.item=E,this.active=R,this.description=this.active?D.t("pokemonEvolutions:Forms.item",{item:D.t(`modifierType:FormChangeItem.${TO[this.item]}`)}):D.t("pokemonEvolutions:Forms.deactivateItem",{item:D.t(`modifierType:FormChangeItem.${TO[this.item]}`)})}canChange(E){return!!s.findModifier(R=>R instanceof EI&&R.pokemonId===E.id&&R.formChangeItem===this.item&&R.active===this.active)}};r(jc,"SpeciesFormChangeItemTrigger");let re=jc;const eB=class eB extends mR{constructor(...E){super(),this.timesOfDay=E,this.description=D.t("pokemonEvolutions:Forms.timeOfDay")}canChange(E){return this.timesOfDay.indexOf(s.arena.getTimeOfDay())>-1}};r(eB,"SpeciesFormChangeTimeOfDayTrigger");let IV=eB;const AB=class AB extends mR{constructor(E=!1){super(),this.active=E,this.description=this.active?D.t("pokemonEvolutions:Forms.enter"):D.t("pokemonEvolutions:Forms.leave")}canChange(E){return E.isActive(!0)===this.active}};r(AB,"SpeciesFormChangeActiveTrigger");let xt=AB;const EB=class EB extends mR{constructor(E,R=!1){super(),Array.isArray(E)||(E=[E]),this.statusEffects=E,this.invert=R,this.description=D.t("pokemonEvolutions:Forms.statusEffect")}canChange(E){var R;return this.statusEffects.indexOf(((R=E.status)==null?void 0:R.effect)||J.NONE)>-1!==this.invert}};r(EB,"SpeciesFormChangeStatusEffectTrigger");let pP=EB;const tB=class tB extends mR{constructor(E,R=!0){super(),this.move=E,this.known=R;const I=A[this.move].split("_").filter(N=>N).map((N,S)=>S?`${N[0]}${N.slice(1).toLowerCase()}`:N.toLowerCase()).join("");this.description=R?D.t("pokemonEvolutions:Forms.moveLearned",{move:D.t(`move:${I}.name`)}):D.t("pokemonEvolutions:Forms.moveForgotten",{move:D.t(`move:${I}.name`)})}canChange(E){return!!E.moveset.filter(R=>R.moveId===this.move).length===this.known}};r(tB,"SpeciesFormChangeMoveLearnedTrigger");let yN=tB;const RB=class RB extends mR{constructor(E,R=!0){super(),this.movePredicate=typeof E=="function"?E:I=>I===E,this.used=R}};r(RB,"SpeciesFormChangeMoveTrigger");let co=RB;const OB=class OB extends co{constructor(){super(...arguments),this.description=D.t("pokemonEvolutions:Forms.preMove")}canChange(E){const R=s.currentBattle.turnCommands[E.getBattlerIndex()];return!!(R!=null&&R.move)&&this.movePredicate(R.move.move)===this.used}};r(OB,"SpeciesFormChangePreMoveTrigger");let ha=OB;const IB=class IB extends co{constructor(){super(...arguments),this.description=D.t("pokemonEvolutions:Forms.postMove")}canChange(E){return E.summonData&&!!E.getLastXMoves(1).filter(R=>this.movePredicate(R.move)).length===this.used}};r(IB,"SpeciesFormChangePostMoveTrigger");let fa=IB;const LB=class LB extends fa{canChange(E){return s.gameMode.hasChallenge(Je.SINGLE_TYPE)||E.hasAbility(O.SHEER_FORCE)?!1:super.canChange(E)}};r(LB,"MeloettaFormChangePostMoveTrigger");let Bo=LB;const NB=class NB extends mR{constructor(E){super(),this.formKey=E,this.description=""}canChange(E){return this.formKey===E.species.forms[s.getSpeciesFormIndex(E.species,E.gender,E.getNature(),!0)].formKey}};r(NB,"SpeciesDefaultFormMatchTrigger");let ho=NB;const sB=class sB extends mR{constructor(){super(...arguments),this.description=D.t("pokemonEvolutions:Forms.tera")}};r(sB,"SpeciesFormChangeTeraTrigger");let tN=sB;const SB=class SB extends mR{constructor(){super(...arguments),this.description=D.t("pokemonEvolutions:Forms.teraLapse")}};r(SB,"SpeciesFormChangeLapseTeraTrigger");let oL=SB;const TB=class TB extends mR{constructor(E,R){super(),this.ability=E,this.weathers=R,this.description=D.t("pokemonEvolutions:Forms.weather")}canChange(E){var S,T;const R=((S=s.arena.weather)==null?void 0:S.weatherType)??X.NONE,I=(T=s.arena.weather)==null?void 0:T.isEffectSuppressed();return!E.summonData.abilitySuppressed&&!I&&E.hasAbility(this.ability)&&this.weathers.includes(R)}};r(TB,"SpeciesFormChangeWeatherTrigger");let ZR=TB;const nB=class nB extends mR{constructor(E,R){super(),this.ability=E,this.weathers=R,this.description=D.t("pokemonEvolutions:Forms.weatherRevert")}canChange(E){var R,I;if(E.hasAbility(this.ability,!1,!0)){const N=((R=s.arena.weather)==null?void 0:R.weatherType)??X.NONE,S=(I=s.arena.weather)==null?void 0:I.isEffectSuppressed(),T=E.summonData.abilitySuppressed,i=E.summonData.ability,o=i!==this.ability&&i!==O.NONE;if(this.weathers.includes(N)||S||T||o)return!0}return!1}};r(nB,"SpeciesFormChangeRevertWeatherFormTrigger");let CI=nB;function kX(t,E,R){const I=E.formKey.indexOf(te.MEGA)>-1,N=E.formKey.indexOf(te.GIGANTAMAX)>-1,S=E.formKey.indexOf(te.ETERNAMAX)>-1,T=!I&&E.formKey===t.species.forms[0].formKey;return I?D.t("battlePokemonForm:megaChange",{preName:R,pokemonName:t.name}):N?D.t("battlePokemonForm:gigantamaxChange",{preName:R,pokemonName:t.name}):S?D.t("battlePokemonForm:eternamaxChange",{preName:R,pokemonName:t.name}):T?D.t("battlePokemonForm:revertChange",{pokemonName:Z(t)}):t.getAbility().id===O.DISGUISE?D.t("battlePokemonForm:disguiseChange"):D.t("battlePokemonForm:formChange",{preName:R})}r(kX,"getSpeciesFormChangeMessage");function Gs(t){return new WA(E=>!!s.gameData.dexData[t].caughtAttr)}r(Gs,"getSpeciesDependentFormChangeCondition");const PI={[e.VENUSAUR]:[new Ee(e.VENUSAUR,"",te.MEGA,new re(48)),new Ee(e.VENUSAUR,"",te.GIGANTAMAX,new re(56))],[e.BLASTOISE]:[new Ee(e.BLASTOISE,"",te.MEGA,new re(11)),new Ee(e.BLASTOISE,"",te.GIGANTAMAX,new re(56))],[e.CHARIZARD]:[new Ee(e.CHARIZARD,"",te.MEGA_X,new re(14)),new Ee(e.CHARIZARD,"",te.MEGA_Y,new re(15)),new Ee(e.CHARIZARD,"",te.GIGANTAMAX,new re(56))],[e.BUTTERFREE]:[new Ee(e.BUTTERFREE,"",te.GIGANTAMAX,new re(56))],[e.BEEDRILL]:[new Ee(e.BEEDRILL,"",te.MEGA,new re(10))],[e.PIDGEOT]:[new Ee(e.PIDGEOT,"",te.MEGA,new re(36))],[e.PIKACHU]:[new Ee(e.PIKACHU,"",te.GIGANTAMAX,new re(56)),new Ee(e.PIKACHU,"partner",te.GIGANTAMAX,new re(56))],[e.MEOWTH]:[new Ee(e.MEOWTH,"",te.GIGANTAMAX,new re(56))],[e.ALAKAZAM]:[new Ee(e.ALAKAZAM,"",te.MEGA,new re(5))],[e.MACHAMP]:[new Ee(e.MACHAMP,"",te.GIGANTAMAX,new re(56))],[e.SLOWBRO]:[new Ee(e.SLOWBRO,"",te.MEGA,new re(44))],[e.GENGAR]:[new Ee(e.GENGAR,"",te.MEGA,new re(20)),new Ee(e.GENGAR,"",te.GIGANTAMAX,new re(56))],[e.KINGLER]:[new Ee(e.KINGLER,"",te.GIGANTAMAX,new re(56))],[e.KANGASKHAN]:[new Ee(e.KANGASKHAN,"",te.MEGA,new re(25))],[e.PINSIR]:[new Ee(e.PINSIR,"",te.MEGA,new re(37))],[e.GYARADOS]:[new Ee(e.GYARADOS,"",te.MEGA,new re(22))],[e.LAPRAS]:[new Ee(e.LAPRAS,"",te.GIGANTAMAX,new re(56))],[e.EEVEE]:[new Ee(e.EEVEE,"",te.GIGANTAMAX,new re(56)),new Ee(e.EEVEE,"partner",te.GIGANTAMAX,new re(56))],[e.SNORLAX]:[new Ee(e.SNORLAX,"",te.GIGANTAMAX,new re(56))],[e.AERODACTYL]:[new Ee(e.AERODACTYL,"",te.MEGA,new re(3))],[e.MEWTWO]:[new Ee(e.MEWTWO,"",te.MEGA_X,new re(34)),new Ee(e.MEWTWO,"",te.MEGA_Y,new re(35))],[e.AMPHAROS]:[new Ee(e.AMPHAROS,"",te.MEGA,new re(7))],[e.STEELIX]:[new Ee(e.STEELIX,"",te.MEGA,new re(45))],[e.SCIZOR]:[new Ee(e.SCIZOR,"",te.MEGA,new re(42))],[e.HERACROSS]:[new Ee(e.HERACROSS,"",te.MEGA,new re(23))],[e.HOUNDOOM]:[new Ee(e.HOUNDOOM,"",te.MEGA,new re(24))],[e.TYRANITAR]:[new Ee(e.TYRANITAR,"",te.MEGA,new re(47))],[e.SCEPTILE]:[new Ee(e.SCEPTILE,"",te.MEGA,new re(41))],[e.BLAZIKEN]:[new Ee(e.BLAZIKEN,"",te.MEGA,new re(12))],[e.SWAMPERT]:[new Ee(e.SWAMPERT,"",te.MEGA,new re(46))],[e.GARDEVOIR]:[new Ee(e.GARDEVOIR,"",te.MEGA,new re(19))],[e.SABLEYE]:[new Ee(e.SABLEYE,"",te.MEGA,new re(39))],[e.MAWILE]:[new Ee(e.MAWILE,"",te.MEGA,new re(31))],[e.AGGRON]:[new Ee(e.AGGRON,"",te.MEGA,new re(4))],[e.MEDICHAM]:[new Ee(e.MEDICHAM,"",te.MEGA,new re(32))],[e.MANECTRIC]:[new Ee(e.MANECTRIC,"",te.MEGA,new re(30))],[e.SHARPEDO]:[new Ee(e.SHARPEDO,"",te.MEGA,new re(43))],[e.CAMERUPT]:[new Ee(e.CAMERUPT,"",te.MEGA,new re(13))],[e.ALTARIA]:[new Ee(e.ALTARIA,"",te.MEGA,new re(6))],[e.CASTFORM]:[new Ee(e.CASTFORM,"","sunny",new ZR(O.FORECAST,[X.SUNNY,X.HARSH_SUN]),!0),new Ee(e.CASTFORM,"rainy","sunny",new ZR(O.FORECAST,[X.SUNNY,X.HARSH_SUN]),!0),new Ee(e.CASTFORM,"snowy","sunny",new ZR(O.FORECAST,[X.SUNNY,X.HARSH_SUN]),!0),new Ee(e.CASTFORM,"","rainy",new ZR(O.FORECAST,[X.RAIN,X.HEAVY_RAIN]),!0),new Ee(e.CASTFORM,"sunny","rainy",new ZR(O.FORECAST,[X.RAIN,X.HEAVY_RAIN]),!0),new Ee(e.CASTFORM,"snowy","rainy",new ZR(O.FORECAST,[X.RAIN,X.HEAVY_RAIN]),!0),new Ee(e.CASTFORM,"","snowy",new ZR(O.FORECAST,[X.HAIL,X.SNOW]),!0),new Ee(e.CASTFORM,"sunny","snowy",new ZR(O.FORECAST,[X.HAIL,X.SNOW]),!0),new Ee(e.CASTFORM,"rainy","snowy",new ZR(O.FORECAST,[X.HAIL,X.SNOW]),!0),new Ee(e.CASTFORM,"sunny","",new CI(O.FORECAST,[X.NONE,X.SANDSTORM,X.STRONG_WINDS,X.FOG]),!0),new Ee(e.CASTFORM,"rainy","",new CI(O.FORECAST,[X.NONE,X.SANDSTORM,X.STRONG_WINDS,X.FOG]),!0),new Ee(e.CASTFORM,"snowy","",new CI(O.FORECAST,[X.NONE,X.SANDSTORM,X.STRONG_WINDS,X.FOG]),!0),new Ee(e.CASTFORM,"sunny","",new xt,!0),new Ee(e.CASTFORM,"rainy","",new xt,!0),new Ee(e.CASTFORM,"snowy","",new xt,!0)],[e.BANETTE]:[new Ee(e.BANETTE,"",te.MEGA,new re(9))],[e.ABSOL]:[new Ee(e.ABSOL,"",te.MEGA,new re(2))],[e.GLALIE]:[new Ee(e.GLALIE,"",te.MEGA,new re(21))],[e.SALAMENCE]:[new Ee(e.SALAMENCE,"",te.MEGA,new re(40))],[e.METAGROSS]:[new Ee(e.METAGROSS,"",te.MEGA,new re(33))],[e.LATIAS]:[new Ee(e.LATIAS,"",te.MEGA,new re(26))],[e.LATIOS]:[new Ee(e.LATIOS,"",te.MEGA,new re(27))],[e.KYOGRE]:[new Ee(e.KYOGRE,"",te.PRIMAL,new re(50))],[e.GROUDON]:[new Ee(e.GROUDON,"",te.PRIMAL,new re(51))],[e.RAYQUAZA]:[new Ee(e.RAYQUAZA,"",te.MEGA,new re(38))],[e.DEOXYS]:[new Ee(e.DEOXYS,"normal","attack",new re(100)),new Ee(e.DEOXYS,"normal","defense",new re(101)),new Ee(e.DEOXYS,"normal","speed",new re(102))],[e.CHERRIM]:[new Ee(e.CHERRIM,"overcast","sunshine",new ZR(O.FLOWER_GIFT,[X.SUNNY,X.HARSH_SUN]),!0),new Ee(e.CHERRIM,"sunshine","overcast",new CI(O.FLOWER_GIFT,[X.NONE,X.SANDSTORM,X.STRONG_WINDS,X.FOG,X.HAIL,X.HEAVY_RAIN,X.SNOW,X.RAIN]),!0),new Ee(e.CHERRIM,"sunshine","overcast",new xt,!0)],[e.LOPUNNY]:[new Ee(e.LOPUNNY,"",te.MEGA,new re(28))],[e.GARCHOMP]:[new Ee(e.GARCHOMP,"",te.MEGA,new re(18))],[e.LUCARIO]:[new Ee(e.LUCARIO,"",te.MEGA,new re(29))],[e.ABOMASNOW]:[new Ee(e.ABOMASNOW,"",te.MEGA,new re(1))],[e.GALLADE]:[new Ee(e.GALLADE,"",te.MEGA,new re(17))],[e.AUDINO]:[new Ee(e.AUDINO,"",te.MEGA,new re(8))],[e.DIALGA]:[new Ee(e.DIALGA,"",te.ORIGIN,new re(52))],[e.PALKIA]:[new Ee(e.PALKIA,"",te.ORIGIN,new re(53))],[e.GIRATINA]:[new Ee(e.GIRATINA,"altered",te.ORIGIN,new re(54))],[e.SHAYMIN]:[new Ee(e.SHAYMIN,"land","sky",new re(103))],[e.ARCEUS]:[new Ee(e.ARCEUS,"normal","fighting",new re(113),!0,new WA(t=>t.hasAbility(O.MULTITYPE))),new Ee(e.ARCEUS,"normal","flying",new re(114),!0,new WA(t=>t.hasAbility(O.MULTITYPE))),new Ee(e.ARCEUS,"normal","poison",new re(115),!0,new WA(t=>t.hasAbility(O.MULTITYPE))),new Ee(e.ARCEUS,"normal","ground",new re(116),!0,new WA(t=>t.hasAbility(O.MULTITYPE))),new Ee(e.ARCEUS,"normal","rock",new re(117),!0,new WA(t=>t.hasAbility(O.MULTITYPE))),new Ee(e.ARCEUS,"normal","bug",new re(118),!0,new WA(t=>t.hasAbility(O.MULTITYPE))),new Ee(e.ARCEUS,"normal","ghost",new re(119),!0,new WA(t=>t.hasAbility(O.MULTITYPE))),new Ee(e.ARCEUS,"normal","steel",new re(120),!0,new WA(t=>t.hasAbility(O.MULTITYPE))),new Ee(e.ARCEUS,"normal","fire",new re(121),!0,new WA(t=>t.hasAbility(O.MULTITYPE))),new Ee(e.ARCEUS,"normal","water",new re(122),!0,new WA(t=>t.hasAbility(O.MULTITYPE))),new Ee(e.ARCEUS,"normal","grass",new re(123),!0,new WA(t=>t.hasAbility(O.MULTITYPE))),new Ee(e.ARCEUS,"normal","electric",new re(124),!0,new WA(t=>t.hasAbility(O.MULTITYPE))),new Ee(e.ARCEUS,"normal","psychic",new re(125),!0,new WA(t=>t.hasAbility(O.MULTITYPE))),new Ee(e.ARCEUS,"normal","ice",new re(126),!0,new WA(t=>t.hasAbility(O.MULTITYPE))),new Ee(e.ARCEUS,"normal","dragon",new re(127),!0,new WA(t=>t.hasAbility(O.MULTITYPE))),new Ee(e.ARCEUS,"normal","dark",new re(128),!0,new WA(t=>t.hasAbility(O.MULTITYPE))),new Ee(e.ARCEUS,"normal","fairy",new re(129),!0,new WA(t=>t.hasAbility(O.MULTITYPE)))],[e.DARMANITAN]:[new Ee(e.DARMANITAN,"","zen",new cA,!0),new Ee(e.DARMANITAN,"zen","",new cA,!0)],[e.GARBODOR]:[new Ee(e.GARBODOR,"",te.GIGANTAMAX,new re(56))],[e.TORNADUS]:[new Ee(e.TORNADUS,te.INCARNATE,te.THERIAN,new re(55))],[e.THUNDURUS]:[new Ee(e.THUNDURUS,te.INCARNATE,te.THERIAN,new re(55))],[e.LANDORUS]:[new Ee(e.LANDORUS,te.INCARNATE,te.THERIAN,new re(55))],[e.KYUREM]:[new Ee(e.KYUREM,"","black",new re(57),!1,Gs(e.ZEKROM)),new Ee(e.KYUREM,"","white",new re(58),!1,Gs(e.RESHIRAM))],[e.KELDEO]:[new Ee(e.KELDEO,"ordinary","resolute",new yN(A.SECRET_SWORD),!1,new WA(()=>s.gameMode.isDaily!==!0)),new Ee(e.KELDEO,"resolute","ordinary",new yN(A.SECRET_SWORD,!1),!1,new WA(()=>s.gameMode.isDaily!==!0))],[e.MELOETTA]:[new Ee(e.MELOETTA,"aria","pirouette",new Bo(A.RELIC_SONG),!0),new Ee(e.MELOETTA,"pirouette","aria",new Bo(A.RELIC_SONG),!0)],[e.GENESECT]:[new Ee(e.GENESECT,"","shock",new re(104)),new Ee(e.GENESECT,"","burn",new re(105)),new Ee(e.GENESECT,"","chill",new re(106)),new Ee(e.GENESECT,"","douse",new re(107))],[e.GRENINJA]:[new Ee(e.GRENINJA,"battle-bond","ash",new cA,!0),new Ee(e.GRENINJA,"ash","battle-bond",new cA,!0)],[e.PALAFIN]:[new Ee(e.PALAFIN,"zero","hero",new cA,!0),new Ee(e.PALAFIN,"hero","zero",new cA,!0)],[e.AEGISLASH]:[new Ee(e.AEGISLASH,"blade","shield",new ha(A.KINGS_SHIELD),!0,new WA(t=>t.hasAbility(O.STANCE_CHANGE))),new Ee(e.AEGISLASH,"shield","blade",new ha(t=>Ke[t].category!==u.STATUS),!0,new WA(t=>t.hasAbility(O.STANCE_CHANGE))),new Ee(e.AEGISLASH,"blade","shield",new xt(!1),!0)],[e.XERNEAS]:[new Ee(e.XERNEAS,"neutral","active",new xt(!0),!0),new Ee(e.XERNEAS,"active","neutral",new xt(!1),!0)],[e.ZYGARDE]:[new Ee(e.ZYGARDE,"50-pc","complete",new cA,!0),new Ee(e.ZYGARDE,"complete","50-pc",new cA,!0),new Ee(e.ZYGARDE,"10-pc","10-complete",new cA,!0),new Ee(e.ZYGARDE,"10-complete","10-pc",new cA,!0)],[e.DIANCIE]:[new Ee(e.DIANCIE,"",te.MEGA,new re(16))],[e.HOOPA]:[new Ee(e.HOOPA,"","unbound",new re(59))],[e.WISHIWASHI]:[new Ee(e.WISHIWASHI,"","school",new cA,!0),new Ee(e.WISHIWASHI,"school","",new cA,!0)],[e.SILVALLY]:[new Ee(e.SILVALLY,"normal","fighting",new re(132),!0,new WA(t=>t.hasAbility(O.RKS_SYSTEM))),new Ee(e.SILVALLY,"normal","flying",new re(133),!0,new WA(t=>t.hasAbility(O.RKS_SYSTEM))),new Ee(e.SILVALLY,"normal","poison",new re(134),!0,new WA(t=>t.hasAbility(O.RKS_SYSTEM))),new Ee(e.SILVALLY,"normal","ground",new re(135),!0,new WA(t=>t.hasAbility(O.RKS_SYSTEM))),new Ee(e.SILVALLY,"normal","rock",new re(136),!0,new WA(t=>t.hasAbility(O.RKS_SYSTEM))),new Ee(e.SILVALLY,"normal","bug",new re(137),!0,new WA(t=>t.hasAbility(O.RKS_SYSTEM))),new Ee(e.SILVALLY,"normal","ghost",new re(138),!0,new WA(t=>t.hasAbility(O.RKS_SYSTEM))),new Ee(e.SILVALLY,"normal","steel",new re(139),!0,new WA(t=>t.hasAbility(O.RKS_SYSTEM))),new Ee(e.SILVALLY,"normal","fire",new re(140),!0,new WA(t=>t.hasAbility(O.RKS_SYSTEM))),new Ee(e.SILVALLY,"normal","water",new re(141),!0,new WA(t=>t.hasAbility(O.RKS_SYSTEM))),new Ee(e.SILVALLY,"normal","grass",new re(142),!0,new WA(t=>t.hasAbility(O.RKS_SYSTEM))),new Ee(e.SILVALLY,"normal","electric",new re(143),!0,new WA(t=>t.hasAbility(O.RKS_SYSTEM))),new Ee(e.SILVALLY,"normal","psychic",new re(144),!0,new WA(t=>t.hasAbility(O.RKS_SYSTEM))),new Ee(e.SILVALLY,"normal","ice",new re(145),!0,new WA(t=>t.hasAbility(O.RKS_SYSTEM))),new Ee(e.SILVALLY,"normal","dragon",new re(146),!0,new WA(t=>t.hasAbility(O.RKS_SYSTEM))),new Ee(e.SILVALLY,"normal","dark",new re(147),!0,new WA(t=>t.hasAbility(O.RKS_SYSTEM))),new Ee(e.SILVALLY,"normal","fairy",new re(148),!0,new WA(t=>t.hasAbility(O.RKS_SYSTEM)))],[e.MINIOR]:[new Ee(e.MINIOR,"red-meteor","red",new cA,!0),new Ee(e.MINIOR,"red","red-meteor",new cA,!0),new Ee(e.MINIOR,"orange-meteor","orange",new cA,!0),new Ee(e.MINIOR,"orange","orange-meteor",new cA,!0),new Ee(e.MINIOR,"yellow-meteor","yellow",new cA,!0),new Ee(e.MINIOR,"yellow","yellow-meteor",new cA,!0),new Ee(e.MINIOR,"green-meteor","green",new cA,!0),new Ee(e.MINIOR,"green","green-meteor",new cA,!0),new Ee(e.MINIOR,"blue-meteor","blue",new cA,!0),new Ee(e.MINIOR,"blue","blue-meteor",new cA,!0),new Ee(e.MINIOR,"indigo-meteor","indigo",new cA,!0),new Ee(e.MINIOR,"indigo","indigo-meteor",new cA,!0),new Ee(e.MINIOR,"violet-meteor","violet",new cA,!0),new Ee(e.MINIOR,"violet","violet-meteor",new cA,!0)],[e.MIMIKYU]:[new Ee(e.MIMIKYU,"disguised","busted",new cA,!0),new Ee(e.MIMIKYU,"busted","disguised",new cA,!0)],[e.NECROZMA]:[new Ee(e.NECROZMA,"","dawn-wings",new re(109),!1,Gs(e.LUNALA)),new Ee(e.NECROZMA,"","dusk-mane",new re(108),!1,Gs(e.SOLGALEO)),new Ee(e.NECROZMA,"dawn-wings","ultra",new re(64)),new Ee(e.NECROZMA,"dusk-mane","ultra",new re(64))],[e.MELMETAL]:[new Ee(e.MELMETAL,"",te.GIGANTAMAX,new re(56))],[e.RILLABOOM]:[new Ee(e.RILLABOOM,"",te.GIGANTAMAX,new re(56))],[e.CINDERACE]:[new Ee(e.CINDERACE,"",te.GIGANTAMAX,new re(56))],[e.INTELEON]:[new Ee(e.INTELEON,"",te.GIGANTAMAX,new re(56))],[e.CORVIKNIGHT]:[new Ee(e.CORVIKNIGHT,"",te.GIGANTAMAX,new re(56))],[e.ORBEETLE]:[new Ee(e.ORBEETLE,"",te.GIGANTAMAX,new re(56))],[e.DREDNAW]:[new Ee(e.DREDNAW,"",te.GIGANTAMAX,new re(56))],[e.COALOSSAL]:[new Ee(e.COALOSSAL,"",te.GIGANTAMAX,new re(56))],[e.FLAPPLE]:[new Ee(e.FLAPPLE,"",te.GIGANTAMAX,new re(56))],[e.APPLETUN]:[new Ee(e.APPLETUN,"",te.GIGANTAMAX,new re(56))],[e.SANDACONDA]:[new Ee(e.SANDACONDA,"",te.GIGANTAMAX,new re(56))],[e.CRAMORANT]:[new Ee(e.CRAMORANT,"","gulping",new cA,!0,new WA(t=>t.getHpRatio()>=.5)),new Ee(e.CRAMORANT,"","gorging",new cA,!0,new WA(t=>t.getHpRatio()<.5)),new Ee(e.CRAMORANT,"gulping","",new cA,!0),new Ee(e.CRAMORANT,"gorging","",new cA,!0),new Ee(e.CRAMORANT,"gulping","",new xt(!1),!0),new Ee(e.CRAMORANT,"gorging","",new xt(!1),!0)],[e.TOXTRICITY]:[new Ee(e.TOXTRICITY,"amped",te.GIGANTAMAX,new re(56)),new Ee(e.TOXTRICITY,"lowkey",te.GIGANTAMAX,new re(56)),new Ee(e.TOXTRICITY,te.GIGANTAMAX,"amped",new Ba(new re(56,!1),new ho("amped"))),new Ee(e.TOXTRICITY,te.GIGANTAMAX,"lowkey",new Ba(new re(56,!1),new ho("lowkey")))],[e.CENTISKORCH]:[new Ee(e.CENTISKORCH,"",te.GIGANTAMAX,new re(56))],[e.HATTERENE]:[new Ee(e.HATTERENE,"",te.GIGANTAMAX,new re(56))],[e.GRIMMSNARL]:[new Ee(e.GRIMMSNARL,"",te.GIGANTAMAX,new re(56))],[e.ALCREMIE]:[new Ee(e.ALCREMIE,"vanilla-cream",te.GIGANTAMAX,new re(56)),new Ee(e.ALCREMIE,"ruby-cream",te.GIGANTAMAX,new re(56)),new Ee(e.ALCREMIE,"matcha-cream",te.GIGANTAMAX,new re(56)),new Ee(e.ALCREMIE,"mint-cream",te.GIGANTAMAX,new re(56)),new Ee(e.ALCREMIE,"lemon-cream",te.GIGANTAMAX,new re(56)),new Ee(e.ALCREMIE,"salted-cream",te.GIGANTAMAX,new re(56)),new Ee(e.ALCREMIE,"ruby-swirl",te.GIGANTAMAX,new re(56)),new Ee(e.ALCREMIE,"caramel-swirl",te.GIGANTAMAX,new re(56)),new Ee(e.ALCREMIE,"rainbow-swirl",te.GIGANTAMAX,new re(56))],[e.EISCUE]:[new Ee(e.EISCUE,"","no-ice",new cA,!0),new Ee(e.EISCUE,"no-ice","",new cA,!0)],[e.MORPEKO]:[new Ee(e.MORPEKO,"full-belly","hangry",new cA,!0),new Ee(e.MORPEKO,"hangry","full-belly",new cA,!0)],[e.COPPERAJAH]:[new Ee(e.COPPERAJAH,"",te.GIGANTAMAX,new re(56))],[e.DURALUDON]:[new Ee(e.DURALUDON,"",te.GIGANTAMAX,new re(56))],[e.ZACIAN]:[new Ee(e.ZACIAN,"hero-of-many-battles","crowned",new re(60))],[e.ZAMAZENTA]:[new Ee(e.ZAMAZENTA,"hero-of-many-battles","crowned",new re(61))],[e.ETERNATUS]:[new Ee(e.ETERNATUS,"",te.ETERNAMAX,new gP),new Ee(e.ETERNATUS,"",te.ETERNAMAX,new re(56))],[e.URSHIFU]:[new Ee(e.URSHIFU,"single-strike",te.GIGANTAMAX_SINGLE,new re(56)),new Ee(e.URSHIFU,"rapid-strike",te.GIGANTAMAX_RAPID,new re(56))],[e.CALYREX]:[new Ee(e.CALYREX,"","ice",new re(62),!1,Gs(e.GLASTRIER)),new Ee(e.CALYREX,"","shadow",new re(63),!1,Gs(e.SPECTRIER))],[e.ENAMORUS]:[new Ee(e.ENAMORUS,te.INCARNATE,te.THERIAN,new re(55))],[e.OGERPON]:[new Ee(e.OGERPON,"teal-mask","wellspring-mask",new re(110)),new Ee(e.OGERPON,"teal-mask","hearthflame-mask",new re(111)),new Ee(e.OGERPON,"teal-mask","cornerstone-mask",new re(112)),new Ee(e.OGERPON,"teal-mask","teal-mask-tera",new tN,!0),new Ee(e.OGERPON,"teal-mask-tera","teal-mask",new oL,!0),new Ee(e.OGERPON,"wellspring-mask","wellspring-mask-tera",new tN,!0),new Ee(e.OGERPON,"wellspring-mask-tera","wellspring-mask",new oL,!0),new Ee(e.OGERPON,"hearthflame-mask","hearthflame-mask-tera",new tN,!0),new Ee(e.OGERPON,"hearthflame-mask-tera","hearthflame-mask",new oL,!0),new Ee(e.OGERPON,"cornerstone-mask","cornerstone-mask-tera",new tN,!0),new Ee(e.OGERPON,"cornerstone-mask-tera","cornerstone-mask",new oL,!0)],[e.TERAPAGOS]:[new Ee(e.TERAPAGOS,"","terastal",new cA,!0),new Ee(e.TERAPAGOS,"terastal","stellar",new tN,!0),new Ee(e.TERAPAGOS,"stellar","terastal",new oL,!0)],[e.GALAR_DARMANITAN]:[new Ee(e.GALAR_DARMANITAN,"","zen",new cA,!0),new Ee(e.GALAR_DARMANITAN,"zen","",new cA,!0)]};function Y8(){const t=Object.keys(PI);for(const E of t){const R=PI[E],I=[];for(const N of R){const S=N.findTrigger(re);S&&!R.find(T=>N.formKey===T.preFormKey&&N.preFormKey===T.formKey)&&I.push(new Ee(N.speciesId,N.formKey,N.preFormKey,new re(S.item,!1)))}R.push(...I)}}r(Y8,"initPokemonForms");function W8(t){return JSON.parse(JSON.stringify(t))}r(W8,"deepCopy");function m8(t,E){for(const R of Object.keys(E))!(R in t)||typeof E[R]!=typeof t[R]||Array.isArray(E[R])!==Array.isArray(t[R])||(typeof E[R]!="object"||E[R]===null||Array.isArray(E[R])?t[R]=E[R]:m8(t[R],E[R]))}r(m8,"deepMergeSpriteData");var aA=(t=>(t[t.TOWN_YOUNGSTER=5]="TOWN_YOUNGSTER",t[t.RIVAL_1=8]="RIVAL_1",t[t.RIVAL_2=25]="RIVAL_2",t[t.EVIL_GRUNT_1=35]="EVIL_GRUNT_1",t[t.RIVAL_3=55]="RIVAL_3",t[t.EVIL_GRUNT_2=62]="EVIL_GRUNT_2",t[t.EVIL_GRUNT_3=64]="EVIL_GRUNT_3",t[t.EVIL_ADMIN_1=66]="EVIL_ADMIN_1",t[t.RIVAL_4=95]="RIVAL_4",t[t.EVIL_GRUNT_4=112]="EVIL_GRUNT_4",t[t.EVIL_ADMIN_2=114]="EVIL_ADMIN_2",t[t.EVIL_BOSS_1=115]="EVIL_BOSS_1",t[t.RIVAL_5=145]="RIVAL_5",t[t.EVIL_BOSS_2=165]="EVIL_BOSS_2",t[t.ELITE_FOUR_1=182]="ELITE_FOUR_1",t[t.ELITE_FOUR_2=184]="ELITE_FOUR_2",t[t.ELITE_FOUR_3=186]="ELITE_FOUR_3",t[t.ELITE_FOUR_4=188]="ELITE_FOUR_4",t[t.CHAMPION=190]="CHAMPION",t[t.RIVAL_6=195]="RIVAL_6",t))(aA||{}),l=(t=>(t[t.UNKNOWN=0]="UNKNOWN",t[t.ACE_TRAINER=1]="ACE_TRAINER",t[t.ARTIST=2]="ARTIST",t[t.BACKERS=3]="BACKERS",t[t.BACKPACKER=4]="BACKPACKER",t[t.BAKER=5]="BAKER",t[t.BEAUTY=6]="BEAUTY",t[t.BIKER=7]="BIKER",t[t.BLACK_BELT=8]="BLACK_BELT",t[t.BREEDER=9]="BREEDER",t[t.CLERK=10]="CLERK",t[t.CYCLIST=11]="CYCLIST",t[t.DANCER=12]="DANCER",t[t.DEPOT_AGENT=13]="DEPOT_AGENT",t[t.DOCTOR=14]="DOCTOR",t[t.FIREBREATHER=15]="FIREBREATHER",t[t.FISHERMAN=16]="FISHERMAN",t[t.GUITARIST=17]="GUITARIST",t[t.HARLEQUIN=18]="HARLEQUIN",t[t.HIKER=19]="HIKER",t[t.HOOLIGANS=20]="HOOLIGANS",t[t.HOOPSTER=21]="HOOPSTER",t[t.INFIELDER=22]="INFIELDER",t[t.JANITOR=23]="JANITOR",t[t.LINEBACKER=24]="LINEBACKER",t[t.MAID=25]="MAID",t[t.MUSICIAN=26]="MUSICIAN",t[t.HEX_MANIAC=27]="HEX_MANIAC",t[t.NURSERY_AIDE=28]="NURSERY_AIDE",t[t.OFFICER=29]="OFFICER",t[t.PARASOL_LADY=30]="PARASOL_LADY",t[t.PILOT=31]="PILOT",t[t.POKEFAN=32]="POKEFAN",t[t.PRESCHOOLER=33]="PRESCHOOLER",t[t.PSYCHIC=34]="PSYCHIC",t[t.RANGER=35]="RANGER",t[t.RICH=36]="RICH",t[t.RICH_KID=37]="RICH_KID",t[t.ROUGHNECK=38]="ROUGHNECK",t[t.SAILOR=39]="SAILOR",t[t.SCIENTIST=40]="SCIENTIST",t[t.SMASHER=41]="SMASHER",t[t.SNOW_WORKER=42]="SNOW_WORKER",t[t.STRIKER=43]="STRIKER",t[t.SCHOOL_KID=44]="SCHOOL_KID",t[t.SWIMMER=45]="SWIMMER",t[t.TWINS=46]="TWINS",t[t.VETERAN=47]="VETERAN",t[t.WAITER=48]="WAITER",t[t.WORKER=49]="WORKER",t[t.YOUNGSTER=50]="YOUNGSTER",t[t.ROCKET_GRUNT=51]="ROCKET_GRUNT",t[t.ARCHER=52]="ARCHER",t[t.ARIANA=53]="ARIANA",t[t.PROTON=54]="PROTON",t[t.PETREL=55]="PETREL",t[t.MAGMA_GRUNT=56]="MAGMA_GRUNT",t[t.TABITHA=57]="TABITHA",t[t.COURTNEY=58]="COURTNEY",t[t.AQUA_GRUNT=59]="AQUA_GRUNT",t[t.MATT=60]="MATT",t[t.SHELLY=61]="SHELLY",t[t.GALACTIC_GRUNT=62]="GALACTIC_GRUNT",t[t.JUPITER=63]="JUPITER",t[t.MARS=64]="MARS",t[t.SATURN=65]="SATURN",t[t.PLASMA_GRUNT=66]="PLASMA_GRUNT",t[t.ZINZOLIN=67]="ZINZOLIN",t[t.COLRESS=68]="COLRESS",t[t.FLARE_GRUNT=69]="FLARE_GRUNT",t[t.BRYONY=70]="BRYONY",t[t.XEROSIC=71]="XEROSIC",t[t.AETHER_GRUNT=72]="AETHER_GRUNT",t[t.FABA=73]="FABA",t[t.SKULL_GRUNT=74]="SKULL_GRUNT",t[t.PLUMERIA=75]="PLUMERIA",t[t.MACRO_GRUNT=76]="MACRO_GRUNT",t[t.OLEANA=77]="OLEANA",t[t.STAR_GRUNT=78]="STAR_GRUNT",t[t.GIACOMO=79]="GIACOMO",t[t.MELA=80]="MELA",t[t.ATTICUS=81]="ATTICUS",t[t.ORTEGA=82]="ORTEGA",t[t.ERI=83]="ERI",t[t.ROCKET_BOSS_GIOVANNI_1=84]="ROCKET_BOSS_GIOVANNI_1",t[t.ROCKET_BOSS_GIOVANNI_2=85]="ROCKET_BOSS_GIOVANNI_2",t[t.MAXIE=86]="MAXIE",t[t.MAXIE_2=87]="MAXIE_2",t[t.ARCHIE=88]="ARCHIE",t[t.ARCHIE_2=89]="ARCHIE_2",t[t.CYRUS=90]="CYRUS",t[t.CYRUS_2=91]="CYRUS_2",t[t.GHETSIS=92]="GHETSIS",t[t.GHETSIS_2=93]="GHETSIS_2",t[t.LYSANDRE=94]="LYSANDRE",t[t.LYSANDRE_2=95]="LYSANDRE_2",t[t.LUSAMINE=96]="LUSAMINE",t[t.LUSAMINE_2=97]="LUSAMINE_2",t[t.GUZMA=98]="GUZMA",t[t.GUZMA_2=99]="GUZMA_2",t[t.ROSE=100]="ROSE",t[t.ROSE_2=101]="ROSE_2",t[t.PENNY=102]="PENNY",t[t.PENNY_2=103]="PENNY_2",t[t.BUCK=104]="BUCK",t[t.CHERYL=105]="CHERYL",t[t.MARLEY=106]="MARLEY",t[t.MIRA=107]="MIRA",t[t.RILEY=108]="RILEY",t[t.VICTOR=109]="VICTOR",t[t.VICTORIA=110]="VICTORIA",t[t.VIVI=111]="VIVI",t[t.VICKY=112]="VICKY",t[t.VITO=113]="VITO",t[t.BUG_TYPE_SUPERFAN=114]="BUG_TYPE_SUPERFAN",t[t.EXPERT_POKEMON_BREEDER=115]="EXPERT_POKEMON_BREEDER",t[t.FUTURE_SELF_M=116]="FUTURE_SELF_M",t[t.FUTURE_SELF_F=117]="FUTURE_SELF_F",t[t.BROCK=200]="BROCK",t[t.MISTY=201]="MISTY",t[t.LT_SURGE=202]="LT_SURGE",t[t.ERIKA=203]="ERIKA",t[t.JANINE=204]="JANINE",t[t.SABRINA=205]="SABRINA",t[t.BLAINE=206]="BLAINE",t[t.GIOVANNI=207]="GIOVANNI",t[t.FALKNER=208]="FALKNER",t[t.BUGSY=209]="BUGSY",t[t.WHITNEY=210]="WHITNEY",t[t.MORTY=211]="MORTY",t[t.CHUCK=212]="CHUCK",t[t.JASMINE=213]="JASMINE",t[t.PRYCE=214]="PRYCE",t[t.CLAIR=215]="CLAIR",t[t.ROXANNE=216]="ROXANNE",t[t.BRAWLY=217]="BRAWLY",t[t.WATTSON=218]="WATTSON",t[t.FLANNERY=219]="FLANNERY",t[t.NORMAN=220]="NORMAN",t[t.WINONA=221]="WINONA",t[t.TATE=222]="TATE",t[t.LIZA=223]="LIZA",t[t.JUAN=224]="JUAN",t[t.ROARK=225]="ROARK",t[t.GARDENIA=226]="GARDENIA",t[t.MAYLENE=227]="MAYLENE",t[t.CRASHER_WAKE=228]="CRASHER_WAKE",t[t.FANTINA=229]="FANTINA",t[t.BYRON=230]="BYRON",t[t.CANDICE=231]="CANDICE",t[t.VOLKNER=232]="VOLKNER",t[t.CILAN=233]="CILAN",t[t.CHILI=234]="CHILI",t[t.CRESS=235]="CRESS",t[t.CHEREN=236]="CHEREN",t[t.LENORA=237]="LENORA",t[t.ROXIE=238]="ROXIE",t[t.BURGH=239]="BURGH",t[t.ELESA=240]="ELESA",t[t.CLAY=241]="CLAY",t[t.SKYLA=242]="SKYLA",t[t.BRYCEN=243]="BRYCEN",t[t.DRAYDEN=244]="DRAYDEN",t[t.MARLON=245]="MARLON",t[t.VIOLA=246]="VIOLA",t[t.GRANT=247]="GRANT",t[t.KORRINA=248]="KORRINA",t[t.RAMOS=249]="RAMOS",t[t.CLEMONT=250]="CLEMONT",t[t.VALERIE=251]="VALERIE",t[t.OLYMPIA=252]="OLYMPIA",t[t.WULFRIC=253]="WULFRIC",t[t.MILO=254]="MILO",t[t.NESSA=255]="NESSA",t[t.KABU=256]="KABU",t[t.BEA=257]="BEA",t[t.ALLISTER=258]="ALLISTER",t[t.OPAL=259]="OPAL",t[t.BEDE=260]="BEDE",t[t.GORDIE=261]="GORDIE",t[t.MELONY=262]="MELONY",t[t.PIERS=263]="PIERS",t[t.MARNIE=264]="MARNIE",t[t.RAIHAN=265]="RAIHAN",t[t.KATY=266]="KATY",t[t.BRASSIUS=267]="BRASSIUS",t[t.IONO=268]="IONO",t[t.KOFU=269]="KOFU",t[t.LARRY=270]="LARRY",t[t.RYME=271]="RYME",t[t.TULIP=272]="TULIP",t[t.GRUSHA=273]="GRUSHA",t[t.LORELEI=300]="LORELEI",t[t.BRUNO=301]="BRUNO",t[t.AGATHA=302]="AGATHA",t[t.LANCE=303]="LANCE",t[t.WILL=304]="WILL",t[t.KOGA=305]="KOGA",t[t.KAREN=306]="KAREN",t[t.SIDNEY=307]="SIDNEY",t[t.PHOEBE=308]="PHOEBE",t[t.GLACIA=309]="GLACIA",t[t.DRAKE=310]="DRAKE",t[t.AARON=311]="AARON",t[t.BERTHA=312]="BERTHA",t[t.FLINT=313]="FLINT",t[t.LUCIAN=314]="LUCIAN",t[t.SHAUNTAL=315]="SHAUNTAL",t[t.MARSHAL=316]="MARSHAL",t[t.GRIMSLEY=317]="GRIMSLEY",t[t.CAITLIN=318]="CAITLIN",t[t.MALVA=319]="MALVA",t[t.SIEBOLD=320]="SIEBOLD",t[t.WIKSTROM=321]="WIKSTROM",t[t.DRASNA=322]="DRASNA",t[t.HALA=323]="HALA",t[t.MOLAYNE=324]="MOLAYNE",t[t.OLIVIA=325]="OLIVIA",t[t.ACEROLA=326]="ACEROLA",t[t.KAHILI=327]="KAHILI",t[t.MARNIE_ELITE=328]="MARNIE_ELITE",t[t.NESSA_ELITE=329]="NESSA_ELITE",t[t.BEA_ELITE=330]="BEA_ELITE",t[t.ALLISTER_ELITE=331]="ALLISTER_ELITE",t[t.RAIHAN_ELITE=332]="RAIHAN_ELITE",t[t.RIKA=333]="RIKA",t[t.POPPY=334]="POPPY",t[t.LARRY_ELITE=335]="LARRY_ELITE",t[t.HASSEL=336]="HASSEL",t[t.CRISPIN=337]="CRISPIN",t[t.AMARYS=338]="AMARYS",t[t.LACEY=339]="LACEY",t[t.DRAYTON=340]="DRAYTON",t[t.BLUE=350]="BLUE",t[t.RED=351]="RED",t[t.LANCE_CHAMPION=352]="LANCE_CHAMPION",t[t.STEVEN=353]="STEVEN",t[t.WALLACE=354]="WALLACE",t[t.CYNTHIA=355]="CYNTHIA",t[t.ALDER=356]="ALDER",t[t.IRIS=357]="IRIS",t[t.DIANTHA=358]="DIANTHA",t[t.KUKUI=359]="KUKUI",t[t.HAU=360]="HAU",t[t.LEON=361]="LEON",t[t.MUSTARD=362]="MUSTARD",t[t.GEETA=363]="GEETA",t[t.NEMONA=364]="NEMONA",t[t.KIERAN=365]="KIERAN",t[t.RIVAL=375]="RIVAL",t[t.RIVAL_2=376]="RIVAL_2",t[t.RIVAL_3=377]="RIVAL_3",t[t.RIVAL_4=378]="RIVAL_4",t[t.RIVAL_5=379]="RIVAL_5",t[t.RIVAL_6=380]="RIVAL_6",t))(l||{}),fv=(t=>(t.WHITE="#ffffff",t.OFF_WHITE="#f8f8f8",t.LIGHT_GREY="#a0a0a0",t.GREY="#484848",t.DARK_GREY="#404040",t.PINK="#f89890",t.RED="#e13d3d",t.RED2="#e70808",t.REDORANGE="#d64b00",t.ORANGE="#f8b050",t.LIGHT_YELLOW="#e8e8a8",t.YELLOW="#ccbe00",t.DARK_YELLOW="#a68e17",t.GREEN="#78c850",t.BLUE="#40c8f8",t.COMMON="#ffffff",t.GREAT="#3890f8",t.ULTRA="#f8d038",t.ROGUE="#d52929",t.MASTER="#e020c0",t.LUXURY="#e64a18",t))(fv||{}),Q1=(t=>(t.NORMAL="#ADA594",t.FIGHTING="#A55239",t.FLYING="#9CADF7",t.POISON="#9141CB",t.GROUND="#AE7A3B",t.ROCK="#BDA55A",t.BUG="#ADBD21",t.GHOST="#6363B5",t.STEEL="#81A6BE",t.FIRE="#F75231",t.WATER="#399CFF",t.GRASS="#7BCE52",t.ELECTRIC="#FFC631",t.PSYCHIC="#EF4179",t.ICE="#5ACEE7",t.DRAGON="#7B63E7",t.DARK="#735A4A",t.FAIRY="#EF70EF",t))(Q1||{}),J1=(t=>(t.NORMAL="#574F4A",t.FIGHTING="#4E637C",t.FLYING="#4E637C",t.POISON="#352166",t.GROUND="#572D1E",t.ROCK="#5F442D",t.BUG="#5F5010",t.GHOST="#323D5B",t.STEEL="#415C5F",t.FIRE="#7C1818",t.WATER="#1C4E80",t.GRASS="#4F6729",t.ELECTRIC="#804618",t.PSYCHIC="#782155",t.ICE="#2D5C74",t.DRAGON="#313874",t.DARK="#392725",t.FAIRY="#663878",t))(J1||{}),dv=(t=>(t.GREY="#636363",t.PURPLE="#6b5a73",t.LIGHT_GREY="#d0d0c8",t.BROWN="#69402a",t.PINK="#fca2a2",t.BRIGHT_RED="#f83018",t.RED="#984038",t.MAROON="#632929",t.GREEN="#306850",t.BLUE="#006090",t.LIGHT_YELLOW="#ded6b5",t.YELLOW="#ebd773",t.DARK_YELLOW="#a0a060",t.ORANGE="#c07800",t.LIGHT_ORANGE="#ffbd73",t))(dv||{});const yP=10;var PO=(t=>(t[t.STARTER_CHOICE=0]="STARTER_CHOICE",t[t.STARTER_POINTS=1]="STARTER_POINTS",t[t.STARTER_COST=2]="STARTER_COST",t[t.STARTER_MODIFY=3]="STARTER_MODIFY",t[t.POKEMON_IN_BATTLE=4]="POKEMON_IN_BATTLE",t[t.FIXED_BATTLES=5]="FIXED_BATTLES",t[t.TYPE_EFFECTIVENESS=6]="TYPE_EFFECTIVENESS",t[t.AI_LEVEL=7]="AI_LEVEL",t[t.AI_MOVE_SLOTS=8]="AI_MOVE_SLOTS",t[t.PASSIVE_ACCESS=9]="PASSIVE_ACCESS",t[t.GAME_MODE_MODIFY=10]="GAME_MODE_MODIFY",t[t.MOVE_ACCESS=11]="MOVE_ACCESS",t[t.MOVE_WEIGHT=12]="MOVE_WEIGHT",t[t.FLIP_STAT=13]="FLIP_STAT",t))(PO||{});const aB=class aB{constructor(E,R=Number.MAX_SAFE_INTEGER){this.id=E,this.value=0,this.maxValue=R,this.severity=0,this.maxSeverity=0,this.conditions=[]}reset(){this.value=0,this.severity=0}geti18nKey(){return Je[this.id].split("_").map((E,R)=>R?`${E[0]}${E.slice(1).toLowerCase()}`:E.toLowerCase()).join("")}isUnlocked(E){return this.conditions.every(R=>R(E))}condition(E){return this.conditions.push(E),this}getName(){return D.t(`challenges:${this.geti18nKey()}.name`)}getValue(E){const R=E??this.value;return D.t(`challenges:${this.geti18nKey()}.value.${R}`)}getDescription(E){const R=E??this.value;return`${D.t([`challenges:${this.geti18nKey()}.desc.${R}`,`challenges:${this.geti18nKey()}.desc`])}`}increaseValue(){return this.value<this.maxValue?(this.value=Math.min(this.value+1,this.maxValue),!0):!1}decreaseValue(){return this.value>0?(this.value=Math.max(this.value-1,0),!0):!1}hasSeverity(){return this.value!==0&&this.maxSeverity>0}decreaseSeverity(){return this.severity>0?(this.severity=Math.max(this.severity-1,0),!0):!1}increaseSeverity(){return this.severity<this.maxSeverity?(this.severity=Math.min(this.severity+1,this.maxSeverity),!0):!1}getDifficulty(){return this.value}getMinDifficulty(){return 0}static loadChallenge(E){throw new Error("Method not implemented! Use derived class")}applyStarterChoice(E,R,I){return!1}applyStarterPoints(E){return!1}applyStarterCost(E,R){return!1}applyStarterModify(E){return!1}applyPokemonInBattle(E,R){return!1}applyFixedBattle(E,R){return!1}applyTypeEffectiveness(E){return!1}applyLevelChange(E,R,I,N){return!1}applyMoveSlot(E,R){return!1}applyPassiveAccess(E,R){return!1}applyGameModeModify(){return!1}applyMoveAccessLevel(E,R,I,N){return!1}applyMoveWeight(E,R,I,N){return!1}applyFlipStat(E,R){return!1}};r(aB,"Challenge");let ZI=aB;const ZD=class ZD extends ZI{constructor(){super(Je.SINGLE_GENERATION,9)}applyStarterChoice(E,R){return E.generation!==this.value?(R.value=!1,!0):!1}applyPokemonInBattle(E,R){const I=de(E.species.speciesId).generation,N=E.isFusion()?de(E.fusionSpecies.speciesId).generation:0;return E.isPlayer()&&(I!==this.value||E.isFusion()&&N!==this.value)?(R.value=!1,!0):!1}applyFixedBattle(E,R){let I=[];const N=[aA.EVIL_GRUNT_1,aA.EVIL_GRUNT_2,aA.EVIL_GRUNT_3,aA.EVIL_ADMIN_1,aA.EVIL_GRUNT_4,aA.EVIL_ADMIN_2,aA.EVIL_BOSS_1,aA.EVIL_BOSS_2],S=[[l.ROCKET_GRUNT],[l.ROCKET_GRUNT],[l.MAGMA_GRUNT,l.AQUA_GRUNT],[l.GALACTIC_GRUNT],[l.PLASMA_GRUNT],[l.FLARE_GRUNT],[l.AETHER_GRUNT,l.SKULL_GRUNT],[l.MACRO_GRUNT],[l.STAR_GRUNT]],T=[[l.ARCHER,l.ARIANA,l.PROTON,l.PETREL],[l.ARCHER,l.ARIANA,l.PROTON,l.PETREL],[[l.TABITHA,l.COURTNEY],[l.MATT,l.SHELLY]],[l.JUPITER,l.MARS,l.SATURN],[l.ZINZOLIN,l.COLRESS],[l.XEROSIC,l.BRYONY],[l.FABA,l.PLUMERIA],[l.OLEANA],[l.GIACOMO,l.MELA,l.ATTICUS,l.ORTEGA,l.ERI]],i=[[l.ROCKET_BOSS_GIOVANNI_1],[l.ROCKET_BOSS_GIOVANNI_1],[l.MAXIE,l.ARCHIE],[l.CYRUS],[l.GHETSIS],[l.LYSANDRE],[l.LUSAMINE,l.GUZMA],[l.ROSE],[l.PENNY]],o=[[l.ROCKET_BOSS_GIOVANNI_2],[l.ROCKET_BOSS_GIOVANNI_2],[l.MAXIE_2,l.ARCHIE_2],[l.CYRUS_2],[l.GHETSIS_2],[l.LYSANDRE_2],[l.LUSAMINE_2,l.GUZMA_2],[l.ROSE_2],[l.PENNY_2]];switch(E){case aA.EVIL_GRUNT_1:return I=S[this.value-1],R.setBattleType(AA.TRAINER).setGetTrainerFunc(ER(I,!0)),!0;case aA.EVIL_GRUNT_2:case aA.EVIL_GRUNT_3:case aA.EVIL_GRUNT_4:I=S[this.value-1];break;case aA.EVIL_ADMIN_1:case aA.EVIL_ADMIN_2:I=T[this.value-1];break;case aA.EVIL_BOSS_1:return I=i[this.value-1],R.setBattleType(AA.TRAINER).setSeedOffsetWave(aA.EVIL_GRUNT_1).setGetTrainerFunc(ER(I,!0)).setCustomModifierRewards({guaranteedModifierTiers:[p.ROGUE,p.ROGUE,p.ULTRA,p.ULTRA,p.ULTRA],allowLuckUpgrades:!1}),!0;case aA.EVIL_BOSS_2:return I=o[this.value-1],R.setBattleType(AA.TRAINER).setSeedOffsetWave(aA.EVIL_GRUNT_1).setGetTrainerFunc(ER(I,!0)).setCustomModifierRewards({guaranteedModifierTiers:[p.ROGUE,p.ROGUE,p.ULTRA,p.ULTRA,p.ULTRA,p.ULTRA],allowLuckUpgrades:!1}),!0;case aA.ELITE_FOUR_1:I=[l.LORELEI,l.WILL,l.SIDNEY,l.AARON,l.SHAUNTAL,l.MALVA,SE([l.HALA,l.MOLAYNE]),l.MARNIE_ELITE,l.RIKA];break;case aA.ELITE_FOUR_2:I=[l.BRUNO,l.KOGA,l.PHOEBE,l.BERTHA,l.MARSHAL,l.SIEBOLD,l.OLIVIA,l.NESSA_ELITE,l.POPPY];break;case aA.ELITE_FOUR_3:I=[l.AGATHA,l.BRUNO,l.GLACIA,l.FLINT,l.GRIMSLEY,l.WIKSTROM,l.ACEROLA,SE([l.BEA_ELITE,l.ALLISTER_ELITE]),l.LARRY_ELITE];break;case aA.ELITE_FOUR_4:I=[l.LANCE,l.KAREN,l.DRAKE,l.LUCIAN,l.CAITLIN,l.DRASNA,l.KAHILI,l.RAIHAN_ELITE,l.HASSEL];break;case aA.CHAMPION:I=[l.BLUE,SE([l.RED,l.LANCE_CHAMPION]),SE([l.STEVEN,l.WALLACE]),l.CYNTHIA,SE([l.ALDER,l.IRIS]),l.DIANTHA,SE([l.KUKUI,l.HAU]),SE([l.LEON,l.MUSTARD]),SE([l.GEETA,l.NEMONA])];break}if(I.length===0)return!1;if(N.includes(E))return R.setBattleType(AA.TRAINER).setSeedOffsetWave(aA.EVIL_GRUNT_1).setGetTrainerFunc(ER(I,!0)),!0;if(E>=aA.ELITE_FOUR_1&&E<=aA.CHAMPION){const C=I;return R.setBattleType(AA.TRAINER).setGetTrainerFunc(()=>new FR(C[this.value-1],xA.DEFAULT)),!0}return!1}getDifficulty(){return this.value>0?1:0}getValue(E){const R=E??this.value;return R===0?D.t("settings:off"):D.t(`starterSelectUiHandler:gen${R}`)}getDescription(E){const R=E??this.value;return R===0?D.t("challenges:singleGeneration.desc_default"):D.t("challenges:singleGeneration.desc",{gen:D.t(`challenges:singleGeneration.gen_${R}`)})}static loadChallenge(E){const R=new ZD;return R.value=E.value,R.severity=E.severity,R}};r(ZD,"SingleGenerationChallenge");let LO=ZD;const Qs=class Qs extends ZI{constructor(){super(Je.SINGLE_TYPE,18)}applyStarterChoice(E,R,I){const N=XN(E.speciesId,I.formIndex);return[N.type1,N.type2].includes(this.value-1)?!1:(R.value=!1,!0)}applyPokemonInBattle(E,R){return E.isPlayer()&&!E.isOfType(this.value-1,!1,!1,!0)&&!Qs.TYPE_OVERRIDES.some(I=>I.type===this.value-1&&(E.isFusion()&&I.fusion?E.fusionSpecies:E.species).speciesId===I.species)?(R.value=!1,!0):!1}getDifficulty(){return this.value>0?1:0}getValue(E){return E===void 0&&(E=this.value),L[this.value-1].toLowerCase()}getDescription(E){E===void 0&&(E=this.value);const R=D.t(`pokemonInfo:Type.${L[this.value-1]}`),I=`[color=${Q1[L[this.value-1]]}][shadow=${J1[L[this.value-1]]}]${R}[/shadow][/color]`,N=D.t("challenges:singleType.desc_default"),S=D.t("challenges:singleType.desc",{type:I});return this.value===0?N:S}static loadChallenge(E){const R=new Qs;return R.value=E.value,R.severity=E.severity,R}};r(Qs,"SingleTypeChallenge"),Qs.TYPE_OVERRIDES=[{species:e.CASTFORM,type:L.NORMAL,fusion:!1}];let Et=Qs;const kD=class kD extends ZI{constructor(){super(Je.FRESH_START,1)}applyStarterChoice(E,R){return iN.includes(E.speciesId)?!1:(R.value=!1,!0)}applyStarterCost(E,R){return iN.includes(E)?(R.value=kE[E],!0):!1}applyStarterModify(E){return E.abilityIndex=0,E.passive=!1,E.nature=be.HARDY,E.moveset=E.species.getLevelMoves().filter(R=>R[0]<=5).map(R=>R[1]).slice(0,4).map(R=>new Ye(R)),E.luck=0,E.shiny=!1,E.variant=0,E.formIndex=0,E.ivs=[15,15,15,15,15,15],E.teraType=E.species.type1,!0}getDifficulty(){return 0}static loadChallenge(E){const R=new kD;return R.value=E.value,R.severity=E.severity,R}};r(kD,"FreshStartChallenge");let da=kD;const XD=class XD extends ZI{constructor(){super(Je.INVERSE_BATTLE,1)}static loadChallenge(E){const R=new XD;return R.value=E.value,R.severity=E.severity,R}getDifficulty(){return 0}applyTypeEffectiveness(E){return E.value<1?(E.value=2,!0):E.value>1?(E.value=.5,!0):!1}};r(XD,"InverseBattleChallenge");let Ka=XD;const QD=class QD extends ZI{constructor(){super(Je.FLIP_STAT,1)}applyFlipStat(E,R){const I=W8(R);return R[0]=I[5],R[1]=I[4],R[2]=I[3],R[3]=I[2],R[4]=I[1],R[5]=I[0],!0}static loadChallenge(E){const R=new QD;return R.value=E.value,R.severity=E.severity,R}};r(QD,"FlipStatChallenge");let nS=QD;const JD=class JD extends ZI{constructor(){super(Je.LOWER_MAX_STARTER_COST,9)}getValue(E){return E===void 0&&(E=this.value),(yP-E).toString()}applyStarterChoice(E,R){return kE[E.speciesId]>yP-this.value?(R.value=!1,!0):!1}static loadChallenge(E){const R=new JD;return R.value=E.value,R.severity=E.severity,R}};r(JD,"LowerStarterMaxCostChallenge");let wP=JD;const $D=class $D extends ZI{constructor(){super(Je.LOWER_STARTER_POINTS,9)}getValue(E){return E===void 0&&(E=this.value),(yP-E).toString()}applyStarterPoints(E){return E.value-=this.value,!0}static loadChallenge(E){const R=new $D;return R.value=E.value,R.severity=E.severity,R}};r($D,"LowerStarterPointsChallenge");let VP=$D;function JR(t,...E){let R=!1;return s.gameMode.challenges.forEach(I=>{if(I.value!==0)switch(t){case 0:R||(R=I.applyStarterChoice(E[0],E[1],E[2]));break;case 1:R||(R=I.applyStarterPoints(E[0]));break;case 2:R||(R=I.applyStarterCost(E[0],E[1]));break;case 3:R||(R=I.applyStarterModify(E[0]));break;case 4:R||(R=I.applyPokemonInBattle(E[0],E[1]));break;case 5:R||(R=I.applyFixedBattle(E[0],E[1]));break;case 6:R||(R=I.applyTypeEffectiveness(E[0]));break;case 7:R||(R=I.applyLevelChange(E[0],E[1],E[2],E[3]));break;case 8:R||(R=I.applyMoveSlot(E[0],E[1]));break;case 9:R||(R=I.applyPassiveAccess(E[0],E[1]));break;case 10:R||(R=I.applyGameModeModify());break;case 11:R||(R=I.applyMoveAccessLevel(E[0],E[1],E[2],E[3]));break;case 12:R||(R=I.applyMoveWeight(E[0],E[1],E[2],E[3]));break;case 13:R||(R=I.applyFlipStat(E[0],E[1]));break}}),R}r(JR,"applyChallenges");function vP(t){switch(t.id){case Je.SINGLE_GENERATION:return LO.loadChallenge(t);case Je.SINGLE_TYPE:return Et.loadChallenge(t);case Je.LOWER_MAX_STARTER_COST:return wP.loadChallenge(t);case Je.LOWER_STARTER_POINTS:return VP.loadChallenge(t);case Je.FRESH_START:return da.loadChallenge(t);case Je.INVERSE_BATTLE:return Ka.loadChallenge(t);case Je.FLIP_STAT:return nS.loadChallenge(t)}throw new Error("Unknown challenge copied")}r(vP,"copyChallenge");const xP=[];function g8(){xP.push(new LO,new Et,new da,new Ka,new nS)}r(g8,"initChallenges");function XX(t,E,R){if(!R){const N=new SA(!0);return JR(0,t,N,E),N.value}const I=[t.speciesId];for(;I.length;){const N=I.pop();if(!N)return!1;const S=de(N);if(p8(S,E))return!0;N&&BA.hasOwnProperty(N)&&BA[N].forEach(T=>{(!(T!=null&&T.preFormKey)||T.preFormKey===t.forms[E.formIndex].formKey)&&I.push(T.speciesId)})}return!1}r(XX,"checkStarterValidForChallenge");function p8(t,E,R){const I=new SA(!0);return JR(0,t,I,E),PI.hasOwnProperty(t.speciesId)?I.value?!0:PI[t.speciesId].some(S=>"item"in S.trigger?t.forms.some((T,i)=>{if(S.formKey===T.formKey){const o={...E,formIndex:i},C=new SA(!0);return JR(0,t,C,o),C.value}return!1}):!1):I.value}r(p8,"checkSpeciesValidForChallenge");function y8(){return new Promise((t,E)=>{iv.daily.getSeed().then(R=>{t(R)})})}r(y8,"fetchDailyRunSeed");function w8(t){const E=[];return s.executeWithSeedOffset(()=>{const R=s.gameMode.getStartingLevel();if(/\d{18}$/.test(t)){for(let N=0;N<3;N++){const S=6+N*6,T=XN(Number.parseInt(t.slice(S,S+4)),Number.parseInt(t.slice(S+4,S+6)));E.push(LV(T,R))}return}const I=[];I.push(Math.min(Math.round(3.5+Math.abs(nP(1))),8)),I.push(De(9-I[0],1)),I.push(10-(I[0]+I[1]));for(let N=0;N<I.length;N++){const S=I[N],T=Object.keys(kE).map(C=>Number.parseInt(C)).filter(C=>kE[C]===S),i=de(SE(T)),o=de(i.getTrainerSpeciesForLevel(R,!0,ce.STRONGER));E.push(LV(o,R))}},0,t),E}r(w8,"getDailyRunStarters");function LV(t,E){const R=t instanceof M?t:de(t.speciesId),I=t instanceof M?void 0:t.formIndex,N=new Rt(R,E,void 0,I,void 0,void 0,void 0,void 0,void 0,void 0),S={species:R,dexAttr:N.getDexAttr(),abilityIndex:N.abilityIndex,passive:!1,nature:N.getNature(),pokerus:N.pokerus};return N.destroy(),S}r(LV,"getDailyRunStarter");const V8={[n.CAVE]:3,[n.LAKE]:3,[n.PLAINS]:3,[n.SNOWY_FOREST]:3,[n.SWAMP]:3,[n.TALL_GRASS]:3,[n.ABYSS]:2,[n.RUINS]:2,[n.BADLANDS]:2,[n.BEACH]:2,[n.CONSTRUCTION_SITE]:2,[n.DESERT]:2,[n.DOJO]:2,[n.FACTORY]:2,[n.FAIRY_CAVE]:2,[n.FOREST]:2,[n.GRASS]:2,[n.MEADOW]:2,[n.MOUNTAIN]:2,[n.SEA]:2,[n.SEABED]:2,[n.SLUM]:2,[n.TEMPLE]:2,[n.VOLCANO]:2,[n.GRAVEYARD]:1,[n.ICE_CAVE]:1,[n.ISLAND]:1,[n.JUNGLE]:1,[n.LABORATORY]:1,[n.METROPOLIS]:1,[n.POWER_PLANT]:1,[n.SPACE]:1,[n.WASTELAND]:1,[n.TOWN]:0,[n.END]:0};function v8(){const t=Ct(n).filter(N=>N!==n.TOWN&&N!==n.END);let E=0;const R=[];for(const N of t)E+=V8[N],R.push(E);const I=De(E);for(let N=0;N<t.length;N++)if(I<R[N])return t[N];return t[De(t.length)]}r(v8,"getDailyStartingBiome");var AE=(t=>(t[t.CLASSIC=0]="CLASSIC",t[t.ENDLESS=1]="ENDLESS",t[t.SPLICED_ENDLESS=2]="SPLICED_ENDLESS",t[t.DAILY=3]="DAILY",t[t.CHALLENGE=4]="CHALLENGE",t))(AE||{});const rB=class rB{constructor(E,R,I){this.modeId=E,this.challenges=[],Object.assign(this,R),this.isChallenge&&(this.challenges=xP.map(N=>vP(N))),this.battleConfig=I||{}}setChallengeValue(E,R){this.isChallenge||(this.isChallenge=!0,this.challenges=xP.map(I=>vP(I))),this.challenges.filter(I=>I.id===E).map(I=>I.value=R)}hasChallenge(E){return this.challenges.some(R=>R.id===E&&R.value!==0)}isFreshStartChallenge(){return this.hasChallenge(Je.FRESH_START)}getStartingLevel(){if(Ze.STARTING_LEVEL_OVERRIDE)return Ze.STARTING_LEVEL_OVERRIDE;switch(this.modeId){case 3:return 20;default:return 5}}getStartingMoney(){return Ze.STARTING_MONEY_OVERRIDE||1e3}getStartingBiome(){switch(this.modeId){case 3:return v8();default:return Ze.STARTING_BIOME_OVERRIDE||n.TOWN}}getWaveForDifficulty(E,R=!1){switch(this.modeId){case 3:return E+30+(R?0:Math.floor(E/5));default:return E}}isWaveTrainer(E,R){if(this.isDaily)return E%10===5||!(E%10)&&E>10&&!this.isWaveFinal(E);if(E%30===(s.offsetGym?0:20)&&!this.isWaveFinal(E))return!0;if(E%10!==1&&E%10){const I=R.getTrainerChance();let N=!0;if(I){const S=Math.floor(E/10)*10;for(let T=Math.max(E-3,S+2);T<=Math.min(E+3,S+9);T++)if(T!==E){if(T%30===(s.offsetGym?0:20)||this.isFixedBattle(T)){N=!1;break}if(T<E&&(s.executeWithSeedOffset(()=>{const i=R.getTrainerChance();De(i)||(N=!1)},T),!N))break}}return!!(N&&I&&!De(I))}return!1}isTrainerBoss(E,R,I){switch(this.modeId){case 3:return E>10&&E<50&&!(E%10);default:return E%30===(I?0:20)&&(R!==n.END||this.isClassic||this.isWaveFinal(E))}}getOverrideSpecies(E){if(this.isDaily&&this.isWaveFinal(E)){const R=uI.filter(I=>(I.subLegendary||I.legendary||I.mythical)&&I.baseTotal>=600&&I.speciesId!==e.ETERNATUS&&I.speciesId!==e.ARCEUS);return SE(R)}return null}isWaveFinal(E,R=this.modeId){switch(R){case 0:case 4:return E===200;case 1:case 2:return!(E%250);case 3:return E===50}}isBoss(E){return E%10===0}isBattleClassicFinalBoss(E){return(this.modeId===0||this.modeId===4)&&this.isWaveFinal(E)}isEndlessBoss(E){return E%50===0&&(this.modeId===1||this.modeId===2)}isEndlessMinorBoss(E){return E%250===0&&(this.modeId===1||this.modeId===2)}isEndlessMajorBoss(E){return E%1e3===0&&(this.modeId===1||this.modeId===2)}isFixedBattle(E){const R=new QE;return this.battleConfig.hasOwnProperty(E)||JR(PO.FIXED_BATTLES,E,R)}getFixedBattle(E){const R=new QE;return JR(PO.FIXED_BATTLES,E,R)?R:this.battleConfig[E]}getClearScoreBonus(){switch(this.modeId){case 0:case 4:return 5e3;case 3:return 2500;default:return 0}}getEnemyModifierChance(E){switch(this.modeId){case 0:case 4:case 3:return E?6:18;case 1:case 2:return E?4:12}}getName(){switch(this.modeId){case 0:return D.t("gameMode:classic");case 1:return D.t("gameMode:endless");case 2:return D.t("gameMode:endlessSpliced");case 3:return D.t("gameMode:dailyRun");case 4:return D.t("gameMode:challenge")}}getMysteryEncounterLegalWaves(){switch(this.modeId){case 0:return mE;case 4:return v6;default:return[0,0]}}static getModeName(E){switch(E){case 0:return D.t("gameMode:classic");case 1:return D.t("gameMode:endless");case 2:return D.t("gameMode:endlessSpliced");case 3:return D.t("gameMode:dailyRun");case 4:return D.t("gameMode:challenge")}}};r(rB,"GameMode");let $R=rB;function bP(t){switch(t){case 0:return new $R(0,{isClassic:!0,hasTrainers:!0,hasMysteryEncounters:!0},Av);case 1:return new $R(1,{isEndless:!0,hasShortBiomes:!0,hasRandomBosses:!0});case 2:return new $R(2,{isEndless:!0,hasShortBiomes:!0,hasRandomBosses:!0,isSplicedOnly:!0});case 3:return new $R(3,{isDaily:!0,hasTrainers:!0,hasNoShop:!0});case 4:return new $R(4,{isClassic:!0,hasTrainers:!0,isChallenge:!0,hasMysteryEncounters:!0},Av)}}r(bP,"getGameMode");var tR=(t=>(t[t.ENDLESS_MODE=0]="ENDLESS_MODE",t[t.MINI_BLACK_HOLE=1]="MINI_BLACK_HOLE",t[t.SPLICED_ENDLESS_MODE=2]="SPLICED_ENDLESS_MODE",t[t.EVIOLITE=3]="EVIOLITE",t))(tR||{});function x8(t){switch(t){case 0:return`${$R.getModeName(AE.ENDLESS)} Mode`;case 1:return D.t("modifierType:ModifierType.MINI_BLACK_HOLE.name");case 2:return`${$R.getModeName(AE.SPLICED_ENDLESS)} Mode`;case 3:return D.t("modifierType:ModifierType.EVIOLITE.name")}}r(x8,"getUnlockableName");var YA=(t=>(t[t.UNSET=0]="UNSET",t[t.MALE=1]="MALE",t[t.FEMALE=2]="FEMALE",t))(YA||{}),MT=(t=>(t[t.COMMON=0]="COMMON",t[t.GREAT=1]="GREAT",t[t.ULTRA=2]="ULTRA",t[t.ROGUE=3]="ROGUE",t[t.MASTER=4]="MASTER",t))(MT||{});const iB=class iB{constructor(E,R,I,N,S,T){this.name=R,this.description=I,this.iconImage=N,this.score=S,this.conditionFunc=T,this.localizationKey=E}getName(E=YA.UNSET){const R=YA[E].toLowerCase();return D.t(`achv:${this.localizationKey}.name`,{context:R})}getDescription(){return this.description}getIconImage(){return this.iconImage}setSecret(E){return this.secret=!0,this.hasParent=!!E,this}validate(E){return!this.conditionFunc||this.conditionFunc(E)}getTier(){return this.score>=100?4:this.score>=75?3:this.score>=50?2:this.score>=25?1:0}};r(iB,"Achv");let PE=iB;const oB=class oB extends PE{constructor(E,R,I,N,S){super(E,R,"",N,S,T=>s.money>=this.moneyAmount),this.moneyAmount=I}};r(oB,"MoneyAchv");let Fs=oB;const CB=class CB extends PE{constructor(E,R,I,N,S){super(E,R,"",N,S,T=>s.gameData.gameStats.ribbonsOwned>=this.ribbonAmount),this.ribbonAmount=I}};r(CB,"RibbonAchv");let RN=CB;const lB=class lB extends PE{constructor(E,R,I,N,S){super(E,R,"",N,S,T=>(T[0]instanceof me?T[0].value:T[0])>=this.damageAmount),this.damageAmount=I}};r(lB,"DamageAchv");let aN=lB;const UB=class UB extends PE{constructor(E,R,I,N,S){super(E,R,"",N,S,T=>(T[0]instanceof me?T[0].value:T[0])>=this.healAmount),this.healAmount=I}};r(UB,"HealAchv");let rN=UB;const DB=class DB extends PE{constructor(E,R,I,N,S){super(E,R,"",N,S,T=>(T[0]instanceof me?T[0].value:T[0])>=this.level),this.level=I}};r(DB,"LevelAchv");let qs=DB;const MB=class MB extends PE{constructor(E,R,I,N,S,T){super(E,R,I,N,S,i=>T(i[0]))}};r(MB,"ModifierAchv");let ZP=MB;const PB=class PB extends PE{constructor(E,R,I,N,S,T){super(E,R,I,N,S,i=>T(i[0]))}};r(PB,"ChallengeAchv");let zA=PB;function b8(t){var I,N;const E=((N=(I=s)==null?void 0:I.gameData)==null?void 0:N.gender)??YA.MALE,R=YA[E].toLowerCase();switch(t){case"10K_MONEY":return D.t("achv:MoneyAchv.description",{context:R,moneyAmount:oA._10K_MONEY.moneyAmount.toLocaleString("en-US")});case"100K_MONEY":return D.t("achv:MoneyAchv.description",{context:R,moneyAmount:oA._100K_MONEY.moneyAmount.toLocaleString("en-US")});case"1M_MONEY":return D.t("achv:MoneyAchv.description",{context:R,moneyAmount:oA._1M_MONEY.moneyAmount.toLocaleString("en-US")});case"10M_MONEY":return D.t("achv:MoneyAchv.description",{context:R,moneyAmount:oA._10M_MONEY.moneyAmount.toLocaleString("en-US")});case"250_DMG":return D.t("achv:DamageAchv.description",{context:R,damageAmount:oA._250_DMG.damageAmount.toLocaleString("en-US")});case"1000_DMG":return D.t("achv:DamageAchv.description",{context:R,damageAmount:oA._1000_DMG.damageAmount.toLocaleString("en-US")});case"2500_DMG":return D.t("achv:DamageAchv.description",{context:R,damageAmount:oA._2500_DMG.damageAmount.toLocaleString("en-US")});case"10000_DMG":return D.t("achv:DamageAchv.description",{context:R,damageAmount:oA._10000_DMG.damageAmount.toLocaleString("en-US")});case"250_HEAL":return D.t("achv:HealAchv.description",{context:R,healAmount:oA._250_HEAL.healAmount.toLocaleString("en-US"),HP:D.t(Ks(h.HP))});case"1000_HEAL":return D.t("achv:HealAchv.description",{context:R,healAmount:oA._1000_HEAL.healAmount.toLocaleString("en-US"),HP:D.t(Ks(h.HP))});case"2500_HEAL":return D.t("achv:HealAchv.description",{context:R,healAmount:oA._2500_HEAL.healAmount.toLocaleString("en-US"),HP:D.t(Ks(h.HP))});case"10000_HEAL":return D.t("achv:HealAchv.description",{context:R,healAmount:oA._10000_HEAL.healAmount.toLocaleString("en-US"),HP:D.t(Ks(h.HP))});case"LV_100":return D.t("achv:LevelAchv.description",{context:R,level:oA.LV_100.level});case"LV_250":return D.t("achv:LevelAchv.description",{context:R,level:oA.LV_250.level});case"LV_1000":return D.t("achv:LevelAchv.description",{context:R,level:oA.LV_1000.level});case"10_RIBBONS":return D.t("achv:RibbonAchv.description",{context:R,ribbonAmount:oA._10_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"25_RIBBONS":return D.t("achv:RibbonAchv.description",{context:R,ribbonAmount:oA._25_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"50_RIBBONS":return D.t("achv:RibbonAchv.description",{context:R,ribbonAmount:oA._50_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"75_RIBBONS":return D.t("achv:RibbonAchv.description",{context:R,ribbonAmount:oA._75_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"100_RIBBONS":return D.t("achv:RibbonAchv.description",{context:R,ribbonAmount:oA._100_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"TRANSFER_MAX_STAT_STAGE":return D.t("achv:TRANSFER_MAX_STAT_STAGE.description",{context:R});case"MAX_FRIENDSHIP":return D.t("achv:MAX_FRIENDSHIP.description",{context:R});case"MEGA_EVOLVE":return D.t("achv:MEGA_EVOLVE.description",{context:R});case"GIGANTAMAX":return D.t("achv:GIGANTAMAX.description",{context:R});case"TERASTALLIZE":return D.t("achv:TERASTALLIZE.description",{context:R});case"STELLAR_TERASTALLIZE":return D.t("achv:STELLAR_TERASTALLIZE.description",{context:R});case"SPLICE":return D.t("achv:SPLICE.description",{context:R});case"MINI_BLACK_HOLE":return D.t("achv:MINI_BLACK_HOLE.description",{context:R});case"CATCH_MYTHICAL":return D.t("achv:CATCH_MYTHICAL.description",{context:R});case"CATCH_SUB_LEGENDARY":return D.t("achv:CATCH_SUB_LEGENDARY.description",{context:R});case"CATCH_LEGENDARY":return D.t("achv:CATCH_LEGENDARY.description",{context:R});case"SEE_SHINY":return D.t("achv:SEE_SHINY.description",{context:R});case"SHINY_PARTY":return D.t("achv:SHINY_PARTY.description",{context:R});case"HATCH_MYTHICAL":return D.t("achv:HATCH_MYTHICAL.description",{context:R});case"HATCH_SUB_LEGENDARY":return D.t("achv:HATCH_SUB_LEGENDARY.description",{context:R});case"HATCH_LEGENDARY":return D.t("achv:HATCH_LEGENDARY.description",{context:R});case"HATCH_SHINY":return D.t("achv:HATCH_SHINY.description",{context:R});case"HIDDEN_ABILITY":return D.t("achv:HIDDEN_ABILITY.description",{context:R});case"PERFECT_IVS":return D.t("achv:PERFECT_IVS.description",{context:R});case"CLASSIC_VICTORY":return D.t("achv:CLASSIC_VICTORY.description",{context:R});case"UNEVOLVED_CLASSIC_VICTORY":return D.t("achv:UNEVOLVED_CLASSIC_VICTORY.description",{context:R});case"MONO_GEN_ONE":return D.t("achv:MONO_GEN_ONE.description",{context:R});case"MONO_GEN_TWO":return D.t("achv:MONO_GEN_TWO.description",{context:R});case"MONO_GEN_THREE":return D.t("achv:MONO_GEN_THREE.description",{context:R});case"MONO_GEN_FOUR":return D.t("achv:MONO_GEN_FOUR.description",{context:R});case"MONO_GEN_FIVE":return D.t("achv:MONO_GEN_FIVE.description",{context:R});case"MONO_GEN_SIX":return D.t("achv:MONO_GEN_SIX.description",{context:R});case"MONO_GEN_SEVEN":return D.t("achv:MONO_GEN_SEVEN.description",{context:R});case"MONO_GEN_EIGHT":return D.t("achv:MONO_GEN_EIGHT.description",{context:R});case"MONO_GEN_NINE":return D.t("achv:MONO_GEN_NINE.description",{context:R});case"MONO_NORMAL":case"MONO_FIGHTING":case"MONO_FLYING":case"MONO_POISON":case"MONO_GROUND":case"MONO_ROCK":case"MONO_BUG":case"MONO_GHOST":case"MONO_STEEL":case"MONO_FIRE":case"MONO_WATER":case"MONO_GRASS":case"MONO_ELECTRIC":case"MONO_PSYCHIC":case"MONO_ICE":case"MONO_DRAGON":case"MONO_DARK":case"MONO_FAIRY":return D.t("achv:MonoType.description",{context:R,type:D.t(`pokemonInfo:Type.${t.slice(5)}`)});case"FRESH_START":return D.t("achv:FRESH_START.description",{context:R});case"INVERSE_BATTLE":return D.t("achv:INVERSE_BATTLE.description",{context:R});case"FLIP_STATS":return D.t("achv:FLIP_STATS.description",{context:R});case"FLIP_INVERSE":return D.t("achv:FLIP_INVERSE.description",{context:R});case"BREEDERS_IN_SPACE":return D.t("achv:BREEDERS_IN_SPACE.description",{context:R});default:return""}}r(b8,"getAchievementDescription");const oA={_10K_MONEY:new Fs("10K_MONEY","",1e4,"nugget",10),_100K_MONEY:new Fs("100K_MONEY","",1e5,"big_nugget",25).setSecret(!0),_1M_MONEY:new Fs("1M_MONEY","",1e6,"relic_gold",50).setSecret(!0),_10M_MONEY:new Fs("10M_MONEY","",1e7,"coin_case",100).setSecret(!0),_250_DMG:new aN("250_DMG","",250,"lucky_punch",10),_1000_DMG:new aN("1000_DMG","",1e3,"lucky_punch_great",25).setSecret(!0),_2500_DMG:new aN("2500_DMG","",2500,"lucky_punch_ultra",50).setSecret(!0),_10000_DMG:new aN("10000_DMG","",1e4,"lucky_punch_master",100).setSecret(!0),_250_HEAL:new rN("250_HEAL","",250,"potion",10),_1000_HEAL:new rN("1000_HEAL","",1e3,"super_potion",25).setSecret(!0),_2500_HEAL:new rN("2500_HEAL","",2500,"hyper_potion",50).setSecret(!0),_10000_HEAL:new rN("10000_HEAL","",1e4,"max_potion",100).setSecret(!0),LV_100:new qs("LV_100","",100,"rare_candy",25).setSecret(),LV_250:new qs("LV_250","",250,"rarer_candy",50).setSecret(!0),LV_1000:new qs("LV_1000","",1e3,"candy_jar",100).setSecret(!0),_10_RIBBONS:new RN("10_RIBBONS","",10,"bronze_ribbon",10),_25_RIBBONS:new RN("25_RIBBONS","",25,"great_ribbon",25).setSecret(!0),_50_RIBBONS:new RN("50_RIBBONS","",50,"ultra_ribbon",50).setSecret(!0),_75_RIBBONS:new RN("75_RIBBONS","",75,"rogue_ribbon",75).setSecret(!0),_100_RIBBONS:new RN("100_RIBBONS","",100,"master_ribbon",100).setSecret(!0),TRANSFER_MAX_STAT_STAGE:new PE("TRANSFER_MAX_STAT_STAGE","","TRANSFER_MAX_STAT_STAGE.description","baton",20),MAX_FRIENDSHIP:new PE("MAX_FRIENDSHIP","","MAX_FRIENDSHIP.description","soothe_bell",25),MEGA_EVOLVE:new PE("MEGA_EVOLVE","","MEGA_EVOLVE.description","mega_bracelet",50),GIGANTAMAX:new PE("GIGANTAMAX","","GIGANTAMAX.description","dynamax_band",50),TERASTALLIZE:new PE("TERASTALLIZE","","TERASTALLIZE.description","tera_orb",25),STELLAR_TERASTALLIZE:new PE("STELLAR_TERASTALLIZE","","STELLAR_TERASTALLIZE.description","stellar_tera_shard",25).setSecret(!0),SPLICE:new PE("SPLICE","","SPLICE.description","dna_splicers",10),MINI_BLACK_HOLE:new ZP("MINI_BLACK_HOLE","","MINI_BLACK_HOLE.description","mini_black_hole",25,t=>t instanceof tT).setSecret(),CATCH_MYTHICAL:new PE("CATCH_MYTHICAL","","CATCH_MYTHICAL.description","strange_ball",50).setSecret(),CATCH_SUB_LEGENDARY:new PE("CATCH_SUB_LEGENDARY","","CATCH_SUB_LEGENDARY.description","rb",75).setSecret(),CATCH_LEGENDARY:new PE("CATCH_LEGENDARY","","CATCH_LEGENDARY.description","mb",100).setSecret(),SEE_SHINY:new PE("SEE_SHINY","","SEE_SHINY.description","pb_gold",75),SHINY_PARTY:new PE("SHINY_PARTY","","SHINY_PARTY.description","shiny_charm",100).setSecret(!0),HATCH_MYTHICAL:new PE("HATCH_MYTHICAL","","HATCH_MYTHICAL.description","mystery_egg",75).setSecret(),HATCH_SUB_LEGENDARY:new PE("HATCH_SUB_LEGENDARY","","HATCH_SUB_LEGENDARY.description","oval_stone",100).setSecret(),HATCH_LEGENDARY:new PE("HATCH_LEGENDARY","","HATCH_LEGENDARY.description","lucky_egg",125).setSecret(),HATCH_SHINY:new PE("HATCH_SHINY","","HATCH_SHINY.description","golden_egg",100).setSecret(),HIDDEN_ABILITY:new PE("HIDDEN_ABILITY","","HIDDEN_ABILITY.description","ability_charm",75),PERFECT_IVS:new PE("PERFECT_IVS","","PERFECT_IVS.description","blunder_policy",100),CLASSIC_VICTORY:new PE("CLASSIC_VICTORY","","CLASSIC_VICTORY.description","relic_crown",150,t=>s.gameData.gameStats.sessionsWon===0),UNEVOLVED_CLASSIC_VICTORY:new PE("UNEVOLVED_CLASSIC_VICTORY","","UNEVOLVED_CLASSIC_VICTORY.description","eviolite",175,t=>s.getPlayerParty().some(E=>E.getSpeciesForm(!0).speciesId in BA)),MONO_GEN_ONE_VICTORY:new zA("MONO_GEN_ONE","","MONO_GEN_ONE.description","ribbon_gen1",100,t=>t instanceof LO&&t.value===1&&!s.gameMode.challenges.some(E=>[Je.INVERSE_BATTLE,Je.FLIP_STAT].includes(E.id)&&E.value>0)),MONO_GEN_TWO_VICTORY:new zA("MONO_GEN_TWO","","MONO_GEN_TWO.description","ribbon_gen2",100,t=>t instanceof LO&&t.value===2&&!s.gameMode.challenges.some(E=>[Je.INVERSE_BATTLE,Je.FLIP_STAT].includes(E.id)&&E.value>0)),MONO_GEN_THREE_VICTORY:new zA("MONO_GEN_THREE","","MONO_GEN_THREE.description","ribbon_gen3",100,t=>t instanceof LO&&t.value===3&&!s.gameMode.challenges.some(E=>[Je.INVERSE_BATTLE,Je.FLIP_STAT].includes(E.id)&&E.value>0)),MONO_GEN_FOUR_VICTORY:new zA("MONO_GEN_FOUR","","MONO_GEN_FOUR.description","ribbon_gen4",100,t=>t instanceof LO&&t.value===4&&!s.gameMode.challenges.some(E=>[Je.INVERSE_BATTLE,Je.FLIP_STAT].includes(E.id)&&E.value>0)),MONO_GEN_FIVE_VICTORY:new zA("MONO_GEN_FIVE","","MONO_GEN_FIVE.description","ribbon_gen5",100,t=>t instanceof LO&&t.value===5&&!s.gameMode.challenges.some(E=>[Je.INVERSE_BATTLE,Je.FLIP_STAT].includes(E.id)&&E.value>0)),MONO_GEN_SIX_VICTORY:new zA("MONO_GEN_SIX","","MONO_GEN_SIX.description","ribbon_gen6",100,t=>t instanceof LO&&t.value===6&&!s.gameMode.challenges.some(E=>[Je.INVERSE_BATTLE,Je.FLIP_STAT].includes(E.id)&&E.value>0)),MONO_GEN_SEVEN_VICTORY:new zA("MONO_GEN_SEVEN","","MONO_GEN_SEVEN.description","ribbon_gen7",100,t=>t instanceof LO&&t.value===7&&!s.gameMode.challenges.some(E=>[Je.INVERSE_BATTLE,Je.FLIP_STAT].includes(E.id)&&E.value>0)),MONO_GEN_EIGHT_VICTORY:new zA("MONO_GEN_EIGHT","","MONO_GEN_EIGHT.description","ribbon_gen8",100,t=>t instanceof LO&&t.value===8&&!s.gameMode.challenges.some(E=>[Je.INVERSE_BATTLE,Je.FLIP_STAT].includes(E.id)&&E.value>0)),MONO_GEN_NINE_VICTORY:new zA("MONO_GEN_NINE","","MONO_GEN_NINE.description","ribbon_gen9",100,t=>t instanceof LO&&t.value===9&&!s.gameMode.challenges.some(E=>[Je.INVERSE_BATTLE,Je.FLIP_STAT].includes(E.id)&&E.value>0)),MONO_NORMAL:new zA("MONO_NORMAL","","MONO_NORMAL.description","silk_scarf",100,t=>t instanceof Et&&t.value===1&&!s.gameMode.challenges.some(E=>[Je.INVERSE_BATTLE,Je.FLIP_STAT].includes(E.id)&&E.value>0)),MONO_FIGHTING:new zA("MONO_FIGHTING","","MONO_FIGHTING.description","black_belt",100,t=>t instanceof Et&&t.value===2&&!s.gameMode.challenges.some(E=>[Je.INVERSE_BATTLE,Je.FLIP_STAT].includes(E.id)&&E.value>0)),MONO_FLYING:new zA("MONO_FLYING","","MONO_FLYING.description","sharp_beak",100,t=>t instanceof Et&&t.value===3&&!s.gameMode.challenges.some(E=>[Je.INVERSE_BATTLE,Je.FLIP_STAT].includes(E.id)&&E.value>0)),MONO_POISON:new zA("MONO_POISON","","MONO_POISON.description","poison_barb",100,t=>t instanceof Et&&t.value===4&&!s.gameMode.challenges.some(E=>[Je.INVERSE_BATTLE,Je.FLIP_STAT].includes(E.id)&&E.value>0)),MONO_GROUND:new zA("MONO_GROUND","","MONO_GROUND.description","soft_sand",100,t=>t instanceof Et&&t.value===5&&!s.gameMode.challenges.some(E=>[Je.INVERSE_BATTLE,Je.FLIP_STAT].includes(E.id)&&E.value>0)),MONO_ROCK:new zA("MONO_ROCK","","MONO_ROCK.description","hard_stone",100,t=>t instanceof Et&&t.value===6&&!s.gameMode.challenges.some(E=>[Je.INVERSE_BATTLE,Je.FLIP_STAT].includes(E.id)&&E.value>0)),MONO_BUG:new zA("MONO_BUG","","MONO_BUG.description","silver_powder",100,t=>t instanceof Et&&t.value===7&&!s.gameMode.challenges.some(E=>[Je.INVERSE_BATTLE,Je.FLIP_STAT].includes(E.id)&&E.value>0)),MONO_GHOST:new zA("MONO_GHOST","","MONO_GHOST.description","spell_tag",100,t=>t instanceof Et&&t.value===8&&!s.gameMode.challenges.some(E=>[Je.INVERSE_BATTLE,Je.FLIP_STAT].includes(E.id)&&E.value>0)),MONO_STEEL:new zA("MONO_STEEL","","MONO_STEEL.description","metal_coat",100,t=>t instanceof Et&&t.value===9&&!s.gameMode.challenges.some(E=>[Je.INVERSE_BATTLE,Je.FLIP_STAT].includes(E.id)&&E.value>0)),MONO_FIRE:new zA("MONO_FIRE","","MONO_FIRE.description","charcoal",100,t=>t instanceof Et&&t.value===10&&!s.gameMode.challenges.some(E=>[Je.INVERSE_BATTLE,Je.FLIP_STAT].includes(E.id)&&E.value>0)),MONO_WATER:new zA("MONO_WATER","","MONO_WATER.description","mystic_water",100,t=>t instanceof Et&&t.value===11&&!s.gameMode.challenges.some(E=>[Je.INVERSE_BATTLE,Je.FLIP_STAT].includes(E.id)&&E.value>0)),MONO_GRASS:new zA("MONO_GRASS","","MONO_GRASS.description","miracle_seed",100,t=>t instanceof Et&&t.value===12&&!s.gameMode.challenges.some(E=>[Je.INVERSE_BATTLE,Je.FLIP_STAT].includes(E.id)&&E.value>0)),MONO_ELECTRIC:new zA("MONO_ELECTRIC","","MONO_ELECTRIC.description","magnet",100,t=>t instanceof Et&&t.value===13&&!s.gameMode.challenges.some(E=>[Je.INVERSE_BATTLE,Je.FLIP_STAT].includes(E.id)&&E.value>0)),MONO_PSYCHIC:new zA("MONO_PSYCHIC","","MONO_PSYCHIC.description","twisted_spoon",100,t=>t instanceof Et&&t.value===14&&!s.gameMode.challenges.some(E=>[Je.INVERSE_BATTLE,Je.FLIP_STAT].includes(E.id)&&E.value>0)),MONO_ICE:new zA("MONO_ICE","","MONO_ICE.description","never_melt_ice",100,t=>t instanceof Et&&t.value===15&&!s.gameMode.challenges.some(E=>[Je.INVERSE_BATTLE,Je.FLIP_STAT].includes(E.id)&&E.value>0)),MONO_DRAGON:new zA("MONO_DRAGON","","MONO_DRAGON.description","dragon_fang",100,t=>t instanceof Et&&t.value===16&&!s.gameMode.challenges.some(E=>[Je.INVERSE_BATTLE,Je.FLIP_STAT].includes(E.id)&&E.value>0)),MONO_DARK:new zA("MONO_DARK","","MONO_DARK.description","black_glasses",100,t=>t instanceof Et&&t.value===17&&!s.gameMode.challenges.some(E=>[Je.INVERSE_BATTLE,Je.FLIP_STAT].includes(E.id)&&E.value>0)),MONO_FAIRY:new zA("MONO_FAIRY","","MONO_FAIRY.description","fairy_feather",100,t=>t instanceof Et&&t.value===18&&!s.gameMode.challenges.some(E=>[Je.INVERSE_BATTLE,Je.FLIP_STAT].includes(E.id)&&E.value>0)),FRESH_START:new zA("FRESH_START","","FRESH_START.description","reviver_seed",100,t=>t instanceof da&&t.value>0&&!s.gameMode.challenges.some(E=>[Je.INVERSE_BATTLE,Je.FLIP_STAT].includes(E.id)&&E.value>0)),INVERSE_BATTLE:new zA("INVERSE_BATTLE","","INVERSE_BATTLE.description","inverse",100,t=>t instanceof Ka&&t.value>0),FLIP_STATS:new zA("FLIP_STATS","","FLIP_STATS.description","dubious_disc",100,t=>t instanceof nS&&t.value>0),FLIP_INVERSE:new zA("FLIP_INVERSE","","FLIP_INVERSE.description","cracked_pot",100,t=>t instanceof nS&&t.value>0&&s.gameMode.challenges.some(E=>E.id===Je.INVERSE_BATTLE&&E.value>0)).setSecret(),BREEDERS_IN_SPACE:new PE("BREEDERS_IN_SPACE","","BREEDERS_IN_SPACE.description","moon_stone",50).setSecret()};function Z8(){const t=Object.keys(oA);t.forEach((E,R)=>{oA[E].id=E,oA[E].hasParent&&(oA[E].parentId=t[R-1])})}r(Z8,"initAchievements");const NV={[l.YOUNGSTER]:[{encounter:["dialogue:youngster.encounter.1","dialogue:youngster.encounter.2","dialogue:youngster.encounter.3","dialogue:youngster.encounter.4","dialogue:youngster.encounter.5","dialogue:youngster.encounter.6","dialogue:youngster.encounter.7","dialogue:youngster.encounter.8","dialogue:youngster.encounter.9","dialogue:youngster.encounter.10","dialogue:youngster.encounter.11","dialogue:youngster.encounter.12","dialogue:youngster.encounter.13"],victory:["dialogue:youngster.victory.1","dialogue:youngster.victory.2","dialogue:youngster.victory.3","dialogue:youngster.victory.4","dialogue:youngster.victory.5","dialogue:youngster.victory.6","dialogue:youngster.victory.7","dialogue:youngster.victory.8","dialogue:youngster.victory.9","dialogue:youngster.victory.10","dialogue:youngster.victory.11","dialogue:youngster.victory.12","dialogue:youngster.victory.13"]},{encounter:["dialogue:lass.encounter.1","dialogue:lass.encounter.2","dialogue:lass.encounter.3","dialogue:lass.encounter.4","dialogue:lass.encounter.5","dialogue:lass.encounter.6","dialogue:lass.encounter.7","dialogue:lass.encounter.8","dialogue:lass.encounter.9"],victory:["dialogue:lass.victory.1","dialogue:lass.victory.2","dialogue:lass.victory.3","dialogue:lass.victory.4","dialogue:lass.victory.5","dialogue:lass.victory.6","dialogue:lass.victory.7","dialogue:lass.victory.8","dialogue:lass.victory.9"]}],[l.BREEDER]:[{encounter:["dialogue:breeder.encounter.1","dialogue:breeder.encounter.2","dialogue:breeder.encounter.3"],victory:["dialogue:breeder.victory.1","dialogue:breeder.victory.2","dialogue:breeder.victory.3"],defeat:["dialogue:breeder.defeat.1","dialogue:breeder.defeat.2","dialogue:breeder.defeat.3"]},{encounter:["dialogue:breeder_female.encounter.1","dialogue:breeder_female.encounter.2","dialogue:breeder_female.encounter.3"],victory:["dialogue:breeder_female.victory.1","dialogue:breeder_female.victory.2","dialogue:breeder_female.victory.3"],defeat:["dialogue:breeder_female.defeat.1","dialogue:breeder_female.defeat.2","dialogue:breeder_female.defeat.3"]}],[l.FISHERMAN]:[{encounter:["dialogue:fisherman.encounter.1","dialogue:fisherman.encounter.2","dialogue:fisherman.encounter.3"],victory:["dialogue:fisherman.victory.1","dialogue:fisherman.victory.2","dialogue:fisherman.victory.3"]},{encounter:["dialogue:fisherman_female.encounter.1","dialogue:fisherman_female.encounter.2","dialogue:fisherman_female.encounter.3"],victory:["dialogue:fisherman_female.victory.1","dialogue:fisherman_female.victory.2","dialogue:fisherman_female.victory.3"]}],[l.SWIMMER]:[{encounter:["dialogue:swimmer.encounter.1","dialogue:swimmer.encounter.2","dialogue:swimmer.encounter.3"],victory:["dialogue:swimmer.victory.1","dialogue:swimmer.victory.2","dialogue:swimmer.victory.3"]}],[l.BACKPACKER]:[{encounter:["dialogue:backpacker.encounter.1","dialogue:backpacker.encounter.2","dialogue:backpacker.encounter.3","dialogue:backpacker.encounter.4"],victory:["dialogue:backpacker.victory.1","dialogue:backpacker.victory.2","dialogue:backpacker.victory.3","dialogue:backpacker.victory.4"]}],[l.ACE_TRAINER]:[{encounter:["dialogue:ace_trainer.encounter.1","dialogue:ace_trainer.encounter.2","dialogue:ace_trainer.encounter.3","dialogue:ace_trainer.encounter.4"],victory:["dialogue:ace_trainer.victory.1","dialogue:ace_trainer.victory.2","dialogue:ace_trainer.victory.3","dialogue:ace_trainer.victory.4"],defeat:["dialogue:ace_trainer.defeat.1","dialogue:ace_trainer.defeat.2","dialogue:ace_trainer.defeat.3","dialogue:ace_trainer.defeat.4"]}],[l.PARASOL_LADY]:[{encounter:["dialogue:parasol_lady.encounter.1"],victory:["dialogue:parasol_lady.victory.1"]}],[l.TWINS]:[{encounter:["dialogue:twins.encounter.1","dialogue:twins.encounter.2","dialogue:twins.encounter.3"],victory:["dialogue:twins.victory.1","dialogue:twins.victory.2","dialogue:twins.victory.3"],defeat:["dialogue:twins.defeat.1","dialogue:twins.defeat.2","dialogue:twins.defeat.3"]}],[l.CYCLIST]:[{encounter:["dialogue:cyclist.encounter.1","dialogue:cyclist.encounter.2","dialogue:cyclist.encounter.3"],victory:["dialogue:cyclist.victory.1","dialogue:cyclist.victory.2","dialogue:cyclist.victory.3"]}],[l.BLACK_BELT]:[{encounter:["dialogue:black_belt.encounter.1","dialogue:black_belt.encounter.2"],victory:["dialogue:black_belt.victory.1","dialogue:black_belt.victory.2"]},{encounter:["dialogue:battle_girl.encounter.1"],victory:["dialogue:battle_girl.victory.1"]}],[l.HIKER]:[{encounter:["dialogue:hiker.encounter.1","dialogue:hiker.encounter.2"],victory:["dialogue:hiker.victory.1","dialogue:hiker.victory.2"]}],[l.RANGER]:[{encounter:["dialogue:ranger.encounter.1","dialogue:ranger.encounter.2"],victory:["dialogue:ranger.victory.1","dialogue:ranger.victory.2"],defeat:["dialogue:ranger.defeat.1","dialogue:ranger.defeat.2"]}],[l.SCIENTIST]:[{encounter:["dialogue:scientist.encounter.1"],victory:["dialogue:scientist.victory.1"]}],[l.SCHOOL_KID]:[{encounter:["dialogue:school_kid.encounter.1","dialogue:school_kid.encounter.2"],victory:["dialogue:school_kid.victory.1","dialogue:school_kid.victory.2"]}],[l.ARTIST]:[{encounter:["dialogue:artist.encounter.1"],victory:["dialogue:artist.victory.1"]}],[l.GUITARIST]:[{encounter:["dialogue:guitarist.encounter.1"],victory:["dialogue:guitarist.victory.1"]}],[l.WORKER]:[{encounter:["dialogue:worker.encounter.1"],victory:["dialogue:worker.victory.1"]},{encounter:["dialogue:worker_female.encounter.1"],victory:["dialogue:worker_female.victory.1"],defeat:["dialogue:worker_female.defeat.1"]},{encounter:["dialogue:worker_double.encounter.1"],victory:["dialogue:worker_double.victory.1"]}],[l.SNOW_WORKER]:[{encounter:["dialogue:snow_worker.encounter.1"],victory:["dialogue:snow_worker.victory.1"]},{encounter:["dialogue:snow_worker_double.encounter.1"],victory:["dialogue:snow_worker_double.victory.1"]}],[l.HEX_MANIAC]:[{encounter:["dialogue:hex_maniac.encounter.1","dialogue:hex_maniac.encounter.2"],victory:["dialogue:hex_maniac.victory.1","dialogue:hex_maniac.victory.2"],defeat:["dialogue:hex_maniac.defeat.1","dialogue:hex_maniac.defeat.2"]}],[l.PSYCHIC]:[{encounter:["dialogue:psychic.encounter.1"],victory:["dialogue:psychic.victory.1"]}],[l.OFFICER]:[{encounter:["dialogue:officer.encounter.1","dialogue:officer.encounter.2"],victory:["dialogue:officer.victory.1","dialogue:officer.victory.2"]}],[l.BEAUTY]:[{encounter:["dialogue:beauty.encounter.1"],victory:["dialogue:beauty.victory.1"]}],[l.BAKER]:[{encounter:["dialogue:baker.encounter.1"],victory:["dialogue:baker.victory.1"]}],[l.BIKER]:[{encounter:["dialogue:biker.encounter.1"],victory:["dialogue:biker.victory.1"]}],[l.FIREBREATHER]:[{encounter:["dialogue:firebreather.encounter.1","dialogue:firebreather.encounter.2","dialogue:firebreather.encounter.3"],victory:["dialogue:firebreather.victory.1","dialogue:firebreather.victory.2","dialogue:firebreather.victory.3"]}],[l.SAILOR]:[{encounter:["dialogue:sailor.encounter.1","dialogue:sailor.encounter.2","dialogue:sailor.encounter.3"],victory:["dialogue:sailor.victory.1","dialogue:sailor.victory.2","dialogue:sailor.victory.3"]}],[l.CLERK]:[{encounter:["dialogue:clerk.encounter.1","dialogue:clerk.encounter.2","dialogue:clerk.encounter.3"],victory:["dialogue:clerk.victory.1","dialogue:clerk.victory.2","dialogue:clerk.victory.3"]},{encounter:["dialogue:clerk_female.encounter.1","dialogue:clerk_female.encounter.2","dialogue:clerk_female.encounter.3"],victory:["dialogue:clerk_female.victory.1","dialogue:clerk_female.victory.2","dialogue:clerk_female.victory.3"]}],[l.HOOLIGANS]:[{encounter:["dialogue:hooligans.encounter.1","dialogue:hooligans.encounter.2"],victory:["dialogue:hooligans.victory.1","dialogue:hooligans.victory.2"]}],[l.MUSICIAN]:[{encounter:["dialogue:musician.encounter.1","dialogue:musician.encounter.2","dialogue:musician.encounter.3","dialogue:musician.encounter.4"],victory:["dialogue:musician.victory.1","dialogue:musician.victory.2","dialogue:musician.victory.3"]}],[l.PILOT]:[{encounter:["dialogue:pilot.encounter.1","dialogue:pilot.encounter.2","dialogue:pilot.encounter.3","dialogue:pilot.encounter.4"],victory:["dialogue:pilot.victory.1","dialogue:pilot.victory.2","dialogue:pilot.victory.3","dialogue:pilot.victory.4"]}],[l.POKEFAN]:[{encounter:["dialogue:pokefan.encounter.1","dialogue:pokefan.encounter.2","dialogue:pokefan.encounter.3"],victory:["dialogue:pokefan.victory.1","dialogue:pokefan.victory.2","dialogue:pokefan.victory.3"]},{encounter:["dialogue:pokefan_female.encounter.1","dialogue:pokefan_female.encounter.2","dialogue:pokefan_female.encounter.3"],victory:["dialogue:pokefan_female.victory.1","dialogue:pokefan_female.victory.2","dialogue:pokefan_female.victory.3"]}],[l.RICH]:[{encounter:["dialogue:rich.encounter.1","dialogue:rich.encounter.2","dialogue:rich.encounter.3"],victory:["dialogue:rich.victory.1","dialogue:rich.victory.2","dialogue:rich.victory.3"]},{encounter:["dialogue:rich_female.encounter.1","dialogue:rich_female.encounter.2","dialogue:rich_female.encounter.3"],victory:["dialogue:rich_female.victory.1","dialogue:rich_female.victory.2","dialogue:rich_female.victory.3"]}],[l.RICH_KID]:[{encounter:["dialogue:rich_kid.encounter.1","dialogue:rich_kid.encounter.2","dialogue:rich_kid.encounter.3"],victory:["dialogue:rich_kid.victory.1","dialogue:rich_kid.victory.2","dialogue:rich_kid.victory.3","dialogue:rich_kid.victory.4"]},{encounter:["dialogue:rich_kid_female.encounter.1","dialogue:rich_kid_female.encounter.2","dialogue:rich_kid_female.encounter.3"],victory:["dialogue:rich_kid_female.victory.1","dialogue:rich_kid_female.victory.2","dialogue:rich_kid_female.victory.3","dialogue:rich_kid_female.victory.4"]}],[l.ROCKET_GRUNT]:[{encounter:["dialogue:rocket_grunt.encounter.1","dialogue:rocket_grunt.encounter.2","dialogue:rocket_grunt.encounter.3","dialogue:rocket_grunt.encounter.4","dialogue:rocket_grunt.encounter.5"],victory:["dialogue:rocket_grunt.victory.1","dialogue:rocket_grunt.victory.2","dialogue:rocket_grunt.victory.3","dialogue:rocket_grunt.victory.4","dialogue:rocket_grunt.victory.5"]}],[l.ARCHER]:[{encounter:["dialogue:archer.encounter.1","dialogue:archer.encounter.2","dialogue:archer.encounter.3"],victory:["dialogue:archer.victory.1","dialogue:archer.victory.2","dialogue:archer.victory.3"]}],[l.ARIANA]:[{encounter:["dialogue:ariana.encounter.1","dialogue:ariana.encounter.2","dialogue:ariana.encounter.3"],victory:["dialogue:ariana.victory.1","dialogue:ariana.victory.2","dialogue:ariana.victory.3"]}],[l.PROTON]:[{encounter:["dialogue:proton.encounter.1","dialogue:proton.encounter.2","dialogue:proton.encounter.3"],victory:["dialogue:proton.victory.1","dialogue:proton.victory.2","dialogue:proton.victory.3"]}],[l.PETREL]:[{encounter:["dialogue:petrel.encounter.1","dialogue:petrel.encounter.2","dialogue:petrel.encounter.3"],victory:["dialogue:petrel.victory.1","dialogue:petrel.victory.2","dialogue:petrel.victory.3"]}],[l.MAGMA_GRUNT]:[{encounter:["dialogue:magma_grunt.encounter.1","dialogue:magma_grunt.encounter.2","dialogue:magma_grunt.encounter.3","dialogue:magma_grunt.encounter.4","dialogue:magma_grunt.encounter.5"],victory:["dialogue:magma_grunt.victory.1","dialogue:magma_grunt.victory.2","dialogue:magma_grunt.victory.3","dialogue:magma_grunt.victory.4","dialogue:magma_grunt.victory.5"]}],[l.TABITHA]:[{encounter:["dialogue:tabitha.encounter.1","dialogue:tabitha.encounter.2","dialogue:tabitha.encounter.3"],victory:["dialogue:tabitha.victory.1","dialogue:tabitha.victory.2","dialogue:tabitha.victory.3"]}],[l.COURTNEY]:[{encounter:["dialogue:courtney.encounter.1","dialogue:courtney.encounter.2","dialogue:courtney.encounter.3"],victory:["dialogue:courtney.victory.1","dialogue:courtney.victory.2","dialogue:courtney.victory.3"]}],[l.AQUA_GRUNT]:[{encounter:["dialogue:aqua_grunt.encounter.1","dialogue:aqua_grunt.encounter.2","dialogue:aqua_grunt.encounter.3","dialogue:aqua_grunt.encounter.4","dialogue:aqua_grunt.encounter.5"],victory:["dialogue:aqua_grunt.victory.1","dialogue:aqua_grunt.victory.2","dialogue:aqua_grunt.victory.3","dialogue:aqua_grunt.victory.4","dialogue:aqua_grunt.victory.5"]}],[l.MATT]:[{encounter:["dialogue:matt.encounter.1","dialogue:matt.encounter.2","dialogue:matt.encounter.3"],victory:["dialogue:matt.victory.1","dialogue:matt.victory.2","dialogue:matt.victory.3"]}],[l.SHELLY]:[{encounter:["dialogue:shelly.encounter.1","dialogue:shelly.encounter.2","dialogue:shelly.encounter.3"],victory:["dialogue:shelly.victory.1","dialogue:shelly.victory.2","dialogue:shelly.victory.3"]}],[l.GALACTIC_GRUNT]:[{encounter:["dialogue:galactic_grunt.encounter.1","dialogue:galactic_grunt.encounter.2","dialogue:galactic_grunt.encounter.3","dialogue:galactic_grunt.encounter.4","dialogue:galactic_grunt.encounter.5"],victory:["dialogue:galactic_grunt.victory.1","dialogue:galactic_grunt.victory.2","dialogue:galactic_grunt.victory.3","dialogue:galactic_grunt.victory.4","dialogue:galactic_grunt.victory.5"]}],[l.JUPITER]:[{encounter:["dialogue:jupiter.encounter.1","dialogue:jupiter.encounter.2","dialogue:jupiter.encounter.3"],victory:["dialogue:jupiter.victory.1","dialogue:jupiter.victory.2","dialogue:jupiter.victory.3"]}],[l.MARS]:[{encounter:["dialogue:mars.encounter.1","dialogue:mars.encounter.2","dialogue:mars.encounter.3"],victory:["dialogue:mars.victory.1","dialogue:mars.victory.2","dialogue:mars.victory.3"]}],[l.SATURN]:[{encounter:["dialogue:saturn.encounter.1","dialogue:saturn.encounter.2","dialogue:saturn.encounter.3"],victory:["dialogue:saturn.victory.1","dialogue:saturn.victory.2","dialogue:saturn.victory.3"]}],[l.PLASMA_GRUNT]:[{encounter:["dialogue:plasma_grunt.encounter.1","dialogue:plasma_grunt.encounter.2","dialogue:plasma_grunt.encounter.3","dialogue:plasma_grunt.encounter.4","dialogue:plasma_grunt.encounter.5"],victory:["dialogue:plasma_grunt.victory.1","dialogue:plasma_grunt.victory.2","dialogue:plasma_grunt.victory.3","dialogue:plasma_grunt.victory.4","dialogue:plasma_grunt.victory.5"]}],[l.ZINZOLIN]:[{encounter:["dialogue:zinzolin.encounter.1","dialogue:zinzolin.encounter.2","dialogue:zinzolin.encounter.3"],victory:["dialogue:zinzolin.victory.1","dialogue:zinzolin.victory.2","dialogue:zinzolin.victory.3"]}],[l.COLRESS]:[{encounter:["dialogue:colress.encounter.1","dialogue:colress.encounter.2","dialogue:colress.encounter.3"],victory:["dialogue:colress.victory.1","dialogue:colress.victory.2","dialogue:colress.victory.3"]}],[l.FLARE_GRUNT]:[{encounter:["dialogue:flare_grunt.encounter.1","dialogue:flare_grunt.encounter.2","dialogue:flare_grunt.encounter.3","dialogue:flare_grunt.encounter.4","dialogue:flare_grunt.encounter.5"],victory:["dialogue:flare_grunt.victory.1","dialogue:flare_grunt.victory.2","dialogue:flare_grunt.victory.3","dialogue:flare_grunt.victory.4","dialogue:flare_grunt.victory.5"]}],[l.BRYONY]:[{encounter:["dialogue:bryony.encounter.1","dialogue:bryony.encounter.2","dialogue:bryony.encounter.3"],victory:["dialogue:bryony.victory.1","dialogue:bryony.victory.2","dialogue:bryony.victory.3"]}],[l.XEROSIC]:[{encounter:["dialogue:xerosic.encounter.1","dialogue:xerosic.encounter.2","dialogue:xerosic.encounter.3"],victory:["dialogue:xerosic.victory.1","dialogue:xerosic.victory.2","dialogue:xerosic.victory.3"]}],[l.AETHER_GRUNT]:[{encounter:["dialogue:aether_grunt.encounter.1","dialogue:aether_grunt.encounter.2","dialogue:aether_grunt.encounter.3","dialogue:aether_grunt.encounter.4","dialogue:aether_grunt.encounter.5"],victory:["dialogue:aether_grunt.victory.1","dialogue:aether_grunt.victory.2","dialogue:aether_grunt.victory.3","dialogue:aether_grunt.victory.4","dialogue:aether_grunt.victory.5"]}],[l.FABA]:[{encounter:["dialogue:faba.encounter.1","dialogue:faba.encounter.2","dialogue:faba.encounter.3"],victory:["dialogue:faba.victory.1","dialogue:faba.victory.2","dialogue:faba.victory.3"]}],[l.SKULL_GRUNT]:[{encounter:["dialogue:skull_grunt.encounter.1","dialogue:skull_grunt.encounter.2","dialogue:skull_grunt.encounter.3","dialogue:skull_grunt.encounter.4","dialogue:skull_grunt.encounter.5"],victory:["dialogue:skull_grunt.victory.1","dialogue:skull_grunt.victory.2","dialogue:skull_grunt.victory.3","dialogue:skull_grunt.victory.4","dialogue:skull_grunt.victory.5"]}],[l.PLUMERIA]:[{encounter:["dialogue:plumeria.encounter.1","dialogue:plumeria.encounter.2","dialogue:plumeria.encounter.3"],victory:["dialogue:plumeria.victory.1","dialogue:plumeria.victory.2","dialogue:plumeria.victory.3"]}],[l.MACRO_GRUNT]:[{encounter:["dialogue:macro_grunt.encounter.1","dialogue:macro_grunt.encounter.2","dialogue:macro_grunt.encounter.3","dialogue:macro_grunt.encounter.4","dialogue:macro_grunt.encounter.5"],victory:["dialogue:macro_grunt.victory.1","dialogue:macro_grunt.victory.2","dialogue:macro_grunt.victory.3","dialogue:macro_grunt.victory.4","dialogue:macro_grunt.victory.5"]}],[l.OLEANA]:[{encounter:["dialogue:oleana.encounter.1","dialogue:oleana.encounter.2","dialogue:oleana.encounter.3"],victory:["dialogue:oleana.victory.1","dialogue:oleana.victory.2","dialogue:oleana.victory.3"]}],[l.STAR_GRUNT]:[{encounter:["dialogue:star_grunt.encounter.1","dialogue:star_grunt.encounter.2","dialogue:star_grunt.encounter.3","dialogue:star_grunt.encounter.4","dialogue:star_grunt.encounter.5"],victory:["dialogue:star_grunt.victory.1","dialogue:star_grunt.victory.2","dialogue:star_grunt.victory.3","dialogue:star_grunt.victory.4","dialogue:star_grunt.victory.5"]}],[l.GIACOMO]:[{encounter:["dialogue:giacomo.encounter.1","dialogue:giacomo.encounter.2"],victory:["dialogue:giacomo.victory.1","dialogue:giacomo.victory.2"]}],[l.MELA]:[{encounter:["dialogue:mela.encounter.1","dialogue:mela.encounter.2"],victory:["dialogue:mela.victory.1","dialogue:mela.victory.2"]}],[l.ATTICUS]:[{encounter:["dialogue:atticus.encounter.1","dialogue:atticus.encounter.2"],victory:["dialogue:atticus.victory.1","dialogue:atticus.victory.2"]}],[l.ORTEGA]:[{encounter:["dialogue:ortega.encounter.1","dialogue:ortega.encounter.2"],victory:["dialogue:ortega.victory.1","dialogue:ortega.victory.2"]}],[l.ERI]:[{encounter:["dialogue:eri.encounter.1","dialogue:eri.encounter.2"],victory:["dialogue:eri.victory.1","dialogue:eri.victory.2"]}],[l.ROCKET_BOSS_GIOVANNI_1]:[{encounter:["dialogue:rocket_boss_giovanni_1.encounter.1"],victory:["dialogue:rocket_boss_giovanni_1.victory.1"],defeat:["dialogue:rocket_boss_giovanni_1.defeat.1"]}],[l.ROCKET_BOSS_GIOVANNI_2]:[{encounter:["dialogue:rocket_boss_giovanni_2.encounter.1"],victory:["dialogue:rocket_boss_giovanni_2.victory.1"],defeat:["dialogue:rocket_boss_giovanni_2.defeat.1"]}],[l.MAXIE]:[{encounter:["dialogue:magma_boss_maxie_1.encounter.1"],victory:["dialogue:magma_boss_maxie_1.victory.1"],defeat:["dialogue:magma_boss_maxie_1.defeat.1"]}],[l.MAXIE_2]:[{encounter:["dialogue:magma_boss_maxie_2.encounter.1"],victory:["dialogue:magma_boss_maxie_2.victory.1"],defeat:["dialogue:magma_boss_maxie_2.defeat.1"]}],[l.ARCHIE]:[{encounter:["dialogue:aqua_boss_archie_1.encounter.1"],victory:["dialogue:aqua_boss_archie_1.victory.1"],defeat:["dialogue:aqua_boss_archie_1.defeat.1"]}],[l.ARCHIE_2]:[{encounter:["dialogue:aqua_boss_archie_2.encounter.1"],victory:["dialogue:aqua_boss_archie_2.victory.1"],defeat:["dialogue:aqua_boss_archie_2.defeat.1"]}],[l.CYRUS]:[{encounter:["dialogue:galactic_boss_cyrus_1.encounter.1"],victory:["dialogue:galactic_boss_cyrus_1.victory.1"],defeat:["dialogue:galactic_boss_cyrus_1.defeat.1"]}],[l.CYRUS_2]:[{encounter:["dialogue:galactic_boss_cyrus_2.encounter.1"],victory:["dialogue:galactic_boss_cyrus_2.victory.1"],defeat:["dialogue:galactic_boss_cyrus_2.defeat.1"]}],[l.GHETSIS]:[{encounter:["dialogue:plasma_boss_ghetsis_1.encounter.1"],victory:["dialogue:plasma_boss_ghetsis_1.victory.1"],defeat:["dialogue:plasma_boss_ghetsis_1.defeat.1"]}],[l.GHETSIS_2]:[{encounter:["dialogue:plasma_boss_ghetsis_2.encounter.1"],victory:["dialogue:plasma_boss_ghetsis_2.victory.1"],defeat:["dialogue:plasma_boss_ghetsis_2.defeat.1"]}],[l.LYSANDRE]:[{encounter:["dialogue:flare_boss_lysandre_1.encounter.1"],victory:["dialogue:flare_boss_lysandre_1.victory.1"],defeat:["dialogue:flare_boss_lysandre_1.defeat.1"]}],[l.LYSANDRE_2]:[{encounter:["dialogue:flare_boss_lysandre_2.encounter.1"],victory:["dialogue:flare_boss_lysandre_2.victory.1"],defeat:["dialogue:flare_boss_lysandre_2.defeat.1"]}],[l.LUSAMINE]:[{encounter:["dialogue:aether_boss_lusamine_1.encounter.1"],victory:["dialogue:aether_boss_lusamine_1.victory.1"],defeat:["dialogue:aether_boss_lusamine_1.defeat.1"]}],[l.LUSAMINE_2]:[{encounter:["dialogue:aether_boss_lusamine_2.encounter.1"],victory:["dialogue:aether_boss_lusamine_2.victory.1"],defeat:["dialogue:aether_boss_lusamine_2.defeat.1"]}],[l.GUZMA]:[{encounter:["dialogue:skull_boss_guzma_1.encounter.1"],victory:["dialogue:skull_boss_guzma_1.victory.1"],defeat:["dialogue:skull_boss_guzma_1.defeat.1"]}],[l.GUZMA_2]:[{encounter:["dialogue:skull_boss_guzma_2.encounter.1"],victory:["dialogue:skull_boss_guzma_2.victory.1"],defeat:["dialogue:skull_boss_guzma_2.defeat.1"]}],[l.ROSE]:[{encounter:["dialogue:macro_boss_rose_1.encounter.1"],victory:["dialogue:macro_boss_rose_1.victory.1"],defeat:["dialogue:macro_boss_rose_1.defeat.1"]}],[l.ROSE_2]:[{encounter:["dialogue:macro_boss_rose_2.encounter.1"],victory:["dialogue:macro_boss_rose_2.victory.1"],defeat:["dialogue:macro_boss_rose_2.defeat.1"]}],[l.PENNY]:[{encounter:["dialogue:star_boss_penny_1.encounter.1"],victory:["dialogue:star_boss_penny_1.victory.1"],defeat:["dialogue:star_boss_penny_1.defeat.1"]}],[l.PENNY_2]:[{encounter:["dialogue:star_boss_penny_2.encounter.1"],victory:["dialogue:star_boss_penny_2.victory.1"],defeat:["dialogue:star_boss_penny_2.defeat.1"]}],[l.BUCK]:[{encounter:["dialogue:stat_trainer_buck.encounter.1","dialogue:stat_trainer_buck.encounter.2"],victory:["dialogue:stat_trainer_buck.victory.1","dialogue:stat_trainer_buck.victory.2"],defeat:["dialogue:stat_trainer_buck.defeat.1","dialogue:stat_trainer_buck.defeat.2"]}],[l.CHERYL]:[{encounter:["dialogue:stat_trainer_cheryl.encounter.1","dialogue:stat_trainer_cheryl.encounter.2"],victory:["dialogue:stat_trainer_cheryl.victory.1","dialogue:stat_trainer_cheryl.victory.2"],defeat:["dialogue:stat_trainer_cheryl.defeat.1","dialogue:stat_trainer_cheryl.defeat.2"]}],[l.MARLEY]:[{encounter:["dialogue:stat_trainer_marley.encounter.1","dialogue:stat_trainer_marley.encounter.2"],victory:["dialogue:stat_trainer_marley.victory.1","dialogue:stat_trainer_marley.victory.2"],defeat:["dialogue:stat_trainer_marley.defeat.1","dialogue:stat_trainer_marley.defeat.2"]}],[l.MIRA]:[{encounter:["dialogue:stat_trainer_mira.encounter.1","dialogue:stat_trainer_mira.encounter.2"],victory:["dialogue:stat_trainer_mira.victory.1","dialogue:stat_trainer_mira.victory.2"],defeat:["dialogue:stat_trainer_mira.defeat.1","dialogue:stat_trainer_mira.defeat.2"]}],[l.RILEY]:[{encounter:["dialogue:stat_trainer_riley.encounter.1","dialogue:stat_trainer_riley.encounter.2"],victory:["dialogue:stat_trainer_riley.victory.1","dialogue:stat_trainer_riley.victory.2"],defeat:["dialogue:stat_trainer_riley.defeat.1","dialogue:stat_trainer_riley.defeat.2"]}],[l.VICTOR]:[{encounter:["dialogue:winstrates_victor.encounter.1"],victory:["dialogue:winstrates_victor.victory.1"]}],[l.VICTORIA]:[{encounter:["dialogue:winstrates_victoria.encounter.1"],victory:["dialogue:winstrates_victoria.victory.1"]}],[l.VIVI]:[{encounter:["dialogue:winstrates_vivi.encounter.1"],victory:["dialogue:winstrates_vivi.victory.1"]}],[l.VICKY]:[{encounter:["dialogue:winstrates_vicky.encounter.1"],victory:["dialogue:winstrates_vicky.victory.1"]}],[l.VITO]:[{encounter:["dialogue:winstrates_vito.encounter.1"],victory:["dialogue:winstrates_vito.victory.1"]}],[l.BROCK]:{encounter:["dialogue:brock.encounter.1","dialogue:brock.encounter.2","dialogue:brock.encounter.3"],victory:["dialogue:brock.victory.1","dialogue:brock.victory.2","dialogue:brock.victory.3"],defeat:["dialogue:brock.defeat.1","dialogue:brock.defeat.2","dialogue:brock.defeat.3"]},[l.MISTY]:{encounter:["dialogue:misty.encounter.1","dialogue:misty.encounter.2","dialogue:misty.encounter.3"],victory:["dialogue:misty.victory.1","dialogue:misty.victory.2","dialogue:misty.victory.3"],defeat:["dialogue:misty.defeat.1","dialogue:misty.defeat.2","dialogue:misty.defeat.3"]},[l.LT_SURGE]:{encounter:["dialogue:lt_surge.encounter.1","dialogue:lt_surge.encounter.2","dialogue:lt_surge.encounter.3"],victory:["dialogue:lt_surge.victory.1","dialogue:lt_surge.victory.2","dialogue:lt_surge.victory.3"],defeat:["dialogue:lt_surge.defeat.1","dialogue:lt_surge.defeat.2","dialogue:lt_surge.defeat.3"]},[l.ERIKA]:{encounter:["dialogue:erika.encounter.1","dialogue:erika.encounter.2","dialogue:erika.encounter.3","dialogue:erika.encounter.4"],victory:["dialogue:erika.victory.1","dialogue:erika.victory.2","dialogue:erika.victory.3","dialogue:erika.victory.4"],defeat:["dialogue:erika.defeat.1","dialogue:erika.defeat.2","dialogue:erika.defeat.3","dialogue:erika.defeat.4"]},[l.JANINE]:{encounter:["dialogue:janine.encounter.1","dialogue:janine.encounter.2","dialogue:janine.encounter.3"],victory:["dialogue:janine.victory.1","dialogue:janine.victory.2","dialogue:janine.victory.3"],defeat:["dialogue:janine.defeat.1","dialogue:janine.defeat.2","dialogue:janine.defeat.3"]},[l.SABRINA]:{encounter:["dialogue:sabrina.encounter.1","dialogue:sabrina.encounter.2","dialogue:sabrina.encounter.3"],victory:["dialogue:sabrina.victory.1","dialogue:sabrina.victory.2","dialogue:sabrina.victory.3"],defeat:["dialogue:sabrina.defeat.1","dialogue:sabrina.defeat.2","dialogue:sabrina.defeat.3"]},[l.BLAINE]:{encounter:["dialogue:blaine.encounter.1","dialogue:blaine.encounter.2","dialogue:blaine.encounter.3"],victory:["dialogue:blaine.victory.1","dialogue:blaine.victory.2","dialogue:blaine.victory.3"],defeat:["dialogue:blaine.defeat.1","dialogue:blaine.defeat.2","dialogue:blaine.defeat.3"]},[l.GIOVANNI]:{encounter:["dialogue:giovanni.encounter.1","dialogue:giovanni.encounter.2","dialogue:giovanni.encounter.3"],victory:["dialogue:giovanni.victory.1","dialogue:giovanni.victory.2","dialogue:giovanni.victory.3"],defeat:["dialogue:giovanni.defeat.1","dialogue:giovanni.defeat.2","dialogue:giovanni.defeat.3"]},[l.ROXANNE]:{encounter:["dialogue:roxanne.encounter.1","dialogue:roxanne.encounter.2","dialogue:roxanne.encounter.3"],victory:["dialogue:roxanne.victory.1","dialogue:roxanne.victory.2","dialogue:roxanne.victory.3"],defeat:["dialogue:roxanne.defeat.1","dialogue:roxanne.defeat.2","dialogue:roxanne.defeat.3"]},[l.BRAWLY]:{encounter:["dialogue:brawly.encounter.1","dialogue:brawly.encounter.2","dialogue:brawly.encounter.3"],victory:["dialogue:brawly.victory.1","dialogue:brawly.victory.2","dialogue:brawly.victory.3"],defeat:["dialogue:brawly.defeat.1","dialogue:brawly.defeat.2","dialogue:brawly.defeat.3"]},[l.WATTSON]:{encounter:["dialogue:wattson.encounter.1","dialogue:wattson.encounter.2","dialogue:wattson.encounter.3"],victory:["dialogue:wattson.victory.1","dialogue:wattson.victory.2","dialogue:wattson.victory.3"],defeat:["dialogue:wattson.defeat.1","dialogue:wattson.defeat.2","dialogue:wattson.defeat.3"]},[l.FLANNERY]:{encounter:["dialogue:flannery.encounter.1","dialogue:flannery.encounter.2","dialogue:flannery.encounter.3"],victory:["dialogue:flannery.victory.1","dialogue:flannery.victory.2","dialogue:flannery.victory.3"],defeat:["dialogue:flannery.defeat.1","dialogue:flannery.defeat.2","dialogue:flannery.defeat.3"]},[l.NORMAN]:{encounter:["dialogue:norman.encounter.1","dialogue:norman.encounter.2","dialogue:norman.encounter.3"],victory:["dialogue:norman.victory.1","dialogue:norman.victory.2","dialogue:norman.victory.3"],defeat:["dialogue:norman.defeat.1","dialogue:norman.defeat.2","dialogue:norman.defeat.3"]},[l.WINONA]:{encounter:["dialogue:winona.encounter.1","dialogue:winona.encounter.2","dialogue:winona.encounter.3"],victory:["dialogue:winona.victory.1","dialogue:winona.victory.2","dialogue:winona.victory.3"],defeat:["dialogue:winona.defeat.1","dialogue:winona.defeat.2","dialogue:winona.defeat.3"]},[l.TATE]:{encounter:["dialogue:tate.encounter.1","dialogue:tate.encounter.2","dialogue:tate.encounter.3"],victory:["dialogue:tate.victory.1","dialogue:tate.victory.2","dialogue:tate.victory.3"],defeat:["dialogue:tate.defeat.1","dialogue:tate.defeat.2","dialogue:tate.defeat.3"]},[l.LIZA]:{encounter:["dialogue:liza.encounter.1","dialogue:liza.encounter.2","dialogue:liza.encounter.3"],victory:["dialogue:liza.victory.1","dialogue:liza.victory.2","dialogue:liza.victory.3"],defeat:["dialogue:liza.defeat.1","dialogue:liza.defeat.2","dialogue:liza.defeat.3"]},[l.JUAN]:{encounter:["dialogue:juan.encounter.1","dialogue:juan.encounter.2","dialogue:juan.encounter.3","dialogue:juan.encounter.4"],victory:["dialogue:juan.victory.1","dialogue:juan.victory.2","dialogue:juan.victory.3","dialogue:juan.victory.4"],defeat:["dialogue:juan.defeat.1","dialogue:juan.defeat.2","dialogue:juan.defeat.3","dialogue:juan.defeat.4"]},[l.CRASHER_WAKE]:{encounter:["dialogue:crasher_wake.encounter.1","dialogue:crasher_wake.encounter.2","dialogue:crasher_wake.encounter.3"],victory:["dialogue:crasher_wake.victory.1","dialogue:crasher_wake.victory.2","dialogue:crasher_wake.victory.3"],defeat:["dialogue:crasher_wake.defeat.1","dialogue:crasher_wake.defeat.2","dialogue:crasher_wake.defeat.3"]},[l.FALKNER]:{encounter:["dialogue:falkner.encounter.1","dialogue:falkner.encounter.2","dialogue:falkner.encounter.3"],victory:["dialogue:falkner.victory.1","dialogue:falkner.victory.2","dialogue:falkner.victory.3"],defeat:["dialogue:falkner.defeat.1","dialogue:falkner.defeat.2","dialogue:falkner.defeat.3"]},[l.NESSA]:{encounter:["dialogue:nessa.encounter.1","dialogue:nessa.encounter.2","dialogue:nessa.encounter.3"],victory:["dialogue:nessa.victory.1","dialogue:nessa.victory.2","dialogue:nessa.victory.3"],defeat:["dialogue:nessa.defeat.1","dialogue:nessa.defeat.2","dialogue:nessa.defeat.3"]},[l.MELONY]:{encounter:["dialogue:melony.encounter.1","dialogue:melony.encounter.2","dialogue:melony.encounter.3"],victory:["dialogue:melony.victory.1","dialogue:melony.victory.2","dialogue:melony.victory.3"],defeat:["dialogue:melony.defeat.1","dialogue:melony.defeat.2","dialogue:melony.defeat.3"]},[l.MARLON]:{encounter:["dialogue:marlon.encounter.1","dialogue:marlon.encounter.2","dialogue:marlon.encounter.3"],victory:["dialogue:marlon.victory.1","dialogue:marlon.victory.2","dialogue:marlon.victory.3"],defeat:["dialogue:marlon.defeat.1","dialogue:marlon.defeat.2","dialogue:marlon.defeat.3"]},[l.SHAUNTAL]:{encounter:["dialogue:shauntal.encounter.1","dialogue:shauntal.encounter.2","dialogue:shauntal.encounter.3"],victory:["dialogue:shauntal.victory.1","dialogue:shauntal.victory.2","dialogue:shauntal.victory.3"],defeat:["dialogue:shauntal.defeat.1","dialogue:shauntal.defeat.2","dialogue:shauntal.defeat.3"]},[l.MARSHAL]:{encounter:["dialogue:marshal.encounter.1","dialogue:marshal.encounter.2","dialogue:marshal.encounter.3"],victory:["dialogue:marshal.victory.1","dialogue:marshal.victory.2","dialogue:marshal.victory.3"],defeat:["dialogue:marshal.defeat.1","dialogue:marshal.defeat.2","dialogue:marshal.defeat.3"]},[l.CHEREN]:{encounter:["dialogue:cheren.encounter.1","dialogue:cheren.encounter.2","dialogue:cheren.encounter.3"],victory:["dialogue:cheren.victory.1","dialogue:cheren.victory.2","dialogue:cheren.victory.3"],defeat:["dialogue:cheren.defeat.1","dialogue:cheren.defeat.2","dialogue:cheren.defeat.3"]},[l.CHILI]:{encounter:["dialogue:chili.encounter.1","dialogue:chili.encounter.2","dialogue:chili.encounter.3"],victory:["dialogue:chili.victory.1","dialogue:chili.victory.2","dialogue:chili.victory.3"],defeat:["dialogue:chili.defeat.1","dialogue:chili.defeat.2","dialogue:chili.defeat.3"]},[l.CILAN]:{encounter:["dialogue:cilan.encounter.1","dialogue:cilan.encounter.2","dialogue:cilan.encounter.3"],victory:["dialogue:cilan.victory.1","dialogue:cilan.victory.2","dialogue:cilan.victory.3"],defeat:["dialogue:cilan.defeat.1","dialogue:cilan.defeat.2","dialogue:cilan.defeat.3"]},[l.ROARK]:{encounter:["dialogue:roark.encounter.1","dialogue:roark.encounter.2","dialogue:roark.encounter.3","dialogue:roark.encounter.4"],victory:["dialogue:roark.victory.1","dialogue:roark.victory.2","dialogue:roark.victory.3","dialogue:roark.victory.4"],defeat:["dialogue:roark.defeat.1","dialogue:roark.defeat.2","dialogue:roark.defeat.3"]},[l.MORTY]:{encounter:["dialogue:morty.encounter.1","dialogue:morty.encounter.2","dialogue:morty.encounter.3","dialogue:morty.encounter.4","dialogue:morty.encounter.5","dialogue:morty.encounter.6"],victory:["dialogue:morty.victory.1","dialogue:morty.victory.2","dialogue:morty.victory.3","dialogue:morty.victory.4","dialogue:morty.victory.5","dialogue:morty.victory.6"],defeat:["dialogue:morty.defeat.1","dialogue:morty.defeat.2","dialogue:morty.defeat.3","dialogue:morty.defeat.4","dialogue:morty.defeat.5","dialogue:morty.defeat.6"]},[l.CRISPIN]:{encounter:["dialogue:crispin.encounter.1","dialogue:crispin.encounter.2"],victory:["dialogue:crispin.victory.1","dialogue:crispin.victory.2"],defeat:["dialogue:crispin.defeat.1","dialogue:crispin.defeat.2"]},[l.AMARYS]:{encounter:["dialogue:amarys.encounter.1"],victory:["dialogue:amarys.victory.1"],defeat:["dialogue:amarys.defeat.1"]},[l.LACEY]:{encounter:["dialogue:lacey.encounter.1"],victory:["dialogue:lacey.victory.1"],defeat:["dialogue:lacey.defeat.1"]},[l.DRAYTON]:{encounter:["dialogue:drayton.encounter.1"],victory:["dialogue:drayton.victory.1"],defeat:["dialogue:drayton.defeat.1"]},[l.RAMOS]:{encounter:["dialogue:ramos.encounter.1"],victory:["dialogue:ramos.victory.1"],defeat:["dialogue:ramos.defeat.1"]},[l.VIOLA]:{encounter:["dialogue:viola.encounter.1","dialogue:viola.encounter.2"],victory:["dialogue:viola.victory.1","dialogue:viola.victory.2"],defeat:["dialogue:viola.defeat.1","dialogue:viola.defeat.2"]},[l.CANDICE]:{encounter:["dialogue:candice.encounter.1","dialogue:candice.encounter.2"],victory:["dialogue:candice.victory.1","dialogue:candice.victory.2"],defeat:["dialogue:candice.defeat.1","dialogue:candice.defeat.2"]},[l.GARDENIA]:{encounter:["dialogue:gardenia.encounter.1"],victory:["dialogue:gardenia.victory.1"],defeat:["dialogue:gardenia.defeat.1"]},[l.AARON]:{encounter:["dialogue:aaron.encounter.1"],victory:["dialogue:aaron.victory.1"],defeat:["dialogue:aaron.defeat.1"]},[l.CRESS]:{encounter:["dialogue:cress.encounter.1"],victory:["dialogue:cress.victory.1"],defeat:["dialogue:cress.defeat.1"]},[l.ALLISTER]:{encounter:["dialogue:allister.encounter.1"],victory:["dialogue:allister.victory.1"],defeat:["dialogue:allister.defeat.1"]},[l.CLAY]:{encounter:["dialogue:clay.encounter.1"],victory:["dialogue:clay.victory.1"],defeat:["dialogue:clay.defeat.1"]},[l.KOFU]:{encounter:["dialogue:kofu.encounter.1"],victory:["dialogue:kofu.victory.1"],defeat:["dialogue:kofu.defeat.1"]},[l.TULIP]:{encounter:["dialogue:tulip.encounter.1"],victory:["dialogue:tulip.victory.1"],defeat:["dialogue:tulip.defeat.1"]},[l.SIDNEY]:{encounter:["dialogue:sidney.encounter.1"],victory:["dialogue:sidney.victory.1"],defeat:["dialogue:sidney.defeat.1"]},[l.PHOEBE]:{encounter:["dialogue:phoebe.encounter.1"],victory:["dialogue:phoebe.victory.1"],defeat:["dialogue:phoebe.defeat.1"]},[l.GLACIA]:{encounter:["dialogue:glacia.encounter.1"],victory:["dialogue:glacia.victory.1"],defeat:["dialogue:glacia.defeat.1"]},[l.DRAKE]:{encounter:["dialogue:drake.encounter.1"],victory:["dialogue:drake.victory.1"],defeat:["dialogue:drake.defeat.1"]},[l.WALLACE]:{encounter:["dialogue:wallace.encounter.1"],victory:["dialogue:wallace.victory.1"],defeat:["dialogue:wallace.defeat.1"]},[l.LORELEI]:{encounter:["dialogue:lorelei.encounter.1"],victory:["dialogue:lorelei.victory.1"],defeat:["dialogue:lorelei.defeat.1"]},[l.WILL]:{encounter:["dialogue:will.encounter.1"],victory:["dialogue:will.victory.1"],defeat:["dialogue:will.defeat.1"]},[l.MALVA]:{encounter:["dialogue:malva.encounter.1"],victory:["dialogue:malva.victory.1"],defeat:["dialogue:malva.defeat.1"]},[l.HALA]:{encounter:["dialogue:hala.encounter.1"],victory:["dialogue:hala.victory.1"],defeat:["dialogue:hala.defeat.1"]},[l.MOLAYNE]:{encounter:["dialogue:molayne.encounter.1"],victory:["dialogue:molayne.victory.1"],defeat:["dialogue:molayne.defeat.1"]},[l.RIKA]:{encounter:["dialogue:rika.encounter.1"],victory:["dialogue:rika.victory.1"],defeat:["dialogue:rika.defeat.1"]},[l.BRUNO]:{encounter:["dialogue:bruno.encounter.1"],victory:["dialogue:bruno.victory.1"],defeat:["dialogue:bruno.defeat.1"]},[l.BUGSY]:{encounter:["dialogue:bugsy.encounter.1"],victory:["dialogue:bugsy.victory.1"],defeat:["dialogue:bugsy.defeat.1"]},[l.KOGA]:{encounter:["dialogue:koga.encounter.1"],victory:["dialogue:koga.victory.1"],defeat:["dialogue:koga.defeat.1"]},[l.BERTHA]:{encounter:["dialogue:bertha.encounter.1"],victory:["dialogue:bertha.victory.1"],defeat:["dialogue:bertha.defeat.1"]},[l.LENORA]:{encounter:["dialogue:lenora.encounter.1"],victory:["dialogue:lenora.victory.1"],defeat:["dialogue:lenora.defeat.1"]},[l.SIEBOLD]:{encounter:["dialogue:siebold.encounter.1"],victory:["dialogue:siebold.victory.1"],defeat:["dialogue:siebold.defeat.1"]},[l.ROXIE]:{encounter:["dialogue:roxie.encounter.1"],victory:["dialogue:roxie.victory.1"],defeat:["dialogue:roxie.defeat.1"]},[l.OLIVIA]:{encounter:["dialogue:olivia.encounter.1"],victory:["dialogue:olivia.victory.1"],defeat:["dialogue:olivia.defeat.1"]},[l.POPPY]:{encounter:["dialogue:poppy.encounter.1"],victory:["dialogue:poppy.victory.1"],defeat:["dialogue:poppy.defeat.1"]},[l.AGATHA]:{encounter:["dialogue:agatha.encounter.1"],victory:["dialogue:agatha.victory.1"],defeat:["dialogue:agatha.defeat.1"]},[l.FLINT]:{encounter:["dialogue:flint.encounter.1"],victory:["dialogue:flint.victory.1"],defeat:["dialogue:flint.defeat.1"]},[l.GRIMSLEY]:{encounter:["dialogue:grimsley.encounter.1"],victory:["dialogue:grimsley.victory.1"],defeat:["dialogue:grimsley.defeat.1"]},[l.CAITLIN]:{encounter:["dialogue:caitlin.encounter.1"],victory:["dialogue:caitlin.victory.1"],defeat:["dialogue:caitlin.defeat.1"]},[l.DIANTHA]:{encounter:["dialogue:diantha.encounter.1"],victory:["dialogue:diantha.victory.1"],defeat:["dialogue:diantha.defeat.1"]},[l.WIKSTROM]:{encounter:["dialogue:wikstrom.encounter.1"],victory:["dialogue:wikstrom.victory.1"],defeat:["dialogue:wikstrom.defeat.1"]},[l.ACEROLA]:{encounter:["dialogue:acerola.encounter.1"],victory:["dialogue:acerola.victory.1"],defeat:["dialogue:acerola.defeat.1"]},[l.LARRY_ELITE]:{encounter:["dialogue:larry_elite.encounter.1"],victory:["dialogue:larry_elite.victory.1"],defeat:["dialogue:larry_elite.defeat.1"]},[l.LANCE]:{encounter:["dialogue:lance.encounter.1","dialogue:lance.encounter.2"],victory:["dialogue:lance.victory.1","dialogue:lance.victory.2"],defeat:["dialogue:lance.defeat.1","dialogue:lance.defeat.2"]},[l.KAREN]:{encounter:["dialogue:karen.encounter.1","dialogue:karen.encounter.2","dialogue:karen.encounter.3"],victory:["dialogue:karen.victory.1","dialogue:karen.victory.2","dialogue:karen.victory.3"],defeat:["dialogue:karen.defeat.1","dialogue:karen.defeat.2","dialogue:karen.defeat.3"]},[l.MILO]:{encounter:["dialogue:milo.encounter.1"],victory:["dialogue:milo.victory.1"],defeat:["dialogue:milo.defeat.1"]},[l.LUCIAN]:{encounter:["dialogue:lucian.encounter.1"],victory:["dialogue:lucian.victory.1"],defeat:["dialogue:lucian.defeat.1"]},[l.DRASNA]:{encounter:["dialogue:drasna.encounter.1"],victory:["dialogue:drasna.victory.1"],defeat:["dialogue:drasna.defeat.1"]},[l.KAHILI]:{encounter:["dialogue:kahili.encounter.1"],victory:["dialogue:kahili.victory.1"],defeat:["dialogue:kahili.defeat.1"]},[l.HASSEL]:{encounter:["dialogue:hassel.encounter.1"],victory:["dialogue:hassel.victory.1"],defeat:["dialogue:hassel.defeat.1"]},[l.BLUE]:{encounter:["dialogue:blue.encounter.1"],victory:["dialogue:blue.victory.1"],defeat:["dialogue:blue.defeat.1"]},[l.PIERS]:{encounter:["dialogue:piers.encounter.1"],victory:["dialogue:piers.victory.1"],defeat:["dialogue:piers.defeat.1"]},[l.RED]:{encounter:["dialogue:red.encounter.1"],victory:["dialogue:red.victory.1"],defeat:["dialogue:red.defeat.1"]},[l.JASMINE]:{encounter:["dialogue:jasmine.encounter.1"],victory:["dialogue:jasmine.victory.1"],defeat:["dialogue:jasmine.defeat.1"]},[l.LANCE_CHAMPION]:{encounter:["dialogue:lance_champion.encounter.1"],victory:["dialogue:lance_champion.victory.1"],defeat:["dialogue:lance_champion.defeat.1"]},[l.STEVEN]:{encounter:["dialogue:steven.encounter.1"],victory:["dialogue:steven.victory.1"],defeat:["dialogue:steven.defeat.1"]},[l.CYNTHIA]:{encounter:["dialogue:cynthia.encounter.1"],victory:["dialogue:cynthia.victory.1"],defeat:["dialogue:cynthia.defeat.1"]},[l.IRIS]:{encounter:["dialogue:iris.encounter.1"],victory:["dialogue:iris.victory.1"],defeat:["dialogue:iris.defeat.1"]},[l.KUKUI]:{encounter:["dialogue:kukui.encounter.1"],victory:["dialogue:kukui.victory.1"],defeat:["dialogue:kukui.defeat.1"]},[l.HAU]:{encounter:["dialogue:hau.encounter.1"],victory:["dialogue:hau.victory.1"],defeat:["dialogue:hau.defeat.1"]},[l.GEETA]:{encounter:["dialogue:geeta.encounter.1"],victory:["dialogue:geeta.victory.1"],defeat:["dialogue:geeta.defeat.1"]},[l.NEMONA]:{encounter:["dialogue:nemona.encounter.1"],victory:["dialogue:nemona.victory.1"],defeat:["dialogue:nemona.defeat.1"]},[l.LEON]:{encounter:["dialogue:leon.encounter.1"],victory:["dialogue:leon.victory.1"],defeat:["dialogue:leon.defeat.1"]},[l.MUSTARD]:{encounter:["dialogue:mustard.encounter.1"],victory:["dialogue:mustard.victory.1"],defeat:["dialogue:mustard.defeat.1"]},[l.WHITNEY]:{encounter:["dialogue:whitney.encounter.1"],victory:["dialogue:whitney.victory.1"],defeat:["dialogue:whitney.defeat.1"]},[l.CHUCK]:{encounter:["dialogue:chuck.encounter.1"],victory:["dialogue:chuck.victory.1"],defeat:["dialogue:chuck.defeat.1"]},[l.KATY]:{encounter:["dialogue:katy.encounter.1"],victory:["dialogue:katy.victory.1"],defeat:["dialogue:katy.defeat.1"]},[l.PRYCE]:{encounter:["dialogue:pryce.encounter.1"],victory:["dialogue:pryce.victory.1"],defeat:["dialogue:pryce.defeat.1"]},[l.CLAIR]:{encounter:["dialogue:clair.encounter.1"],victory:["dialogue:clair.victory.1"],defeat:["dialogue:clair.defeat.1"]},[l.MAYLENE]:{encounter:["dialogue:maylene.encounter.1"],victory:["dialogue:maylene.victory.1"],defeat:["dialogue:maylene.defeat.1"]},[l.FANTINA]:{encounter:["dialogue:fantina.encounter.1"],victory:["dialogue:fantina.victory.1"],defeat:["dialogue:fantina.defeat.1"]},[l.BYRON]:{encounter:["dialogue:byron.encounter.1"],victory:["dialogue:byron.victory.1"],defeat:["dialogue:byron.defeat.1"]},[l.OLYMPIA]:{encounter:["dialogue:olympia.encounter.1"],victory:["dialogue:olympia.victory.1"],defeat:["dialogue:olympia.defeat.1"]},[l.VOLKNER]:{encounter:["dialogue:volkner.encounter.1"],victory:["dialogue:volkner.victory.1"],defeat:["dialogue:volkner.defeat.1"]},[l.BURGH]:{encounter:["dialogue:burgh.encounter.1","dialogue:burgh.encounter.2"],victory:["dialogue:burgh.victory.1","dialogue:burgh.victory.2"],defeat:["dialogue:burgh.defeat.1","dialogue:burgh.defeat.2"]},[l.ELESA]:{encounter:["dialogue:elesa.encounter.1"],victory:["dialogue:elesa.victory.1"],defeat:["dialogue:elesa.defeat.1"]},[l.SKYLA]:{encounter:["dialogue:skyla.encounter.1"],victory:["dialogue:skyla.victory.1"],defeat:["dialogue:skyla.defeat.1"]},[l.BRYCEN]:{encounter:["dialogue:brycen.encounter.1"],victory:["dialogue:brycen.victory.1"],defeat:["dialogue:brycen.defeat.1"]},[l.DRAYDEN]:{encounter:["dialogue:drayden.encounter.1"],victory:["dialogue:drayden.victory.1"],defeat:["dialogue:drayden.defeat.1"]},[l.GRANT]:{encounter:["dialogue:grant.encounter.1"],victory:["dialogue:grant.victory.1"],defeat:["dialogue:grant.defeat.1"]},[l.KORRINA]:{encounter:["dialogue:korrina.encounter.1"],victory:["dialogue:korrina.victory.1"],defeat:["dialogue:korrina.defeat.1"]},[l.CLEMONT]:{encounter:["dialogue:clemont.encounter.1"],victory:["dialogue:clemont.victory.1"],defeat:["dialogue:clemont.defeat.1"]},[l.VALERIE]:{encounter:["dialogue:valerie.encounter.1"],victory:["dialogue:valerie.victory.1"],defeat:["dialogue:valerie.defeat.1"]},[l.WULFRIC]:{encounter:["dialogue:wulfric.encounter.1"],victory:["dialogue:wulfric.victory.1"],defeat:["dialogue:wulfric.defeat.1"]},[l.KABU]:{encounter:["dialogue:kabu.encounter.1"],victory:["dialogue:kabu.victory.1"],defeat:["dialogue:kabu.defeat.1"]},[l.BEA]:{encounter:["dialogue:bea.encounter.1"],victory:["dialogue:bea.victory.1"],defeat:["dialogue:bea.defeat.1"]},[l.OPAL]:{encounter:["dialogue:opal.encounter.1"],victory:["dialogue:opal.victory.1"],defeat:["dialogue:opal.defeat.1"]},[l.BEDE]:{encounter:["dialogue:bede.encounter.1"],victory:["dialogue:bede.victory.1"],defeat:["dialogue:bede.defeat.1"]},[l.GORDIE]:{encounter:["dialogue:gordie.encounter.1"],victory:["dialogue:gordie.victory.1"],defeat:["dialogue:gordie.defeat.1"]},[l.MARNIE]:{encounter:["dialogue:marnie.encounter.1"],victory:["dialogue:marnie.victory.1"],defeat:["dialogue:marnie.defeat.1"]},[l.RAIHAN]:{encounter:["dialogue:raihan.encounter.1"],victory:["dialogue:raihan.victory.1"],defeat:["dialogue:raihan.defeat.1"]},[l.BRASSIUS]:{encounter:["dialogue:brassius.encounter.1"],victory:["dialogue:brassius.victory.1"],defeat:["dialogue:brassius.defeat.1"]},[l.IONO]:{encounter:["dialogue:iono.encounter.1"],victory:["dialogue:iono.victory.1"],defeat:["dialogue:iono.defeat.1"]},[l.LARRY]:{encounter:["dialogue:larry.encounter.1"],victory:["dialogue:larry.victory.1"],defeat:["dialogue:larry.defeat.1"]},[l.RYME]:{encounter:["dialogue:ryme.encounter.1"],victory:["dialogue:ryme.victory.1"],defeat:["dialogue:ryme.defeat.1"]},[l.GRUSHA]:{encounter:["dialogue:grusha.encounter.1"],victory:["dialogue:grusha.victory.1"],defeat:["dialogue:grusha.defeat.1"]},[l.MARNIE_ELITE]:{encounter:["dialogue:marnie_elite.encounter.1","dialogue:marnie_elite.encounter.2"],victory:["dialogue:marnie_elite.victory.1","dialogue:marnie_elite.victory.2"],defeat:["dialogue:marnie_elite.defeat.1","dialogue:marnie_elite.defeat.2"]},[l.NESSA_ELITE]:{encounter:["dialogue:nessa_elite.encounter.1","dialogue:nessa_elite.encounter.2"],victory:["dialogue:nessa_elite.victory.1","dialogue:nessa_elite.victory.2"],defeat:["dialogue:nessa_elite.defeat.1","dialogue:nessa_elite.defeat.2"]},[l.BEA_ELITE]:{encounter:["dialogue:bea_elite.encounter.1","dialogue:bea_elite.encounter.2"],victory:["dialogue:bea_elite.victory.1","dialogue:bea_elite.victory.2"],defeat:["dialogue:bea_elite.defeat.1","dialogue:bea_elite.defeat.2"]},[l.ALLISTER_ELITE]:{encounter:["dialogue:allister_elite.encounter.1","dialogue:allister_elite.encounter.2"],victory:["dialogue:allister_elite.victory.1","dialogue:allister_elite.victory.2"],defeat:["dialogue:allister_elite.defeat.1","dialogue:allister_elite.defeat.2"]},[l.RAIHAN_ELITE]:{encounter:["dialogue:raihan_elite.encounter.1","dialogue:raihan_elite.encounter.2"],victory:["dialogue:raihan_elite.victory.1","dialogue:raihan_elite.victory.2"],defeat:["dialogue:raihan_elite.defeat.1","dialogue:raihan_elite.defeat.2"]},[l.ALDER]:{encounter:["dialogue:alder.encounter.1"],victory:["dialogue:alder.victory.1"],defeat:["dialogue:alder.defeat.1"]},[l.KIERAN]:{encounter:["dialogue:kieran.encounter.1"],victory:["dialogue:kieran.victory.1"],defeat:["dialogue:kieran.defeat.1"]},[l.RIVAL]:[{encounter:["dialogue:rival.encounter.1"],victory:["dialogue:rival.victory.1"]},{encounter:["dialogue:rival_female.encounter.1"],victory:["dialogue:rival_female.victory.1"]}],[l.RIVAL_2]:[{encounter:["dialogue:rival_2.encounter.1"],victory:["dialogue:rival_2.victory.1"]},{encounter:["dialogue:rival_2_female.encounter.1"],victory:["dialogue:rival_2_female.victory.1"],defeat:["dialogue:rival_2_female.defeat.1"]}],[l.RIVAL_3]:[{encounter:["dialogue:rival_3.encounter.1"],victory:["dialogue:rival_3.victory.1"]},{encounter:["dialogue:rival_3_female.encounter.1"],victory:["dialogue:rival_3_female.victory.1"],defeat:["dialogue:rival_3_female.defeat.1"]}],[l.RIVAL_4]:[{encounter:["dialogue:rival_4.encounter.1"],victory:["dialogue:rival_4.victory.1"]},{encounter:["dialogue:rival_4_female.encounter.1"],victory:["dialogue:rival_4_female.victory.1"],defeat:["dialogue:rival_4_female.defeat.1"]}],[l.RIVAL_5]:[{encounter:["dialogue:rival_5.encounter.1"],victory:["dialogue:rival_5.victory.1"]},{encounter:["dialogue:rival_5_female.encounter.1"],victory:["dialogue:rival_5_female.victory.1"],defeat:["dialogue:rival_5_female.defeat.1"]}],[l.RIVAL_6]:[{encounter:["dialogue:rival_6.encounter.1"],victory:["dialogue:rival_6.victory.1"]},{encounter:["dialogue:rival_6_female.encounter.1"],victory:["dialogue:rival_6_female.victory.1"]}]},Ci={blue_red_double:{encounter:["doubleBattleDialogue:blue_red_double.encounter.1"],victory:["doubleBattleDialogue:blue_red_double.victory.1"]},red_blue_double:{encounter:["doubleBattleDialogue:red_blue_double.encounter.1"],victory:["doubleBattleDialogue:red_blue_double.victory.1"]},tate_liza_double:{encounter:["doubleBattleDialogue:tate_liza_double.encounter.1"],victory:["doubleBattleDialogue:tate_liza_double.victory.1"]},liza_tate_double:{encounter:["doubleBattleDialogue:liza_tate_double.encounter.1"],victory:["doubleBattleDialogue:liza_tate_double.victory.1"]},wallace_steven_double:{encounter:["doubleBattleDialogue:wallace_steven_double.encounter.1"],victory:["doubleBattleDialogue:wallace_steven_double.victory.1"]},steven_wallace_double:{encounter:["doubleBattleDialogue:steven_wallace_double.encounter.1"],victory:["doubleBattleDialogue:steven_wallace_double.victory.1"]},alder_iris_double:{encounter:["doubleBattleDialogue:alder_iris_double.encounter.1"],victory:["doubleBattleDialogue:alder_iris_double.victory.1"]},iris_alder_double:{encounter:["doubleBattleDialogue:iris_alder_double.encounter.1"],victory:["doubleBattleDialogue:iris_alder_double.victory.1"]},marnie_piers_double:{encounter:["doubleBattleDialogue:marnie_piers_double.encounter.1"],victory:["doubleBattleDialogue:marnie_piers_double.victory.1"]},piers_marnie_double:{encounter:["doubleBattleDialogue:piers_marnie_double.encounter.1"],victory:["doubleBattleDialogue:piers_marnie_double.victory.1"]}},k8={[tt.FINAL_BOSS]:{encounter:"battleSpecDialogue:encounter",firstStageWin:"battleSpecDialogue:firstStageWin",secondStageWin:"battleSpecDialogue:secondStageWin"}};function _M(t){const E=/@c\{(.*?)\}/.exec(t);return E?E[1]:"neutral"}r(_M,"getCharVariantFromDialogue");function X8(){const t=Object.keys(NV).map(E=>Number.parseInt(E));for(const E of t){const R=NV[E],I=["encounter","victory","defeat"];for(const N of I)Array.isArray(R)?(R[0][N]&&(yE[E][`${N}Messages`]=R[0][N]),R.length>1&&(yE[E][`female${N.slice(0,1).toUpperCase()}${N.slice(1)}Messages`]=R[1][N])):yE[E][`${N}Messages`]=R[N]}}r(X8,"initTrainerTypeDialogue");const Fe=new Proxy({BROCK:[e.ONIX,e.GEODUDE,[e.OMANYTE,e.KABUTO],e.AERODACTYL],MISTY:[e.STARYU,e.PSYDUCK,e.WOOPER,e.LAPRAS],LT_SURGE:[e.PICHU,e.VOLTORB,e.ELEKID,e.JOLTEON],ERIKA:[e.ODDISH,e.BELLSPROUT,e.TANGELA,e.HOPPIP],JANINE:[e.VENONAT,e.SPINARAK,e.ZUBAT,e.KOFFING],SABRINA:[e.ABRA,e.MR_MIME,e.SMOOCHUM,e.ESPEON],BLAINE:[e.GROWLITHE,e.PONYTA,e.MAGBY,e.VULPIX],GIOVANNI:[e.RHYHORN,e.MEOWTH,[e.NIDORAN_F,e.NIDORAN_M],e.DIGLETT],FALKNER:[e.PIDGEY,e.HOOTHOOT,e.NATU,e.MURKROW],BUGSY:[e.SCYTHER,e.SHUCKLE,e.YANMA,[e.PINSIR,e.HERACROSS]],WHITNEY:[e.MILTANK,e.AIPOM,e.IGGLYBUFF,[e.GIRAFARIG,e.STANTLER]],MORTY:[e.GASTLY,e.MISDREAVUS,e.DUSKULL,e.SABLEYE],CHUCK:[e.POLIWRATH,e.MANKEY,e.TYROGUE,e.MACHOP],JASMINE:[e.STEELIX,e.MAGNEMITE,e.PINECO,e.SKARMORY],PRYCE:[e.SWINUB,e.SEEL,e.SHELLDER,e.SNEASEL],CLAIR:[e.HORSEA,e.DRATINI,e.MAGIKARP,e.DRUDDIGON],ROXANNE:[e.NOSEPASS,e.GEODUDE,[e.LILEEP,e.ANORITH],e.ARON],BRAWLY:[e.MAKUHITA,e.MACHOP,e.MEDITITE,e.SHROOMISH],WATTSON:[e.ELECTRIKE,e.VOLTORB,e.MAGNEMITE,[e.PLUSLE,e.MINUN]],FLANNERY:[e.TORKOAL,e.SLUGMA,e.NUMEL,e.HOUNDOUR],NORMAN:[e.SLAKOTH,e.KECLEON,e.WHISMUR,e.ZANGOOSE],WINONA:[e.SWABLU,e.WINGULL,e.TROPIUS,e.SKARMORY],TATE:[e.SOLROCK,e.NATU,e.CHINGLING,e.GALLADE],LIZA:[e.LUNATONE,e.BALTOY,e.SPOINK,e.GARDEVOIR],JUAN:[e.HORSEA,e.SPHEAL,e.BARBOACH,e.CORPHISH],ROARK:[e.CRANIDOS,e.GEODUDE,e.NOSEPASS,e.LARVITAR],GARDENIA:[e.BUDEW,e.CHERUBI,e.TURTWIG,e.LEAFEON],MAYLENE:[e.RIOLU,e.MEDITITE,e.CHIMCHAR,e.CROAGUNK],CRASHER_WAKE:[e.BUIZEL,e.WOOPER,e.PIPLUP,e.MAGIKARP],FANTINA:[e.MISDREAVUS,e.DRIFLOON,e.DUSKULL,e.SPIRITOMB],BYRON:[e.SHIELDON,e.BRONZOR,e.ARON,e.SKARMORY],CANDICE:[e.FROSLASS,e.SNOVER,e.SNEASEL,e.GLACEON],VOLKNER:[e.ELEKID,e.SHINX,e.CHINCHOU,e.ROTOM],CILAN:[e.PANSAGE,e.SNIVY,e.MARACTUS,e.FERROSEED],CHILI:[e.PANSEAR,e.TEPIG,e.HEATMOR,e.DARUMAKA],CRESS:[e.PANPOUR,e.OSHAWOTT,e.BASCULIN,e.TYMPOLE],CHEREN:[e.LILLIPUP,e.MINCCINO,e.PIDOVE,e.BOUFFALANT],LENORA:[e.PATRAT,e.DEERLING,e.AUDINO,e.BRAVIARY],ROXIE:[e.VENIPEDE,e.KOFFING,e.TRUBBISH,e.TOXEL],BURGH:[e.SEWADDLE,e.DWEBBLE,[e.KARRABLAST,e.SHELMET],e.DURANT],ELESA:[e.BLITZLE,e.EMOLGA,e.JOLTIK,e.TYNAMO],CLAY:[e.DRILBUR,e.SANDILE,e.TYMPOLE,e.GOLETT],SKYLA:[e.DUCKLETT,e.WOOBAT,[e.RUFFLET,e.VULLABY],e.ARCHEN],BRYCEN:[e.CRYOGONAL,e.VANILLITE,e.CUBCHOO,e.GALAR_DARUMAKA],DRAYDEN:[e.AXEW,e.DRUDDIGON,e.TRAPINCH,e.DEINO],MARLON:[e.FRILLISH,e.TIRTOUGA,e.WAILMER,e.MANTYKE],VIOLA:[e.SCATTERBUG,e.SURSKIT,e.CUTIEFLY,e.BLIPBUG],GRANT:[e.TYRUNT,e.AMAURA,e.BINACLE,e.DWEBBLE],KORRINA:[e.RIOLU,e.MIENFOO,e.HAWLUCHA,e.PANCHAM],RAMOS:[e.SKIDDO,e.HOPPIP,e.BELLSPROUT,[e.PHANTUMP,e.PUMPKABOO]],CLEMONT:[e.HELIOPTILE,e.MAGNEMITE,e.DEDENNE,e.ROTOM],VALERIE:[e.SYLVEON,e.MAWILE,e.MR_MIME,[e.SPRITZEE,e.SWIRLIX]],OLYMPIA:[e.ESPURR,e.SIGILYPH,e.INKAY,e.SLOWKING],WULFRIC:[e.BERGMITE,e.SNOVER,e.CRYOGONAL,e.SWINUB],MILO:[e.GOSSIFLEUR,e.SEEDOT,e.APPLIN,e.LOTAD],NESSA:[e.CHEWTLE,e.WIMPOD,e.ARROKUDA,e.MAREANIE],KABU:[e.SIZZLIPEDE,e.VULPIX,e.GROWLITHE,e.TORKOAL],BEA:[e.MACHOP,e.GALAR_FARFETCHD,e.CLOBBOPUS,e.FALINKS],ALLISTER:[e.GASTLY,e.GALAR_YAMASK,e.GALAR_CORSOLA,e.SINISTEA],OPAL:[e.MILCERY,e.GALAR_WEEZING,e.TOGEPI,e.MAWILE],BEDE:[e.HATENNA,e.GALAR_PONYTA,e.GARDEVOIR,e.SYLVEON],GORDIE:[e.ROLYCOLY,[e.SHUCKLE,e.BINACLE],e.STONJOURNER,e.LARVITAR],MELONY:[e.LAPRAS,e.SNOM,e.EISCUE,[e.GALAR_MR_MIME,e.GALAR_DARUMAKA]],PIERS:[e.GALAR_ZIGZAGOON,e.SCRAGGY,e.TOXEL,e.INKAY],MARNIE:[e.IMPIDIMP,e.MORPEKO,e.PURRLOIN,e.CROAGUNK],RAIHAN:[e.DURALUDON,e.TRAPINCH,e.GOOMY,e.TURTONATOR],KATY:[e.TEDDIURSA,e.NYMBLE,e.TAROUNTULA,e.RELLOR],BRASSIUS:[e.BONSLY,e.SMOLIV,e.BRAMBLIN,e.SUNKERN],IONO:[e.MISDREAVUS,e.TADBULB,e.WATTREL,e.MAGNEMITE],KOFU:[e.CRABRAWLER,e.VELUZA,e.WIGLETT,e.WINGULL],LARRY:[e.STARLY,e.DUNSPARCE,e.LECHONK,e.KOMALA],RYME:[e.TOXEL,e.GREAVARD,e.SHUPPET,e.MIMIKYU],TULIP:[e.FLABEBE,e.FLITTLE,e.RALTS,e.GIRAFARIG],GRUSHA:[e.SWABLU,e.CETODDLE,e.SNOM,e.CUBCHOO]},{get(t,E){return t[E]??[]}}),Q8=Ze.STARTING_WAVE_OVERRIDE||1,GB=class GB{constructor(E,R,I,N){this.size=E,this.strength=R,this.sameSpecies=!!I,this.balanced=!!N}getStrength(E){return this.strength}isSameSpecies(E){return this.sameSpecies}isBalanced(E){return this.balanced}};r(GB,"TrainerPartyTemplate");let pe=GB;const _B=class _B extends pe{constructor(...E){super(E.reduce((R,I)=>(R+=I.size,R),0),ce.AVERAGE),this.templates=E}getStrength(E){let R=0;for(const I of this.templates){if(R+I.size>E)return I.getStrength(E-R);R+=I.size}return super.getStrength(E)}isSameSpecies(E){let R=0;for(const I of this.templates){if(R+I.size>E)return I.isSameSpecies(E-R);R+=I.size}return super.isSameSpecies(E)}isBalanced(E){let R=0;for(const I of this.templates){if(R+I.size>E)return I.isBalanced(E-R);R+=I.size}return super.isBalanced(E)}};r(_B,"TrainerPartyCompoundTemplate");let iE=_B;const ue={ONE_WEAK_ONE_STRONG:new iE(new pe(1,ce.WEAK),new pe(1,ce.STRONG)),ONE_AVG:new pe(1,ce.AVERAGE),ONE_AVG_ONE_STRONG:new iE(new pe(1,ce.AVERAGE),new pe(1,ce.STRONG)),ONE_STRONG:new pe(1,ce.STRONG),ONE_STRONGER:new pe(1,ce.STRONGER),TWO_WEAKER:new pe(2,ce.WEAKER),TWO_WEAK:new pe(2,ce.WEAK),TWO_WEAK_ONE_AVG:new iE(new pe(2,ce.WEAK),new pe(1,ce.AVERAGE)),TWO_WEAK_SAME_ONE_AVG:new iE(new pe(2,ce.WEAK,!0),new pe(1,ce.AVERAGE)),TWO_WEAK_SAME_TWO_WEAK_SAME:new iE(new pe(2,ce.WEAK,!0),new pe(2,ce.WEAK,!0)),TWO_WEAK_ONE_STRONG:new iE(new pe(2,ce.WEAK),new pe(1,ce.STRONG)),TWO_AVG:new pe(2,ce.AVERAGE),TWO_AVG_ONE_STRONG:new iE(new pe(2,ce.AVERAGE),new pe(1,ce.STRONG)),TWO_AVG_SAME_ONE_AVG:new iE(new pe(2,ce.AVERAGE,!0),new pe(1,ce.AVERAGE)),TWO_AVG_SAME_ONE_STRONG:new iE(new pe(2,ce.AVERAGE,!0),new pe(1,ce.STRONG)),TWO_AVG_SAME_TWO_AVG_SAME:new iE(new pe(2,ce.AVERAGE,!0),new pe(2,ce.AVERAGE,!0)),TWO_STRONG:new pe(2,ce.STRONG),THREE_WEAK:new pe(3,ce.WEAK),THREE_WEAK_SAME:new pe(3,ce.WEAK,!0),THREE_AVG:new pe(3,ce.AVERAGE),THREE_AVG_SAME:new pe(3,ce.AVERAGE,!0),THREE_WEAK_BALANCED:new pe(3,ce.WEAK,!1,!0),FOUR_WEAKER:new pe(4,ce.WEAKER),FOUR_WEAKER_SAME:new pe(4,ce.WEAKER,!0),FOUR_WEAK:new pe(4,ce.WEAK),FOUR_WEAK_SAME:new pe(4,ce.WEAK,!0),FOUR_WEAK_BALANCED:new pe(4,ce.WEAK,!1,!0),FIVE_WEAKER:new pe(5,ce.WEAKER),FIVE_WEAK:new pe(5,ce.WEAK),FIVE_WEAK_BALANCED:new pe(5,ce.WEAK,!1,!0),SIX_WEAKER:new pe(6,ce.WEAKER),SIX_WEAKER_SAME:new pe(6,ce.WEAKER,!0),SIX_WEAK_SAME:new pe(6,ce.WEAK,!0),SIX_WEAK_BALANCED:new pe(6,ce.WEAK,!1,!0),GYM_LEADER_1:new iE(new pe(1,ce.AVERAGE),new pe(1,ce.STRONG)),GYM_LEADER_2:new iE(new pe(1,ce.AVERAGE),new pe(1,ce.STRONG),new pe(1,ce.STRONGER)),GYM_LEADER_3:new iE(new pe(2,ce.AVERAGE),new pe(1,ce.STRONG),new pe(1,ce.STRONGER)),GYM_LEADER_4:new iE(new pe(3,ce.AVERAGE),new pe(1,ce.STRONG),new pe(1,ce.STRONGER)),GYM_LEADER_5:new iE(new pe(3,ce.AVERAGE),new pe(2,ce.STRONG),new pe(1,ce.STRONGER)),ELITE_FOUR:new iE(new pe(2,ce.AVERAGE),new pe(3,ce.STRONG),new pe(1,ce.STRONGER)),CHAMPION:new iE(new pe(4,ce.STRONG),new pe(2,ce.STRONGER,!1,!0)),RIVAL:new iE(new pe(1,ce.STRONG),new pe(1,ce.AVERAGE)),RIVAL_2:new iE(new pe(1,ce.STRONG),new pe(1,ce.AVERAGE),new pe(1,ce.WEAK,!1,!0)),RIVAL_3:new iE(new pe(1,ce.STRONG),new pe(1,ce.AVERAGE),new pe(1,ce.AVERAGE,!1,!0),new pe(1,ce.WEAK,!1,!0)),RIVAL_4:new iE(new pe(1,ce.STRONG),new pe(1,ce.AVERAGE),new pe(2,ce.AVERAGE,!1,!0),new pe(1,ce.WEAK,!1,!0)),RIVAL_5:new iE(new pe(1,ce.STRONG),new pe(1,ce.AVERAGE),new pe(3,ce.AVERAGE,!1,!0),new pe(1,ce.STRONG)),RIVAL_6:new iE(new pe(1,ce.STRONG),new pe(1,ce.AVERAGE),new pe(3,ce.AVERAGE,!1,!0),new pe(1,ce.STRONGER))};function RE(){var E;const t=(E=s.currentBattle)==null?void 0:E.waveIndex;return t<=aA.EVIL_GRUNT_1?ue.TWO_AVG:t<=aA.EVIL_GRUNT_2?ue.THREE_AVG:t<=aA.EVIL_GRUNT_3?ue.TWO_AVG_ONE_STRONG:t<=aA.EVIL_ADMIN_1?ue.GYM_LEADER_4:ue.GYM_LEADER_5}r(RE,"getEvilGruntPartyTemplate");function PT(...t){const{currentBattle:E,gameMode:R}=s,I=R.getWaveForDifficulty((E==null?void 0:E.waveIndex)||Q8,!0),N=Math.ceil((I-20)/30);return t[Phaser.Math.Clamp(N,0,t.length-1)]}r(PT,"getWavePartyTemplate");function J8(){const{currentBattle:t,gameMode:E}=s;switch(E.modeId){case AE.DAILY:return(t==null?void 0:t.waveIndex)<=20?ue.GYM_LEADER_2:ue.GYM_LEADER_3;case AE.CHALLENGE:case AE.CLASSIC:return(t==null?void 0:t.waveIndex)<=20?ue.GYM_LEADER_1:(t==null?void 0:t.waveIndex)<=30?ue.GYM_LEADER_2:(t==null?void 0:t.waveIndex)<=60?ue.GYM_LEADER_3:(t==null?void 0:t.waveIndex)<=90?ue.GYM_LEADER_4:ue.GYM_LEADER_5;default:return PT(ue.GYM_LEADER_1,ue.GYM_LEADER_2,ue.GYM_LEADER_3,ue.GYM_LEADER_4,ue.GYM_LEADER_5)}}r(J8,"getGymLeaderPartyTemplate");var Ue=(t=>(t[t.COMMON=0]="COMMON",t[t.UNCOMMON=1]="UNCOMMON",t[t.RARE=2]="RARE",t[t.SUPER_RARE=3]="SUPER_RARE",t[t.ULTRA_RARE=4]="ULTRA_RARE",t))(Ue||{});const $8={[Ue.COMMON]:[e.RATTATA,e.SPEAROW,e.EKANS,e.VILEPLUME,e.DIGLETT,e.GROWLITHE,e.GRIMER,e.DROWZEE,e.VOLTORB,e.EXEGGCUTE,e.CUBONE,e.KOFFING,e.MAGIKARP,e.ZUBAT,e.ONIX,e.HOUNDOUR,e.MURKROW],[Ue.UNCOMMON]:[e.ABRA,e.GASTLY,e.OMANYTE,e.KABUTO,e.PORYGON,e.MANKEY,e.SCYTHER,e.ELEKID,e.MAGBY,e.ALOLA_SANDSHREW,e.ALOLA_MEOWTH,e.ALOLA_GEODUDE,e.ALOLA_GRIMER,e.PALDEA_TAUROS],[Ue.RARE]:[e.DRATINI,e.LARVITAR]},q8={[Ue.COMMON]:[e.DIGLETT,e.GROWLITHE,e.VULPIX,e.KOFFING,e.RHYHORN,e.SLUGMA,e.HOUNDOUR,e.POOCHYENA,e.TORKOAL,e.ZANGOOSE,e.SOLROCK,e.BALTOY,e.ROLYCOLY],[Ue.UNCOMMON]:[e.MAGBY,e.TRAPINCH,e.LILEEP,e.ANORITH,e.GOLETT,e.FLETCHLING,e.SALANDIT,e.TURTONATOR,e.TOEDSCOOL,e.CAPSAKID,e.HISUI_GROWLITHE],[Ue.RARE]:[e.CHARCADET,e.ARON]},z8={[Ue.COMMON]:[e.TENTACOOL,e.GRIMER,e.AZURILL,e.CHINCHOU,e.REMORAID,e.POOCHYENA,e.LOTAD,e.WINGULL,e.WAILMER,e.SEVIPER,e.BARBOACH,e.CORPHISH,e.SPHEAL,e.CLAMPERL],[Ue.UNCOMMON]:[e.MANTYKE,e.HORSEA,e.FEEBAS,e.TYMPOLE,e.SKRELP,e.WIMPOD,e.DHELMISE,e.ARROKUDA,e.CLOBBOPUS,e.HISUI_QWILFISH,e.WIGLETT],[Ue.RARE]:[e.BASCULEGION,e.DONDOZO]},j8={[Ue.COMMON]:[e.ZUBAT,e.MAGNEMITE,e.RHYHORN,e.TANGELA,e.LICKITUNG,e.MAGIKARP,e.YANMA,e.MURKROW,e.SWINUB,e.ELEKID,e.MAGBY,e.BRONZOR,e.SKORUPI],[Ue.UNCOMMON]:[e.ABRA,e.GLIGAR,e.SNEASEL,e.DUSKULL,e.DRIFLOON,e.CRANIDOS,e.SHIELDON,e.ROTOM,e.HISUI_QWILFISH],[Ue.RARE]:[e.SPIRITOMB,e.TEDDIURSA,e.HISUI_SNEASEL,e.HISUI_LILLIGANT]},ex={[Ue.COMMON]:[e.SNEASEL,e.SWINUB,e.SNORUNT,e.SNOVER,e.TIMBURR,e.TYMPOLE,e.SANDILE,e.DARUMAKA,e.VANILLITE,e.FOONGUS,e.FRILLISH,e.JOLTIK,e.FERROSEED,e.CUBCHOO,e.GALAR_DARUMAKA],[Ue.UNCOMMON]:[e.SPHEAL,e.DRILBUR,e.SIGILYPH,e.YAMASK,e.ZORUA,e.TYNAMO,e.MIENFOO,e.GOLETT,e.PAWNIARD,e.VULLABY,e.DURANT,e.BERGMITE,e.EISCUE,e.ALOLA_SANDSHREW,e.HISUI_ZORUA],[Ue.RARE]:[e.DEINO,e.FRIGIBAX,e.HISUI_BRAVIARY]},Ax={[Ue.COMMON]:[e.MAGNEMITE,e.GRIMER,e.VOLTORB,e.PORYGON,e.BRONZOR,e.ROTOM,e.MUNNA,e.DWEBBLE,e.FERROSEED,e.ELGYEM],[Ue.UNCOMMON]:[e.BELDUM,e.SIGILYPH,e.TIRTOUGA,e.ARCHEN,e.TYNAMO,e.GOLETT,e.BLIPBUG,e.VAROOM,e.ALOLA_GRIMER,e.HISUI_VOLTORB],[Ue.RARE]:[e.ELEKID,e.MAGBY,e.PAWNIARD,e.DURALUDON]},Ex={[Ue.COMMON]:[e.ELECTRIKE,e.SKORUPI,e.PURRLOIN,e.FOONGUS,e.BUNNELBY,e.FLETCHLING,e.LITLEO,e.PANGORO,e.ESPURR,e.INKAY,e.CLAUNCHER,e.HELIOPTILE],[Ue.UNCOMMON]:[e.HOUNDOUR,e.SNEASEL,e.LITWICK,e.HONEDGE,e.BINACLE,e.SKRELP,e.NOIBAT,e.PHANTUMP,e.PUMPKABOO],[Ue.RARE]:[e.GOOMY,e.HISUI_AVALUGG]},tx={[Ue.COMMON]:[e.ABRA,e.SLOWPOKE,e.MAGNEMITE,e.EXEGGUTOR,e.NATU,e.BALTOY,e.MIME_JR,e.ELGYEM,e.INKAY,e.BRUXISH,e.BLIPBUG,e.ALOLA_RAICHU],[Ue.UNCOMMON]:[e.RALTS,e.MEDITITE,e.BELDUM,e.SOLOSIS,e.HATENNA,e.STANTLER,e.GIRAFARIG,e.ALOLA_GRIMER,e.GALAR_SLOWPOKE],[Ue.RARE]:[e.PORYGON,e.ARMAROUGE]},Rx={[Ue.COMMON]:[e.GASTLY,e.KOFFING,e.ZUBAT,e.VENONAT,e.STUNKY,e.CROAGUNK,e.VENIPEDE,e.SCRAGGY,e.MAREANIE,e.FOMANTIS,e.ALOLA_GRIMER],[Ue.UNCOMMON]:[e.NIDORAN_F,e.SKORUPI,e.PAWNIARD,e.VULLABY,e.TOXEL,e.GLIMMET,e.PALDEA_WOOPER,e.GALAR_SLOWPOKE],[Ue.RARE]:[e.SKRELP,e.HISUI_SNEASEL]},Ox={[Ue.COMMON]:[e.VULPIX,e.FEEBAS,e.MAWILE,e.FROSLASS,e.GOTHITA,e.FLABEBE,e.SALANDIT,e.TSAREENA,e.SINISTEA,e.HATENNA,e.INDEEDEE,e.GALAR_PONYTA],[Ue.UNCOMMON]:[e.TOGEPI,e.VULLABY,e.MAREANIE,e.CUFANT,e.TINKATINK,e.ALOLA_VULPIX,e.GALAR_CORSOLA],[Ue.RARE]:[e.APPLIN,e.HISUI_LILLIGANT]},Ix={[Ue.COMMON]:[e.MURKROW,e.SEEDOT,e.SABLEYE,e.CACNEA,e.STUNKY,e.SANDILE,e.INKAY,e.NYMBLE,e.MASCHIFF],[Ue.UNCOMMON]:[e.UMBREON,e.CORPHISH,e.SNEASEL,e.ZORUA,e.IMPIDIMP,e.BOMBIRDIER,e.GALAR_ZIGZAGOON],[Ue.RARE]:[e.DEINO,e.SPRIGATITO]},Lx={[Ue.COMMON]:[e.GROWLITHE,e.HOUNDOUR,e.NUMEL,e.TORKOAL,e.FLETCHLING,e.LITLEO,e.SIZZLIPEDE,e.ROLYCOLY,e.CAPSAKID],[Ue.UNCOMMON]:[e.PONYTA,e.FLAREON,e.MAGBY,e.DARUMAKA,e.LITWICK,e.SALANDIT,e.TURTONATOR],[Ue.RARE]:[e.LARVESTA,e.FUECOCO]},Nx={[Ue.COMMON]:[e.GRIMER,e.VENONAT,e.SEVIPER,e.STUNKY,e.FOONGUS,e.MAREANIE,e.TOXEL,e.GRAFAIAI,e.PALDEA_WOOPER],[Ue.UNCOMMON]:[e.ZUBAT,e.GASTLY,e.SKRELP,e.OVERQWIL,e.ALOLA_GRIMER,e.GALAR_SLOWPOKE],[Ue.RARE]:[e.GLIMMET,e.BULBASAUR]},sx={[Ue.COMMON]:[e.IGGLYBUFF,e.AZURILL,e.COTTONEE,e.FLABEBE,e.KLEFKI,e.CUTIEFLY,e.HATENNA,e.TINKATINK],[Ue.UNCOMMON]:[e.CLEFFA,e.TOGEPI,e.GARDEVOIR,e.SYLVEON,e.MIMIKYU,e.IMPIDIMP,e.ALOLA_VULPIX],[Ue.RARE]:[e.GALAR_PONYTA,e.POPPLIO]},Sx={[Ue.COMMON]:[e.TYROGUE,e.SHROOMISH,e.MAKUHITA,e.RIOLU,e.CROAGUNK,e.SCRAGGY,e.MIENFOO,e.PASSIMIAN,e.PAWMI],[Ue.UNCOMMON]:[e.MEDITITE,e.GALLADE,e.TIMBURR,e.HAWLUCHA,e.STUFFUL,e.FALINKS,e.FLAMIGO,e.PALDEA_TAUROS],[Ue.RARE]:[e.JANGMO_O,e.QUAXLY]},Tx={rocket:$8,magma:q8,aqua:z8,galactic:j8,plasma_zinzolin:ex,plasma_colress:Ax,flare:Ex,aether:tx,macro_cosmos:Ox,skull:Rx,star_dark:Ix,star_fire:Lx,star_poison:Nx,star_fairy:sx,star_fighting:Sx};var Ys=(t=>(t[t.NO_TERA=0]="NO_TERA",t[t.INSTANT_TERA=1]="INSTANT_TERA",t[t.SMART_TERA=2]="SMART_TERA",t))(Ys||{}),ge=(t=>(t[t.MYSTERIOUS_CHALLENGERS=0]="MYSTERIOUS_CHALLENGERS",t[t.MYSTERIOUS_CHEST=1]="MYSTERIOUS_CHEST",t[t.DARK_DEAL=2]="DARK_DEAL",t[t.FIGHT_OR_FLIGHT=3]="FIGHT_OR_FLIGHT",t[t.SLUMBERING_SNORLAX=4]="SLUMBERING_SNORLAX",t[t.TRAINING_SESSION=5]="TRAINING_SESSION",t[t.DEPARTMENT_STORE_SALE=6]="DEPARTMENT_STORE_SALE",t[t.SHADY_VITAMIN_DEALER=7]="SHADY_VITAMIN_DEALER",t[t.FIELD_TRIP=8]="FIELD_TRIP",t[t.SAFARI_ZONE=9]="SAFARI_ZONE",t[t.LOST_AT_SEA=10]="LOST_AT_SEA",t[t.FIERY_FALLOUT=11]="FIERY_FALLOUT",t[t.THE_STRONG_STUFF=12]="THE_STRONG_STUFF",t[t.THE_POKEMON_SALESMAN=13]="THE_POKEMON_SALESMAN",t[t.AN_OFFER_YOU_CANT_REFUSE=14]="AN_OFFER_YOU_CANT_REFUSE",t[t.DELIBIRDY=15]="DELIBIRDY",t[t.ABSOLUTE_AVARICE=16]="ABSOLUTE_AVARICE",t[t.A_TRAINERS_TEST=17]="A_TRAINERS_TEST",t[t.TRASH_TO_TREASURE=18]="TRASH_TO_TREASURE",t[t.BERRIES_ABOUND=19]="BERRIES_ABOUND",t[t.CLOWNING_AROUND=20]="CLOWNING_AROUND",t[t.PART_TIMER=21]="PART_TIMER",t[t.DANCING_LESSONS=22]="DANCING_LESSONS",t[t.WEIRD_DREAM=23]="WEIRD_DREAM",t[t.THE_WINSTRATE_CHALLENGE=24]="THE_WINSTRATE_CHALLENGE",t[t.TELEPORTING_HIJINKS=25]="TELEPORTING_HIJINKS",t[t.BUG_TYPE_SUPERFAN=26]="BUG_TYPE_SUPERFAN",t[t.FUN_AND_GAMES=27]="FUN_AND_GAMES",t[t.UNCOMMON_BREED=28]="UNCOMMON_BREED",t[t.GLOBAL_TRADE_SYSTEM=29]="GLOBAL_TRADE_SYSTEM",t[t.THE_EXPERT_POKEMON_BREEDER=30]="THE_EXPERT_POKEMON_BREEDER",t))(ge||{}),QA=(t=>(t[t.COMMON=66]="COMMON",t[t.GREAT=40]="GREAT",t[t.ULTRA=19]="ULTRA",t[t.ROGUE=3]="ROGUE",t[t.MASTER=0]="MASTER",t))(QA||{});const nt=[{name:"Winter Holiday Update",eventType:0,shinyMultiplier:2,upgradeUnlockedVouchers:!0,startDate:new Date(Date.UTC(2024,11,21,0)),endDate:new Date(Date.UTC(2025,0,4,0)),bannerKey:"winter_holidays2024-event",scale:.21,availableLangs:["en","de","it","fr","ja","ko","es-ES","pt-BR","zh-CN"],eventEncounters:[{species:e.GIMMIGHOUL,blockEvolution:!0},{species:e.DELIBIRD},{species:e.STANTLER},{species:e.CYNDAQUIL},{species:e.PIPLUP},{species:e.CHESPIN},{species:e.BALTOY},{species:e.SNOVER},{species:e.CHINGLING},{species:e.LITWICK},{species:e.CUBCHOO},{species:e.SWIRLIX},{species:e.AMAURA},{species:e.MUDBRAY},{species:e.ROLYCOLY},{species:e.MILCERY},{species:e.SMOLIV},{species:e.ALOLA_VULPIX},{species:e.GALAR_DARUMAKA},{species:e.IRON_BUNDLE}],delibirdyBuff:["CATCHING_CHARM","SHINY_CHARM","ABILITY_CHARM","EXP_CHARM","SUPER_EXP_CHARM","HEALING_CHARM"],weather:[{weatherType:X.SNOW,weight:1}],mysteryEncounterTierChanges:[{mysteryEncounter:ge.DELIBIRDY,tier:QA.COMMON},{mysteryEncounter:ge.PART_TIMER,disable:!0},{mysteryEncounter:ge.AN_OFFER_YOU_CANT_REFUSE,disable:!0},{mysteryEncounter:ge.FIELD_TRIP,disable:!0},{mysteryEncounter:ge.DEPARTMENT_STORE_SALE,disable:!0}],classicWaveRewards:[{wave:8,type:"SHINY_CHARM"},{wave:8,type:"ABILITY_CHARM"},{wave:8,type:"CATCHING_CHARM"},{wave:25,type:"SHINY_CHARM"}]},{name:"Year of the Snake",eventType:2,luckBoost:1,startDate:new Date(Date.UTC(2025,0,29,0)),endDate:new Date(Date.UTC(2025,1,3,0)),bannerKey:"yearofthesnakeevent",scale:.21,availableLangs:["en","de","it","fr","ja","ko","es-ES","pt-BR","zh-CN"],eventEncounters:[{species:e.EKANS},{species:e.ONIX},{species:e.DRATINI},{species:e.CLEFFA},{species:e.UMBREON},{species:e.DUNSPARCE},{species:e.TEDDIURSA},{species:e.SEVIPER},{species:e.LUNATONE},{species:e.CHINGLING},{species:e.SNIVY},{species:e.DARUMAKA},{species:e.DRAMPA},{species:e.SILICOBRA},{species:e.BLOODMOON_URSALUNA}],luckBoostedSpecies:[e.EKANS,e.ARBOK,e.ONIX,e.STEELIX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.CLEFFA,e.CLEFAIRY,e.CLEFABLE,e.UMBREON,e.DUNSPARCE,e.DUDUNSPARCE,e.TEDDIURSA,e.URSARING,e.URSALUNA,e.SEVIPER,e.LUNATONE,e.RAYQUAZA,e.CHINGLING,e.CHIMECHO,e.CRESSELIA,e.DARKRAI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.DARUMAKA,e.DARMANITAN,e.ZYGARDE,e.DRAMPA,e.LUNALA,e.BLACEPHALON,e.SILICOBRA,e.SANDACONDA,e.ROARING_MOON,e.BLOODMOON_URSALUNA],classicWaveRewards:[{wave:8,type:"SHINY_CHARM"},{wave:8,type:"ABILITY_CHARM"},{wave:8,type:"CATCHING_CHARM"},{wave:25,type:"SHINY_CHARM"}]},{name:"Valentine",eventType:0,startDate:new Date(Date.UTC(2025,1,10)),endDate:new Date(Date.UTC(2025,1,21)),boostFusions:!0,shinyMultiplier:2,bannerKey:"valentines2025event",scale:.21,availableLangs:["en","de","it","fr","ja","ko","es-ES","pt-BR","zh-CN"],eventEncounters:[{species:e.NIDORAN_F},{species:e.NIDORAN_M},{species:e.IGGLYBUFF},{species:e.SMOOCHUM},{species:e.VOLBEAT},{species:e.ILLUMISE},{species:e.ROSELIA},{species:e.LUVDISC},{species:e.WOOBAT},{species:e.FRILLISH},{species:e.ALOMOMOLA},{species:e.FURFROU,formIndex:1},{species:e.ESPURR},{species:e.SPRITZEE},{species:e.SWIRLIX},{species:e.APPLIN},{species:e.MILCERY},{species:e.INDEEDEE},{species:e.TANDEMAUS},{species:e.ENAMORUS}],luckBoostedSpecies:[e.LUVDISC],classicWaveRewards:[{wave:8,type:"SHINY_CHARM"},{wave:8,type:"ABILITY_CHARM"},{wave:8,type:"CATCHING_CHARM"},{wave:25,type:"SHINY_CHARM"}]},{name:"PKMNDAY2025",eventType:2,startDate:new Date(Date.UTC(2025,1,27)),endDate:new Date(Date.UTC(2025,2,4)),classicFriendshipMultiplier:4,bannerKey:"pkmnday2025event",scale:.21,availableLangs:["en","de","it","fr","ja","ko","es-ES","pt-BR","zh-CN"],eventEncounters:[{species:e.PIKACHU,formIndex:1,blockEvolution:!0},{species:e.EEVEE,formIndex:1,blockEvolution:!0},{species:e.CHIKORITA},{species:e.TOTODILE},{species:e.TEPIG}],luckBoostedSpecies:[e.PICHU,e.PIKACHU,e.RAICHU,e.ALOLA_RAICHU,e.PSYDUCK,e.GOLDUCK,e.EEVEE,e.FLAREON,e.JOLTEON,e.VAPOREON,e.ESPEON,e.UMBREON,e.LEAFEON,e.GLACEON,e.SYLVEON,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.ZYGARDE,e.ETERNAL_FLOETTE],classicWaveRewards:[{wave:8,type:"SHINY_CHARM"},{wave:8,type:"ABILITY_CHARM"},{wave:8,type:"CATCHING_CHARM"},{wave:25,type:"SHINY_CHARM"}]},{name:"April Fools 2025",eventType:2,startDate:new Date(Date.UTC(2025,2,31)),endDate:new Date(Date.UTC(2025,3,3)),bannerKey:"aprf25",scale:.21,availableLangs:["en","de","it","fr","ja","ko","es-ES","es-MX","pt-BR","zh-CN"],trainerShinyChance:13107,music:[["title","title_afd"],["battle_rival_3","battle_rival_3_afd"]],dailyRunChallenges:[{challenge:Je.INVERSE_BATTLE,value:1}]},{name:"Shining Spring",eventType:0,startDate:new Date(Date.UTC(2025,4,3)),endDate:new Date(Date.UTC(2025,4,13)),bannerKey:"spr25event",scale:.21,availableLangs:["en","de","it","fr","ja","ko","es-ES","es-MX","pt-BR","zh-CN"],shinyMultiplier:2,upgradeUnlockedVouchers:!0,eventEncounters:[{species:e.HOPPIP},{species:e.CELEBI},{species:e.VOLBEAT},{species:e.ILLUMISE},{species:e.SPOINK},{species:e.LILEEP},{species:e.SHINX},{species:e.PACHIRISU},{species:e.CHERUBI},{species:e.MUNCHLAX},{species:e.TEPIG},{species:e.PANSAGE},{species:e.PANSEAR},{species:e.PANPOUR},{species:e.DARUMAKA},{species:e.ARCHEN},{species:e.DEERLING,formIndex:0},{species:e.CLAUNCHER},{species:e.WISHIWASHI},{species:e.DRAMPA},{species:e.JANGMO_O},{species:e.APPLIN}],classicWaveRewards:[{wave:8,type:"SHINY_CHARM"},{wave:8,type:"ABILITY_CHARM"},{wave:8,type:"CATCHING_CHARM"},{wave:25,type:"SHINY_CHARM"}]}],uB=class uB{isActive(E){return E.startDate<new Date&&new Date<E.endDate}activeEvent(){return nt.find(E=>this.isActive(E))}isEventActive(){return nt.some(E=>this.isActive(E))}activeEventHasBanner(){return nt.filter(R=>this.isActive(R)&&R.hasOwnProperty("bannerKey")).length>0}getShinyMultiplier(){let E=1;const R=nt.filter(I=>I.eventType===0&&this.isActive(I));for(const I of R)E*=I.shinyMultiplier??1;return E}getEventBannerFilename(){var E;return((E=nt.find(R=>this.isActive(R)))==null?void 0:E.bannerKey)??""}getEventBannerLangs(){var R;const E=[];return E.push(...(R=nt.find(I=>this.isActive(I)&&!Ne(I.availableLangs)))==null?void 0:R.availableLangs),E}getEventEncounters(){const E=[];return nt.filter(R=>this.isActive(R)).map(R=>{Ne(R.eventEncounters)||E.push(...R.eventEncounters)}),E}getClassicFriendshipMultiplier(){let E=h8;const R=nt.filter(I=>this.isActive(I));for(const I of R)!Ne(I.classicFriendshipMultiplier)&&I.classicFriendshipMultiplier>E&&(E=I.classicFriendshipMultiplier);return E}getUpgradeUnlockedVouchers(){return nt.some(E=>this.isActive(E)&&(E.upgradeUnlockedVouchers??!1))}getDelibirdyBuff(){const E=[];return nt.filter(R=>this.isActive(R)).map(R=>{Ne(R.delibirdyBuff)||E.push(...R.delibirdyBuff)}),E}getWeather(){const E=[];return nt.filter(R=>this.isActive(R)).map(R=>{Ne(R.weather)||E.push(...R.weather)}),E}getAllMysteryEncounterChanges(){const E=[];return nt.filter(R=>this.isActive(R)).map(R=>{Ne(R.mysteryEncounterTierChanges)||E.push(...R.mysteryEncounterTierChanges)}),E}getEventMysteryEncountersDisabled(){const E=[];return nt.filter(R=>this.isActive(R)&&!Ne(R.mysteryEncounterTierChanges)).map(R=>{var I;(I=R.mysteryEncounterTierChanges)==null||I.map(N=>{N.disable&&E.push(N.mysteryEncounter)})}),E}getMysteryEncounterTierForEvent(E,R){let I=R;return nt.filter(N=>this.isActive(N)&&!Ne(N.mysteryEncounterTierChanges)).map(N=>{var S;(S=N.mysteryEncounterTierChanges)==null||S.map(T=>{T.mysteryEncounter===E&&(I=T.tier??R)})}),I}getEventLuckBoost(){let E=0;const R=nt.filter(I=>this.isActive(I)&&!Ne(I.luckBoost));for(const I of R)E+=I.luckBoost;return E}getEventLuckBoostedSpecies(){const E=[];return nt.filter(R=>this.isActive(R)).map(R=>{Ne(R.luckBoostedSpecies)||E.push(...R.luckBoostedSpecies.filter(I=>!E.includes(I)))}),E}areFusionsBoosted(){return nt.some(E=>this.isActive(E)&&E.boostFusions)}getFixedBattleEventRewards(E){const R=[];return nt.filter(I=>this.isActive(I)&&!Ne(I.classicWaveRewards)).map(I=>{R.push(...I.classicWaveRewards.filter(N=>N.wave===E).map(N=>N.type))}),R}getClassicTrainerShinyChance(){let E=0;return nt.filter(I=>this.isActive(I)&&!Ne(I.trainerShinyChance)).map(I=>E+=I.trainerShinyChance),E}getEventBgmReplacement(E){let R=E;return nt.map(I=>{this.isActive(I)&&!Ne(I.music)&&I.music.map(N=>{N[0]===E&&(console.log(`it is ${I.name} so instead of ${N[0]} we play ${N[1]}`),R=N[1])})}),R}startEventChallenges(){var R;const E=(R=this.activeEvent())==null?void 0:R.dailyRunChallenges;E==null||E.forEach(I=>s.gameMode.setChallengeValue(I.challenge,I.value))}};r(uB,"TimedEventManager");let kP=uB;const HB=class HB extends Phaser.GameObjects.Container{constructor(E,R,I){super(s,E,R),this.availableWidth=s.scaledCanvas.width,this.event=I,this.setVisible(!1)}setWidth(E){var R;if(E!==this.availableWidth){this.availableWidth=E;const I=this.availableWidth/2+(((R=this.event)==null?void 0:R.xOffset)??0);this.banner&&(this.banner.x=I),this.eventTimerText&&(this.eventTimerText.x=I)}}setup(){var R;const E=D.resolvedLanguage;if((R=this.event)!=null&&R.bannerKey){let I=this.event.bannerKey;E&&this.event.availableLangs&&this.event.availableLangs.length>0&&(this.event.availableLangs.includes(E)?I+="-"+E:I+="-en"),console.log(I),console.log(this.event.bannerKey);const N=5,S=this.event.eventType!==1,T=s.game.canvas.height/6-N-(S?10:0)-(this.event.yOffset??0);this.banner=new Phaser.GameObjects.Image(s,this.availableWidth/2,T-N,I),this.banner.setName("img-event-banner"),this.banner.setOrigin(.5,1),this.banner.setScale(this.event.scale??.18),S&&(this.eventTimerText=We(this.banner.x,this.banner.y+2,this.timeToGo(this.event.endDate),Se.WINDOW),this.eventTimerText.setName("text-event-timer"),this.eventTimerText.setScale(.15),this.eventTimerText.setOrigin(.5,0),this.add(this.eventTimerText)),this.add(this.banner)}}show(){this.setVisible(!0),this.updateCountdown(),this.eventTimer=setInterval(()=>{this.updateCountdown()},1e3)}clear(){this.setVisible(!1),this.eventTimer&&clearInterval(this.eventTimer),this.eventTimer=null}timeToGo(E){function R(C){return(C<10?"0":"")+C}r(R,"z");const I=new Date;let N=Math.abs(E.getTime()-I.getTime());N=Math.abs(N);const S=N/864e5|0,T=N%864e5/36e5|0,i=N%36e5/6e4|0,o=Math.round(N%6e4/1e3);return D.t("menu:eventTimer",{days:R(S),hours:R(T),mins:R(i),secs:R(o)})}updateCountdown(){this.event&&this.event.eventType!==1&&this.eventTimerText.setText(this.timeToGo(this.event.endDate))}};r(HB,"TimedEventDisplay");let sV=HB;const vE=new kP,SV=460,nx=100,cB=class cB{constructor(E=Ys.NO_TERA){this.teraMode=Ys.NO_TERA,this.teraMode=E,this.instantTeras=[]}canTerastallize(){return this.teraMode!==Ys.NO_TERA}setInstantTera(E){this.teraMode=Ys.INSTANT_TERA,this.instantTeras.push(E)}};r(cB,"TrainerAI");let XP=cB;const qD=class qD{constructor(E,R){this.hasGenders=!1,this.hasDouble=!1,this.hasCharSprite=!1,this.doubleOnly=!1,this.moneyMultiplier=1,this.isBoss=!1,this.hasStaticParty=!1,this.useSameSeedForAllMembers=!1,this.genAIFuncs=[],this.modifierRewardFuncs=[],this.partyMemberFuncs={},this.hasVoucher=!1,this.encounterMessages=[],this.victoryMessages=[],this.defeatMessages=[],this.trainerType=E,this.trainerAI=new XP,this.name=mN(l[this.getDerivedType()]),this.battleBgm="battle_trainer",this.mixedBattleBgm="battle_trainer",this.victoryBgm="victory_trainer",this.partyTemplates=[ue.TWO_AVG],this.speciesFilter=I=>(R||!I.legendary&&!I.subLegendary&&!I.mythical)&&!I.isTrainerForbidden()}getKey(){return l[this.getDerivedType()].toString().toLowerCase()}getSpriteKey(E,R=!1){let I=this.getKey();return this.hasGenders&&(I+=`_${E?"f":"m"}`),this.trainerTypeDouble&&E&&R&&(I=l[this.getDerivedType(this.trainerTypeDouble)].toString().toLowerCase()),I}setName(E){return E==="Finn"&&(RO()||VR(),E==="Finn"&&(E=D.t("trainerNames:rival"))),this.name=E,this}setHasVoucher(E){this.hasVoucher=E}setTitle(E){return RO()||VR(),E=E.toLowerCase().replace(/\s/g,"_"),this.title=D.t(`titles:${E}`),this}getDerivedType(E=null){let R=E||this.trainerType;switch(R){case l.RIVAL_2:case l.RIVAL_3:case l.RIVAL_4:case l.RIVAL_5:case l.RIVAL_6:R=l.RIVAL;break;case l.LANCE_CHAMPION:R=l.LANCE;break;case l.LARRY_ELITE:R=l.LARRY;break;case l.ROCKET_BOSS_GIOVANNI_1:case l.ROCKET_BOSS_GIOVANNI_2:R=l.GIOVANNI;break;case l.MAXIE_2:R=l.MAXIE;break;case l.ARCHIE_2:R=l.ARCHIE;break;case l.CYRUS_2:R=l.CYRUS;break;case l.GHETSIS_2:R=l.GHETSIS;break;case l.LYSANDRE_2:R=l.LYSANDRE;break;case l.LUSAMINE_2:R=l.LUSAMINE;break;case l.GUZMA_2:R=l.GUZMA;break;case l.ROSE_2:R=l.ROSE;break;case l.PENNY_2:R=l.PENNY;break;case l.MARNIE_ELITE:R=l.MARNIE;break;case l.NESSA_ELITE:R=l.NESSA;break;case l.BEA_ELITE:R=l.BEA;break;case l.ALLISTER_ELITE:R=l.ALLISTER;break;case l.RAIHAN_ELITE:R=l.RAIHAN;break}return R}setHasGenders(E,R){return E==="Ivy"?(RO()||VR(),this.nameFemale=D.t("trainerNames:rival_female")):this.nameFemale=E,this.hasGenders=!0,R&&(this.femaleEncounterBgm=typeof R=="number"?l[R].toString().replace(/_/g," ").toLowerCase():R),this}setHasDouble(E,R){return this.hasDouble=!0,this.nameDouble=E,R&&(this.doubleEncounterBgm=typeof R=="number"?l[R].toString().replace(/\_/g," ").toLowerCase():R),this}setDoubleTrainerType(E){return this.trainerTypeDouble=E,this.setDoubleMessages(this.nameDouble),this}setDoubleMessages(E){Ci[E]&&(this.doubleEncounterMessages=Ci[E].encounter,this.doubleVictoryMessages=Ci[E].victory,this.doubleDefeatMessages=Ci[E].defeat)}setDoubleTitle(E){return RO()||VR(),E=E.toLowerCase().replace(/\s/g,"_"),this.titleDouble=D.t(`titles:${E}`),this}setHasCharSprite(){return this.hasCharSprite=!0,this}setDoubleOnly(){return this.doubleOnly=!0,this}setMoneyMultiplier(E){return this.moneyMultiplier=E,this}setBoss(){return this.isBoss=!0,this}setStaticParty(){return this.hasStaticParty=!0,this}setUseSameSeedForAllMembers(){return this.useSameSeedForAllMembers=!0,this}setMixedBattleBgm(E){return this.mixedBattleBgm=E,this}setBattleBgm(E){return this.battleBgm=E,this}setEncounterBgm(E){return this.encounterBgm=typeof E=="number"?l[E].toString().toLowerCase():E,this}setVictoryBgm(E){return this.victoryBgm=E,this}setPartyTemplates(...E){return this.partyTemplates=E,this}setPartyTemplateFunc(E){return this.partyTemplateFunc=E,this}setPartyMemberFunc(E,R){return this.partyMemberFuncs[E]=R,this}setSpeciesPools(E){return this.speciesPools=Array.isArray(E)?{[Ue.COMMON]:E}:E,this}setSpeciesFilter(E,R){const I=this.speciesFilter;return this.speciesFilter=R?E:N=>E(N)&&I(N),this}setSpecialtyType(E){return this.specialtyType=E,this}setGenModifiersFunc(E){return this.genModifiersFunc=E,this}setRandomTeraModifiers(E,R){return this.genAIFuncs.push(I=>{const N=!this.hasSpecialtyType()||this.specialtyType===L.BUG,S=new Array(I.length).fill(null).map((i,o)=>o).filter(i=>N||I[i].species.speciesId!==e.SHEDINJA),T=Ne(R)?-1:Phaser.Math.Wrap(R,0,I.length);for(let i=0;i<Math.min(E(),I.length);i++){const o=S.indexOf(T)>-1?T:SE(S);S.splice(S.indexOf(o),1),this.hasSpecialtyType()&&(I[o].teraType=this.specialtyType),this.trainerAI.setInstantTera(o)}}),this}setInstantTera(E){return this.trainerAI.setInstantTera(E),this}setModifierRewardFuncs(...E){return this.modifierRewardFuncs=E.map(R=>()=>{const I=R(),N=I();return N.withIdFromFunc(I),N}),this}initForEvilTeamAdmin(E,R,I,N){RO()||VR(),Ne(N)||this.setSpecialtyType(N),this.setPartyTemplates(ue.RIVAL_5),this.speciesPools=Tx[R],I.forEach((T,i)=>{Array.isArray(T)||(T=[T]),this.setPartyMemberFunc(-(i+1),g(T))});const S=this.name.toLowerCase().replace(/\s/g,"_");return this.name=D.t(`trainerNames:${S}`),this.setHasVoucher(!1),this.setTitle(E),this.setMoneyMultiplier(1.5),this.setBoss(),this.setStaticParty(),this.setBattleBgm("battle_plasma_boss"),this.setVictoryBgm("victory_team_plasma"),this}initForStatTrainer(E=!1){RO()||VR(),this.setPartyTemplates(ue.ELITE_FOUR);const R=this.name.toLowerCase().replace(/\s/g,"_");return this.name=D.t(`trainerNames:${R}`),this.setMoneyMultiplier(2),this.setBoss(),this.setStaticParty(),this.setBattleBgm("battle_trainer"),this.setVictoryBgm("victory_trainer"),this}initForEvilTeamLeader(E,R,I=!1,N){RO()||VR(),I?this.setPartyTemplates(ue.ELITE_FOUR):this.setPartyTemplates(ue.RIVAL_5),R.forEach((T,i)=>{Array.isArray(T)||(T=[T]),this.setPartyMemberFunc(-(i+1),g(T))}),Ne(N)||(this.setSpeciesFilter(T=>T.isOfType(N)),this.setSpecialtyType(N));const S=this.name.toLowerCase().replace(/\s/g,"_");return this.name=D.t(`trainerNames:${S}`),this.setTitle(E),this.setMoneyMultiplier(2.5),this.setBoss(),this.setStaticParty(),this.setHasVoucher(!0),this.setBattleBgm("battle_plasma_boss"),this.setVictoryBgm("victory_team_plasma"),this}initForGymLeader(E,R,I,N=!1,S){RO()||VR(),this.setPartyTemplateFunc(J8),E.forEach((i,o)=>{Array.isArray(i)||(i=[i]),this.setPartyMemberFunc(-(o+1),g(i))}),this.setSpeciesFilter(i=>i.isOfType(I)),this.setSpecialtyType(I);const T=this.name.toLowerCase().replace(/\s/g,"_");return this.name=D.t(`trainerNames:${T}`),this.setTitle("gym_leader"),R||this.setTitle("gym_leader_female"),this.setMoneyMultiplier(2.5),this.setBoss(),this.setStaticParty(),this.setHasVoucher(!0),this.setBattleBgm("battle_unova_gym"),this.setVictoryBgm("victory_gym"),this.setRandomTeraModifiers(()=>N||s.currentBattle.waveIndex>=nx?1:0,S),this}initForEliteFour(E,R,I,N){RO()||VR(),this.setPartyTemplates(ue.ELITE_FOUR),E.forEach((T,i)=>{Array.isArray(T)||(T=[T]),this.setPartyMemberFunc(-(i+1),g(T))}),Ne(I)?this.setSpeciesFilter(T=>T.baseTotal>=SV):(this.setSpeciesFilter(T=>T.isOfType(I)&&T.baseTotal>=SV),this.setSpecialtyType(I));const S=this.name.toLowerCase().replace(/\s/g,"_");return this.name=D.t(`trainerNames:${S}`),this.setTitle("elite_four"),R||this.setTitle("elite_four_female"),this.setMoneyMultiplier(3.25),this.setBoss(),this.setStaticParty(),this.setHasVoucher(!0),this.setBattleBgm("battle_unova_elite"),this.setVictoryBgm("victory_gym"),this.setRandomTeraModifiers(()=>1,N),this}initForChampion(E){RO()||VR(),this.setPartyTemplates(ue.CHAMPION);const R=this.name.toLowerCase().replace(/\s/g,"_");return this.name=D.t(`trainerNames:${R}`),this.setTitle("champion"),E||this.setTitle("champion_female"),this.setMoneyMultiplier(10),this.setBoss(),this.setStaticParty(),this.setHasVoucher(!0),this.setBattleBgm("battle_champion_alder"),this.setVictoryBgm("victory_champion"),this}setLocalizedName(E){return RO()||VR(),this.name=D.t(`trainerNames:${E.toLowerCase().replace(/\s/g,"_")}`),this}getTitle(E=b.NONE,R){const I=this.name;if(!E&&R===xA.DOUBLE&&this.nameDouble)return this.nameDouble;if(this.hasGenders){if(this.nameFemale){if(R===xA.FEMALE||R===xA.DOUBLE&&E===b.TRAINER_PARTNER)return this.nameFemale}else if(R&&(RO()||VR(),D.exists(`trainerClasses:${this.name.toLowerCase()}`)))return I+"_female"}return I}loadAssets(E){return new Promise(R=>{const I=E===xA.DOUBLE,N=this.getSpriteKey(E===xA.FEMALE,!1),S=this.getSpriteKey(!0,!0);s.loadAtlas(N,"trainer"),I&&s.loadAtlas(S,"trainer"),s.load.once(Phaser.Loader.Events.COMPLETE,()=>{const T=console.warn;console.warn=()=>{};const i=s.anims.generateFrameNames(N,{zeroPad:4,suffix:".png",start:1,end:128}),o=I?s.anims.generateFrameNames(S,{zeroPad:4,suffix:".png",start:1,end:128}):"";console.warn=T,s.anims.exists(N)||s.anims.create({key:N,frames:i,frameRate:24,repeat:-1}),I&&!s.anims.exists(S)&&s.anims.create({key:S,frames:o,frameRate:24,repeat:-1}),R()}),s.load.isLoading()||s.load.start()})}hasSpecialtyType(){return!Ne(this.specialtyType)&&this.specialtyType!==L.UNKNOWN}clone(){var R,I,N,S,T,i,o,C,U;let E=new qD(this.trainerType);return E=this.trainerTypeDouble?E.setDoubleTrainerType(this.trainerTypeDouble):E,E=this.name?E.setName(this.name):E,E=this.hasGenders?E.setHasGenders(this.nameFemale,this.femaleEncounterBgm):E,E=this.hasDouble?E.setHasDouble(this.nameDouble,this.doubleEncounterBgm):E,E=this.title?E.setTitle(this.title):E,E=this.titleDouble?E.setDoubleTitle(this.titleDouble):E,E=this.hasCharSprite?E.setHasCharSprite():E,E=this.doubleOnly?E.setDoubleOnly():E,E=this.moneyMultiplier?E.setMoneyMultiplier(this.moneyMultiplier):E,E=this.isBoss?E.setBoss():E,E=this.hasStaticParty?E.setStaticParty():E,E=this.useSameSeedForAllMembers?E.setUseSameSeedForAllMembers():E,E=this.battleBgm?E.setBattleBgm(this.battleBgm):E,E=this.encounterBgm?E.setEncounterBgm(this.encounterBgm):E,E=this.victoryBgm?E.setVictoryBgm(this.victoryBgm):E,E=this.genModifiersFunc?E.setGenModifiersFunc(this.genModifiersFunc):E,this.modifierRewardFuncs&&(E.modifierRewardFuncs=this.modifierRewardFuncs.slice(0)),this.partyTemplates&&(E.partyTemplates=this.partyTemplates.slice(0)),E=this.partyTemplateFunc?E.setPartyTemplateFunc(this.partyTemplateFunc):E,this.partyMemberFuncs&&Object.keys(this.partyMemberFuncs).forEach(_=>{E=E.setPartyMemberFunc(Number.parseInt(_,10),this.partyMemberFuncs[_])}),E=this.speciesPools?E.setSpeciesPools(this.speciesPools):E,E=this.speciesFilter?E.setSpeciesFilter(this.speciesFilter):E,E.specialtyType=this.specialtyType,E.encounterMessages=(R=this.encounterMessages)==null?void 0:R.slice(0),E.victoryMessages=(I=this.victoryMessages)==null?void 0:I.slice(0),E.defeatMessages=(N=this.defeatMessages)==null?void 0:N.slice(0),E.femaleEncounterMessages=(S=this.femaleEncounterMessages)==null?void 0:S.slice(0),E.femaleVictoryMessages=(T=this.femaleVictoryMessages)==null?void 0:T.slice(0),E.femaleDefeatMessages=(i=this.femaleDefeatMessages)==null?void 0:i.slice(0),E.doubleEncounterMessages=(o=this.doubleEncounterMessages)==null?void 0:o.slice(0),E.doubleVictoryMessages=(C=this.doubleVictoryMessages)==null?void 0:C.slice(0),E.doubleDefeatMessages=(U=this.doubleDefeatMessages)==null?void 0:U.slice(0),E}};r(qD,"TrainerConfig");let z=qD,j=0;function g(t,E=b.TRAINER,R=!1,I){return(N,S)=>{let T=SE(t);return R||(T=de(T).getTrainerSpeciesForLevel(N,!0,S,s.currentBattle.waveIndex)),s.addEnemyPokemon(de(T),N,E,void 0,!1,void 0,I)}}r(g,"getRandomPartyMemberFunc");function ST(t,E=b.TRAINER,R,I){const N=r(S=>!S.legendary&&!S.subLegendary&&!S.mythical&&!S.isTrainerForbidden()&&t(S),"speciesFilter");return(S,T)=>{const i=s.currentBattle.waveIndex,o=de(s.randomSpecies(i,S,!1,N).getTrainerSpeciesForLevel(S,!0,T,i));return s.addEnemyPokemon(o,S,E,void 0,!1,void 0,I)}}r(ST,"getSpeciesFilterRandomPartyMemberFunc");const yE={[l.UNKNOWN]:new z(0).setHasGenders(),[l.ACE_TRAINER]:new z(++j).setHasGenders("Ace Trainer Female").setHasDouble("Ace Duo").setMoneyMultiplier(2.25).setEncounterBgm(l.ACE_TRAINER).setPartyTemplateFunc(()=>PT(ue.THREE_WEAK_BALANCED,ue.FOUR_WEAK_BALANCED,ue.FIVE_WEAK_BALANCED,ue.SIX_WEAK_BALANCED)),[l.ARTIST]:new z(++j).setEncounterBgm(l.RICH).setPartyTemplates(ue.ONE_STRONG,ue.TWO_AVG,ue.THREE_AVG).setSpeciesPools([e.SMEARGLE]),[l.BACKERS]:new z(++j).setHasGenders("Backers").setDoubleOnly().setEncounterBgm(l.CYCLIST),[l.BACKPACKER]:new z(++j).setHasGenders("Backpacker Female").setHasDouble("Backpackers").setSpeciesFilter(t=>t.isOfType(L.FLYING)||t.isOfType(L.ROCK)).setEncounterBgm(l.BACKPACKER).setPartyTemplates(ue.ONE_STRONG,ue.ONE_WEAK_ONE_STRONG,ue.ONE_AVG_ONE_STRONG).setSpeciesPools({[Ue.COMMON]:[e.RHYHORN,e.AIPOM,e.MAKUHITA,e.MAWILE,e.NUMEL,e.LILLIPUP,e.SANDILE,e.WOOLOO],[Ue.UNCOMMON]:[e.GIRAFARIG,e.ZANGOOSE,e.SEVIPER,e.CUBCHOO,e.PANCHAM,e.SKIDDO,e.MUDBRAY],[Ue.RARE]:[e.TAUROS,e.STANTLER,e.DARUMAKA,e.BOUFFALANT,e.DEERLING,e.IMPIDIMP],[Ue.SUPER_RARE]:[e.GALAR_DARUMAKA,e.TEDDIURSA]}),[l.BAKER]:new z(++j).setEncounterBgm(l.CLERK).setMoneyMultiplier(1.35).setSpeciesFilter(t=>[t.ability1,t.ability2,t.abilityHidden].some(E=>!!E&&[O.WHITE_SMOKE,O.GLUTTONY,O.HONEY_GATHER,O.HARVEST,O.CHEEK_POUCH,O.SWEET_VEIL,O.RIPEN,O.PURIFYING_SALT,O.WELL_BAKED_BODY,O.SUPERSWEET_SYRUP,O.HOSPITALITY].includes(E))||t.getLevelMoves().some(E=>[A.SOFT_BOILED,A.SPORE,A.MILK_DRINK,A.OVERHEAT,A.TEATIME].includes(E[1]))),[l.BEAUTY]:new z(++j).setMoneyMultiplier(1.55).setEncounterBgm(l.PARASOL_LADY).setPartyTemplates(ue.TWO_AVG_SAME_ONE_AVG,ue.TWO_AVG_SAME_ONE_STRONG,ue.THREE_AVG_SAME,ue.THREE_AVG,ue.FOUR_WEAK,ue.ONE_STRONG).setSpeciesPools({[Ue.COMMON]:[e.MEOWTH,e.GOLDEEN,e.MAREEP,e.MARILL,e.SKITTY,e.GLAMEOW,e.PURRLOIN],[Ue.UNCOMMON]:[e.SMOOCHUM,e.ROSELIA,e.LUVDISC,e.BLITZLE,e.SEWADDLE,e.PETILIL,e.MINCCINO,e.GOTHITA,e.SPRITZEE,e.FLITTLE],[Ue.RARE]:[e.FEEBAS,e.FURFROU,e.SALANDIT,e.BRUXISH,e.HATENNA,e.SNOM,e.ALOLA_VULPIX],[Ue.SUPER_RARE]:[e.CLAMPERL,e.AMAURA,e.SYLVEON,e.GOOMY,e.POPPLIO]}),[l.BIKER]:new z(++j).setMoneyMultiplier(1.4).setEncounterBgm(l.ROUGHNECK).setSpeciesPools({[Ue.COMMON]:[e.EKANS,e.KOFFING,e.CROAGUNK,e.VENIPEDE,e.SCRAGGY],[Ue.UNCOMMON]:[e.GRIMER,e.VOLTORB,e.TEDDIURSA,e.MAGBY,e.SKORUPI,e.SANDILE,e.PAWNIARD,e.SHROODLE],[Ue.RARE]:[e.VAROOM,e.CYCLIZAR]}),[l.BLACK_BELT]:new z(++j).setHasGenders("Battle Girl",l.PSYCHIC).setHasDouble("Crush Kin").setEncounterBgm(l.ROUGHNECK).setSpecialtyType(L.FIGHTING).setPartyTemplates(ue.TWO_WEAK_ONE_AVG,ue.TWO_WEAK_ONE_AVG,ue.TWO_AVG,ue.TWO_AVG,ue.TWO_WEAK_ONE_STRONG,ue.THREE_AVG,ue.TWO_AVG_ONE_STRONG).setSpeciesPools({[Ue.COMMON]:[e.NIDORAN_F,e.NIDORAN_M,e.MACHOP,e.MAKUHITA,e.MEDITITE,e.CROAGUNK,e.TIMBURR],[Ue.UNCOMMON]:[e.MANKEY,e.POLIWRATH,e.TYROGUE,e.BRELOOM,e.SCRAGGY,e.MIENFOO,e.PANCHAM,e.STUFFUL,e.CRABRAWLER],[Ue.RARE]:[e.HERACROSS,e.RIOLU,e.THROH,e.SAWK,e.PASSIMIAN,e.CLOBBOPUS],[Ue.SUPER_RARE]:[e.HITMONTOP,e.INFERNAPE,e.GALLADE,e.HAWLUCHA,e.HAKAMO_O],[Ue.ULTRA_RARE]:[e.KUBFU]}),[l.BREEDER]:new z(++j).setMoneyMultiplier(1.325).setEncounterBgm(l.POKEFAN).setHasGenders("Breeder Female").setHasDouble("Breeders").setPartyTemplateFunc(()=>PT(ue.FOUR_WEAKER,ue.FIVE_WEAKER,ue.SIX_WEAKER)).setSpeciesFilter(t=>t.baseTotal<450),[l.CLERK]:new z(++j).setHasGenders("Clerk Female").setHasDouble("Colleagues").setEncounterBgm(l.CLERK).setPartyTemplates(ue.TWO_WEAK,ue.THREE_WEAK,ue.ONE_AVG,ue.TWO_AVG,ue.TWO_WEAK_ONE_AVG).setSpeciesPools({[Ue.COMMON]:[e.MEOWTH,e.PSYDUCK,e.BUDEW,e.PIDOVE,e.CINCCINO,e.LITLEO],[Ue.UNCOMMON]:[e.JIGGLYPUFF,e.MAGNEMITE,e.MARILL,e.COTTONEE,e.SKIDDO],[Ue.RARE]:[e.BUIZEL,e.SNEASEL,e.KLEFKI,e.INDEEDEE]}),[l.CYCLIST]:new z(++j).setMoneyMultiplier(1.3).setHasGenders("Cyclist Female").setHasDouble("Cyclists").setEncounterBgm(l.CYCLIST).setPartyTemplates(ue.TWO_WEAK,ue.ONE_AVG).setSpeciesPools({[Ue.COMMON]:[e.DODUO,e.PICHU,e.TAILLOW,e.STARLY,e.PONYTA],[Ue.UNCOMMON]:[e.ELECTRIKE,e.SHINX,e.BLITZLE,e.DUCKLETT,e.WATTREL],[Ue.RARE]:[e.YANMA,e.NINJASK,e.WHIRLIPEDE,e.EMOLGA,e.SKIDDO],[Ue.SUPER_RARE]:[e.ACCELGOR,e.DREEPY]}),[l.DANCER]:new z(++j).setMoneyMultiplier(1.55).setEncounterBgm(l.CYCLIST).setPartyTemplates(ue.TWO_WEAK,ue.ONE_AVG,ue.TWO_AVG,ue.TWO_WEAK_SAME_TWO_WEAK_SAME).setSpeciesPools({[Ue.COMMON]:[e.RALTS,e.SPOINK,e.LOTAD,e.BUDEW],[Ue.UNCOMMON]:[e.SPINDA,e.SWABLU,e.MARACTUS],[Ue.RARE]:[e.BELLOSSOM,e.HITMONTOP,e.MIME_JR,e.ORICORIO],[Ue.SUPER_RARE]:[e.QUAXLY,e.JANGMO_O]}),[l.DEPOT_AGENT]:new z(++j).setMoneyMultiplier(1.45).setEncounterBgm(l.CLERK).setPartyTemplates(ue.TWO_AVG,ue.THREE_WEAK,ue.THREE_AVG,ue.FOUR_WEAK).setSpeciesFilter(t=>t.isOfType(L.GROUND)),[l.DOCTOR]:new z(++j).setHasGenders("Nurse","lass").setHasDouble("Medical Team").setMoneyMultiplier(3).setEncounterBgm(l.CLERK).setSpeciesFilter(t=>!!t.getLevelMoves().find(E=>E[1]===A.HEAL_PULSE)),[l.FIREBREATHER]:new z(++j).setMoneyMultiplier(1.4).setEncounterBgm(l.ROUGHNECK).setSpeciesFilter(t=>!!t.getLevelMoves().find(E=>E[1]===A.SMOG)||t.isOfType(L.FIRE)),[l.FISHERMAN]:new z(++j).setMoneyMultiplier(1.25).setEncounterBgm(l.BACKPACKER).setSpecialtyType(L.WATER).setPartyTemplates(ue.TWO_WEAK_SAME_ONE_AVG,ue.ONE_AVG,ue.THREE_WEAK_SAME,ue.ONE_STRONG,ue.SIX_WEAKER).setSpeciesPools({[Ue.COMMON]:[e.TENTACOOL,e.MAGIKARP,e.GOLDEEN,e.STARYU,e.REMORAID,e.SKRELP,e.CLAUNCHER,e.ARROKUDA],[Ue.UNCOMMON]:[e.POLIWAG,e.SHELLDER,e.KRABBY,e.HORSEA,e.CARVANHA,e.BARBOACH,e.CORPHISH,e.FINNEON,e.TYMPOLE,e.BASCULIN,e.FRILLISH,e.INKAY],[Ue.RARE]:[e.CHINCHOU,e.CORSOLA,e.WAILMER,e.CLAMPERL,e.LUVDISC,e.MANTYKE,e.ALOMOMOLA,e.TATSUGIRI,e.VELUZA],[Ue.SUPER_RARE]:[e.LAPRAS,e.FEEBAS,e.RELICANTH,e.DONDOZO]}),[l.GUITARIST]:new z(++j).setMoneyMultiplier(1.2).setEncounterBgm(l.ROUGHNECK).setSpecialtyType(L.ELECTRIC).setSpeciesFilter(t=>t.isOfType(L.ELECTRIC)),[l.HARLEQUIN]:new z(++j).setEncounterBgm(l.PSYCHIC).setSpeciesFilter(t=>UI[A.TRICK_ROOM].indexOf(t.speciesId)>-1),[l.HIKER]:new z(++j).setEncounterBgm(l.BACKPACKER).setPartyTemplates(ue.TWO_AVG_SAME_ONE_AVG,ue.TWO_AVG_SAME_ONE_STRONG,ue.TWO_AVG,ue.FOUR_WEAK,ue.ONE_STRONG).setSpeciesPools({[Ue.COMMON]:[e.SANDSHREW,e.DIGLETT,e.GEODUDE,e.MACHOP,e.ARON,e.ROGGENROLA,e.DRILBUR,e.NACLI],[Ue.UNCOMMON]:[e.ZUBAT,e.RHYHORN,e.ONIX,e.CUBONE,e.WOOBAT,e.SWINUB,e.NOSEPASS,e.HIPPOPOTAS,e.DWEBBLE,e.KLAWF,e.TOEDSCOOL],[Ue.RARE]:[e.TORKOAL,e.TRAPINCH,e.BARBOACH,e.GOLETT,e.ALOLA_DIGLETT,e.ALOLA_GEODUDE,e.GALAR_STUNFISK,e.PALDEA_WOOPER],[Ue.SUPER_RARE]:[e.MAGBY,e.LARVITAR]}),[l.HOOLIGANS]:new z(++j).setDoubleOnly().setMoneyMultiplier(1.5).setEncounterBgm(l.ROUGHNECK).setPartyTemplateFunc(()=>PT(ue.TWO_WEAK,ue.TWO_AVG,ue.ONE_AVG_ONE_STRONG)).setSpeciesFilter(t=>t.isOfType(L.POISON)||t.isOfType(L.DARK)),[l.HOOPSTER]:new z(++j).setMoneyMultiplier(1.2).setEncounterBgm(l.CYCLIST),[l.INFIELDER]:new z(++j).setMoneyMultiplier(1.2).setEncounterBgm(l.CYCLIST),[l.JANITOR]:new z(++j).setMoneyMultiplier(1.1).setEncounterBgm(l.CLERK),[l.LINEBACKER]:new z(++j).setMoneyMultiplier(1.2).setEncounterBgm(l.CYCLIST),[l.MAID]:new z(++j).setMoneyMultiplier(1.6).setEncounterBgm(l.RICH),[l.MUSICIAN]:new z(++j).setMoneyMultiplier(1.1).setEncounterBgm(l.POKEFAN).setPartyTemplates(ue.FOUR_WEAKER,ue.THREE_WEAK,ue.TWO_WEAK_ONE_AVG,ue.TWO_AVG).setSpeciesFilter(t=>!!t.getLevelMoves().find(E=>E[1]===A.SING)),[l.HEX_MANIAC]:new z(++j).setMoneyMultiplier(1.5).setEncounterBgm(l.PSYCHIC).setPartyTemplates(ue.TWO_AVG,ue.ONE_AVG_ONE_STRONG,ue.TWO_AVG_SAME_ONE_AVG,ue.THREE_AVG,ue.TWO_STRONG).setSpeciesFilter(t=>t.isOfType(L.GHOST)||t.isOfType(L.PSYCHIC)),[l.NURSERY_AIDE]:new z(++j).setMoneyMultiplier(1.3).setEncounterBgm("lass"),[l.OFFICER]:new z(++j).setMoneyMultiplier(1.55).setEncounterBgm(l.CLERK).setPartyTemplates(ue.ONE_AVG,ue.ONE_STRONG,ue.TWO_AVG,ue.TWO_WEAK_SAME_ONE_AVG).setSpeciesPools({[Ue.COMMON]:[e.VULPIX,e.GROWLITHE,e.SNUBBULL,e.POOCHYENA,e.ELECTRIKE,e.LILLIPUP,e.YAMPER,e.FIDOUGH],[Ue.UNCOMMON]:[e.HOUNDOUR,e.ROCKRUFF,e.MASCHIFF],[Ue.RARE]:[e.JOLTEON,e.RIOLU],[Ue.SUPER_RARE]:[],[Ue.ULTRA_RARE]:[e.ENTEI,e.SUICUNE,e.RAIKOU]}),[l.PARASOL_LADY]:new z(++j).setMoneyMultiplier(1.55).setEncounterBgm(l.PARASOL_LADY).setPartyTemplates(ue.TWO_AVG_SAME_ONE_AVG,ue.TWO_AVG_SAME_ONE_STRONG,ue.TWO_AVG,ue.FOUR_WEAK,ue.ONE_STRONG).setSpeciesFilter(t=>[t.ability1,t.ability2,t.abilityHidden].some(E=>!!E&&[O.DRIZZLE,O.SWIFT_SWIM,O.HYDRATION,O.RAIN_DISH,O.DRY_SKIN,O.WIND_POWER].includes(E))||t.getLevelMoves().some(E=>E[1]===A.RAIN_DANCE)),[l.PILOT]:new z(++j).setMoneyMultiplier(1.75).setEncounterBgm(l.CLERK).setPartyTemplates(ue.THREE_WEAK,ue.TWO_WEAK_ONE_AVG,ue.TWO_AVG,ue.THREE_AVG).setSpeciesFilter(t=>UI[A.FLY].indexOf(t.speciesId)>-1),[l.POKEFAN]:new z(++j).setMoneyMultiplier(1.4).setName("PokéFan").setHasGenders("PokéFan Female").setHasDouble("PokéFan Family").setEncounterBgm(l.POKEFAN).setPartyTemplates(ue.SIX_WEAKER,ue.FOUR_WEAK,ue.TWO_AVG,ue.ONE_STRONG,ue.FOUR_WEAK_SAME,ue.FIVE_WEAK,ue.SIX_WEAKER_SAME).setSpeciesFilter(t=>UI[A.HELPING_HAND].indexOf(t.speciesId)>-1),[l.PRESCHOOLER]:new z(++j).setMoneyMultiplier(.2).setEncounterBgm(l.YOUNGSTER).setHasGenders("Preschooler Female","lass").setHasDouble("Preschoolers").setPartyTemplates(ue.THREE_WEAK,ue.FOUR_WEAKER,ue.TWO_WEAK_SAME_ONE_AVG,ue.FIVE_WEAKER).setSpeciesPools({[Ue.COMMON]:[e.CATERPIE,e.PICHU,e.SANDSHREW,e.LEDYBA,e.BUDEW,e.BURMY,e.WOOLOO,e.PAWMI,e.SMOLIV],[Ue.UNCOMMON]:[e.EEVEE,e.CLEFFA,e.IGGLYBUFF,e.SWINUB,e.WOOPER,e.DRIFLOON,e.DEDENNE,e.STUFFUL],[Ue.RARE]:[e.RALTS,e.RIOLU,e.JOLTIK,e.TANDEMAUS],[Ue.SUPER_RARE]:[e.DARUMAKA,e.TINKATINK]}),[l.PSYCHIC]:new z(++j).setHasGenders("Psychic Female").setHasDouble("Psychics").setMoneyMultiplier(1.4).setEncounterBgm(l.PSYCHIC).setPartyTemplates(ue.TWO_WEAK,ue.TWO_AVG,ue.TWO_WEAK_SAME_ONE_AVG,ue.TWO_WEAK_SAME_TWO_WEAK_SAME,ue.ONE_STRONGER).setSpeciesPools({[Ue.COMMON]:[e.ABRA,e.DROWZEE,e.RALTS,e.SPOINK,e.GOTHITA,e.SOLOSIS,e.BLIPBUG,e.ESPURR,e.HATENNA],[Ue.UNCOMMON]:[e.MIME_JR,e.EXEGGCUTE,e.MEDITITE,e.NATU,e.EXEGGCUTE,e.WOOBAT,e.INKAY,e.ORANGURU],[Ue.RARE]:[e.ELGYEM,e.SIGILYPH,e.BALTOY,e.GIRAFARIG,e.MEOWSTIC],[Ue.SUPER_RARE]:[e.BELDUM,e.ESPEON,e.STANTLER]}),[l.RANGER]:new z(++j).setMoneyMultiplier(1.4).setName("Pokémon Ranger").setEncounterBgm(l.BACKPACKER).setHasGenders("Pokémon Ranger Female").setHasDouble("Pokémon Rangers").setSpeciesPools({[Ue.COMMON]:[e.PICHU,e.GROWLITHE,e.PONYTA,e.ZIGZAGOON,e.SEEDOT,e.BIDOOF,e.RIOLU,e.SEWADDLE,e.SKIDDO,e.SALANDIT,e.YAMPER],[Ue.UNCOMMON]:[e.AZURILL,e.TAUROS,e.MAREEP,e.FARFETCHD,e.TEDDIURSA,e.SHROOMISH,e.ELECTRIKE,e.BUDEW,e.BUIZEL,e.MUDBRAY,e.STUFFUL],[Ue.RARE]:[e.EEVEE,e.SCYTHER,e.KANGASKHAN,e.RALTS,e.MUNCHLAX,e.ZORUA,e.PALDEA_TAUROS,e.TINKATINK,e.CYCLIZAR,e.FLAMIGO],[Ue.SUPER_RARE]:[e.LARVESTA]}),[l.RICH]:new z(++j).setMoneyMultiplier(3.25).setName("Gentleman").setHasGenders("Madame").setHasDouble("Rich Couple").setPartyTemplates(ue.THREE_WEAK,ue.FOUR_WEAK,ue.TWO_WEAK_ONE_AVG,ue.THREE_AVG).setSpeciesFilter(t=>t.isOfType(L.NORMAL)||t.isOfType(L.ELECTRIC)),[l.RICH_KID]:new z(++j).setMoneyMultiplier(2.5).setName("Rich Boy").setHasGenders("Lady").setHasDouble("Rich Kids").setEncounterBgm(l.RICH).setPartyTemplates(ue.FOUR_WEAKER,ue.THREE_WEAK_SAME,ue.TWO_WEAK_SAME_ONE_AVG).setSpeciesFilter(t=>t.baseTotal<=460),[l.ROUGHNECK]:new z(++j).setMoneyMultiplier(1.4).setEncounterBgm(l.ROUGHNECK).setSpeciesFilter(t=>t.isOfType(L.DARK)),[l.SAILOR]:new z(++j).setMoneyMultiplier(1.4).setEncounterBgm(l.BACKPACKER).setSpeciesFilter(t=>t.isOfType(L.WATER)||t.isOfType(L.FIGHTING)),[l.SCIENTIST]:new z(++j).setHasGenders("Scientist Female").setHasDouble("Scientists").setMoneyMultiplier(1.7).setEncounterBgm(l.SCIENTIST).setSpeciesPools({[Ue.COMMON]:[e.MAGNEMITE,e.GRIMER,e.DROWZEE,e.VOLTORB,e.KOFFING],[Ue.UNCOMMON]:[e.BALTOY,e.BRONZOR,e.FERROSEED,e.KLINK,e.CHARJABUG,e.BLIPBUG,e.HELIOPTILE],[Ue.RARE]:[e.ABRA,e.DITTO,e.PORYGON,e.ELEKID,e.SOLOSIS,e.GALAR_WEEZING],[Ue.SUPER_RARE]:[e.OMANYTE,e.KABUTO,e.AERODACTYL,e.LILEEP,e.ANORITH,e.CRANIDOS,e.SHIELDON,e.TIRTOUGA,e.ARCHEN,e.ARCTOVISH,e.ARCTOZOLT,e.DRACOVISH,e.DRACOZOLT],[Ue.ULTRA_RARE]:[e.ROTOM,e.MELTAN]}),[l.SMASHER]:new z(++j).setMoneyMultiplier(1.2).setEncounterBgm(l.CYCLIST),[l.SNOW_WORKER]:new z(++j).setName("Worker").setHasDouble("Workers").setMoneyMultiplier(1.7).setEncounterBgm(l.CLERK).setSpeciesFilter(t=>t.isOfType(L.ICE)||t.isOfType(L.STEEL)),[l.STRIKER]:new z(++j).setMoneyMultiplier(1.2).setEncounterBgm(l.CYCLIST),[l.SCHOOL_KID]:new z(++j).setMoneyMultiplier(.75).setEncounterBgm(l.YOUNGSTER).setHasGenders("School Kid Female","lass").setHasDouble("School Kids").setSpeciesPools({[Ue.COMMON]:[e.ODDISH,e.EXEGGCUTE,e.TEDDIURSA,e.WURMPLE,e.RALTS,e.SHROOMISH,e.FLETCHLING],[Ue.UNCOMMON]:[e.VOLTORB,e.WHISMUR,e.MEDITITE,e.MIME_JR,e.NYMBLE],[Ue.RARE]:[e.TANGELA,e.EEVEE,e.YANMA],[Ue.SUPER_RARE]:[e.TADBULB]}),[l.SWIMMER]:new z(++j).setMoneyMultiplier(1.3).setEncounterBgm(l.PARASOL_LADY).setHasGenders("Swimmer Female").setHasDouble("Swimmers").setSpecialtyType(L.WATER).setSpeciesFilter(t=>t.isOfType(L.WATER)),[l.TWINS]:new z(++j).setDoubleOnly().setMoneyMultiplier(.65).setUseSameSeedForAllMembers().setPartyTemplateFunc(()=>PT(ue.TWO_WEAK,ue.TWO_AVG,ue.TWO_STRONG)).setPartyMemberFunc(0,g([e.PLUSLE,e.VOLBEAT,e.PACHIRISU,e.SILCOON,e.METAPOD,e.IGGLYBUFF,e.PETILIL,e.EEVEE])).setPartyMemberFunc(1,g([e.MINUN,e.ILLUMISE,e.EMOLGA,e.CASCOON,e.KAKUNA,e.CLEFFA,e.COTTONEE,e.EEVEE],b.TRAINER_PARTNER)).setEncounterBgm(l.TWINS),[l.VETERAN]:new z(++j).setHasGenders("Veteran Female").setHasDouble("Veteran Duo").setMoneyMultiplier(2.5).setEncounterBgm(l.ACE_TRAINER).setSpeciesFilter(t=>t.isOfType(L.DRAGON)),[l.WAITER]:new z(++j).setHasGenders("Waitress").setHasDouble("Restaurant Staff").setMoneyMultiplier(1.5).setEncounterBgm(l.CLERK).setSpeciesPools({[Ue.COMMON]:[e.CLEFFA,e.CHATOT,e.PANSAGE,e.PANSEAR,e.PANPOUR,e.MINCCINO],[Ue.UNCOMMON]:[e.TROPIUS,e.PETILIL,e.BOUNSWEET,e.INDEEDEE],[Ue.RARE]:[e.APPLIN,e.SINISTEA,e.POLTCHAGEIST]}),[l.WORKER]:new z(++j).setHasGenders("Worker Female").setHasDouble("Workers").setEncounterBgm(l.CLERK).setMoneyMultiplier(1.7).setSpeciesFilter(t=>t.isOfType(L.ROCK)||t.isOfType(L.STEEL)),[l.YOUNGSTER]:new z(++j).setMoneyMultiplier(.5).setEncounterBgm(l.YOUNGSTER).setHasGenders("Lass","lass").setHasDouble("Beginners").setPartyTemplates(ue.TWO_WEAKER).setSpeciesPools([e.CATERPIE,e.WEEDLE,e.RATTATA,e.SENTRET,e.POOCHYENA,e.ZIGZAGOON,e.WURMPLE,e.BIDOOF,e.PATRAT,e.LILLIPUP]),[l.ROCKET_GRUNT]:new z(++j).setHasGenders("Rocket Grunt Female").setHasDouble("Rocket Grunts").setMoneyMultiplier(1).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()).setSpeciesPools({[Ue.COMMON]:[e.WEEDLE,e.RATTATA,e.EKANS,e.SANDSHREW,e.ZUBAT,e.ODDISH,e.GEODUDE,e.SLOWPOKE,e.GRIMER,e.KOFFING],[Ue.UNCOMMON]:[e.MANKEY,e.GROWLITHE,e.MAGNEMITE,e.ONIX,e.VOLTORB,e.EXEGGCUTE,e.CUBONE,e.LICKITUNG,e.TAUROS,e.MAGIKARP,e.MURKROW,e.ELEKID,e.MAGBY],[Ue.RARE]:[e.ABRA,e.GASTLY,e.SCYTHER,e.PORYGON,e.OMANYTE,e.KABUTO,e.ALOLA_RATTATA,e.ALOLA_SANDSHREW,e.ALOLA_MEOWTH,e.ALOLA_GEODUDE,e.ALOLA_GRIMER,e.PALDEA_TAUROS],[Ue.SUPER_RARE]:[e.DRATINI,e.LARVITAR]}),[l.ARCHER]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("rocket_admin","rocket",[e.HOUNDOOM]).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()),[l.ARIANA]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("rocket_admin_female","rocket",[e.ARBOK]).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()),[l.PROTON]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("rocket_admin","rocket",[e.CROBAT]).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()),[l.PETREL]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("rocket_admin","rocket",[e.WEEZING]).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()),[l.MAGMA_GRUNT]:new z(++j).setHasGenders("Magma Grunt Female").setHasDouble("Magma Grunts").setMoneyMultiplier(1).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()).setSpeciesPools({[Ue.COMMON]:[e.DIGLETT,e.GROWLITHE,e.SLUGMA,e.POOCHYENA,e.ZIGZAGOON,e.NUMEL,e.TORKOAL,e.BALTOY],[Ue.UNCOMMON]:[e.RHYHORN,e.PHANPY,e.MAGBY,e.ZANGOOSE,e.SOLROCK,e.HEATMOR,e.ROLYCOLY,e.CAPSAKID],[Ue.RARE]:[e.TRAPINCH,e.LILEEP,e.ANORITH,e.GOLETT,e.TURTONATOR,e.TOEDSCOOL,e.HISUI_GROWLITHE],[Ue.SUPER_RARE]:[e.CHARCADET,e.ARON]}),[l.TABITHA]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("magma_admin","magma",[e.CAMERUPT]).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()),[l.COURTNEY]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("magma_admin_female","magma",[e.CAMERUPT]).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()),[l.AQUA_GRUNT]:new z(++j).setHasGenders("Aqua Grunt Female").setHasDouble("Aqua Grunts").setMoneyMultiplier(1).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()).setSpeciesPools({[Ue.COMMON]:[e.QWILFISH,e.REMORAID,e.ZIGZAGOON,e.LOTAD,e.WINGULL,e.CARVANHA,e.WAILMER,e.BARBOACH,e.CORPHISH,e.SPHEAL],[Ue.UNCOMMON]:[e.TENTACOOL,e.HORSEA,e.CHINCHOU,e.WOOPER,e.AZURILL,e.SEVIPER,e.CLAMPERL,e.WIMPOD,e.CLOBBOPUS],[Ue.RARE]:[e.MANTYKE,e.TYMPOLE,e.SKRELP,e.ARROKUDA,e.WIGLETT,e.HISUI_QWILFISH,e.PALDEA_WOOPER],[Ue.SUPER_RARE]:[e.BASCULEGION,e.DONDOZO]}),[l.MATT]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("aqua_admin","aqua",[e.SHARPEDO]).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()),[l.SHELLY]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("aqua_admin_female","aqua",[e.SHARPEDO]).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()),[l.GALACTIC_GRUNT]:new z(++j).setHasGenders("Galactic Grunt Female").setHasDouble("Galactic Grunts").setMoneyMultiplier(1).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_galactic_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()).setSpeciesPools({[Ue.COMMON]:[e.WURMPLE,e.SHINX,e.BURMY,e.DRIFLOON,e.GLAMEOW,e.STUNKY,e.BRONZOR,e.CROAGUNK,e.CARNIVINE],[Ue.UNCOMMON]:[e.ZUBAT,e.LICKITUNG,e.RHYHORN,e.TANGELA,e.YANMA,e.GLIGAR,e.SWINUB,e.SKORUPI],[Ue.RARE]:[e.SNEASEL,e.TEDDIURSA,e.ELEKID,e.MAGBY,e.DUSKULL,e.HISUI_GROWLITHE,e.HISUI_QWILFISH],[Ue.SUPER_RARE]:[e.SPIRITOMB,e.ROTOM,e.HISUI_SNEASEL]}),[l.JUPITER]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("galactic_commander_female","galactic",[e.SKUNTANK]).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_galactic_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()),[l.MARS]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("galactic_commander_female","galactic",[e.PURUGLY]).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_galactic_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()),[l.SATURN]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("galactic_commander","galactic",[e.TOXICROAK]).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_galactic_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()),[l.PLASMA_GRUNT]:new z(++j).setHasGenders("Plasma Grunt Female").setHasDouble("Plasma Grunts").setMoneyMultiplier(1).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_plasma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()).setSpeciesPools({[Ue.COMMON]:[e.PATRAT,e.LILLIPUP,e.PURRLOIN,e.WOOBAT,e.TYMPOLE,e.SANDILE,e.SCRAGGY,e.TRUBBISH,e.VANILLITE],[Ue.UNCOMMON]:[e.TIMBURR,e.VENIPEDE,e.DARUMAKA,e.FOONGUS,e.FRILLISH,e.JOLTIK,e.KLINK,e.CUBCHOO,e.GOLETT],[Ue.RARE]:[e.DRILBUR,e.ZORUA,e.MIENFOO,e.PAWNIARD,e.BOUFFALANT,e.RUFFLET,e.VULLABY,e.DURANT],[Ue.SUPER_RARE]:[e.AXEW,e.DRUDDIGON,e.DEINO,e.HISUI_ZORUA]}),[l.ZINZOLIN]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("plasma_sage","plasma_zinzolin",[e.CRYOGONAL]).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_plasma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()),[l.COLRESS]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("plasma_boss","plasma_colress",[e.KLINKLANG]).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_colress").setMixedBattleBgm("battle_colress").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()),[l.FLARE_GRUNT]:new z(++j).setHasGenders("Flare Grunt Female").setHasDouble("Flare Grunts").setMoneyMultiplier(1).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_flare_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()).setSpeciesPools({[Ue.COMMON]:[e.HOUNDOUR,e.GULPIN,e.SKORUPI,e.CROAGUNK,e.PURRLOIN,e.SCRAGGY,e.FLETCHLING,e.SCATTERBUG,e.LITLEO,e.ESPURR,e.INKAY],[Ue.UNCOMMON]:[e.POOCHYENA,e.ELECTRIKE,e.FOONGUS,e.PANCHAM,e.BINACLE,e.SKRELP,e.CLAUNCHER,e.HELIOPTILE,e.PHANTUMP,e.PUMPKABOO],[Ue.RARE]:[e.SNEASEL,e.LITWICK,e.PAWNIARD,e.NOIBAT],[Ue.SUPER_RARE]:[e.SLIGGOO,e.HISUI_SLIGGOO,e.HISUI_AVALUGG]}),[l.BRYONY]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("flare_admin_female","flare",[e.LIEPARD]).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_flare_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()),[l.XEROSIC]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("flare_admin","flare",[e.MALAMAR]).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_flare_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()),[l.AETHER_GRUNT]:new z(++j).setHasGenders("Aether Grunt Female").setHasDouble("Aether Grunts").setMoneyMultiplier(1).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aether_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()).setSpeciesPools({[Ue.COMMON]:[e.CORSOLA,e.LILLIPUP,e.PIKIPEK,e.YUNGOOS,e.ROCKRUFF,e.MORELULL,e.BOUNSWEET,e.COMFEY,e.KOMALA,e.TOGEDEMARU,e.ALOLA_RAICHU,e.ALOLA_DIGLETT,e.ALOLA_GEODUDE,e.ALOLA_EXEGGUTOR],[Ue.UNCOMMON]:[e.POLIWAG,e.CRABRAWLER,e.ORICORIO,e.CUTIEFLY,e.WISHIWASHI,e.MUDBRAY,e.STUFFUL,e.ORANGURU,e.PASSIMIAN,e.PYUKUMUKU,e.BRUXISH,e.ALOLA_SANDSHREW,e.ALOLA_VULPIX,e.ALOLA_MAROWAK],[Ue.RARE]:[e.MINIOR,e.TURTONATOR,e.MIMIKYU,e.DRAMPA,e.GALAR_CORSOLA],[Ue.SUPER_RARE]:[e.PORYGON,e.JANGMO_O]}),[l.FABA]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("aether_admin","aether",[e.HYPNO]).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aether_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()),[l.SKULL_GRUNT]:new z(++j).setHasGenders("Skull Grunt Female").setHasDouble("Skull Grunts").setMoneyMultiplier(1).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_skull_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()).setSpeciesPools({[Ue.COMMON]:[e.EKANS,e.VENONAT,e.DROWZEE,e.KOFFING,e.SPINARAK,e.SCRAGGY,e.TRUBBISH,e.MAREANIE,e.SALANDIT,e.ALOLA_RATTATA,e.ALOLA_MEOWTH,e.ALOLA_GRIMER],[Ue.UNCOMMON]:[e.ZUBAT,e.GASTLY,e.HOUNDOUR,e.SABLEYE,e.VENIPEDE,e.SANDILE,e.VULLABY,e.PANCHAM,e.FOMANTIS,e.ALOLA_MAROWAK],[Ue.RARE]:[e.PAWNIARD,e.WISHIWASHI,e.SANDYGAST,e.MIMIKYU,e.DHELMISE,e.NYMBLE],[Ue.SUPER_RARE]:[e.GRUBBIN,e.DEWPIDER]}),[l.PLUMERIA]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("skull_admin","skull",[e.SALAZZLE]).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_skull_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()),[l.MACRO_GRUNT]:new z(++j).setHasGenders("Macro Grunt Female").setHasDouble("Macro Grunts").setMoneyMultiplier(1).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_macro_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()).setSpeciesPools({[Ue.COMMON]:[e.STEELIX,e.MAWILE,e.FERROSEED,e.KLINK,e.SKWOVET,e.ROOKIDEE,e.ROLYCOLY,e.CUFANT,e.GALAR_MEOWTH,e.GALAR_ZIGZAGOON],[Ue.UNCOMMON]:[e.MAGNEMITE,e.RIOLU,e.DRILBUR,e.APPLIN,e.CRAMORANT,e.ARROKUDA,e.SINISTEA,e.HATENNA,e.FALINKS,e.GALAR_PONYTA,e.GALAR_YAMASK],[Ue.RARE]:[e.SCIZOR,e.BELDUM,e.HONEDGE,e.GALAR_FARFETCHD,e.GALAR_MR_MIME,e.GALAR_DARUMAKA],[Ue.SUPER_RARE]:[e.DURALUDON,e.DREEPY]}),[l.OLEANA]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("macro_admin","macro_cosmos",[e.GARBODOR]).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_oleana").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()),[l.STAR_GRUNT]:new z(++j).setHasGenders("Star Grunt Female").setHasDouble("Star Grunts").setMoneyMultiplier(1).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()).setSpeciesPools({[Ue.COMMON]:[e.DUNSPARCE,e.HOUNDOUR,e.AZURILL,e.GULPIN,e.FOONGUS,e.FLETCHLING,e.LITLEO,e.FLABEBE,e.CRABRAWLER,e.NYMBLE,e.PAWMI,e.FIDOUGH,e.SQUAWKABILLY,e.MASCHIFF,e.SHROODLE,e.KLAWF,e.WIGLETT,e.PALDEA_WOOPER],[Ue.UNCOMMON]:[e.KOFFING,e.EEVEE,e.GIRAFARIG,e.RALTS,e.TORKOAL,e.SEVIPER,e.SCRAGGY,e.ZORUA,e.MIMIKYU,e.IMPIDIMP,e.FALINKS,e.CAPSAKID,e.TINKATINK,e.BOMBIRDIER,e.CYCLIZAR,e.FLAMIGO,e.PALDEA_TAUROS],[Ue.RARE]:[e.MANKEY,e.PAWNIARD,e.CHARCADET,e.FLITTLE,e.VAROOM,e.ORTHWORM],[Ue.SUPER_RARE]:[e.DONDOZO,e.GIMMIGHOUL]}),[l.GIACOMO]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_dark",[e.KINGAMBIT],L.DARK).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()).setPartyMemberFunc(3,g([e.REVAVROOM],b.TRAINER,!0,t=>{t.formIndex=1,t.moveset=[new Ye(A.WICKED_TORQUE),new Ye(A.SPIN_OUT),new Ye(A.SHIFT_GEAR),new Ye(A.HIGH_HORSEPOWER)]})),[l.MELA]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_fire",[e.ARMAROUGE],L.FIRE).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()).setPartyMemberFunc(3,g([e.REVAVROOM],b.TRAINER,!0,t=>{t.formIndex=2,t.moveset=[new Ye(A.BLAZING_TORQUE),new Ye(A.SPIN_OUT),new Ye(A.SHIFT_GEAR),new Ye(A.HIGH_HORSEPOWER)]})),[l.ATTICUS]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_poison",[e.REVAVROOM],L.POISON).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()).setPartyMemberFunc(3,g([e.REVAVROOM],b.TRAINER,!0,t=>{t.formIndex=3,t.moveset=[new Ye(A.NOXIOUS_TORQUE),new Ye(A.SPIN_OUT),new Ye(A.SHIFT_GEAR),new Ye(A.HIGH_HORSEPOWER)]})),[l.ORTEGA]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_fairy",[e.DACHSBUN],L.FAIRY).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()).setPartyMemberFunc(3,g([e.REVAVROOM],b.TRAINER,!0,t=>{t.formIndex=4,t.moveset=[new Ye(A.MAGICAL_TORQUE),new Ye(A.SPIN_OUT),new Ye(A.SHIFT_GEAR),new Ye(A.HIGH_HORSEPOWER)]})),[l.ERI]:new z(++j).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_fighting",[e.ANNIHILAPE],L.FIGHTING).setEncounterBgm(l.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>RE()).setPartyMemberFunc(3,g([e.REVAVROOM],b.TRAINER,!0,t=>{t.formIndex=5,t.moveset=[new Ye(A.COMBAT_TORQUE),new Ye(A.SPIN_OUT),new Ye(A.SHIFT_GEAR),new Ye(A.HIGH_HORSEPOWER)]})),[l.BROCK]:new z(j=l.BROCK).initForGymLeader(Fe.BROCK,!0,L.ROCK,!1,-1).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[l.MISTY]:new z(++j).initForGymLeader(Fe.MISTY,!1,L.WATER,!1,-1).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[l.LT_SURGE]:new z(++j).initForGymLeader(Fe.LT_SURGE,!0,L.ELECTRIC,!1,-1).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[l.ERIKA]:new z(++j).initForGymLeader(Fe.ERIKA,!1,L.GRASS,!1,-1).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[l.JANINE]:new z(++j).initForGymLeader(Fe.JANINE,!1,L.POISON,!1,-1).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[l.SABRINA]:new z(++j).initForGymLeader(Fe.SABRINA,!1,L.PSYCHIC,!1,-1).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[l.BLAINE]:new z(++j).initForGymLeader(Fe.BLAINE,!0,L.FIRE,!1,-1).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[l.GIOVANNI]:new z(++j).initForGymLeader(Fe.GIOVANNI,!0,L.GROUND,!1,-2).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[l.FALKNER]:new z(++j).initForGymLeader(Fe.FALKNER,!0,L.FLYING,!1,-1).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[l.BUGSY]:new z(++j).initForGymLeader(Fe.BUGSY,!0,L.BUG,!1,-1).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[l.WHITNEY]:new z(++j).initForGymLeader(Fe.WHITNEY,!1,L.NORMAL,!1,-1).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[l.MORTY]:new z(++j).initForGymLeader(Fe.MORTY,!0,L.GHOST,!1,-1).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[l.CHUCK]:new z(++j).initForGymLeader(Fe.CHUCK,!0,L.FIGHTING,!1,-1).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[l.JASMINE]:new z(++j).initForGymLeader(Fe.JASMINE,!1,L.STEEL,!1,-1).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[l.PRYCE]:new z(++j).initForGymLeader(Fe.PRYCE,!0,L.ICE,!1,-1).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[l.CLAIR]:new z(++j).initForGymLeader(Fe.CLAIR,!1,L.DRAGON,!1,-3).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[l.ROXANNE]:new z(++j).initForGymLeader(Fe.ROXANNE,!1,L.ROCK,!1,-1).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[l.BRAWLY]:new z(++j).initForGymLeader(Fe.BRAWLY,!0,L.FIGHTING,!1,-1).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[l.WATTSON]:new z(++j).initForGymLeader(Fe.WATTSON,!0,L.ELECTRIC,!1,-1).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[l.FLANNERY]:new z(++j).initForGymLeader(Fe.FLANNERY,!1,L.FIRE,!1,-1).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[l.NORMAN]:new z(++j).initForGymLeader(Fe.NORMAN,!0,L.NORMAL,!1,-1).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[l.WINONA]:new z(++j).initForGymLeader(Fe.WINONA,!1,L.FLYING,!1,-1).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[l.TATE]:new z(++j).initForGymLeader(Fe.TATE,!0,L.PSYCHIC,!1,-1).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym").setHasDouble("tate_liza_double").setDoubleTrainerType(l.LIZA).setDoubleTitle("gym_leader_double"),[l.LIZA]:new z(++j).initForGymLeader(Fe.LIZA,!1,L.PSYCHIC,!1,-1).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym").setHasDouble("liza_tate_double").setDoubleTrainerType(l.TATE).setDoubleTitle("gym_leader_double"),[l.JUAN]:new z(++j).initForGymLeader(Fe.JUAN,!0,L.WATER,!1,-1).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[l.ROARK]:new z(++j).initForGymLeader(Fe.ROARK,!0,L.ROCK,!1,-1).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[l.GARDENIA]:new z(++j).initForGymLeader(Fe.GARDENIA,!1,L.GRASS,!1,-1).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[l.MAYLENE]:new z(++j).initForGymLeader(Fe.MAYLENE,!1,L.FIGHTING,!1,-1).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[l.CRASHER_WAKE]:new z(++j).initForGymLeader(Fe.CRASHER_WAKE,!0,L.WATER,!1,-1).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[l.FANTINA]:new z(++j).initForGymLeader(Fe.FANTINA,!1,L.GHOST,!1,-1).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[l.BYRON]:new z(++j).initForGymLeader(Fe.BYRON,!0,L.STEEL,!1,-1).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[l.CANDICE]:new z(++j).initForGymLeader(Fe.CANDICE,!1,L.ICE,!1,-1).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[l.VOLKNER]:new z(++j).initForGymLeader(Fe.VOLKNER,!0,L.ELECTRIC,!1,-1).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[l.CILAN]:new z(++j).initForGymLeader(Fe.CILAN,!0,L.GRASS,!1,-1).setMixedBattleBgm("battle_unova_gym"),[l.CHILI]:new z(++j).initForGymLeader(Fe.CHILI,!0,L.FIRE,!1,-1).setMixedBattleBgm("battle_unova_gym"),[l.CRESS]:new z(++j).initForGymLeader(Fe.CRESS,!0,L.WATER,!1,-1).setMixedBattleBgm("battle_unova_gym"),[l.CHEREN]:new z(++j).initForGymLeader(Fe.CHEREN,!0,L.NORMAL,!1,-1).setMixedBattleBgm("battle_unova_gym"),[l.LENORA]:new z(++j).initForGymLeader(Fe.LENORA,!1,L.NORMAL,!1,-1).setMixedBattleBgm("battle_unova_gym"),[l.ROXIE]:new z(++j).initForGymLeader(Fe.ROXIE,!1,L.POISON,!1,-1).setMixedBattleBgm("battle_unova_gym"),[l.BURGH]:new z(++j).initForGymLeader(Fe.BURGH,!0,L.BUG,!1,-1).setMixedBattleBgm("battle_unova_gym"),[l.ELESA]:new z(++j).initForGymLeader(Fe.ELESA,!1,L.ELECTRIC,!1,-1).setMixedBattleBgm("battle_unova_gym"),[l.CLAY]:new z(++j).initForGymLeader(Fe.CLAY,!0,L.GROUND,!1,-1).setMixedBattleBgm("battle_unova_gym"),[l.SKYLA]:new z(++j).initForGymLeader(Fe.SKYLA,!1,L.FLYING,!1,-1).setMixedBattleBgm("battle_unova_gym"),[l.BRYCEN]:new z(++j).initForGymLeader(Fe.BRYCEN,!0,L.ICE,!1,-1).setMixedBattleBgm("battle_unova_gym"),[l.DRAYDEN]:new z(++j).initForGymLeader(Fe.DRAYDEN,!0,L.DRAGON,!1,-1).setMixedBattleBgm("battle_unova_gym"),[l.MARLON]:new z(++j).initForGymLeader(Fe.MARLON,!0,L.WATER,!1,-1).setMixedBattleBgm("battle_unova_gym"),[l.VIOLA]:new z(++j).initForGymLeader(Fe.VIOLA,!1,L.BUG,!1,-1).setMixedBattleBgm("battle_kalos_gym"),[l.GRANT]:new z(++j).initForGymLeader(Fe.GRANT,!0,L.ROCK,!1,-1).setMixedBattleBgm("battle_kalos_gym"),[l.KORRINA]:new z(++j).initForGymLeader(Fe.KORRINA,!1,L.FIGHTING,!1,-1).setMixedBattleBgm("battle_kalos_gym"),[l.RAMOS]:new z(++j).initForGymLeader(Fe.RAMOS,!0,L.GRASS,!1,-1).setMixedBattleBgm("battle_kalos_gym"),[l.CLEMONT]:new z(++j).initForGymLeader(Fe.CLEMONT,!0,L.ELECTRIC,!1,-1).setMixedBattleBgm("battle_kalos_gym"),[l.VALERIE]:new z(++j).initForGymLeader(Fe.VALERIE,!1,L.FAIRY,!1,-1).setMixedBattleBgm("battle_kalos_gym"),[l.OLYMPIA]:new z(++j).initForGymLeader(Fe.OLYMPIA,!1,L.PSYCHIC,!1,-1).setMixedBattleBgm("battle_kalos_gym"),[l.WULFRIC]:new z(++j).initForGymLeader(Fe.WULFRIC,!0,L.ICE,!1,-1).setMixedBattleBgm("battle_kalos_gym"),[l.MILO]:new z(++j).initForGymLeader(Fe.MILO,!0,L.GRASS,!1,-1).setMixedBattleBgm("battle_galar_gym"),[l.NESSA]:new z(++j).setName("Nessa").initForGymLeader(Fe.NESSA,!1,L.WATER,!1,-1).setMixedBattleBgm("battle_galar_gym"),[l.KABU]:new z(++j).initForGymLeader(Fe.KABU,!0,L.FIRE,!1,-1).setMixedBattleBgm("battle_galar_gym"),[l.BEA]:new z(++j).setName("Bea").initForGymLeader(Fe.BEA,!1,L.FIGHTING,!1,-1).setMixedBattleBgm("battle_galar_gym"),[l.ALLISTER]:new z(++j).setName("Allister").initForGymLeader(Fe.ALLISTER,!0,L.GHOST,!1,-1).setMixedBattleBgm("battle_galar_gym"),[l.OPAL]:new z(++j).initForGymLeader(Fe.OPAL,!1,L.FAIRY,!1,-1).setMixedBattleBgm("battle_galar_gym"),[l.BEDE]:new z(++j).initForGymLeader(Fe.BEDE,!0,L.FAIRY,!1,-1).setMixedBattleBgm("battle_galar_gym"),[l.GORDIE]:new z(++j).initForGymLeader(Fe.GORDIE,!0,L.ROCK,!1,-1).setMixedBattleBgm("battle_galar_gym"),[l.MELONY]:new z(++j).initForGymLeader(Fe.MELONY,!1,L.ICE,!1,-1).setMixedBattleBgm("battle_galar_gym"),[l.PIERS]:new z(++j).initForGymLeader(Fe.PIERS,!0,L.DARK,!1,-3).setHasDouble("piers_marnie_double").setDoubleTrainerType(l.MARNIE).setDoubleTitle("gym_leader_double").setMixedBattleBgm("battle_galar_gym"),[l.MARNIE]:new z(++j).setName("Marnie").initForGymLeader(Fe.MARNIE,!1,L.DARK,!1,-4).setHasDouble("marnie_piers_double").setDoubleTrainerType(l.PIERS).setDoubleTitle("gym_leader_double").setMixedBattleBgm("battle_galar_gym"),[l.RAIHAN]:new z(++j).setName("Raihan").initForGymLeader(Fe.RAIHAN,!0,L.DRAGON,!1,-1).setMixedBattleBgm("battle_galar_gym"),[l.KATY]:new z(++j).initForGymLeader(Fe.KATY,!1,L.BUG,!0,-1).setMixedBattleBgm("battle_paldea_gym"),[l.BRASSIUS]:new z(++j).initForGymLeader(Fe.BRASSIUS,!0,L.GRASS,!0,-1).setMixedBattleBgm("battle_paldea_gym"),[l.IONO]:new z(++j).initForGymLeader(Fe.IONO,!1,L.ELECTRIC,!0,-1).setMixedBattleBgm("battle_paldea_gym"),[l.KOFU]:new z(++j).initForGymLeader(Fe.KOFU,!0,L.WATER,!0,-1).setMixedBattleBgm("battle_paldea_gym"),[l.LARRY]:new z(++j).setName("Larry").initForGymLeader(Fe.LARRY,!0,L.NORMAL,!0,-1).setMixedBattleBgm("battle_paldea_gym"),[l.RYME]:new z(++j).initForGymLeader(Fe.RYME,!1,L.GHOST,!0,-1).setMixedBattleBgm("battle_paldea_gym"),[l.TULIP]:new z(++j).initForGymLeader(Fe.TULIP,!1,L.PSYCHIC,!0,-1).setMixedBattleBgm("battle_paldea_gym"),[l.GRUSHA]:new z(++j).initForGymLeader(Fe.GRUSHA,!0,L.ICE,!0,-1).setMixedBattleBgm("battle_paldea_gym"),[l.LORELEI]:new z(j=l.LORELEI).initForEliteFour(Fe.LORELEI,!1,L.ICE,2).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym").setPartyMemberFunc(0,g([e.DEWGONG],b.TRAINER,!0,t=>{t.abilityIndex=0,t.generateAndPopulateMoveset()})).setPartyMemberFunc(2,g([e.SLOWBRO,e.GALAR_SLOWBRO],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.moveset.some(E=>!Ne(E)&&E.moveId===A.ICE_BEAM)||(t.moveset[2]=new Ye(A.ICE_BEAM))})).setPartyMemberFunc(3,g([e.JYNX])).setPartyMemberFunc(4,g([e.CLOYSTER,e.ALOLA_SANDSLASH])).setPartyMemberFunc(5,g([e.LAPRAS],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.BRUNO]:new z(++j).initForEliteFour(Fe.BRUNO,!0,L.FIGHTING,2).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym").setPartyMemberFunc(0,g([e.HITMONLEE,e.HITMONCHAN,e.HITMONTOP])).setPartyMemberFunc(2,g([e.STEELIX],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.moveset.some(E=>!Ne(E)&&E.moveId===A.BODY_PRESS)||(t.moveset[2]=new Ye(A.BODY_PRESS))})).setPartyMemberFunc(3,g([e.POLIWRATH])).setPartyMemberFunc(4,g([e.ANNIHILAPE])).setPartyMemberFunc(5,g([e.MACHAMP],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.AGATHA]:new z(++j).initForEliteFour(Fe.AGATHA,!1,L.GHOST,2).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym").setPartyMemberFunc(0,g([e.MISMAGIUS])).setPartyMemberFunc(2,g([e.ARBOK,e.WEEZING],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.moveset.some(E=>!Ne(E)&&E.moveId===A.TERA_BLAST)||(t.moveset[2]=new Ye(A.TERA_BLAST))})).setPartyMemberFunc(3,g([e.ALOLA_MAROWAK])).setPartyMemberFunc(4,g([e.CURSOLA])).setPartyMemberFunc(5,g([e.GENGAR],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.LANCE]:new z(++j).setName("Lance").initForEliteFour(Fe.LANCE,!0,L.DRAGON,2).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym").setPartyMemberFunc(0,g([e.KINGDRA])).setPartyMemberFunc(2,g([e.GYARADOS,e.AERODACTYL],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.moveset.some(E=>!Ne(E)&&E.moveId===A.TERA_BLAST)||(t.moveset[2]=new Ye(A.TERA_BLAST))})).setPartyMemberFunc(3,g([e.ALOLA_EXEGGUTOR])).setPartyMemberFunc(4,g([e.SALAMENCE])).setPartyMemberFunc(5,g([e.DRAGONITE],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.WILL]:new z(++j).initForEliteFour(Fe.WILL,!0,L.PSYCHIC,2).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym").setPartyMemberFunc(0,g([e.JYNX])).setPartyMemberFunc(2,g([e.SLOWKING,e.GALAR_SLOWKING])).setPartyMemberFunc(3,g([e.EXEGGUTOR])).setPartyMemberFunc(4,g([e.WYRDEER,e.FARIGIRAF])).setPartyMemberFunc(5,g([e.XATU],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.KOGA]:new z(++j).initForEliteFour(Fe.KOGA,!0,L.POISON,2).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym").setPartyMemberFunc(0,g([e.VENOMOTH],b.TRAINER,!0,t=>{t.abilityIndex=1,t.generateAndPopulateMoveset()})).setPartyMemberFunc(2,g([e.MUK,e.WEEZING])).setPartyMemberFunc(3,g([e.TENTACRUEL])).setPartyMemberFunc(4,g([e.SNEASLER,e.OVERQWIL])).setPartyMemberFunc(5,g([e.CROBAT],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.KAREN]:new z(++j).initForEliteFour(Fe.KAREN,!1,L.DARK,2).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym").setPartyMemberFunc(0,g([e.UMBREON])).setPartyMemberFunc(2,g([e.GENGAR],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.moveset.some(E=>!Ne(E)&&E.moveId===A.DARK_PULSE)||(t.moveset[2]=new Ye(A.DARK_PULSE))})).setPartyMemberFunc(3,g([e.HONCHKROW])).setPartyMemberFunc(4,g([e.WEAVILE])).setPartyMemberFunc(5,g([e.HOUNDOOM],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.SIDNEY]:new z(++j).initForEliteFour(Fe.SIDNEY,!0,L.DARK,2).setMixedBattleBgm("battle_hoenn_elite").setPartyMemberFunc(0,g([e.MIGHTYENA],b.TRAINER,!0,t=>{t.abilityIndex=0,t.generateAndPopulateMoveset()})).setPartyMemberFunc(2,g([e.OBSTAGOON])).setPartyMemberFunc(3,g([e.SHIFTRY,e.CACTURNE])).setPartyMemberFunc(4,g([e.SHARPEDO,e.CRAWDAUNT])).setPartyMemberFunc(5,g([e.ABSOL],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.PHOEBE]:new z(++j).initForEliteFour(Fe.PHOEBE,!1,L.GHOST,2).setMixedBattleBgm("battle_hoenn_elite").setPartyMemberFunc(0,g([e.SABLEYE])).setPartyMemberFunc(2,g([e.BANETTE])).setPartyMemberFunc(3,g([e.DRIFBLIM,e.MISMAGIUS])).setPartyMemberFunc(4,g([e.ORICORIO,e.ALOLA_MAROWAK],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.formIndex=t.species.speciesId===e.ORICORIO?3:0})).setPartyMemberFunc(5,g([e.DUSKNOIR],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.GLACIA]:new z(++j).initForEliteFour(Fe.GLACIA,!1,L.ICE,2).setMixedBattleBgm("battle_hoenn_elite").setPartyMemberFunc(0,g([e.ABOMASNOW],b.TRAINER,!0,t=>{t.abilityIndex=0,t.generateAndPopulateMoveset()})).setPartyMemberFunc(2,g([e.GLALIE])).setPartyMemberFunc(3,g([e.FROSLASS])).setPartyMemberFunc(4,g([e.ALOLA_NINETALES])).setPartyMemberFunc(5,g([e.WALREIN],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.DRAKE]:new z(++j).initForEliteFour(Fe.DRAKE,!0,L.DRAGON,2).setMixedBattleBgm("battle_hoenn_elite").setPartyMemberFunc(0,g([e.ALTARIA])).setPartyMemberFunc(2,g([e.DHELMISE],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.moveset.some(E=>!Ne(E)&&E.moveId===A.TERA_BLAST)||(t.moveset[2]=new Ye(A.TERA_BLAST))})).setPartyMemberFunc(3,g([e.FLYGON])).setPartyMemberFunc(4,g([e.KINGDRA])).setPartyMemberFunc(5,g([e.SALAMENCE],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.AARON]:new z(++j).initForEliteFour(Fe.AARON,!0,L.BUG,5).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym").setPartyMemberFunc(0,g([e.YANMEGA])).setPartyMemberFunc(2,g([e.HERACROSS])).setPartyMemberFunc(3,g([e.VESPIQUEN])).setPartyMemberFunc(4,g([e.SCIZOR,e.KLEAVOR])).setPartyMemberFunc(5,g([e.DRAPION],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.abilityIndex=1,t.generateAndPopulateMoveset(),t.moveset.some(E=>!Ne(E)&&E.moveId===A.X_SCISSOR)||(t.moveset[2]=new Ye(A.X_SCISSOR))})),[l.BERTHA]:new z(++j).initForEliteFour(Fe.BERTHA,!1,L.GROUND,2).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym").setPartyMemberFunc(0,g([e.WHISCASH])).setPartyMemberFunc(2,g([e.HIPPOWDON],b.TRAINER,!0,t=>{t.abilityIndex=0,t.generateAndPopulateMoveset()})).setPartyMemberFunc(3,g([e.GLISCOR])).setPartyMemberFunc(4,g([e.MAMOSWINE,e.URSALUNA])).setPartyMemberFunc(5,g([e.RHYPERIOR],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.abilityIndex=1,t.generateAndPopulateMoveset()})),[l.FLINT]:new z(++j).initForEliteFour(Fe.FLINT,!0,L.FIRE,2).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym").setPartyMemberFunc(0,g([e.RAPIDASH])).setPartyMemberFunc(2,g([e.STEELIX,e.LOPUNNY],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.moveset.some(E=>!Ne(E)&&E.moveId===A.TERA_BLAST)||(t.moveset[2]=new Ye(A.TERA_BLAST))})).setPartyMemberFunc(3,g([e.INFERNAPE])).setPartyMemberFunc(4,g([e.ARCANINE,e.HISUI_ARCANINE])).setPartyMemberFunc(5,g([e.MAGMORTAR],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.LUCIAN]:new z(++j).initForEliteFour(Fe.LUCIAN,!0,L.PSYCHIC,2).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym").setPartyMemberFunc(0,g([e.ESPEON,e.ALAKAZAM])).setPartyMemberFunc(2,g([e.FARIGIRAF])).setPartyMemberFunc(3,g([e.BRONZONG])).setPartyMemberFunc(4,g([e.MR_RIME,e.HISUI_BRAVIARY])).setPartyMemberFunc(5,g([e.GALLADE],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.abilityIndex=1,t.generateAndPopulateMoveset()})),[l.SHAUNTAL]:new z(++j).initForEliteFour(Fe.SHAUNTAL,!1,L.GHOST,2).setMixedBattleBgm("battle_unova_elite").setPartyMemberFunc(0,g([e.COFAGRIGUS])).setPartyMemberFunc(2,g([e.GOLURK])).setPartyMemberFunc(3,g([e.JELLICENT])).setPartyMemberFunc(4,g([e.MISMAGIUS,e.FROSLASS])).setPartyMemberFunc(5,g([e.CHANDELURE],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.MARSHAL]:new z(++j).initForEliteFour(Fe.MARSHAL,!0,L.FIGHTING,2).setMixedBattleBgm("battle_unova_elite").setPartyMemberFunc(0,g([e.THROH,e.SAWK])).setPartyMemberFunc(2,g([e.MIENSHAO])).setPartyMemberFunc(3,g([e.EMBOAR])).setPartyMemberFunc(4,g([e.BRELOOM,e.TOXICROAK])).setPartyMemberFunc(5,g([e.CONKELDURR],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.GRIMSLEY]:new z(++j).initForEliteFour(Fe.GRIMSLEY,!0,L.DARK,2).setMixedBattleBgm("battle_unova_elite").setPartyMemberFunc(0,g([e.LIEPARD])).setPartyMemberFunc(2,g([e.KROOKODILE])).setPartyMemberFunc(3,g([e.SCRAFTY])).setPartyMemberFunc(4,g([e.ZOROARK,e.HISUI_SAMUROTT])).setPartyMemberFunc(5,g([e.KINGAMBIT],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.CAITLIN]:new z(++j).initForEliteFour(Fe.CAITLIN,!1,L.PSYCHIC,2).setMixedBattleBgm("battle_unova_elite").setPartyMemberFunc(0,g([e.MUSHARNA])).setPartyMemberFunc(2,g([e.REUNICLUS])).setPartyMemberFunc(3,g([e.GALLADE],b.TRAINER,!0,t=>{t.abilityIndex=1,t.generateAndPopulateMoveset()})).setPartyMemberFunc(4,g([e.SIGILYPH,e.HISUI_BRAVIARY])).setPartyMemberFunc(5,g([e.GOTHITELLE],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.MALVA]:new z(++j).initForEliteFour(Fe.MALVA,!1,L.FIRE,2).setMixedBattleBgm("battle_kalos_elite").setPartyMemberFunc(0,g([e.PYROAR],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.gender=ye.FEMALE})).setPartyMemberFunc(2,g([e.HOUNDOOM])).setPartyMemberFunc(3,g([e.TORKOAL],b.TRAINER,!0,t=>{t.abilityIndex=1,t.generateAndPopulateMoveset()})).setPartyMemberFunc(4,g([e.CHANDELURE,e.DELPHOX])).setPartyMemberFunc(5,g([e.TALONFLAME],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.SIEBOLD]:new z(++j).initForEliteFour(Fe.SIEBOLD,!0,L.WATER,2).setMixedBattleBgm("battle_kalos_elite").setPartyMemberFunc(0,g([e.CLAWITZER])).setPartyMemberFunc(2,g([e.GYARADOS])).setPartyMemberFunc(3,g([e.STARMIE])).setPartyMemberFunc(4,g([e.BLASTOISE,e.DONDOZO])).setPartyMemberFunc(5,g([e.BARBARACLE],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.abilityIndex=1,t.generateAndPopulateMoveset()})),[l.WIKSTROM]:new z(++j).initForEliteFour(Fe.WIKSTROM,!0,L.STEEL,2).setMixedBattleBgm("battle_kalos_elite").setPartyMemberFunc(0,g([e.KLEFKI])).setPartyMemberFunc(2,g([e.CERULEDGE],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.moveset.some(E=>!Ne(E)&&E.moveId===A.IRON_HEAD)||(t.moveset[2]=new Ye(A.IRON_HEAD))})).setPartyMemberFunc(3,g([e.SCIZOR])).setPartyMemberFunc(4,g([e.CORVIKNIGHT])).setPartyMemberFunc(5,g([e.AEGISLASH],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.DRASNA]:new z(++j).initForEliteFour(Fe.DRASNA,!1,L.DRAGON,2).setMixedBattleBgm("battle_kalos_elite").setPartyMemberFunc(0,g([e.DRAGALGE])).setPartyMemberFunc(2,g([e.GARCHOMP])).setPartyMemberFunc(3,g([e.ALTARIA])).setPartyMemberFunc(4,g([e.DRUDDIGON])).setPartyMemberFunc(5,g([e.NOIVERN],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.HALA]:new z(++j).initForEliteFour(Fe.HALA,!0,L.FIGHTING,2).setMixedBattleBgm("battle_alola_elite").setPartyMemberFunc(0,g([e.HARIYAMA])).setPartyMemberFunc(2,g([e.INCINEROAR],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.moveset.some(E=>!Ne(E)&&E.moveId===A.CROSS_CHOP)||(t.moveset[2]=new Ye(A.CROSS_CHOP))})).setPartyMemberFunc(3,g([e.BEWEAR])).setPartyMemberFunc(4,g([e.POLIWRATH,e.ANNIHILAPE])).setPartyMemberFunc(5,g([e.CRABOMINABLE],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.MOLAYNE]:new z(++j).initForEliteFour(Fe.MOLAYNE,!0,L.STEEL,2).setMixedBattleBgm("battle_alola_elite").setPartyMemberFunc(0,g([e.KLEFKI])).setPartyMemberFunc(2,g([e.ALOLA_SANDSLASH])).setPartyMemberFunc(3,g([e.MAGNEZONE])).setPartyMemberFunc(4,g([e.METAGROSS,e.KINGAMBIT])).setPartyMemberFunc(5,g([e.ALOLA_DUGTRIO],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.OLIVIA]:new z(++j).initForEliteFour(Fe.OLIVIA,!1,L.ROCK,2).setMixedBattleBgm("battle_alola_elite").setPartyMemberFunc(0,g([e.GIGALITH],b.TRAINER,!0,t=>{t.abilityIndex=1,t.generateAndPopulateMoveset()})).setPartyMemberFunc(2,g([e.PROBOPASS])).setPartyMemberFunc(3,g([e.ALOLA_GOLEM])).setPartyMemberFunc(4,g([e.RELICANTH,e.CARBINK])).setPartyMemberFunc(5,g([e.LYCANROC],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.formIndex=1,t.generateAndPopulateMoveset()})),[l.ACEROLA]:new z(++j).initForEliteFour(Fe.ACEROLA,!1,L.GHOST,2).setMixedBattleBgm("battle_alola_elite").setPartyMemberFunc(0,g([e.DRIFBLIM])).setPartyMemberFunc(2,g([e.MIMIKYU])).setPartyMemberFunc(3,g([e.DHELMISE])).setPartyMemberFunc(4,g([e.FROSLASS])).setPartyMemberFunc(5,g([e.PALOSSAND],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.KAHILI]:new z(++j).initForEliteFour(Fe.KAHILI,!1,L.FLYING,2).setMixedBattleBgm("battle_alola_elite").setPartyMemberFunc(0,g([e.HAWLUCHA])).setPartyMemberFunc(2,g([e.DECIDUEYE],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.moveset.some(E=>!Ne(E)&&E.moveId===A.BRAVE_BIRD)||(t.moveset[2]=new Ye(A.BRAVE_BIRD))})).setPartyMemberFunc(3,g([e.BRAVIARY,e.MANDIBUZZ])).setPartyMemberFunc(4,g([e.ORICORIO])).setPartyMemberFunc(5,g([e.TOUCANNON],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.MARNIE_ELITE]:new z(++j).setName("Marnie").initForEliteFour(Fe.MARNIE_ELITE,!1,L.DARK,2).setMixedBattleBgm("battle_galar_elite").setPartyMemberFunc(0,g([e.LIEPARD])).setPartyMemberFunc(2,g([e.TOXICROAK],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.moveset.some(E=>!Ne(E)&&E.moveId===A.SUCKER_PUNCH)||(t.moveset[2]=new Ye(A.SUCKER_PUNCH))})).setPartyMemberFunc(3,g([e.SCRAFTY,e.PANGORO])).setPartyMemberFunc(4,g([e.MORPEKO])).setPartyMemberFunc(5,g([e.GRIMMSNARL],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.NESSA_ELITE]:new z(++j).setName("Nessa").initForEliteFour(Fe.NESSA_ELITE,!1,L.WATER,2).setMixedBattleBgm("battle_galar_elite").setPartyMemberFunc(0,g([e.GOLISOPOD])).setPartyMemberFunc(2,g([e.EISCUE],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.moveset.some(E=>!Ne(E)&&E.moveId===A.LIQUIDATION)||(t.moveset[2]=new Ye(A.LIQUIDATION))})).setPartyMemberFunc(3,g([e.PELIPPER],b.TRAINER,!0,t=>{t.abilityIndex=1,t.generateAndPopulateMoveset()})).setPartyMemberFunc(4,g([e.TOXAPEX])).setPartyMemberFunc(5,g([e.DREDNAW],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.BEA_ELITE]:new z(++j).setName("Bea").initForEliteFour(Fe.BEA_ELITE,!1,L.FIGHTING,2).setMixedBattleBgm("battle_galar_elite").setPartyMemberFunc(0,g([e.HAWLUCHA])).setPartyMemberFunc(2,g([e.SIRFETCHD])).setPartyMemberFunc(3,g([e.GRAPPLOCT,e.FALINKS])).setPartyMemberFunc(4,g([e.HITMONTOP])).setPartyMemberFunc(5,g([e.MACHAMP],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.ALLISTER_ELITE]:new z(++j).setName("Allister").initForEliteFour(Fe.ALLISTER_ELITE,!0,L.GHOST,2).setMixedBattleBgm("battle_galar_elite").setPartyMemberFunc(0,g([e.DUSKNOIR])).setPartyMemberFunc(2,g([e.RUNERIGUS])).setPartyMemberFunc(3,g([e.POLTEAGEIST,e.SINISTCHA])).setPartyMemberFunc(4,g([e.CURSOLA])).setPartyMemberFunc(5,g([e.GENGAR],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.RAIHAN_ELITE]:new z(++j).setName("Raihan").initForEliteFour(Fe.RAIHAN_ELITE,!0,L.DRAGON,2).setMixedBattleBgm("battle_galar_elite").setPartyMemberFunc(0,g([e.FLYGON])).setPartyMemberFunc(2,g([e.TORKOAL],b.TRAINER,!0,t=>{t.abilityIndex=1,t.generateAndPopulateMoveset(),t.moveset.some(E=>!Ne(E)&&E.moveId===A.TERA_BLAST)||(t.moveset[2]=new Ye(A.TERA_BLAST))})).setPartyMemberFunc(3,g([e.GOODRA])).setPartyMemberFunc(4,g([e.TURTONATOR])).setPartyMemberFunc(5,g([e.ARCHALUDON],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.RIKA]:new z(++j).initForEliteFour(Fe.RIKA,!1,L.GROUND,5).setMixedBattleBgm("battle_paldea_elite").setPartyMemberFunc(0,g([e.DUGTRIO])).setPartyMemberFunc(2,g([e.DONPHAN])).setPartyMemberFunc(3,g([e.SWAMPERT,e.TORTERRA])).setPartyMemberFunc(4,g([e.CAMERUPT])).setPartyMemberFunc(5,g([e.CLODSIRE],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.POPPY]:new z(++j).initForEliteFour(Fe.POPPY,!1,L.STEEL,5).setMixedBattleBgm("battle_paldea_elite").setPartyMemberFunc(0,g([e.COPPERAJAH])).setPartyMemberFunc(2,g([e.MAGNEZONE])).setPartyMemberFunc(3,g([e.BRONZONG,e.CORVIKNIGHT],b.TRAINER,!0,t=>{t.abilityIndex=t.species.speciesId===e.BRONZONG?0:1,t.generateAndPopulateMoveset()})).setPartyMemberFunc(4,g([e.STEELIX])).setPartyMemberFunc(5,g([e.TINKATON],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.LARRY_ELITE]:new z(++j).setName("Larry").initForEliteFour(Fe.LARRY_ELITE,!0,L.FLYING,5).setMixedBattleBgm("battle_paldea_elite").setPartyMemberFunc(0,g([e.ALTARIA])).setPartyMemberFunc(2,g([e.BOMBIRDIER])).setPartyMemberFunc(3,g([e.TROPIUS])).setPartyMemberFunc(4,g([e.STARAPTOR])).setPartyMemberFunc(5,g([e.FLAMIGO],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.HASSEL]:new z(++j).initForEliteFour(Fe.HASSEL,!0,L.DRAGON,5).setMixedBattleBgm("battle_paldea_elite").setPartyMemberFunc(0,g([e.NOIVERN])).setPartyMemberFunc(2,g([e.DRAGALGE])).setPartyMemberFunc(3,g([e.FLAPPLE,e.APPLETUN,e.HYDRAPPLE])).setPartyMemberFunc(4,g([e.HAXORUS])).setPartyMemberFunc(5,g([e.BAXCALIBUR],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.CRISPIN]:new z(++j).initForEliteFour(Fe.CRISPIN,!0,L.FIRE,2).setMixedBattleBgm("battle_bb_elite").setPartyMemberFunc(0,g([e.ROTOM],b.TRAINER,!0,t=>{t.formIndex=1,t.generateAndPopulateMoveset()})).setPartyMemberFunc(2,g([e.EXEGGUTOR],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.moveset.some(E=>!Ne(E)&&E.moveId===A.TERA_BLAST)||(t.moveset[2]=new Ye(A.TERA_BLAST))})).setPartyMemberFunc(3,g([e.TALONFLAME],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.moveset.some(E=>!Ne(E)&&E.moveId===A.SUNNY_DAY)||(t.moveset[2]=new Ye(A.SUNNY_DAY))})).setPartyMemberFunc(4,g([e.MAGMORTAR])).setPartyMemberFunc(5,g([e.BLAZIKEN],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.AMARYS]:new z(++j).initForEliteFour(Fe.AMARYS,!1,L.STEEL,2).setMixedBattleBgm("battle_bb_elite").setPartyMemberFunc(0,g([e.SKARMORY])).setPartyMemberFunc(2,g([e.REUNICLUS],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.moveset.some(E=>!Ne(E)&&E.moveId===A.FLASH_CANNON)||(t.moveset[2]=new Ye(A.FLASH_CANNON))})).setPartyMemberFunc(3,g([e.EMPOLEON])).setPartyMemberFunc(4,g([e.SCIZOR])).setPartyMemberFunc(5,g([e.METAGROSS],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.LACEY]:new z(++j).initForEliteFour(Fe.LACEY,!1,L.FAIRY,5).setMixedBattleBgm("battle_bb_elite").setPartyMemberFunc(0,g([e.WHIMSICOTT])).setPartyMemberFunc(2,g([e.PRIMARINA])).setPartyMemberFunc(3,g([e.GRANBULL])).setPartyMemberFunc(4,g([e.ALCREMIE])).setPartyMemberFunc(5,g([e.EXCADRILL],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.moveset.some(E=>!Ne(E)&&E.moveId===A.TERA_BLAST)||(t.moveset[2]=new Ye(A.TERA_BLAST))})),[l.DRAYTON]:new z(++j).initForEliteFour(Fe.DRAYTON,!0,L.DRAGON,2).setMixedBattleBgm("battle_bb_elite").setPartyMemberFunc(0,g([e.DRAGONITE])).setPartyMemberFunc(2,g([e.SCEPTILE],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.moveset.some(E=>!Ne(E)&&E.moveId===A.DUAL_CHOP)||(t.moveset[2]=new Ye(A.DUAL_CHOP))})).setPartyMemberFunc(3,g([e.HAXORUS])).setPartyMemberFunc(4,g([e.KINGDRA,e.DRACOVISH])).setPartyMemberFunc(5,g([e.ARCHALUDON],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})),[l.BLUE]:new z(j=l.BLUE).initForChampion(!0).setBattleBgm("battle_kanto_champion").setMixedBattleBgm("battle_kanto_champion").setHasDouble("blue_red_double").setDoubleTrainerType(l.RED).setDoubleTitle("champion_double").setPartyMemberFunc(0,g([e.ALAKAZAM])).setPartyMemberFunc(1,g([e.MACHAMP])).setPartyMemberFunc(2,g([e.HO_OH],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.MASTER_BALL})).setPartyMemberFunc(3,g([e.RHYPERIOR,e.ELECTIVIRE])).setPartyMemberFunc(4,g([e.ARCANINE,e.EXEGGUTOR,e.GYARADOS],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.setBoss(!0,2)})).setPartyMemberFunc(5,g([e.PIDGEOT],b.TRAINER,!0,t=>{t.formIndex=1,t.generateAndPopulateMoveset(),t.generateName(),t.gender=ye.MALE})).setInstantTera(3),[l.RED]:new z(++j).initForChampion(!0).setBattleBgm("battle_johto_champion").setMixedBattleBgm("battle_johto_champion").setHasDouble("red_blue_double").setDoubleTrainerType(l.BLUE).setDoubleTitle("champion_double").setPartyMemberFunc(0,g([e.PIKACHU],b.TRAINER,!0,t=>{t.formIndex=8,t.generateAndPopulateMoveset(),t.generateName(),t.gender=ye.MALE})).setPartyMemberFunc(1,g([e.ESPEON,e.UMBREON,e.SYLVEON])).setPartyMemberFunc(2,g([e.LUGIA],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.MASTER_BALL})).setPartyMemberFunc(3,g([e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR])).setPartyMemberFunc(4,g([e.SNORLAX],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.setBoss(!0,2)})).setPartyMemberFunc(5,g([e.VENUSAUR,e.CHARIZARD,e.BLASTOISE],b.TRAINER,!0,t=>{t.formIndex=1,t.generateAndPopulateMoveset(),t.generateName(),t.gender=ye.MALE})).setInstantTera(3),[l.LANCE_CHAMPION]:new z(++j).setName("Lance").initForChampion(!0).setBattleBgm("battle_johto_champion").setMixedBattleBgm("battle_johto_champion").setPartyMemberFunc(0,g([e.GYARADOS,e.KINGDRA])).setPartyMemberFunc(1,g([e.AERODACTYL])).setPartyMemberFunc(2,g([e.SALAMENCE],b.TRAINER,!0,t=>{t.formIndex=1,t.generateAndPopulateMoveset(),t.generateName()})).setPartyMemberFunc(3,g([e.CHARIZARD])).setPartyMemberFunc(4,g([e.TYRANITAR,e.GARCHOMP,e.KOMMO_O],b.TRAINER,!0,t=>{t.teraType=L.DRAGON,t.generateAndPopulateMoveset(),t.abilityIndex=t.species.speciesId===e.KOMMO_O?1:2})).setPartyMemberFunc(5,g([e.DRAGONITE],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.gender=ye.MALE,t.setBoss(!0,2)})).setInstantTera(4),[l.STEVEN]:new z(++j).initForChampion(!0).setBattleBgm("battle_hoenn_champion_g5").setMixedBattleBgm("battle_hoenn_champion_g6").setHasDouble("steven_wallace_double").setDoubleTrainerType(l.WALLACE).setDoubleTitle("champion_double").setPartyMemberFunc(0,g([e.SKARMORY])).setPartyMemberFunc(1,g([e.CRADILY,e.ARMALDO])).setPartyMemberFunc(2,g([e.AGGRON],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.setBoss(!0,2)})).setPartyMemberFunc(3,g([e.GOLURK,e.RUNERIGUS])).setPartyMemberFunc(4,g([e.REGIROCK,e.REGICE,e.REGISTEEL],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL})).setPartyMemberFunc(5,g([e.METAGROSS],b.TRAINER,!0,t=>{t.formIndex=1,t.generateAndPopulateMoveset(),t.generateName()})).setInstantTera(4),[l.WALLACE]:new z(++j).initForChampion(!0).setBattleBgm("battle_hoenn_champion_g5").setMixedBattleBgm("battle_hoenn_champion_g6").setHasDouble("wallace_steven_double").setDoubleTrainerType(l.STEVEN).setDoubleTitle("champion_double").setPartyMemberFunc(0,g([e.PELIPPER],b.TRAINER,!0,t=>{t.abilityIndex=1,t.generateAndPopulateMoveset()})).setPartyMemberFunc(1,g([e.LUDICOLO])).setPartyMemberFunc(2,g([e.LATIAS,e.LATIOS],b.TRAINER,!0,t=>{t.formIndex=1,t.generateAndPopulateMoveset(),t.generateName(),t.pokeball=Me.MASTER_BALL})).setPartyMemberFunc(3,g([e.SWAMPERT,e.GASTRODON,e.SEISMITOAD])).setPartyMemberFunc(4,g([e.REGIELEKI,e.REGIDRAGO],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL})).setPartyMemberFunc(5,g([e.MILOTIC],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.gender=ye.FEMALE,t.setBoss(!0,2)})).setInstantTera(4),[l.CYNTHIA]:new z(++j).initForChampion(!1).setBattleBgm("battle_sinnoh_champion").setMixedBattleBgm("battle_sinnoh_champion").setPartyMemberFunc(0,g([e.SPIRITOMB])).setPartyMemberFunc(1,g([e.LUCARIO])).setPartyMemberFunc(2,g([e.GIRATINA],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.MASTER_BALL})).setPartyMemberFunc(3,g([e.MILOTIC,e.ROSERADE,e.HISUI_ARCANINE],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.teraType=t.species.type1})).setPartyMemberFunc(4,g([e.TOGEKISS],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.setBoss(!0,2)})).setPartyMemberFunc(5,g([e.GARCHOMP],b.TRAINER,!0,t=>{t.formIndex=1,t.generateAndPopulateMoveset(),t.generateName(),t.gender=ye.FEMALE})).setInstantTera(3),[l.ALDER]:new z(++j).initForChampion(!0).setHasDouble("alder_iris_double").setDoubleTrainerType(l.IRIS).setDoubleTitle("champion_double").setBattleBgm("battle_champion_alder").setMixedBattleBgm("battle_champion_alder").setPartyMemberFunc(0,g([e.BOUFFALANT,e.BRAVIARY])).setPartyMemberFunc(1,g([e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.BASCULEGION],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ROGUE_BALL})).setPartyMemberFunc(2,g([e.ZEKROM],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.MASTER_BALL})).setPartyMemberFunc(3,g([e.KELDEO],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL})).setPartyMemberFunc(4,g([e.CHANDELURE,e.KROOKODILE,e.REUNICLUS,e.CONKELDURR],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.teraType=t.species.speciesId===e.KROOKODILE?L.DARK:t.species.type1})).setPartyMemberFunc(5,g([e.VOLCARONA],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.gender=ye.MALE,t.setBoss(!0,2)})).setInstantTera(4),[l.IRIS]:new z(++j).initForChampion(!1).setBattleBgm("battle_champion_iris").setMixedBattleBgm("battle_champion_iris").setHasDouble("iris_alder_double").setDoubleTrainerType(l.ALDER).setDoubleTitle("champion_double").setPartyMemberFunc(0,g([e.DRUDDIGON])).setPartyMemberFunc(1,g([e.ARCHEOPS])).setPartyMemberFunc(2,g([e.RESHIRAM],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.MASTER_BALL})).setPartyMemberFunc(3,g([e.SALAMENCE,e.HYDREIGON,e.ARCHALUDON],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.teraType=L.DRAGON})).setPartyMemberFunc(4,g([e.LAPRAS],b.TRAINER,!0,t=>{t.formIndex=1,t.generateAndPopulateMoveset(),t.generateName()})).setPartyMemberFunc(5,g([e.HAXORUS],b.TRAINER,!0,t=>{t.abilityIndex=1,t.generateAndPopulateMoveset(),t.gender=ye.FEMALE,t.setBoss(!0,2)})).setInstantTera(3),[l.DIANTHA]:new z(++j).initForChampion(!1).setMixedBattleBgm("battle_kalos_champion").setPartyMemberFunc(0,g([e.HAWLUCHA],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset()})).setPartyMemberFunc(1,g([e.TREVENANT,e.GOURGEIST])).setPartyMemberFunc(2,g([e.XERNEAS],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.MASTER_BALL})).setPartyMemberFunc(3,g([e.TYRANTRUM,e.AURORUS],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.abilityIndex=2,t.teraType=t.species.type2})).setPartyMemberFunc(4,g([e.GOODRA],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.setBoss(!0,2)})).setPartyMemberFunc(5,g([e.GARDEVOIR],b.TRAINER,!0,t=>{t.formIndex=1,t.generateAndPopulateMoveset(),t.generateName(),t.gender=ye.FEMALE})).setInstantTera(3),[l.KUKUI]:new z(++j).initForChampion(!0).setMixedBattleBgm("battle_champion_kukui").setPartyMemberFunc(0,g([e.LYCANROC],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.formIndex=2})).setPartyMemberFunc(1,g([e.MAGNEZONE,e.ALOLA_NINETALES])).setPartyMemberFunc(2,g([e.TORNADUS,e.THUNDURUS,e.LANDORUS],b.TRAINER,!0,t=>{t.formIndex=1,t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL})).setPartyMemberFunc(3,g([e.TAPU_KOKO,e.TAPU_FINI],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.setBoss(!0,2),t.pokeball=Me.ULTRA_BALL})).setPartyMemberFunc(4,g([e.SNORLAX],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.formIndex=1})).setPartyMemberFunc(5,g([e.INCINEROAR,e.HISUI_DECIDUEYE],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.gender=ye.MALE,t.teraType=t.species.type2})).setInstantTera(5),[l.HAU]:new z(++j).initForChampion(!0).setMixedBattleBgm("battle_alola_champion").setPartyMemberFunc(0,g([e.ALOLA_RAICHU])).setPartyMemberFunc(1,g([e.NOIVERN])).setPartyMemberFunc(2,g([e.SOLGALEO],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.MASTER_BALL})).setPartyMemberFunc(3,g([e.TAPU_LELE,e.TAPU_BULU],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL,t.teraType=t.species.type1})).setPartyMemberFunc(4,g([e.ZYGARDE],b.TRAINER,!0,t=>{t.formIndex=1,t.generateAndPopulateMoveset(),t.pokeball=Me.ROGUE_BALL})).setPartyMemberFunc(5,g([e.DECIDUEYE,e.PRIMARINA],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.setBoss(!0,2),t.gender=t.species.speciesId===e.PRIMARINA?ye.FEMALE:ye.MALE})).setInstantTera(3),[l.LEON]:new z(++j).initForChampion(!0).setMixedBattleBgm("battle_galar_champion").setPartyMemberFunc(0,g([e.AEGISLASH])).setPartyMemberFunc(1,g([e.RHYPERIOR,e.SEISMITOAD,e.MR_RIME])).setPartyMemberFunc(2,g([e.ZACIAN],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.MASTER_BALL})).setPartyMemberFunc(3,g([e.DRAGAPULT])).setPartyMemberFunc(4,g([e.RILLABOOM,e.CINDERACE,e.INTELEON],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.setBoss(!0,2)})).setPartyMemberFunc(5,g([e.CHARIZARD],b.TRAINER,!0,t=>{t.formIndex=3,t.generateAndPopulateMoveset(),t.generateName(),t.gender=ye.MALE})).setInstantTera(3),[l.MUSTARD]:new z(++j).initForChampion(!0).setMixedBattleBgm("battle_mustard").setPartyMemberFunc(0,g([e.CORVIKNIGHT],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL})).setPartyMemberFunc(1,g([e.KOMMO_O],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL})).setPartyMemberFunc(2,g([e.GALAR_SLOWBRO,e.GALAR_SLOWKING],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL,t.teraType=t.species.type1})).setPartyMemberFunc(3,g([e.GALAR_DARMANITAN],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL})).setPartyMemberFunc(4,g([e.BLASTOISE,e.VENUSAUR],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.setBoss(!0,2),t.pokeball=Me.ULTRA_BALL})).setPartyMemberFunc(5,g([e.URSHIFU],b.TRAINER,!0,t=>{t.formIndex=p1(2,3),t.generateAndPopulateMoveset(),t.generateName(),t.gender=ye.MALE,t.pokeball=Me.ULTRA_BALL})).setInstantTera(2),[l.GEETA]:new z(++j).initForChampion(!1).setMixedBattleBgm("battle_champion_geeta").setPartyMemberFunc(0,g([e.GLIMMORA],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.gender=ye.MALE,t.setBoss(!0,2)})).setPartyMemberFunc(1,g([e.ESPATHRA,e.VELUZA])).setPartyMemberFunc(2,g([e.MIRAIDON],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.MASTER_BALL})).setPartyMemberFunc(3,g([e.BAXCALIBUR])).setPartyMemberFunc(4,g([e.CHESNAUGHT,e.DELPHOX,e.GRENINJA])).setPartyMemberFunc(5,g([e.KINGAMBIT],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.moveset.some(E=>!Ne(E)&&E.moveId===A.TERA_BLAST)||(t.moveset[2]=new Ye(A.TERA_BLAST)),t.abilityIndex=1,t.teraType=L.FLYING})).setInstantTera(5),[l.NEMONA]:new z(++j).initForChampion(!1).setMixedBattleBgm("battle_champion_nemona").setPartyMemberFunc(0,g([e.LYCANROC],b.TRAINER,!0,t=>{t.formIndex=0,t.generateAndPopulateMoveset()})).setPartyMemberFunc(1,g([e.PAWMOT])).setPartyMemberFunc(2,g([e.KORAIDON],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.MASTER_BALL})).setPartyMemberFunc(3,g([e.GHOLDENGO])).setPartyMemberFunc(4,g([e.ARMAROUGE,e.CERULEDGE],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.teraType=t.species.type2})).setPartyMemberFunc(5,g([e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.gender=ye.MALE,t.setBoss(!0,2)})).setInstantTera(4),[l.KIERAN]:new z(++j).initForChampion(!0).setMixedBattleBgm("battle_champion_kieran").setPartyMemberFunc(0,g([e.POLIWRATH,e.POLITOED])).setPartyMemberFunc(1,g([e.INCINEROAR,e.GRIMMSNARL],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.abilityIndex=t.species.speciesId===e.INCINEROAR?2:0})).setPartyMemberFunc(2,g([e.TERAPAGOS],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.MASTER_BALL})).setPartyMemberFunc(3,g([e.URSALUNA,e.BLOODMOON_URSALUNA],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL})).setPartyMemberFunc(4,g([e.OGERPON],b.TRAINER,!0,t=>{t.formIndex=De(4),t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL,t.moveset.some(E=>!Ne(E)&&E.moveId===A.IVY_CUDGEL)||(t.moveset[0]=new Ye(A.IVY_CUDGEL))})).setPartyMemberFunc(5,g([e.HYDRAPPLE],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.gender=ye.MALE,t.setBoss(!0,2)})).setInstantTera(4),[l.RIVAL]:new z(j=l.RIVAL).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setStaticParty().setEncounterBgm(l.RIVAL).setBattleBgm("battle_rival").setMixedBattleBgm("battle_rival").setPartyTemplates(ue.RIVAL).setModifierRewardFuncs(()=>x.SUPER_EXP_CHARM,()=>x.EXP_SHARE).setPartyMemberFunc(0,g([e.BULBASAUR,e.CHARMANDER,e.SQUIRTLE,e.CHIKORITA,e.CYNDAQUIL,e.TOTODILE,e.TREECKO,e.TORCHIC,e.MUDKIP,e.TURTWIG,e.CHIMCHAR,e.PIPLUP,e.SNIVY,e.TEPIG,e.OSHAWOTT,e.CHESPIN,e.FENNEKIN,e.FROAKIE,e.ROWLET,e.LITTEN,e.POPPLIO,e.GROOKEY,e.SCORBUNNY,e.SOBBLE,e.SPRIGATITO,e.FUECOCO,e.QUAXLY],b.TRAINER,!0,t=>t.abilityIndex=0)).setPartyMemberFunc(1,g([e.PIDGEY,e.HOOTHOOT,e.TAILLOW,e.STARLY,e.PIDOVE,e.FLETCHLING,e.PIKIPEK,e.ROOKIDEE,e.WATTREL],b.TRAINER,!0)),[l.RIVAL_2]:new z(++j).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setStaticParty().setMoneyMultiplier(1.25).setEncounterBgm(l.RIVAL).setBattleBgm("battle_rival").setMixedBattleBgm("battle_rival").setPartyTemplates(ue.RIVAL_2).setModifierRewardFuncs(()=>x.EXP_SHARE).setPartyMemberFunc(0,g([e.IVYSAUR,e.CHARMELEON,e.WARTORTLE,e.BAYLEEF,e.QUILAVA,e.CROCONAW,e.GROVYLE,e.COMBUSKEN,e.MARSHTOMP,e.GROTLE,e.MONFERNO,e.PRINPLUP,e.SERVINE,e.PIGNITE,e.DEWOTT,e.QUILLADIN,e.BRAIXEN,e.FROGADIER,e.DARTRIX,e.TORRACAT,e.BRIONNE,e.THWACKEY,e.RABOOT,e.DRIZZILE,e.FLORAGATO,e.CROCALOR,e.QUAXWELL],b.TRAINER,!0,t=>t.abilityIndex=0)).setPartyMemberFunc(1,g([e.PIDGEOTTO,e.HOOTHOOT,e.TAILLOW,e.STARAVIA,e.TRANQUILL,e.FLETCHINDER,e.TRUMBEAK,e.CORVISQUIRE,e.WATTREL],b.TRAINER,!0)).setPartyMemberFunc(2,ST(t=>!BA.hasOwnProperty(t.speciesId)&&!CE.hasOwnProperty(t.speciesId)&&t.baseTotal>=450)),[l.RIVAL_3]:new z(++j).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setStaticParty().setMoneyMultiplier(1.5).setEncounterBgm(l.RIVAL).setBattleBgm("battle_rival").setMixedBattleBgm("battle_rival").setPartyTemplates(ue.RIVAL_3).setPartyMemberFunc(0,g([e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL],b.TRAINER,!0,t=>t.abilityIndex=0)).setPartyMemberFunc(1,g([e.PIDGEOT,e.NOCTOWL,e.SWELLOW,e.STARAPTOR,e.UNFEZANT,e.TALONFLAME,e.TOUCANNON,e.CORVIKNIGHT,e.KILOWATTREL],b.TRAINER,!0)).setPartyMemberFunc(2,ST(t=>!BA.hasOwnProperty(t.speciesId)&&!CE.hasOwnProperty(t.speciesId)&&t.baseTotal>=450)).setSpeciesFilter(t=>t.baseTotal>=540),[l.RIVAL_4]:new z(++j).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setBoss().setStaticParty().setMoneyMultiplier(1.75).setEncounterBgm(l.RIVAL).setBattleBgm("battle_rival_2").setMixedBattleBgm("battle_rival_2").setPartyTemplates(ue.RIVAL_4).setModifierRewardFuncs(()=>x.TERA_ORB).setPartyMemberFunc(0,g([e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL],b.TRAINER,!0,t=>{t.abilityIndex=0,t.teraType=t.species.type1})).setPartyMemberFunc(1,g([e.PIDGEOT,e.NOCTOWL,e.SWELLOW,e.STARAPTOR,e.UNFEZANT,e.TALONFLAME,e.TOUCANNON,e.CORVIKNIGHT,e.KILOWATTREL],b.TRAINER,!0)).setPartyMemberFunc(2,ST(t=>!BA.hasOwnProperty(t.speciesId)&&!CE.hasOwnProperty(t.speciesId)&&t.baseTotal>=450)).setSpeciesFilter(t=>t.baseTotal>=540).setInstantTera(0),[l.RIVAL_5]:new z(++j).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setBoss().setStaticParty().setMoneyMultiplier(2.25).setEncounterBgm(l.RIVAL).setBattleBgm("battle_rival_3").setMixedBattleBgm("battle_rival_3").setPartyTemplates(ue.RIVAL_5).setPartyMemberFunc(0,g([e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.abilityIndex=0,t.teraType=t.species.type1})).setPartyMemberFunc(1,g([e.PIDGEOT,e.NOCTOWL,e.SWELLOW,e.STARAPTOR,e.UNFEZANT,e.TALONFLAME,e.TOUCANNON,e.CORVIKNIGHT,e.KILOWATTREL],b.TRAINER,!0)).setPartyMemberFunc(2,ST(t=>!BA.hasOwnProperty(t.speciesId)&&!CE.hasOwnProperty(t.speciesId)&&t.baseTotal>=450)).setSpeciesFilter(t=>t.baseTotal>=540).setPartyMemberFunc(5,g([e.RAYQUAZA],b.TRAINER,!0,t=>{t.setBoss(!0,3),t.pokeball=Me.MASTER_BALL,t.shiny=vE.getClassicTrainerShinyChance()===0,t.variant=1})).setInstantTera(0),[l.RIVAL_6]:new z(++j).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setBoss().setStaticParty().setMoneyMultiplier(3).setEncounterBgm("final").setBattleBgm("battle_rival_3").setMixedBattleBgm("battle_rival_3").setPartyTemplates(ue.RIVAL_6).setPartyMemberFunc(0,g([e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL],b.TRAINER,!0,t=>{t.setBoss(!0,3),t.abilityIndex=0,t.teraType=t.species.type1,t.generateAndPopulateMoveset()})).setPartyMemberFunc(1,g([e.PIDGEOT,e.NOCTOWL,e.SWELLOW,e.STARAPTOR,e.UNFEZANT,e.TALONFLAME,e.TOUCANNON,e.CORVIKNIGHT,e.KILOWATTREL],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})).setPartyMemberFunc(2,ST(t=>!BA.hasOwnProperty(t.speciesId)&&!CE.hasOwnProperty(t.speciesId)&&t.baseTotal>=450)).setSpeciesFilter(t=>t.baseTotal>=540).setPartyMemberFunc(5,g([e.RAYQUAZA],b.TRAINER,!0,t=>{t.setBoss(),t.generateAndPopulateMoveset(),t.pokeball=Me.MASTER_BALL,t.shiny=vE.getClassicTrainerShinyChance()===0,t.variant=1,t.formIndex=1,t.generateName()})).setInstantTera(0),[l.ROCKET_BOSS_GIOVANNI_1]:new z(j=l.ROCKET_BOSS_GIOVANNI_1).setName("Giovanni").initForEvilTeamLeader("Rocket Boss",[]).setMixedBattleBgm("battle_rocket_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,g([e.PERSIAN],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.gender=ye.MALE})).setPartyMemberFunc(1,g([e.DUGTRIO,e.ALOLA_DUGTRIO])).setPartyMemberFunc(2,g([e.HONCHKROW])).setPartyMemberFunc(3,g([e.NIDOQUEEN,e.NIDOKING])).setPartyMemberFunc(4,g([e.RHYPERIOR],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL,t.abilityIndex=1})).setPartyMemberFunc(5,g([e.KANGASKHAN],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL,t.formIndex=1,t.generateName()})),[l.ROCKET_BOSS_GIOVANNI_2]:new z(++j).setName("Giovanni").initForEvilTeamLeader("Rocket Boss",[],!0).setMixedBattleBgm("battle_rocket_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,g([e.TYRANITAR],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL})).setPartyMemberFunc(1,g([e.GASTRODON,e.SEISMITOAD],b.TRAINER,!0,t=>{t.species.speciesId===e.GASTRODON?t.abilityIndex=0:t.species.speciesId===e.SEISMITOAD&&(t.abilityIndex=2)})).setPartyMemberFunc(2,g([e.GARCHOMP,e.EXCADRILL],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL,t.species.speciesId===e.GARCHOMP?t.abilityIndex=2:t.species.speciesId===e.EXCADRILL&&(t.abilityIndex=0)})).setPartyMemberFunc(3,g([e.RHYPERIOR],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL,t.abilityIndex=1})).setPartyMemberFunc(4,g([e.KANGASKHAN],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL,t.formIndex=1,t.generateName()})).setPartyMemberFunc(5,g([e.MEWTWO],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.MASTER_BALL})),[l.MAXIE]:new z(++j).setName("Maxie").initForEvilTeamLeader("Magma Boss",[]).setMixedBattleBgm("battle_aqua_magma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,g([e.SOLROCK])).setPartyMemberFunc(1,g([e.TALONFLAME])).setPartyMemberFunc(2,g([e.WEEZING,e.GALAR_WEEZING])).setPartyMemberFunc(3,g([e.TORKOAL],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.abilityIndex=1})).setPartyMemberFunc(4,g([e.DONPHAN])).setPartyMemberFunc(5,g([e.CAMERUPT],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL,t.formIndex=1,t.generateName(),t.gender=ye.MALE})),[l.MAXIE_2]:new z(++j).setName("Maxie").initForEvilTeamLeader("Magma Boss",[],!0).setMixedBattleBgm("battle_aqua_magma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,g([e.TYPHLOSION,e.SOLROCK],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL})).setPartyMemberFunc(1,g([e.NINETALES,e.TORKOAL],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.species.speciesId===e.NINETALES?t.abilityIndex=2:t.species.speciesId===e.TORKOAL&&(t.abilityIndex=1)})).setPartyMemberFunc(2,g([e.SCOVILLAIN],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.abilityIndex=0})).setPartyMemberFunc(3,g([e.GREAT_TUSK],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ROGUE_BALL})).setPartyMemberFunc(4,g([e.CAMERUPT],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL,t.formIndex=1,t.generateName(),t.gender=ye.MALE})).setPartyMemberFunc(5,g([e.GROUDON],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.MASTER_BALL})),[l.ARCHIE]:new z(++j).setName("Archie").initForEvilTeamLeader("Aqua Boss",[]).setMixedBattleBgm("battle_aqua_magma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,g([e.LUDICOLO])).setPartyMemberFunc(1,g([e.PELIPPER],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.abilityIndex=1})).setPartyMemberFunc(2,g([e.MUK,e.ALOLA_MUK])).setPartyMemberFunc(3,g([e.WAILORD])).setPartyMemberFunc(4,g([e.QWILFISH],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.abilityIndex=1})).setPartyMemberFunc(5,g([e.SHARPEDO],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL,t.formIndex=1,t.generateName(),t.gender=ye.MALE})),[l.ARCHIE_2]:new z(++j).setName("Archie").initForEvilTeamLeader("Aqua Boss",[],!0).setMixedBattleBgm("battle_aqua_magma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,g([e.LUDICOLO,e.EMPOLEON],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL})).setPartyMemberFunc(1,g([e.POLITOED,e.PELIPPER],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.species.speciesId===e.POLITOED?t.abilityIndex=2:t.species.speciesId===e.PELIPPER&&(t.abilityIndex=1)})).setPartyMemberFunc(2,g([e.DHELMISE])).setPartyMemberFunc(3,g([e.OVERQWIL],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.abilityIndex=1})).setPartyMemberFunc(4,g([e.SHARPEDO],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL,t.formIndex=1,t.generateName(),t.gender=ye.MALE})).setPartyMemberFunc(5,g([e.KYOGRE],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.MASTER_BALL})),[l.CYRUS]:new z(++j).setName("Cyrus").initForEvilTeamLeader("Galactic Boss",[]).setMixedBattleBgm("battle_galactic_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,g([e.GYARADOS])).setPartyMemberFunc(1,g([e.HONCHKROW,e.HISUI_BRAVIARY])).setPartyMemberFunc(2,g([e.MAGNEZONE])).setPartyMemberFunc(3,g([e.UXIE,e.MESPRIT,e.AZELF])).setPartyMemberFunc(4,g([e.HOUNDOOM],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL,t.formIndex=1,t.generateName()})).setPartyMemberFunc(5,g([e.WEAVILE],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL,t.gender=ye.MALE})),[l.CYRUS_2]:new z(++j).setName("Cyrus").initForEvilTeamLeader("Galactic Boss",[],!0).setMixedBattleBgm("battle_galactic_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,g([e.CROBAT],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})).setPartyMemberFunc(1,g([e.MAGNEZONE])).setPartyMemberFunc(2,g([e.UXIE,e.MESPRIT,e.AZELF],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ROGUE_BALL})).setPartyMemberFunc(3,g([e.HOUNDOOM],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL,t.formIndex=1,t.generateName()})).setPartyMemberFunc(4,g([e.WEAVILE],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL,t.gender=ye.MALE})).setPartyMemberFunc(5,g([e.DIALGA,e.PALKIA],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.MASTER_BALL})),[l.GHETSIS]:new z(++j).setName("Ghetsis").initForEvilTeamLeader("Plasma Boss",[]).setMixedBattleBgm("battle_plasma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,g([e.COFAGRIGUS])).setPartyMemberFunc(1,g([e.SEISMITOAD])).setPartyMemberFunc(2,g([e.GALVANTULA,e.EELEKTROSS])).setPartyMemberFunc(3,g([e.DRAPION,e.TOXICROAK])).setPartyMemberFunc(4,g([e.KINGAMBIT])).setPartyMemberFunc(5,g([e.HYDREIGON],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL,t.gender=ye.MALE})),[l.GHETSIS_2]:new z(++j).setName("Ghetsis").initForEvilTeamLeader("Plasma Boss",[],!0).setMixedBattleBgm("battle_plasma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,g([e.RUNERIGUS],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset()})).setPartyMemberFunc(1,g([e.JELLICENT,e.BASCULEGION],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.gender=ye.MALE,t.formIndex=0})).setPartyMemberFunc(2,g([e.KINGAMBIT])).setPartyMemberFunc(3,g([e.VOLCARONA,e.IRON_MOTH],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ROGUE_BALL})).setPartyMemberFunc(4,g([e.HYDREIGON,e.IRON_JUGULIS],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL,t.species.speciesId===e.HYDREIGON?t.gender=ye.MALE:t.species.speciesId===e.IRON_JUGULIS&&(t.gender=ye.GENDERLESS)})).setPartyMemberFunc(5,g([e.KYUREM],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.MASTER_BALL})),[l.LYSANDRE]:new z(++j).setName("Lysandre").initForEvilTeamLeader("Flare Boss",[]).setMixedBattleBgm("battle_flare_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,g([e.MIENSHAO])).setPartyMemberFunc(1,g([e.HONCHKROW,e.TALONFLAME])).setPartyMemberFunc(2,g([e.PYROAR],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.gender=ye.MALE})).setPartyMemberFunc(3,g([e.DRAGALGE,e.CLAWITZER],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.species.speciesId===e.DRAGALGE?t.abilityIndex=2:t.species.speciesId===e.CLAWITZER&&(t.abilityIndex=0)})).setPartyMemberFunc(4,g([e.GALLADE],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.abilityIndex=1})).setPartyMemberFunc(5,g([e.GYARADOS],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL,t.formIndex=1,t.generateName(),t.gender=ye.MALE})),[l.LYSANDRE_2]:new z(++j).setName("Lysandre").initForEvilTeamLeader("Flare Boss",[],!0).setMixedBattleBgm("battle_flare_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,g([e.PYROAR],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.gender=ye.MALE})).setPartyMemberFunc(1,g([e.DRAGALGE,e.CLAWITZER],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.species.speciesId===e.DRAGALGE?t.abilityIndex=2:t.species.speciesId===e.CLAWITZER&&(t.abilityIndex=0)})).setPartyMemberFunc(2,g([e.AEGISLASH,e.HISUI_GOODRA])).setPartyMemberFunc(3,g([e.IRON_VALIANT],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ROGUE_BALL})).setPartyMemberFunc(4,g([e.GYARADOS],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL,t.formIndex=1,t.generateName(),t.gender=ye.MALE})).setPartyMemberFunc(5,g([e.ZYGARDE],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.MASTER_BALL,t.formIndex=0})),[l.LUSAMINE]:new z(++j).setName("Lusamine").initForEvilTeamLeader("Aether Boss",[]).setMixedBattleBgm("battle_aether_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,g([e.CLEFABLE],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.gender=ye.FEMALE})).setPartyMemberFunc(1,g([e.LILLIGANT,e.HISUI_LILLIGANT])).setPartyMemberFunc(2,g([e.MILOTIC,e.PRIMARINA])).setPartyMemberFunc(3,g([e.GALAR_SLOWBRO,e.GALAR_SLOWKING])).setPartyMemberFunc(4,g([e.BEWEAR])).setPartyMemberFunc(5,g([e.NIHILEGO],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.ROGUE_BALL})),[l.LUSAMINE_2]:new z(++j).setName("Lusamine").initForEvilTeamLeader("Aether Boss",[],!0).setMixedBattleBgm("battle_aether_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,g([e.CLEFABLE],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.gender=ye.FEMALE})).setPartyMemberFunc(1,g([e.MILOTIC,e.PRIMARINA])).setPartyMemberFunc(2,g([e.SILVALLY],b.TRAINER,!0,t=>{t.formIndex=De(18),t.generateAndPopulateMoveset(),t.pokeball=Me.ROGUE_BALL,t.moveset.some(E=>!Ne(E)&&E.moveId===A.MULTI_ATTACK)||(t.moveset[0]=new Ye(A.MULTI_ATTACK))})).setPartyMemberFunc(3,g([e.PHEROMOSA],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ROGUE_BALL})).setPartyMemberFunc(4,g([e.NIHILEGO],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.ROGUE_BALL})).setPartyMemberFunc(5,g([e.NECROZMA],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.formIndex=2,t.generateAndPopulateMoveset(),t.pokeball=Me.MASTER_BALL})),[l.GUZMA]:new z(++j).setName("Guzma").initForEvilTeamLeader("Skull Boss",[]).setMixedBattleBgm("battle_skull_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,g([e.YANMEGA,e.LOKIX],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.species.speciesId===e.YANMEGA?t.abilityIndex=1:t.species.speciesId===e.LOKIX&&(t.abilityIndex=2)})).setPartyMemberFunc(1,g([e.HERACROSS])).setPartyMemberFunc(2,g([e.SCIZOR,e.KLEAVOR],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.species.speciesId===e.SCIZOR?t.abilityIndex=1:t.species.speciesId===e.KLEAVOR&&(t.abilityIndex=2)})).setPartyMemberFunc(3,g([e.GALVANTULA,e.VIKAVOLT])).setPartyMemberFunc(4,g([e.PINSIR],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.formIndex=1,t.pokeball=Me.ULTRA_BALL,t.generateName()})).setPartyMemberFunc(5,g([e.GOLISOPOD],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.gender=ye.MALE})),[l.GUZMA_2]:new z(++j).setName("Guzma").initForEvilTeamLeader("Skull Boss",[],!0).setMixedBattleBgm("battle_skull_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,g([e.GOLISOPOD],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.abilityIndex=2,t.gender=ye.MALE})).setPartyMemberFunc(1,g([e.BUZZWOLE],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ROGUE_BALL})).setPartyMemberFunc(2,g([e.CRAWDAUNT,e.HISUI_SAMUROTT],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.abilityIndex=2})).setPartyMemberFunc(3,g([e.XURKITREE],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ROGUE_BALL})).setPartyMemberFunc(4,g([e.GENESECT],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL,t.formIndex=De(4,1),t.moveset.some(E=>!Ne(E)&&E.moveId===A.TECHNO_BLAST)||(t.moveset[2]=new Ye(A.TECHNO_BLAST))})).setPartyMemberFunc(5,g([e.PINSIR],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.formIndex=1,t.generateAndPopulateMoveset(),t.generateName(),t.pokeball=Me.ULTRA_BALL})),[l.ROSE]:new z(++j).setName("Rose").initForEvilTeamLeader("Macro Boss",[]).setMixedBattleBgm("battle_macro_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,g([e.ARCHALUDON],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL})).setPartyMemberFunc(1,g([e.ESCAVALIER,e.FERROTHORN],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL})).setPartyMemberFunc(2,g([e.SIRFETCHD,e.MR_RIME],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL})).setPartyMemberFunc(3,g([e.CORVIKNIGHT],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL})).setPartyMemberFunc(4,g([e.KLINKLANG,e.PERRSERKER],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL})).setPartyMemberFunc(5,g([e.COPPERAJAH],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.formIndex=1,t.generateName(),t.pokeball=Me.ULTRA_BALL,t.gender=ye.FEMALE})),[l.ROSE_2]:new z(++j).setName("Rose").initForEvilTeamLeader("Macro Boss",[],!0).setMixedBattleBgm("battle_macro_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,g([e.ARCHALUDON],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL})).setPartyMemberFunc(1,g([e.AEGISLASH,e.GHOLDENGO],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL})).setPartyMemberFunc(2,g([e.DRACOZOLT,e.DRACOVISH],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL,t.abilityIndex=1})).setPartyMemberFunc(3,g([e.MELMETAL],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL})).setPartyMemberFunc(4,g([e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL})).setPartyMemberFunc(5,g([e.COPPERAJAH],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.formIndex=1,t.generateName(),t.pokeball=Me.ULTRA_BALL,t.gender=ye.FEMALE})),[l.PENNY]:new z(++j).setName("Cassiopeia").initForEvilTeamLeader("Star Boss",[]).setMixedBattleBgm("battle_star_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,g([e.JOLTEON,e.LEAFEON])).setPartyMemberFunc(1,g([e.VAPOREON,e.UMBREON])).setPartyMemberFunc(2,g([e.ESPEON,e.GLACEON])).setPartyMemberFunc(3,g([e.FLAREON])).setPartyMemberFunc(4,g([e.SYLVEON],b.TRAINER,!0,t=>{t.abilityIndex=2,t.generateAndPopulateMoveset(),t.gender=ye.FEMALE})).setPartyMemberFunc(5,g([e.EEVEE],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.formIndex=2,t.pokeball=Me.ULTRA_BALL,t.generateName()})).setInstantTera(4),[l.PENNY_2]:new z(++j).setName("Cassiopeia").initForEvilTeamLeader("Star Boss",[],!0).setMixedBattleBgm("battle_star_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,g([e.SYLVEON],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.abilityIndex=2,t.generateAndPopulateMoveset(),t.gender=ye.FEMALE})).setPartyMemberFunc(1,g([e.ROTOM],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.formIndex=De(5,1)})).setPartyMemberFunc(2,g([e.RAIKOU,e.ENTEI,e.SUICUNE],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL})).setPartyMemberFunc(3,g([e.REVAVROOM],b.TRAINER,!0,t=>{t.formIndex=De(5,1),t.generateAndPopulateMoveset(),t.pokeball=Me.ROGUE_BALL})).setPartyMemberFunc(4,g([e.ZAMAZENTA],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.MASTER_BALL})).setPartyMemberFunc(5,g([e.EEVEE],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.formIndex=2,t.generateName(),t.pokeball=Me.ULTRA_BALL})).setInstantTera(0),[l.BUCK]:new z(++j).setName("Buck").initForStatTrainer(!0).setPartyMemberFunc(0,g([e.CLAYDOL],b.TRAINER,!0,t=>{t.setBoss(!0,3),t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL})).setPartyMemberFunc(1,g([e.VENUSAUR,e.COALOSSAL],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.GREAT_BALL,t.species.speciesId===e.VENUSAUR?(t.formIndex=2,t.abilityIndex=2):t.formIndex=1,t.generateName()})).setPartyMemberFunc(2,g([e.AGGRON],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.formIndex=1,t.generateName()})).setPartyMemberFunc(3,g([e.TORKOAL],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.abilityIndex=1})).setPartyMemberFunc(4,g([e.GREAT_TUSK],b.TRAINER,!0)).setPartyMemberFunc(5,g([e.HEATRAN],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.MASTER_BALL})),[l.CHERYL]:new z(++j).setName("Cheryl").initForStatTrainer().setPartyMemberFunc(0,g([e.BLISSEY],b.TRAINER,!0,t=>{t.setBoss(!0,3),t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL})).setPartyMemberFunc(1,g([e.SNORLAX,e.LAPRAS],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.GREAT_BALL,t.formIndex=1,t.generateName()})).setPartyMemberFunc(2,g([e.AUDINO],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.formIndex=1,t.generateName()})).setPartyMemberFunc(3,g([e.GOODRA],b.TRAINER,!0)).setPartyMemberFunc(4,g([e.IRON_HANDS],b.TRAINER,!0)).setPartyMemberFunc(5,g([e.CRESSELIA,e.ENAMORUS],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.species.speciesId===e.ENAMORUS&&(t.formIndex=1,t.generateName()),t.pokeball=Me.MASTER_BALL})),[l.MARLEY]:new z(++j).setName("Marley").initForStatTrainer().setPartyMemberFunc(0,g([e.ARCANINE],b.TRAINER,!0,t=>{t.setBoss(!0,3),t.generateAndPopulateMoveset(),t.pokeball=Me.ULTRA_BALL})).setPartyMemberFunc(1,g([e.CINDERACE,e.INTELEON],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.GREAT_BALL,t.formIndex=1,t.generateName()})).setPartyMemberFunc(2,g([e.AERODACTYL],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.formIndex=1,t.generateName()})).setPartyMemberFunc(3,g([e.DRAGAPULT],b.TRAINER,!0)).setPartyMemberFunc(4,g([e.IRON_BUNDLE],b.TRAINER,!0)).setPartyMemberFunc(5,g([e.REGIELEKI],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.MASTER_BALL})),[l.MIRA]:new z(++j).setName("Mira").initForStatTrainer().setPartyMemberFunc(0,g([e.ALAKAZAM],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.formIndex=1,t.pokeball=Me.ULTRA_BALL,t.generateName()})).setPartyMemberFunc(1,g([e.GENGAR,e.HATTERENE],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.GREAT_BALL,t.formIndex=t.species.speciesId===e.GENGAR?2:1,t.generateName()})).setPartyMemberFunc(2,g([e.FLUTTER_MANE],b.TRAINER,!0)).setPartyMemberFunc(3,g([e.HYDREIGON],b.TRAINER,!0)).setPartyMemberFunc(4,g([e.MAGNEZONE],b.TRAINER,!0)).setPartyMemberFunc(5,g([e.LATIOS,e.LATIAS],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.pokeball=Me.MASTER_BALL})),[l.RILEY]:new z(++j).setName("Riley").initForStatTrainer(!0).setPartyMemberFunc(0,g([e.LUCARIO],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.formIndex=1,t.pokeball=Me.ULTRA_BALL,t.generateName()})).setPartyMemberFunc(1,g([e.RILLABOOM,e.CENTISKORCH],b.TRAINER,!0,t=>{t.generateAndPopulateMoveset(),t.pokeball=Me.GREAT_BALL,t.formIndex=1,t.generateName()})).setPartyMemberFunc(2,g([e.TYRANITAR],b.TRAINER,!0)).setPartyMemberFunc(3,g([e.ROARING_MOON],b.TRAINER,!0)).setPartyMemberFunc(4,g([e.URSALUNA],b.TRAINER,!0)).setPartyMemberFunc(5,g([e.REGIGIGAS,e.LANDORUS],b.TRAINER,!0,t=>{t.setBoss(!0,2),t.generateAndPopulateMoveset(),t.species.speciesId===e.LANDORUS&&(t.formIndex=1,t.generateName()),t.pokeball=Me.MASTER_BALL})),[l.VICTOR]:new z(++j).setTitle("The Winstrates").setLocalizedName("Victor").setMoneyMultiplier(1).setPartyTemplates(ue.ONE_AVG_ONE_STRONG),[l.VICTORIA]:new z(++j).setTitle("The Winstrates").setLocalizedName("Victoria").setMoneyMultiplier(1).setPartyTemplates(ue.ONE_AVG_ONE_STRONG),[l.VIVI]:new z(++j).setTitle("The Winstrates").setLocalizedName("Vivi").setMoneyMultiplier(1).setPartyTemplates(ue.TWO_AVG_ONE_STRONG),[l.VICKY]:new z(++j).setTitle("The Winstrates").setLocalizedName("Vicky").setMoneyMultiplier(1).setPartyTemplates(ue.ONE_AVG),[l.VITO]:new z(++j).setTitle("The Winstrates").setLocalizedName("Vito").setMoneyMultiplier(2).setPartyTemplates(new iE(new pe(3,ce.AVERAGE),new pe(2,ce.STRONG))),[l.BUG_TYPE_SUPERFAN]:new z(++j).setMoneyMultiplier(2.25).setEncounterBgm(l.ACE_TRAINER).setPartyTemplates(new pe(2,ce.AVERAGE)),[l.EXPERT_POKEMON_BREEDER]:new z(++j).setMoneyMultiplier(3).setEncounterBgm(l.ACE_TRAINER).setLocalizedName("Expert Pokemon Breeder").setPartyTemplates(new pe(3,ce.AVERAGE)),[l.FUTURE_SELF_M]:new z(++j).setMoneyMultiplier(0).setEncounterBgm("mystery_encounter_weird_dream").setBattleBgm("mystery_encounter_weird_dream").setMixedBattleBgm("mystery_encounter_weird_dream").setVictoryBgm("mystery_encounter_weird_dream").setLocalizedName("Future Self M").setPartyTemplates(new pe(6,ce.STRONG)),[l.FUTURE_SELF_F]:new z(++j).setMoneyMultiplier(0).setEncounterBgm("mystery_encounter_weird_dream").setBattleBgm("mystery_encounter_weird_dream").setMixedBattleBgm("mystery_encounter_weird_dream").setVictoryBgm("mystery_encounter_weird_dream").setLocalizedName("Future Self F").setPartyTemplates(new pe(6,ce.STRONG))};var SI=(t=>(t[t.REGULAR=0]="REGULAR",t[t.PLUS=1]="PLUS",t[t.PREMIUM=2]="PREMIUM",t[t.GOLDEN=3]="GOLDEN",t))(SI||{});const BB=class BB{constructor(E,R,I){this.description=R,this.voucherType=E,this.conditionFunc=I}validate(E){return!this.conditionFunc||this.conditionFunc(E)}getName(E){return QP(this.voucherType)}getIconImage(){return Kv(this.voucherType)}getTier(){switch(this.voucherType){case 0:return MT.COMMON;case 1:return MT.GREAT;case 2:return MT.ULTRA;case 3:return MT.ROGUE}}};r(BB,"Voucher");let fo=BB;function QP(t){switch(t){case 0:return D.t("voucher:eggVoucher");case 1:return D.t("voucher:eggVoucherPlus");case 2:return D.t("voucher:eggVoucherPremium");case 3:return D.t("voucher:eggVoucherGold")}}r(QP,"getVoucherTypeName");function Kv(t){switch(t){case 0:return"coupon";case 1:return"pair_of_tickets";case 2:return"mystic_ticket";case 3:return"golden_mystic_ticket"}}r(Kv,"getVoucherTypeIcon");const bO={};function ax(){for(const R of[oA.CLASSIC_VICTORY]){const I=R.score>=150?3:R.score>=100?2:R.score>=75?1:0;bO[R.id]=new fo(I,b8(R.localizationKey))}const t=Object.keys(yE).filter(R=>yE[R].isBoss&&yE[R].getDerivedType()!==l.RIVAL&&yE[R].hasVoucher);for(const R of t){const I=yE[R].moneyMultiplier<10?1:2,N=l[R],S=yE[R].name,T=yE[R],i=T.title?` (${T.title})`:"";bO[N]=new fo(I,`${D.t("voucher:defeatTrainer",{trainerName:S})} ${i}`)}const E=Object.keys(bO);for(const R of E)bO[R].id=R}r(ax,"initVouchers");var Ce=(t=>(t[t.MESSAGE=0]="MESSAGE",t[t.TITLE=1]="TITLE",t[t.COMMAND=2]="COMMAND",t[t.FIGHT=3]="FIGHT",t[t.BALL=4]="BALL",t[t.TARGET_SELECT=5]="TARGET_SELECT",t[t.MODIFIER_SELECT=6]="MODIFIER_SELECT",t[t.SAVE_SLOT=7]="SAVE_SLOT",t[t.PARTY=8]="PARTY",t[t.SUMMARY=9]="SUMMARY",t[t.STARTER_SELECT=10]="STARTER_SELECT",t[t.EVOLUTION_SCENE=11]="EVOLUTION_SCENE",t[t.EGG_HATCH_SCENE=12]="EGG_HATCH_SCENE",t[t.EGG_HATCH_SUMMARY=13]="EGG_HATCH_SUMMARY",t[t.CONFIRM=14]="CONFIRM",t[t.OPTION_SELECT=15]="OPTION_SELECT",t[t.MENU=16]="MENU",t[t.MENU_OPTION_SELECT=17]="MENU_OPTION_SELECT",t[t.SETTINGS=18]="SETTINGS",t[t.SETTINGS_DISPLAY=19]="SETTINGS_DISPLAY",t[t.SETTINGS_AUDIO=20]="SETTINGS_AUDIO",t[t.SETTINGS_GAMEPAD=21]="SETTINGS_GAMEPAD",t[t.GAMEPAD_BINDING=22]="GAMEPAD_BINDING",t[t.SETTINGS_KEYBOARD=23]="SETTINGS_KEYBOARD",t[t.KEYBOARD_BINDING=24]="KEYBOARD_BINDING",t[t.ACHIEVEMENTS=25]="ACHIEVEMENTS",t[t.GAME_STATS=26]="GAME_STATS",t[t.EGG_LIST=27]="EGG_LIST",t[t.EGG_GACHA=28]="EGG_GACHA",t[t.POKEDEX=29]="POKEDEX",t[t.POKEDEX_SCAN=30]="POKEDEX_SCAN",t[t.POKEDEX_PAGE=31]="POKEDEX_PAGE",t[t.LOGIN_FORM=32]="LOGIN_FORM",t[t.REGISTRATION_FORM=33]="REGISTRATION_FORM",t[t.LOADING=34]="LOADING",t[t.SESSION_RELOAD=35]="SESSION_RELOAD",t[t.UNAVAILABLE=36]="UNAVAILABLE",t[t.CHALLENGE_SELECT=37]="CHALLENGE_SELECT",t[t.RENAME_POKEMON=38]="RENAME_POKEMON",t[t.RUN_HISTORY=39]="RUN_HISTORY",t[t.RUN_INFO=40]="RUN_INFO",t[t.TEST_DIALOGUE=41]="TEST_DIALOGUE",t[t.AUTO_COMPLETE=42]="AUTO_COMPLETE",t[t.ADMIN=43]="ADMIN",t[t.MYSTERY_ENCOUNTER=44]="MYSTERY_ENCOUNTER",t))(Ce||{});const hB=class hB{constructor(E=null){this.cursor=0,this.active=!1,this.mode=E}show(E){return this.active=!0,!0}getUi(){return s.ui}getTextColor(E,R=!1){return pA(E,R,s.uiTheme)}getCursor(){return this.cursor}setCursor(E){const R=this.cursor!==E;return R&&(this.cursor=E),R}setMouseCursorStyle(E){s.input.manager.canvas.style.cursor=E}clear(){this.active=!1}destroy(){}};r(hB,"UiHandler");let gL=hB;const fB=class fB{start(){}end(){s.shiftPhase()}};r(fB,"Phase");let bE=fB;const dB=class dB extends bE{showEnemyTrainer(E=b.NONE){if(!s.currentBattle.trainer){console.warn("Enemy trainer is missing!");return}const R=s.currentBattle.trainer.getSprites(),I=s.currentBattle.trainer.getTintSprites();for(let N=0;N<R.length;N++){const S=!E||!N==(E===b.TRAINER)||R.length<2;[R[N],I[N]].map(T=>{S&&(T.x=E||R.length<2?0:N?16:-16),T.setVisible(S),T.clearTint()}),R[N].setVisible(S),I[N].setVisible(S),R[N].clearTint(),I[N].clearTint()}s.tweens.add({targets:s.currentBattle.trainer,x:"-=16",y:"+=16",alpha:1,ease:"Sine.easeInOut",duration:750})}hideEnemyTrainer(){s.tweens.add({targets:s.currentBattle.trainer,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750})}};r(dB,"BattlePhase");let Nt=dB;const KB=class KB extends Nt{executeForAll(E){for(const R of s.getField(!0))E(R)}};r(KB,"FieldPhase");let Fa=KB;const FB=class FB extends Fa{constructor(E){super(),E=E??s.getField().find(R=>R==null?void 0:R.isActive()).getBattlerIndex(),E===void 0&&console.warn("There are no Pokemon on the field!"),this.battlerIndex=E,this.player=E<2,this.fieldIndex=E%2}getPokemon(){return this.battlerIndex>FA.ENEMY_2?s.getPokemonById(this.battlerIndex):s.getField()[this.battlerIndex]}};r(FB,"PokemonPhase");let kt=FB;const YB=class YB extends kt{constructor(E){super(E)}start(){var I;super.start();const E=s.currentBattle.turnCommands[this.fieldIndex],R=(I=E==null?void 0:E.move)==null?void 0:I.move;s.ui.setMode(Ce.TARGET_SELECT,this.fieldIndex,R,N=>{s.ui.setMode(Ce.MESSAGE);const S=s.getField(),T=S[this.fieldIndex],i=Ke[R];if(i&&T.isMoveTargetRestricted(i.id,T,S[N[0]])){const o=T.getRestrictingTag(R,T,S[N[0]]).selectionDeniedText(T,i.id);s.queueMessage(D.t(o,{moveName:i.name}),0,!0),N=[]}N.length<1?(s.currentBattle.turnCommands[this.fieldIndex]=null,s.unshiftPhase(new Fo(this.fieldIndex))):E.targets=N,(E==null?void 0:E.command)===GE.BALL&&this.fieldIndex&&(s.currentBattle.turnCommands[this.fieldIndex-1].skip=!0),this.end()})}};r(YB,"SelectTargetPhase");let Ko=YB;var JE=(t=>(t[t.DEFAULT=0]="DEFAULT",t[t.TRAINER_BATTLE=1]="TRAINER_BATTLE",t[t.WILD_BATTLE=2]="WILD_BATTLE",t[t.BOSS_BATTLE=3]="BOSS_BATTLE",t[t.NO_BATTLE=4]="NO_BATTLE",t))(JE||{});const Sn=class Sn extends Fa{constructor(E){super(),this.fieldIndex=E}start(){var T,i,o,C,U;super.start(),s.updateGameInfo();const E=s.ui.handlers[Ce.COMMAND],R=s.currentBattle.battleType===AA.MYSTERY_ENCOUNTER||s.currentBattle.battleType===AA.TRAINER||s.arena.biomeType===n.END;if(E&&(s.currentBattle.turn===1&&(!s.commandCursorMemory||R)||E.getCursor()===GE.POKEMON?E.setCursor(GE.FIGHT):E.setCursor(E.getCursor())),this.fieldIndex)if(s.getPlayerField().filter(_=>_.isActive()).length===1)this.fieldIndex=RR.CENTER;else{const _=s.currentBattle.turnCommands[this.fieldIndex-1];((_==null?void 0:_.command)===GE.BALL||(_==null?void 0:_.command)===GE.RUN)&&(s.currentBattle.turnCommands[this.fieldIndex]={command:_==null?void 0:_.command,skip:!0})}if((T=s.currentBattle)!=null&&T.double&&((o=(i=this.getPokemon().getAlly())==null?void 0:i.getTag(Y.COMMANDED))==null?void 0:o.getSourcePokemon())===this.getPokemon()&&(s.currentBattle.turnCommands[this.fieldIndex]={command:GE.FIGHT,move:{move:A.NONE,targets:[]},skip:!0}),this.getPokemon().getTag(Y.ENCORE)&&this.getPokemon().lapseTag(Y.ENCORE),(C=s.currentBattle.turnCommands[this.fieldIndex])!=null&&C.skip)return this.end();const N=s.getPlayerField()[this.fieldIndex],S=N.getMoveQueue();for(;S.length&&S[0]&&S[0].move&&!S[0].virtual&&(!N.getMoveset().find(_=>_.moveId===S[0].move)||!N.getMoveset()[N.getMoveset().findIndex(_=>_.moveId===S[0].move)].isUsable(N,S[0].ignorePP));)S.shift();if(S.length>0){const _=S[0];if(!_.move)this.handleCommand(GE.FIGHT,-1);else{const G=N.getMoveset().findIndex(H=>H.moveId===_.move);G>-1&&N.getMoveset()[G].isUsable(N,_.ignorePP)||_.virtual?this.handleCommand(GE.FIGHT,G,_.ignorePP,_):s.ui.setMode(Ce.COMMAND,this.fieldIndex)}}else s.currentBattle.isBattleMysteryEncounter()&&((U=s.currentBattle.mysteryEncounter)!=null&&U.skipToFightInput)?(s.ui.clearText(),s.ui.setMode(Ce.FIGHT,this.fieldIndex)):s.ui.setMode(Ce.COMMAND,this.fieldIndex)}handleCommand(E,R,...I){var T,i;const N=s.getPlayerField()[this.fieldIndex];let S=!1;switch(E){case GE.TERA:case GE.FIGHT:let o=!1;const C=I.length===2?I[1]:void 0;if(R===-1||N.trySelectMove(R,I[0])||(o=R>-1&&!N.getMoveset().filter(f=>f.isUsable(N)).length)){let f;o?f=A.STRUGGLE:C!==void 0?f=C.move:R>-1?f=N.getMoveset()[R].moveId:f=A.NONE;const d={command:GE.FIGHT,cursor:R,move:{move:f,targets:[],ignorePP:I[0]},args:I},w={command:E,targets:[this.fieldIndex],skip:E===GE.FIGHT},m=C===void 0?JI(N,f):{targets:C.targets,multiple:C.targets.length>1};f||(d.targets=[this.fieldIndex]),console.log(m,Z(N)),m.targets.length>1&&m.multiple&&s.unshiftPhase(new Ko(this.fieldIndex)),d.move&&(m.targets.length<=1||m.multiple)?d.move.targets=m.targets:d.move&&N.getTag(Y.CHARGING)&&N.getMoveQueue().length>=1?d.move.targets=N.getMoveQueue()[0].targets:s.unshiftPhase(new Ko(this.fieldIndex)),s.currentBattle.preTurnCommands[this.fieldIndex]=w,s.currentBattle.turnCommands[this.fieldIndex]=d,S=!0}else if(R<N.getMoveset().length){const f=N.getMoveset()[R];s.ui.setMode(Ce.MESSAGE);const d=N.isMoveRestricted(f.moveId,N)?N.getRestrictingTag(f.moveId,N).selectionDeniedText(N,f.moveId):f.getName().endsWith(" (N)")?"battle:moveNotImplemented":"battle:moveNoPP",w=f.getName().replace(" (N)","");s.ui.showText(D.t(d,{moveName:w}),null,()=>{s.ui.clearText(),s.ui.setMode(Ce.FIGHT,this.fieldIndex)},null,!0)}break;case GE.BALL:const U=s.getEnemyField().filter(f=>f.isActive(!0)).some(f=>!s.gameData.dexData[f.species.speciesId].caughtAttr)&&s.gameData.getStarterCount(f=>!!f.caughtAttr)<Object.keys(kE).length-1;if(s.arena.biomeType===n.END&&(!s.gameMode.isClassic||s.gameMode.isFreshStartChallenge()||U))s.ui.setMode(Ce.COMMAND,this.fieldIndex),s.ui.setMode(Ce.MESSAGE),s.ui.showText(D.t("battle:noPokeballForce"),null,()=>{s.ui.showText("",0),s.ui.setMode(Ce.COMMAND,this.fieldIndex)},null,!0);else if(s.currentBattle.battleType===AA.TRAINER)s.ui.setMode(Ce.COMMAND,this.fieldIndex),s.ui.setMode(Ce.MESSAGE),s.ui.showText(D.t("battle:noPokeballTrainer"),null,()=>{s.ui.showText("",0),s.ui.setMode(Ce.COMMAND,this.fieldIndex)},null,!0);else if(s.currentBattle.isBattleMysteryEncounter()&&!s.currentBattle.mysteryEncounter.catchAllowed)s.ui.setMode(Ce.COMMAND,this.fieldIndex),s.ui.setMode(Ce.MESSAGE),s.ui.showText(D.t("battle:noPokeballMysteryEncounter"),null,()=>{s.ui.showText("",0),s.ui.setMode(Ce.COMMAND,this.fieldIndex)},null,!0);else{const f=s.getEnemyField().filter(d=>d.isActive(!0)).map(d=>d.getBattlerIndex());if(f.length>1)s.ui.setMode(Ce.COMMAND,this.fieldIndex),s.ui.setMode(Ce.MESSAGE),s.ui.showText(D.t("battle:noPokeballMulti"),null,()=>{s.ui.showText("",0),s.ui.setMode(Ce.COMMAND,this.fieldIndex)},null,!0);else if(R<5){const d=s.getEnemyField().find(w=>w.isActive(!0));d!=null&&d.isBoss()&&(d==null?void 0:d.bossSegmentIndex)>=1&&!(d!=null&&d.hasAbility(O.WONDER_GUARD,!1,!0))&&R<Me.MASTER_BALL?(s.ui.setMode(Ce.COMMAND,this.fieldIndex),s.ui.setMode(Ce.MESSAGE),s.ui.showText(D.t("battle:noPokeballStrong"),null,()=>{s.ui.showText("",0),s.ui.setMode(Ce.COMMAND,this.fieldIndex)},null,!0)):(s.currentBattle.turnCommands[this.fieldIndex]={command:GE.BALL,cursor:R},s.currentBattle.turnCommands[this.fieldIndex].targets=f,this.fieldIndex&&(s.currentBattle.turnCommands[this.fieldIndex-1].skip=!0),S=!0)}}break;case GE.POKEMON:case GE.RUN:const _=E===GE.POKEMON,{currentBattle:G,arena:H}=s,c=(T=G.mysteryEncounter)==null?void 0:T.fleeAllowed;if(!_&&(H.biomeType===n.END||!Ne(c)&&!c))s.ui.setMode(Ce.COMMAND,this.fieldIndex),s.ui.setMode(Ce.MESSAGE),s.ui.showText(D.t("battle:noEscapeForce"),null,()=>{s.ui.showText("",0),s.ui.setMode(Ce.COMMAND,this.fieldIndex)},null,!0);else if(!_&&(G.battleType===AA.TRAINER||((i=G.mysteryEncounter)==null?void 0:i.encounterMode)===JE.TRAINER_BATTLE))s.ui.setMode(Ce.COMMAND,this.fieldIndex),s.ui.setMode(Ce.MESSAGE),s.ui.showText(D.t("battle:noEscapeTrainer"),null,()=>{s.ui.showText("",0),s.ui.setMode(Ce.COMMAND,this.fieldIndex)},null,!0);else{const f=_&&I[0],d=[];if(f||!N.isTrapped(d))G.turnCommands[this.fieldIndex]=_?{command:GE.POKEMON,cursor:R,args:I}:{command:GE.RUN},S=!0,!_&&this.fieldIndex&&(G.turnCommands[this.fieldIndex-1].skip=!0);else if(d.length>0)_||s.ui.setMode(Ce.MESSAGE),s.ui.showText(d[0],null,()=>{s.ui.showText("",0),_||s.ui.setMode(Ce.COMMAND,this.fieldIndex)},null,!0);else{const w=N.getTag(eO),m=s.arena.getTagOnSide(oe.FAIRY_LOCK,qe.PLAYER);if(!w&&!m){D.t(`battle:noEscape${_?"Switch":"Flee"}`);break}_||(s.ui.setMode(Ce.COMMAND,this.fieldIndex),s.ui.setMode(Ce.MESSAGE));const W=r(v=>{s.ui.showText(D.t("battle:noEscapePokemon",{pokemonName:v.sourceId&&s.getPokemonById(v.sourceId)?Z(s.getPokemonById(v.sourceId)):"",moveName:v.getMoveName(),escapeVerb:_?D.t("battle:escapeVerbSwitch"):D.t("battle:escapeVerbFlee")}),null,()=>{s.ui.showText("",0),_||s.ui.setMode(Ce.COMMAND,this.fieldIndex)},null,!0)},"showNoEscapeText");w?W(w):m&&W(m)}}break}return S&&this.end(),S}cancel(){this.fieldIndex&&(s.unshiftPhase(new Sn(0)),s.unshiftPhase(new Sn(1)),this.end())}getFieldIndex(){return this.fieldIndex}getPokemon(){return s.getPlayerField()[this.fieldIndex]}end(){s.ui.setMode(Ce.MESSAGE).then(()=>super.end())}};r(Sn,"CommandPhase");let Fo=Sn;var GE=(t=>(t[t.FIGHT=0]="FIGHT",t[t.BALL=1]="BALL",t[t.POKEMON=2]="POKEMON",t[t.RUN=3]="RUN",t[t.TERA=4]="TERA",t))(GE||{});const WB=class WB extends gL{constructor(){super(Ce.COMMAND),this.fieldIndex=0,this.cursor2=0}setup(){const E=this.getUi(),R=[D.t("commandUiHandler:fight"),D.t("commandUiHandler:ball"),D.t("commandUiHandler:pokemon"),D.t("commandUiHandler:run")];this.commandsContainer=s.add.container(217,-38.7),this.commandsContainer.setName("commands"),this.commandsContainer.setVisible(!1),E.add(this.commandsContainer),this.teraButton=s.add.sprite(-32,15,"button_tera"),this.teraButton.setName("terrastallize-button"),this.teraButton.setScale(1.3),this.teraButton.setFrame("fire"),this.teraButton.setPipeline(s.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0,teraColor:iO(L.FIRE),isTerastallized:!1}),this.commandsContainer.add(this.teraButton);for(let I=0;I<R.length;I++){const N=We(I%2===0?0:55.8,I<2?0:16,R[I],Se.WINDOW);N.setName(R[I]),this.commandsContainer.add(N)}}show(E){super.show(E),this.fieldIndex=E.length?E[0]:0,this.commandsContainer.setVisible(!0);let R;const I=s.getCurrentPhase();I instanceof Fo?R=I:R=s.getStandbyPhase(),this.canTera()?(this.teraButton.setVisible(!0),this.teraButton.setFrame(L[s.getField()[this.fieldIndex].getTeraType()].toLowerCase())):(this.teraButton.setVisible(!1),this.getCursor()===4&&this.setCursor(0)),this.toggleTeraButton();const N=this.getUi().getMessageHandler();return N.bg.setVisible(!0),N.commandWindow.setVisible(!0),N.movesWindowContainer.setVisible(!1),N.message.setWordWrapWidth(this.canTera()?910:1110),N.showText(D.t("commandUiHandler:actionMessage",{pokemonName:Z(R.getPokemon())}),0),this.getCursor()===2?this.setCursor(0):this.setCursor(this.getCursor()),!0}processInput(E){const R=this.getUi();let I=!1;const N=this.getCursor();if(E===he.CANCEL||E===he.ACTION)if(E===he.ACTION)switch(N){case 0:R.setMode(Ce.FIGHT,s.getCurrentPhase().getFieldIndex()),I=!0;break;case 1:R.setModeWithoutClear(Ce.BALL),I=!0;break;case 2:R.setMode(Ce.PARTY,CR.SWITCH,s.getCurrentPhase().getPokemon().getFieldIndex(),null,st.FilterNonFainted),I=!0;break;case 3:s.getCurrentPhase().handleCommand(3,0),I=!0;break;case 4:R.setMode(Ce.FIGHT,s.getCurrentPhase().getFieldIndex(),4),I=!0;break}else s.getCurrentPhase().cancel();else switch(E){case he.UP:(N===2||N===3)&&(I=this.setCursor(N-2));break;case he.DOWN:(N===0||N===1)&&(I=this.setCursor(N+2));break;case he.LEFT:N===1||N===3?I=this.setCursor(N-1):(N===0||N===2)&&this.canTera()&&(I=this.setCursor(4),this.toggleTeraButton());break;case he.RIGHT:N===0||N===2?I=this.setCursor(N+1):N===4&&(I=this.setCursor(0),this.toggleTeraButton());break}return I&&R.playSelect(),I}canTera(){var T;const E=!!s.getModifiers(QS).length,R=s.getField()[this.fieldIndex],I=R.isMega()||R.isMax()||R.hasSpecies(e.NECROZMA,"ultra"),N=s.arena.playerTerasUsed,S=((T=s.currentBattle.preTurnCommands[0])==null?void 0:T.command)===4&&this.fieldIndex>0?1:0;return E&&!I&&N+S<1}toggleTeraButton(){this.teraButton.setPipeline(s.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0,teraColor:iO(s.getField()[this.fieldIndex].getTeraType()),isTerastallized:this.getCursor()===4})}getCursor(){return this.fieldIndex?this.cursor2:this.cursor}setCursor(E){const R=this.getCursor()!==E;return R&&(this.fieldIndex?this.cursor2=E:this.cursor=E),this.cursorObj||(this.cursorObj=s.add.image(0,0,"cursor"),this.commandsContainer.add(this.cursorObj)),E===4?this.cursorObj.setVisible(!1):(this.cursorObj.setPosition(-5+(E%2===1?56:0),8+(E>=2?16:0)),this.cursorObj.setVisible(!0)),R}clear(){super.clear(),this.getUi().getMessageHandler().commandWindow.setVisible(!1),this.commandsContainer.setVisible(!1),this.getUi().getMessageHandler().clearText(),this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};r(WB,"CommandUiHandler");let TV=WB;const mB=class mB extends gL{constructor(E=null){super(E),this.tutorialActive=!1}processTutorialInput(E){if((E===he.ACTION||E===he.CANCEL)&&this.onActionInput){this.getUi().playSelect();const R=this.onActionInput;return this.onActionInput=null,R(),this.awaitingActionInput=!1,!0}return!1}initTutorialOverlay(E){this.tutorialOverlay||(this.tutorialOverlay=new Phaser.GameObjects.Rectangle(s,-1,-1,s.scaledCanvas.width,s.scaledCanvas.height,460551),this.tutorialOverlay.setName("tutorial-overlay"),this.tutorialOverlay.setOrigin(0,0),this.tutorialOverlay.setAlpha(0)),E&&E.add(this.tutorialOverlay)}};r(mB,"AwaitableUiHandler");let pL=mB;const gB=class gB extends pL{constructor(E=null){super(E),this.pendingPrompt=!1}initPromptSprite(E){if(!this.prompt){const R=s.add.sprite(0,0,"prompt");R.setVisible(!1),R.setOrigin(0,0),this.prompt=R}E&&E.add(this.prompt)}showText(E,R,I,N,S,T){this.showTextInternal(E,R,I,N,S,T)}showDialogue(E,R,I,N,S,T,i){this.showTextInternal(E,I,N,S,T,i)}showTextInternal(E,R,I,N,S,T){R==null&&(R=20);const i=new Map,o=new Map,C=new Map,U=new Map,_=/@(c|d|s|f)\{(.*?)\}/;let G;const H=[],c=["#POKEMON1","#POKEMON2"];for(let f=0;f<s.getPlayerField().length;f++)H.push(s.getPlayerField()[f].getNameToRender()),E=E.split(H[f]).join(c[f]);for(;G=_.exec(E);){switch(G[1]){case"c":i.set(G.index,G[2]);break;case"d":o.set(G.index,Number.parseInt(G[2]));break;case"s":C.set(G.index,G[2]);break;case"f":U.set(G.index,Number.parseInt(G[2]));break}E=E.slice(0,G.index)+E.slice(G.index+G[2].length+4)}for(let f=0;f<s.getPlayerField().length;f++)E=E.split(c[f]).join(H[f]);if(E){const f=E.split(" ");let d=1,w="";for(let m=0;m<f.length;m++){const W=w?`${w} ${f[m]}`:f[m];if(f[m].includes(`
`))w=W,d++;else{const v=this.message.runWordWrap(W).split(/\n/g).length;v>d?(d=v,w=`${w}
${f[m]}`):w=W}}E=w}if(this.textTimer&&(this.textTimer.remove(),this.textCallbackTimer&&this.textCallbackTimer.callback()),S){const f=I;I=r(()=>{const d=r(()=>this.showPrompt(f,N),"showPrompt");T?s.time.delayedCall(T,d):d()},"callback")}R?(this.clearText(),S&&(this.pendingPrompt=!0),this.textTimer=s.time.addEvent({delay:R,callback:r(()=>{var $;const f=E.length-(($=this.textTimer)==null?void 0:$.repeatCount),d=i.get(f),w=C.get(f),m=o.get(f),W=U.get(f);this.message.setText(E.slice(0,f));const v=r(()=>{var Oe;d&&s.charSprite.setVariant(d),w&&s.playSound(w),I&&!((Oe=this.textTimer)!=null&&Oe.repeatCount)&&(N&&!S?this.textCallbackTimer=s.time.delayedCall(N,()=>{this.textCallbackTimer&&(this.textCallbackTimer.destroy(),this.textCallbackTimer=null),I()}):I())},"advance");m?(this.textTimer.paused=!0,s.tweens.addCounter({duration:VE(m),onComplete:r(()=>{this.textTimer.paused=!1,v()},"onComplete")})):W?(this.textTimer.paused=!0,s.time.delayedCall(150,()=>{s.ui.fadeOut(750).then(()=>{const Oe=VE(W);s.time.delayedCall(Oe,()=>{s.ui.fadeIn(500).then(()=>{this.textTimer.paused=!1,v()})})})})):v()},"callback"),repeat:E.length})):(this.message.setText(E),S&&(this.pendingPrompt=!0),I&&I())}showPrompt(E,R){const I=this.message.runWordWrap(this.message.text).split(/\n/g),N=I.length,S=I[I.length-1],T=s.add.text(0,0,S,{font:"96px emerald"});T.setScale(this.message.scale);const i=T.displayWidth;T.destroy(),this.prompt&&(this.prompt.setPosition(this.message.x+i+2,this.message.y+(N-1)*18+2),this.prompt.play("prompt")),this.pendingPrompt=!1,this.awaitingActionInput=!0,this.onActionInput=()=>{this.prompt&&(this.prompt.anims.stop(),this.prompt.setVisible(!1)),E&&(R?this.textCallbackTimer=s.time.delayedCall(R,()=>{this.textCallbackTimer&&(this.textCallbackTimer.destroy(),this.textCallbackTimer=null),E()}):E())}}isTextAnimationInProgress(){return this.textTimer?this.textTimer.repeatCount<this.textTimer.repeat:!1}clearText(){this.message.setText(""),this.pendingPrompt=!1}clear(){super.clear()}};r(gB,"MessageUiHandler");let aS=gB;var pi=(t=>(t[t.NONE=0]="NONE",t[t.PASSIVE=1]="PASSIVE",t[t.ACTIVE=2]="ACTIVE",t))(pi||{});const pB=class pB{setup(){this.icons=new Map,this.toggled=!1;const E=r(R=>{const I=R.getValue();this.toggled=!!I;for(const N of this.icons.keys()){const S=this.icons.get(N),T=S?this.getModeYDelta(S):0;N.y+=T*(this.toggled?1:-1)}},"onAlternate");s.tweens.addCounter({duration:KA(200),from:0,to:1,yoyo:!0,repeat:-1,onRepeat:E,onYoyo:E})}getModeYDelta(E){switch(E){case 0:return 0;case 1:return-1;case 2:return-2}}addOrUpdate(E,R){Array.isArray(E)||(E=[E]);for(const I of E)if(!(this.icons.has(I)&&this.icons.get(I)===R)){if(this.toggled){const N=this.icons.has(I)?this.icons.get(I):0,S=this.getModeYDelta(R);I.y+=S+N}this.icons.set(I,R)}}remove(E){Array.isArray(E)||(E=[E]);for(const R of E){if(this.toggled){const I=this.icons.get(R),N=I?this.getModeYDelta(I):0;R.y-=N}this.icons.delete(R)}}removeAll(){for(const E of this.icons.keys()){if(this.toggled){const R=this.icons.get(E),I=R?this.getModeYDelta(R):0;E.y-=I}this.icons.delete(E)}}};r(pB,"PokemonIconAnimHandler");let JP=pB;const HR=48,eL=82,TT=48,AL=8,li=6,zD=class zD extends Phaser.GameObjects.Container{constructor(E){E!=null&&E.onSide&&(E.top=!1),super(s,E==null?void 0:E.x,E==null?void 0:E.y),this.active=!1,this.descScroll=null;const R=(E==null?void 0:E.scale)||1;this.setScale(R),this.options=E||{};const I=((E==null?void 0:E.width)||zD.getWidth(R))/R;this.descBg=bt(E!=null&&E.onSide&&!(E!=null&&E.right)?eL:0,E!=null&&E.top?HR:0,I-(E!=null&&E.onSide?eL:0),TT),this.descBg.setOrigin(0,0),this.add(this.descBg),this.desc=We((E!=null&&E.onSide&&!(E!=null&&E.right)?eL:0)+AL,(E!=null&&E.top?HR:0)+AL-2,"",Se.BATTLE_INFO,{wordWrap:{width:(I-(AL-2)*2-(E!=null&&E.onSide?eL:0))*li}}),this.desc.setLineSpacing(D.resolvedLanguage==="ja"?25:5);const N={x:(E==null?void 0:E.x)||0,y:(E==null?void 0:E.y)||0};N.x<0&&(N.x+=s.game.canvas.width/li),N.y<0&&(N.y+=s.game.canvas.height/li);const S=s.make.graphics();S.fillStyle(16711680),S.fillRect(N.x+((E!=null&&E.onSide&&!(E!=null&&E.right)?eL:0)+AL)*R,N.y+((E!=null&&E.top?HR:0)+AL-2)*R,I-((E!=null&&E.onSide?eL:0)-AL*2)*R,(TT-(AL-2)*2)*R),S.setScale(6);const T=this.createGeometryMask(S);this.add(this.desc),this.desc.setMask(T),this.val=new Phaser.GameObjects.Container(s,E!=null&&E.right?I-eL:0,E!=null&&E.top||E!=null&&E.onSide?0:TT),this.add(this.val);const i=bt(0,0,eL,HR);i.setOrigin(0,0),this.val.add(i),this.typ=s.add.sprite(25,HR-35,UL("types"),"unknown"),this.typ.setScale(.8),this.val.add(this.typ),this.cat=s.add.sprite(57,HR-35,"categories","physical"),this.val.add(this.cat);const o=We(12,HR-25,"PP",Se.MOVE_INFO_CONTENT);o.setOrigin(0,.5),o.setText(D.t("fightUiHandler:pp")),this.val.add(o),this.pp=We(70,HR-25,"--",Se.MOVE_INFO_CONTENT),this.pp.setOrigin(1,.5),this.val.add(this.pp);const C=We(12,HR-17,"POWER",Se.MOVE_INFO_CONTENT);C.setOrigin(0,.5),C.setText(D.t("fightUiHandler:power")),this.val.add(C),this.pow=We(70,HR-17,"---",Se.MOVE_INFO_CONTENT),this.pow.setOrigin(1,.5),this.val.add(this.pow);const U=We(12,HR-9,"ACC",Se.MOVE_INFO_CONTENT);U.setOrigin(0,.5),U.setText(D.t("fightUiHandler:accuracy")),this.val.add(U),this.acc=We(70,HR-9,"---",Se.MOVE_INFO_CONTENT),this.acc.setOrigin(1,.5),this.val.add(this.acc),E!=null&&E.hideEffectBox&&this.val.setVisible(!1),E!=null&&E.hideBg&&this.descBg.setVisible(!1),this.setVisible(!1)}show(E){var I;if(!s.enableMoveInfo)return!1;this.move=E,this.pow.setText(E.power>=0?E.power.toString():"---"),this.acc.setText(E.accuracy>=0?E.accuracy.toString():"---"),this.pp.setText(E.pp>=0?E.pp.toString():"---"),this.typ.setTexture(UL("types"),L[E.type].toLowerCase()),this.cat.setFrame(u[E.category].toLowerCase()),this.desc.setText((E==null?void 0:E.effect)||""),this.descScroll&&(this.descScroll.remove(),this.descScroll=null,this.desc.y=((I=this.options)!=null&&I.top?HR:0)+AL-2);const R=Math.floor(this.desc.displayHeight*(96/72)/14.83);return R>3&&(this.descScroll=s.tweens.add({targets:this.desc,delay:KA(2e3),loop:-1,hold:KA(2e3),duration:KA((R-3)*2e3),y:`-=${14.83*(72/96)*(R-3)}`})),this.options.delayVisibility||this.setVisible(!0),this.active=!0,!0}clear(){this.setVisible(!1),this.active=!1}toggleInfo(E){E&&this.setVisible(!0),s.tweens.add({targets:this.desc,duration:KA(125),ease:"Sine.easeInOut",alpha:E?1:0}),E||this.setVisible(!1)}isActive(){return this.active}static getWidth(E){return s.game.canvas.width/li/2}static getHeight(E,R){return(R?Math.max(HR,TT):HR+TT)*E}};r(zD,"MoveInfoOverlay");let yL=zD;var PL=(t=>(t.Intro="INTRO",t.Access_Menu="ACCESS_MENU",t.Menu="MENU",t.Starter_Select="STARTER_SELECT",t.Pokedex="POKEDEX",t.Pokerus="POKERUS",t.Stat_Change="STAT_CHANGE",t.Select_Item="SELECT_ITEM",t.Egg_Gacha="EGG_GACHA",t))(PL||{});const rx={INTRO:r(()=>new Promise(t=>{s.ui.showText(D.t("tutorial:intro"),null,()=>t(),null,!0)}),"INTRO"),ACCESS_MENU:r(()=>new Promise(t=>{if(s.enableTouchControls)return t();s.showFieldOverlay(1e3).then(()=>s.ui.showText(D.t("tutorial:accessMenu"),null,()=>s.hideFieldOverlay(1e3).then(()=>t()),null,!0))}),"ACCESS_MENU"),MENU:r(()=>new Promise(t=>{s.gameData.saveTutorialFlag("ACCESS_MENU",!0),s.ui.showText(D.t("tutorial:menu"),null,()=>s.ui.showText("",null,()=>t()),null,!0)}),"MENU"),STARTER_SELECT:r(()=>new Promise(t=>{s.ui.showText(D.t("tutorial:starterSelect"),null,()=>s.ui.showText("",null,()=>t()),null,!0)}),"STARTER_SELECT"),POKERUS:r(()=>new Promise(t=>{s.ui.showText(D.t("tutorial:pokerus"),null,()=>s.ui.showText("",null,()=>t()),null,!0)}),"POKERUS"),STAT_CHANGE:r(()=>new Promise(t=>{s.showFieldOverlay(1e3).then(()=>s.ui.showText(D.t("tutorial:statChange"),null,()=>s.ui.showText("",null,()=>s.hideFieldOverlay(1e3).then(()=>t())),null,!0))}),"STAT_CHANGE"),SELECT_ITEM:r(()=>new Promise(t=>{s.ui.setModeWithoutClear(Ce.MESSAGE).then(()=>{s.ui.showText(D.t("tutorial:selectItem"),null,()=>s.ui.showText("",null,()=>s.ui.setModeWithoutClear(Ce.MODIFIER_SELECT).then(()=>t())),null,!0)})}),"SELECT_ITEM"),EGG_GACHA:r(()=>new Promise(t=>{s.ui.showText(D.t("tutorial:eggGacha"),null,()=>s.ui.showText("",null,()=>t()),null,!0)}),"EGG_GACHA")};async function $1(t){if(!s.enableTutorials&&!Ze.BYPASS_TUTORIAL_SKIP_OVERRIDE||s.gameData.getTutorialFlags()[t]&&!Ze.BYPASS_TUTORIAL_SKIP_OVERRIDE)return!1;const E=s.ui.getHandler(),R=s.disableMenu;return s.disableMenu=!0,E instanceof pL&&(E.tutorialActive=!0),await ix(E),await rx[t](),await ox(E),s.disableMenu=R,s.gameData.saveTutorialFlag(t,!0),E instanceof pL&&(E.tutorialActive=!1),!0}r($1,"handleTutorial");async function ix(t){if(t instanceof pL&&t.tutorialOverlay)s.tweens.add({targets:t.tutorialOverlay,alpha:.5,duration:750,ease:"Sine.easeOut",onComplete:r(()=>!0,"onComplete")});else return!0}r(ix,"showTutorialOverlay");async function ox(t){if(t instanceof pL&&t.tutorialOverlay)s.tweens.add({targets:t.tutorialOverlay,alpha:0,duration:500,ease:"Sine.easeOut",onComplete:r(()=>!0,"onComplete")});else return!0}r(ox,"hideTutorialOverlay");var GL=(t=>(t[t.REROLL=0]="REROLL",t[t.REWARDS=1]="REWARDS",t[t.SHOP=2]="SHOP",t[t.CHECK_TEAM=3]="CHECK_TEAM",t))(GL||{});const NL=7,nV=12,aV=24,BI=-62,yB=class yB extends pL{constructor(){super(Ce.CONFIRM),this.moveInfoOverlayActive=!1,this.rowCursor=0,this.options=[],this.shopOptionsRows=[]}setup(){const E=this.getUi();this.modifierContainer=s.add.container(0,0),E.add(this.modifierContainer);const I=document.createElement("canvas").getContext("2d"),N=OT(Se.PARTY,s.uiTheme).styleOptions;I&&(I.font=N.fontSize+"px "+N.fontFamily,this.transferButtonWidth=I.measureText(D.t("modifierSelectUiHandler:transfer")).width,this.checkButtonWidth=I.measureText(D.t("modifierSelectUiHandler:checkTeam")).width),this.transferButtonContainer=s.add.container((s.game.canvas.width-this.checkButtonWidth)/6-21,BI),this.transferButtonContainer.setName("transfer-btn"),this.transferButtonContainer.setVisible(!1),E.add(this.transferButtonContainer);const S=We(-4,-2,D.t("modifierSelectUiHandler:transfer"),Se.PARTY);S.setName("text-transfer-btn"),S.setOrigin(1,0),this.transferButtonContainer.add(S),this.checkButtonContainer=s.add.container(s.game.canvas.width/6-1,BI),this.checkButtonContainer.setName("use-btn"),this.checkButtonContainer.setVisible(!1),E.add(this.checkButtonContainer);const T=We(-4,-2,D.t("modifierSelectUiHandler:checkTeam"),Se.PARTY);T.setName("text-use-btn"),T.setOrigin(1,0),this.checkButtonContainer.add(T),this.rerollButtonContainer=s.add.container(16,BI),this.rerollButtonContainer.setName("reroll-brn"),this.rerollButtonContainer.setVisible(!1),E.add(this.rerollButtonContainer);const i=We(-4,-2,D.t("modifierSelectUiHandler:reroll"),Se.PARTY);i.setName("text-reroll-btn"),i.setOrigin(0,0),this.rerollButtonContainer.add(i),this.rerollCostText=We(0,0,"",Se.MONEY),this.rerollCostText.setName("text-reroll-cost"),this.rerollCostText.setOrigin(0,0),this.rerollCostText.setPositionRelative(i,i.displayWidth+5,1),this.rerollButtonContainer.add(this.rerollCostText),this.lockRarityButtonContainer=s.add.container(16,BI),this.lockRarityButtonContainer.setVisible(!1),E.add(this.lockRarityButtonContainer),this.lockRarityButtonText=We(-4,-2,D.t("modifierSelectUiHandler:lockRarities"),Se.PARTY),this.lockRarityButtonText.setOrigin(0,0),this.lockRarityButtonContainer.add(this.lockRarityButtonText),this.continueButtonContainer=s.add.container(s.game.canvas.width/12,-(s.game.canvas.height/12)),this.continueButtonContainer.setVisible(!1),E.add(this.continueButtonContainer);const o=We(-24,5,D.t("modifierSelectUiHandler:continueNextWaveButton"),Se.MESSAGE);o.setName("text-continue-btn"),this.continueButtonContainer.add(o);const C=1;this.moveInfoOverlay=new yL({delayVisibility:!0,scale:C,onSide:!0,right:!0,x:1,y:-yL.getHeight(C,!0)-1,width:s.game.canvas.width/6-2}),E.add(this.moveInfoOverlay),s.addInfoToggle(this.moveInfoOverlay)}show(E){if(s.disableMenu=!1,this.active)return E.length>=3&&(this.awaitingActionInput=!0,this.onActionInput=E[2]),this.moveInfoOverlay.active=this.moveInfoOverlayActive,!1;if(E.length!==4||!Array.isArray(E[1])||!(E[2]instanceof Function))return!1;super.show(E),this.getUi().clearText(),this.player=E[0];const R=this.player&&!!s.findModifiers(G=>G instanceof DA&&G.isTransferable).length,I=!!s.findModifier(G=>G instanceof qr);this.transferButtonContainer.setVisible(!1),this.transferButtonContainer.setAlpha(0),this.checkButtonContainer.setVisible(!1),this.checkButtonContainer.setAlpha(0),this.rerollButtonContainer.setVisible(!1),this.rerollButtonContainer.setAlpha(0),this.lockRarityButtonContainer.setVisible(!1),this.lockRarityButtonContainer.setAlpha(0),this.continueButtonContainer.setVisible(!1),this.continueButtonContainer.setAlpha(0),this.rerollButtonContainer.setPositionRelative(this.lockRarityButtonContainer,0,I?-12:0),this.rerollCost=E[3],this.updateRerollCostText();const N=E[1],S=s.gameMode.hasNoShop,T=new me(s.getWaveMoneyAmount(1));s.applyModifier($L,!0,T);const i=S?[]:gv(s.currentBattle.waveIndex,T.value),o=i.length>NL?-12:-24;for(let G=0;G<N.length;G++){const H=s.game.canvas.width/6/(N.length+2),c=new Yo(H*(G+1)+H*.5,-s.game.canvas.height/12+o,N[G]);c.setScale(.5),s.add.existing(c),this.modifierContainer.add(c),this.options.push(c)}const C=this.continueButtonContainer.getAt(0);C.y=o-5,C.setVisible(this.options.length===0);for(let G=0;G<i.length;G++){const H=G<NL?0:1,c=G<NL?G:G-NL,f=i.slice(H?NL:0,H?void 0:NL),d=s.game.canvas.width/6/(f.length+2),w=new Yo(d*(c+1)+d*.5,-s.game.canvas.height/12-s.game.canvas.height/32-(42-(28*H-1)),i[G]);w.setScale(.375),s.add.existing(w),this.modifierContainer.add(w),H>=this.shopOptionsRows.length&&this.shopOptionsRows.push([]),this.shopOptionsRows[H].push(w)}const U=N.map(G=>G.upgradeCount).reduce((G,H)=>Math.max(H,G),0);s.getModifierBar().updateModifiers(s.modifiers,!0),s.showShopOverlay(750*s.gameSpeed),s.updateAndShowText(750),s.updateBiomeWaveText(),s.updateMoneyText();let _=0;return s.tweens.addCounter({ease:"Sine.easeIn",duration:1250,onUpdate:r(G=>{const H=G.getValue(),c=Math.floor(H*N.length);if(c>_&&c<=N.length){const f=this.options[_];f==null||f.show(Math.floor((1-H)*1250)*.325+2e3*U,-(U-N[_].upgradeCount)),_++}},"onUpdate")}),s.time.delayedCall(1e3+U*2e3,()=>{for(const G of this.shopOptionsRows.flat())G.show(0,0)}),s.time.delayedCall(4e3+U*2e3,()=>{R&&(this.transferButtonContainer.setAlpha(0),this.transferButtonContainer.setVisible(!0),s.tweens.add({targets:this.transferButtonContainer,alpha:1,duration:250})),this.rerollButtonContainer.setAlpha(0),this.checkButtonContainer.setAlpha(0),this.lockRarityButtonContainer.setAlpha(0),this.continueButtonContainer.setAlpha(0),this.rerollButtonContainer.setVisible(!0),this.checkButtonContainer.setVisible(!0),this.continueButtonContainer.setVisible(this.rerollCost<0),this.lockRarityButtonContainer.setVisible(I),s.tweens.add({targets:[this.checkButtonContainer,this.continueButtonContainer],alpha:1,duration:250}),s.tweens.add({targets:[this.rerollButtonContainer,this.lockRarityButtonContainer],alpha:this.rerollCost<0?.5:1,duration:250});const G=r(()=>{s.shopCursorTarget===GL.CHECK_TEAM?(this.setRowCursor(0),this.setCursor(2)):s.shopCursorTarget===GL.SHOP&&s.gameMode.hasNoShop?(this.setRowCursor(GL.REWARDS),this.setCursor(0)):(this.setRowCursor(s.shopCursorTarget),this.setCursor(0))},"updateCursorTarget");G(),$1(PL.Select_Item).then(H=>{H&&G(),this.awaitingActionInput=!0,this.onActionInput=E[2]})}),!0}processInput(E){const R=this.getUi();if(!this.awaitingActionInput)return!1;let I=!1;if(E===he.ACTION){if(I=!0,this.onActionInput){const N=this.onActionInput;this.awaitingActionInput=!1,this.onActionInput=null,N(this.rowCursor,this.cursor)?(this.moveInfoOverlayActive=this.moveInfoOverlay.active,this.moveInfoOverlay.setVisible(!1),this.moveInfoOverlay.active=!1):(this.awaitingActionInput=!0,this.onActionInput=N)}}else if(E===he.CANCEL){if(this.player&&(I=!0,this.onActionInput)){const N=this.onActionInput;this.awaitingActionInput=!1,this.onActionInput=null,N(-1),this.moveInfoOverlayActive=this.moveInfoOverlay.active,this.moveInfoOverlay.setVisible(!1),this.moveInfoOverlay.active=!1}}else switch(E){case he.UP:this.rowCursor===0&&this.cursor===3?I=this.setCursor(0):this.rowCursor<this.shopOptionsRows.length+1?I=this.setRowCursor(this.rowCursor+1):I=this.setRowCursor(0);break;case he.DOWN:this.rowCursor?I=this.setRowCursor(this.rowCursor-1):this.lockRarityButtonContainer.visible&&this.cursor===0?I=this.setCursor(3):I=this.setRowCursor(this.shopOptionsRows.length+1);break;case he.LEFT:if(this.rowCursor)this.cursor?I=this.setCursor(this.cursor-1):this.rowCursor===1&&this.options.length===0?I=!1:I=this.setCursor(this.getRowItems(this.rowCursor)-1);else switch(this.cursor){case 0:I=this.setCursor(2);break;case 1:this.lockRarityButtonContainer.visible?I=this.setCursor(3):I=this.rerollButtonContainer.visible&&this.setCursor(0);break;case 2:this.transferButtonContainer.visible?I=this.setCursor(1):this.rerollButtonContainer.visible?I=this.setCursor(0):I=!1;break;case 3:this.lockRarityButtonContainer.visible?I=this.setCursor(2):I=!1}break;case he.RIGHT:if(this.rowCursor)this.cursor<this.getRowItems(this.rowCursor)-1?I=this.setCursor(this.cursor+1):this.rowCursor===1&&this.options.length===0?I=this.setRowCursor(0):I=this.setCursor(0);else switch(this.cursor){case 0:this.transferButtonContainer.visible?I=this.setCursor(1):I=this.setCursor(2);break;case 1:I=this.setCursor(2);break;case 2:I=this.setCursor(0);break;case 3:this.transferButtonContainer.visible?I=this.setCursor(1):I=this.setCursor(2);break}break}return I&&R.playSelect(),I}setCursor(E){const R=this.getUi(),I=super.setCursor(E);this.cursorObj||(this.cursorObj=s.add.image(0,0,"cursor"),this.modifierContainer.add(this.cursorObj));const N=this.rowCursor===1?this.options:this.shopOptionsRows[this.shopOptionsRows.length-(this.rowCursor-1)];if(this.cursorObj.setScale(this.rowCursor===1?2:this.rowCursor>=2?1.5:1),this.moveInfoOverlay.clear(),this.rowCursor){if(this.rowCursor===1&&N.length===0)return this.cursorObj.setScale(1.25),this.cursorObj.setPosition(s.game.canvas.width/18+23,-s.game.canvas.height/12-(this.shopOptionsRows.length>1?nV-2:aV-2)),R.showText(D.t("modifierSelectUiHandler:continueNextWaveDescription")),I;const S=s.game.canvas.width/6/(N.length+2);this.rowCursor<2?this.cursorObj.setPosition(S*(E+1)+S*.5-20,-s.game.canvas.height/12-(this.shopOptionsRows.length>1?nV-2:aV-2)):this.cursorObj.setPosition(S*(E+1)+S*.5-16,-s.game.canvas.height/12-s.game.canvas.height/32-(-14+28*(this.rowCursor-(this.shopOptionsRows.length-1))));const T=N[this.cursor].modifierTypeOption.type;T&&R.showText(T.getDescription()),T instanceof wN&&this.moveInfoOverlay.show(Ke[T.moveId])}else E===0?(this.cursorObj.setPosition(6,this.lockRarityButtonContainer.visible?BI-8:BI+4),R.showText(D.t("modifierSelectUiHandler:rerollDesc"))):E===1?(this.cursorObj.setPosition((s.game.canvas.width-this.transferButtonWidth-this.checkButtonWidth)/6-30,BI+4),R.showText(D.t("modifierSelectUiHandler:transferDesc"))):E===2?(this.cursorObj.setPosition((s.game.canvas.width-this.checkButtonWidth)/6-10,BI+4),R.showText(D.t("modifierSelectUiHandler:checkTeamDesc"))):(this.cursorObj.setPosition(6,BI+4),R.showText(D.t("modifierSelectUiHandler:lockRaritiesDesc")));return I}setRowCursor(E){const R=this.rowCursor;if(E!==R){this.rowCursor=E;let I=Math.round(this.cursor/Math.max(this.getRowItems(R)-1,1)*(this.getRowItems(E)-1));return E===1&&this.options.length===0&&(I=0),E===0&&(this.options.length===0&&(I=1),I===0&&!this.rerollButtonContainer.visible&&(I=1),I===1&&!this.transferButtonContainer.visible&&(I=2)),E===0&&R>1&&I===0&&this.lockRarityButtonContainer.visible&&(I=3),E===this.shopOptionsRows.length+1&&R===0&&this.cursor===3&&(I=0),this.cursor=-1,this.setCursor(I),!0}return!1}getRowItems(E){switch(E){case 0:return 3;case 1:return this.options.length;default:return this.shopOptionsRows[this.shopOptionsRows.length-(E-1)].length}}setRerollCost(E){this.rerollCost=E}updateCostText(){const E=this.shopOptionsRows.flat();for(const R of E)R.updateCostText();this.updateRerollCostText()}updateRerollCostText(){if(this.rerollCost<0){this.rerollCostText.setVisible(!1);return}this.rerollCostText.setVisible(!0);const R=s.money>=this.rerollCost,I=UM(s.moneyFormat,this.rerollCost);this.rerollCostText.setText(D.t("modifierSelectUiHandler:rerollCost",{formattedMoney:I})),this.rerollCostText.setColor(this.getTextColor(R?Se.MONEY:Se.PARTY_RED)),this.rerollCostText.setShadowColor(this.getTextColor(R?Se.MONEY:Se.PARTY_RED,!0))}updateLockRaritiesText(){const E=s.lockModifierTiers?Se.SUMMARY_BLUE:Se.PARTY;this.lockRarityButtonText.setColor(this.getTextColor(E)),this.lockRarityButtonText.setShadowColor(this.getTextColor(E,!0))}clear(){super.clear(),this.moveInfoOverlay.clear(),this.moveInfoOverlayActive=!1,this.awaitingActionInput=!1,this.onActionInput=null,this.getUi().clearText(),this.eraseCursor(),this.cursor=0,this.rowCursor=0,s.hideShopOverlay(750*s.gameSpeed),s.hideLuckText(250),s.getModifierBar().updateModifiers(s.modifiers);const E=this.options.concat(this.shopOptionsRows.flat());this.options.splice(0,this.options.length),this.shopOptionsRows.splice(0,this.shopOptionsRows.length),s.tweens.add({targets:E,scale:.01,duration:250,ease:"Cubic.easeIn",onComplete:r(()=>E.forEach(R=>R.destroy()),"onComplete")}),[this.rerollButtonContainer,this.checkButtonContainer,this.transferButtonContainer,this.lockRarityButtonContainer,this.continueButtonContainer].forEach(R=>{R.visible&&s.tweens.add({targets:R,alpha:0,duration:250,ease:"Cubic.easeIn",onComplete:r(()=>{this.options.length?R.setAlpha(1):R.setVisible(!1)},"onComplete")})})}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};r(yB,"ModifierSelectUiHandler");let rV=yB;const wB=class wB extends Kt.GameObjects.Container{constructor(E,R,I){super(s,E,R),this.modifierTypeOption=I,this.setup()}setup(){var R,I,N;if(!this.modifierTypeOption.cost){const S=r(()=>{const T=s.add.sprite(0,-182,"pb",this.getPbAtlasKey(-this.modifierTypeOption.upgradeCount));return T.setScale(2),T},"getPb");this.pb=S(),this.add(this.pb),this.pbTint=S(),this.pbTint.setVisible(!1),this.add(this.pbTint)}this.itemContainer=s.add.container(0,0),this.itemContainer.setScale(.5),this.itemContainer.setAlpha(0),this.add(this.itemContainer);const E=r(()=>{var T;return s.add.sprite(0,0,"items",(T=this.modifierTypeOption.type)==null?void 0:T.iconImage)},"getItem");this.item=E(),this.itemContainer.add(this.item),this.modifierTypeOption.cost||(this.itemTint=E(),this.itemTint.setTintFill(Kt.Display.Color.GetColor(255,192,255)),this.itemContainer.add(this.itemTint)),this.itemText=We(0,35,(R=this.modifierTypeOption.type)==null?void 0:R.name,Se.PARTY,{align:"center"}),this.itemText.setOrigin(.5,0),this.itemText.setAlpha(0),this.itemText.setTint((I=this.modifierTypeOption.type)!=null&&I.tier?ds((N=this.modifierTypeOption.type)==null?void 0:N.tier):void 0),this.add(this.itemText),this.modifierTypeOption.cost&&(this.itemCostText=We(0,45,"",Se.MONEY,{align:"center"}),this.itemCostText.setOrigin(.5,0),this.itemCostText.setAlpha(0),this.add(this.itemCostText),this.updateCostText())}show(E,R){if(!this.modifierTypeOption.cost){s.tweens.add({targets:this.pb,y:0,duration:1250,ease:"Bounce.Out"});let I=1,N=0,S=!1;s.tweens.addCounter({from:1,to:0,duration:1250,ease:"Bounce.Out",onUpdate:r(T=>{if(!s)return;const i=T.getValue();!S&&i>I?(s.playSound("se/pb_bounce_1",{volume:1/++N}),S=!0):S&&i<I&&(S=!1),I=i},"onUpdate")});for(let T=0;T<this.modifierTypeOption.upgradeCount;T++){const i=T;s.time.delayedCall(E-2e3*(this.modifierTypeOption.upgradeCount-(i+1+R)),()=>{s.playSound("se/upgrade",{rate:1+.25*i}),this.pbTint.setPosition(this.pb.x,this.pb.y),this.pbTint.setTintFill(16777215),this.pbTint.setAlpha(0),this.pbTint.setVisible(!0),s.tweens.add({targets:this.pbTint,alpha:1,duration:1e3,ease:"Sine.easeIn",onComplete:r(()=>{this.pb.setTexture("pb",this.getPbAtlasKey(-this.modifierTypeOption.upgradeCount+(i+1))),s.tweens.add({targets:this.pbTint,alpha:0,duration:750,ease:"Sine.easeOut",onComplete:r(()=>{this.pbTint.setVisible(!1)},"onComplete")})},"onComplete")})})}}s.time.delayedCall(E+2e3,()=>{s&&(this.modifierTypeOption.cost||(this.pb.setTexture("pb",`${this.getPbAtlasKey(0)}_open`),s.playSound("se/pb_rel"),s.tweens.add({targets:this.pb,duration:500,delay:250,ease:"Sine.easeIn",alpha:0,onComplete:r(()=>this.pb.destroy(),"onComplete")})),s.tweens.add({targets:this.itemContainer,duration:500,ease:"Elastic.Out",scale:2,alpha:1}),this.modifierTypeOption.cost||s.tweens.add({targets:this.itemTint,alpha:0,duration:500,ease:"Sine.easeIn",onComplete:r(()=>this.itemTint.destroy(),"onComplete")}),s.tweens.add({targets:this.itemText,duration:500,alpha:1,y:25,ease:"Cubic.easeInOut"}),this.itemCostText&&s.tweens.add({targets:this.itemCostText,duration:500,alpha:1,y:35,ease:"Cubic.easeInOut"}))})}getPbAtlasKey(E=0){var R;return xI(((R=this.modifierTypeOption.type)==null?void 0:R.tier)+E)}updateCostText(){const E=Ze.WAIVE_ROLL_FEE_OVERRIDE?0:this.modifierTypeOption.cost,R=E<=s.money?Se.MONEY:Se.PARTY_RED,I=UM(s.moneyFormat,E);this.itemCostText.setText(D.t("modifierSelectUiHandler:itemCost",{formattedMoney:I})),this.itemCostText.setColor(pA(R,!1,s.uiTheme)),this.itemCostText.setShadowColor(pA(R,!0,s.uiTheme))}};r(wB,"ModifierOption");let Yo=wB;const Tn=class Tn extends Nt{constructor(E=0,R,I,N=!1){super(),this.rerollCount=E,this.modifierTiers=R,this.customModifierSettings=I,this.isCopy=N}start(){var N,S,T;super.start(),!this.rerollCount&&!this.isCopy?this.updateSeed():this.rerollCount&&(s.reroll=!1);const E=s.getPlayerParty();this.isCopy||jL(E,this.getPoolType(),this.rerollCount);const R=new me(3);if(this.isPlayer()&&(s.applyModifiers(qL,!0,R),s.applyModifiers(zL,!0,R)),this.customModifierSettings){const i=(((N=this.customModifierSettings.guaranteedModifierTiers)==null?void 0:N.length)||0)+(((S=this.customModifierSettings.guaranteedModifierTypeOptions)==null?void 0:S.length)||0)+(((T=this.customModifierSettings.guaranteedModifierTypeFuncs)==null?void 0:T.length)||0);if(this.customModifierSettings.fillRemaining){const o=R.value;R.value=o>i?o:i}else R.value=i}this.typeOptions=this.getModifierTypeOptions(R.value);const I=r((i,o)=>{if(i<0||o<0)return s.ui.showText(D.t("battle:skipItemQuestion"),null,()=>{s.ui.setOverlayMode(Ce.CONFIRM,()=>{s.ui.revertMode(),s.ui.setMode(Ce.MESSAGE),super.end()},()=>s.ui.setMode(Ce.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,I,this.getRerollCost(s.lockModifierTiers)))}),!1;let C,U;const _=this.getRerollCost(s.lockModifierTiers);switch(i){case 0:switch(o){case 0:if(_<0||s.money<_)return s.ui.playError(),!1;s.reroll=!0,s.unshiftPhase(new Tn(this.rerollCount+1,this.typeOptions.map(w=>{var m;return(m=w.type)==null?void 0:m.tier}).filter(w=>w!==void 0))),s.ui.clearText(),s.ui.setMode(Ce.MESSAGE).then(()=>super.end()),Ze.WAIVE_ROLL_FEE_OVERRIDE||(s.money-=_,s.updateMoneyText(),s.animateMoneyChanged(!1)),s.playSound("se/buy");break;case 1:s.ui.setModeWithoutClear(Ce.PARTY,CR.MODIFIER_TRANSFER,-1,(w,m,W,v)=>{if(v!==void 0&&w<6&&v<6&&w!==v&&m>-1){const Oe=s.findModifiers(q=>q instanceof DA&&q.isTransferable&&q.pokemonId===E[w].id)[m];s.tryTransferHeldItemModifier(Oe,E[v],!0,W,void 0,void 0,!1)}else s.ui.setMode(Ce.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,I,this.getRerollCost(s.lockModifierTiers))},st.FilterItemMaxStacks);break;case 2:s.ui.setModeWithoutClear(Ce.PARTY,CR.CHECK,-1,()=>{s.ui.setMode(Ce.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,I,this.getRerollCost(s.lockModifierTiers))});break;case 3:if(_<0)return s.ui.playError(),!1;s.lockModifierTiers=!s.lockModifierTiers;const d=s.ui.getHandler();return d.setRerollCost(this.getRerollCost(s.lockModifierTiers)),d.updateLockRaritiesText(),d.updateRerollCostText(),!1}return!0;case 1:if(this.typeOptions.length===0)return s.ui.clearText(),s.ui.setMode(Ce.MESSAGE),super.end(),!0;this.typeOptions[o].type&&(C=this.typeOptions[o].type);break;default:const H=gv(s.currentBattle.waveIndex,s.getWaveMoneyAmount(1)),c=H[i>2||H.length<=NL?o:o+NL];c.type&&(C=c.type);const f=new me(c.cost);s.applyModifier($L,!0,f),U=f.value;break}if(U&&s.money<U&&!Ze.WAIVE_ROLL_FEE_OVERRIDE)return s.ui.playError(),!1;const G=r((H,c=!1)=>{const f=s.addModifier(H,!1,c,void 0,void 0,U);(H.type instanceof zs||H.type instanceof wN)&&s.unshiftPhase(this.copy()),U&&!(H.type instanceof zs)?f?(Ze.WAIVE_ROLL_FEE_OVERRIDE||(s.money-=U,s.updateMoneyText(),s.animateMoneyChanged(!1)),s.playSound("se/buy"),s.ui.getHandler().updateCostText()):s.ui.playError():(s.ui.clearText(),s.ui.setMode(Ce.MESSAGE),super.end())},"applyModifier");if(C instanceof PR)if(C instanceof Xo)s.ui.setModeWithoutClear(Ce.PARTY,CR.SPLICE,-1,(H,c)=>{c!==void 0&&H<6&&c<6&&H!==c?s.ui.setMode(Ce.MODIFIER_SELECT,this.isPlayer()).then(()=>{const f=C.newModifier(E[H],E[c]);G(f,!0)}):s.ui.setMode(Ce.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,I,this.getRerollCost(s.lockModifierTiers))},C.selectFilter);else{const H=C,c=C instanceof rS,f=C instanceof wN,d=C instanceof zs,w=C instanceof Wa||C instanceof ma,m=c?CR.MOVE_MODIFIER:f?CR.TM_MODIFIER:d?CR.REMEMBER_MOVE_MODIFIER:CR.MODIFIER,W=f?C.moveId:void 0;s.ui.setModeWithoutClear(Ce.PARTY,m,-1,(v,$)=>{v<6?s.ui.setMode(Ce.MODIFIER_SELECT,this.isPlayer()).then(()=>{const Oe=c?C.newModifier(E[v],$-Ya.MOVE_1):d?C.newModifier(E[v],$):C.newModifier(E[v]);G(Oe,!0)}):s.ui.setMode(Ce.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,I,this.getRerollCost(s.lockModifierTiers))},H.selectFilter,C instanceof rS?C.moveSelectFilter:void 0,W,w)}else G(C.newModifier());return!U},"modifierSelectCallback");s.ui.setMode(Ce.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,I,this.getRerollCost(s.lockModifierTiers))}updateSeed(){s.resetSeed()}isPlayer(){return!0}getRerollCost(E){var T;let R=0;if(Ze.WAIVE_ROLL_FEE_OVERRIDE)return R;if(E){const i=[50,125,300,750,2e3];for(const o of this.typeOptions)R+=i[o.type.tier??0]}else R=250;let I=1;if(!Ne((T=this.customModifierSettings)==null?void 0:T.rerollMultiplier)){if(this.customModifierSettings.rerollMultiplier<0)return-1;I=this.customModifierSettings.rerollMultiplier}const N=Math.min(Math.ceil(s.currentBattle.waveIndex/10)*R*2**this.rerollCount*I,Number.MAX_SAFE_INTEGER),S=new me(N);return s.applyModifier($L,!0,S),S.value}getPoolType(){return lt.PLAYER}getModifierTypeOptions(E){return z1(E,s.getPlayerParty(),s.lockModifierTiers?this.modifierTiers:void 0,this.customModifierSettings)}copy(){var E;return new Tn(this.rerollCount,this.modifierTiers,{guaranteedModifierTypeOptions:this.typeOptions,rerollMultiplier:(E=this.customModifierSettings)==null?void 0:E.rerollMultiplier,allowLuckUpgrades:!1},!0)}addModifier(E){return s.addModifier(E,!1,!0)}};r(Tn,"SelectModifierPhase");let JO=Tn;const iV=D.t("partyUiHandler:choosePokemon");var CR=(t=>(t[t.SWITCH=0]="SWITCH",t[t.FAINT_SWITCH=1]="FAINT_SWITCH",t[t.POST_BATTLE_SWITCH=2]="POST_BATTLE_SWITCH",t[t.REVIVAL_BLESSING=3]="REVIVAL_BLESSING",t[t.MODIFIER=4]="MODIFIER",t[t.MOVE_MODIFIER=5]="MOVE_MODIFIER",t[t.TM_MODIFIER=6]="TM_MODIFIER",t[t.REMEMBER_MOVE_MODIFIER=7]="REMEMBER_MOVE_MODIFIER",t[t.MODIFIER_TRANSFER=8]="MODIFIER_TRANSFER",t[t.SPLICE=9]="SPLICE",t[t.RELEASE=10]="RELEASE",t[t.CHECK=11]="CHECK",t[t.SELECT=12]="SELECT",t))(CR||{}),Ya=(t=>(t[t.CANCEL=-1]="CANCEL",t[t.SEND_OUT=0]="SEND_OUT",t[t.PASS_BATON=1]="PASS_BATON",t[t.REVIVE=2]="REVIVE",t[t.APPLY=3]="APPLY",t[t.TEACH=4]="TEACH",t[t.TRANSFER=5]="TRANSFER",t[t.SUMMARY=6]="SUMMARY",t[t.POKEDEX=7]="POKEDEX",t[t.UNPAUSE_EVOLUTION=8]="UNPAUSE_EVOLUTION",t[t.SPLICE=9]="SPLICE",t[t.UNSPLICE=10]="UNSPLICE",t[t.RELEASE=11]="RELEASE",t[t.RENAME=12]="RENAME",t[t.SELECT=13]="SELECT",t[t.SCROLL_UP=1e3]="SCROLL_UP",t[t.SCROLL_DOWN=1001]="SCROLL_DOWN",t[t.FORM_CHANGE_ITEM=2e3]="FORM_CHANGE_ITEM",t[t.MOVE_1=3e3]="MOVE_1",t[t.MOVE_2=3001]="MOVE_2",t[t.MOVE_3=3002]="MOVE_3",t[t.MOVE_4=3003]="MOVE_4",t[t.ALL=4e3]="ALL",t))(Ya||{});const FO=class FO extends aS{constructor(){super(Ce.PARTY),this.optionsCursor=0,this.optionsScrollCursor=0,this.optionsScrollTotal=0,this.lastCursor=0,this.FilterChallengeLegal=E=>{const R=new SA(!0);return JR(PO.POKEMON_IN_BATTLE,E,R),R.value?null:D.t("partyUiHandler:cantBeUsed",{pokemonName:Z(E,!1)})},this.localizedOptions=[0,6,7,-1,3,11,4,9,10,2,5,8,1,12,13]}setup(){const E=this.getUi(),R=s.add.container(0,0);R.setName("party"),R.setVisible(!1),E.add(R),this.partyContainer=R,this.partyBg=s.add.image(0,0,"party_bg"),this.partyBg.setName("img-party-bg"),R.add(this.partyBg),this.partyBg.setOrigin(0,1);const I=s.add.container(0,0);I.setName("party-slots"),R.add(I),this.partySlotsContainer=I;const N=s.add.container(0,-32);N.setName("party-msg-box"),R.add(N);const S=bt(1,31,262,30);S.setName("window-party-msg-box"),S.setOrigin(0,1),N.add(S),this.partyMessageBox=S;const T=We(10,8,iV,Se.WINDOW,{maxLines:2});T.setName("text-party-msg"),T.setOrigin(0,0),N.add(T),this.message=T;const i=new qP(291,-16);R.add(i),this.partyCancelButton=i,this.optionsContainer=s.add.container(s.game.canvas.width/6-1,-1),R.add(this.optionsContainer),this.iconAnimHandler=new JP,this.iconAnimHandler.setup();const o=1;this.moveInfoOverlay=new yL({scale:o,top:!0,x:1,y:-yL.getHeight(o)-1,width:s.game.canvas.width/12-30}),E.add(this.moveInfoOverlay),this.options=[],this.partySlots=[]}show(E){return!E.length||this.active?!1:(super.show(E),this.moveInfoOverlay.clear(),this.partyUiMode=E[0],this.fieldIndex=E.length>1?E[1]:-1,this.selectCallback=E.length>2&&E[2]instanceof Function?E[2]:void 0,this.selectFilter=E.length>3&&E[3]instanceof Function?E[3]:FO.FilterAll,this.moveSelectFilter=E.length>4&&E[4]instanceof Function?E[4]:FO.FilterAllMoves,this.tmMoveId=E.length>5&&E[5]?E[5]:A.NONE,this.showMovePp=E.length>6&&E[6],this.partyContainer.setVisible(!0),this.partyBg.setTexture(`party_bg${s.currentBattle.double?"_double":""}`),this.populatePartySlots(),this.setCursor(0),!0)}processInput(E){var N,S;const R=this.getUi();if(this.pendingPrompt||this.blockInput)return!1;if(this.awaitingActionInput){if((E===he.ACTION||E===he.CANCEL)&&this.onActionInput){R.playSelect();const T=this.onActionInput;return this.onActionInput=null,T(),this.awaitingActionInput=!1,!0}return!1}let I=!1;if(this.optionsMode){const T=this.options[this.optionsCursor];if(E===he.ACTION){const i=s.getPlayerParty()[this.cursor];if(this.partyUiMode===8&&!this.transferMode&&T!==-1){this.startTransfer();let o;for(let C=0;C<s.getPlayerParty().length;C++){const U=s.getPlayerParty()[C],_=r(c=>s.findModifiers(f=>f instanceof DA&&f.isTransferable&&f.pokemonId===c.id),"getTransferrableItemsFromPokemon"),G=s.findModifier(c=>c instanceof DA&&c.pokemonId===U.id&&c.matchType(_(i)[this.transferOptionCursor])),H=this.partySlots.filter(c=>c.getPokemon()===U)[0];C!==this.transferCursor?G?G.getMaxStackCount()===G.stackCount?o=D.t("partyUiHandler:notAble"):o=D.t("partyUiHandler:able"):o=D.t("partyUiHandler:able"):o="",H.slotHpBar.setVisible(!1),H.slotHpOverlay.setVisible(!1),H.slotHpText.setVisible(!1),H.slotDescriptionLabel.setText(o),H.slotDescriptionLabel.setVisible(!0)}return this.clearOptions(),R.playSelect(),!0}if(this.partyUiMode===7&&T!==-1){this.moveInfoOverlay.clear();const o=this.selectFilter(i);return o===null?((N=this.selectCallback)==null||N.call(this,this.cursor,T),this.clearOptions()):(this.clearOptions(),this.showText(o,void 0,()=>this.showText("",0),void 0,!0)),R.playSelect(),!0}if(![6,7,8,10,11,-1,12].includes(T)||T===11&&this.partyUiMode===10){let o;const C=r(U=>s.findModifiers(_=>_ instanceof DA&&_.isTransferable&&_.pokemonId===U.id),"getTransferrableItemsFromPokemon");if(T!==5&&T!==9?(o=this.selectFilter(i),o===null&&(T===0||T===1)&&(o=this.FilterChallengeLegal(i)),o===null&&this.partyUiMode===5&&(o=this.moveSelectFilter(i.moveset[this.optionsCursor]))):o=this.selectFilter(i,C(s.getPlayerParty()[this.transferCursor])[this.transferOptionCursor]),o===null){if(this.partyUiMode!==9&&this.clearOptions(),this.selectCallback&&this.partyUiMode!==11)if(T===5)this.transferCursor!==this.cursor&&(this.transferAll?C(s.getPlayerParty()[this.transferCursor]).forEach((U,_,G)=>{const H=G.length-1-_;this.selectCallback(this.transferCursor,H,this.transferQuantitiesMax[H],this.cursor)}):this.selectCallback(this.transferCursor,this.transferOptionCursor,this.transferQuantities[this.transferOptionCursor],this.cursor)),this.clearTransfer();else if(this.partyUiMode===9)T===9?(this.selectCallback(this.transferCursor,this.cursor),this.clearTransfer()):this.startTransfer(),this.clearOptions();else if(T===11)this.doRelease(this.cursor);else{const U=this.selectCallback;this.selectCallback=null,U(this.cursor,T)}else if(T>=2e3&&s.getCurrentPhase()instanceof JO){if(this.partyUiMode===11){const _=this.getFormChangeItemsModifiers(i)[T-2e3];_.active=!_.active,s.triggerPokemonFormChange(i,re,!1,!0)}}else this.cursor&&s.getCurrentPhase().handleCommand(GE.POKEMON,this.cursor,T===1);return this.partyUiMode!==4&&this.partyUiMode!==6&&this.partyUiMode!==5&&R.playSelect(),!0}this.clearOptions(),this.showText(o,void 0,()=>this.showText("",0),void 0,!0)}else{if(T===6)return R.playSelect(),R.setModeWithoutClear(Ce.SUMMARY,i).then(()=>this.clearOptions()),!0;if(T===7){R.playSelect();const o={shiny:i.shiny,variant:i.variant,form:i.formIndex,female:i.gender===ye.FEMALE};return R.setOverlayMode(Ce.POKEDEX_PAGE,i.species,o).then(()=>this.clearOptions()),!0}else if(T===8)this.clearOptions(),R.playSelect(),i.pauseEvolutions=!i.pauseEvolutions,this.showText(D.t(i.pauseEvolutions?"partyUiHandler:pausedEvolutions":"partyUiHandler:unpausedEvolutions",{pokemonName:Z(i,!1)}),void 0,()=>this.showText("",0),null,!0);else if(T===10)this.clearOptions(),R.playSelect(),this.showText(D.t("partyUiHandler:unspliceConfirmation",{fusionName:(S=i.fusionSpecies)==null?void 0:S.name,pokemonName:i.getName()}),null,()=>{R.setModeWithoutClear(Ce.CONFIRM,()=>{const o=i.getName();i.unfuse().then(()=>{this.clearPartySlots(),this.populatePartySlots(),R.setMode(Ce.PARTY),this.showText(D.t("partyUiHandler:wasReverted",{fusionName:o,pokemonName:i.getName(!1)}),void 0,()=>{R.setMode(Ce.PARTY),this.showText("",0)},null,!0)})},()=>{R.setMode(Ce.PARTY),this.showText("",0)})});else{if(T===11)return this.clearOptions(),R.playSelect(),this.cursor>=s.currentBattle.getBattlerCount()||!i.isAllowedInBattle()?(this.blockInput=!0,this.showText(D.t("partyUiHandler:releaseConfirmation",{pokemonName:Z(i,!1)}),null,()=>{this.blockInput=!1,R.setModeWithoutClear(Ce.CONFIRM,()=>{R.setMode(Ce.PARTY),this.doRelease(this.cursor)},()=>{R.setMode(Ce.PARTY),this.showText("",0)})})):this.showText(D.t("partyUiHandler:releaseInBattle"),null,()=>this.showText("",0),null,!0),!0;if(T===12)return this.clearOptions(),R.playSelect(),R.setModeWithoutClear(Ce.RENAME_POKEMON,{buttonActions:[o=>{R.playSelect(),i.nickname=o,i.updateInfo(),this.clearPartySlots(),this.populatePartySlots(),R.setMode(Ce.PARTY)},()=>{R.setMode(Ce.PARTY)}]},i),!0;if(T===-1)return this.processInput(he.CANCEL);if(T===13)return R.playSelect(),!0}}}else{if(E===he.CANCEL)return this.clearOptions(),R.playSelect(),!0;switch(E){case he.LEFT:this.partyUiMode===8&&(this.transferQuantities[T]=this.transferQuantities[T]===1?this.transferQuantitiesMax[T]:this.transferQuantities[T]-1,this.updateOptions(),I=this.setCursor(this.optionsCursor));break;case he.RIGHT:this.partyUiMode===8&&(this.transferQuantities[T]=this.transferQuantities[T]===this.transferQuantitiesMax[T]?1:this.transferQuantities[T]+1,this.updateOptions(),I=this.setCursor(this.optionsCursor));break;case he.UP:this.partyUiMode===8&&(T!==4e3&&(this.transferQuantities[T]=this.transferQuantitiesMax[T]),this.updateOptions()),I=this.setCursor(this.optionsCursor?this.optionsCursor-1:this.options.length-1);break;case he.DOWN:this.partyUiMode===8&&(T!==4e3&&(this.transferQuantities[T]=this.transferQuantitiesMax[T]),this.updateOptions()),I=this.setCursor(this.optionsCursor<this.options.length-1?this.optionsCursor+1:0);break}if(this.partyUiMode===7){const i=this.options[this.optionsCursor],o=s.getPlayerParty()[this.cursor],C=Ke[o.getLearnableLevelMoves()[i]];C?this.moveInfoOverlay.show(C):this.moveInfoOverlay.clear()}}}else{if(E===he.ACTION){if(this.cursor<6){if(this.partyUiMode===8&&!this.transferMode){const o=s.findModifiers(C=>C instanceof DA&&C.isTransferable&&C.pokemonId===s.getPlayerParty()[this.cursor].id);this.transferQuantities=o.map(C=>C.getStackCount()),this.transferQuantitiesMax=o.map(C=>C.getStackCount())}this.showOptions(),R.playSelect()}else if(this.partyUiMode===1||this.partyUiMode===3)R.playError();else return this.processInput(he.CANCEL);return!0}if(E===he.CANCEL){if((this.partyUiMode===8||this.partyUiMode===9)&&this.transferMode)this.clearTransfer(),R.playSelect();else if(this.partyUiMode!==1&&this.partyUiMode!==3)if(this.selectCallback){const o=this.selectCallback;this.selectCallback=null,o(6,-1),R.playSelect()}else R.setMode(Ce.COMMAND,this.fieldIndex),R.playSelect();return!0}const T=this.partySlots.length,i=s.currentBattle.getBattlerCount();switch(E){case he.UP:I=this.setCursor(this.cursor?this.cursor<6?this.cursor-1:T-1:6);break;case he.DOWN:I=this.setCursor(this.cursor<6?this.cursor<T-1?this.cursor+1:6:0);break;case he.LEFT:this.cursor>=i&&this.cursor<=6&&(I=this.setCursor(0));break;case he.RIGHT:if(T===i){I=this.setCursor(6);break}if(i>=2&&T>i&&this.getCursor()===0&&this.lastCursor===1){I=this.setCursor(2);break}if(T>i&&this.cursor<i){I=this.setCursor(this.lastCursor<6&&this.lastCursor||i);break}}}return I&&R.playSelect(),I}populatePartySlots(){const E=s.getPlayerParty();this.cursor<6&&this.cursor>=E.length?this.cursor=E.length-1:this.cursor===6&&this.partyCancelButton.select(),this.lastCursor<6&&this.lastCursor>=E.length&&(this.lastCursor=E.length-1);for(const R in E){const I=Number.parseInt(R),N=new $P(I,E[R],this.iconAnimHandler,this.partyUiMode,this.tmMoveId);s.add.existing(N),this.partySlotsContainer.add(N),this.partySlots.push(N),this.cursor===I&&N.select()}}setCursor(E){let R;if(this.optionsMode){R=this.optionsCursor!==E;let I=!1;if(R&&this.optionsScroll)if(Math.abs(E-this.optionsCursor)===this.options.length-1)this.optionsScrollCursor=E?this.optionsScrollTotal-8:0,this.updateOptions();else{const N=E&&E>this.optionsCursor;N?this.options[E]===1001&&(I=!0,this.optionsScrollCursor++):!E&&this.optionsScrollCursor&&(I=!0,this.optionsScrollCursor--),I&&this.optionsScrollCursor===1&&(this.optionsScrollCursor+=N?1:-1)}I?this.updateOptions():this.optionsCursor=E,this.optionsCursorObj||(this.optionsCursorObj=s.add.image(0,0,"cursor"),this.optionsCursorObj.setOrigin(0,0),this.optionsContainer.add(this.optionsCursorObj)),this.optionsCursorObj.setPosition(8-this.optionsBg.displayWidth,-19-16*(this.options.length-1-this.optionsCursor))}else R=this.cursor!==E,R&&(this.lastCursor=this.cursor,this.cursor=E,this.lastCursor<6?this.partySlots[this.lastCursor].deselect():this.lastCursor===6&&this.partyCancelButton.deselect(),E<6?this.partySlots[E].select():E===6&&this.partyCancelButton.select());return R}showText(E,R,I,N,S,T){E.length===0&&(E=iV),(E==null?void 0:E.indexOf(`
`))===-1?(this.partyMessageBox.setSize(262,30),this.message.setY(10)):(this.partyMessageBox.setSize(262,42),this.message.setY(-5)),super.showText(E,R,I,N,S,T)}showOptions(){if(this.cursor===6)return;this.optionsMode=!0;let E=D.t("partyUiHandler:doWhatWithThisPokemon");switch(this.partyUiMode){case 5:E=D.t("partyUiHandler:selectAMove");break;case 8:this.transferMode||(E=D.t("partyUiHandler:changeQuantity"));break;case 9:this.transferMode||(E=D.t("partyUiHandler:selectAnotherPokemonToSplice"));break}this.showText(E,0),this.updateOptions(),this.partyUiMode===8?this.partyMessageBox.setSize(262-Math.max(this.optionsBg.displayWidth-56,0),42):this.partyMessageBox.setSize(262-Math.max(this.optionsBg.displayWidth-56,0),30),this.setCursor(0)}updateOptions(){var C;const E=s.getPlayerParty()[this.cursor],R=this.partyUiMode===7?E.getLearnableLevelMoves():[];this.partyUiMode===7&&(R!=null&&R.length)&&this.moveInfoOverlay.show(Ke[R[0]]);const I=this.partyUiMode===8?s.findModifiers(U=>U instanceof DA&&U.isTransferable&&U.pokemonId===E.id):[];this.options.length&&(this.options.splice(0,this.options.length),this.optionsContainer.removeAll(!0),this.eraseOptionsCursor());let N;if(this.partyUiMode!==5&&this.partyUiMode!==7&&(this.transferMode||this.partyUiMode!==8)){switch(this.partyUiMode){case 0:case 1:case 2:if(this.cursor>=s.currentBattle.getBattlerCount()){const U=this.partyUiMode!==1&&s.findModifier(H=>H instanceof rs&&H.pokemonId===s.getPlayerField()[this.fieldIndex].id),_=s.getPlayerField()[this.fieldIndex].getMoveHistory(),G=this.partyUiMode===1&&_.length&&((C=Ke[_[_.length-1].move].getAttrs(oR)[0])==null?void 0:C.isBatonPass())&&_[_.length-1].result===EE.SUCCESS;this.options.push(G&&!U?1:0),U&&!G&&this.options.push(1)}break;case 3:this.options.push(2);break;case 4:this.options.push(3);break;case 6:this.options.push(4);break;case 8:this.options.push(5);break;case 9:this.transferMode?this.cursor!==this.transferCursor&&this.options.push(9):this.options.push(3);break;case 10:this.options.push(11);break;case 11:if(s.getCurrentPhase()instanceof JO){N=this.getFormChangeItemsModifiers(E);for(let U=0;U<N.length;U++)this.options.push(2e3+U)}break;case 12:this.options.push(13);break}this.options.push(6),this.options.push(7),this.options.push(12),(BA.hasOwnProperty(E.species.speciesId)||E.isFusion()&&E.fusionSpecies&&BA.hasOwnProperty(E.fusionSpecies.speciesId))&&this.options.push(8),this.partyUiMode===0?(E.isFusion()&&this.options.push(10),this.options.push(11)):this.partyUiMode===9&&E.isFusion()&&this.options.push(10)}else if(this.partyUiMode===5)for(let U=0;U<E.moveset.length;U++)this.options.push(3e3+U);else if(this.partyUiMode===7){const U=E.getLearnableLevelMoves();for(let _=0;_<U.length;_++)this.options.push(_)}else{for(let U=0;U<I.length;U++)this.options.push(U);I.length>1&&this.options.push(4e3)}this.optionsScrollTotal=this.options.length;let S=this.optionsScrollCursor,T=Math.min(this.optionsScrollTotal,S+(!S||this.optionsScrollCursor+8>=this.optionsScrollTotal?8:7));this.optionsScroll=this.optionsScrollTotal>9,this.optionsScroll&&(this.options.splice(T,this.optionsScrollTotal),this.options.splice(0,S),S&&this.options.unshift(1e3),T<this.optionsScrollTotal&&this.options.push(1001)),this.options.push(-1),this.optionsBg=bt(0,0,0,16*this.options.length+13),this.optionsBg.setOrigin(1,1),this.optionsContainer.add(this.optionsBg),S=0,T=this.options.length;let i=0;const o=[];for(let U=S;U<T;U++){const _=this.options[this.options.length-(U+1)];let G=!1,H;if(_===1e3)H="↑";else if(_===1001)H="↓";else if(this.partyUiMode!==7&&(this.partyUiMode!==8||this.transferMode)||_===-1)switch(_){case 3e3:case 3001:case 3002:case 3003:const w=E.moveset[_-3e3];if(this.showMovePp){const m=w.getMovePp(),W=m-w.ppUsed;H=`${w.getName()} ${W}/${m}`}else H=w.getName();break;default:if(N&&_>=2e3){const m=N[_-2e3];H=`${m.active?D.t("partyUiHandler:DEACTIVATE"):D.t("partyUiHandler:ACTIVATE")} ${m.type.name}`}else _===8?H=`${E.pauseEvolutions?D.t("partyUiHandler:UNPAUSE_EVOLUTION"):D.t("partyUiHandler:PAUSE_EVOLUTION")}`:this.localizedOptions.includes(_)?H=D.t(`partyUiHandler:${Ya[_]}`):H=mN(Ya[_]);break}else if(this.partyUiMode===7){const w=R[_];H=Ke[w].name,G=!E.getSpeciesForm().getLevelMoves().find(m=>m[1]===w)}else _===4e3?H=D.t("partyUiHandler:ALL"):H=I[_].type.name;const c=-6-16*U,f=MO(0,c-16,H,Se.WINDOW,{maxLines:1});G&&(f.setColor("#40c8f8"),f.setShadowColor("#006090")),f.setOrigin(0,0);const d=I[_];if(this.partyUiMode===8&&this.transferQuantitiesMax[_]>1&&!this.transferMode&&d!==void 0&&d.type.name===H){let w=` (${this.transferQuantities[_]})`;this.transferQuantitiesMax[_]===d.getMaxHeldItemCount(void 0)&&(w=`[color=${pA(Se.SUMMARY_RED)}]${w}[/color]`),f.setText(H+w)}f.setText(`[shadow]${f.text}[/shadow]`),o.push(f),i=Math.max(f.displayWidth,i),this.optionsContainer.add(f)}this.optionsBg.width=Math.max(i+24,94);for(const U of o)U.x=15-this.optionsBg.width}startTransfer(){this.transferMode=!0,this.transferCursor=this.cursor,this.transferOptionCursor=this.getOptionsCursorWithScroll(),this.transferAll=this.options[this.optionsCursor]===4e3,this.partySlots[this.transferCursor].setTransfer(!0)}clearTransfer(){this.transferMode=!1,this.transferAll=!1,this.partySlots[this.transferCursor].setTransfer(!1);for(let E=0;E<this.partySlots.length;E++)this.partySlots[E].slotDescriptionLabel.setVisible(!1),this.partySlots[E].slotHpBar.setVisible(!0),this.partySlots[E].slotHpOverlay.setVisible(!0),this.partySlots[E].slotHpText.setVisible(!0)}doRelease(E){this.showText(this.getReleaseMessage(Z(s.getPlayerParty()[E],!1)),null,()=>{if(this.clearPartySlots(),s.removePartyMemberModifiers(E),s.getPlayerParty().splice(E,1)[0].destroy(),this.populatePartySlots(),this.cursor>=s.getPlayerParty().length&&this.setCursor(this.cursor-1),this.partyUiMode===10){const I=this.selectCallback;this.selectCallback=null,I==null||I(this.cursor,11)}this.showText("",0)},null,!0)}getReleaseMessage(E){const R=oE(128);return R<20?D.t("partyUiHandler:goodbye",{pokemonName:E}):R<40?D.t("partyUiHandler:byebye",{pokemonName:E}):R<60?D.t("partyUiHandler:farewell",{pokemonName:E}):R<80?D.t("partyUiHandler:soLong",{pokemonName:E}):R<100?D.t("partyUiHandler:thisIsWhereWePart",{pokemonName:E}):R<108?D.t("partyUiHandler:illMissYou",{pokemonName:E}):R<116?D.t("partyUiHandler:illNeverForgetYou",{pokemonName:E}):R<124?D.t("partyUiHandler:untilWeMeetAgain",{pokemonName:E}):R<127?D.t("partyUiHandler:sayonara",{pokemonName:E}):D.t("partyUiHandler:smellYaLater",{pokemonName:E})}getFormChangeItemsModifiers(E){let R=s.findModifiers(N=>N instanceof EI&&N.pokemonId===E.id);const I=R.filter(N=>N.active&&N.formChangeItem===TO.ULTRANECROZIUM_Z);return I.length>0?I:(R.find(N=>N.active)?R=R.filter(N=>N.active||N.formChangeItem===TO.ULTRANECROZIUM_Z):E.species.speciesId===e.NECROZMA&&(R=R.filter(N=>N.formChangeItem!==TO.ULTRANECROZIUM_Z)),R)}getOptionsCursorWithScroll(){return this.optionsCursor+this.optionsScrollCursor+(this.options&&this.options[0]===1e3?-1:0)}clearOptions(){this.moveInfoOverlay.clear(),this.optionsMode=!1,this.optionsScroll=!1,this.optionsScrollCursor=0,this.optionsScrollTotal=0,this.options.splice(0,this.options.length),this.optionsContainer.removeAll(!0),this.eraseOptionsCursor(),this.partyMessageBox.setSize(262,30),this.showText("",0)}eraseOptionsCursor(){this.optionsCursorObj&&this.optionsCursorObj.destroy(),this.optionsCursorObj=null}clear(){super.clear(),this.moveInfoOverlay.clear(),this.partyContainer.setVisible(!1),this.clearPartySlots()}clearPartySlots(){this.partySlots.splice(0,this.partySlots.length),this.partySlotsContainer.removeAll(!0)}};r(FO,"PartyUiHandler"),FO.FilterAll=E=>null,FO.FilterNonFainted=E=>E.isFainted()?D.t("partyUiHandler:noEnergy",{pokemonName:Z(E,!1)}):null,FO.FilterFainted=E=>E.isFainted()?null:D.t("partyUiHandler:hasEnergy",{pokemonName:Z(E,!1)}),FO.FilterAllMoves=E=>null,FO.FilterItemMaxStacks=(E,R)=>{const I=s.findModifier(N=>N instanceof DA&&N.pokemonId===E.id&&N.matchType(R));return I&&I.stackCount===I.getMaxStackCount()?D.t("partyUiHandler:tooManyItems",{pokemonName:Z(E,!1)}):null},FO.NoEffectMessage=D.t("partyUiHandler:anyEffect");let st=FO;const VB=class VB extends Phaser.GameObjects.Container{constructor(E,R,I,N,S){super(s,E>=s.currentBattle.getBattlerCount()?230.5:64,E>=s.currentBattle.getBattlerCount()?-184+(s.currentBattle.double?-40:0)+(28+(s.currentBattle.double?8:0))*E:-124+(s.currentBattle.double?-8:0)+E*64),this.slotIndex=E,this.pokemon=R,this.iconAnimHandler=I,this.setup(N,S)}getPokemon(){return this.pokemon}setup(E,R){var w,m;const N=(D.resolvedLanguage??"en")==="ja",S=s.currentBattle.getBattlerCount(),T=`party_slot${this.slotIndex>=S?"":"_main"}`,i=s.add.sprite(0,0,T,`${T}${this.pokemon.hp?"":"_fnt"}`);this.slotBg=i,this.add(i);const o=s.add.sprite(this.slotIndex>=S?-85.5:-51,this.slotIndex>=S?0:-20.5,"party_pb");this.slotPb=o,this.add(o),this.pokemonIcon=s.addPokemonIcon(this.pokemon,o.x,o.y,.5,.5,!0),this.add(this.pokemonIcon),this.iconAnimHandler.addOrUpdate(this.pokemonIcon,pi.PASSIVE);const C=s.add.container(0,0);this.add(C);let U=this.pokemon.getNameToRender(!1),_;const G=We(0,0,U,Se.PARTY);for(_=G.displayWidth;_>(this.slotIndex>=S?52:76-(this.pokemon.fusionSpecies?8:0));)U=`${U.slice(0,U.endsWith(".")?-2:-1).trimEnd()}.`,G.setText(U),_=G.displayWidth;G.destroy(),this.slotName=We(0,0,U,Se.PARTY),this.slotName.setPositionRelative(i,this.slotIndex>=S?21:24,(this.slotIndex>=S?2:10)+(N?2:0)),this.slotName.setOrigin(0,0);const H=s.add.image(0,0,"party_slot_overlay_lv");H.setPositionRelative(i,(this.slotIndex>=S?21:24)+8,(this.slotIndex>=S?2:10)+12),H.setOrigin(0,0);const c=We(0,0,this.pokemon.level.toString(),this.pokemon.level<s.getMaxExpLevel()?Se.PARTY:Se.PARTY_RED);c.setPositionRelative(H,9,N?1.5:0),c.setOrigin(0,.25),C.add([this.slotName,H,c]);const f=SS(this.pokemon.getGender(!0));if(f){const W=We(0,0,f,Se.PARTY);W.setColor(WL(this.pokemon.getGender(!0))),W.setShadowColor(WL(this.pokemon.getGender(!0),!0)),this.slotIndex>=S?W.setPositionRelative(H,36,0):W.setPositionRelative(this.slotName,76-(this.pokemon.fusionSpecies?8:0),3),W.setOrigin(0,.25),C.add(W)}if(this.pokemon.fusionSpecies){const W=s.add.image(0,0,"icon_spliced");W.setScale(.5),W.setOrigin(0,0),this.slotIndex>=S?W.setPositionRelative(H,36+(f?8:0),.5):W.setPositionRelative(this.slotName,76,3.5),C.add(W)}if(this.pokemon.status){const W=s.add.sprite(0,0,UL("statuses"));W.setFrame(J[(w=this.pokemon.status)==null?void 0:w.effect].toLowerCase()),W.setOrigin(0,0),W.setPositionRelative(H,this.slotIndex>=S?43:55,0),C.add(W)}if(this.pokemon.isShiny()){const W=this.pokemon.isDoubleShiny(!1),v=s.add.image(0,0,`shiny_star_small${W?"_1":""}`);if(v.setOrigin(0,0),v.setPositionRelative(this.slotName,-9,3),v.setTint(nO(this.pokemon.getBaseVariant(W))),C.add(v),W){const $=s.add.image(0,0,"shiny_star_small_2");$.setOrigin(0,0),$.setPosition(v.x,v.y),$.setTint(nO(((m=this.pokemon.summonData.illusion)==null?void 0:m.basePokemon.fusionVariant)??this.pokemon.fusionVariant)),C.add($)}}this.slotHpBar=s.add.image(0,0,"party_slot_hp_bar"),this.slotHpBar.setPositionRelative(i,this.slotIndex>=S?72:8,this.slotIndex>=S?6:31),this.slotHpBar.setOrigin(0,0),this.slotHpBar.setVisible(!1);const d=this.pokemon.getHpRatio();if(this.slotHpOverlay=s.add.sprite(0,0,"party_slot_hp_overlay",d>.5?"high":d>.25?"medium":"low"),this.slotHpOverlay.setPositionRelative(this.slotHpBar,16,2),this.slotHpOverlay.setOrigin(0,0),this.slotHpOverlay.setScale(d,1),this.slotHpOverlay.setVisible(!1),this.slotHpText=We(0,0,`${this.pokemon.hp}/${this.pokemon.getMaxHp()}`,Se.PARTY),this.slotHpText.setPositionRelative(this.slotHpBar,this.slotHpBar.width-3,this.slotHpBar.height-2+(N?2:0)),this.slotHpText.setOrigin(1,0),this.slotHpText.setVisible(!1),this.slotDescriptionLabel=We(0,0,"",Se.MESSAGE),this.slotDescriptionLabel.setPositionRelative(i,this.slotIndex>=S?94:32,this.slotIndex>=S?16:46),this.slotDescriptionLabel.setOrigin(0,1),this.slotDescriptionLabel.setVisible(!1),C.add([this.slotHpBar,this.slotHpOverlay,this.slotHpText,this.slotDescriptionLabel]),E!==6)this.slotDescriptionLabel.setVisible(!1),this.slotHpBar.setVisible(!0),this.slotHpOverlay.setVisible(!0),this.slotHpText.setVisible(!0);else{this.slotHpBar.setVisible(!1),this.slotHpOverlay.setVisible(!1),this.slotHpText.setVisible(!1);let W;this.pokemon.getMoveset().filter(v=>v.moveId===R).length>0?W=D.t("partyUiHandler:learned"):this.pokemon.compatibleTms.indexOf(R)===-1?W=D.t("partyUiHandler:notAble"):W=D.t("partyUiHandler:able"),this.slotDescriptionLabel.setText(W),this.slotDescriptionLabel.setVisible(!0)}}select(){this.selected||(this.selected=!0,this.iconAnimHandler.addOrUpdate(this.pokemonIcon,pi.ACTIVE),this.updateSlotTexture(),this.slotPb.setFrame("party_pb_sel"))}deselect(){this.selected&&(this.selected=!1,this.iconAnimHandler.addOrUpdate(this.pokemonIcon,pi.PASSIVE),this.updateSlotTexture(),this.slotPb.setFrame("party_pb"))}setTransfer(E){this.transfer!==E&&(this.transfer=E,this.updateSlotTexture())}updateSlotTexture(){const E=s.currentBattle.getBattlerCount();this.slotBg.setTexture(`party_slot${this.slotIndex>=E?"":"_main"}`,`party_slot${this.slotIndex>=E?"":"_main"}${this.transfer?"_swap":this.pokemon.hp?"":"_fnt"}${this.selected?"_sel":""}`)}};r(VB,"PartySlot");let $P=VB;const vB=class vB extends Phaser.GameObjects.Container{constructor(E,R){super(s,E,R),this.setup()}setup(){const E=s.add.sprite(0,0,"party_cancel");this.add(E),this.partyCancelBg=E;const R=s.add.sprite(-17,0,"party_pb");this.add(R),this.partyCancelPb=R;const I=We(-8,-7,D.t("partyUiHandler:cancel"),Se.PARTY);this.add(I)}select(){this.selected||(this.selected=!0,this.partyCancelBg.setFrame("party_cancel_sel"),this.partyCancelPb.setFrame("party_pb_sel"))}deselect(){this.selected&&(this.selected=!1,this.partyCancelBg.setFrame("party_cancel"),this.partyCancelPb.setFrame("party_pb"))}};r(vB,"PartyCancelButton");let qP=vB;var lt=(t=>(t[t.PLAYER=0]="PLAYER",t[t.WILD=1]="WILD",t[t.TRAINER=2]="TRAINER",t[t.ENEMY_BUFF=3]="ENEMY_BUFF",t[t.DAILY_STARTER=4]="DAILY_STARTER",t))(lt||{});const xB=class xB{constructor(E,R,I,N,S){this.localeKey=E,this.iconImage=R,this.group=N,this.soundName=S??"se/restore",this.newModifierFunc=I}get name(){return D.t(`${this.localeKey}.name`)}getDescription(){return D.t(`${this.localeKey}.description`)}setTier(E){this.tier=E}getOrInferTier(E=0){if(this.tier)return this.tier;if(!this.id)return null;let R;switch(E){case 0:R=[E,2,1];break;case 1:R=[E,0,2];break;case 2:R=[E,0,1];break;default:R=[E];break}for(const I of R){const N=jo(I);for(const S of Ct(p))if(N.hasOwnProperty(S)&&N[S].find(T=>T.modifierType.id===this.id))return this.tier=S}return null}withIdFromFunc(E){return this.id=Object.keys(x).find(R=>x[R]===E),this}withTierFromPool(E=0,R,I=0){let N;for(const S of Object.values(jo(E)))for(const T of S)if(this.id===T.modifierType.id){let i;if(T.weight instanceof Function?i=R?T.weight(R,I):0:i=T.weight,i>0)return this.tier=T.modifierType.tier,this;Ne(N)&&(N=T.modifierType.tier)}return N&&(this.tier=N),this}newModifier(...E){return this.newModifierFunc&&this.newModifierFunc(this,E)}};r(xB,"ModifierType");let gA=xB;const bB=class bB extends gA{constructor(E){super(null,null,null),this.genTypeFunc=E}generateType(E,R){const I=this.genTypeFunc(E,R);return I&&(I.id=this.id,I.setTier(this.tier)),I}};r(bB,"ModifierTypeGenerator");let jE=bB;const ZB=class ZB extends gA{constructor(E,R,I){super("",E,(N,S)=>new oD(this,R,I),"pb","se/pb_bounce_1"),this.pokeballType=R,this.count=I}get name(){return D.t("modifierType:ModifierType.AddPokeballModifierType.name",{modifierCount:this.count,pokeballName:WP(this.pokeballType)})}getDescription(){return D.t("modifierType:ModifierType.AddPokeballModifierType.description",{modifierCount:this.count,pokeballName:WP(this.pokeballType),catchRate:mP(this.pokeballType)>-1?`${mP(this.pokeballType)}x`:"100%",pokeballAmount:`${s.pokeballCounts[this.pokeballType]}`})}};r(ZB,"AddPokeballModifierType");let ON=ZB;const kB=class kB extends gA{constructor(E,R){super("",Kv(E),(I,N)=>new CD(this,E,R),"voucher"),this.count=R,this.voucherType=E}get name(){return D.t("modifierType:ModifierType.AddVoucherModifierType.name",{modifierCount:this.count,voucherTypeName:QP(this.voucherType)})}getDescription(){return D.t("modifierType:ModifierType.AddVoucherModifierType.description",{modifierCount:this.count,voucherTypeName:QP(this.voucherType)})}};r(kB,"AddVoucherModifierType");let cT=kB;const XB=class XB extends gA{constructor(E,R,I,N,S,T){super(E,R,I,S,T),this.selectFilter=N}};r(XB,"PokemonModifierType");let PR=XB;const QB=class QB extends PR{constructor(E,R,I,N,S){super(E,R,I,T=>{const i=this.newModifier(T),o=s.findModifier(U=>U instanceof DA&&U.pokemonId===T.id&&U.matchType(i)),C=i.getMaxStackCount();return C?o&&o.stackCount===C?D.t("modifierType:ModifierType.PokemonHeldItemModifierType.extra.tooMany",{pokemonName:Z(T)}):null:D.t("modifierType:ModifierType.PokemonHeldItemModifierType.extra.inoperable",{pokemonName:Z(T)})},N,S)}newModifier(...E){return super.newModifier(...E)}};r(QB,"PokemonHeldItemModifierType");let eE=QB;const JB=class JB extends PR{constructor(E){super("",`${L[E].toLowerCase()}_tera_shard`,(R,I)=>new UD(R,I[0].id,E),R=>{var I;return[R.species.speciesId,(I=R.fusionSpecies)==null?void 0:I.speciesId].filter(N=>N===e.TERAPAGOS||N===e.OGERPON||N===e.SHEDINJA).length>0?st.NoEffectMessage:null},"tera_shard"),this.teraType=E}get name(){return D.t("modifierType:ModifierType.TerastallizeModifierType.name",{teraType:D.t(`pokemonInfo:Type.${L[this.teraType]}`)})}getDescription(){return D.t("modifierType:ModifierType.TerastallizeModifierType.description",{teraType:D.t(`pokemonInfo:Type.${L[this.teraType]}`)})}getPregenArgs(){return[this.teraType]}};r(JB,"TerastallizeModifierType");let Wo=JB;const $B=class $B extends PR{constructor(E,R,I,N,S=!1,T,i,o){super(E,R,T||((C,U)=>new ns(this,U[0].id,this.restorePoints,this.restorePercent,this.healStatus,!1)),i||(C=>!C.hp||C.isFullHp()&&(!this.healStatus||!C.status&&!C.getTag(Y.CONFUSED))?st.NoEffectMessage:null),o||"potion"),this.restorePoints=I,this.restorePercent=N,this.healStatus=S}getDescription(){return this.restorePoints?D.t("modifierType:ModifierType.PokemonHpRestoreModifierType.description",{restorePoints:this.restorePoints,restorePercent:this.restorePercent}):this.healStatus?D.t("modifierType:ModifierType.PokemonHpRestoreModifierType.extra.fullyWithStatus"):D.t("modifierType:ModifierType.PokemonHpRestoreModifierType.extra.fully")}};r($B,"PokemonHpRestoreModifierType");let CL=$B;const qB=class qB extends CL{constructor(E,R,I){super(E,R,0,I,!1,(N,S)=>new ns(this,S[0].id,0,this.restorePercent,!1,!0),N=>N.isFainted()?null:st.NoEffectMessage,"revive"),this.selectFilter=N=>N.hp?st.NoEffectMessage:null}getDescription(){return D.t("modifierType:ModifierType.PokemonReviveModifierType.description",{restorePercent:this.restorePercent})}};r(qB,"PokemonReviveModifierType");let mo=qB;const zB=class zB extends PR{constructor(E,R){super(E,R,(I,N)=>new DD(this,N[0].id),I=>!I.hp||!I.status&&!I.getTag(Y.CONFUSED)?st.NoEffectMessage:null)}getDescription(){return D.t("modifierType:ModifierType.PokemonStatusHealModifierType.description")}};r(zB,"PokemonStatusHealModifierType");let zP=zB;const jB=class jB extends PR{constructor(E,R,I,N,S,T){super(E,R,I,N,T),this.moveSelectFilter=S}};r(jB,"PokemonMoveModifierType");let rS=jB;const eh=class eh extends rS{constructor(E,R,I){super(E,R,(N,S)=>new MD(this,S[0].id,S[1],this.restorePoints),N=>null,N=>N.ppUsed?null:st.NoEffectMessage,"ether"),this.restorePoints=I}getDescription(){return this.restorePoints>-1?D.t("modifierType:ModifierType.PokemonPpRestoreModifierType.description",{restorePoints:this.restorePoints}):D.t("modifierType:ModifierType.PokemonPpRestoreModifierType.extra.fully")}};r(eh,"PokemonPpRestoreModifierType");let Wa=eh;const Ah=class Ah extends PR{constructor(E,R,I){super(E,R,(N,S)=>new PD(this,S[0].id,this.restorePoints),N=>N.getMoveset().filter(S=>S.ppUsed).length?null:st.NoEffectMessage,"elixir"),this.restorePoints=I}getDescription(){return this.restorePoints>-1?D.t("modifierType:ModifierType.PokemonAllMovePpRestoreModifierType.description",{restorePoints:this.restorePoints}):D.t("modifierType:ModifierType.PokemonAllMovePpRestoreModifierType.extra.fully")}};r(Ah,"PokemonAllMovePpRestoreModifierType");let go=Ah;const Eh=class Eh extends rS{constructor(E,R,I){super(E,R,(N,S)=>new GD(this,S[0].id,S[1],this.upPoints),N=>null,N=>N.getMove().pp<5||N.ppUp>=3||N.maxPpOverride?st.NoEffectMessage:null,"ppUp"),this.upPoints=I}getDescription(){return D.t("modifierType:ModifierType.PokemonPpUpModifierType.description",{upPoints:this.upPoints})}};r(Eh,"PokemonPpUpModifierType");let ma=Eh;const th=class th extends PR{constructor(E){var R;super("",`mint_${((R=gN(h).find(I=>Ri(E,h[I])>1))==null?void 0:R.toLowerCase())||"neutral"}`,(I,N)=>new _D(this,N[0].id,this.nature),I=>I.getNature()===this.nature?st.NoEffectMessage:null,"mint"),this.nature=E}get name(){return D.t("modifierType:ModifierType.PokemonNatureChangeModifierType.name",{natureName:QO(this.nature)})}getDescription(){return D.t("modifierType:ModifierType.PokemonNatureChangeModifierType.description",{natureName:QO(this.nature,!0,!0,!0)})}};r(th,"PokemonNatureChangeModifierType");let po=th;const Rh=class Rh extends PR{constructor(E,R,I){super(E,R,(N,S)=>new HD(N,S[0].id,S[1]),N=>N.getLearnableLevelMoves().length?null:st.NoEffectMessage,I)}};r(Rh,"RememberMoveModifierType");let zs=Rh;const Oh=class Oh extends gA{constructor(E,R,I){super(E,R,(N,S)=>new Kr(this,I),"lure"),this.maxBattles=I}getDescription(){return D.t("modifierType:ModifierType.DoubleBattleChanceBoosterModifierType.description",{battleCount:this.maxBattles})}};r(Oh,"DoubleBattleChanceBoosterModifierType");let BT=Oh;const Ih=class Ih extends gA{constructor(E){const R=Jo.items[E];super("",R,(I,N)=>new ZS(this,this.stat,5)),this.stat=E,this.nameKey=R,this.quantityKey=E!==h.ACC?"percentage":"stage"}get name(){return D.t(`modifierType:TempStatStageBoosterItem.${this.nameKey}`)}getDescription(){return D.t("modifierType:ModifierType.TempStatStageBoosterModifierType.description",{stat:D.t(et(this.stat)),amount:D.t(`modifierType:ModifierType.TempStatStageBoosterModifierType.extra.${this.quantityKey}`)})}getPregenArgs(){return[this.stat]}};r(Ih,"TempStatStageBoosterModifierType");let yo=Ih;const Lh=class Lh extends eE{constructor(E){super("",`${OA[E].toLowerCase()}_berry`,(R,I)=>new XE(R,I[0].id,E),"berry"),this.berryType=E,this.id="BERRY"}get name(){return H1(this.berryType)}getDescription(){return _X(this.berryType)}getPregenArgs(){return[this.berryType]}};r(Lh,"BerryModifierType");let iS=Lh;var jP=(t=>(t[t.SILK_SCARF=0]="SILK_SCARF",t[t.BLACK_BELT=1]="BLACK_BELT",t[t.SHARP_BEAK=2]="SHARP_BEAK",t[t.POISON_BARB=3]="POISON_BARB",t[t.SOFT_SAND=4]="SOFT_SAND",t[t.HARD_STONE=5]="HARD_STONE",t[t.SILVER_POWDER=6]="SILVER_POWDER",t[t.SPELL_TAG=7]="SPELL_TAG",t[t.METAL_COAT=8]="METAL_COAT",t[t.CHARCOAL=9]="CHARCOAL",t[t.MYSTIC_WATER=10]="MYSTIC_WATER",t[t.MIRACLE_SEED=11]="MIRACLE_SEED",t[t.MAGNET=12]="MAGNET",t[t.TWISTED_SPOON=13]="TWISTED_SPOON",t[t.NEVER_MELT_ICE=14]="NEVER_MELT_ICE",t[t.DRAGON_FANG=15]="DRAGON_FANG",t[t.BLACK_GLASSES=16]="BLACK_GLASSES",t[t.FAIRY_FEATHER=17]="FAIRY_FEATHER",t))(jP||{});const Nh=class Nh extends eE{constructor(E,R){var I;super("",`${(I=jP[E])==null?void 0:I.toLowerCase()}`,(N,S)=>new DI(this,S[0].id,E,R)),this.moveType=E,this.boostPercent=R}get name(){var E;return D.t(`modifierType:AttackTypeBoosterItem.${(E=jP[this.moveType])==null?void 0:E.toLowerCase()}`)}getDescription(){return D.t("modifierType:ModifierType.AttackTypeBoosterModifierType.description",{moveType:D.t(`pokemonInfo:Type.${L[this.moveType]}`)})}getPregenArgs(){return[this.moveType]}};r(Nh,"AttackTypeBoosterModifierType");let wo=Nh;const sh=class sh extends eE{constructor(E){const R=$o.items[E];super(`modifierType:SpeciesBoosterItem.${E}`,E.toLowerCase(),(I,N)=>new Ns(I,N[0].id,R.stats,R.multiplier,R.species)),this.key=E}getPregenArgs(){return[this.key]}};r(sh,"SpeciesStatBoosterModifierType");let Vo=sh;const Sh=class Sh extends PR{constructor(E,R){super(E,R,(I,N)=>new Zr(this,N[0].id),I=>null)}getDescription(){let E=1;const R=s.modifiers.find(I=>I instanceof QL);return R&&(E+=R.stackCount),D.t("modifierType:ModifierType.PokemonLevelIncrementModifierType.description",{levels:E})}};r(Sh,"PokemonLevelIncrementModifierType");let eG=Sh;const Th=class Th extends gA{constructor(E,R){super(E,R,(I,N)=>new Zr(this,-1))}getDescription(){let E=1;const R=s.modifiers.find(I=>I instanceof QL);return R&&(E+=R.stackCount),D.t("modifierType:ModifierType.AllPokemonLevelIncrementModifierType.description",{levels:E})}};r(Th,"AllPokemonLevelIncrementModifierType");let AG=Th;const nh=class nh extends eE{constructor(E){const R=Qo.items[E];super("",R,(I,N)=>new mr(this,N[0].id,this.stat)),this.stat=E,this.key=R}get name(){return D.t(`modifierType:BaseStatBoosterItem.${this.key}`)}getDescription(){return D.t("modifierType:ModifierType.BaseStatBoosterModifierType.description",{stat:D.t(et(this.stat))})}getPregenArgs(){return[this.stat]}};r(nh,"BaseStatBoosterModifierType");let vo=nh;const ah=class ah extends eE{constructor(E){super("modifierType:ModifierType.MYSTERY_ENCOUNTER_SHUCKLE_JUICE","berry_juice",(R,I)=>new pr(this,I[0].id,this.statModifier)),this.statModifier=E}getDescription(){return D.t("modifierType:ModifierType.PokemonBaseStatTotalModifierType.description",{increaseDecrease:D.t(this.statModifier>=0?"modifierType:ModifierType.PokemonBaseStatTotalModifierType.extra.increase":"modifierType:ModifierType.PokemonBaseStatTotalModifierType.extra.decrease"),blessCurse:D.t(this.statModifier>=0?"modifierType:ModifierType.PokemonBaseStatTotalModifierType.extra.blessed":"modifierType:ModifierType.PokemonBaseStatTotalModifierType.extra.cursed"),statValue:this.statModifier})}getPregenArgs(){return[this.statModifier]}};r(ah,"PokemonBaseStatTotalModifierType");let xo=ah;const rh=class rh extends eE{constructor(E,R){super("modifierType:ModifierType.MYSTERY_ENCOUNTER_OLD_GATEAU","old_gateau",(I,N)=>new yr(this,N[0].id,this.statModifier,this.stats)),this.statModifier=E,this.stats=R}getDescription(){return D.t("modifierType:ModifierType.PokemonBaseStatFlatModifierType.description",{stats:this.stats.map(E=>D.t(et(E))).join("/"),statValue:this.statModifier})}getPregenArgs(){return[this.statModifier,this.stats]}};r(rh,"PokemonBaseStatFlatModifierType");let bo=rh;const ih=class ih extends gA{constructor(E,R,I,N){super(E,R,N||((S,T)=>new ns(this,-1,0,100,!1))),this.descriptionKey=I}getDescription(){return D.t(`${this.descriptionKey||"modifierType:ModifierType.AllPokemonFullHpRestoreModifierType"}.description`)}};r(ih,"AllPokemonFullHpRestoreModifierType");let EG=ih;const oh=class oh extends EG{constructor(E,R){super(E,R,"modifierType:ModifierType.AllPokemonFullReviveModifierType",(I,N)=>new ns(this,-1,0,100,!1,!0))}};r(oh,"AllPokemonFullReviveModifierType");let tG=oh;const Ch=class Ch extends gA{constructor(E,R,I,N){super(E,R,(S,T)=>new YD(this,I),"money","se/buy"),this.moneyMultiplier=I,this.moneyMultiplierDescriptorKey=N}getDescription(){const E=new me(s.getWaveMoneyAmount(this.moneyMultiplier));s.applyModifiers(CO,!0,E);const R=UM(s.moneyFormat,E.value);return D.t("modifierType:ModifierType.MoneyRewardModifierType.description",{moneyMultiplier:D.t(this.moneyMultiplierDescriptorKey),moneyAmount:R})}};r(Ch,"MoneyRewardModifierType");let hT=Ch;const lh=class lh extends gA{constructor(E,R,I){super(E,R,()=>new fD(this,I)),this.boostPercent=I}getDescription(){return D.t("modifierType:ModifierType.ExpBoosterModifierType.description",{boostPercent:this.boostPercent})}};r(lh,"ExpBoosterModifierType");let fT=lh;const Uh=class Uh extends eE{constructor(E,R,I){super(E,R,(N,S)=>new dD(this,S[0].id,I)),this.boostPercent=I}getDescription(){return D.t("modifierType:ModifierType.PokemonExpBoosterModifierType.description",{boostPercent:this.boostPercent})}};r(Uh,"PokemonExpBoosterModifierType");let Zo=Uh;const Dh=class Dh extends eE{constructor(E,R){super(E,R,(I,N)=>new kr(this,N[0].id))}getDescription(){return D.t("modifierType:ModifierType.PokemonFriendshipBoosterModifierType.description")}};r(Dh,"PokemonFriendshipBoosterModifierType");let RG=Dh;const Mh=class Mh extends eE{constructor(E,R,I,N,S){super(E,R,(T,i)=>new Qr(this,i[0].id,I),N,S),this.amount=I}getDescription(){return D.t("modifierType:ModifierType.PokemonMoveAccuracyBoosterModifierType.description",{accuracyAmount:this.amount})}};r(Mh,"PokemonMoveAccuracyBoosterModifierType");let OG=Mh;const Ph=class Ph extends eE{constructor(E,R){super(E,R,(I,N)=>new $I(I,N[0].id))}getDescription(){return D.t("modifierType:ModifierType.PokemonMultiHitModifierType.description")}};r(Ph,"PokemonMultiHitModifierType");let IG=Ph;const Gh=class Gh extends PR{constructor(E){super("",`tm_${L[Ke[E].type].toLowerCase()}`,(R,I)=>new uD(this,I[0].id),R=>R.compatibleTms.indexOf(E)===-1||R.getMoveset().filter(I=>I.moveId===E).length?st.NoEffectMessage:null,"tm"),this.moveId=E}get name(){return D.t("modifierType:ModifierType.TmModifierType.name",{moveId:UT(Object.keys(UI).indexOf(this.moveId.toString())+1,3),moveName:Ke[this.moveId].name})}getDescription(){return D.t(s.enableMoveInfo?"modifierType:ModifierType.TmModifierTypeWithInfo.description":"modifierType:ModifierType.TmModifierType.description",{moveName:Ke[this.moveId].name})}};r(Gh,"TmModifierType");let wN=Gh;const _h=class _h extends PR{constructor(E){super("",WN[E].toLowerCase(),(R,I)=>new cD(this,I[0].id),R=>BA.hasOwnProperty(R.species.speciesId)&&BA[R.species.speciesId].filter(I=>I.item===this.evolutionItem&&(!I.condition||I.condition.predicate(R))&&(I.preFormKey===null||I.preFormKey===R.getFormKey())).length&&R.getFormKey()!==te.GIGANTAMAX||R.isFusion()&&R.fusionSpecies&&BA.hasOwnProperty(R.fusionSpecies.speciesId)&&BA[R.fusionSpecies.speciesId].filter(I=>I.item===this.evolutionItem&&(!I.condition||I.condition.predicate(R))&&(I.preFormKey===null||I.preFormKey===R.getFusionFormKey())).length&&R.getFusionFormKey()!==te.GIGANTAMAX?null:st.NoEffectMessage),this.evolutionItem=E}get name(){return D.t(`modifierType:EvolutionItem.${WN[this.evolutionItem]}`)}getDescription(){return D.t("modifierType:ModifierType.EvolutionItemModifierType.description")}getPregenArgs(){return[this.evolutionItem]}};r(_h,"EvolutionItemModifierType");let ko=_h;const uh=class uh extends PR{constructor(E){super("",TO[E].toLowerCase(),(R,I)=>new EI(this,I[0].id,E,!0),R=>PI.hasOwnProperty(R.species.speciesId)&&PI[R.species.speciesId].filter(I=>I.trigger.hasTriggerType(re)&&I.preFormKey===R.getFormKey()).flatMap(I=>I.findTrigger(re)).flatMap(I=>I.item).includes(this.formChangeItem)?null:st.NoEffectMessage),this.formChangeItem=E}get name(){return D.t(`modifierType:FormChangeItem.${TO[this.formChangeItem]}`)}getDescription(){return D.t("modifierType:ModifierType.FormChangeItemModifierType.description")}getPregenArgs(){return[this.formChangeItem]}};r(uh,"FormChangeItemModifierType");let ga=uh;const Hh=class Hh extends PR{constructor(E,R){super(E,R,(I,N)=>new BD(this,N[0].id,N[1].id),I=>I.isFusion()?st.NoEffectMessage:null)}getDescription(){return D.t("modifierType:ModifierType.FusePokemonModifierType.description")}};r(Hh,"FusePokemonModifierType");let Xo=Hh;const ch=class ch extends jE{constructor(){super((E,R)=>{if(R&&R.length===1&&R[0]in L)return new wo(R[0],Qw);const I=E.flatMap(C=>C.getMoveset().map(U=>U.getMove()).filter(U=>U instanceof B).map(U=>U.type));if(!I.length)return null;const N=new Map;let S=0;for(const C of I){if(N.has(C))if(N.get(C)<3)N.set(C,N.get(C)+1);else continue;else N.set(C,1);S++}if(!S)return null;let T;const i=De(S);let o=0;for(const C of N.keys()){const U=N.get(C);if(i<=o+U){T=C;break}o+=U}return new wo(T,Qw)})}};r(ch,"AttackTypeBoosterModifierTypeGenerator");let LG=ch;const jD=class jD extends jE{constructor(){super((E,R)=>{if(R)return new vo(R[0]);const I=De(h.SPD+1);return new vo(I)})}};r(jD,"BaseStatBoosterModifierTypeGenerator"),jD.items={[h.HP]:"hp_up",[h.ATK]:"protein",[h.DEF]:"iron",[h.SPATK]:"calcium",[h.SPDEF]:"zinc",[h.SPD]:"carbos"};let Qo=jD;const eM=class eM extends jE{constructor(){super((E,R)=>{if(R&&R.length===1&&Mv.includes(R[0]))return new yo(R[0]);const I=De(h.ACC,h.ATK);return new yo(I)})}};r(eM,"TempStatStageBoosterModifierTypeGenerator"),eM.items={[h.ATK]:"x_attack",[h.DEF]:"x_defense",[h.SPATK]:"x_sp_atk",[h.SPDEF]:"x_sp_def",[h.SPD]:"x_speed",[h.ACC]:"x_accuracy"};let Jo=eM;const nn=class nn extends jE{constructor(){super((E,R)=>{const I=nn.items;if(R&&R.length===1&&R[0]in I)return new Vo(R[0]);const N=Object.values(I),S=Object.keys(I),T=S.map(()=>0);for(const o of E){const C=o.getSpeciesForm(!0).speciesId,U=o.isFusion()?o.getFusionSpeciesForm(!0).speciesId:null,_=!1;for(const G in N){const H=N[G].species,c=N[G].stats;o.getHeldItems().some(d=>d instanceof Ns&&d.contains(H[0],c[0]))||(H.includes(C)||U&&H.includes(U)?T[G]++:H.includes(e.PIKACHU))}}let i=0;for(const o of T)i+=o;if(i!==0){const o=De(i,1);let C=0;for(const U in T)if(T[U]!==0){const _=C+T[U];if(o<=C+T[U])return new Vo(S[U]);C=_}}return null})}};r(nn,"SpeciesStatBoosterModifierTypeGenerator"),nn.items={LIGHT_BALL:{stats:[h.ATK,h.SPATK],multiplier:2,species:[e.PIKACHU]},THICK_CLUB:{stats:[h.ATK],multiplier:2,species:[e.CUBONE,e.MAROWAK,e.ALOLA_MAROWAK]},METAL_POWDER:{stats:[h.DEF],multiplier:2,species:[e.DITTO]},QUICK_POWDER:{stats:[h.SPD],multiplier:2,species:[e.DITTO]}};let $o=nn;const Bh=class Bh extends jE{constructor(E){super((R,I)=>{if(I&&I.length===1&&I[0]in A)return new wN(I[0]);const S=R.map(i=>{const o=i.getLearnableLevelMoves();return i.compatibleTms.filter(C=>!i.moveset.find(U=>U.moveId===C)&&!o.find(U=>U===C))}).flat().filter(i=>gi[i]===E).filter(i=>!Ke[i].name.endsWith(" (N)")).filter((i,o,C)=>C.indexOf(i)===o);if(!S.length)return null;const T=De(S.length);return new wN(S[T])})}};r(Bh,"TmModifierTypeGenerator");let dT=Bh;const hh=class hh extends jE{constructor(E){super((R,I)=>{if(I&&I.length===1&&I[0]in WN)return new ko(I[0]);const N=[R.filter(S=>BA.hasOwnProperty(S.species.speciesId)&&(!S.pauseEvolutions||S.species.speciesId===e.SLOWPOKE||S.species.speciesId===e.EEVEE)).flatMap(S=>BA[S.species.speciesId].filter(i=>i.item!==WN.NONE&&(i.evoFormKey===null||(i.preFormKey||"")===S.getFormKey())&&(!i.condition||i.condition.predicate(S)))),R.filter(S=>S.isFusion()&&S.fusionSpecies&&BA.hasOwnProperty(S.fusionSpecies.speciesId)&&(!S.pauseEvolutions||S.fusionSpecies.speciesId===e.SLOWPOKE||S.fusionSpecies.speciesId===e.EEVEE)).flatMap(S=>BA[S.fusionSpecies.speciesId].filter(i=>i.item!==WN.NONE&&(i.evoFormKey===null||(i.preFormKey||"")===S.getFusionFormKey())&&(!i.condition||i.condition.predicate(S))))].flat().flatMap(S=>S.item).filter(S=>(!!S&&S>50)===E);return N.length?new ko(N[De(N.length)]):null})}};r(hh,"EvolutionItemModifierTypeGenerator");let qo=hh;const fh=class fh extends jE{constructor(E){super((R,I)=>{if(I&&I.length===1&&I[0]in TO)return new ga(I[0]);const N=[...new Set(R.filter(S=>PI.hasOwnProperty(S.species.speciesId)).flatMap(S=>{let i=PI[S.species.speciesId].filter(o=>(o.formKey.indexOf(te.MEGA)===-1&&o.formKey.indexOf(te.PRIMAL)===-1||s.getModifiers(kS).length)&&(o.formKey.indexOf(te.GIGANTAMAX)===-1&&o.formKey.indexOf(te.ETERNAMAX)===-1||s.getModifiers(XS).length)&&(!o.conditions.length||o.conditions.filter(C=>C instanceof WA&&C.predicate(S)).length)&&o.preFormKey===S.getFormKey()).map(o=>o.findTrigger(re)).filter(o=>(o==null?void 0:o.active)&&!s.findModifier(C=>C instanceof EI&&C.pokemonId===S.id&&C.formChangeItem===o.item));if(S.species.speciesId===e.NECROZMA){let o=!1,C=!1,U=!1;i.forEach((_,G)=>{switch(console.log("Checking ",_.item),_.item){case TO.ULTRANECROZIUM_Z:o=!0;break;case TO.N_LUNARIZER:C=!0;break;case TO.N_SOLARIZER:U=!0;break}}),o&&C&&U?i=i.filter(_=>_.item!==TO.ULTRANECROZIUM_Z):console.log("DID NOT FIND ")}return i}))].flat().flatMap(S=>S.item).filter(S=>(S&&S<100)===E);return N.length?new ga(N[De(N.length)]):null})}};r(fh,"FormChangeItemModifierTypeGenerator");let zo=fh;const dh=class dh extends eE{constructor(E,R,I,N,S){super(E,R,(T,i)=>new is(T,i[0].id,I),N,S),this.chancePercent=I}getDescription(){return D.t("modifierType:ModifierType.ContactHeldItemTransferChanceModifierType.description",{chancePercent:this.chancePercent})}};r(dh,"ContactHeldItemTransferChanceModifierType");let NG=dh;const Kh=class Kh extends eE{constructor(E,R,I,N){super(E,R,(S,T)=>new tT(S,T[0].id),I,N)}getDescription(){return D.t("modifierType:ModifierType.TurnHeldItemTransferModifierType.description")}};r(Kh,"TurnHeldItemTransferModifierType");let sG=Kh;const Fh=class Fh extends gA{constructor(E,R,I,N,S){super(E,R,(T,i)=>new RT(T,N,I,S),"enemy_status_chance"),this.chancePercent=I,this.effect=N}getDescription(){return D.t("modifierType:ModifierType.EnemyAttackStatusEffectChanceModifierType.description",{chancePercent:this.chancePercent,statusEffect:_v(this.effect)})}};r(Fh,"EnemyAttackStatusEffectChanceModifierType");let KT=Fh;const Yh=class Yh extends gA{constructor(E,R,I){super(E,R,(N,S)=>new Ei(N,I),"enemy_endure"),this.chancePercent=I}getDescription(){return D.t("modifierType:ModifierType.EnemyEndureChanceModifierType.description",{chancePercent:this.chancePercent})}};r(Yh,"EnemyEndureChanceModifierType");let SG=Yh;function Fv(t,E){return()=>{const R=s.gameMode,I=s.currentBattle.waveIndex;return R.isClassic&&I>=t?0:E}}r(Fv,"skipInClassicAfterWave");function tI(t){return Fv(199,t)}r(tI,"skipInLastClassicWaveOrDefault");function mM(t,E){return()=>{const R=s.getModifiers(Kr);return!(s.gameMode.isClassic&&s.currentBattle.waveIndex===199)&&(R.length===0||R.filter(I=>I.getMaxBattles()===t&&I.getBattleCount()>=t*.6).length===0)?E:0}}r(mM,"lureWeightFunc");const Wh=class Wh{constructor(E,R,I){this.modifierType=E(),this.modifierType.id=Object.keys(x).find(N=>x[N]===E),this.weight=R,this.maxWeight=I||(R instanceof Function?0:R)}setTier(E){this.modifierType.setTier(E)}};r(Wh,"WeightedModifierType");let _e=Wh;const x={POKEBALL:r(()=>new ON("pb",Me.POKEBALL,5),"POKEBALL"),GREAT_BALL:r(()=>new ON("gb",Me.GREAT_BALL,5),"GREAT_BALL"),ULTRA_BALL:r(()=>new ON("ub",Me.ULTRA_BALL,5),"ULTRA_BALL"),ROGUE_BALL:r(()=>new ON("rb",Me.ROGUE_BALL,5),"ROGUE_BALL"),MASTER_BALL:r(()=>new ON("mb",Me.MASTER_BALL,1),"MASTER_BALL"),RARE_CANDY:r(()=>new eG("modifierType:ModifierType.RARE_CANDY","rare_candy"),"RARE_CANDY"),RARER_CANDY:r(()=>new AG("modifierType:ModifierType.RARER_CANDY","rarer_candy"),"RARER_CANDY"),EVOLUTION_ITEM:r(()=>new qo(!1),"EVOLUTION_ITEM"),RARE_EVOLUTION_ITEM:r(()=>new qo(!0),"RARE_EVOLUTION_ITEM"),FORM_CHANGE_ITEM:r(()=>new zo(!1),"FORM_CHANGE_ITEM"),RARE_FORM_CHANGE_ITEM:r(()=>new zo(!0),"RARE_FORM_CHANGE_ITEM"),EVOLUTION_TRACKER_GIMMIGHOUL:r(()=>new eE("modifierType:ModifierType.EVOLUTION_TRACKER_GIMMIGHOUL","relic_gold",(t,E)=>new gr(t,E[0].id,e.GIMMIGHOUL,10)),"EVOLUTION_TRACKER_GIMMIGHOUL"),MEGA_BRACELET:r(()=>new gA("modifierType:ModifierType.MEGA_BRACELET","mega_bracelet",(t,E)=>new kS(t)),"MEGA_BRACELET"),DYNAMAX_BAND:r(()=>new gA("modifierType:ModifierType.DYNAMAX_BAND","dynamax_band",(t,E)=>new XS(t)),"DYNAMAX_BAND"),TERA_ORB:r(()=>new gA("modifierType:ModifierType.TERA_ORB","tera_orb",(t,E)=>new QS(t)),"TERA_ORB"),MAP:r(()=>new gA("modifierType:ModifierType.MAP","map",(t,E)=>new Yr(t)),"MAP"),POTION:r(()=>new CL("modifierType:ModifierType.POTION","potion",20,10),"POTION"),SUPER_POTION:r(()=>new CL("modifierType:ModifierType.SUPER_POTION","super_potion",50,25),"SUPER_POTION"),HYPER_POTION:r(()=>new CL("modifierType:ModifierType.HYPER_POTION","hyper_potion",200,50),"HYPER_POTION"),MAX_POTION:r(()=>new CL("modifierType:ModifierType.MAX_POTION","max_potion",0,100),"MAX_POTION"),FULL_RESTORE:r(()=>new CL("modifierType:ModifierType.FULL_RESTORE","full_restore",0,100,!0),"FULL_RESTORE"),REVIVE:r(()=>new mo("modifierType:ModifierType.REVIVE","revive",50),"REVIVE"),MAX_REVIVE:r(()=>new mo("modifierType:ModifierType.MAX_REVIVE","max_revive",100),"MAX_REVIVE"),FULL_HEAL:r(()=>new zP("modifierType:ModifierType.FULL_HEAL","full_heal"),"FULL_HEAL"),SACRED_ASH:r(()=>new tG("modifierType:ModifierType.SACRED_ASH","sacred_ash"),"SACRED_ASH"),REVIVER_SEED:r(()=>new eE("modifierType:ModifierType.REVIVER_SEED","reviver_seed",(t,E)=>new eT(t,E[0].id)),"REVIVER_SEED"),WHITE_HERB:r(()=>new eE("modifierType:ModifierType.WHITE_HERB","white_herb",(t,E)=>new xr(t,E[0].id)),"WHITE_HERB"),ETHER:r(()=>new Wa("modifierType:ModifierType.ETHER","ether",10),"ETHER"),MAX_ETHER:r(()=>new Wa("modifierType:ModifierType.MAX_ETHER","max_ether",-1),"MAX_ETHER"),ELIXIR:r(()=>new go("modifierType:ModifierType.ELIXIR","elixir",10),"ELIXIR"),MAX_ELIXIR:r(()=>new go("modifierType:ModifierType.MAX_ELIXIR","max_elixir",-1),"MAX_ELIXIR"),PP_UP:r(()=>new ma("modifierType:ModifierType.PP_UP","pp_up",1),"PP_UP"),PP_MAX:r(()=>new ma("modifierType:ModifierType.PP_MAX","pp_max",3),"PP_MAX"),LURE:r(()=>new BT("modifierType:ModifierType.LURE","lure",10),"LURE"),SUPER_LURE:r(()=>new BT("modifierType:ModifierType.SUPER_LURE","super_lure",15),"SUPER_LURE"),MAX_LURE:r(()=>new BT("modifierType:ModifierType.MAX_LURE","max_lure",30),"MAX_LURE"),SPECIES_STAT_BOOSTER:r(()=>new $o,"SPECIES_STAT_BOOSTER"),TEMP_STAT_STAGE_BOOSTER:r(()=>new Jo,"TEMP_STAT_STAGE_BOOSTER"),DIRE_HIT:r(()=>new class extends gA{getDescription(){return D.t("modifierType:ModifierType.TempStatStageBoosterModifierType.description",{stat:D.t("modifierType:ModifierType.DIRE_HIT.extra.raises"),amount:D.t("modifierType:ModifierType.TempStatStageBoosterModifierType.extra.stage")})}}("modifierType:ModifierType.DIRE_HIT","dire_hit",(t,E)=>new Fr(t,5)),"DIRE_HIT"),BASE_STAT_BOOSTER:r(()=>new Qo,"BASE_STAT_BOOSTER"),ATTACK_TYPE_BOOSTER:r(()=>new LG,"ATTACK_TYPE_BOOSTER"),MINT:r(()=>new jE((t,E)=>E&&E.length===1&&E[0]in be?new po(E[0]):new po(De(Ct(be).length))),"MINT"),MYSTICAL_ROCK:r(()=>new eE("modifierType:ModifierType.MYSTICAL_ROCK","mystical_rock",(t,E)=>new AT(t,E[0].id)),"MYSTICAL_ROCK"),TERA_SHARD:r(()=>new jE((t,E)=>{if(E&&E.length===1&&E[0]in L)return new Wo(E[0]);if(!s.getModifiers(QS).length)return null;const R=[];for(const S of t)S.hasSpecies(e.TERAPAGOS)||S.hasSpecies(e.OGERPON)||S.hasSpecies(e.SHEDINJA)||R.push(S.teraType);let I=L.UNKNOWN;R.length>0&&R.filter(S=>S===R[0]).length===R.length&&(I=R[0]);let N=De(64)?De(18):L.STELLAR;for(;N===I;)N=De(64)?De(18):L.STELLAR;return new Wo(N)}),"TERA_SHARD"),BERRY:r(()=>new jE((t,E)=>{if(E&&E.length===1&&E[0]in OA)return new iS(E[0]);const R=Ct(OA);let I;const N=De(12);return N<2?I=OA.SITRUS:N<4?I=OA.LUM:N<6?I=OA.LEPPA:I=R[De(R.length-3)+2],new iS(I)}),"BERRY"),TM_COMMON:r(()=>new dT(p.COMMON),"TM_COMMON"),TM_GREAT:r(()=>new dT(p.GREAT),"TM_GREAT"),TM_ULTRA:r(()=>new dT(p.ULTRA),"TM_ULTRA"),MEMORY_MUSHROOM:r(()=>new zs("modifierType:ModifierType.MEMORY_MUSHROOM","big_mushroom"),"MEMORY_MUSHROOM"),EXP_SHARE:r(()=>new gA("modifierType:ModifierType.EXP_SHARE","exp_share",(t,E)=>new KD(t)),"EXP_SHARE"),EXP_BALANCE:r(()=>new gA("modifierType:ModifierType.EXP_BALANCE","exp_balance",(t,E)=>new FD(t)),"EXP_BALANCE"),OVAL_CHARM:r(()=>new gA("modifierType:ModifierType.OVAL_CHARM","oval_charm",(t,E)=>new hD(t)),"OVAL_CHARM"),EXP_CHARM:r(()=>new fT("modifierType:ModifierType.EXP_CHARM","exp_charm",25),"EXP_CHARM"),SUPER_EXP_CHARM:r(()=>new fT("modifierType:ModifierType.SUPER_EXP_CHARM","super_exp_charm",60),"SUPER_EXP_CHARM"),GOLDEN_EXP_CHARM:r(()=>new fT("modifierType:ModifierType.GOLDEN_EXP_CHARM","golden_exp_charm",100),"GOLDEN_EXP_CHARM"),LUCKY_EGG:r(()=>new Zo("modifierType:ModifierType.LUCKY_EGG","lucky_egg",40),"LUCKY_EGG"),GOLDEN_EGG:r(()=>new Zo("modifierType:ModifierType.GOLDEN_EGG","golden_egg",100),"GOLDEN_EGG"),SOOTHE_BELL:r(()=>new RG("modifierType:ModifierType.SOOTHE_BELL","soothe_bell"),"SOOTHE_BELL"),SCOPE_LENS:r(()=>new eE("modifierType:ModifierType.SCOPE_LENS","scope_lens",(t,E)=>new qS(t,E[0].id,1)),"SCOPE_LENS"),LEEK:r(()=>new eE("modifierType:ModifierType.LEEK","leek",(t,E)=>new wr(t,E[0].id,2,[e.FARFETCHD,e.GALAR_FARFETCHD,e.SIRFETCHD])),"LEEK"),EVIOLITE:r(()=>new eE("modifierType:ModifierType.EVIOLITE","eviolite",(t,E)=>new lD(t,E[0].id,[h.DEF,h.SPDEF],1.5)),"EVIOLITE"),SOUL_DEW:r(()=>new eE("modifierType:ModifierType.SOUL_DEW","soul_dew",(t,E)=>new Xr(t,E[0].id)),"SOUL_DEW"),NUGGET:r(()=>new hT("modifierType:ModifierType.NUGGET","nugget",1,"modifierType:ModifierType.MoneyRewardModifierType.extra.small"),"NUGGET"),BIG_NUGGET:r(()=>new hT("modifierType:ModifierType.BIG_NUGGET","big_nugget",2.5,"modifierType:ModifierType.MoneyRewardModifierType.extra.moderate"),"BIG_NUGGET"),RELIC_GOLD:r(()=>new hT("modifierType:ModifierType.RELIC_GOLD","relic_gold",10,"modifierType:ModifierType.MoneyRewardModifierType.extra.large"),"RELIC_GOLD"),AMULET_COIN:r(()=>new gA("modifierType:ModifierType.AMULET_COIN","amulet_coin",(t,E)=>new CO(t)),"AMULET_COIN"),GOLDEN_PUNCH:r(()=>new eE("modifierType:ModifierType.GOLDEN_PUNCH","golden_punch",(t,E)=>new JL(t,E[0].id)),"GOLDEN_PUNCH"),COIN_CASE:r(()=>new gA("modifierType:ModifierType.COIN_CASE","coin_case",(t,E)=>new Jr(t)),"COIN_CASE"),LOCK_CAPSULE:r(()=>new gA("modifierType:ModifierType.LOCK_CAPSULE","lock_capsule",(t,E)=>new qr(t)),"LOCK_CAPSULE"),GRIP_CLAW:r(()=>new NG("modifierType:ModifierType.GRIP_CLAW","grip_claw",10),"GRIP_CLAW"),WIDE_LENS:r(()=>new OG("modifierType:ModifierType.WIDE_LENS","wide_lens",5),"WIDE_LENS"),MULTI_LENS:r(()=>new IG("modifierType:ModifierType.MULTI_LENS","zoom_lens"),"MULTI_LENS"),HEALING_CHARM:r(()=>new gA("modifierType:ModifierType.HEALING_CHARM","healing_charm",(t,E)=>new ET(t,1.1)),"HEALING_CHARM"),CANDY_JAR:r(()=>new gA("modifierType:ModifierType.CANDY_JAR","candy_jar",(t,E)=>new QL(t)),"CANDY_JAR"),BERRY_POUCH:r(()=>new gA("modifierType:ModifierType.BERRY_POUCH","berry_pouch",(t,E)=>new Ts(t)),"BERRY_POUCH"),FOCUS_BAND:r(()=>new eE("modifierType:ModifierType.FOCUS_BAND","focus_band",(t,E)=>new Vr(t,E[0].id)),"FOCUS_BAND"),QUICK_CLAW:r(()=>new eE("modifierType:ModifierType.QUICK_CLAW","quick_claw",(t,E)=>new zS(t,E[0].id)),"QUICK_CLAW"),KINGS_ROCK:r(()=>new eE("modifierType:ModifierType.KINGS_ROCK","kings_rock",(t,E)=>new vr(t,E[0].id)),"KINGS_ROCK"),LEFTOVERS:r(()=>new eE("modifierType:ModifierType.LEFTOVERS","leftovers",(t,E)=>new jS(t,E[0].id)),"LEFTOVERS"),SHELL_BELL:r(()=>new eE("modifierType:ModifierType.SHELL_BELL","shell_bell",(t,E)=>new Ss(t,E[0].id)),"SHELL_BELL"),TOXIC_ORB:r(()=>new eE("modifierType:ModifierType.TOXIC_ORB","toxic_orb",(t,E)=>new ss(t,E[0].id)),"TOXIC_ORB"),FLAME_ORB:r(()=>new eE("modifierType:ModifierType.FLAME_ORB","flame_orb",(t,E)=>new ss(t,E[0].id)),"FLAME_ORB"),BATON:r(()=>new eE("modifierType:ModifierType.BATON","baton",(t,E)=>new rs(t,E[0].id)),"BATON"),SHINY_CHARM:r(()=>new gA("modifierType:ModifierType.SHINY_CHARM","shiny_charm",(t,E)=>new as(t)),"SHINY_CHARM"),ABILITY_CHARM:r(()=>new gA("modifierType:ModifierType.ABILITY_CHARM","ability_charm",(t,E)=>new MI(t)),"ABILITY_CHARM"),CATCHING_CHARM:r(()=>new gA("modifierType:ModifierType.CATCHING_CHARM","catching_charm",(t,E)=>new $r(t)),"CATCHING_CHARM"),IV_SCANNER:r(()=>new gA("modifierType:ModifierType.IV_SCANNER","scanner",(t,E)=>new os(t)),"IV_SCANNER"),DNA_SPLICERS:r(()=>new Xo("modifierType:ModifierType.DNA_SPLICERS","dna_splicers"),"DNA_SPLICERS"),MINI_BLACK_HOLE:r(()=>new sG("modifierType:ModifierType.MINI_BLACK_HOLE","mini_black_hole"),"MINI_BLACK_HOLE"),VOUCHER:r(()=>new cT(SI.REGULAR,1),"VOUCHER"),VOUCHER_PLUS:r(()=>new cT(SI.PLUS,1),"VOUCHER_PLUS"),VOUCHER_PREMIUM:r(()=>new cT(SI.PREMIUM,1),"VOUCHER_PREMIUM"),GOLDEN_POKEBALL:r(()=>new gA("modifierType:ModifierType.GOLDEN_POKEBALL","pb_gold",(t,E)=>new qL(t),void 0,"se/pb_bounce_1"),"GOLDEN_POKEBALL"),SILVER_POKEBALL:r(()=>new gA("modifierType:ModifierType.SILVER_POKEBALL","pb_silver",(t,E)=>new zL(t,100),void 0,"se/pb_bounce_1"),"SILVER_POKEBALL"),ENEMY_DAMAGE_BOOSTER:r(()=>new gA("modifierType:ModifierType.ENEMY_DAMAGE_BOOSTER","wl_item_drop",(t,E)=>new ei(t,5)),"ENEMY_DAMAGE_BOOSTER"),ENEMY_DAMAGE_REDUCTION:r(()=>new gA("modifierType:ModifierType.ENEMY_DAMAGE_REDUCTION","wl_guard_spec",(t,E)=>new Ai(t,2.5)),"ENEMY_DAMAGE_REDUCTION"),ENEMY_HEAL:r(()=>new gA("modifierType:ModifierType.ENEMY_HEAL","wl_potion",(t,E)=>new mD(t,2,10)),"ENEMY_HEAL"),ENEMY_ATTACK_POISON_CHANCE:r(()=>new KT("modifierType:ModifierType.ENEMY_ATTACK_POISON_CHANCE","wl_antidote",5,J.POISON,10),"ENEMY_ATTACK_POISON_CHANCE"),ENEMY_ATTACK_PARALYZE_CHANCE:r(()=>new KT("modifierType:ModifierType.ENEMY_ATTACK_PARALYZE_CHANCE","wl_paralyze_heal",2.5,J.PARALYSIS,10),"ENEMY_ATTACK_PARALYZE_CHANCE"),ENEMY_ATTACK_BURN_CHANCE:r(()=>new KT("modifierType:ModifierType.ENEMY_ATTACK_BURN_CHANCE","wl_burn_heal",5,J.BURN,10),"ENEMY_ATTACK_BURN_CHANCE"),ENEMY_STATUS_EFFECT_HEAL_CHANCE:r(()=>new gA("modifierType:ModifierType.ENEMY_STATUS_EFFECT_HEAL_CHANCE","wl_full_heal",(t,E)=>new gD(t,2.5,10)),"ENEMY_STATUS_EFFECT_HEAL_CHANCE"),ENEMY_ENDURE_CHANCE:r(()=>new SG("modifierType:ModifierType.ENEMY_ENDURE_CHANCE","wl_reset_urge",2),"ENEMY_ENDURE_CHANCE"),ENEMY_FUSED_CHANCE:r(()=>new gA("modifierType:ModifierType.ENEMY_FUSED_CHANCE","wl_custom_spliced",(t,E)=>new ti(t,1)),"ENEMY_FUSED_CHANCE"),MYSTERY_ENCOUNTER_SHUCKLE_JUICE:r(()=>new jE((t,E)=>E?new xo(E[0]):new xo(De(20,1))),"MYSTERY_ENCOUNTER_SHUCKLE_JUICE"),MYSTERY_ENCOUNTER_OLD_GATEAU:r(()=>new jE((t,E)=>E?new bo(E[0],E[1]):new bo(De(20,1),[h.HP,h.ATK,h.DEF])),"MYSTERY_ENCOUNTER_OLD_GATEAU"),MYSTERY_ENCOUNTER_BLACK_SLUDGE:r(()=>new jE((t,E)=>E?new gA("modifierType:ModifierType.MYSTERY_ENCOUNTER_BLACK_SLUDGE","black_sludge",(R,I)=>new $L(R,E[0])):new gA("modifierType:ModifierType.MYSTERY_ENCOUNTER_BLACK_SLUDGE","black_sludge",(R,I)=>new $L(R,2.5))),"MYSTERY_ENCOUNTER_BLACK_SLUDGE"),MYSTERY_ENCOUNTER_MACHO_BRACE:r(()=>new eE("modifierType:ModifierType.MYSTERY_ENCOUNTER_MACHO_BRACE","macho_brace",(t,E)=>new JS(t,E[0].id)),"MYSTERY_ENCOUNTER_MACHO_BRACE"),MYSTERY_ENCOUNTER_GOLDEN_BUG_NET:r(()=>new gA("modifierType:ModifierType.MYSTERY_ENCOUNTER_GOLDEN_BUG_NET","golden_net",(t,E)=>new zr(t)),"MYSTERY_ENCOUNTER_GOLDEN_BUG_NET")};function nT(t){return s.gameMode.isClassic&&s.pokeballCounts[t]>=hv}r(nT,"hasMaximumBalls");const Ws={[p.COMMON]:[new _e(x.POKEBALL,()=>nT(Me.POKEBALL)?0:6,6),new _e(x.RARE_CANDY,2),new _e(x.POTION,t=>Math.min(t.filter(R=>R.getInverseHp()>=10&&R.getHpRatio()<=.875&&!R.isFainted()).length,3)*3,9),new _e(x.SUPER_POTION,t=>Math.min(t.filter(R=>R.getInverseHp()>=25&&R.getHpRatio()<=.75&&!R.isFainted()).length,3),3),new _e(x.ETHER,t=>Math.min(t.filter(R=>R.hp&&!R.getHeldItems().some(I=>I instanceof XE&&I.berryType===OA.LEPPA)&&R.getMoveset().filter(I=>I.ppUsed&&I.getMovePp()-I.ppUsed<=5&&I.ppUsed>Math.floor(I.getMovePp()/2)).length).length,3)*3,9),new _e(x.MAX_ETHER,t=>Math.min(t.filter(R=>R.hp&&!R.getHeldItems().some(I=>I instanceof XE&&I.berryType===OA.LEPPA)&&R.getMoveset().filter(I=>I.ppUsed&&I.getMovePp()-I.ppUsed<=5&&I.ppUsed>Math.floor(I.getMovePp()/2)).length).length,3),3),new _e(x.LURE,mM(10,2)),new _e(x.TEMP_STAT_STAGE_BOOSTER,4),new _e(x.BERRY,2),new _e(x.TM_COMMON,2)].map(t=>(t.setTier(p.COMMON),t)),[p.GREAT]:[new _e(x.GREAT_BALL,()=>nT(Me.GREAT_BALL)?0:6,6),new _e(x.PP_UP,2),new _e(x.FULL_HEAL,t=>Math.min(t.filter(R=>R.hp&&!!R.status&&!R.getHeldItems().some(I=>{var N;return I instanceof ss?I.getStatusEffect()===((N=R.status)==null?void 0:N.effect):!1})).length,3)*6,18),new _e(x.REVIVE,t=>Math.min(t.filter(R=>R.isFainted()).length,3)*9,27),new _e(x.MAX_REVIVE,t=>Math.min(t.filter(R=>R.isFainted()).length,3)*3,9),new _e(x.SACRED_ASH,t=>t.filter(E=>E.isFainted()).length>=Math.ceil(t.length/2)?1:0,1),new _e(x.HYPER_POTION,t=>Math.min(t.filter(R=>R.getInverseHp()>=100&&R.getHpRatio()<=.625&&!R.isFainted()).length,3)*3,9),new _e(x.MAX_POTION,t=>Math.min(t.filter(R=>R.getInverseHp()>=100&&R.getHpRatio()<=.5&&!R.isFainted()).length,3),3),new _e(x.FULL_RESTORE,t=>{const E=Math.min(t.filter(I=>I.hp&&!!I.status&&!I.getHeldItems().some(N=>{var S;return N instanceof ss?N.getStatusEffect()===((S=I.status)==null?void 0:S.effect):!1})).length,3);return Math.floor((Math.min(t.filter(I=>I.getInverseHp()>=100&&I.getHpRatio()<=.5&&!I.isFainted()).length,3)+E)/2)},3),new _e(x.ELIXIR,t=>Math.min(t.filter(R=>R.hp&&!R.getHeldItems().some(I=>I instanceof XE&&I.berryType===OA.LEPPA)&&R.getMoveset().filter(I=>I.ppUsed&&I.getMovePp()-I.ppUsed<=5&&I.ppUsed>Math.floor(I.getMovePp()/2)).length).length,3)*3,9),new _e(x.MAX_ELIXIR,t=>Math.min(t.filter(R=>R.hp&&!R.getHeldItems().some(I=>I instanceof XE&&I.berryType===OA.LEPPA)&&R.getMoveset().filter(I=>I.ppUsed&&I.getMovePp()-I.ppUsed<=5&&I.ppUsed>Math.floor(I.getMovePp()/2)).length).length,3),3),new _e(x.DIRE_HIT,4),new _e(x.SUPER_LURE,mM(15,4)),new _e(x.NUGGET,tI(5)),new _e(x.EVOLUTION_ITEM,()=>Math.min(Math.ceil(s.currentBattle.waveIndex/15),8),8),new _e(x.MAP,()=>s.gameMode.isClassic&&s.currentBattle.waveIndex<180?2:0,2),new _e(x.SOOTHE_BELL,2),new _e(x.TM_GREAT,3),new _e(x.MEMORY_MUSHROOM,t=>{if(!t.find(R=>R.getLearnableLevelMoves().length))return 0;const E=t.map(R=>R.level).reduce((R,I)=>Math.max(R,I),1);return Math.min(Math.ceil(E/20),4)},4),new _e(x.BASE_STAT_BOOSTER,3),new _e(x.TERA_SHARD,t=>t.filter(E=>!(E.hasSpecies(e.TERAPAGOS)||E.hasSpecies(e.OGERPON)||E.hasSpecies(e.SHEDINJA))).length>0?1:0),new _e(x.DNA_SPLICERS,t=>{if(t.filter(E=>!E.fusionSpecies).length>1){if(s.gameMode.isSplicedOnly)return 4;if(s.gameMode.isClassic&&vE.areFusionsBoosted())return 2}return 0},4),new _e(x.VOUCHER,(t,E)=>s.gameMode.isDaily?0:Math.max(1-E,0),1)].map(t=>(t.setTier(p.GREAT),t)),[p.ULTRA]:[new _e(x.ULTRA_BALL,()=>nT(Me.ULTRA_BALL)?0:15,15),new _e(x.MAX_LURE,mM(30,4)),new _e(x.BIG_NUGGET,tI(12)),new _e(x.PP_MAX,3),new _e(x.MINT,4),new _e(x.RARE_EVOLUTION_ITEM,()=>Math.min(Math.ceil(s.currentBattle.waveIndex/15)*4,32),32),new _e(x.FORM_CHANGE_ITEM,()=>Math.min(Math.ceil(s.currentBattle.waveIndex/50),4)*6,24),new _e(x.AMULET_COIN,tI(3)),new _e(x.EVIOLITE,t=>{const{gameMode:E,gameData:R}=s;return(E.isDaily||!E.isFreshStartChallenge()&&R.isUnlocked(tR.EVIOLITE))&&t.some(I=>!I.isMax()&&(I.getSpeciesForm(!0).speciesId in BA||I.isFusion()&&I.getFusionSpeciesForm(!0).speciesId in BA)?!I.getHeldItems().some(N=>N.type.id==="EVIOLITE"):!1)?10:0}),new _e(x.SPECIES_STAT_BOOSTER,12),new _e(x.LEEK,t=>{const E=[e.FARFETCHD,e.GALAR_FARFETCHD,e.SIRFETCHD];return t.some(R=>!R.getHeldItems().some(I=>I instanceof wr)&&(E.includes(R.getSpeciesForm(!0).speciesId)||R.isFusion()&&E.includes(R.getFusionSpeciesForm(!0).speciesId)))?12:0},12),new _e(x.TOXIC_ORB,t=>t.some(E=>{if(!E.getHeldItems().some(I=>I.type.id==="FLAME_ORB"||I.type.id==="TOXIC_ORB")){const I=E.getMoveset(!0).filter(i=>!Ne(i)).map(i=>i.moveId),N=E.canSetStatus(J.TOXIC,!0,!0,null,!0),S=[A.FACADE,A.PSYCHO_SHIFT].some(i=>I.includes(i)),T=[].some(i=>I.includes(i));if(N){const i=[O.QUICK_FEET,O.GUTS,O.MARVEL_SCALE,O.MAGIC_GUARD].some(U=>E.hasAbility(U,!1,!0)),o=[O.TOXIC_BOOST,O.POISON_HEAL].some(U=>E.hasAbility(U,!1,!0)),C=[O.FLARE_BOOST].some(U=>E.hasAbility(U,!1,!0));return o||i&&!C||S}return T}return!1})?10:0,10),new _e(x.FLAME_ORB,t=>t.some(E=>{if(!E.getHeldItems().some(I=>I.type.id==="FLAME_ORB"||I.type.id==="TOXIC_ORB")){const I=E.getMoveset(!0).filter(i=>!Ne(i)).map(i=>i.moveId),N=E.canSetStatus(J.BURN,!0,!0,null,!0),S=[A.FACADE,A.PSYCHO_SHIFT].some(i=>I.includes(i)),T=[].some(i=>I.includes(i));if(N){const i=[O.QUICK_FEET,O.GUTS,O.MARVEL_SCALE,O.MAGIC_GUARD].some(U=>E.hasAbility(U,!1,!0)),o=[O.FLARE_BOOST].some(U=>E.hasAbility(U,!1,!0)),C=[O.TOXIC_BOOST,O.POISON_HEAL].some(U=>E.hasAbility(U,!1,!0));return o||i&&!C||S}return T}return!1})?10:0,10),new _e(x.MYSTICAL_ROCK,t=>t.some(E=>{let R=!1;for(const I of E.getHeldItems())if(I.type.id==="MYSTICAL_ROCK"){R=I.getStackCount()===I.getMaxStackCount();break}if(!R){const I=E.getMoveset(!0).map(T=>T.moveId),N=[O.DROUGHT,O.ORICHALCUM_PULSE,O.DRIZZLE,O.SAND_STREAM,O.SAND_SPIT,O.SNOW_WARNING,O.ELECTRIC_SURGE,O.HADRON_ENGINE,O.PSYCHIC_SURGE,O.GRASSY_SURGE,O.SEED_SOWER,O.MISTY_SURGE].some(T=>E.hasAbility(T,!1,!0)),S=[A.SUNNY_DAY,A.RAIN_DANCE,A.SANDSTORM,A.SNOWSCAPE,A.HAIL,A.CHILLY_RECEPTION,A.ELECTRIC_TERRAIN,A.PSYCHIC_TERRAIN,A.GRASSY_TERRAIN,A.MISTY_TERRAIN].some(T=>I.includes(T));return N||S}return!1})?10:0,10),new _e(x.REVIVER_SEED,4),new _e(x.CANDY_JAR,tI(5)),new _e(x.ATTACK_TYPE_BOOSTER,9),new _e(x.TM_ULTRA,11),new _e(x.RARER_CANDY,4),new _e(x.GOLDEN_PUNCH,tI(2)),new _e(x.IV_SCANNER,tI(4)),new _e(x.EXP_CHARM,tI(8)),new _e(x.EXP_SHARE,tI(10)),new _e(x.TERA_ORB,()=>s.gameMode.isClassic?0:Math.min(Math.max(Math.floor(s.currentBattle.waveIndex/50)*2,1),4),4),new _e(x.QUICK_CLAW,3),new _e(x.WIDE_LENS,7)].map(t=>(t.setTier(p.ULTRA),t)),[p.ROGUE]:[new _e(x.ROGUE_BALL,()=>nT(Me.ROGUE_BALL)?0:16,16),new _e(x.RELIC_GOLD,tI(2)),new _e(x.LEFTOVERS,3),new _e(x.SHELL_BELL,3),new _e(x.BERRY_POUCH,4),new _e(x.GRIP_CLAW,5),new _e(x.SCOPE_LENS,4),new _e(x.BATON,2),new _e(x.SOUL_DEW,7),new _e(x.CATCHING_CHARM,()=>s.gameMode.isClassic?0:4,4),new _e(x.ABILITY_CHARM,Fv(189,6)),new _e(x.FOCUS_BAND,5),new _e(x.KINGS_ROCK,3),new _e(x.LOCK_CAPSULE,()=>s.gameMode.isClassic?0:3),new _e(x.SUPER_EXP_CHARM,tI(8)),new _e(x.RARE_FORM_CHANGE_ITEM,()=>Math.min(Math.ceil(s.currentBattle.waveIndex/50),4)*6,24),new _e(x.MEGA_BRACELET,()=>Math.min(Math.ceil(s.currentBattle.waveIndex/50),4)*9,36),new _e(x.DYNAMAX_BAND,()=>Math.min(Math.ceil(s.currentBattle.waveIndex/50),4)*9,36),new _e(x.VOUCHER_PLUS,(t,E)=>s.gameMode.isDaily?0:Math.max(3-E*1,0),3)].map(t=>(t.setTier(p.ROGUE),t)),[p.MASTER]:[new _e(x.MASTER_BALL,()=>nT(Me.MASTER_BALL)?0:24,24),new _e(x.SHINY_CHARM,14),new _e(x.HEALING_CHARM,18),new _e(x.MULTI_LENS,18),new _e(x.VOUCHER_PREMIUM,(t,E)=>!s.gameMode.isDaily&&!s.gameMode.isEndless&&!s.gameMode.isSplicedOnly?Math.max(5-E*2,0):0,5),new _e(x.DNA_SPLICERS,t=>!(s.gameMode.isClassic&&vE.areFusionsBoosted())&&!s.gameMode.isSplicedOnly&&t.filter(E=>!E.fusionSpecies).length>1?24:0,24),new _e(x.MINI_BLACK_HOLE,()=>s.gameMode.isDaily||!s.gameMode.isFreshStartChallenge()&&s.gameData.isUnlocked(tR.MINI_BLACK_HOLE)?1:0,1)].map(t=>(t.setTier(p.MASTER),t))},Cx={[p.COMMON]:[new _e(x.BERRY,1)].map(t=>(t.setTier(p.COMMON),t)),[p.GREAT]:[new _e(x.BASE_STAT_BOOSTER,1)].map(t=>(t.setTier(p.GREAT),t)),[p.ULTRA]:[new _e(x.ATTACK_TYPE_BOOSTER,10),new _e(x.WHITE_HERB,0)].map(t=>(t.setTier(p.ULTRA),t)),[p.ROGUE]:[new _e(x.LUCKY_EGG,4)].map(t=>(t.setTier(p.ROGUE),t)),[p.MASTER]:[new _e(x.GOLDEN_EGG,1)].map(t=>(t.setTier(p.MASTER),t))},lx={[p.COMMON]:[new _e(x.BERRY,8),new _e(x.BASE_STAT_BOOSTER,3)].map(t=>(t.setTier(p.COMMON),t)),[p.GREAT]:[new _e(x.BASE_STAT_BOOSTER,3)].map(t=>(t.setTier(p.GREAT),t)),[p.ULTRA]:[new _e(x.ATTACK_TYPE_BOOSTER,10),new _e(x.WHITE_HERB,0)].map(t=>(t.setTier(p.ULTRA),t)),[p.ROGUE]:[new _e(x.FOCUS_BAND,2),new _e(x.LUCKY_EGG,4),new _e(x.QUICK_CLAW,1),new _e(x.GRIP_CLAW,1),new _e(x.WIDE_LENS,1)].map(t=>(t.setTier(p.ROGUE),t)),[p.MASTER]:[new _e(x.KINGS_ROCK,1),new _e(x.LEFTOVERS,1),new _e(x.SHELL_BELL,1),new _e(x.SCOPE_LENS,1)].map(t=>(t.setTier(p.MASTER),t))},Ux={[p.COMMON]:[new _e(x.ENEMY_DAMAGE_BOOSTER,9),new _e(x.ENEMY_DAMAGE_REDUCTION,9),new _e(x.ENEMY_ATTACK_POISON_CHANCE,3),new _e(x.ENEMY_ATTACK_PARALYZE_CHANCE,3),new _e(x.ENEMY_ATTACK_BURN_CHANCE,3),new _e(x.ENEMY_STATUS_EFFECT_HEAL_CHANCE,9),new _e(x.ENEMY_ENDURE_CHANCE,4),new _e(x.ENEMY_FUSED_CHANCE,1)].map(t=>(t.setTier(p.COMMON),t)),[p.GREAT]:[new _e(x.ENEMY_DAMAGE_BOOSTER,5),new _e(x.ENEMY_DAMAGE_REDUCTION,5),new _e(x.ENEMY_STATUS_EFFECT_HEAL_CHANCE,5),new _e(x.ENEMY_ENDURE_CHANCE,5),new _e(x.ENEMY_FUSED_CHANCE,1)].map(t=>(t.setTier(p.GREAT),t)),[p.ULTRA]:[new _e(x.ENEMY_DAMAGE_BOOSTER,10),new _e(x.ENEMY_DAMAGE_REDUCTION,10),new _e(x.ENEMY_HEAL,10),new _e(x.ENEMY_STATUS_EFFECT_HEAL_CHANCE,10),new _e(x.ENEMY_ENDURE_CHANCE,10),new _e(x.ENEMY_FUSED_CHANCE,5)].map(t=>(t.setTier(p.ULTRA),t)),[p.ROGUE]:[].map(t=>(t.setTier(p.ROGUE),t)),[p.MASTER]:[].map(t=>(t.setTier(p.MASTER),t))},Dx={[p.COMMON]:[new _e(x.BASE_STAT_BOOSTER,1),new _e(x.BERRY,3)].map(t=>(t.setTier(p.COMMON),t)),[p.GREAT]:[new _e(x.ATTACK_TYPE_BOOSTER,5)].map(t=>(t.setTier(p.GREAT),t)),[p.ULTRA]:[new _e(x.REVIVER_SEED,4),new _e(x.SOOTHE_BELL,1),new _e(x.SOUL_DEW,1),new _e(x.GOLDEN_PUNCH,1)].map(t=>(t.setTier(p.ULTRA),t)),[p.ROGUE]:[new _e(x.GRIP_CLAW,5),new _e(x.BATON,2),new _e(x.FOCUS_BAND,5),new _e(x.QUICK_CLAW,3),new _e(x.KINGS_ROCK,3)].map(t=>(t.setTier(p.ROGUE),t)),[p.MASTER]:[new _e(x.LEFTOVERS,1),new _e(x.SHELL_BELL,1)].map(t=>(t.setTier(p.MASTER),t))};function q1(t){const E=t();return E.id||(E.id=Object.keys(x).find(R=>x[R]===t)),E}r(q1,"getModifierType");let Yv={},TG={},Wv={},nG={},mv={};function jo(t){let E;switch(t){case 0:E=Ws;break;case 1:E=Cx;break;case 2:E=lx;break;case 3:E=Ux;break;case 4:E=Dx;break}return E}r(jo,"getModifierPoolForType");const Mx=[768/1024,195/1024,48/1024,12/1024,1/1024],Ui=new Map;function jL(t,E,R=0){const I=jo(E);Ui.forEach((i,o)=>{Ui.set(o,!1)});const N={},S={},T=Object.fromEntries(new Map(Object.keys(I).map(i=>{N[i]=[];const o=new Map,C=[];let U=0,_=0;I[i].reduce((G,H)=>{const c=H,f=s.findModifiers(m=>m.type.id===c.modifierType.id,E===0),d=c.modifierType instanceof jE?c.modifierType.generateType(t):c.modifierType,w=!f.length||d instanceof eE||d instanceof ga||f.find(m=>m.stackCount<m.getMaxStackCount(!0))?c.weight instanceof Function?c.weight(t,R):c.weight:0;if(c.maxWeight){const m=c.modifierType.id;C.push(m);const W=w;S[m]={weight:W,tier:Number.parseInt(i),tierPercent:0,totalPercent:0},U+=W}if(w)G+=w;else return N[i].push(_++),G;return Ui.has(H.modifierType.id)&&Ui.set(H.modifierType.id,!0),o.set(G,_++),G},0);for(const G of C)S[G].tierPercent=Math.floor(S[G].weight/U*1e4)/100;return[i,Object.fromEntries(o)]})));for(const i of Object.keys(S))S[i].totalPercent=Math.floor(S[i].tierPercent*Mx[S[i].tier]*100)/100,S[i].tier=p[S[i].tier];switch(E){case 0:Yv=T,TG=N;break;case 1:case 2:nG=T;break;case 3:mv=T;break;case 4:Wv=T;break}}r(jL,"regenerateModifierPoolThresholds");function Px(t){return x[t]}r(Px,"getModifierTypeFuncById");function z1(t,E,R,I){const N=[],S=Math.min(t*5,50);if(!I)new Array(t).fill(0).map((T,i)=>{N.push(gM(N,S,E,R&&R.length>i?R[i]:void 0))});else{if(I!=null&&I.guaranteedModifierTypeOptions&&I.guaranteedModifierTypeOptions.length>0&&N.push(...I.guaranteedModifierTypeOptions),I.guaranteedModifierTypeFuncs&&I.guaranteedModifierTypeFuncs.length>0&&I.guaranteedModifierTypeFuncs.forEach((T,i)=>{var _;const o=Object.keys(x).find(G=>x[G]===T);let C=(_=x[o])==null?void 0:_.call(x);C=C.withIdFromFunc(x[o]).withTierFromPool(0,E);const U=C instanceof jE?C.generateType(E):C;if(U){const G=new dt(U,0);N.push(G)}}),I.guaranteedModifierTiers&&I.guaranteedModifierTiers.length>0){const T=I.allowLuckUpgrades??!0;for(const i of I.guaranteedModifierTiers)N.push(gM(N,S,E,i,T))}if(N.length<t&&I.fillRemaining)for(;N.length<t;)N.push(gM(N,S,E,void 0))}return Gx(N,E),N}r(z1,"getPlayerModifierTypeOptions");function gM(t,E,R,I,N){N=N??!0;let S=VN(R,0,I,void 0,0,N),T=0;for(;t.length&&++T<E&&t.filter(i=>i.type.name===(S==null?void 0:S.type.name)||i.type.group===(S==null?void 0:S.type.group)).length;)S=VN(R,0,(S==null?void 0:S.type.tier)??I,S==null?void 0:S.upgradeCount,0,N);return S}r(gM,"getModifierTypeOptionWithRetry");function Gx(t,E){const R=Math.min(t.length,Ze.ITEM_REWARD_OVERRIDE.length);for(let I=0;I<R;I++){const N=Ze.ITEM_REWARD_OVERRIDE[I],S=x[N.name];let T=S();if(T instanceof jE){const i="type"in N&&N.type!==null?[N.type]:void 0;T=T.generateType(E,i)}T&&(t[I].type=T.withIdFromFunc(S).withTierFromPool(0,E))}}r(Gx,"overridePlayerModifierTypeOptions");function gv(t,E){return t%10?[[new dt(x.POTION(),0,E*.2),new dt(x.ETHER(),0,E*.4),new dt(x.REVIVE(),0,E*2)],[new dt(x.SUPER_POTION(),0,E*.45),new dt(x.FULL_HEAL(),0,E)],[new dt(x.ELIXIR(),0,E),new dt(x.MAX_ETHER(),0,E)],[new dt(x.HYPER_POTION(),0,E*.8),new dt(x.MAX_REVIVE(),0,E*2.75),new dt(x.MEMORY_MUSHROOM(),0,E*4)],[new dt(x.MAX_POTION(),0,E*1.5),new dt(x.MAX_ELIXIR(),0,E*2.5)],[new dt(x.FULL_RESTORE(),0,E*2.25)],[new dt(x.SACRED_ASH(),0,E*10)]].slice(0,Math.ceil(Math.max(t+10,0)/30)).flat():[]}r(gv,"getPlayerShopModifierTypeOptionsForWave");function _x(t,E){var o;let R;switch(t){case p.ULTRA:R=5;break;case p.GREAT:R=3;break;default:R=1;break}const I=50;let N=VN([],3,t),S=0,T;for(;++S<I&&(T=E.find(C=>{var U;return C.type.id===((U=N==null?void 0:N.type)==null?void 0:U.id)}))&&T.getMaxStackCount()<T.stackCount+(S<10?R:1);)N=VN([],3,t);const i=(o=N==null?void 0:N.type)==null?void 0:o.newModifier();return i.stackCount=R,i}r(_x,"getEnemyBuffModifierForWave");function QX(t,E,R,I,N=0){const S=new Array(E).fill(0).map(()=>{var T;return(T=VN(R,I,void 0,N&&!De(N)?1:0))==null?void 0:T.type});return t%1e3||S.push(q1(x.MINI_BLACK_HOLE)),S}r(QX,"getEnemyModifierTypesForWave");function ux(t){var R,I;const E=[];for(const N of t)for(let S=0;S<3;S++){const T=De(64);let i;T>25?i=p.COMMON:T>12?i=p.GREAT:T>4?i=p.ULTRA:T?i=p.ROGUE:i=p.MASTER;const o=(I=(R=VN(t,4,i))==null?void 0:R.type)==null?void 0:I.newModifier(N);E.push(o)}return E}r(ux,"getDailyRunStarterModifiers");function VN(t,E,R,I,N=0,S=!0){const T=!E,i=jo(E);let o;switch(E){case 0:o=Yv;break;case 1:o=nG;break;case 2:o=nG;break;case 3:o=mv;break;case 4:o=Wv;break}if(R===void 0){const c=De(1024);if(I||(I=0),T&&c&&S){const f=pa(t),d=Math.floor(128/((f+4)/4));let w=!1;do w=De(d)<4,w&&I++;while(w)}for(c>255?R=p.COMMON:c>60?R=p.GREAT:c>12?R=p.ULTRA:c?R=p.ROGUE:R=p.MASTER,R+=I;R&&(!Ws.hasOwnProperty(R)||!Ws[R].length);)R--,I&&I--}else if(I===void 0&&T){if(I=0,R<p.MASTER&&S){const c=pa(t),f=Math.floor(128/((c+4)/4));for(;Ws.hasOwnProperty(R+I+1)&&Ws[R+I+1].length&&De(f)<4;)I++;R+=I}}else N>=100&&R&&(N=0,R--);const C=Object.keys(o[R]),U=Number.parseInt(C[C.length-1]),_=De(U);let G;for(const c of C){const f=Number.parseInt(c);if(_<f){G=o[R][f];break}}if(G===void 0)return null;T&&console.log(G,TG[R].filter(c=>c<=G).length,TG[R]);let H=i[R][G].modifierType;return H instanceof jE&&(H=H.generateType(t),H===null)?(T&&console.log(p[R],I),VN(t,E,R,I,++N)):(console.log(H,T?"":"(enemy)"),new dt(H,I))}r(VN,"getNewModifierTypeOption");function JX(t){let E=Ws[t||p.COMMON][0];return E instanceof _e&&(E=E.modifierType),E}r(JX,"getDefaultModifierTypeForTier");const mh=class mh{constructor(E,R,I=0){this.type=E,this.upgradeCount=R,this.cost=Math.min(Math.round(I),Number.MAX_SAFE_INTEGER)}};r(mh,"ModifierTypeOption");let dt=mh;function pa(t){if(s.gameMode.isDaily){const I=new me(0);return s.executeWithSeedOffset(()=>{I.value=De(15)},0,s.seed),I.value}const E=vE.getEventLuckBoostedSpecies(),R=Phaser.Math.Clamp(t.map(I=>I.isAllowedInBattle()?I.getLuck()+(E.includes(I.species.speciesId)?1:0):0).reduce((I,N)=>I+=N,0),0,14);return Math.min(vE.getEventLuckBoost()+(R??0),14)}r(pa,"getPartyLuckValue");function Hx(t){return["D","C","C+","B-","B","B+","A-","A","A+","A++","S","S+","SS","SS+","SSS"][t]}r(Hx,"getLuckString");function cx(t){let E;return t>11?E=p.LUXURY:t>9?E=p.MASTER:t>5?E=p.ROGUE:t>2?E=p.ULTRA:t?E=p.GREAT:E=p.COMMON,ds(E)}r(cx,"getLuckTextTint");const gh=class gh{constructor(E,R){const I=E instanceof WE?E:null;this.player=R,this.typeId=I?I.type.id:E.typeId,I?"getPregenArgs"in E.type&&(this.typePregenArgs=E.type.getPregenArgs()):E.typePregenArgs&&(this.typePregenArgs=E.typePregenArgs),this.args=I?I.getArgs():E.args||[],this.stackCount=E.stackCount,this.className=I?I.constructor.name:E.className}toModifier(E){const R=Px(this.typeId);if(!R)return null;try{let I=R();I.id=this.typeId,I instanceof jE&&(I=I.generateType(this.player?s.getPlayerParty():s.getEnemyField(),this.typePregenArgs));const N=Reflect.construct(E,[I].concat(this.args).concat(this.stackCount));return N.stackCount>N.getMaxStackCount()&&(N.stackCount=N.getMaxStackCount()),N}catch(I){return console.error(I),null}}};r(gh,"ModifierData");let cN=gh;var $e=(t=>(t[t.NONE=0]="NONE",t[t.MISTY=1]="MISTY",t[t.ELECTRIC=2]="ELECTRIC",t[t.GRASSY=3]="GRASSY",t[t.PSYCHIC=4]="PSYCHIC",t))($e||{});const ph=class ph{constructor(E,R){this.terrainType=E,this.turnsLeft=R||0}lapse(){return this.turnsLeft?!!--this.turnsLeft:!0}getAttackTypeMultiplier(E){switch(this.terrainType){case 2:if(E===L.ELECTRIC)return 1.3;break;case 3:if(E===L.GRASS)return 1.3;break;case 4:if(E===L.PSYCHIC)return 1.3;break}return 1}isMoveTerrainCancelled(E,R,I){switch(this.terrainType){case 4:if(!I.hasAttr(IO))return I.getPriority(E)>0&&E.getOpponents(!0).some(N=>R.includes(N.getBattlerIndex())&&N.isGrounded())}return!1}};r(ph,"Terrain");let eC=ph;function Bx(t){switch(t){case 1:return D.t("terrain:misty");case 2:return D.t("terrain:electric");case 3:return D.t("terrain:grassy");case 4:return D.t("terrain:psychic")}return""}r(Bx,"getTerrainName");function $X(t){switch(t){case 1:return[232,136,200];case 2:return[248,248,120];case 3:return[120,200,80];case 4:return[160,64,160]}return[0,0,0]}r($X,"getTerrainColor");const yh=class yh{constructor(E,R){this.weatherType=E,this.turnsLeft=this.isImmutable()?0:R||0}lapse(){return this.isImmutable()?!0:this.turnsLeft?!!--this.turnsLeft:!0}isImmutable(){switch(this.weatherType){case X.HEAVY_RAIN:case X.HARSH_SUN:case X.STRONG_WINDS:return!0}return!1}isDamaging(){switch(this.weatherType){case X.SANDSTORM:case X.HAIL:return!0}return!1}isTypeDamageImmune(E){switch(this.weatherType){case X.SANDSTORM:return E===L.GROUND||E===L.ROCK||E===L.STEEL;case X.HAIL:return E===L.ICE}return!1}getAttackTypeMultiplier(E){switch(this.weatherType){case X.SUNNY:case X.HARSH_SUN:if(E===L.FIRE)return 1.5;if(E===L.WATER)return .5;break;case X.RAIN:case X.HEAVY_RAIN:if(E===L.FIRE)return .5;if(E===L.WATER)return 1.5;break}return 1}isMoveWeatherCancelled(E,R){const I=E.getMoveType(R);switch(this.weatherType){case X.HARSH_SUN:return R instanceof B&&I===L.WATER;case X.HEAVY_RAIN:return R instanceof B&&I===L.FIRE}return!1}isEffectSuppressed(){const E=s.getField(!0);for(const R of E){let I=R.getAbility().getAttrs(dS)[0];if(I||(I=R.hasPassive()?R.getPassiveAbility().getAttrs(dS)[0]:null),I&&(!this.isImmutable()||I.affectsImmutable))return!0}return!1}};r(yh,"Weather");let ya=yh;function oV(t){switch(t){case X.SUNNY:return D.t("weather:sunnyStartMessage");case X.RAIN:return D.t("weather:rainStartMessage");case X.SANDSTORM:return D.t("weather:sandstormStartMessage");case X.HAIL:return D.t("weather:hailStartMessage");case X.SNOW:return D.t("weather:snowStartMessage");case X.FOG:return D.t("weather:fogStartMessage");case X.HEAVY_RAIN:return D.t("weather:heavyRainStartMessage");case X.HARSH_SUN:return D.t("weather:harshSunStartMessage");case X.STRONG_WINDS:return D.t("weather:strongWindsStartMessage")}return null}r(oV,"getWeatherStartMessage");function qX(t){switch(t){case X.SUNNY:return D.t("weather:sunnyLapseMessage");case X.RAIN:return D.t("weather:rainLapseMessage");case X.SANDSTORM:return D.t("weather:sandstormLapseMessage");case X.HAIL:return D.t("weather:hailLapseMessage");case X.SNOW:return D.t("weather:snowLapseMessage");case X.FOG:return D.t("weather:fogLapseMessage");case X.HEAVY_RAIN:return D.t("weather:heavyRainLapseMessage");case X.HARSH_SUN:return D.t("weather:harshSunLapseMessage");case X.STRONG_WINDS:return D.t("weather:strongWindsLapseMessage")}return null}r(qX,"getWeatherLapseMessage");function zX(t,E){switch(t){case X.SANDSTORM:return D.t("weather:sandstormDamageMessage",{pokemonNameWithAffix:Z(E)});case X.HAIL:return D.t("weather:hailDamageMessage",{pokemonNameWithAffix:Z(E)})}return null}r(zX,"getWeatherDamageMessage");function hx(t){switch(t){case X.SUNNY:return D.t("weather:sunnyClearMessage");case X.RAIN:return D.t("weather:rainClearMessage");case X.SANDSTORM:return D.t("weather:sandstormClearMessage");case X.HAIL:return D.t("weather:hailClearMessage");case X.SNOW:return D.t("weather:snowClearMessage");case X.FOG:return D.t("weather:fogClearMessage");case X.HEAVY_RAIN:return D.t("weather:heavyRainClearMessage");case X.HARSH_SUN:return D.t("weather:harshSunClearMessage");case X.STRONG_WINDS:return D.t("weather:strongWindsClearMessage")}return null}r(hx,"getWeatherClearMessage");function fx(t){switch(t){case X.HARSH_SUN:return D.t("weather:harshSunContinueMessage");case X.HEAVY_RAIN:return D.t("weather:heavyRainContinueMessage");case X.STRONG_WINDS:return D.t("weather:strongWindsContinueMessage")}return null}r(fx,"getLegendaryWeatherContinuesMessage");function dx(t){switch(t){case X.HARSH_SUN:return D.t("weather:harshSunEffectMessage");case X.HEAVY_RAIN:return D.t("weather:heavyRainEffectMessage")}return D.t("weather:defaultEffectMessage")}r(dx,"getWeatherBlockMessage");function Kx(t){switch(t){case $e.MISTY:return D.t("terrain:mistyStartMessage");case $e.ELECTRIC:return D.t("terrain:electricStartMessage");case $e.GRASSY:return D.t("terrain:grassyStartMessage");case $e.PSYCHIC:return D.t("terrain:psychicStartMessage");default:return console.warn("getTerrainStartMessage not defined. Using default null"),null}}r(Kx,"getTerrainStartMessage");function Fx(t){switch(t){case $e.MISTY:return D.t("terrain:mistyClearMessage");case $e.ELECTRIC:return D.t("terrain:electricClearMessage");case $e.GRASSY:return D.t("terrain:grassyClearMessage");case $e.PSYCHIC:return D.t("terrain:psychicClearMessage");default:return console.warn("getTerrainClearMessage not defined. Using default null"),null}}r(Fx,"getTerrainClearMessage");function Yx(t,E){return E===$e.MISTY?D.t("terrain:mistyBlockMessage",{pokemonNameWithAffix:Z(t)}):D.t("terrain:defaultBlockMessage",{pokemonNameWithAffix:Z(t),terrainName:Bx(E)})}r(Yx,"getTerrainBlockMessage");function Wx(t){var I;let E=[];const R=t.getTimeOfDay()<2;switch(t.biomeType){case n.GRASS:E=[{weatherType:X.NONE,weight:7}],R&&E.push({weatherType:X.SUNNY,weight:3});break;case n.TALL_GRASS:E=[{weatherType:X.NONE,weight:8},{weatherType:X.RAIN,weight:5}],R&&E.push({weatherType:X.SUNNY,weight:8});break;case n.FOREST:E=[{weatherType:X.NONE,weight:8},{weatherType:X.RAIN,weight:5}];break;case n.SEA:E=[{weatherType:X.NONE,weight:3},{weatherType:X.RAIN,weight:12}];break;case n.SWAMP:E=[{weatherType:X.NONE,weight:3},{weatherType:X.RAIN,weight:4},{weatherType:X.FOG,weight:1}];break;case n.BEACH:E=[{weatherType:X.NONE,weight:8},{weatherType:X.RAIN,weight:3}],R&&E.push({weatherType:X.SUNNY,weight:5});break;case n.LAKE:E=[{weatherType:X.NONE,weight:10},{weatherType:X.RAIN,weight:5},{weatherType:X.FOG,weight:1}];break;case n.SEABED:E=[{weatherType:X.RAIN,weight:1}];break;case n.BADLANDS:E=[{weatherType:X.NONE,weight:8},{weatherType:X.SANDSTORM,weight:2}],R&&E.push({weatherType:X.SUNNY,weight:5});break;case n.DESERT:E=[{weatherType:X.SANDSTORM,weight:2}],R&&E.push({weatherType:X.SUNNY,weight:2});break;case n.ICE_CAVE:E=[{weatherType:X.NONE,weight:3},{weatherType:X.SNOW,weight:4},{weatherType:X.HAIL,weight:1}];break;case n.MEADOW:E=[{weatherType:X.NONE,weight:2}],R&&E.push({weatherType:X.SUNNY,weight:2});break;case n.VOLCANO:E=[{weatherType:R?X.SUNNY:X.NONE,weight:1}];break;case n.GRAVEYARD:E=[{weatherType:X.NONE,weight:3},{weatherType:X.FOG,weight:1}];break;case n.JUNGLE:E=[{weatherType:X.NONE,weight:8},{weatherType:X.RAIN,weight:2}];break;case n.SNOWY_FOREST:E=[{weatherType:X.SNOW,weight:7},{weatherType:X.HAIL,weight:1}];break;case n.ISLAND:E=[{weatherType:X.NONE,weight:5},{weatherType:X.RAIN,weight:1}],R&&E.push({weatherType:X.SUNNY,weight:2});break}if(t.biomeType===n.TOWN&&vE.isEventActive()&&((I=vE.getWeather())==null||I.map(N=>E.push(N))),E.length>1){let N=0;for(const i of E)N+=i.weight;const S=De(N);let T=0;for(const i of E)if(T+=i.weight,S<T)return i.weatherType}return E.length?E[0].weatherType:X.NONE}r(Wx,"getRandomWeatherType");const wh=class wh{constructor(E){const R=E instanceof W1?E:null;this.biome=R?R.biomeType:E.biome,this.weather=R?R.weather:E.weather?new ya(E.weather.weatherType,E.weather.turnsLeft):null,this.terrain=R?R.terrain:E.terrain?new eC(E.terrain.terrainType,E.terrain.turnsLeft):null,this.playerTerasUsed=(R?R.playerTerasUsed:E.playerTerasUsed)??0,this.tags=[],E.tags&&(this.tags=E.tags.map(I=>Y9(I)))}};r(wh,"ArenaData");let wa=wh;const Vh=class Vh{constructor(E){const R=E instanceof FR?E:null;this.trainerType=R?R.config.trainerType:E.trainerType,this.variant=E.hasOwnProperty("variant")?E.variant:E.female?xA.FEMALE:xA.DEFAULT,this.partyTemplateIndex=E.partyMemberTemplateIndex,this.nameKey=E.nameKey,this.partnerNameKey=E.partnerNameKey}toTrainer(){return new FR(this.trainerType,this.variant,this.partyTemplateIndex,this.nameKey,this.partnerNameKey)}};r(Vh,"TrainerData");let Va=Vh;var aG=(t=>(t[t.NONE=0]="NONE",t.LINEAR="Linear",t.QUADRATIC="Quad",t.CUBIC="Cubic",t.QUARTIC="Quart",t.QUINTIC="Quint",t.SINUSOIDAL="Sine",t.EXPONENTIAL="Expo",t.CIRCULAR="Circ",t.ELASTIC="Elastic",t.BACK="Back",t.BOUNCE="Bounce",t.STEPPED="Stepped",t))(aG||{});const aT=new Array(11).fill(null).map((t,E)=>E?{value:(E*10).toString(),label:(E*10).toString()}:{value:"Mute",label:D.t("settings:mute")}),mx=new Array(9).fill(null).map((t,E)=>{const R=((E+1)*10).toString();return{value:R,label:R}}),hR=[{value:"Off",label:D.t("settings:off")},{value:"On",label:D.t("settings:on")}],gx=[{value:"Auto",label:D.t("settings:auto")},{value:"Disabled",label:D.t("settings:disabled")}],px=[{value:"Auto",label:D.t("settings:auto")},{value:"Disabled",label:D.t("settings:disabled"),needConfirmation:!0,confirmationMessage:D.t("settings:confirmDisableTouch")}],pv=[{value:"Rewards",label:D.t("settings:rewards")},{value:"Shop",label:D.t("settings:shop")},{value:"Reroll",label:D.t("settings:reroll")},{value:"Check Team",label:D.t("settings:checkTeam")}],yx=pv.map(t=>{switch(t.value){case"Rewards":return GL.REWARDS;case"Shop":return GL.SHOP;case"Reroll":return GL.REROLL;case"Check Team":return GL.CHECK_TEAM;default:throw new Error(`Unknown value: ${t.value}`)}});var wx=(t=>(t[t.GENERAL=0]="GENERAL",t[t.DISPLAY=1]="DISPLAY",t[t.AUDIO=2]="AUDIO",t))(wx||{});const Xe={Game_Speed:"GAME_SPEED",HP_Bar_Speed:"HP_BAR_SPEED",EXP_Gains_Speed:"EXP_GAINS_SPEED",EXP_Party_Display:"EXP_PARTY_DISPLAY",Skip_Seen_Dialogues:"SKIP_SEEN_DIALOGUES",Egg_Skip:"EGG_SKIP",Battle_Style:"BATTLE_STYLE",Enable_Retries:"ENABLE_RETRIES",Hide_IVs:"HIDE_IVS",Tutorials:"TUTORIALS",Touch_Controls:"TOUCH_CONTROLS",Vibration:"VIBRATION",Language:"LANGUAGE",UI_Theme:"UI_THEME",Window_Type:"WINDOW_TYPE",Money_Format:"MONEY_FORMAT",Damage_Numbers:"DAMAGE_NUMBERS",Move_Animations:"MOVE_ANIMATIONS",Show_Stats_on_Level_Up:"SHOW_LEVEL_UP_STATS",Shop_Cursor_Target:"SHOP_CURSOR_TARGET",Command_Cursor_Memory:"COMMAND_CURSOR_MEMORY",Dex_For_Devs:"DEX_FOR_DEVS",Candy_Upgrade_Notification:"CANDY_UPGRADE_NOTIFICATION",Candy_Upgrade_Display:"CANDY_UPGRADE_DISPLAY",Move_Info:"MOVE_INFO",Show_Moveset_Flyout:"SHOW_MOVESET_FLYOUT",Show_Arena_Flyout:"SHOW_ARENA_FLYOUT",Show_Time_Of_Day_Widget:"SHOW_TIME_OF_DAY_WIDGET",Time_Of_Day_Animation:"TIME_OF_DAY_ANIMATION",Sprite_Set:"SPRITE_SET",Fusion_Palette_Swaps:"FUSION_PALETTE_SWAPS",Player_Gender:"PLAYER_GENDER",Type_Hints:"TYPE_HINTS",Master_Volume:"MASTER_VOLUME",BGM_Volume:"BGM_VOLUME",Field_Volume:"FIELD_VOLUME",SE_Volume:"SE_VOLUME",UI_Volume:"UI_SOUND_EFFECTS",Battle_Music:"BATTLE_MUSIC",Show_BGM_Bar:"SHOW_BGM_BAR",Move_Touch_Controls:"MOVE_TOUCH_CONTROLS",Shop_Overlay_Opacity:"SHOP_OVERLAY_OPACITY"};var FT=(t=>(t[t.GENFIVE=0]="GENFIVE",t[t.ALLGENS=1]="ALLGENS",t))(FT||{});const aE=[{key:Xe.Game_Speed,label:D.t("settings:gameSpeed"),options:[{value:"1",label:"1x"},{value:"1.25",label:"1.25x"},{value:"1.5",label:"1.5x"},{value:"2",label:"2x"},{value:"2.5",label:"2.5x"},{value:"3",label:"3x"},{value:"4",label:"4x"},{value:"5",label:"5x"}],default:3,type:0},{key:Xe.HP_Bar_Speed,label:D.t("settings:hpBarSpeed"),options:[{value:"Normal",label:D.t("settings:normal")},{value:"Fast",label:D.t("settings:fast")},{value:"Faster",label:D.t("settings:faster")},{value:"Skip",label:D.t("settings:skip")}],default:0,type:0},{key:Xe.EXP_Gains_Speed,label:D.t("settings:expGainsSpeed"),options:[{value:"Normal",label:D.t("settings:normal")},{value:"Fast",label:D.t("settings:fast")},{value:"Faster",label:D.t("settings:faster")},{value:"Skip",label:D.t("settings:skip")}],default:0,type:0},{key:Xe.EXP_Party_Display,label:D.t("settings:expPartyDisplay"),options:[{value:"Normal",label:D.t("settings:normal")},{value:"Level Up Notification",label:D.t("settings:levelUpNotifications")},{value:"Skip",label:D.t("settings:skip")}],default:0,type:0},{key:Xe.Skip_Seen_Dialogues,label:D.t("settings:skipSeenDialogues"),options:hR,default:0,type:0},{key:Xe.Egg_Skip,label:D.t("settings:eggSkip"),options:[{value:"Never",label:D.t("settings:never")},{value:"Ask",label:D.t("settings:ask")},{value:"Always",label:D.t("settings:always")}],default:1,type:0},{key:Xe.Battle_Style,label:D.t("settings:battleStyle"),options:[{value:"Switch",label:D.t("settings:switch")},{value:"Set",label:D.t("settings:set")}],default:0,type:0},{key:Xe.Command_Cursor_Memory,label:D.t("settings:commandCursorMemory"),options:hR,default:0,type:0},{key:Xe.Enable_Retries,label:D.t("settings:enableRetries"),options:hR,default:0,type:0},{key:Xe.Hide_IVs,label:D.t("settings:hideIvs"),options:hR,default:0,type:0},{key:Xe.Tutorials,label:D.t("settings:tutorials"),options:hR,default:1,type:0},{key:Xe.Vibration,label:D.t("settings:vibrations"),options:gx,default:0,type:0},{key:Xe.Touch_Controls,label:D.t("settings:touchControls"),options:px,default:0,type:0,isHidden:r(()=>!Go(),"isHidden")},{key:Xe.Move_Touch_Controls,label:D.t("settings:moveTouchControls"),options:[{value:"Configure",label:D.t("settings:change")}],default:0,type:0,activatable:!0,isHidden:r(()=>!Go(),"isHidden")},{key:Xe.Language,label:D.t("settings:language"),options:[{value:"English",label:"English"},{value:"Change",label:D.t("settings:change")}],default:0,type:1,requireReload:!0},{key:Xe.UI_Theme,label:D.t("settings:uiTheme"),options:[{value:"Default",label:D.t("settings:default")},{value:"Legacy",label:D.t("settings:legacy")}],default:0,type:1,requireReload:!0},{key:Xe.Window_Type,label:D.t("settings:windowType"),options:new Array(5).fill(null).map((t,E)=>{const R=(E+1).toString();return{value:R,label:R}}),default:0,type:1},{key:Xe.Money_Format,label:D.t("settings:moneyFormat"),options:[{value:"Normal",label:D.t("settings:normal")},{value:"Abbreviated",label:D.t("settings:abbreviated")}],default:0,type:1},{key:Xe.Damage_Numbers,label:D.t("settings:damageNumbers"),options:[{value:"Off",label:D.t("settings:off")},{value:"Simple",label:D.t("settings:simple")},{value:"Fancy",label:D.t("settings:fancy")}],default:0,type:1},{key:Xe.Move_Animations,label:D.t("settings:moveAnimations"),options:hR,default:1,type:1},{key:Xe.Show_Stats_on_Level_Up,label:D.t("settings:showStatsOnLevelUp"),options:hR,default:1,type:1},{key:Xe.Candy_Upgrade_Notification,label:D.t("settings:candyUpgradeNotification"),options:[{value:"Off",label:D.t("settings:off")},{value:"Passives Only",label:D.t("settings:passivesOnly")},{value:"On",label:D.t("settings:on")}],default:0,type:1},{key:Xe.Candy_Upgrade_Display,label:D.t("settings:candyUpgradeDisplay"),options:[{value:"Icon",label:D.t("settings:icon")},{value:"Animation",label:D.t("settings:animation")}],default:0,type:1,requireReload:!0},{key:Xe.Move_Info,label:D.t("settings:moveInfo"),options:hR,default:1,type:1},{key:Xe.Show_Moveset_Flyout,label:D.t("settings:showMovesetFlyout"),options:hR,default:1,type:1},{key:Xe.Show_Arena_Flyout,label:D.t("settings:showArenaFlyout"),options:hR,default:1,type:1},{key:Xe.Show_Time_Of_Day_Widget,label:D.t("settings:showTimeOfDayWidget"),options:hR,default:1,type:1,requireReload:!0},{key:Xe.Time_Of_Day_Animation,label:D.t("settings:timeOfDayAnimation"),options:[{value:"Bounce",label:D.t("settings:bounce")},{value:"Back",label:D.t("settings:timeOfDay_back")}],default:0,type:1},{key:Xe.Sprite_Set,label:D.t("settings:spriteSet"),options:[{value:"Consistent",label:D.t("settings:consistent")},{value:"Experimental",label:D.t("settings:experimental")}],default:0,type:1,requireReload:!0},{key:Xe.Fusion_Palette_Swaps,label:D.t("settings:fusionPaletteSwaps"),options:hR,default:1,type:1},{key:Xe.Player_Gender,label:D.t("settings:playerGender"),options:[{value:"Boy",label:D.t("settings:boy")},{value:"Girl",label:D.t("settings:girl")}],default:0,type:1},{key:Xe.Type_Hints,label:D.t("settings:typeHints"),options:hR,default:0,type:1},{key:Xe.Show_BGM_Bar,label:D.t("settings:showBgmBar"),options:hR,default:1,type:1},{key:Xe.Master_Volume,label:D.t("settings:masterVolume"),options:aT,default:5,type:2},{key:Xe.BGM_Volume,label:D.t("settings:bgmVolume"),options:aT,default:10,type:2},{key:Xe.Field_Volume,label:D.t("settings:fieldVolume"),options:aT,default:10,type:2},{key:Xe.SE_Volume,label:D.t("settings:seVolume"),options:aT,default:10,type:2},{key:Xe.UI_Volume,label:D.t("settings:uiVolume"),options:aT,default:10,type:2},{key:Xe.Battle_Music,label:D.t("settings:battleMusic"),options:[{value:"Gen V",label:D.t("settings:musicGenFive")},{value:"All Gens",label:D.t("settings:musicAllGens")}],default:1,type:2,requireReload:!0},{key:Xe.Shop_Cursor_Target,label:D.t("settings:shopCursorTarget"),options:pv,default:0,type:1},{key:Xe.Shop_Overlay_Opacity,label:D.t("settings:shopOverlayOpacity"),options:mx,default:7,type:1,requireReload:!1}];DM&&aE.push({key:Xe.Dex_For_Devs,label:D.t("settings:dexForDevs"),options:hR,default:0,type:0});function Vx(t){return aE.findIndex(E=>E.key===t)}r(Vx,"settingIndex");function vx(){for(const t of aE)rG(t.key,t.default)}r(vx,"resetSettings");function rG(t,E){const R=Vx(t);if(R===-1)return!1;switch(aE[R].key){case Xe.Game_Speed:s.gameSpeed=Number.parseFloat(aE[R].options[E].value.replace("x",""));break;case Xe.Master_Volume:s.masterVolume=E?Number.parseInt(aE[R].options[E].value)*.01:0,s.updateSoundVolume();break;case Xe.BGM_Volume:s.bgmVolume=E?Number.parseInt(aE[R].options[E].value)*.01:0,s.updateSoundVolume();break;case Xe.Field_Volume:s.fieldVolume=E?Number.parseInt(aE[R].options[E].value)*.01:0,s.updateSoundVolume();break;case Xe.SE_Volume:s.seVolume=E?Number.parseInt(aE[R].options[E].value)*.01:0,s.updateSoundVolume();break;case Xe.UI_Volume:s.uiVolume=E?Number.parseInt(aE[R].options[E].value)*.01:0;break;case Xe.Battle_Music:s.musicPreference=E;break;case Xe.Damage_Numbers:s.damageNumbersMode=E;break;case Xe.UI_Theme:s.uiTheme=E;break;case Xe.Window_Type:S8(Number.parseInt(aE[R].options[E].value));break;case Xe.Tutorials:s.enableTutorials=aE[R].options[E].value==="On";break;case Xe.Move_Info:s.enableMoveInfo=aE[R].options[E].value==="On";break;case Xe.Enable_Retries:s.enableRetries=aE[R].options[E].value==="On";break;case Xe.Hide_IVs:s.hideIvs=aE[R].options[E].value==="On";break;case Xe.Skip_Seen_Dialogues:s.skipSeenDialogues=aE[R].options[E].value==="On";break;case Xe.Egg_Skip:s.eggSkipPreference=E;break;case Xe.Battle_Style:s.battleStyle=E;break;case Xe.Show_BGM_Bar:s.showBgmBar=aE[R].options[E].value==="On";break;case Xe.Candy_Upgrade_Notification:if(s.candyUpgradeNotification===E)break;s.candyUpgradeNotification=E,s.eventTarget.dispatchEvent(new oP(E));break;case Xe.Candy_Upgrade_Display:s.candyUpgradeDisplay=E;break;case Xe.Money_Format:switch(aE[R].options[E].value){case"Normal":s.moneyFormat=Jw.NORMAL;break;case"Abbreviated":s.moneyFormat=Jw.ABBREVIATED;break}s.updateMoneyText(!1);break;case Xe.Sprite_Set:s.experimentalSprites=!!E,E&&s.initExpSprites();break;case Xe.Move_Animations:s.moveAnimations=aE[R].options[E].value==="On";break;case Xe.Show_Moveset_Flyout:s.showMovesetFlyout=aE[R].options[E].value==="On";break;case Xe.Show_Arena_Flyout:s.showArenaFlyout=aE[R].options[E].value==="On";break;case Xe.Show_Time_Of_Day_Widget:s.showTimeOfDayWidget=aE[R].options[E].value==="On";break;case Xe.Time_Of_Day_Animation:s.timeOfDayAnimation=aE[R].options[E].value==="Bounce"?aG.BOUNCE:aG.BACK;break;case Xe.Show_Stats_on_Level_Up:s.showLevelUpStats=aE[R].options[E].value==="On";break;case Xe.Shop_Cursor_Target:{const I=yx[E];s.shopCursorTarget=I;break}case Xe.Command_Cursor_Memory:s.commandCursorMemory=aE[R].options[E].value==="On";break;case Xe.Dex_For_Devs:s.dexForDevs=aE[R].options[E].value==="On";break;case Xe.EXP_Gains_Speed:s.expGainsSpeed=E;break;case Xe.EXP_Party_Display:s.expParty=E;break;case Xe.HP_Bar_Speed:s.hpBarSpeed=E;break;case Xe.Fusion_Palette_Swaps:s.fusionPaletteSwaps=!!E;break;case Xe.Player_Gender:if(s.gameData){const I=aE[R].options[E].value==="Girl";s.gameData.gender=I?YA.FEMALE:YA.MALE,s.trainer.setTexture(s.trainer.texture.key.replace(I?"m":"f",I?"f":"m"))}else return!1;break;case Xe.Touch_Controls:{s.enableTouchControls=aE[R].options[E].value!=="Disabled"&&Go();const I=document.getElementById("touchControls");I&&I.classList.toggle("visible",s.enableTouchControls);break}case Xe.Vibration:s.enableVibration=aE[R].options[E].value!=="Disabled"&&Go();break;case Xe.Type_Hints:s.typeHints=aE[R].options[E].value==="On";break;case Xe.Language:if(E&&s.ui){const I=r(()=>{s.ui.revertMode(),s.ui.getHandler().setOptionCursor(-1,0,!0)},"cancelHandler"),N=r(S=>{try{return D.changeLanguage(S),localStorage.setItem("prLang",S),I(),window.location.reload(),!0}catch(T){return console.error("Error changing locale:",T),!1}},"changeLocaleHandler");return s.ui.setOverlayMode(Ce.OPTION_SELECT,{options:[{label:"English",handler:r(()=>N("en"),"handler")},{label:"Español (ES)",handler:r(()=>N("es-ES"),"handler")},{label:"Español (LATAM)",handler:r(()=>N("es-MX"),"handler")},{label:"Italiano",handler:r(()=>N("it"),"handler")},{label:"Français",handler:r(()=>N("fr"),"handler")},{label:"Deutsch",handler:r(()=>N("de"),"handler")},{label:"Português (BR)",handler:r(()=>N("pt-BR"),"handler")},{label:"简体中文",handler:r(()=>N("zh-CN"),"handler")},{label:"繁體中文",handler:r(()=>N("zh-TW"),"handler")},{label:"한국어",handler:r(()=>N("ko"),"handler")},{label:"日本語",handler:r(()=>N("ja"),"handler")},{label:"Català",handler:r(()=>N("ca-ES"),"handler")},{label:D.t("settings:back"),handler:r(()=>I(),"handler")}],maxOptions:7}),!1}break;case Xe.Shop_Overlay_Opacity:s.updateShopOverlayOpacity(Number.parseInt(aE[R].options[E].value)*.01);break}return!0}r(rG,"setSetting");var ot=(t=>(t[t.GACHA_MOVE=0]="GACHA_MOVE",t[t.GACHA_LEGENDARY=1]="GACHA_LEGENDARY",t[t.GACHA_SHINY=2]="GACHA_SHINY",t[t.SAME_SPECIES_EGG=3]="SAME_SPECIES_EGG",t[t.EVENT=4]="EVENT",t))(ot||{});const CV=64,pM=256,xx=52,bx=8,Zx=1,lV=1,kx=412,Xx=59,Qx=9,Jx=10,$x=25,qx=50,zx=100,jx=50,e7=128,A7=64,E7=12,t7=8,UV=8,R7=192,O7=6,I7=3,L7=3,yv=4,wv=1,YT={[e.BULBASAUR]:K.COMMON,[e.CHARMANDER]:K.COMMON,[e.SQUIRTLE]:K.COMMON,[e.CATERPIE]:K.COMMON,[e.WEEDLE]:K.COMMON,[e.PIDGEY]:K.COMMON,[e.RATTATA]:K.COMMON,[e.SPEAROW]:K.COMMON,[e.EKANS]:K.COMMON,[e.SANDSHREW]:K.COMMON,[e.NIDORAN_F]:K.COMMON,[e.NIDORAN_M]:K.COMMON,[e.VULPIX]:K.COMMON,[e.ZUBAT]:K.COMMON,[e.ODDISH]:K.COMMON,[e.PARAS]:K.COMMON,[e.VENONAT]:K.COMMON,[e.DIGLETT]:K.COMMON,[e.MEOWTH]:K.COMMON,[e.PSYDUCK]:K.COMMON,[e.MANKEY]:K.RARE,[e.GROWLITHE]:K.RARE,[e.POLIWAG]:K.COMMON,[e.ABRA]:K.RARE,[e.MACHOP]:K.COMMON,[e.BELLSPROUT]:K.COMMON,[e.TENTACOOL]:K.COMMON,[e.GEODUDE]:K.COMMON,[e.PONYTA]:K.COMMON,[e.SLOWPOKE]:K.COMMON,[e.MAGNEMITE]:K.RARE,[e.FARFETCHD]:K.RARE,[e.DODUO]:K.COMMON,[e.SEEL]:K.COMMON,[e.GRIMER]:K.COMMON,[e.SHELLDER]:K.RARE,[e.GASTLY]:K.RARE,[e.ONIX]:K.COMMON,[e.DROWZEE]:K.COMMON,[e.KRABBY]:K.COMMON,[e.VOLTORB]:K.COMMON,[e.EXEGGCUTE]:K.COMMON,[e.CUBONE]:K.COMMON,[e.LICKITUNG]:K.RARE,[e.KOFFING]:K.COMMON,[e.RHYHORN]:K.RARE,[e.TANGELA]:K.COMMON,[e.KANGASKHAN]:K.RARE,[e.HORSEA]:K.COMMON,[e.GOLDEEN]:K.COMMON,[e.STARYU]:K.COMMON,[e.SCYTHER]:K.RARE,[e.PINSIR]:K.RARE,[e.TAUROS]:K.RARE,[e.MAGIKARP]:K.COMMON,[e.LAPRAS]:K.RARE,[e.DITTO]:K.COMMON,[e.EEVEE]:K.COMMON,[e.PORYGON]:K.RARE,[e.OMANYTE]:K.RARE,[e.KABUTO]:K.RARE,[e.AERODACTYL]:K.RARE,[e.ARTICUNO]:K.EPIC,[e.ZAPDOS]:K.EPIC,[e.MOLTRES]:K.EPIC,[e.DRATINI]:K.RARE,[e.MEWTWO]:K.LEGENDARY,[e.MEW]:K.EPIC,[e.CHIKORITA]:K.COMMON,[e.CYNDAQUIL]:K.COMMON,[e.TOTODILE]:K.COMMON,[e.SENTRET]:K.COMMON,[e.HOOTHOOT]:K.COMMON,[e.LEDYBA]:K.COMMON,[e.SPINARAK]:K.COMMON,[e.CHINCHOU]:K.COMMON,[e.PICHU]:K.RARE,[e.CLEFFA]:K.COMMON,[e.IGGLYBUFF]:K.COMMON,[e.TOGEPI]:K.COMMON,[e.NATU]:K.COMMON,[e.MAREEP]:K.COMMON,[e.HOPPIP]:K.COMMON,[e.AIPOM]:K.COMMON,[e.SUNKERN]:K.COMMON,[e.YANMA]:K.COMMON,[e.WOOPER]:K.COMMON,[e.MURKROW]:K.COMMON,[e.MISDREAVUS]:K.COMMON,[e.UNOWN]:K.COMMON,[e.GIRAFARIG]:K.COMMON,[e.PINECO]:K.COMMON,[e.DUNSPARCE]:K.COMMON,[e.GLIGAR]:K.COMMON,[e.SNUBBULL]:K.COMMON,[e.QWILFISH]:K.COMMON,[e.SHUCKLE]:K.COMMON,[e.HERACROSS]:K.RARE,[e.SNEASEL]:K.RARE,[e.TEDDIURSA]:K.RARE,[e.SLUGMA]:K.COMMON,[e.SWINUB]:K.COMMON,[e.CORSOLA]:K.COMMON,[e.REMORAID]:K.COMMON,[e.DELIBIRD]:K.COMMON,[e.SKARMORY]:K.RARE,[e.HOUNDOUR]:K.COMMON,[e.PHANPY]:K.COMMON,[e.STANTLER]:K.COMMON,[e.SMEARGLE]:K.COMMON,[e.TYROGUE]:K.COMMON,[e.SMOOCHUM]:K.COMMON,[e.ELEKID]:K.COMMON,[e.MAGBY]:K.COMMON,[e.MILTANK]:K.RARE,[e.RAIKOU]:K.EPIC,[e.ENTEI]:K.EPIC,[e.SUICUNE]:K.EPIC,[e.LARVITAR]:K.RARE,[e.LUGIA]:K.LEGENDARY,[e.HO_OH]:K.LEGENDARY,[e.CELEBI]:K.EPIC,[e.TREECKO]:K.COMMON,[e.TORCHIC]:K.COMMON,[e.MUDKIP]:K.COMMON,[e.POOCHYENA]:K.COMMON,[e.ZIGZAGOON]:K.COMMON,[e.WURMPLE]:K.COMMON,[e.LOTAD]:K.COMMON,[e.SEEDOT]:K.COMMON,[e.TAILLOW]:K.COMMON,[e.WINGULL]:K.COMMON,[e.RALTS]:K.RARE,[e.SURSKIT]:K.COMMON,[e.SHROOMISH]:K.COMMON,[e.SLAKOTH]:K.RARE,[e.NINCADA]:K.RARE,[e.WHISMUR]:K.COMMON,[e.MAKUHITA]:K.COMMON,[e.AZURILL]:K.COMMON,[e.NOSEPASS]:K.COMMON,[e.SKITTY]:K.COMMON,[e.SABLEYE]:K.COMMON,[e.MAWILE]:K.COMMON,[e.ARON]:K.COMMON,[e.MEDITITE]:K.COMMON,[e.ELECTRIKE]:K.COMMON,[e.PLUSLE]:K.COMMON,[e.MINUN]:K.COMMON,[e.VOLBEAT]:K.COMMON,[e.ILLUMISE]:K.COMMON,[e.GULPIN]:K.COMMON,[e.CARVANHA]:K.COMMON,[e.WAILMER]:K.COMMON,[e.NUMEL]:K.COMMON,[e.TORKOAL]:K.COMMON,[e.SPOINK]:K.COMMON,[e.SPINDA]:K.COMMON,[e.TRAPINCH]:K.COMMON,[e.CACNEA]:K.COMMON,[e.SWABLU]:K.COMMON,[e.ZANGOOSE]:K.RARE,[e.SEVIPER]:K.RARE,[e.LUNATONE]:K.COMMON,[e.SOLROCK]:K.COMMON,[e.BARBOACH]:K.COMMON,[e.CORPHISH]:K.COMMON,[e.BALTOY]:K.COMMON,[e.LILEEP]:K.RARE,[e.ANORITH]:K.RARE,[e.FEEBAS]:K.RARE,[e.CASTFORM]:K.COMMON,[e.KECLEON]:K.COMMON,[e.SHUPPET]:K.COMMON,[e.DUSKULL]:K.COMMON,[e.TROPIUS]:K.COMMON,[e.ABSOL]:K.RARE,[e.WYNAUT]:K.COMMON,[e.SNORUNT]:K.COMMON,[e.SPHEAL]:K.COMMON,[e.CLAMPERL]:K.COMMON,[e.RELICANTH]:K.RARE,[e.LUVDISC]:K.COMMON,[e.BAGON]:K.RARE,[e.BELDUM]:K.RARE,[e.REGIROCK]:K.EPIC,[e.REGICE]:K.EPIC,[e.REGISTEEL]:K.EPIC,[e.LATIAS]:K.EPIC,[e.LATIOS]:K.EPIC,[e.KYOGRE]:K.LEGENDARY,[e.GROUDON]:K.LEGENDARY,[e.RAYQUAZA]:K.LEGENDARY,[e.JIRACHI]:K.EPIC,[e.DEOXYS]:K.EPIC,[e.TURTWIG]:K.COMMON,[e.CHIMCHAR]:K.COMMON,[e.PIPLUP]:K.COMMON,[e.STARLY]:K.COMMON,[e.BIDOOF]:K.COMMON,[e.KRICKETOT]:K.COMMON,[e.SHINX]:K.COMMON,[e.BUDEW]:K.COMMON,[e.CRANIDOS]:K.RARE,[e.SHIELDON]:K.RARE,[e.BURMY]:K.COMMON,[e.COMBEE]:K.COMMON,[e.PACHIRISU]:K.COMMON,[e.BUIZEL]:K.COMMON,[e.CHERUBI]:K.COMMON,[e.SHELLOS]:K.COMMON,[e.DRIFLOON]:K.COMMON,[e.BUNEARY]:K.COMMON,[e.GLAMEOW]:K.COMMON,[e.CHINGLING]:K.COMMON,[e.STUNKY]:K.COMMON,[e.BRONZOR]:K.COMMON,[e.BONSLY]:K.COMMON,[e.MIME_JR]:K.COMMON,[e.HAPPINY]:K.RARE,[e.CHATOT]:K.COMMON,[e.SPIRITOMB]:K.RARE,[e.GIBLE]:K.RARE,[e.MUNCHLAX]:K.RARE,[e.RIOLU]:K.RARE,[e.HIPPOPOTAS]:K.COMMON,[e.SKORUPI]:K.COMMON,[e.CROAGUNK]:K.COMMON,[e.CARNIVINE]:K.COMMON,[e.FINNEON]:K.COMMON,[e.MANTYKE]:K.COMMON,[e.SNOVER]:K.COMMON,[e.ROTOM]:K.RARE,[e.UXIE]:K.EPIC,[e.MESPRIT]:K.EPIC,[e.AZELF]:K.EPIC,[e.DIALGA]:K.LEGENDARY,[e.PALKIA]:K.LEGENDARY,[e.HEATRAN]:K.EPIC,[e.REGIGIGAS]:K.LEGENDARY,[e.GIRATINA]:K.LEGENDARY,[e.CRESSELIA]:K.EPIC,[e.PHIONE]:K.EPIC,[e.MANAPHY]:K.EPIC,[e.DARKRAI]:K.EPIC,[e.SHAYMIN]:K.EPIC,[e.ARCEUS]:K.LEGENDARY,[e.VICTINI]:K.EPIC,[e.SNIVY]:K.COMMON,[e.TEPIG]:K.COMMON,[e.OSHAWOTT]:K.COMMON,[e.PATRAT]:K.COMMON,[e.LILLIPUP]:K.COMMON,[e.PURRLOIN]:K.COMMON,[e.PANSAGE]:K.COMMON,[e.PANSEAR]:K.COMMON,[e.PANPOUR]:K.COMMON,[e.MUNNA]:K.COMMON,[e.PIDOVE]:K.COMMON,[e.BLITZLE]:K.COMMON,[e.ROGGENROLA]:K.COMMON,[e.WOOBAT]:K.COMMON,[e.DRILBUR]:K.RARE,[e.AUDINO]:K.RARE,[e.TIMBURR]:K.RARE,[e.TYMPOLE]:K.COMMON,[e.THROH]:K.RARE,[e.SAWK]:K.RARE,[e.SEWADDLE]:K.COMMON,[e.VENIPEDE]:K.COMMON,[e.COTTONEE]:K.COMMON,[e.PETILIL]:K.COMMON,[e.BASCULIN]:K.RARE,[e.SANDILE]:K.RARE,[e.DARUMAKA]:K.RARE,[e.MARACTUS]:K.COMMON,[e.DWEBBLE]:K.COMMON,[e.SCRAGGY]:K.COMMON,[e.SIGILYPH]:K.RARE,[e.YAMASK]:K.COMMON,[e.TIRTOUGA]:K.RARE,[e.ARCHEN]:K.RARE,[e.TRUBBISH]:K.COMMON,[e.ZORUA]:K.COMMON,[e.MINCCINO]:K.COMMON,[e.GOTHITA]:K.COMMON,[e.SOLOSIS]:K.COMMON,[e.DUCKLETT]:K.COMMON,[e.VANILLITE]:K.COMMON,[e.DEERLING]:K.COMMON,[e.EMOLGA]:K.COMMON,[e.KARRABLAST]:K.COMMON,[e.FOONGUS]:K.COMMON,[e.FRILLISH]:K.COMMON,[e.ALOMOMOLA]:K.RARE,[e.JOLTIK]:K.COMMON,[e.FERROSEED]:K.COMMON,[e.KLINK]:K.COMMON,[e.TYNAMO]:K.COMMON,[e.ELGYEM]:K.COMMON,[e.LITWICK]:K.COMMON,[e.AXEW]:K.RARE,[e.CUBCHOO]:K.COMMON,[e.CRYOGONAL]:K.RARE,[e.SHELMET]:K.COMMON,[e.STUNFISK]:K.COMMON,[e.MIENFOO]:K.COMMON,[e.DRUDDIGON]:K.RARE,[e.GOLETT]:K.COMMON,[e.PAWNIARD]:K.RARE,[e.BOUFFALANT]:K.RARE,[e.RUFFLET]:K.COMMON,[e.VULLABY]:K.COMMON,[e.HEATMOR]:K.RARE,[e.DURANT]:K.RARE,[e.DEINO]:K.RARE,[e.LARVESTA]:K.RARE,[e.COBALION]:K.EPIC,[e.TERRAKION]:K.EPIC,[e.VIRIZION]:K.EPIC,[e.TORNADUS]:K.EPIC,[e.THUNDURUS]:K.EPIC,[e.RESHIRAM]:K.LEGENDARY,[e.ZEKROM]:K.LEGENDARY,[e.LANDORUS]:K.EPIC,[e.KYUREM]:K.LEGENDARY,[e.KELDEO]:K.EPIC,[e.MELOETTA]:K.EPIC,[e.GENESECT]:K.EPIC,[e.CHESPIN]:K.COMMON,[e.FENNEKIN]:K.COMMON,[e.FROAKIE]:K.COMMON,[e.BUNNELBY]:K.COMMON,[e.FLETCHLING]:K.COMMON,[e.SCATTERBUG]:K.COMMON,[e.LITLEO]:K.COMMON,[e.FLABEBE]:K.COMMON,[e.SKIDDO]:K.COMMON,[e.PANCHAM]:K.COMMON,[e.FURFROU]:K.COMMON,[e.ESPURR]:K.COMMON,[e.HONEDGE]:K.RARE,[e.SPRITZEE]:K.COMMON,[e.SWIRLIX]:K.COMMON,[e.INKAY]:K.COMMON,[e.BINACLE]:K.COMMON,[e.SKRELP]:K.COMMON,[e.CLAUNCHER]:K.COMMON,[e.HELIOPTILE]:K.COMMON,[e.TYRUNT]:K.RARE,[e.AMAURA]:K.RARE,[e.HAWLUCHA]:K.RARE,[e.DEDENNE]:K.COMMON,[e.CARBINK]:K.COMMON,[e.GOOMY]:K.RARE,[e.KLEFKI]:K.COMMON,[e.PHANTUMP]:K.COMMON,[e.PUMPKABOO]:K.COMMON,[e.BERGMITE]:K.COMMON,[e.NOIBAT]:K.RARE,[e.XERNEAS]:K.LEGENDARY,[e.YVELTAL]:K.LEGENDARY,[e.ZYGARDE]:K.LEGENDARY,[e.DIANCIE]:K.EPIC,[e.HOOPA]:K.EPIC,[e.VOLCANION]:K.EPIC,[e.ETERNAL_FLOETTE]:K.EPIC,[e.ROWLET]:K.COMMON,[e.LITTEN]:K.COMMON,[e.POPPLIO]:K.COMMON,[e.PIKIPEK]:K.COMMON,[e.YUNGOOS]:K.COMMON,[e.GRUBBIN]:K.COMMON,[e.CRABRAWLER]:K.COMMON,[e.ORICORIO]:K.COMMON,[e.CUTIEFLY]:K.COMMON,[e.ROCKRUFF]:K.COMMON,[e.WISHIWASHI]:K.COMMON,[e.MAREANIE]:K.COMMON,[e.MUDBRAY]:K.COMMON,[e.DEWPIDER]:K.COMMON,[e.FOMANTIS]:K.COMMON,[e.MORELULL]:K.COMMON,[e.SALANDIT]:K.COMMON,[e.STUFFUL]:K.COMMON,[e.BOUNSWEET]:K.COMMON,[e.COMFEY]:K.RARE,[e.ORANGURU]:K.RARE,[e.PASSIMIAN]:K.RARE,[e.WIMPOD]:K.COMMON,[e.SANDYGAST]:K.COMMON,[e.PYUKUMUKU]:K.COMMON,[e.TYPE_NULL]:K.EPIC,[e.MINIOR]:K.RARE,[e.KOMALA]:K.COMMON,[e.TURTONATOR]:K.RARE,[e.TOGEDEMARU]:K.COMMON,[e.MIMIKYU]:K.RARE,[e.BRUXISH]:K.RARE,[e.DRAMPA]:K.RARE,[e.DHELMISE]:K.RARE,[e.JANGMO_O]:K.RARE,[e.TAPU_KOKO]:K.EPIC,[e.TAPU_LELE]:K.EPIC,[e.TAPU_BULU]:K.EPIC,[e.TAPU_FINI]:K.EPIC,[e.COSMOG]:K.LEGENDARY,[e.NIHILEGO]:K.EPIC,[e.BUZZWOLE]:K.EPIC,[e.PHEROMOSA]:K.EPIC,[e.XURKITREE]:K.EPIC,[e.CELESTEELA]:K.EPIC,[e.KARTANA]:K.EPIC,[e.GUZZLORD]:K.EPIC,[e.NECROZMA]:K.LEGENDARY,[e.MAGEARNA]:K.EPIC,[e.MARSHADOW]:K.EPIC,[e.POIPOLE]:K.EPIC,[e.STAKATAKA]:K.EPIC,[e.BLACEPHALON]:K.EPIC,[e.ZERAORA]:K.EPIC,[e.MELTAN]:K.EPIC,[e.ALOLA_RATTATA]:K.COMMON,[e.ALOLA_SANDSHREW]:K.RARE,[e.ALOLA_VULPIX]:K.RARE,[e.ALOLA_DIGLETT]:K.RARE,[e.ALOLA_MEOWTH]:K.RARE,[e.ALOLA_GEODUDE]:K.RARE,[e.ALOLA_GRIMER]:K.RARE,[e.GROOKEY]:K.COMMON,[e.SCORBUNNY]:K.COMMON,[e.SOBBLE]:K.COMMON,[e.SKWOVET]:K.COMMON,[e.ROOKIDEE]:K.COMMON,[e.BLIPBUG]:K.COMMON,[e.NICKIT]:K.COMMON,[e.GOSSIFLEUR]:K.COMMON,[e.WOOLOO]:K.COMMON,[e.CHEWTLE]:K.COMMON,[e.YAMPER]:K.COMMON,[e.ROLYCOLY]:K.COMMON,[e.APPLIN]:K.COMMON,[e.SILICOBRA]:K.COMMON,[e.CRAMORANT]:K.COMMON,[e.ARROKUDA]:K.COMMON,[e.TOXEL]:K.COMMON,[e.SIZZLIPEDE]:K.COMMON,[e.CLOBBOPUS]:K.COMMON,[e.SINISTEA]:K.COMMON,[e.HATENNA]:K.COMMON,[e.IMPIDIMP]:K.COMMON,[e.MILCERY]:K.COMMON,[e.FALINKS]:K.RARE,[e.PINCURCHIN]:K.COMMON,[e.SNOM]:K.COMMON,[e.STONJOURNER]:K.COMMON,[e.EISCUE]:K.COMMON,[e.INDEEDEE]:K.RARE,[e.MORPEKO]:K.COMMON,[e.CUFANT]:K.COMMON,[e.DRACOZOLT]:K.RARE,[e.ARCTOZOLT]:K.RARE,[e.DRACOVISH]:K.RARE,[e.ARCTOVISH]:K.RARE,[e.DURALUDON]:K.RARE,[e.DREEPY]:K.RARE,[e.ZACIAN]:K.LEGENDARY,[e.ZAMAZENTA]:K.LEGENDARY,[e.ETERNATUS]:K.LEGENDARY,[e.KUBFU]:K.EPIC,[e.ZARUDE]:K.EPIC,[e.REGIELEKI]:K.EPIC,[e.REGIDRAGO]:K.EPIC,[e.GLASTRIER]:K.EPIC,[e.SPECTRIER]:K.EPIC,[e.CALYREX]:K.LEGENDARY,[e.ENAMORUS]:K.EPIC,[e.GALAR_MEOWTH]:K.RARE,[e.GALAR_PONYTA]:K.RARE,[e.GALAR_SLOWPOKE]:K.RARE,[e.GALAR_FARFETCHD]:K.RARE,[e.GALAR_ARTICUNO]:K.EPIC,[e.GALAR_ZAPDOS]:K.EPIC,[e.GALAR_MOLTRES]:K.EPIC,[e.GALAR_CORSOLA]:K.RARE,[e.GALAR_ZIGZAGOON]:K.RARE,[e.GALAR_DARUMAKA]:K.RARE,[e.GALAR_YAMASK]:K.RARE,[e.GALAR_STUNFISK]:K.RARE,[e.HISUI_GROWLITHE]:K.RARE,[e.HISUI_VOLTORB]:K.RARE,[e.HISUI_QWILFISH]:K.RARE,[e.HISUI_SNEASEL]:K.RARE,[e.HISUI_ZORUA]:K.RARE,[e.SPRIGATITO]:K.COMMON,[e.FUECOCO]:K.COMMON,[e.QUAXLY]:K.COMMON,[e.LECHONK]:K.COMMON,[e.TAROUNTULA]:K.COMMON,[e.NYMBLE]:K.COMMON,[e.PAWMI]:K.COMMON,[e.TANDEMAUS]:K.RARE,[e.FIDOUGH]:K.COMMON,[e.SMOLIV]:K.COMMON,[e.SQUAWKABILLY]:K.COMMON,[e.NACLI]:K.RARE,[e.CHARCADET]:K.RARE,[e.TADBULB]:K.COMMON,[e.WATTREL]:K.COMMON,[e.MASCHIFF]:K.COMMON,[e.SHROODLE]:K.COMMON,[e.BRAMBLIN]:K.COMMON,[e.TOEDSCOOL]:K.COMMON,[e.KLAWF]:K.COMMON,[e.CAPSAKID]:K.COMMON,[e.RELLOR]:K.COMMON,[e.FLITTLE]:K.COMMON,[e.TINKATINK]:K.RARE,[e.WIGLETT]:K.COMMON,[e.BOMBIRDIER]:K.COMMON,[e.FINIZEN]:K.RARE,[e.VAROOM]:K.RARE,[e.CYCLIZAR]:K.RARE,[e.ORTHWORM]:K.RARE,[e.GLIMMET]:K.RARE,[e.GREAVARD]:K.COMMON,[e.FLAMIGO]:K.RARE,[e.CETODDLE]:K.COMMON,[e.VELUZA]:K.RARE,[e.DONDOZO]:K.RARE,[e.TATSUGIRI]:K.RARE,[e.GREAT_TUSK]:K.EPIC,[e.SCREAM_TAIL]:K.EPIC,[e.BRUTE_BONNET]:K.EPIC,[e.FLUTTER_MANE]:K.EPIC,[e.SLITHER_WING]:K.EPIC,[e.SANDY_SHOCKS]:K.EPIC,[e.IRON_TREADS]:K.EPIC,[e.IRON_BUNDLE]:K.EPIC,[e.IRON_HANDS]:K.EPIC,[e.IRON_JUGULIS]:K.EPIC,[e.IRON_MOTH]:K.EPIC,[e.IRON_THORNS]:K.EPIC,[e.FRIGIBAX]:K.RARE,[e.GIMMIGHOUL]:K.RARE,[e.WO_CHIEN]:K.EPIC,[e.CHIEN_PAO]:K.EPIC,[e.TING_LU]:K.EPIC,[e.CHI_YU]:K.EPIC,[e.ROARING_MOON]:K.EPIC,[e.IRON_VALIANT]:K.EPIC,[e.KORAIDON]:K.LEGENDARY,[e.MIRAIDON]:K.LEGENDARY,[e.WALKING_WAKE]:K.EPIC,[e.IRON_LEAVES]:K.EPIC,[e.POLTCHAGEIST]:K.RARE,[e.OKIDOGI]:K.EPIC,[e.MUNKIDORI]:K.EPIC,[e.FEZANDIPITI]:K.EPIC,[e.OGERPON]:K.EPIC,[e.GOUGING_FIRE]:K.EPIC,[e.RAGING_BOLT]:K.EPIC,[e.IRON_BOULDER]:K.EPIC,[e.IRON_CROWN]:K.EPIC,[e.TERAPAGOS]:K.LEGENDARY,[e.PECHARUNT]:K.EPIC,[e.PALDEA_TAUROS]:K.RARE,[e.PALDEA_WOOPER]:K.RARE,[e.BLOODMOON_URSALUNA]:K.EPIC},BN=1073741824,vh=class vh{get id(){return this._id}get tier(){return this._tier}get sourceType(){return this._sourceType}get hatchWaves(){return this._hatchWaves}set hatchWaves(E){this._hatchWaves=E}get timestamp(){return this._timestamp}get species(){return this._species}get isShiny(){return this._isShiny}get variantTier(){return this._variantTier}get eggMoveIndex(){return this._eggMoveIndex}get overrideHiddenAbility(){return this._overrideHiddenAbility}constructor(E){const R=r(N=>{this._sourceType=N==null?void 0:N.sourceType,this._tier=(N==null?void 0:N.tier)??Ze.EGG_TIER_OVERRIDE??this.rollEggTier(),N!=null&&N.pulled&&this.checkForPityTierOverrides(),this._id=(N==null?void 0:N.id)??oE(BN,BN*this._tier),this._sourceType=(N==null?void 0:N.sourceType)??void 0,this._hatchWaves=(N==null?void 0:N.hatchWaves)??this.getEggTierDefaultHatchWaves(),this._timestamp=(N==null?void 0:N.timestamp)??new Date().getTime(),this._isShiny=(N==null?void 0:N.isShiny)??(Ze.EGG_SHINY_OVERRIDE||this.rollShiny()),this._variantTier=(N==null?void 0:N.variantTier)??Ze.EGG_VARIANT_OVERRIDE??this.rollVariant(),this._species=(N==null?void 0:N.species)??this.rollSpecies(),this._overrideHiddenAbility=(N==null?void 0:N.overrideHiddenAbility)??!1,N!=null&&N.species&&(this._tier=this.getEggTier(),this._hatchWaves=N.hatchWaves??this.getEggTierDefaultHatchWaves()),this._species&&!de(this._species).hasVariants()&&(this._variantTier=yO.STANDARD),this._eggMoveIndex=(N==null?void 0:N.eggMoveIndex)??this.rollEggMoveIndex(),N!=null&&N.pulled&&(this.increasePullStatistic(),this.addEggToGameData())},"generateEggProperties"),I=y1(24);s.executeWithSeedOffset(()=>{R(E)},0,I),this._eggDescriptor=E==null?void 0:E.eggDescriptor}isManaphyEgg(){return this._species===e.PHIONE||this._species===e.MANAPHY||this._tier===K.COMMON&&!(this._id%204)&&!this._species}getKey(){return this.isManaphyEgg()?"manaphy":this._tier.toString()}generatePlayerPokemon(){let E;const R=r(()=>{this._species||(this._isShiny=this.rollShiny(),this._species=this.rollSpecies());let I=de(this._species);this._species===e.PHIONE&&this._sourceType===ot.SAME_SPECIES_EGG&&(I=de(De(UV)?e.PHIONE:e.MANAPHY));let N;const S=this._sourceType===ot.SAME_SPECIES_EGG&&!De(t7),T=this._sourceType!==ot.SAME_SPECIES_EGG&&!De(R7);I.abilityHidden&&(this._overrideHiddenAbility||S||T)&&(N=2),E=s.addPlayerPokemon(I,1,N,void 0,void 0,!1),E.shiny=this._isShiny,E.variant=this._variantTier;const i=ov(De(4294967295));for(let o=0;o<E.ivs.length;o++)E.ivs[o]=Math.max(E.ivs[o],i[o])},"generatePlayerPokemonHelper");return E=E,s.executeWithSeedOffset(()=>{R()},this._id,BN.toString()),E}addEggToGameData(){s.gameData.eggs.push(this)}getEggDescriptor(){if(this.isManaphyEgg())return"Manaphy";switch(this.tier){case K.RARE:return D.t("egg:greatTier");case K.EPIC:return D.t("egg:ultraTier");case K.LEGENDARY:return D.t("egg:masterTier");default:return D.t("egg:defaultTier")}}getEggHatchWavesMessage(){return this.hatchWaves<=5?D.t("egg:hatchWavesMessageSoon"):this.hatchWaves<=15?D.t("egg:hatchWavesMessageClose"):this.hatchWaves<=50?D.t("egg:hatchWavesMessageNotClose"):D.t("egg:hatchWavesMessageLongTime")}getEggTypeDescriptor(){switch(this.sourceType){case ot.SAME_SPECIES_EGG:return this._eggDescriptor??D.t("egg:sameSpeciesEgg",{species:de(this._species).getName()});case ot.GACHA_LEGENDARY:return this._eggDescriptor??`${D.t("egg:gachaTypeLegendary")} (${de(DV(this.timestamp)).getName()})`;case ot.GACHA_SHINY:return this._eggDescriptor??D.t("egg:gachaTypeShiny");case ot.GACHA_MOVE:return this._eggDescriptor??D.t("egg:gachaTypeMove");case ot.EVENT:return this._eggDescriptor??D.t("egg:eventType");default:return console.warn("getEggTypeDescriptor case not defined. Returning default empty string"),""}}rollEggMoveIndex(){let E=O7;switch(this._sourceType){case ot.SAME_SPECIES_EGG:E=I7;break;case ot.GACHA_MOVE:E=L7;break}const R=this.isManaphyEgg()?2:Math.pow(2,3-this.tier);return De(E*R)?De(3):3}getEggTierDefaultHatchWaves(E){if(this._species===e.PHIONE||this._species===e.MANAPHY)return jx;switch(E??this._tier){case K.COMMON:return Jx;case K.RARE:return $x;case K.EPIC:return qx}return zx}rollEggTier(){const E=this._sourceType===ot.GACHA_LEGENDARY?lV:0,R=oE(256);return R>=xx+E?K.COMMON:R>=bx+E?K.RARE:R>=Zx+E?K.EPIC:K.LEGENDARY}rollSpecies(){if(!s)return null;if(this.isManaphyEgg())return De(UV)!==1?e.PHIONE:e.MANAPHY;if(this.tier===K.LEGENDARY&&this._sourceType===ot.GACHA_LEGENDARY&&!De(2))return DV(this.timestamp);let E,R;switch(this.tier){case K.RARE:E=4,R=5;break;case K.EPIC:E=6,R=7;break;case K.LEGENDARY:E=8,R=9;break;default:E=1,R=3;break}const I=[e.PHIONE,e.MANAPHY,e.ETERNATUS];let N=Object.keys(YT).filter(C=>YT[C]===this.tier).map(C=>Number.parseInt(C)).filter(C=>!CE.hasOwnProperty(C)&&de(C).isObtainable()&&I.indexOf(C)===-1);if(s.gameData.unlockPity[this.tier]>=9){const C=N.filter(U=>!s.gameData.dexData[U].caughtAttr&&!s.gameData.eggs.some(_=>_.species===U));C.length&&(N=C)}this.variantTier&&(this.variantTier===yO.RARE||this.variantTier===yO.EPIC)&&(N=N.filter(C=>de(C).hasVariants()));let S=0;const T=[];for(const C of N){const U=Phaser.Math.Clamp(kE[C],E,R),_=Math.floor(((R-U)/(R-E+1)*1.5+1)*100);T.push(S+_),S+=_}let i;const o=De(S);for(let C=0;C<T.length;C++)if(o<T[C]){i=N[C];break}return i=i,s.gameData.dexData[i].caughtAttr||s.gameData.eggs.some(C=>C.species===i)?s.gameData.unlockPity[this.tier]=Math.min(s.gameData.unlockPity[this.tier]+1,10):s.gameData.unlockPity[this.tier]=0,i}rollShiny(){let E=e7;switch(this._sourceType){case ot.GACHA_SHINY:E=A7;break;case ot.SAME_SPECIES_EGG:E=E7;break}return!De(E)}rollVariant(){if(!this.isShiny)return yO.STANDARD;const E=De(10);return E>=yv?yO.STANDARD:E>=wv?yO.RARE:yO.EPIC}checkForPityTierOverrides(){const E=this._sourceType===ot.GACHA_LEGENDARY?lV:0;s.gameData.eggPity[K.RARE]+=1,s.gameData.eggPity[K.EPIC]+=1,s.gameData.eggPity[K.LEGENDARY]+=1+E,s.gameData.eggPity[K.LEGENDARY]>=kx&&this._tier===K.COMMON?this._tier=K.LEGENDARY:s.gameData.eggPity[K.EPIC]>=Xx&&this._tier===K.COMMON?this._tier=K.EPIC:s.gameData.eggPity[K.RARE]>=Qx&&this._tier===K.COMMON&&(this._tier=K.RARE),s.gameData.eggPity[this._tier]=0}increasePullStatistic(){if(s.gameData.gameStats.eggsPulled++,this.isManaphyEgg()){s.gameData.gameStats.manaphyEggsPulled++,this._hatchWaves=this.getEggTierDefaultHatchWaves(K.EPIC);return}switch(this.tier){case K.RARE:s.gameData.gameStats.rareEggsPulled++;break;case K.EPIC:s.gameData.gameStats.epicEggsPulled++;break;case K.LEGENDARY:s.gameData.gameStats.legendaryEggsPulled++;break}}getEggTier(){return YT[this.species]??K.COMMON}};r(vh,"Egg");let js=vh;function N7(){return Object.entries(YT).filter(t=>t[1]===K.LEGENDARY).map(t=>Number.parseInt(t[0])).filter(t=>de(t).isObtainable()&&t!==e.ETERNATUS)}r(N7,"getValidLegendaryGachaSpecies");function DV(t){const E=N7();let R;const N=new Date(t).getTime(),S=Math.floor(Math.floor(N/864e5)/E.length),T=Math.floor(N/864e5)%E.length;return s.executeWithSeedOffset(()=>{R=Phaser.Math.RND.shuffle(E)[T]},S,BN.toString()),R=R,R}r(DV,"getLegendaryGachaSpeciesForTimestamp");function jX(t){return YT[t.getRootSpeciesId()]}r(jX,"getEggTierForSpecies");const xh=class xh{constructor(E){const R=E instanceof js?E:null;this.id=R?R.id:E.id,this.tier=R?R.tier:E.tier??Math.floor(this.id/BN),E.species===0?this.sourceType=E.gachaType??E.sourceType:this.sourceType=R?R.sourceType:E.sourceType,this.hatchWaves=R?R.hatchWaves:E.hatchWaves,this.timestamp=R?R.timestamp:E.timestamp,this.variantTier=R?R.variantTier:E.variantTier,this.isShiny=R?R.isShiny:E.isShiny,this.species=R?R.species:E.species,this.eggMoveIndex=R?R.eggMoveIndex:E.eggMoveIndex,this.overrideHiddenAbility=R?R.overrideHiddenAbility:E.overrideHiddenAbility}toEgg(){return this.species?new js({id:this.id,tier:this.tier,sourceType:this.sourceType,hatchWaves:this.hatchWaves,timestamp:this.timestamp,variantTier:this.variantTier,isShiny:this.isShiny,species:this.species,eggMoveIndex:this.eggMoveIndex,overrideHiddenAbility:this.overrideHiddenAbility}):new js({id:this.id,hatchWaves:this.hatchWaves,sourceType:this.sourceType,timestamp:this.timestamp,tier:Math.floor(this.id/BN)})}};r(xh,"EggData");let AC=xh;var yi={exports:{}};function s7(t){throw new Error('Could not dynamically require "'+t+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}r(s7,"commonjsRequire");var wi={exports:{}};const S7={},T7=Object.freeze(Object.defineProperty({__proto__:null,default:S7},Symbol.toStringTag,{value:"Module"})),n7=x6(T7);var a7=wi.exports,MV;function JA(){return MV||(MV=1,function(t,E){(function(R,I){t.exports=I()})(a7,function(){var R=R||function(I,N){var S;if(typeof window<"u"&&window.crypto&&(S=window.crypto),typeof self<"u"&&self.crypto&&(S=self.crypto),typeof globalThis<"u"&&globalThis.crypto&&(S=globalThis.crypto),!S&&typeof window<"u"&&window.msCrypto&&(S=window.msCrypto),!S&&typeof FM<"u"&&FM.crypto&&(S=FM.crypto),!S&&typeof s7=="function")try{S=n7}catch{}var T=r(function(){if(S){if(typeof S.getRandomValues=="function")try{return S.getRandomValues(new Uint32Array(1))[0]}catch{}if(typeof S.randomBytes=="function")try{return S.randomBytes(4).readInt32LE()}catch{}}throw new Error("Native crypto module could not be used to get secure random number.")},"cryptoSecureRandomInt"),i=Object.create||function(){function m(){}return r(m,"F"),function(W){var v;return m.prototype=W,v=new m,m.prototype=null,v}}(),o={},C=o.lib={},U=C.Base=function(){return{extend:r(function(m){var W=i(this);return m&&W.mixIn(m),(!W.hasOwnProperty("init")||this.init===W.init)&&(W.init=function(){W.$super.init.apply(this,arguments)}),W.init.prototype=W,W.$super=this,W},"extend"),create:r(function(){var m=this.extend();return m.init.apply(m,arguments),m},"create"),init:r(function(){},"init"),mixIn:r(function(m){for(var W in m)m.hasOwnProperty(W)&&(this[W]=m[W]);m.hasOwnProperty("toString")&&(this.toString=m.toString)},"mixIn"),clone:r(function(){return this.init.prototype.extend(this)},"clone")}}(),_=C.WordArray=U.extend({init:r(function(m,W){m=this.words=m||[],W!=N?this.sigBytes=W:this.sigBytes=m.length*4},"init"),toString:r(function(m){return(m||H).stringify(this)},"toString"),concat:r(function(m){var W=this.words,v=m.words,$=this.sigBytes,Oe=m.sigBytes;if(this.clamp(),$%4)for(var q=0;q<Oe;q++){var Ie=v[q>>>2]>>>24-q%4*8&255;W[$+q>>>2]|=Ie<<24-($+q)%4*8}else for(var le=0;le<Oe;le+=4)W[$+le>>>2]=v[le>>>2];return this.sigBytes+=Oe,this},"concat"),clamp:r(function(){var m=this.words,W=this.sigBytes;m[W>>>2]&=4294967295<<32-W%4*8,m.length=I.ceil(W/4)},"clamp"),clone:r(function(){var m=U.clone.call(this);return m.words=this.words.slice(0),m},"clone"),random:r(function(m){for(var W=[],v=0;v<m;v+=4)W.push(T());return new _.init(W,m)},"random")}),G=o.enc={},H=G.Hex={stringify:r(function(m){for(var W=m.words,v=m.sigBytes,$=[],Oe=0;Oe<v;Oe++){var q=W[Oe>>>2]>>>24-Oe%4*8&255;$.push((q>>>4).toString(16)),$.push((q&15).toString(16))}return $.join("")},"stringify"),parse:r(function(m){for(var W=m.length,v=[],$=0;$<W;$+=2)v[$>>>3]|=parseInt(m.substr($,2),16)<<24-$%8*4;return new _.init(v,W/2)},"parse")},c=G.Latin1={stringify:r(function(m){for(var W=m.words,v=m.sigBytes,$=[],Oe=0;Oe<v;Oe++){var q=W[Oe>>>2]>>>24-Oe%4*8&255;$.push(String.fromCharCode(q))}return $.join("")},"stringify"),parse:r(function(m){for(var W=m.length,v=[],$=0;$<W;$++)v[$>>>2]|=(m.charCodeAt($)&255)<<24-$%4*8;return new _.init(v,W)},"parse")},f=G.Utf8={stringify:r(function(m){try{return decodeURIComponent(escape(c.stringify(m)))}catch{throw new Error("Malformed UTF-8 data")}},"stringify"),parse:r(function(m){return c.parse(unescape(encodeURIComponent(m)))},"parse")},d=C.BufferedBlockAlgorithm=U.extend({reset:r(function(){this._data=new _.init,this._nDataBytes=0},"reset"),_append:r(function(m){typeof m=="string"&&(m=f.parse(m)),this._data.concat(m),this._nDataBytes+=m.sigBytes},"_append"),_process:r(function(m){var W,v=this._data,$=v.words,Oe=v.sigBytes,q=this.blockSize,Ie=q*4,le=Oe/Ie;m?le=I.ceil(le):le=I.max((le|0)-this._minBufferSize,0);var Ae=le*q,Re=I.min(Ae*4,Oe);if(Ae){for(var se=0;se<Ae;se+=q)this._doProcessBlock($,se);W=$.splice(0,Ae),v.sigBytes-=Re}return new _.init(W,Re)},"_process"),clone:r(function(){var m=U.clone.call(this);return m._data=this._data.clone(),m},"clone"),_minBufferSize:0});C.Hasher=d.extend({cfg:U.extend(),init:r(function(m){this.cfg=this.cfg.extend(m),this.reset()},"init"),reset:r(function(){d.reset.call(this),this._doReset()},"reset"),update:r(function(m){return this._append(m),this._process(),this},"update"),finalize:r(function(m){m&&this._append(m);var W=this._doFinalize();return W},"finalize"),blockSize:16,_createHelper:r(function(m){return function(W,v){return new m.init(v).finalize(W)}},"_createHelper"),_createHmacHelper:r(function(m){return function(W,v){return new w.HMAC.init(m,v).finalize(W)}},"_createHmacHelper")});var w=o.algo={};return o}(Math);return R})}(wi)),wi.exports}r(JA,"requireCore");var Vi={exports:{}},r7=Vi.exports,PV;function uM(){return PV||(PV=1,function(t,E){(function(R,I){t.exports=I(JA())})(r7,function(R){return function(I){var N=R,S=N.lib,T=S.Base,i=S.WordArray,o=N.x64={};o.Word=T.extend({init:r(function(C,U){this.high=C,this.low=U},"init")}),o.WordArray=T.extend({init:r(function(C,U){C=this.words=C||[],U!=I?this.sigBytes=U:this.sigBytes=C.length*8},"init"),toX32:r(function(){for(var C=this.words,U=C.length,_=[],G=0;G<U;G++){var H=C[G];_.push(H.high),_.push(H.low)}return i.create(_,this.sigBytes)},"toX32"),clone:r(function(){for(var C=T.clone.call(this),U=C.words=this.words.slice(0),_=U.length,G=0;G<_;G++)U[G]=U[G].clone();return C},"clone")})}(),R})}(Vi)),Vi.exports}r(uM,"requireX64Core");var vi={exports:{}},i7=vi.exports,GV;function o7(){return GV||(GV=1,function(t,E){(function(R,I){t.exports=I(JA())})(i7,function(R){return function(){if(typeof ArrayBuffer=="function"){var I=R,N=I.lib,S=N.WordArray,T=S.init,i=S.init=function(o){if(o instanceof ArrayBuffer&&(o=new Uint8Array(o)),(o instanceof Int8Array||typeof Uint8ClampedArray<"u"&&o instanceof Uint8ClampedArray||o instanceof Int16Array||o instanceof Uint16Array||o instanceof Int32Array||o instanceof Uint32Array||o instanceof Float32Array||o instanceof Float64Array)&&(o=new Uint8Array(o.buffer,o.byteOffset,o.byteLength)),o instanceof Uint8Array){for(var C=o.byteLength,U=[],_=0;_<C;_++)U[_>>>2]|=o[_]<<24-_%4*8;T.call(this,U,C)}else T.apply(this,arguments)};i.prototype=S}}(),R.lib.WordArray})}(vi)),vi.exports}r(o7,"requireLibTypedarrays");var xi={exports:{}},C7=xi.exports,_V;function l7(){return _V||(_V=1,function(t,E){(function(R,I){t.exports=I(JA())})(C7,function(R){return function(){var I=R,N=I.lib,S=N.WordArray,T=I.enc;T.Utf16=T.Utf16BE={stringify:r(function(o){for(var C=o.words,U=o.sigBytes,_=[],G=0;G<U;G+=2){var H=C[G>>>2]>>>16-G%4*8&65535;_.push(String.fromCharCode(H))}return _.join("")},"stringify"),parse:r(function(o){for(var C=o.length,U=[],_=0;_<C;_++)U[_>>>1]|=o.charCodeAt(_)<<16-_%2*16;return S.create(U,C*2)},"parse")},T.Utf16LE={stringify:r(function(o){for(var C=o.words,U=o.sigBytes,_=[],G=0;G<U;G+=2){var H=i(C[G>>>2]>>>16-G%4*8&65535);_.push(String.fromCharCode(H))}return _.join("")},"stringify"),parse:r(function(o){for(var C=o.length,U=[],_=0;_<C;_++)U[_>>>1]|=i(o.charCodeAt(_)<<16-_%2*16);return S.create(U,C*2)},"parse")};function i(o){return o<<8&4278255360|o>>>8&16711935}r(i,"swapEndian")}(),R.enc.Utf16})}(xi)),xi.exports}r(l7,"requireEncUtf16");var bi={exports:{}},U7=bi.exports,uV;function Cs(){return uV||(uV=1,function(t,E){(function(R,I){t.exports=I(JA())})(U7,function(R){return function(){var I=R,N=I.lib,S=N.WordArray,T=I.enc;T.Base64={stringify:r(function(o){var C=o.words,U=o.sigBytes,_=this._map;o.clamp();for(var G=[],H=0;H<U;H+=3)for(var c=C[H>>>2]>>>24-H%4*8&255,f=C[H+1>>>2]>>>24-(H+1)%4*8&255,d=C[H+2>>>2]>>>24-(H+2)%4*8&255,w=c<<16|f<<8|d,m=0;m<4&&H+m*.75<U;m++)G.push(_.charAt(w>>>6*(3-m)&63));var W=_.charAt(64);if(W)for(;G.length%4;)G.push(W);return G.join("")},"stringify"),parse:r(function(o){var C=o.length,U=this._map,_=this._reverseMap;if(!_){_=this._reverseMap=[];for(var G=0;G<U.length;G++)_[U.charCodeAt(G)]=G}var H=U.charAt(64);if(H){var c=o.indexOf(H);c!==-1&&(C=c)}return i(o,C,_)},"parse"),_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="};function i(o,C,U){for(var _=[],G=0,H=0;H<C;H++)if(H%4){var c=U[o.charCodeAt(H-1)]<<H%4*2,f=U[o.charCodeAt(H)]>>>6-H%4*2,d=c|f;_[G>>>2]|=d<<24-G%4*8,G++}return S.create(_,G)}r(i,"parseLoop")}(),R.enc.Base64})}(bi)),bi.exports}r(Cs,"requireEncBase64");var Zi={exports:{}},D7=Zi.exports,HV;function M7(){return HV||(HV=1,function(t,E){(function(R,I){t.exports=I(JA())})(D7,function(R){return function(){var I=R,N=I.lib,S=N.WordArray,T=I.enc;T.Base64url={stringify:r(function(o,C){C===void 0&&(C=!0);var U=o.words,_=o.sigBytes,G=C?this._safe_map:this._map;o.clamp();for(var H=[],c=0;c<_;c+=3)for(var f=U[c>>>2]>>>24-c%4*8&255,d=U[c+1>>>2]>>>24-(c+1)%4*8&255,w=U[c+2>>>2]>>>24-(c+2)%4*8&255,m=f<<16|d<<8|w,W=0;W<4&&c+W*.75<_;W++)H.push(G.charAt(m>>>6*(3-W)&63));var v=G.charAt(64);if(v)for(;H.length%4;)H.push(v);return H.join("")},"stringify"),parse:r(function(o,C){C===void 0&&(C=!0);var U=o.length,_=C?this._safe_map:this._map,G=this._reverseMap;if(!G){G=this._reverseMap=[];for(var H=0;H<_.length;H++)G[_.charCodeAt(H)]=H}var c=_.charAt(64);if(c){var f=o.indexOf(c);f!==-1&&(U=f)}return i(o,U,G)},"parse"),_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",_safe_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"};function i(o,C,U){for(var _=[],G=0,H=0;H<C;H++)if(H%4){var c=U[o.charCodeAt(H-1)]<<H%4*2,f=U[o.charCodeAt(H)]>>>6-H%4*2,d=c|f;_[G>>>2]|=d<<24-G%4*8,G++}return S.create(_,G)}r(i,"parseLoop")}(),R.enc.Base64url})}(Zi)),Zi.exports}r(M7,"requireEncBase64url");var ki={exports:{}},P7=ki.exports,cV;function ls(){return cV||(cV=1,function(t,E){(function(R,I){t.exports=I(JA())})(P7,function(R){return function(I){var N=R,S=N.lib,T=S.WordArray,i=S.Hasher,o=N.algo,C=[];(function(){for(var f=0;f<64;f++)C[f]=I.abs(I.sin(f+1))*4294967296|0})();var U=o.MD5=i.extend({_doReset:r(function(){this._hash=new T.init([1732584193,4023233417,2562383102,271733878])},"_doReset"),_doProcessBlock:r(function(f,d){for(var w=0;w<16;w++){var m=d+w,W=f[m];f[m]=(W<<8|W>>>24)&16711935|(W<<24|W>>>8)&4278255360}var v=this._hash.words,$=f[d+0],Oe=f[d+1],q=f[d+2],Ie=f[d+3],le=f[d+4],Ae=f[d+5],Re=f[d+6],se=f[d+7],ie=f[d+8],He=f[d+9],ve=f[d+10],xe=f[d+11],EA=f[d+12],NA=f[d+13],rA=f[d+14],Be=f[d+15],ae=v[0],Pe=v[1],Te=v[2],Ge=v[3];ae=_(ae,Pe,Te,Ge,$,7,C[0]),Ge=_(Ge,ae,Pe,Te,Oe,12,C[1]),Te=_(Te,Ge,ae,Pe,q,17,C[2]),Pe=_(Pe,Te,Ge,ae,Ie,22,C[3]),ae=_(ae,Pe,Te,Ge,le,7,C[4]),Ge=_(Ge,ae,Pe,Te,Ae,12,C[5]),Te=_(Te,Ge,ae,Pe,Re,17,C[6]),Pe=_(Pe,Te,Ge,ae,se,22,C[7]),ae=_(ae,Pe,Te,Ge,ie,7,C[8]),Ge=_(Ge,ae,Pe,Te,He,12,C[9]),Te=_(Te,Ge,ae,Pe,ve,17,C[10]),Pe=_(Pe,Te,Ge,ae,xe,22,C[11]),ae=_(ae,Pe,Te,Ge,EA,7,C[12]),Ge=_(Ge,ae,Pe,Te,NA,12,C[13]),Te=_(Te,Ge,ae,Pe,rA,17,C[14]),Pe=_(Pe,Te,Ge,ae,Be,22,C[15]),ae=G(ae,Pe,Te,Ge,Oe,5,C[16]),Ge=G(Ge,ae,Pe,Te,Re,9,C[17]),Te=G(Te,Ge,ae,Pe,xe,14,C[18]),Pe=G(Pe,Te,Ge,ae,$,20,C[19]),ae=G(ae,Pe,Te,Ge,Ae,5,C[20]),Ge=G(Ge,ae,Pe,Te,ve,9,C[21]),Te=G(Te,Ge,ae,Pe,Be,14,C[22]),Pe=G(Pe,Te,Ge,ae,le,20,C[23]),ae=G(ae,Pe,Te,Ge,He,5,C[24]),Ge=G(Ge,ae,Pe,Te,rA,9,C[25]),Te=G(Te,Ge,ae,Pe,Ie,14,C[26]),Pe=G(Pe,Te,Ge,ae,ie,20,C[27]),ae=G(ae,Pe,Te,Ge,NA,5,C[28]),Ge=G(Ge,ae,Pe,Te,q,9,C[29]),Te=G(Te,Ge,ae,Pe,se,14,C[30]),Pe=G(Pe,Te,Ge,ae,EA,20,C[31]),ae=H(ae,Pe,Te,Ge,Ae,4,C[32]),Ge=H(Ge,ae,Pe,Te,ie,11,C[33]),Te=H(Te,Ge,ae,Pe,xe,16,C[34]),Pe=H(Pe,Te,Ge,ae,rA,23,C[35]),ae=H(ae,Pe,Te,Ge,Oe,4,C[36]),Ge=H(Ge,ae,Pe,Te,le,11,C[37]),Te=H(Te,Ge,ae,Pe,se,16,C[38]),Pe=H(Pe,Te,Ge,ae,ve,23,C[39]),ae=H(ae,Pe,Te,Ge,NA,4,C[40]),Ge=H(Ge,ae,Pe,Te,$,11,C[41]),Te=H(Te,Ge,ae,Pe,Ie,16,C[42]),Pe=H(Pe,Te,Ge,ae,Re,23,C[43]),ae=H(ae,Pe,Te,Ge,He,4,C[44]),Ge=H(Ge,ae,Pe,Te,EA,11,C[45]),Te=H(Te,Ge,ae,Pe,Be,16,C[46]),Pe=H(Pe,Te,Ge,ae,q,23,C[47]),ae=c(ae,Pe,Te,Ge,$,6,C[48]),Ge=c(Ge,ae,Pe,Te,se,10,C[49]),Te=c(Te,Ge,ae,Pe,rA,15,C[50]),Pe=c(Pe,Te,Ge,ae,Ae,21,C[51]),ae=c(ae,Pe,Te,Ge,EA,6,C[52]),Ge=c(Ge,ae,Pe,Te,Ie,10,C[53]),Te=c(Te,Ge,ae,Pe,ve,15,C[54]),Pe=c(Pe,Te,Ge,ae,Oe,21,C[55]),ae=c(ae,Pe,Te,Ge,ie,6,C[56]),Ge=c(Ge,ae,Pe,Te,Be,10,C[57]),Te=c(Te,Ge,ae,Pe,Re,15,C[58]),Pe=c(Pe,Te,Ge,ae,NA,21,C[59]),ae=c(ae,Pe,Te,Ge,le,6,C[60]),Ge=c(Ge,ae,Pe,Te,xe,10,C[61]),Te=c(Te,Ge,ae,Pe,q,15,C[62]),Pe=c(Pe,Te,Ge,ae,He,21,C[63]),v[0]=v[0]+ae|0,v[1]=v[1]+Pe|0,v[2]=v[2]+Te|0,v[3]=v[3]+Ge|0},"_doProcessBlock"),_doFinalize:r(function(){var f=this._data,d=f.words,w=this._nDataBytes*8,m=f.sigBytes*8;d[m>>>5]|=128<<24-m%32;var W=I.floor(w/4294967296),v=w;d[(m+64>>>9<<4)+15]=(W<<8|W>>>24)&16711935|(W<<24|W>>>8)&4278255360,d[(m+64>>>9<<4)+14]=(v<<8|v>>>24)&16711935|(v<<24|v>>>8)&4278255360,f.sigBytes=(d.length+1)*4,this._process();for(var $=this._hash,Oe=$.words,q=0;q<4;q++){var Ie=Oe[q];Oe[q]=(Ie<<8|Ie>>>24)&16711935|(Ie<<24|Ie>>>8)&4278255360}return $},"_doFinalize"),clone:r(function(){var f=i.clone.call(this);return f._hash=this._hash.clone(),f},"clone")});function _(f,d,w,m,W,v,$){var Oe=f+(d&w|~d&m)+W+$;return(Oe<<v|Oe>>>32-v)+d}r(_,"FF");function G(f,d,w,m,W,v,$){var Oe=f+(d&m|w&~m)+W+$;return(Oe<<v|Oe>>>32-v)+d}r(G,"GG");function H(f,d,w,m,W,v,$){var Oe=f+(d^w^m)+W+$;return(Oe<<v|Oe>>>32-v)+d}r(H,"HH");function c(f,d,w,m,W,v,$){var Oe=f+(w^(d|~m))+W+$;return(Oe<<v|Oe>>>32-v)+d}r(c,"II"),N.MD5=i._createHelper(U),N.HmacMD5=i._createHmacHelper(U)}(Math),R.MD5})}(ki)),ki.exports}r(ls,"requireMd5");var Xi={exports:{}},G7=Xi.exports,BV;function Vv(){return BV||(BV=1,function(t,E){(function(R,I){t.exports=I(JA())})(G7,function(R){return function(){var I=R,N=I.lib,S=N.WordArray,T=N.Hasher,i=I.algo,o=[],C=i.SHA1=T.extend({_doReset:r(function(){this._hash=new S.init([1732584193,4023233417,2562383102,271733878,3285377520])},"_doReset"),_doProcessBlock:r(function(U,_){for(var G=this._hash.words,H=G[0],c=G[1],f=G[2],d=G[3],w=G[4],m=0;m<80;m++){if(m<16)o[m]=U[_+m]|0;else{var W=o[m-3]^o[m-8]^o[m-14]^o[m-16];o[m]=W<<1|W>>>31}var v=(H<<5|H>>>27)+w+o[m];m<20?v+=(c&f|~c&d)+1518500249:m<40?v+=(c^f^d)+1859775393:m<60?v+=(c&f|c&d|f&d)-1894007588:v+=(c^f^d)-899497514,w=d,d=f,f=c<<30|c>>>2,c=H,H=v}G[0]=G[0]+H|0,G[1]=G[1]+c|0,G[2]=G[2]+f|0,G[3]=G[3]+d|0,G[4]=G[4]+w|0},"_doProcessBlock"),_doFinalize:r(function(){var U=this._data,_=U.words,G=this._nDataBytes*8,H=U.sigBytes*8;return _[H>>>5]|=128<<24-H%32,_[(H+64>>>9<<4)+14]=Math.floor(G/4294967296),_[(H+64>>>9<<4)+15]=G,U.sigBytes=_.length*4,this._process(),this._hash},"_doFinalize"),clone:r(function(){var U=T.clone.call(this);return U._hash=this._hash.clone(),U},"clone")});I.SHA1=T._createHelper(C),I.HmacSHA1=T._createHmacHelper(C)}(),R.SHA1})}(Xi)),Xi.exports}r(Vv,"requireSha1");var Qi={exports:{}},_7=Qi.exports,hV;function j1(){return hV||(hV=1,function(t,E){(function(R,I){t.exports=I(JA())})(_7,function(R){return function(I){var N=R,S=N.lib,T=S.WordArray,i=S.Hasher,o=N.algo,C=[],U=[];(function(){function H(w){for(var m=I.sqrt(w),W=2;W<=m;W++)if(!(w%W))return!1;return!0}r(H,"isPrime");function c(w){return(w-(w|0))*4294967296|0}r(c,"getFractionalBits");for(var f=2,d=0;d<64;)H(f)&&(d<8&&(C[d]=c(I.pow(f,1/2))),U[d]=c(I.pow(f,1/3)),d++),f++})();var _=[],G=o.SHA256=i.extend({_doReset:r(function(){this._hash=new T.init(C.slice(0))},"_doReset"),_doProcessBlock:r(function(H,c){for(var f=this._hash.words,d=f[0],w=f[1],m=f[2],W=f[3],v=f[4],$=f[5],Oe=f[6],q=f[7],Ie=0;Ie<64;Ie++){if(Ie<16)_[Ie]=H[c+Ie]|0;else{var le=_[Ie-15],Ae=(le<<25|le>>>7)^(le<<14|le>>>18)^le>>>3,Re=_[Ie-2],se=(Re<<15|Re>>>17)^(Re<<13|Re>>>19)^Re>>>10;_[Ie]=Ae+_[Ie-7]+se+_[Ie-16]}var ie=v&$^~v&Oe,He=d&w^d&m^w&m,ve=(d<<30|d>>>2)^(d<<19|d>>>13)^(d<<10|d>>>22),xe=(v<<26|v>>>6)^(v<<21|v>>>11)^(v<<7|v>>>25),EA=q+xe+ie+U[Ie]+_[Ie],NA=ve+He;q=Oe,Oe=$,$=v,v=W+EA|0,W=m,m=w,w=d,d=EA+NA|0}f[0]=f[0]+d|0,f[1]=f[1]+w|0,f[2]=f[2]+m|0,f[3]=f[3]+W|0,f[4]=f[4]+v|0,f[5]=f[5]+$|0,f[6]=f[6]+Oe|0,f[7]=f[7]+q|0},"_doProcessBlock"),_doFinalize:r(function(){var H=this._data,c=H.words,f=this._nDataBytes*8,d=H.sigBytes*8;return c[d>>>5]|=128<<24-d%32,c[(d+64>>>9<<4)+14]=I.floor(f/4294967296),c[(d+64>>>9<<4)+15]=f,H.sigBytes=c.length*4,this._process(),this._hash},"_doFinalize"),clone:r(function(){var H=i.clone.call(this);return H._hash=this._hash.clone(),H},"clone")});N.SHA256=i._createHelper(G),N.HmacSHA256=i._createHmacHelper(G)}(Math),R.SHA256})}(Qi)),Qi.exports}r(j1,"requireSha256");var Ji={exports:{}},u7=Ji.exports,fV;function H7(){return fV||(fV=1,function(t,E){(function(R,I,N){t.exports=I(JA(),j1())})(u7,function(R){return function(){var I=R,N=I.lib,S=N.WordArray,T=I.algo,i=T.SHA256,o=T.SHA224=i.extend({_doReset:r(function(){this._hash=new S.init([3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428])},"_doReset"),_doFinalize:r(function(){var C=i._doFinalize.call(this);return C.sigBytes-=4,C},"_doFinalize")});I.SHA224=i._createHelper(o),I.HmacSHA224=i._createHmacHelper(o)}(),R.SHA224})}(Ji)),Ji.exports}r(H7,"requireSha224");var $i={exports:{}},c7=$i.exports,dV;function vv(){return dV||(dV=1,function(t,E){(function(R,I,N){t.exports=I(JA(),uM())})(c7,function(R){return function(){var I=R,N=I.lib,S=N.Hasher,T=I.x64,i=T.Word,o=T.WordArray,C=I.algo;function U(){return i.create.apply(i,arguments)}r(U,"X64Word_create");var _=[U(1116352408,3609767458),U(1899447441,602891725),U(3049323471,3964484399),U(3921009573,2173295548),U(961987163,4081628472),U(1508970993,3053834265),U(2453635748,2937671579),U(2870763221,3664609560),U(3624381080,2734883394),U(310598401,1164996542),U(607225278,1323610764),U(1426881987,3590304994),U(1925078388,4068182383),U(2162078206,991336113),U(2614888103,633803317),U(3248222580,3479774868),U(3835390401,2666613458),U(4022224774,944711139),U(264347078,2341262773),U(604807628,2007800933),U(770255983,1495990901),U(1249150122,1856431235),U(1555081692,3175218132),U(1996064986,2198950837),U(2554220882,3999719339),U(2821834349,766784016),U(2952996808,2566594879),U(3210313671,3203337956),U(3336571891,1034457026),U(3584528711,2466948901),U(113926993,3758326383),U(338241895,168717936),U(666307205,1188179964),U(773529912,1546045734),U(1294757372,1522805485),U(1396182291,2643833823),U(1695183700,2343527390),U(1986661051,1014477480),U(2177026350,1206759142),U(2456956037,344077627),U(2730485921,1290863460),U(2820302411,3158454273),U(3259730800,3505952657),U(3345764771,106217008),U(3516065817,3606008344),U(3600352804,1432725776),U(4094571909,1467031594),U(275423344,851169720),U(430227734,3100823752),U(506948616,1363258195),U(659060556,3750685593),U(883997877,3785050280),U(958139571,3318307427),U(1322822218,3812723403),U(1537002063,2003034995),U(1747873779,3602036899),U(1955562222,1575990012),U(2024104815,1125592928),U(2227730452,2716904306),U(2361852424,442776044),U(2428436474,593698344),U(2756734187,3733110249),U(3204031479,2999351573),U(3329325298,3815920427),U(3391569614,3928383900),U(3515267271,566280711),U(3940187606,3454069534),U(4118630271,4000239992),U(116418474,1914138554),U(174292421,2731055270),U(289380356,3203993006),U(460393269,320620315),U(685471733,587496836),U(852142971,1086792851),U(1017036298,365543100),U(1126000580,2618297676),U(1288033470,3409855158),U(1501505948,4234509866),U(1607167915,987167468),U(1816402316,1246189591)],G=[];(function(){for(var c=0;c<80;c++)G[c]=U()})();var H=C.SHA512=S.extend({_doReset:r(function(){this._hash=new o.init([new i.init(1779033703,4089235720),new i.init(3144134277,2227873595),new i.init(1013904242,4271175723),new i.init(2773480762,1595750129),new i.init(1359893119,2917565137),new i.init(2600822924,725511199),new i.init(528734635,4215389547),new i.init(1541459225,327033209)])},"_doReset"),_doProcessBlock:r(function(c,f){for(var d=this._hash.words,w=d[0],m=d[1],W=d[2],v=d[3],$=d[4],Oe=d[5],q=d[6],Ie=d[7],le=w.high,Ae=w.low,Re=m.high,se=m.low,ie=W.high,He=W.low,ve=v.high,xe=v.low,EA=$.high,NA=$.low,rA=Oe.high,Be=Oe.low,ae=q.high,Pe=q.low,Te=Ie.high,Ge=Ie.low,ze=le,eA=Ae,GA=Re,IA=se,yA=ie,DE=He,cE=ve,Pt=xe,Gt=EA,HA=NA,tE=rA,ME=Be,mt=ae,GR=Pe,Us=Te,zI=Ge,yR=0;yR<80;yR++){var _R,BO,ai=G[yR];if(yR<16)BO=ai.high=c[f+yR*2]|0,_R=ai.low=c[f+yR*2+1]|0;else{var mw=G[yR-15],Ds=mw.high,LT=mw.low,H6=(Ds>>>1|LT<<31)^(Ds>>>8|LT<<24)^Ds>>>7,gw=(LT>>>1|Ds<<31)^(LT>>>8|Ds<<24)^(LT>>>7|Ds<<25),pw=G[yR-2],Ms=pw.high,NT=pw.low,c6=(Ms>>>19|NT<<13)^(Ms<<3|NT>>>29)^Ms>>>6,yw=(NT>>>19|Ms<<13)^(NT<<3|Ms>>>29)^(NT>>>6|Ms<<26),ww=G[yR-7],B6=ww.high,h6=ww.low,Vw=G[yR-16],f6=Vw.high,vw=Vw.low;_R=gw+h6,BO=H6+B6+(_R>>>0<gw>>>0?1:0),_R=_R+yw,BO=BO+c6+(_R>>>0<yw>>>0?1:0),_R=_R+vw,BO=BO+f6+(_R>>>0<vw>>>0?1:0),ai.high=BO,ai.low=_R}var d6=Gt&tE^~Gt&mt,xw=HA&ME^~HA&GR,K6=ze&GA^ze&yA^GA&yA,F6=eA&IA^eA&DE^IA&DE,Y6=(ze>>>28|eA<<4)^(ze<<30|eA>>>2)^(ze<<25|eA>>>7),bw=(eA>>>28|ze<<4)^(eA<<30|ze>>>2)^(eA<<25|ze>>>7),W6=(Gt>>>14|HA<<18)^(Gt>>>18|HA<<14)^(Gt<<23|HA>>>9),m6=(HA>>>14|Gt<<18)^(HA>>>18|Gt<<14)^(HA<<23|Gt>>>9),Zw=_[yR],g6=Zw.high,kw=Zw.low,EO=zI+m6,jI=Us+W6+(EO>>>0<zI>>>0?1:0),EO=EO+xw,jI=jI+d6+(EO>>>0<xw>>>0?1:0),EO=EO+kw,jI=jI+g6+(EO>>>0<kw>>>0?1:0),EO=EO+_R,jI=jI+BO+(EO>>>0<_R>>>0?1:0),Xw=bw+F6,p6=Y6+K6+(Xw>>>0<bw>>>0?1:0);Us=mt,zI=GR,mt=tE,GR=ME,tE=Gt,ME=HA,HA=Pt+EO|0,Gt=cE+jI+(HA>>>0<Pt>>>0?1:0)|0,cE=yA,Pt=DE,yA=GA,DE=IA,GA=ze,IA=eA,eA=EO+Xw|0,ze=jI+p6+(eA>>>0<EO>>>0?1:0)|0}Ae=w.low=Ae+eA,w.high=le+ze+(Ae>>>0<eA>>>0?1:0),se=m.low=se+IA,m.high=Re+GA+(se>>>0<IA>>>0?1:0),He=W.low=He+DE,W.high=ie+yA+(He>>>0<DE>>>0?1:0),xe=v.low=xe+Pt,v.high=ve+cE+(xe>>>0<Pt>>>0?1:0),NA=$.low=NA+HA,$.high=EA+Gt+(NA>>>0<HA>>>0?1:0),Be=Oe.low=Be+ME,Oe.high=rA+tE+(Be>>>0<ME>>>0?1:0),Pe=q.low=Pe+GR,q.high=ae+mt+(Pe>>>0<GR>>>0?1:0),Ge=Ie.low=Ge+zI,Ie.high=Te+Us+(Ge>>>0<zI>>>0?1:0)},"_doProcessBlock"),_doFinalize:r(function(){var c=this._data,f=c.words,d=this._nDataBytes*8,w=c.sigBytes*8;f[w>>>5]|=128<<24-w%32,f[(w+128>>>10<<5)+30]=Math.floor(d/4294967296),f[(w+128>>>10<<5)+31]=d,c.sigBytes=f.length*4,this._process();var m=this._hash.toX32();return m},"_doFinalize"),clone:r(function(){var c=S.clone.call(this);return c._hash=this._hash.clone(),c},"clone"),blockSize:1024/32});I.SHA512=S._createHelper(H),I.HmacSHA512=S._createHmacHelper(H)}(),R.SHA512})}($i)),$i.exports}r(vv,"requireSha512");var qi={exports:{}},B7=qi.exports,KV;function h7(){return KV||(KV=1,function(t,E){(function(R,I,N){t.exports=I(JA(),uM(),vv())})(B7,function(R){return function(){var I=R,N=I.x64,S=N.Word,T=N.WordArray,i=I.algo,o=i.SHA512,C=i.SHA384=o.extend({_doReset:r(function(){this._hash=new T.init([new S.init(3418070365,3238371032),new S.init(1654270250,914150663),new S.init(2438529370,812702999),new S.init(355462360,4144912697),new S.init(1731405415,4290775857),new S.init(2394180231,1750603025),new S.init(3675008525,1694076839),new S.init(1203062813,3204075428)])},"_doReset"),_doFinalize:r(function(){var U=o._doFinalize.call(this);return U.sigBytes-=16,U},"_doFinalize")});I.SHA384=o._createHelper(C),I.HmacSHA384=o._createHmacHelper(C)}(),R.SHA384})}(qi)),qi.exports}r(h7,"requireSha384");var zi={exports:{}},f7=zi.exports,FV;function d7(){return FV||(FV=1,function(t,E){(function(R,I,N){t.exports=I(JA(),uM())})(f7,function(R){return function(I){var N=R,S=N.lib,T=S.WordArray,i=S.Hasher,o=N.x64,C=o.Word,U=N.algo,_=[],G=[],H=[];(function(){for(var d=1,w=0,m=0;m<24;m++){_[d+5*w]=(m+1)*(m+2)/2%64;var W=w%5,v=(2*d+3*w)%5;d=W,w=v}for(var d=0;d<5;d++)for(var w=0;w<5;w++)G[d+5*w]=w+(2*d+3*w)%5*5;for(var $=1,Oe=0;Oe<24;Oe++){for(var q=0,Ie=0,le=0;le<7;le++){if($&1){var Ae=(1<<le)-1;Ae<32?Ie^=1<<Ae:q^=1<<Ae-32}$&128?$=$<<1^113:$<<=1}H[Oe]=C.create(q,Ie)}})();var c=[];(function(){for(var d=0;d<25;d++)c[d]=C.create()})();var f=U.SHA3=i.extend({cfg:i.cfg.extend({outputLength:512}),_doReset:r(function(){for(var d=this._state=[],w=0;w<25;w++)d[w]=new C.init;this.blockSize=(1600-2*this.cfg.outputLength)/32},"_doReset"),_doProcessBlock:r(function(d,w){for(var m=this._state,W=this.blockSize/2,v=0;v<W;v++){var $=d[w+2*v],Oe=d[w+2*v+1];$=($<<8|$>>>24)&16711935|($<<24|$>>>8)&4278255360,Oe=(Oe<<8|Oe>>>24)&16711935|(Oe<<24|Oe>>>8)&4278255360;var q=m[v];q.high^=Oe,q.low^=$}for(var Ie=0;Ie<24;Ie++){for(var le=0;le<5;le++){for(var Ae=0,Re=0,se=0;se<5;se++){var q=m[le+5*se];Ae^=q.high,Re^=q.low}var ie=c[le];ie.high=Ae,ie.low=Re}for(var le=0;le<5;le++)for(var He=c[(le+4)%5],ve=c[(le+1)%5],xe=ve.high,EA=ve.low,Ae=He.high^(xe<<1|EA>>>31),Re=He.low^(EA<<1|xe>>>31),se=0;se<5;se++){var q=m[le+5*se];q.high^=Ae,q.low^=Re}for(var NA=1;NA<25;NA++){var Ae,Re,q=m[NA],rA=q.high,Be=q.low,ae=_[NA];ae<32?(Ae=rA<<ae|Be>>>32-ae,Re=Be<<ae|rA>>>32-ae):(Ae=Be<<ae-32|rA>>>64-ae,Re=rA<<ae-32|Be>>>64-ae);var Pe=c[G[NA]];Pe.high=Ae,Pe.low=Re}var Te=c[0],Ge=m[0];Te.high=Ge.high,Te.low=Ge.low;for(var le=0;le<5;le++)for(var se=0;se<5;se++){var NA=le+5*se,q=m[NA],ze=c[NA],eA=c[(le+1)%5+5*se],GA=c[(le+2)%5+5*se];q.high=ze.high^~eA.high&GA.high,q.low=ze.low^~eA.low&GA.low}var q=m[0],IA=H[Ie];q.high^=IA.high,q.low^=IA.low}},"_doProcessBlock"),_doFinalize:r(function(){var d=this._data,w=d.words;this._nDataBytes*8;var m=d.sigBytes*8,W=this.blockSize*32;w[m>>>5]|=1<<24-m%32,w[(I.ceil((m+1)/W)*W>>>5)-1]|=128,d.sigBytes=w.length*4,this._process();for(var v=this._state,$=this.cfg.outputLength/8,Oe=$/8,q=[],Ie=0;Ie<Oe;Ie++){var le=v[Ie],Ae=le.high,Re=le.low;Ae=(Ae<<8|Ae>>>24)&16711935|(Ae<<24|Ae>>>8)&4278255360,Re=(Re<<8|Re>>>24)&16711935|(Re<<24|Re>>>8)&4278255360,q.push(Re),q.push(Ae)}return new T.init(q,$)},"_doFinalize"),clone:r(function(){for(var d=i.clone.call(this),w=d._state=this._state.slice(0),m=0;m<25;m++)w[m]=w[m].clone();return d},"clone")});N.SHA3=i._createHelper(f),N.HmacSHA3=i._createHmacHelper(f)}(Math),R.SHA3})}(zi)),zi.exports}r(d7,"requireSha3");var ji={exports:{}},K7=ji.exports,YV;function F7(){return YV||(YV=1,function(t,E){(function(R,I){t.exports=I(JA())})(K7,function(R){/** @preserve
			(c) 2012 by Cédric Mesnil. All rights reserved.

			Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

			    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
			    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

			THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
			*/return function(I){var N=R,S=N.lib,T=S.WordArray,i=S.Hasher,o=N.algo,C=T.create([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13]),U=T.create([5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11]),_=T.create([11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6]),G=T.create([8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]),H=T.create([0,1518500249,1859775393,2400959708,2840853838]),c=T.create([1352829926,1548603684,1836072691,2053994217,0]),f=o.RIPEMD160=i.extend({_doReset:r(function(){this._hash=T.create([1732584193,4023233417,2562383102,271733878,3285377520])},"_doReset"),_doProcessBlock:r(function(Oe,q){for(var Ie=0;Ie<16;Ie++){var le=q+Ie,Ae=Oe[le];Oe[le]=(Ae<<8|Ae>>>24)&16711935|(Ae<<24|Ae>>>8)&4278255360}var Re=this._hash.words,se=H.words,ie=c.words,He=C.words,ve=U.words,xe=_.words,EA=G.words,NA,rA,Be,ae,Pe,Te,Ge,ze,eA,GA;Te=NA=Re[0],Ge=rA=Re[1],ze=Be=Re[2],eA=ae=Re[3],GA=Pe=Re[4];for(var IA,Ie=0;Ie<80;Ie+=1)IA=NA+Oe[q+He[Ie]]|0,Ie<16?IA+=d(rA,Be,ae)+se[0]:Ie<32?IA+=w(rA,Be,ae)+se[1]:Ie<48?IA+=m(rA,Be,ae)+se[2]:Ie<64?IA+=W(rA,Be,ae)+se[3]:IA+=v(rA,Be,ae)+se[4],IA=IA|0,IA=$(IA,xe[Ie]),IA=IA+Pe|0,NA=Pe,Pe=ae,ae=$(Be,10),Be=rA,rA=IA,IA=Te+Oe[q+ve[Ie]]|0,Ie<16?IA+=v(Ge,ze,eA)+ie[0]:Ie<32?IA+=W(Ge,ze,eA)+ie[1]:Ie<48?IA+=m(Ge,ze,eA)+ie[2]:Ie<64?IA+=w(Ge,ze,eA)+ie[3]:IA+=d(Ge,ze,eA)+ie[4],IA=IA|0,IA=$(IA,EA[Ie]),IA=IA+GA|0,Te=GA,GA=eA,eA=$(ze,10),ze=Ge,Ge=IA;IA=Re[1]+Be+eA|0,Re[1]=Re[2]+ae+GA|0,Re[2]=Re[3]+Pe+Te|0,Re[3]=Re[4]+NA+Ge|0,Re[4]=Re[0]+rA+ze|0,Re[0]=IA},"_doProcessBlock"),_doFinalize:r(function(){var Oe=this._data,q=Oe.words,Ie=this._nDataBytes*8,le=Oe.sigBytes*8;q[le>>>5]|=128<<24-le%32,q[(le+64>>>9<<4)+14]=(Ie<<8|Ie>>>24)&16711935|(Ie<<24|Ie>>>8)&4278255360,Oe.sigBytes=(q.length+1)*4,this._process();for(var Ae=this._hash,Re=Ae.words,se=0;se<5;se++){var ie=Re[se];Re[se]=(ie<<8|ie>>>24)&16711935|(ie<<24|ie>>>8)&4278255360}return Ae},"_doFinalize"),clone:r(function(){var Oe=i.clone.call(this);return Oe._hash=this._hash.clone(),Oe},"clone")});function d(Oe,q,Ie){return Oe^q^Ie}r(d,"f1");function w(Oe,q,Ie){return Oe&q|~Oe&Ie}r(w,"f2");function m(Oe,q,Ie){return(Oe|~q)^Ie}r(m,"f3");function W(Oe,q,Ie){return Oe&Ie|q&~Ie}r(W,"f4");function v(Oe,q,Ie){return Oe^(q|~Ie)}r(v,"f5");function $(Oe,q){return Oe<<q|Oe>>>32-q}r($,"rotl"),N.RIPEMD160=i._createHelper(f),N.HmacRIPEMD160=i._createHmacHelper(f)}(),R.RIPEMD160})}(ji)),ji.exports}r(F7,"requireRipemd160");var eo={exports:{}},Y7=eo.exports,WV;function ec(){return WV||(WV=1,function(t,E){(function(R,I){t.exports=I(JA())})(Y7,function(R){(function(){var I=R,N=I.lib,S=N.Base,T=I.enc,i=T.Utf8,o=I.algo;o.HMAC=S.extend({init:r(function(C,U){C=this._hasher=new C.init,typeof U=="string"&&(U=i.parse(U));var _=C.blockSize,G=_*4;U.sigBytes>G&&(U=C.finalize(U)),U.clamp();for(var H=this._oKey=U.clone(),c=this._iKey=U.clone(),f=H.words,d=c.words,w=0;w<_;w++)f[w]^=1549556828,d[w]^=909522486;H.sigBytes=c.sigBytes=G,this.reset()},"init"),reset:r(function(){var C=this._hasher;C.reset(),C.update(this._iKey)},"reset"),update:r(function(C){return this._hasher.update(C),this},"update"),finalize:r(function(C){var U=this._hasher,_=U.finalize(C);U.reset();var G=U.finalize(this._oKey.clone().concat(_));return G},"finalize")})})()})}(eo)),eo.exports}r(ec,"requireHmac");var Ao={exports:{}},W7=Ao.exports,mV;function m7(){return mV||(mV=1,function(t,E){(function(R,I,N){t.exports=I(JA(),j1(),ec())})(W7,function(R){return function(){var I=R,N=I.lib,S=N.Base,T=N.WordArray,i=I.algo,o=i.SHA256,C=i.HMAC,U=i.PBKDF2=S.extend({cfg:S.extend({keySize:128/32,hasher:o,iterations:25e4}),init:r(function(_){this.cfg=this.cfg.extend(_)},"init"),compute:r(function(_,G){for(var H=this.cfg,c=C.create(H.hasher,_),f=T.create(),d=T.create([1]),w=f.words,m=d.words,W=H.keySize,v=H.iterations;w.length<W;){var $=c.update(G).finalize(d);c.reset();for(var Oe=$.words,q=Oe.length,Ie=$,le=1;le<v;le++){Ie=c.finalize(Ie),c.reset();for(var Ae=Ie.words,Re=0;Re<q;Re++)Oe[Re]^=Ae[Re]}f.concat($),m[0]++}return f.sigBytes=W*4,f},"compute")});I.PBKDF2=function(_,G,H){return U.create(H).compute(_,G)}}(),R.PBKDF2})}(Ao)),Ao.exports}r(m7,"requirePbkdf2");var Eo={exports:{}},g7=Eo.exports,gV;function eN(){return gV||(gV=1,function(t,E){(function(R,I,N){t.exports=I(JA(),Vv(),ec())})(g7,function(R){return function(){var I=R,N=I.lib,S=N.Base,T=N.WordArray,i=I.algo,o=i.MD5,C=i.EvpKDF=S.extend({cfg:S.extend({keySize:128/32,hasher:o,iterations:1}),init:r(function(U){this.cfg=this.cfg.extend(U)},"init"),compute:r(function(U,_){for(var G,H=this.cfg,c=H.hasher.create(),f=T.create(),d=f.words,w=H.keySize,m=H.iterations;d.length<w;){G&&c.update(G),G=c.update(U).finalize(_),c.reset();for(var W=1;W<m;W++)G=c.finalize(G),c.reset();f.concat(G)}return f.sigBytes=w*4,f},"compute")});I.EvpKDF=function(U,_,G){return C.create(G).compute(U,_)}}(),R.EvpKDF})}(Eo)),Eo.exports}r(eN,"requireEvpkdf");var to={exports:{}},p7=to.exports,pV;function Xt(){return pV||(pV=1,function(t,E){(function(R,I,N){t.exports=I(JA(),eN())})(p7,function(R){R.lib.Cipher||function(I){var N=R,S=N.lib,T=S.Base,i=S.WordArray,o=S.BufferedBlockAlgorithm,C=N.enc;C.Utf8;var U=C.Base64,_=N.algo,G=_.EvpKDF,H=S.Cipher=o.extend({cfg:T.extend(),createEncryptor:r(function(Ae,Re){return this.create(this._ENC_XFORM_MODE,Ae,Re)},"createEncryptor"),createDecryptor:r(function(Ae,Re){return this.create(this._DEC_XFORM_MODE,Ae,Re)},"createDecryptor"),init:r(function(Ae,Re,se){this.cfg=this.cfg.extend(se),this._xformMode=Ae,this._key=Re,this.reset()},"init"),reset:r(function(){o.reset.call(this),this._doReset()},"reset"),process:r(function(Ae){return this._append(Ae),this._process()},"process"),finalize:r(function(Ae){Ae&&this._append(Ae);var Re=this._doFinalize();return Re},"finalize"),keySize:128/32,ivSize:128/32,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function(){function Ae(Re){return typeof Re=="string"?le:Oe}return r(Ae,"selectCipherStrategy"),function(Re){return{encrypt:r(function(se,ie,He){return Ae(ie).encrypt(Re,se,ie,He)},"encrypt"),decrypt:r(function(se,ie,He){return Ae(ie).decrypt(Re,se,ie,He)},"decrypt")}}}()});S.StreamCipher=H.extend({_doFinalize:r(function(){var Ae=this._process(!0);return Ae},"_doFinalize"),blockSize:1});var c=N.mode={},f=S.BlockCipherMode=T.extend({createEncryptor:r(function(Ae,Re){return this.Encryptor.create(Ae,Re)},"createEncryptor"),createDecryptor:r(function(Ae,Re){return this.Decryptor.create(Ae,Re)},"createDecryptor"),init:r(function(Ae,Re){this._cipher=Ae,this._iv=Re},"init")}),d=c.CBC=function(){var Ae=f.extend();Ae.Encryptor=Ae.extend({processBlock:r(function(se,ie){var He=this._cipher,ve=He.blockSize;Re.call(this,se,ie,ve),He.encryptBlock(se,ie),this._prevBlock=se.slice(ie,ie+ve)},"processBlock")}),Ae.Decryptor=Ae.extend({processBlock:r(function(se,ie){var He=this._cipher,ve=He.blockSize,xe=se.slice(ie,ie+ve);He.decryptBlock(se,ie),Re.call(this,se,ie,ve),this._prevBlock=xe},"processBlock")});function Re(se,ie,He){var ve,xe=this._iv;xe?(ve=xe,this._iv=I):ve=this._prevBlock;for(var EA=0;EA<He;EA++)se[ie+EA]^=ve[EA]}return r(Re,"xorBlock"),Ae}(),w=N.pad={},m=w.Pkcs7={pad:r(function(Ae,Re){for(var se=Re*4,ie=se-Ae.sigBytes%se,He=ie<<24|ie<<16|ie<<8|ie,ve=[],xe=0;xe<ie;xe+=4)ve.push(He);var EA=i.create(ve,ie);Ae.concat(EA)},"pad"),unpad:r(function(Ae){var Re=Ae.words[Ae.sigBytes-1>>>2]&255;Ae.sigBytes-=Re},"unpad")};S.BlockCipher=H.extend({cfg:H.cfg.extend({mode:d,padding:m}),reset:r(function(){var Ae;H.reset.call(this);var Re=this.cfg,se=Re.iv,ie=Re.mode;this._xformMode==this._ENC_XFORM_MODE?Ae=ie.createEncryptor:(Ae=ie.createDecryptor,this._minBufferSize=1),this._mode&&this._mode.__creator==Ae?this._mode.init(this,se&&se.words):(this._mode=Ae.call(ie,this,se&&se.words),this._mode.__creator=Ae)},"reset"),_doProcessBlock:r(function(Ae,Re){this._mode.processBlock(Ae,Re)},"_doProcessBlock"),_doFinalize:r(function(){var Ae,Re=this.cfg.padding;return this._xformMode==this._ENC_XFORM_MODE?(Re.pad(this._data,this.blockSize),Ae=this._process(!0)):(Ae=this._process(!0),Re.unpad(Ae)),Ae},"_doFinalize"),blockSize:128/32});var W=S.CipherParams=T.extend({init:r(function(Ae){this.mixIn(Ae)},"init"),toString:r(function(Ae){return(Ae||this.formatter).stringify(this)},"toString")}),v=N.format={},$=v.OpenSSL={stringify:r(function(Ae){var Re,se=Ae.ciphertext,ie=Ae.salt;return ie?Re=i.create([1398893684,1701076831]).concat(ie).concat(se):Re=se,Re.toString(U)},"stringify"),parse:r(function(Ae){var Re,se=U.parse(Ae),ie=se.words;return ie[0]==1398893684&&ie[1]==1701076831&&(Re=i.create(ie.slice(2,4)),ie.splice(0,4),se.sigBytes-=16),W.create({ciphertext:se,salt:Re})},"parse")},Oe=S.SerializableCipher=T.extend({cfg:T.extend({format:$}),encrypt:r(function(Ae,Re,se,ie){ie=this.cfg.extend(ie);var He=Ae.createEncryptor(se,ie),ve=He.finalize(Re),xe=He.cfg;return W.create({ciphertext:ve,key:se,iv:xe.iv,algorithm:Ae,mode:xe.mode,padding:xe.padding,blockSize:Ae.blockSize,formatter:ie.format})},"encrypt"),decrypt:r(function(Ae,Re,se,ie){ie=this.cfg.extend(ie),Re=this._parse(Re,ie.format);var He=Ae.createDecryptor(se,ie).finalize(Re.ciphertext);return He},"decrypt"),_parse:r(function(Ae,Re){return typeof Ae=="string"?Re.parse(Ae,this):Ae},"_parse")}),q=N.kdf={},Ie=q.OpenSSL={execute:r(function(Ae,Re,se,ie,He){if(ie||(ie=i.random(64/8)),He)var ve=G.create({keySize:Re+se,hasher:He}).compute(Ae,ie);else var ve=G.create({keySize:Re+se}).compute(Ae,ie);var xe=i.create(ve.words.slice(Re),se*4);return ve.sigBytes=Re*4,W.create({key:ve,iv:xe,salt:ie})},"execute")},le=S.PasswordBasedCipher=Oe.extend({cfg:Oe.cfg.extend({kdf:Ie}),encrypt:r(function(Ae,Re,se,ie){ie=this.cfg.extend(ie);var He=ie.kdf.execute(se,Ae.keySize,Ae.ivSize,ie.salt,ie.hasher);ie.iv=He.iv;var ve=Oe.encrypt.call(this,Ae,Re,He.key,ie);return ve.mixIn(He),ve},"encrypt"),decrypt:r(function(Ae,Re,se,ie){ie=this.cfg.extend(ie),Re=this._parse(Re,ie.format);var He=ie.kdf.execute(se,Ae.keySize,Ae.ivSize,Re.salt,ie.hasher);ie.iv=He.iv;var ve=Oe.decrypt.call(this,Ae,Re,He.key,ie);return ve},"decrypt")})}()})}(to)),to.exports}r(Xt,"requireCipherCore");var Ro={exports:{}},y7=Ro.exports,yV;function w7(){return yV||(yV=1,function(t,E){(function(R,I,N){t.exports=I(JA(),Xt())})(y7,function(R){return R.mode.CFB=function(){var I=R.lib.BlockCipherMode.extend();I.Encryptor=I.extend({processBlock:r(function(S,T){var i=this._cipher,o=i.blockSize;N.call(this,S,T,o,i),this._prevBlock=S.slice(T,T+o)},"processBlock")}),I.Decryptor=I.extend({processBlock:r(function(S,T){var i=this._cipher,o=i.blockSize,C=S.slice(T,T+o);N.call(this,S,T,o,i),this._prevBlock=C},"processBlock")});function N(S,T,i,o){var C,U=this._iv;U?(C=U.slice(0),this._iv=void 0):C=this._prevBlock,o.encryptBlock(C,0);for(var _=0;_<i;_++)S[T+_]^=C[_]}return r(N,"generateKeystreamAndEncrypt"),I}(),R.mode.CFB})}(Ro)),Ro.exports}r(w7,"requireModeCfb");var Oo={exports:{}},V7=Oo.exports,wV;function v7(){return wV||(wV=1,function(t,E){(function(R,I,N){t.exports=I(JA(),Xt())})(V7,function(R){return R.mode.CTR=function(){var I=R.lib.BlockCipherMode.extend(),N=I.Encryptor=I.extend({processBlock:r(function(S,T){var i=this._cipher,o=i.blockSize,C=this._iv,U=this._counter;C&&(U=this._counter=C.slice(0),this._iv=void 0);var _=U.slice(0);i.encryptBlock(_,0),U[o-1]=U[o-1]+1|0;for(var G=0;G<o;G++)S[T+G]^=_[G]},"processBlock")});return I.Decryptor=N,I}(),R.mode.CTR})}(Oo)),Oo.exports}r(v7,"requireModeCtr");var Io={exports:{}},x7=Io.exports,VV;function b7(){return VV||(VV=1,function(t,E){(function(R,I,N){t.exports=I(JA(),Xt())})(x7,function(R){/** @preserve
 * Counter block mode compatible with  Dr Brian Gladman fileenc.c
 * derived from CryptoJS.mode.CTR
 * Jan Hruby jhruby.web@gmail.com
 */return R.mode.CTRGladman=function(){var I=R.lib.BlockCipherMode.extend();function N(i){if((i>>24&255)===255){var o=i>>16&255,C=i>>8&255,U=i&255;o===255?(o=0,C===255?(C=0,U===255?U=0:++U):++C):++o,i=0,i+=o<<16,i+=C<<8,i+=U}else i+=1<<24;return i}r(N,"incWord");function S(i){return(i[0]=N(i[0]))===0&&(i[1]=N(i[1])),i}r(S,"incCounter");var T=I.Encryptor=I.extend({processBlock:r(function(i,o){var C=this._cipher,U=C.blockSize,_=this._iv,G=this._counter;_&&(G=this._counter=_.slice(0),this._iv=void 0),S(G);var H=G.slice(0);C.encryptBlock(H,0);for(var c=0;c<U;c++)i[o+c]^=H[c]},"processBlock")});return I.Decryptor=T,I}(),R.mode.CTRGladman})}(Io)),Io.exports}r(b7,"requireModeCtrGladman");var Lo={exports:{}},Z7=Lo.exports,vV;function k7(){return vV||(vV=1,function(t,E){(function(R,I,N){t.exports=I(JA(),Xt())})(Z7,function(R){return R.mode.OFB=function(){var I=R.lib.BlockCipherMode.extend(),N=I.Encryptor=I.extend({processBlock:r(function(S,T){var i=this._cipher,o=i.blockSize,C=this._iv,U=this._keystream;C&&(U=this._keystream=C.slice(0),this._iv=void 0),i.encryptBlock(U,0);for(var _=0;_<o;_++)S[T+_]^=U[_]},"processBlock")});return I.Decryptor=N,I}(),R.mode.OFB})}(Lo)),Lo.exports}r(k7,"requireModeOfb");var No={exports:{}},X7=No.exports,xV;function Q7(){return xV||(xV=1,function(t,E){(function(R,I,N){t.exports=I(JA(),Xt())})(X7,function(R){return R.mode.ECB=function(){var I=R.lib.BlockCipherMode.extend();return I.Encryptor=I.extend({processBlock:r(function(N,S){this._cipher.encryptBlock(N,S)},"processBlock")}),I.Decryptor=I.extend({processBlock:r(function(N,S){this._cipher.decryptBlock(N,S)},"processBlock")}),I}(),R.mode.ECB})}(No)),No.exports}r(Q7,"requireModeEcb");var so={exports:{}},J7=so.exports,bV;function $7(){return bV||(bV=1,function(t,E){(function(R,I,N){t.exports=I(JA(),Xt())})(J7,function(R){return R.pad.AnsiX923={pad:r(function(I,N){var S=I.sigBytes,T=N*4,i=T-S%T,o=S+i-1;I.clamp(),I.words[o>>>2]|=i<<24-o%4*8,I.sigBytes+=i},"pad"),unpad:r(function(I){var N=I.words[I.sigBytes-1>>>2]&255;I.sigBytes-=N},"unpad")},R.pad.Ansix923})}(so)),so.exports}r($7,"requirePadAnsix923");var So={exports:{}},q7=So.exports,ZV;function z7(){return ZV||(ZV=1,function(t,E){(function(R,I,N){t.exports=I(JA(),Xt())})(q7,function(R){return R.pad.Iso10126={pad:r(function(I,N){var S=N*4,T=S-I.sigBytes%S;I.concat(R.lib.WordArray.random(T-1)).concat(R.lib.WordArray.create([T<<24],1))},"pad"),unpad:r(function(I){var N=I.words[I.sigBytes-1>>>2]&255;I.sigBytes-=N},"unpad")},R.pad.Iso10126})}(So)),So.exports}r(z7,"requirePadIso10126");var To={exports:{}},j7=To.exports,kV;function eb(){return kV||(kV=1,function(t,E){(function(R,I,N){t.exports=I(JA(),Xt())})(j7,function(R){return R.pad.Iso97971={pad:r(function(I,N){I.concat(R.lib.WordArray.create([2147483648],1)),R.pad.ZeroPadding.pad(I,N)},"pad"),unpad:r(function(I){R.pad.ZeroPadding.unpad(I),I.sigBytes--},"unpad")},R.pad.Iso97971})}(To)),To.exports}r(eb,"requirePadIso97971");var no={exports:{}},Ab=no.exports,XV;function Eb(){return XV||(XV=1,function(t,E){(function(R,I,N){t.exports=I(JA(),Xt())})(Ab,function(R){return R.pad.ZeroPadding={pad:r(function(I,N){var S=N*4;I.clamp(),I.sigBytes+=S-(I.sigBytes%S||S)},"pad"),unpad:r(function(I){for(var N=I.words,S=I.sigBytes-1,S=I.sigBytes-1;S>=0;S--)if(N[S>>>2]>>>24-S%4*8&255){I.sigBytes=S+1;break}},"unpad")},R.pad.ZeroPadding})}(no)),no.exports}r(Eb,"requirePadZeropadding");var ao={exports:{}},tb=ao.exports,QV;function Rb(){return QV||(QV=1,function(t,E){(function(R,I,N){t.exports=I(JA(),Xt())})(tb,function(R){return R.pad.NoPadding={pad:r(function(){},"pad"),unpad:r(function(){},"unpad")},R.pad.NoPadding})}(ao)),ao.exports}r(Rb,"requirePadNopadding");var ro={exports:{}},Ob=ro.exports,JV;function Ib(){return JV||(JV=1,function(t,E){(function(R,I,N){t.exports=I(JA(),Xt())})(Ob,function(R){return function(I){var N=R,S=N.lib,T=S.CipherParams,i=N.enc,o=i.Hex,C=N.format;C.Hex={stringify:r(function(U){return U.ciphertext.toString(o)},"stringify"),parse:r(function(U){var _=o.parse(U);return T.create({ciphertext:_})},"parse")}}(),R.format.Hex})}(ro)),ro.exports}r(Ib,"requireFormatHex");var io={exports:{}},Lb=io.exports,$V;function Nb(){return $V||($V=1,function(t,E){(function(R,I,N){t.exports=I(JA(),Cs(),ls(),eN(),Xt())})(Lb,function(R){return function(){var I=R,N=I.lib,S=N.BlockCipher,T=I.algo,i=[],o=[],C=[],U=[],_=[],G=[],H=[],c=[],f=[],d=[];(function(){for(var W=[],v=0;v<256;v++)v<128?W[v]=v<<1:W[v]=v<<1^283;for(var $=0,Oe=0,v=0;v<256;v++){var q=Oe^Oe<<1^Oe<<2^Oe<<3^Oe<<4;q=q>>>8^q&255^99,i[$]=q,o[q]=$;var Ie=W[$],le=W[Ie],Ae=W[le],Re=W[q]*257^q*16843008;C[$]=Re<<24|Re>>>8,U[$]=Re<<16|Re>>>16,_[$]=Re<<8|Re>>>24,G[$]=Re;var Re=Ae*16843009^le*65537^Ie*257^$*16843008;H[q]=Re<<24|Re>>>8,c[q]=Re<<16|Re>>>16,f[q]=Re<<8|Re>>>24,d[q]=Re,$?($=Ie^W[W[W[Ae^Ie]]],Oe^=W[W[Oe]]):$=Oe=1}})();var w=[0,1,2,4,8,16,32,64,128,27,54],m=T.AES=S.extend({_doReset:r(function(){var W;if(!(this._nRounds&&this._keyPriorReset===this._key)){for(var v=this._keyPriorReset=this._key,$=v.words,Oe=v.sigBytes/4,q=this._nRounds=Oe+6,Ie=(q+1)*4,le=this._keySchedule=[],Ae=0;Ae<Ie;Ae++)Ae<Oe?le[Ae]=$[Ae]:(W=le[Ae-1],Ae%Oe?Oe>6&&Ae%Oe==4&&(W=i[W>>>24]<<24|i[W>>>16&255]<<16|i[W>>>8&255]<<8|i[W&255]):(W=W<<8|W>>>24,W=i[W>>>24]<<24|i[W>>>16&255]<<16|i[W>>>8&255]<<8|i[W&255],W^=w[Ae/Oe|0]<<24),le[Ae]=le[Ae-Oe]^W);for(var Re=this._invKeySchedule=[],se=0;se<Ie;se++){var Ae=Ie-se;if(se%4)var W=le[Ae];else var W=le[Ae-4];se<4||Ae<=4?Re[se]=W:Re[se]=H[i[W>>>24]]^c[i[W>>>16&255]]^f[i[W>>>8&255]]^d[i[W&255]]}}},"_doReset"),encryptBlock:r(function(W,v){this._doCryptBlock(W,v,this._keySchedule,C,U,_,G,i)},"encryptBlock"),decryptBlock:r(function(W,v){var $=W[v+1];W[v+1]=W[v+3],W[v+3]=$,this._doCryptBlock(W,v,this._invKeySchedule,H,c,f,d,o);var $=W[v+1];W[v+1]=W[v+3],W[v+3]=$},"decryptBlock"),_doCryptBlock:r(function(W,v,$,Oe,q,Ie,le,Ae){for(var Re=this._nRounds,se=W[v]^$[0],ie=W[v+1]^$[1],He=W[v+2]^$[2],ve=W[v+3]^$[3],xe=4,EA=1;EA<Re;EA++){var NA=Oe[se>>>24]^q[ie>>>16&255]^Ie[He>>>8&255]^le[ve&255]^$[xe++],rA=Oe[ie>>>24]^q[He>>>16&255]^Ie[ve>>>8&255]^le[se&255]^$[xe++],Be=Oe[He>>>24]^q[ve>>>16&255]^Ie[se>>>8&255]^le[ie&255]^$[xe++],ae=Oe[ve>>>24]^q[se>>>16&255]^Ie[ie>>>8&255]^le[He&255]^$[xe++];se=NA,ie=rA,He=Be,ve=ae}var NA=(Ae[se>>>24]<<24|Ae[ie>>>16&255]<<16|Ae[He>>>8&255]<<8|Ae[ve&255])^$[xe++],rA=(Ae[ie>>>24]<<24|Ae[He>>>16&255]<<16|Ae[ve>>>8&255]<<8|Ae[se&255])^$[xe++],Be=(Ae[He>>>24]<<24|Ae[ve>>>16&255]<<16|Ae[se>>>8&255]<<8|Ae[ie&255])^$[xe++],ae=(Ae[ve>>>24]<<24|Ae[se>>>16&255]<<16|Ae[ie>>>8&255]<<8|Ae[He&255])^$[xe++];W[v]=NA,W[v+1]=rA,W[v+2]=Be,W[v+3]=ae},"_doCryptBlock"),keySize:256/32});I.AES=S._createHelper(m)}(),R.AES})}(io)),io.exports}r(Nb,"requireAes");var oo={exports:{}},sb=oo.exports,qV;function Sb(){return qV||(qV=1,function(t,E){(function(R,I,N){t.exports=I(JA(),Cs(),ls(),eN(),Xt())})(sb,function(R){return function(){var I=R,N=I.lib,S=N.WordArray,T=N.BlockCipher,i=I.algo,o=[57,49,41,33,25,17,9,1,58,50,42,34,26,18,10,2,59,51,43,35,27,19,11,3,60,52,44,36,63,55,47,39,31,23,15,7,62,54,46,38,30,22,14,6,61,53,45,37,29,21,13,5,28,20,12,4],C=[14,17,11,24,1,5,3,28,15,6,21,10,23,19,12,4,26,8,16,7,27,20,13,2,41,52,31,37,47,55,30,40,51,45,33,48,44,49,39,56,34,53,46,42,50,36,29,32],U=[1,2,4,6,8,10,12,14,15,17,19,21,23,25,27,28],_=[{0:8421888,268435456:32768,536870912:8421378,805306368:2,1073741824:512,1342177280:8421890,1610612736:8389122,1879048192:8388608,2147483648:514,2415919104:8389120,2684354560:33280,2952790016:8421376,3221225472:32770,3489660928:8388610,3758096384:0,4026531840:33282,134217728:0,402653184:8421890,671088640:33282,939524096:32768,1207959552:8421888,1476395008:512,1744830464:8421378,2013265920:2,2281701376:8389120,2550136832:33280,2818572288:8421376,3087007744:8389122,3355443200:8388610,3623878656:32770,3892314112:514,4160749568:8388608,1:32768,268435457:2,536870913:8421888,805306369:8388608,1073741825:8421378,1342177281:33280,1610612737:512,1879048193:8389122,2147483649:8421890,2415919105:8421376,2684354561:8388610,2952790017:33282,3221225473:514,3489660929:8389120,3758096385:32770,4026531841:0,134217729:8421890,402653185:8421376,671088641:8388608,939524097:512,1207959553:32768,1476395009:8388610,1744830465:2,2013265921:33282,2281701377:32770,2550136833:8389122,2818572289:514,3087007745:8421888,3355443201:8389120,3623878657:0,3892314113:33280,4160749569:8421378},{0:1074282512,16777216:16384,33554432:524288,50331648:1074266128,67108864:1073741840,83886080:1074282496,100663296:1073758208,117440512:16,134217728:540672,150994944:1073758224,167772160:1073741824,184549376:540688,201326592:524304,218103808:0,234881024:16400,251658240:1074266112,8388608:1073758208,25165824:540688,41943040:16,58720256:1073758224,75497472:1074282512,92274688:1073741824,109051904:524288,125829120:1074266128,142606336:524304,159383552:0,176160768:16384,192937984:1074266112,209715200:1073741840,226492416:540672,243269632:1074282496,260046848:16400,268435456:0,285212672:1074266128,301989888:1073758224,318767104:1074282496,335544320:1074266112,352321536:16,369098752:540688,385875968:16384,402653184:16400,419430400:524288,436207616:524304,452984832:1073741840,469762048:540672,486539264:1073758208,503316480:1073741824,520093696:1074282512,276824064:540688,293601280:524288,310378496:1074266112,327155712:16384,343932928:1073758208,360710144:1074282512,377487360:16,394264576:1073741824,411041792:1074282496,427819008:1073741840,444596224:1073758224,461373440:524304,478150656:0,494927872:16400,511705088:1074266128,528482304:540672},{0:260,1048576:0,2097152:67109120,3145728:65796,4194304:65540,5242880:67108868,6291456:67174660,7340032:67174400,8388608:67108864,9437184:67174656,10485760:65792,11534336:67174404,12582912:67109124,13631488:65536,14680064:4,15728640:256,524288:67174656,1572864:67174404,2621440:0,3670016:67109120,4718592:67108868,5767168:65536,6815744:65540,7864320:260,8912896:4,9961472:256,11010048:67174400,12058624:65796,13107200:65792,14155776:67109124,15204352:67174660,16252928:67108864,16777216:67174656,17825792:65540,18874368:65536,19922944:67109120,20971520:256,22020096:67174660,23068672:67108868,24117248:0,25165824:67109124,26214400:67108864,27262976:4,28311552:65792,29360128:67174400,30408704:260,31457280:65796,32505856:67174404,17301504:67108864,18350080:260,19398656:67174656,20447232:0,21495808:65540,22544384:67109120,23592960:256,24641536:67174404,25690112:65536,26738688:67174660,27787264:65796,28835840:67108868,29884416:67109124,30932992:67174400,31981568:4,33030144:65792},{0:2151682048,65536:2147487808,131072:4198464,196608:2151677952,262144:0,327680:4198400,393216:2147483712,458752:4194368,524288:2147483648,589824:4194304,655360:64,720896:2147487744,786432:2151678016,851968:4160,917504:4096,983040:2151682112,32768:2147487808,98304:64,163840:2151678016,229376:2147487744,294912:4198400,360448:2151682112,425984:0,491520:2151677952,557056:4096,622592:2151682048,688128:4194304,753664:4160,819200:2147483648,884736:4194368,950272:4198464,1015808:2147483712,1048576:4194368,1114112:4198400,1179648:2147483712,1245184:0,1310720:4160,1376256:2151678016,1441792:2151682048,1507328:2147487808,1572864:2151682112,1638400:2147483648,1703936:2151677952,1769472:4198464,1835008:2147487744,1900544:4194304,1966080:64,2031616:4096,1081344:2151677952,1146880:2151682112,1212416:0,1277952:4198400,1343488:4194368,1409024:2147483648,1474560:2147487808,1540096:64,1605632:2147483712,1671168:4096,1736704:2147487744,1802240:2151678016,1867776:4160,1933312:2151682048,1998848:4194304,2064384:4198464},{0:128,4096:17039360,8192:262144,12288:536870912,16384:537133184,20480:16777344,24576:553648256,28672:262272,32768:16777216,36864:537133056,40960:536871040,45056:553910400,49152:553910272,53248:0,57344:17039488,61440:553648128,2048:17039488,6144:553648256,10240:128,14336:17039360,18432:262144,22528:537133184,26624:553910272,30720:536870912,34816:537133056,38912:0,43008:553910400,47104:16777344,51200:536871040,55296:553648128,59392:16777216,63488:262272,65536:262144,69632:128,73728:536870912,77824:553648256,81920:16777344,86016:553910272,90112:537133184,94208:16777216,98304:553910400,102400:553648128,106496:17039360,110592:537133056,114688:262272,118784:536871040,122880:0,126976:17039488,67584:553648256,71680:16777216,75776:17039360,79872:537133184,83968:536870912,88064:17039488,92160:128,96256:553910272,100352:262272,104448:553910400,108544:0,112640:553648128,116736:16777344,120832:262144,124928:537133056,129024:536871040},{0:268435464,256:8192,512:270532608,768:270540808,1024:268443648,1280:2097152,1536:2097160,1792:268435456,2048:0,2304:268443656,2560:2105344,2816:8,3072:270532616,3328:2105352,3584:8200,3840:270540800,128:270532608,384:270540808,640:8,896:2097152,1152:2105352,1408:268435464,1664:268443648,1920:8200,2176:2097160,2432:8192,2688:268443656,2944:270532616,3200:0,3456:270540800,3712:2105344,3968:268435456,4096:268443648,4352:270532616,4608:270540808,4864:8200,5120:2097152,5376:268435456,5632:268435464,5888:2105344,6144:2105352,6400:0,6656:8,6912:270532608,7168:8192,7424:268443656,7680:270540800,7936:2097160,4224:8,4480:2105344,4736:2097152,4992:268435464,5248:268443648,5504:8200,5760:270540808,6016:270532608,6272:270540800,6528:270532616,6784:8192,7040:2105352,7296:2097160,7552:0,7808:268435456,8064:268443656},{0:1048576,16:33555457,32:1024,48:1049601,64:34604033,80:0,96:1,112:34603009,128:33555456,144:1048577,160:33554433,176:34604032,192:34603008,208:1025,224:1049600,240:33554432,8:34603009,24:0,40:33555457,56:34604032,72:1048576,88:33554433,104:33554432,120:1025,136:1049601,152:33555456,168:34603008,184:1048577,200:1024,216:34604033,232:1,248:1049600,256:33554432,272:1048576,288:33555457,304:34603009,320:1048577,336:33555456,352:34604032,368:1049601,384:1025,400:34604033,416:1049600,432:1,448:0,464:34603008,480:33554433,496:1024,264:1049600,280:33555457,296:34603009,312:1,328:33554432,344:1048576,360:1025,376:34604032,392:33554433,408:34603008,424:0,440:34604033,456:1049601,472:1024,488:33555456,504:1048577},{0:134219808,1:131072,2:134217728,3:32,4:131104,5:134350880,6:134350848,7:2048,8:134348800,9:134219776,10:133120,11:134348832,12:2080,13:0,14:134217760,15:133152,2147483648:2048,2147483649:134350880,2147483650:134219808,2147483651:134217728,2147483652:134348800,2147483653:133120,2147483654:133152,2147483655:32,2147483656:134217760,2147483657:2080,2147483658:131104,2147483659:134350848,2147483660:0,2147483661:134348832,2147483662:134219776,2147483663:131072,16:133152,17:134350848,18:32,19:2048,20:134219776,21:134217760,22:134348832,23:131072,24:0,25:131104,26:134348800,27:134219808,28:134350880,29:133120,30:2080,31:134217728,2147483664:131072,2147483665:2048,2147483666:134348832,2147483667:133152,2147483668:32,2147483669:134348800,2147483670:134217728,2147483671:134219808,2147483672:134350880,2147483673:134217760,2147483674:134219776,2147483675:0,2147483676:133120,2147483677:2080,2147483678:131104,2147483679:134350848}],G=[4160749569,528482304,33030144,2064384,129024,8064,504,2147483679],H=i.DES=T.extend({_doReset:r(function(){for(var w=this._key,m=w.words,W=[],v=0;v<56;v++){var $=o[v]-1;W[v]=m[$>>>5]>>>31-$%32&1}for(var Oe=this._subKeys=[],q=0;q<16;q++){for(var Ie=Oe[q]=[],le=U[q],v=0;v<24;v++)Ie[v/6|0]|=W[(C[v]-1+le)%28]<<31-v%6,Ie[4+(v/6|0)]|=W[28+(C[v+24]-1+le)%28]<<31-v%6;Ie[0]=Ie[0]<<1|Ie[0]>>>31;for(var v=1;v<7;v++)Ie[v]=Ie[v]>>>(v-1)*4+3;Ie[7]=Ie[7]<<5|Ie[7]>>>27}for(var Ae=this._invSubKeys=[],v=0;v<16;v++)Ae[v]=Oe[15-v]},"_doReset"),encryptBlock:r(function(w,m){this._doCryptBlock(w,m,this._subKeys)},"encryptBlock"),decryptBlock:r(function(w,m){this._doCryptBlock(w,m,this._invSubKeys)},"decryptBlock"),_doCryptBlock:r(function(w,m,W){this._lBlock=w[m],this._rBlock=w[m+1],c.call(this,4,252645135),c.call(this,16,65535),f.call(this,2,858993459),f.call(this,8,16711935),c.call(this,1,1431655765);for(var v=0;v<16;v++){for(var $=W[v],Oe=this._lBlock,q=this._rBlock,Ie=0,le=0;le<8;le++)Ie|=_[le][((q^$[le])&G[le])>>>0];this._lBlock=q,this._rBlock=Oe^Ie}var Ae=this._lBlock;this._lBlock=this._rBlock,this._rBlock=Ae,c.call(this,1,1431655765),f.call(this,8,16711935),f.call(this,2,858993459),c.call(this,16,65535),c.call(this,4,252645135),w[m]=this._lBlock,w[m+1]=this._rBlock},"_doCryptBlock"),keySize:64/32,ivSize:64/32,blockSize:64/32});function c(w,m){var W=(this._lBlock>>>w^this._rBlock)&m;this._rBlock^=W,this._lBlock^=W<<w}r(c,"exchangeLR");function f(w,m){var W=(this._rBlock>>>w^this._lBlock)&m;this._lBlock^=W,this._rBlock^=W<<w}r(f,"exchangeRL"),I.DES=T._createHelper(H);var d=i.TripleDES=T.extend({_doReset:r(function(){var w=this._key,m=w.words;if(m.length!==2&&m.length!==4&&m.length<6)throw new Error("Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.");var W=m.slice(0,2),v=m.length<4?m.slice(0,2):m.slice(2,4),$=m.length<6?m.slice(0,2):m.slice(4,6);this._des1=H.createEncryptor(S.create(W)),this._des2=H.createEncryptor(S.create(v)),this._des3=H.createEncryptor(S.create($))},"_doReset"),encryptBlock:r(function(w,m){this._des1.encryptBlock(w,m),this._des2.decryptBlock(w,m),this._des3.encryptBlock(w,m)},"encryptBlock"),decryptBlock:r(function(w,m){this._des3.decryptBlock(w,m),this._des2.encryptBlock(w,m),this._des1.decryptBlock(w,m)},"decryptBlock"),keySize:192/32,ivSize:64/32,blockSize:64/32});I.TripleDES=T._createHelper(d)}(),R.TripleDES})}(oo)),oo.exports}r(Sb,"requireTripledes");var Co={exports:{}},Tb=Co.exports,zV;function nb(){return zV||(zV=1,function(t,E){(function(R,I,N){t.exports=I(JA(),Cs(),ls(),eN(),Xt())})(Tb,function(R){return function(){var I=R,N=I.lib,S=N.StreamCipher,T=I.algo,i=T.RC4=S.extend({_doReset:r(function(){for(var U=this._key,_=U.words,G=U.sigBytes,H=this._S=[],c=0;c<256;c++)H[c]=c;for(var c=0,f=0;c<256;c++){var d=c%G,w=_[d>>>2]>>>24-d%4*8&255;f=(f+H[c]+w)%256;var m=H[c];H[c]=H[f],H[f]=m}this._i=this._j=0},"_doReset"),_doProcessBlock:r(function(U,_){U[_]^=o.call(this)},"_doProcessBlock"),keySize:256/32,ivSize:0});function o(){for(var U=this._S,_=this._i,G=this._j,H=0,c=0;c<4;c++){_=(_+1)%256,G=(G+U[_])%256;var f=U[_];U[_]=U[G],U[G]=f,H|=U[(U[_]+U[G])%256]<<24-c*8}return this._i=_,this._j=G,H}r(o,"generateKeystreamWord"),I.RC4=S._createHelper(i);var C=T.RC4Drop=i.extend({cfg:i.cfg.extend({drop:192}),_doReset:r(function(){i._doReset.call(this);for(var U=this.cfg.drop;U>0;U--)o.call(this)},"_doReset")});I.RC4Drop=S._createHelper(C)}(),R.RC4})}(Co)),Co.exports}r(nb,"requireRc4");var lo={exports:{}},ab=lo.exports,jV;function rb(){return jV||(jV=1,function(t,E){(function(R,I,N){t.exports=I(JA(),Cs(),ls(),eN(),Xt())})(ab,function(R){return function(){var I=R,N=I.lib,S=N.StreamCipher,T=I.algo,i=[],o=[],C=[],U=T.Rabbit=S.extend({_doReset:r(function(){for(var G=this._key.words,H=this.cfg.iv,c=0;c<4;c++)G[c]=(G[c]<<8|G[c]>>>24)&16711935|(G[c]<<24|G[c]>>>8)&4278255360;var f=this._X=[G[0],G[3]<<16|G[2]>>>16,G[1],G[0]<<16|G[3]>>>16,G[2],G[1]<<16|G[0]>>>16,G[3],G[2]<<16|G[1]>>>16],d=this._C=[G[2]<<16|G[2]>>>16,G[0]&4294901760|G[1]&65535,G[3]<<16|G[3]>>>16,G[1]&4294901760|G[2]&65535,G[0]<<16|G[0]>>>16,G[2]&4294901760|G[3]&65535,G[1]<<16|G[1]>>>16,G[3]&4294901760|G[0]&65535];this._b=0;for(var c=0;c<4;c++)_.call(this);for(var c=0;c<8;c++)d[c]^=f[c+4&7];if(H){var w=H.words,m=w[0],W=w[1],v=(m<<8|m>>>24)&16711935|(m<<24|m>>>8)&4278255360,$=(W<<8|W>>>24)&16711935|(W<<24|W>>>8)&4278255360,Oe=v>>>16|$&4294901760,q=$<<16|v&65535;d[0]^=v,d[1]^=Oe,d[2]^=$,d[3]^=q,d[4]^=v,d[5]^=Oe,d[6]^=$,d[7]^=q;for(var c=0;c<4;c++)_.call(this)}},"_doReset"),_doProcessBlock:r(function(G,H){var c=this._X;_.call(this),i[0]=c[0]^c[5]>>>16^c[3]<<16,i[1]=c[2]^c[7]>>>16^c[5]<<16,i[2]=c[4]^c[1]>>>16^c[7]<<16,i[3]=c[6]^c[3]>>>16^c[1]<<16;for(var f=0;f<4;f++)i[f]=(i[f]<<8|i[f]>>>24)&16711935|(i[f]<<24|i[f]>>>8)&4278255360,G[H+f]^=i[f]},"_doProcessBlock"),blockSize:128/32,ivSize:64/32});function _(){for(var G=this._X,H=this._C,c=0;c<8;c++)o[c]=H[c];H[0]=H[0]+1295307597+this._b|0,H[1]=H[1]+3545052371+(H[0]>>>0<o[0]>>>0?1:0)|0,H[2]=H[2]+886263092+(H[1]>>>0<o[1]>>>0?1:0)|0,H[3]=H[3]+1295307597+(H[2]>>>0<o[2]>>>0?1:0)|0,H[4]=H[4]+3545052371+(H[3]>>>0<o[3]>>>0?1:0)|0,H[5]=H[5]+886263092+(H[4]>>>0<o[4]>>>0?1:0)|0,H[6]=H[6]+1295307597+(H[5]>>>0<o[5]>>>0?1:0)|0,H[7]=H[7]+3545052371+(H[6]>>>0<o[6]>>>0?1:0)|0,this._b=H[7]>>>0<o[7]>>>0?1:0;for(var c=0;c<8;c++){var f=G[c]+H[c],d=f&65535,w=f>>>16,m=((d*d>>>17)+d*w>>>15)+w*w,W=((f&4294901760)*f|0)+((f&65535)*f|0);C[c]=m^W}G[0]=C[0]+(C[7]<<16|C[7]>>>16)+(C[6]<<16|C[6]>>>16)|0,G[1]=C[1]+(C[0]<<8|C[0]>>>24)+C[7]|0,G[2]=C[2]+(C[1]<<16|C[1]>>>16)+(C[0]<<16|C[0]>>>16)|0,G[3]=C[3]+(C[2]<<8|C[2]>>>24)+C[1]|0,G[4]=C[4]+(C[3]<<16|C[3]>>>16)+(C[2]<<16|C[2]>>>16)|0,G[5]=C[5]+(C[4]<<8|C[4]>>>24)+C[3]|0,G[6]=C[6]+(C[5]<<16|C[5]>>>16)+(C[4]<<16|C[4]>>>16)|0,G[7]=C[7]+(C[6]<<8|C[6]>>>24)+C[5]|0}r(_,"nextState"),I.Rabbit=S._createHelper(U)}(),R.Rabbit})}(lo)),lo.exports}r(rb,"requireRabbit");var Uo={exports:{}},ib=Uo.exports,e2;function ob(){return e2||(e2=1,function(t,E){(function(R,I,N){t.exports=I(JA(),Cs(),ls(),eN(),Xt())})(ib,function(R){return function(){var I=R,N=I.lib,S=N.StreamCipher,T=I.algo,i=[],o=[],C=[],U=T.RabbitLegacy=S.extend({_doReset:r(function(){var G=this._key.words,H=this.cfg.iv,c=this._X=[G[0],G[3]<<16|G[2]>>>16,G[1],G[0]<<16|G[3]>>>16,G[2],G[1]<<16|G[0]>>>16,G[3],G[2]<<16|G[1]>>>16],f=this._C=[G[2]<<16|G[2]>>>16,G[0]&4294901760|G[1]&65535,G[3]<<16|G[3]>>>16,G[1]&4294901760|G[2]&65535,G[0]<<16|G[0]>>>16,G[2]&4294901760|G[3]&65535,G[1]<<16|G[1]>>>16,G[3]&4294901760|G[0]&65535];this._b=0;for(var d=0;d<4;d++)_.call(this);for(var d=0;d<8;d++)f[d]^=c[d+4&7];if(H){var w=H.words,m=w[0],W=w[1],v=(m<<8|m>>>24)&16711935|(m<<24|m>>>8)&4278255360,$=(W<<8|W>>>24)&16711935|(W<<24|W>>>8)&4278255360,Oe=v>>>16|$&4294901760,q=$<<16|v&65535;f[0]^=v,f[1]^=Oe,f[2]^=$,f[3]^=q,f[4]^=v,f[5]^=Oe,f[6]^=$,f[7]^=q;for(var d=0;d<4;d++)_.call(this)}},"_doReset"),_doProcessBlock:r(function(G,H){var c=this._X;_.call(this),i[0]=c[0]^c[5]>>>16^c[3]<<16,i[1]=c[2]^c[7]>>>16^c[5]<<16,i[2]=c[4]^c[1]>>>16^c[7]<<16,i[3]=c[6]^c[3]>>>16^c[1]<<16;for(var f=0;f<4;f++)i[f]=(i[f]<<8|i[f]>>>24)&16711935|(i[f]<<24|i[f]>>>8)&4278255360,G[H+f]^=i[f]},"_doProcessBlock"),blockSize:128/32,ivSize:64/32});function _(){for(var G=this._X,H=this._C,c=0;c<8;c++)o[c]=H[c];H[0]=H[0]+1295307597+this._b|0,H[1]=H[1]+3545052371+(H[0]>>>0<o[0]>>>0?1:0)|0,H[2]=H[2]+886263092+(H[1]>>>0<o[1]>>>0?1:0)|0,H[3]=H[3]+1295307597+(H[2]>>>0<o[2]>>>0?1:0)|0,H[4]=H[4]+3545052371+(H[3]>>>0<o[3]>>>0?1:0)|0,H[5]=H[5]+886263092+(H[4]>>>0<o[4]>>>0?1:0)|0,H[6]=H[6]+1295307597+(H[5]>>>0<o[5]>>>0?1:0)|0,H[7]=H[7]+3545052371+(H[6]>>>0<o[6]>>>0?1:0)|0,this._b=H[7]>>>0<o[7]>>>0?1:0;for(var c=0;c<8;c++){var f=G[c]+H[c],d=f&65535,w=f>>>16,m=((d*d>>>17)+d*w>>>15)+w*w,W=((f&4294901760)*f|0)+((f&65535)*f|0);C[c]=m^W}G[0]=C[0]+(C[7]<<16|C[7]>>>16)+(C[6]<<16|C[6]>>>16)|0,G[1]=C[1]+(C[0]<<8|C[0]>>>24)+C[7]|0,G[2]=C[2]+(C[1]<<16|C[1]>>>16)+(C[0]<<16|C[0]>>>16)|0,G[3]=C[3]+(C[2]<<8|C[2]>>>24)+C[1]|0,G[4]=C[4]+(C[3]<<16|C[3]>>>16)+(C[2]<<16|C[2]>>>16)|0,G[5]=C[5]+(C[4]<<8|C[4]>>>24)+C[3]|0,G[6]=C[6]+(C[5]<<16|C[5]>>>16)+(C[4]<<16|C[4]>>>16)|0,G[7]=C[7]+(C[6]<<8|C[6]>>>24)+C[5]|0}r(_,"nextState"),I.RabbitLegacy=S._createHelper(U)}(),R.RabbitLegacy})}(Uo)),Uo.exports}r(ob,"requireRabbitLegacy");var Do={exports:{}},Cb=Do.exports,A2;function lb(){return A2||(A2=1,function(t,E){(function(R,I,N){t.exports=I(JA(),Cs(),ls(),eN(),Xt())})(Cb,function(R){return function(){var I=R,N=I.lib,S=N.BlockCipher,T=I.algo;const i=16,o=[608135816,2242054355,320440878,57701188,2752067618,698298832,137296536,3964562569,1160258022,953160567,3193202383,887688300,3232508343,3380367581,1065670069,3041331479,2450970073,2306472731],C=[[3509652390,2564797868,805139163,3491422135,3101798381,1780907670,3128725573,4046225305,614570311,3012652279,134345442,2240740374,1667834072,1901547113,2757295779,4103290238,227898511,1921955416,1904987480,2182433518,2069144605,3260701109,2620446009,720527379,3318853667,677414384,3393288472,3101374703,2390351024,1614419982,1822297739,2954791486,3608508353,3174124327,2024746970,1432378464,3864339955,2857741204,1464375394,1676153920,1439316330,715854006,3033291828,289532110,2706671279,2087905683,3018724369,1668267050,732546397,1947742710,3462151702,2609353502,2950085171,1814351708,2050118529,680887927,999245976,1800124847,3300911131,1713906067,1641548236,4213287313,1216130144,1575780402,4018429277,3917837745,3693486850,3949271944,596196993,3549867205,258830323,2213823033,772490370,2760122372,1774776394,2652871518,566650946,4142492826,1728879713,2882767088,1783734482,3629395816,2517608232,2874225571,1861159788,326777828,3124490320,2130389656,2716951837,967770486,1724537150,2185432712,2364442137,1164943284,2105845187,998989502,3765401048,2244026483,1075463327,1455516326,1322494562,910128902,469688178,1117454909,936433444,3490320968,3675253459,1240580251,122909385,2157517691,634681816,4142456567,3825094682,3061402683,2540495037,79693498,3249098678,1084186820,1583128258,426386531,1761308591,1047286709,322548459,995290223,1845252383,2603652396,3431023940,2942221577,3202600964,3727903485,1712269319,422464435,3234572375,1170764815,3523960633,3117677531,1434042557,442511882,3600875718,1076654713,1738483198,4213154764,2393238008,3677496056,1014306527,4251020053,793779912,2902807211,842905082,4246964064,1395751752,1040244610,2656851899,3396308128,445077038,3742853595,3577915638,679411651,2892444358,2354009459,1767581616,3150600392,3791627101,3102740896,284835224,4246832056,1258075500,768725851,2589189241,3069724005,3532540348,1274779536,3789419226,2764799539,1660621633,3471099624,4011903706,913787905,3497959166,737222580,2514213453,2928710040,3937242737,1804850592,3499020752,2949064160,2386320175,2390070455,2415321851,4061277028,2290661394,2416832540,1336762016,1754252060,3520065937,3014181293,791618072,3188594551,3933548030,2332172193,3852520463,3043980520,413987798,3465142937,3030929376,4245938359,2093235073,3534596313,375366246,2157278981,2479649556,555357303,3870105701,2008414854,3344188149,4221384143,3956125452,2067696032,3594591187,2921233993,2428461,544322398,577241275,1471733935,610547355,4027169054,1432588573,1507829418,2025931657,3646575487,545086370,48609733,2200306550,1653985193,298326376,1316178497,3007786442,2064951626,458293330,2589141269,3591329599,3164325604,727753846,2179363840,146436021,1461446943,4069977195,705550613,3059967265,3887724982,4281599278,3313849956,1404054877,2845806497,146425753,1854211946],[1266315497,3048417604,3681880366,3289982499,290971e4,1235738493,2632868024,2414719590,3970600049,1771706367,1449415276,3266420449,422970021,1963543593,2690192192,3826793022,1062508698,1531092325,1804592342,2583117782,2714934279,4024971509,1294809318,4028980673,1289560198,2221992742,1669523910,35572830,157838143,1052438473,1016535060,1802137761,1753167236,1386275462,3080475397,2857371447,1040679964,2145300060,2390574316,1461121720,2956646967,4031777805,4028374788,33600511,2920084762,1018524850,629373528,3691585981,3515945977,2091462646,2486323059,586499841,988145025,935516892,3367335476,2599673255,2839830854,265290510,3972581182,2759138881,3795373465,1005194799,847297441,406762289,1314163512,1332590856,1866599683,4127851711,750260880,613907577,1450815602,3165620655,3734664991,3650291728,3012275730,3704569646,1427272223,778793252,1343938022,2676280711,2052605720,1946737175,3164576444,3914038668,3967478842,3682934266,1661551462,3294938066,4011595847,840292616,3712170807,616741398,312560963,711312465,1351876610,322626781,1910503582,271666773,2175563734,1594956187,70604529,3617834859,1007753275,1495573769,4069517037,2549218298,2663038764,504708206,2263041392,3941167025,2249088522,1514023603,1998579484,1312622330,694541497,2582060303,2151582166,1382467621,776784248,2618340202,3323268794,2497899128,2784771155,503983604,4076293799,907881277,423175695,432175456,1378068232,4145222326,3954048622,3938656102,3820766613,2793130115,2977904593,26017576,3274890735,3194772133,1700274565,1756076034,4006520079,3677328699,720338349,1533947780,354530856,688349552,3973924725,1637815568,332179504,3949051286,53804574,2852348879,3044236432,1282449977,3583942155,3416972820,4006381244,1617046695,2628476075,3002303598,1686838959,431878346,2686675385,1700445008,1080580658,1009431731,832498133,3223435511,2605976345,2271191193,2516031870,1648197032,4164389018,2548247927,300782431,375919233,238389289,3353747414,2531188641,2019080857,1475708069,455242339,2609103871,448939670,3451063019,1395535956,2413381860,1841049896,1491858159,885456874,4264095073,4001119347,1565136089,3898914787,1108368660,540939232,1173283510,2745871338,3681308437,4207628240,3343053890,4016749493,1699691293,1103962373,3625875870,2256883143,3830138730,1031889488,3479347698,1535977030,4236805024,3251091107,2132092099,1774941330,1199868427,1452454533,157007616,2904115357,342012276,595725824,1480756522,206960106,497939518,591360097,863170706,2375253569,3596610801,1814182875,2094937945,3421402208,1082520231,3463918190,2785509508,435703966,3908032597,1641649973,2842273706,3305899714,1510255612,2148256476,2655287854,3276092548,4258621189,236887753,3681803219,274041037,1734335097,3815195456,3317970021,1899903192,1026095262,4050517792,356393447,2410691914,3873677099,3682840055],[3913112168,2491498743,4132185628,2489919796,1091903735,1979897079,3170134830,3567386728,3557303409,857797738,1136121015,1342202287,507115054,2535736646,337727348,3213592640,1301675037,2528481711,1895095763,1721773893,3216771564,62756741,2142006736,835421444,2531993523,1442658625,3659876326,2882144922,676362277,1392781812,170690266,3921047035,1759253602,3611846912,1745797284,664899054,1329594018,3901205900,3045908486,2062866102,2865634940,3543621612,3464012697,1080764994,553557557,3656615353,3996768171,991055499,499776247,1265440854,648242737,3940784050,980351604,3713745714,1749149687,3396870395,4211799374,3640570775,1161844396,3125318951,1431517754,545492359,4268468663,3499529547,1437099964,2702547544,3433638243,2581715763,2787789398,1060185593,1593081372,2418618748,4260947970,69676912,2159744348,86519011,2512459080,3838209314,1220612927,3339683548,133810670,1090789135,1078426020,1569222167,845107691,3583754449,4072456591,1091646820,628848692,1613405280,3757631651,526609435,236106946,48312990,2942717905,3402727701,1797494240,859738849,992217954,4005476642,2243076622,3870952857,3732016268,765654824,3490871365,2511836413,1685915746,3888969200,1414112111,2273134842,3281911079,4080962846,172450625,2569994100,980381355,4109958455,2819808352,2716589560,2568741196,3681446669,3329971472,1835478071,660984891,3704678404,4045999559,3422617507,3040415634,1762651403,1719377915,3470491036,2693910283,3642056355,3138596744,1364962596,2073328063,1983633131,926494387,3423689081,2150032023,4096667949,1749200295,3328846651,309677260,2016342300,1779581495,3079819751,111262694,1274766160,443224088,298511866,1025883608,3806446537,1145181785,168956806,3641502830,3584813610,1689216846,3666258015,3200248200,1692713982,2646376535,4042768518,1618508792,1610833997,3523052358,4130873264,2001055236,3610705100,2202168115,4028541809,2961195399,1006657119,2006996926,3186142756,1430667929,3210227297,1314452623,4074634658,4101304120,2273951170,1399257539,3367210612,3027628629,1190975929,2062231137,2333990788,2221543033,2438960610,1181637006,548689776,2362791313,3372408396,3104550113,3145860560,296247880,1970579870,3078560182,3769228297,1714227617,3291629107,3898220290,166772364,1251581989,493813264,448347421,195405023,2709975567,677966185,3703036547,1463355134,2715995803,1338867538,1343315457,2802222074,2684532164,233230375,2599980071,2000651841,3277868038,1638401717,4028070440,3237316320,6314154,819756386,300326615,590932579,1405279636,3267499572,3150704214,2428286686,3959192993,3461946742,1862657033,1266418056,963775037,2089974820,2263052895,1917689273,448879540,3550394620,3981727096,150775221,3627908307,1303187396,508620638,2975983352,2726630617,1817252668,1876281319,1457606340,908771278,3720792119,3617206836,2455994898,1729034894,1080033504],[976866871,3556439503,2881648439,1522871579,1555064734,1336096578,3548522304,2579274686,3574697629,3205460757,3593280638,3338716283,3079412587,564236357,2993598910,1781952180,1464380207,3163844217,3332601554,1699332808,1393555694,1183702653,3581086237,1288719814,691649499,2847557200,2895455976,3193889540,2717570544,1781354906,1676643554,2592534050,3230253752,1126444790,2770207658,2633158820,2210423226,2615765581,2414155088,3127139286,673620729,2805611233,1269405062,4015350505,3341807571,4149409754,1057255273,2012875353,2162469141,2276492801,2601117357,993977747,3918593370,2654263191,753973209,36408145,2530585658,25011837,3520020182,2088578344,530523599,2918365339,1524020338,1518925132,3760827505,3759777254,1202760957,3985898139,3906192525,674977740,4174734889,2031300136,2019492241,3983892565,4153806404,3822280332,352677332,2297720250,60907813,90501309,3286998549,1016092578,2535922412,2839152426,457141659,509813237,4120667899,652014361,1966332200,2975202805,55981186,2327461051,676427537,3255491064,2882294119,3433927263,1307055953,942726286,933058658,2468411793,3933900994,4215176142,1361170020,2001714738,2830558078,3274259782,1222529897,1679025792,2729314320,3714953764,1770335741,151462246,3013232138,1682292957,1483529935,471910574,1539241949,458788160,3436315007,1807016891,3718408830,978976581,1043663428,3165965781,1927990952,4200891579,2372276910,3208408903,3533431907,1412390302,2931980059,4132332400,1947078029,3881505623,4168226417,2941484381,1077988104,1320477388,886195818,18198404,3786409e3,2509781533,112762804,3463356488,1866414978,891333506,18488651,661792760,1628790961,3885187036,3141171499,876946877,2693282273,1372485963,791857591,2686433993,3759982718,3167212022,3472953795,2716379847,445679433,3561995674,3504004811,3574258232,54117162,3331405415,2381918588,3769707343,4154350007,1140177722,4074052095,668550556,3214352940,367459370,261225585,2610173221,4209349473,3468074219,3265815641,314222801,3066103646,3808782860,282218597,3406013506,3773591054,379116347,1285071038,846784868,2669647154,3771962079,3550491691,2305946142,453669953,1268987020,3317592352,3279303384,3744833421,2610507566,3859509063,266596637,3847019092,517658769,3462560207,3443424879,370717030,4247526661,2224018117,4143653529,4112773975,2788324899,2477274417,1456262402,2901442914,1517677493,1846949527,2295493580,3734397586,2176403920,1280348187,1908823572,3871786941,846861322,1172426758,3287448474,3383383037,1655181056,3139813346,901632758,1897031941,2986607138,3066810236,3447102507,1393639104,373351379,950779232,625454576,3124240540,4148612726,2007998917,544563296,2244738638,2330496472,2058025392,1291430526,424198748,50039436,29584100,3605783033,2429876329,2791104160,1057563949,3255363231,3075367218,3463963227,1469046755,985887462]];var U={pbox:[],sbox:[]};function _(d,w){let m=w>>24&255,W=w>>16&255,v=w>>8&255,$=w&255,Oe=d.sbox[0][m]+d.sbox[1][W];return Oe=Oe^d.sbox[2][v],Oe=Oe+d.sbox[3][$],Oe}r(_,"F");function G(d,w,m){let W=w,v=m,$;for(let Oe=0;Oe<i;++Oe)W=W^d.pbox[Oe],v=_(d,W)^v,$=W,W=v,v=$;return $=W,W=v,v=$,v=v^d.pbox[i],W=W^d.pbox[i+1],{left:W,right:v}}r(G,"BlowFish_Encrypt");function H(d,w,m){let W=w,v=m,$;for(let Oe=i+1;Oe>1;--Oe)W=W^d.pbox[Oe],v=_(d,W)^v,$=W,W=v,v=$;return $=W,W=v,v=$,v=v^d.pbox[1],W=W^d.pbox[0],{left:W,right:v}}r(H,"BlowFish_Decrypt");function c(d,w,m){for(let q=0;q<4;q++){d.sbox[q]=[];for(let Ie=0;Ie<256;Ie++)d.sbox[q][Ie]=C[q][Ie]}let W=0;for(let q=0;q<i+2;q++)d.pbox[q]=o[q]^w[W],W++,W>=m&&(W=0);let v=0,$=0,Oe=0;for(let q=0;q<i+2;q+=2)Oe=G(d,v,$),v=Oe.left,$=Oe.right,d.pbox[q]=v,d.pbox[q+1]=$;for(let q=0;q<4;q++)for(let Ie=0;Ie<256;Ie+=2)Oe=G(d,v,$),v=Oe.left,$=Oe.right,d.sbox[q][Ie]=v,d.sbox[q][Ie+1]=$;return!0}r(c,"BlowFishInit");var f=T.Blowfish=S.extend({_doReset:r(function(){if(this._keyPriorReset!==this._key){var d=this._keyPriorReset=this._key,w=d.words,m=d.sigBytes/4;c(U,w,m)}},"_doReset"),encryptBlock:r(function(d,w){var m=G(U,d[w],d[w+1]);d[w]=m.left,d[w+1]=m.right},"encryptBlock"),decryptBlock:r(function(d,w){var m=H(U,d[w],d[w+1]);d[w]=m.left,d[w+1]=m.right},"decryptBlock"),blockSize:64/32,keySize:128/32,ivSize:64/32});I.Blowfish=S._createHelper(f)}(),R.Blowfish})}(Do)),Do.exports}r(lb,"requireBlowfish");var Ub=yi.exports,E2;function Db(){return E2||(E2=1,function(t,E){(function(R,I,N){t.exports=I(JA(),uM(),o7(),l7(),Cs(),M7(),ls(),Vv(),j1(),H7(),vv(),h7(),d7(),F7(),ec(),m7(),eN(),Xt(),w7(),v7(),b7(),k7(),Q7(),$7(),z7(),eb(),Eb(),Rb(),Ib(),Nb(),Sb(),nb(),rb(),ob(),lb())})(Ub,function(R){return R})}(yi)),yi.exports}r(Db,"requireCryptoJs");var eS=Db();let ke=null;const xv=y1(32);function t2(){return new Promise(t=>{{ke={username:"Guest",lastSessionSlot:-1,discordId:"",googleId:"",hasAdminRole:!1};let E=-1;for(let R=0;R<5;R++)if(localStorage.getItem(`sessionData${R||""}_${ke.username}`)){E=R;break}return ke.lastSessionSlot=E,["data","sessionData","sessionData1","sessionData2","sessionData3","sessionData4"].map(R=>{const I=localStorage.getItem(R);if(I&&(ke!=null&&ke.username)){const N=localStorage.getItem(`${R}_${ke.username}`);N&&localStorage.setItem(`${R}_${ke.username}_bak`,N),localStorage.setItem(`${R}_${ke.username}`,I),localStorage.removeItem(R)}}),t([!0,200])}})}r(t2,"updateUserInfo");const bh=class bh{constructor(E){this.playTime=(E==null?void 0:E.playTime)||0,this.battles=(E==null?void 0:E.battles)||0,this.classicSessionsPlayed=(E==null?void 0:E.classicSessionsPlayed)||0,this.sessionsWon=(E==null?void 0:E.sessionsWon)||0,this.ribbonsOwned=(E==null?void 0:E.ribbonsOwned)||0,this.dailyRunSessionsPlayed=(E==null?void 0:E.dailyRunSessionsPlayed)||0,this.dailyRunSessionsWon=(E==null?void 0:E.dailyRunSessionsWon)||0,this.endlessSessionsPlayed=(E==null?void 0:E.endlessSessionsPlayed)||0,this.highestEndlessWave=(E==null?void 0:E.highestEndlessWave)||0,this.highestLevel=(E==null?void 0:E.highestLevel)||0,this.highestMoney=(E==null?void 0:E.highestMoney)||0,this.highestDamage=(E==null?void 0:E.highestDamage)||0,this.highestHeal=(E==null?void 0:E.highestHeal)||0,this.pokemonSeen=(E==null?void 0:E.pokemonSeen)||0,this.pokemonDefeated=(E==null?void 0:E.pokemonDefeated)||0,this.pokemonCaught=(E==null?void 0:E.pokemonCaught)||0,this.pokemonHatched=(E==null?void 0:E.pokemonHatched)||0,this.subLegendaryPokemonSeen=(E==null?void 0:E.subLegendaryPokemonSeen)??0,this.subLegendaryPokemonCaught=(E==null?void 0:E.subLegendaryPokemonCaught)??0,this.subLegendaryPokemonHatched=(E==null?void 0:E.subLegendaryPokemonHatched)??0,this.legendaryPokemonSeen=(E==null?void 0:E.legendaryPokemonSeen)||0,this.legendaryPokemonCaught=(E==null?void 0:E.legendaryPokemonCaught)||0,this.legendaryPokemonHatched=(E==null?void 0:E.legendaryPokemonHatched)||0,this.mythicalPokemonSeen=(E==null?void 0:E.mythicalPokemonSeen)||0,this.mythicalPokemonCaught=(E==null?void 0:E.mythicalPokemonCaught)||0,this.mythicalPokemonHatched=(E==null?void 0:E.mythicalPokemonHatched)||0,this.shinyPokemonSeen=(E==null?void 0:E.shinyPokemonSeen)||0,this.shinyPokemonCaught=(E==null?void 0:E.shinyPokemonCaught)||0,this.shinyPokemonHatched=(E==null?void 0:E.shinyPokemonHatched)||0,this.pokemonFused=(E==null?void 0:E.pokemonFused)||0,this.trainersDefeated=(E==null?void 0:E.trainersDefeated)||0,this.eggsPulled=(E==null?void 0:E.eggsPulled)||0,this.rareEggsPulled=(E==null?void 0:E.rareEggsPulled)||0,this.epicEggsPulled=(E==null?void 0:E.epicEggsPulled)||0,this.legendaryEggsPulled=(E==null?void 0:E.legendaryEggsPulled)||0,this.manaphyEggsPulled=(E==null?void 0:E.manaphyEggsPulled)||0}};r(bh,"GameStats");let EC=bh;const NO={[e.BULBASAUR]:[A.SAPPY_SEED,A.MALIGNANT_CHAIN,A.EARTH_POWER,A.MATCHA_GOTCHA],[e.CHARMANDER]:[A.DRAGON_DANCE,A.BITTER_BLADE,A.EARTH_POWER,A.OBLIVION_WING],[e.SQUIRTLE]:[A.FREEZE_DRY,A.ARMOR_CANNON,A.SHORE_UP,A.ORIGIN_PULSE],[e.CATERPIE]:[A.SANDSEAR_STORM,A.SILK_TRAP,A.TWIN_BEAM,A.BLEAKWIND_STORM],[e.WEEDLE]:[A.THOUSAND_ARROWS,A.NOXIOUS_TORQUE,A.ATTACK_ORDER,A.VICTORY_DANCE],[e.PIDGEY]:[A.BLEAKWIND_STORM,A.SANDSEAR_STORM,A.CALM_MIND,A.BOOMBURST],[e.RATTATA]:[A.HYPER_FANG,A.PSYCHIC_FANGS,A.FIRE_FANG,A.EXTREME_SPEED],[e.SPEAROW]:[A.FLOATY_FALL,A.EXTREME_SPEED,A.KNOCK_OFF,A.TRIPLE_ARROWS],[e.EKANS]:[A.NOXIOUS_TORQUE,A.DRAGON_DANCE,A.SLACK_OFF,A.SHED_TAIL],[e.SANDSHREW]:[A.HIGH_HORSEPOWER,A.DIRE_CLAW,A.SHORE_UP,A.MIGHTY_CLEAVE],[e.NIDORAN_F]:[A.CALM_MIND,A.MOONLIGHT,A.MALIGNANT_CHAIN,A.SANDSEAR_STORM],[e.NIDORAN_M]:[A.DRAGON_DANCE,A.MOUNTAIN_GALE,A.NOXIOUS_TORQUE,A.PRECIPICE_BLADES],[e.VULPIX]:[A.MOONBLAST,A.INFERNAL_PARADE,A.MORNING_SUN,A.TAIL_GLOW],[e.ZUBAT]:[A.FLOATY_FALL,A.DIRE_CLAW,A.SWORDS_DANCE,A.COLLISION_COURSE],[e.ODDISH]:[A.SLUDGE_BOMB,A.FIERY_DANCE,A.STRENGTH_SAP,A.SPORE],[e.PARAS]:[A.LEECH_LIFE,A.HORN_LEECH,A.CRABHAMMER,A.SAPPY_SEED],[e.VENONAT]:[A.SLUDGE_BOMB,A.TOXIC_THREAD,A.EARTH_POWER,A.STORED_POWER],[e.DIGLETT]:[A.TRIPLE_DIVE,A.SWORDS_DANCE,A.TRIPLE_AXEL,A.HEADLONG_RUSH],[e.MEOWTH]:[A.HEART_STAMP,A.SWORDS_DANCE,A.SIZZLY_SLIDE,A.TAIL_SLAP],[e.PSYDUCK]:[A.FROST_BREATH,A.AQUA_STEP,A.MYSTICAL_POWER,A.BOUNCY_BUBBLE],[e.MANKEY]:[A.DRAIN_PUNCH,A.SLACK_OFF,A.METEOR_MASH,A.NO_RETREAT],[e.GROWLITHE]:[A.ZING_ZAP,A.PARTING_SHOT,A.MORNING_SUN,A.SACRED_FIRE],[e.POLIWAG]:[A.SLACK_OFF,A.WILDBOLT_STORM,A.DRAIN_PUNCH,A.SURGING_STRIKES],[e.ABRA]:[A.AURA_SPHERE,A.BADDY_BAD,A.ICE_BEAM,A.PSYSTRIKE],[e.MACHOP]:[A.COMBAT_TORQUE,A.METEOR_MASH,A.MOUNTAIN_GALE,A.FISSURE],[e.BELLSPROUT]:[A.SOLAR_BLADE,A.STRENGTH_SAP,A.FIRE_LASH,A.VICTORY_DANCE],[e.TENTACOOL]:[A.BANEFUL_BUNKER,A.MALIGNANT_CHAIN,A.BOUNCY_BUBBLE,A.STRENGTH_SAP],[e.GEODUDE]:[A.FLARE_BLITZ,A.HEAD_SMASH,A.SHORE_UP,A.SHELL_SMASH],[e.PONYTA]:[A.HEADLONG_RUSH,A.FIRE_LASH,A.SWORDS_DANCE,A.VOLT_TACKLE],[e.SLOWPOKE]:[A.SPLISHY_SPLASH,A.FROST_BREATH,A.SHED_TAIL,A.MYSTICAL_POWER],[e.MAGNEMITE]:[A.PARABOLIC_CHARGE,A.FLAMETHROWER,A.ICE_BEAM,A.THUNDERCLAP],[e.FARFETCHD]:[A.IVY_CUDGEL,A.TRIPLE_ARROWS,A.DRILL_RUN,A.VICTORY_DANCE],[e.DODUO]:[A.TRIPLE_AXEL,A.HYPER_DRILL,A.FLOATY_FALL,A.TRIPLE_ARROWS],[e.SEEL]:[A.FREEZE_DRY,A.BOUNCY_BUBBLE,A.SLACK_OFF,A.STEAM_ERUPTION],[e.GRIMER]:[A.SUCKER_PUNCH,A.CURSE,A.NOXIOUS_TORQUE,A.STRENGTH_SAP],[e.SHELLDER]:[A.ROCK_BLAST,A.WATER_SHURIKEN,A.BANEFUL_BUNKER,A.BONE_RUSH],[e.GASTLY]:[A.MALIGNANT_CHAIN,A.AURA_SPHERE,A.PARTING_SHOT,A.DARK_VOID],[e.ONIX]:[A.SHORE_UP,A.THOUSAND_WAVES,A.COIL,A.DIAMOND_STORM],[e.DROWZEE]:[A.BADDY_BAD,A.STRENGTH_SAP,A.LUMINA_CRASH,A.DARK_VOID],[e.KRABBY]:[A.DIRE_CLAW,A.DRAGON_HAMMER,A.IVY_CUDGEL,A.JET_PUNCH],[e.VOLTORB]:[A.NASTY_PLOT,A.FUSION_FLARE,A.FROST_BREATH,A.ELECTRO_DRIFT],[e.EXEGGCUTE]:[A.FICKLE_BEAM,A.APPLE_ACID,A.HEAT_WAVE,A.LUMINA_CRASH],[e.CUBONE]:[A.HEAD_SMASH,A.WOOD_HAMMER,A.SHADOW_SNEAK,A.BITTER_BLADE],[e.LICKITUNG]:[A.CRUSH_GRIP,A.FIRE_LASH,A.SLACK_OFF,A.MAGICAL_TORQUE],[e.KOFFING]:[A.SCALD,A.RECOVER,A.BODY_PRESS,A.MALIGNANT_CHAIN],[e.RHYHORN]:[A.SHORE_UP,A.ICE_HAMMER,A.ACCELEROCK,A.HEAD_SMASH],[e.TANGELA]:[A.NATURES_MADNESS,A.SNAP_TRAP,A.PARTING_SHOT,A.SAPPY_SEED],[e.KANGASKHAN]:[A.POWER_UP_PUNCH,A.TRAILBLAZE,A.COVET,A.SEISMIC_TOSS],[e.HORSEA]:[A.SNIPE_SHOT,A.TAKE_HEART,A.SHELL_SIDE_ARM,A.DRAGON_ENERGY],[e.GOLDEEN]:[A.GLACIAL_LANCE,A.SUPERCELL_SLAM,A.DRAGON_DANCE,A.FISHIOUS_REND],[e.STARYU]:[A.CALM_MIND,A.BOUNCY_BUBBLE,A.MOONBLAST,A.MYSTICAL_POWER],[e.SCYTHER]:[A.MIGHTY_CLEAVE,A.GEAR_GRIND,A.STORM_THROW,A.BITTER_BLADE],[e.PINSIR]:[A.HEADLONG_RUSH,A.LEECH_LIFE,A.CRUSH_GRIP,A.EXTREME_SPEED],[e.TAUROS]:[A.SWORDS_DANCE,A.FIRE_LASH,A.WICKED_TORQUE,A.COLLISION_COURSE],[e.MAGIKARP]:[A.FLIP_TURN,A.ICE_SPINNER,A.KNOCK_OFF,A.DRAGON_ASCENT],[e.LAPRAS]:[A.RECOVER,A.FREEZE_DRY,A.SCALD,A.SHELL_SMASH],[e.DITTO]:[A.MIMIC,A.SKETCH,A.METRONOME,A.IMPRISON],[e.EEVEE]:[A.WISH,A.NO_RETREAT,A.ZIPPY_ZAP,A.BOOMBURST],[e.PORYGON]:[A.THUNDERCLAP,A.AURA_SPHERE,A.FLAMETHROWER,A.TECHNO_BLAST],[e.OMANYTE]:[A.FREEZE_DRY,A.GIGA_DRAIN,A.POWER_GEM,A.STEAM_ERUPTION],[e.KABUTO]:[A.CEASELESS_EDGE,A.HIGH_HORSEPOWER,A.CRABHAMMER,A.MIGHTY_CLEAVE],[e.AERODACTYL]:[A.FLOATY_FALL,A.HIGH_HORSEPOWER,A.STONE_AXE,A.SWORDS_DANCE],[e.ARTICUNO]:[A.EARTH_POWER,A.CALM_MIND,A.AURORA_VEIL,A.AEROBLAST],[e.ZAPDOS]:[A.BLEAKWIND_STORM,A.CALM_MIND,A.SANDSEAR_STORM,A.ELECTRO_SHOT],[e.MOLTRES]:[A.EARTH_POWER,A.CALM_MIND,A.AEROBLAST,A.TORCH_SONG],[e.DRATINI]:[A.DRAGON_HAMMER,A.CRUSH_GRIP,A.FIRE_LASH,A.GIGATON_HAMMER],[e.MEWTWO]:[A.METEOR_MASH,A.MOONBLAST,A.THUNDEROUS_KICK,A.PHOTON_GEYSER],[e.MEW]:[A.PHOTON_GEYSER,A.MOONBLAST,A.ASTRAL_BARRAGE,A.SHELL_SMASH],[e.CHIKORITA]:[A.SAPPY_SEED,A.STONE_AXE,A.DRAGON_DANCE,A.SPORE],[e.CYNDAQUIL]:[A.NASTY_PLOT,A.EARTH_POWER,A.FIERY_DANCE,A.ELECTRO_DRIFT],[e.TOTODILE]:[A.THUNDER_PUNCH,A.DRAGON_DANCE,A.PLAY_ROUGH,A.SURGING_STRIKES],[e.SENTRET]:[A.TIDY_UP,A.FAKE_OUT,A.NUZZLE,A.EXTREME_SPEED],[e.HOOTHOOT]:[A.TAKE_HEART,A.ESPER_WING,A.AEROBLAST,A.BOOMBURST],[e.LEDYBA]:[A.POLLEN_PUFF,A.MAT_BLOCK,A.PARTING_SHOT,A.SPORE],[e.SPINARAK]:[A.PARTING_SHOT,A.ATTACK_ORDER,A.GASTRO_ACID,A.STRENGTH_SAP],[e.CHINCHOU]:[A.THUNDERCLAP,A.BOUNCY_BUBBLE,A.THUNDER_CAGE,A.TAIL_GLOW],[e.PICHU]:[A.MOONBLAST,A.TRIPLE_AXEL,A.FIERY_DANCE,A.AURA_WHEEL],[e.CLEFFA]:[A.CALM_MIND,A.EARTH_POWER,A.WISH,A.LIGHT_OF_RUIN],[e.IGGLYBUFF]:[A.DRAIN_PUNCH,A.GRAV_APPLE,A.SOFT_BOILED,A.EXTREME_SPEED],[e.TOGEPI]:[A.SCORCHING_SANDS,A.SPLISHY_SPLASH,A.RELIC_SONG,A.FIERY_DANCE],[e.NATU]:[A.REVIVAL_BLESSING,A.NASTY_PLOT,A.MOONBLAST,A.OBLIVION_WING],[e.MAREEP]:[A.ICE_BEAM,A.PARABOLIC_CHARGE,A.CORE_ENFORCER,A.TAIL_GLOW],[e.HOPPIP]:[A.FLOATY_FALL,A.STRENGTH_SAP,A.SAPPY_SEED,A.SPORE],[e.AIPOM]:[A.ROCK_BLAST,A.STORM_THROW,A.FAKE_OUT,A.SWORDS_DANCE],[e.SUNKERN]:[A.SPORE,A.QUIVER_DANCE,A.FIERY_DANCE,A.HYDRO_STEAM],[e.YANMA]:[A.NASTY_PLOT,A.EARTH_POWER,A.HEAT_WAVE,A.BLEAKWIND_STORM],[e.WOOPER]:[A.SIZZLY_SLIDE,A.RECOVER,A.SHED_TAIL,A.SURGING_STRIKES],[e.MURKROW]:[A.TRIPLE_ARROWS,A.FLOATY_FALL,A.TIDY_UP,A.WICKED_BLOW],[e.MISDREAVUS]:[A.TAKE_HEART,A.MOONBLAST,A.AURA_SPHERE,A.MOONGEIST_BEAM],[e.UNOWN]:[A.NATURE_POWER,A.COSMIC_POWER,A.ANCIENT_POWER,A.MYSTICAL_POWER],[e.GIRAFARIG]:[A.MYSTICAL_POWER,A.NIGHT_DAZE,A.RECOVER,A.BOOMBURST],[e.PINECO]:[A.METAL_BURST,A.SHORE_UP,A.BODY_PRESS,A.DIAMOND_STORM],[e.DUNSPARCE]:[A.WICKED_TORQUE,A.MAGICAL_TORQUE,A.BLAZING_TORQUE,A.EXTREME_SPEED],[e.GLIGAR]:[A.FLOATY_FALL,A.THOUSAND_WAVES,A.SPIKY_SHIELD,A.MIGHTY_CLEAVE],[e.SNUBBULL]:[A.FACADE,A.HIGH_HORSEPOWER,A.SWORDS_DANCE,A.EXTREME_SPEED],[e.QWILFISH]:[A.BARB_BARRAGE,A.BANEFUL_BUNKER,A.RECOVER,A.FISHIOUS_REND],[e.SHUCKLE]:[A.STUFF_CHEEKS,A.HEAL_ORDER,A.BODY_PRESS,A.SALT_CURE],[e.HERACROSS]:[A.ROCK_BLAST,A.STORM_THROW,A.ICICLE_SPEAR,A.SCALE_SHOT],[e.SNEASEL]:[A.DIRE_CLAW,A.DARKEST_LARIAT,A.TRIPLE_AXEL,A.CLOSE_COMBAT],[e.TEDDIURSA]:[A.MOUNTAIN_GALE,A.FAKE_OUT,A.SLACK_OFF,A.PRECIPICE_BLADES],[e.SLUGMA]:[A.BURNING_BULWARK,A.POWER_GEM,A.SOLAR_BEAM,A.MAGMA_STORM],[e.SWINUB]:[A.SLACK_OFF,A.MOUNTAIN_GALE,A.STONE_AXE,A.PRECIPICE_BLADES],[e.CORSOLA]:[A.SCALD,A.FREEZE_DRY,A.STRENGTH_SAP,A.SALT_CURE],[e.REMORAID]:[A.WATER_SHURIKEN,A.TAKE_HEART,A.SHELL_SIDE_ARM,A.BOUNCY_BUBBLE],[e.DELIBIRD]:[A.BONEMERANG,A.FLOATY_FALL,A.VICTORY_DANCE,A.GLACIAL_LANCE],[e.SKARMORY]:[A.ROOST,A.BODY_PRESS,A.SPIKY_SHIELD,A.BEAK_BLAST],[e.HOUNDOUR]:[A.FIERY_WRATH,A.THUNDERBOLT,A.MOONBLAST,A.ARMOR_CANNON],[e.PHANPY]:[A.SHORE_UP,A.SWORDS_DANCE,A.MOUNTAIN_GALE,A.COLLISION_COURSE],[e.STANTLER]:[A.THUNDEROUS_KICK,A.PHOTON_GEYSER,A.SWORDS_DANCE,A.BOOMBURST],[e.SMEARGLE]:[A.CONVERSION,A.BURNING_BULWARK,A.SALT_CURE,A.DARK_VOID],[e.TYROGUE]:[A.VICTORY_DANCE,A.THUNDEROUS_KICK,A.METEOR_MASH,A.WICKED_BLOW],[e.SMOOCHUM]:[A.LUSTER_PURGE,A.AURA_SPHERE,A.FREEZE_DRY,A.QUIVER_DANCE],[e.ELEKID]:[A.FIRE_LASH,A.ZING_ZAP,A.MOUNTAIN_GALE,A.SHIFT_GEAR],[e.MAGBY]:[A.THUNDERCLAP,A.EARTH_POWER,A.ENERGY_BALL,A.BLUE_FLARE],[e.MILTANK]:[A.BODY_PRESS,A.BULK_UP,A.KNOCK_OFF,A.SIZZLY_SLIDE],[e.RAIKOU]:[A.PARABOLIC_CHARGE,A.NASTY_PLOT,A.FROST_BREATH,A.ELECTRO_DRIFT],[e.ENTEI]:[A.BURNING_BULWARK,A.DRAGON_DANCE,A.EARTHQUAKE,A.PYRO_BALL],[e.SUICUNE]:[A.RECOVER,A.NASTY_PLOT,A.FREEZE_DRY,A.STEAM_ERUPTION],[e.LARVITAR]:[A.DRAGON_DANCE,A.MOUNTAIN_GALE,A.SHORE_UP,A.DIAMOND_STORM],[e.LUGIA]:[A.NASTY_PLOT,A.LUMINA_CRASH,A.AURA_SPHERE,A.OBLIVION_WING],[e.HO_OH]:[A.BRAVE_BIRD,A.DRAGON_DANCE,A.REVIVAL_BLESSING,A.BOLT_BEAK],[e.CELEBI]:[A.PHOTON_GEYSER,A.MATCHA_GOTCHA,A.REVIVAL_BLESSING,A.QUIVER_DANCE],[e.TREECKO]:[A.NASTY_PLOT,A.CORE_ENFORCER,A.FLAMETHROWER,A.SEED_FLARE],[e.TORCHIC]:[A.THUNDEROUS_KICK,A.ZING_ZAP,A.BURNING_BULWARK,A.PYRO_BALL],[e.MUDKIP]:[A.SHORE_UP,A.MOUNTAIN_GALE,A.AQUA_STEP,A.PRECIPICE_BLADES],[e.POOCHYENA]:[A.KNOCK_OFF,A.CLOSE_COMBAT,A.DIRE_CLAW,A.VICTORY_DANCE],[e.ZIGZAGOON]:[A.EXTREME_SPEED,A.NUZZLE,A.HIGH_HORSEPOWER,A.TIDY_UP],[e.WURMPLE]:[A.BATON_PASS,A.BLEAKWIND_STORM,A.STORED_POWER,A.MALIGNANT_CHAIN],[e.LOTAD]:[A.REVELATION_DANCE,A.APPLE_ACID,A.ICE_BEAM,A.QUIVER_DANCE],[e.SEEDOT]:[A.SWORDS_DANCE,A.SACRED_SWORD,A.KOWTOW_CLEAVE,A.BITTER_BLADE],[e.TAILLOW]:[A.BOOMBURST,A.FACADE,A.HEADLONG_RUSH,A.NO_RETREAT],[e.WINGULL]:[A.THUNDER,A.FLIP_TURN,A.CALM_MIND,A.STEAM_ERUPTION],[e.RALTS]:[A.PSYBLADE,A.BITTER_BLADE,A.NO_RETREAT,A.BOOMBURST],[e.SURSKIT]:[A.POLLEN_PUFF,A.FIERY_DANCE,A.BOUNCY_BUBBLE,A.AEROBLAST],[e.SHROOMISH]:[A.ACCELEROCK,A.TRAILBLAZE,A.STORM_THROW,A.SAPPY_SEED],[e.SLAKOTH]:[A.FACADE,A.DRAIN_PUNCH,A.KNOCK_OFF,A.SKILL_SWAP],[e.NINCADA]:[A.BULLDOZE,A.STICKY_WEB,A.SHADOW_BONE,A.SHELL_SMASH],[e.WHISMUR]:[A.ALLURING_VOICE,A.SHIFT_GEAR,A.SPARKLING_ARIA,A.TORCH_SONG],[e.MAKUHITA]:[A.COMBAT_TORQUE,A.SLACK_OFF,A.HEAT_CRASH,A.DOUBLE_IRON_BASH],[e.AZURILL]:[A.JET_PUNCH,A.MAGICAL_TORQUE,A.SWORDS_DANCE,A.SURGING_STRIKES],[e.NOSEPASS]:[A.SHORE_UP,A.BODY_PRESS,A.CALM_MIND,A.TACHYON_CUTTER],[e.SKITTY]:[A.THUNDEROUS_KICK,A.ENTRAINMENT,A.TIDY_UP,A.V_CREATE],[e.SABLEYE]:[A.RECOVER,A.TOPSY_TURVY,A.CURSE,A.SALT_CURE],[e.MAWILE]:[A.BULLET_PUNCH,A.HORN_LEECH,A.EARTHQUAKE,A.MAGICAL_TORQUE],[e.ARON]:[A.HEAD_SMASH,A.BODY_PRESS,A.SHORE_UP,A.SALT_CURE],[e.MEDITITE]:[A.THUNDEROUS_KICK,A.SUCKER_PUNCH,A.BULLET_PUNCH,A.PHOTON_GEYSER],[e.ELECTRIKE]:[A.FROST_BREATH,A.HEAT_WAVE,A.NASTY_PLOT,A.ELECTRO_DRIFT],[e.PLUSLE]:[A.FLAMETHROWER,A.GLITZY_GLOW,A.SPLISHY_SPLASH,A.TAIL_GLOW],[e.MINUN]:[A.ICE_BEAM,A.BADDY_BAD,A.SPARKLY_SWIRL,A.TAIL_GLOW],[e.VOLBEAT]:[A.BATON_PASS,A.STICKY_WEB,A.DECORATE,A.VICTORY_DANCE],[e.ILLUMISE]:[A.PARTING_SHOT,A.GLITZY_GLOW,A.POWDER,A.QUIVER_DANCE],[e.GULPIN]:[A.MALIGNANT_CHAIN,A.EARTH_POWER,A.CALM_MIND,A.STRENGTH_SAP],[e.CARVANHA]:[A.THUNDER_FANG,A.GUNK_SHOT,A.OBSTRUCT,A.SURGING_STRIKES],[e.WAILMER]:[A.TAKE_HEART,A.COMEUPPANCE,A.SLACK_OFF,A.STEAM_ERUPTION],[e.NUMEL]:[A.TRICK_ROOM,A.ENERGY_BALL,A.SLACK_OFF,A.BLUE_FLARE],[e.TORKOAL]:[A.MORNING_SUN,A.BURNING_BULWARK,A.BODY_PRESS,A.HYDRO_STEAM],[e.SPOINK]:[A.AURA_SPHERE,A.MILK_DRINK,A.EXPANDING_FORCE,A.TAIL_GLOW],[e.SPINDA]:[A.SUPERPOWER,A.SLACK_OFF,A.FLEUR_CANNON,A.V_CREATE],[e.TRAPINCH]:[A.FIRE_LASH,A.DRAGON_DARTS,A.THOUSAND_ARROWS,A.DRAGON_ENERGY],[e.CACNEA]:[A.EARTH_POWER,A.CEASELESS_EDGE,A.NIGHT_DAZE,A.IVY_CUDGEL],[e.SWABLU]:[A.ROOST,A.NASTY_PLOT,A.FLOATY_FALL,A.BOOMBURST],[e.ZANGOOSE]:[A.FACADE,A.HIGH_HORSEPOWER,A.EXTREME_SPEED,A.TIDY_UP],[e.SEVIPER]:[A.ICE_BEAM,A.BITTER_BLADE,A.SUCKER_PUNCH,A.NO_RETREAT],[e.LUNATONE]:[A.REVELATION_DANCE,A.MOONGEIST_BEAM,A.SHELL_SMASH,A.LUMINA_CRASH],[e.SOLROCK]:[A.MIGHTY_CLEAVE,A.PHOTON_GEYSER,A.SHELL_SMASH,A.SACRED_FIRE],[e.BARBOACH]:[A.DRAGON_DANCE,A.ZING_ZAP,A.ICE_SPINNER,A.SURGING_STRIKES],[e.CORPHISH]:[A.CEASELESS_EDGE,A.SHELL_SIDE_ARM,A.SUCKER_PUNCH,A.JET_PUNCH],[e.BALTOY]:[A.RECOVER,A.GLARE,A.RUINATION,A.MYSTICAL_POWER],[e.LILEEP]:[A.POWER_GEM,A.SCALD,A.STRENGTH_SAP,A.SAPPY_SEED],[e.ANORITH]:[A.FIRST_IMPRESSION,A.LEECH_LIFE,A.DRAGON_DANCE,A.MIGHTY_CLEAVE],[e.FEEBAS]:[A.CALM_MIND,A.FREEZE_DRY,A.MOONBLAST,A.STEAM_ERUPTION],[e.CASTFORM]:[A.BOOMBURST,A.HYDRO_STEAM,A.ERUPTION,A.QUIVER_DANCE],[e.KECLEON]:[A.ZIPPY_ZAP,A.COIL,A.EXTREME_SPEED,A.MULTI_ATTACK],[e.SHUPPET]:[A.STORM_THROW,A.TIDY_UP,A.PARTING_SHOT,A.SPECTRAL_THIEF],[e.DUSKULL]:[A.BULK_UP,A.DRAIN_PUNCH,A.RECOVER,A.RAGE_FIST],[e.TROPIUS]:[A.STUFF_CHEEKS,A.EARTH_POWER,A.APPLE_ACID,A.SAPPY_SEED],[e.ABSOL]:[A.KOWTOW_CLEAVE,A.SACRED_SWORD,A.PSYBLADE,A.BITTER_BLADE],[e.WYNAUT]:[A.RECOVER,A.SHED_TAIL,A.TAUNT,A.COMEUPPANCE],[e.SNORUNT]:[A.SPARKLY_SWIRL,A.NASTY_PLOT,A.EARTH_POWER,A.BLOOD_MOON],[e.SPHEAL]:[A.FLIP_TURN,A.FREEZE_DRY,A.SLACK_OFF,A.STEAM_ERUPTION],[e.CLAMPERL]:[A.SHELL_SIDE_ARM,A.BOUNCY_BUBBLE,A.FREEZE_DRY,A.STEAM_ERUPTION],[e.RELICANTH]:[A.DRAGON_DANCE,A.SHORE_UP,A.WAVE_CRASH,A.DIAMOND_STORM],[e.LUVDISC]:[A.BATON_PASS,A.HEART_SWAP,A.GLITZY_GLOW,A.REVIVAL_BLESSING],[e.BAGON]:[A.HEADLONG_RUSH,A.FIRE_LASH,A.DRAGON_DANCE,A.DRAGON_DARTS],[e.BELDUM]:[A.HEADLONG_RUSH,A.DRAIN_PUNCH,A.ICE_SPINNER,A.SHIFT_GEAR],[e.REGIROCK]:[A.STONE_AXE,A.BODY_PRESS,A.SHORE_UP,A.SALT_CURE],[e.REGICE]:[A.EARTH_POWER,A.TAKE_HEART,A.RECOVER,A.FREEZE_DRY],[e.REGISTEEL]:[A.BODY_PRESS,A.SIZZLY_SLIDE,A.RECOVER,A.GIGATON_HAMMER],[e.LATIAS]:[A.CORE_ENFORCER,A.FUSION_FLARE,A.SPARKLY_SWIRL,A.MYSTICAL_POWER],[e.LATIOS]:[A.CORE_ENFORCER,A.BLUE_FLARE,A.NASTY_PLOT,A.TACHYON_CUTTER],[e.KYOGRE]:[A.RECOVER,A.HURRICANE,A.FREEZY_FROST,A.WILDBOLT_STORM],[e.GROUDON]:[A.STONE_AXE,A.SOLAR_BLADE,A.MORNING_SUN,A.SACRED_FIRE],[e.RAYQUAZA]:[A.V_CREATE,A.DRAGON_DARTS,A.CORE_ENFORCER,A.OBLIVION_WING],[e.JIRACHI]:[A.TACHYON_CUTTER,A.TRIPLE_ARROWS,A.ROCK_SLIDE,A.SHELL_SMASH],[e.DEOXYS]:[A.COLLISION_COURSE,A.FUSION_FLARE,A.PARTING_SHOT,A.LUMINA_CRASH],[e.TURTWIG]:[A.SHELL_SMASH,A.MIGHTY_CLEAVE,A.ICE_SPINNER,A.SAPPY_SEED],[e.CHIMCHAR]:[A.THUNDERBOLT,A.SECRET_SWORD,A.TRIPLE_AXEL,A.SACRED_FIRE],[e.PIPLUP]:[A.KINGS_SHIELD,A.TACHYON_CUTTER,A.FREEZE_DRY,A.STEAM_ERUPTION],[e.STARLY]:[A.SWORDS_DANCE,A.HEAD_CHARGE,A.FLARE_BLITZ,A.EXTREME_SPEED],[e.BIDOOF]:[A.EXTREME_SPEED,A.COSMIC_POWER,A.POWER_TRIP,A.AQUA_STEP],[e.KRICKETOT]:[A.BONEMERANG,A.VICTORY_DANCE,A.STONE_AXE,A.POPULATION_BOMB],[e.SHINX]:[A.FIRE_LASH,A.TRIPLE_AXEL,A.ZIPPY_ZAP,A.BOLT_STRIKE],[e.BUDEW]:[A.FIERY_DANCE,A.ACID_SPRAY,A.BOUNCY_BUBBLE,A.QUIVER_DANCE],[e.CRANIDOS]:[A.VOLT_TACKLE,A.ACCELEROCK,A.FLARE_BLITZ,A.SHIFT_GEAR],[e.SHIELDON]:[A.SHORE_UP,A.BODY_PRESS,A.KINGS_SHIELD,A.DIAMOND_STORM],[e.BURMY]:[A.FIERY_DANCE,A.DEFEND_ORDER,A.HEAL_ORDER,A.SAPPY_SEED],[e.COMBEE]:[A.SPORE,A.FLOATY_FALL,A.KINGS_SHIELD,A.VICTORY_DANCE],[e.PACHIRISU]:[A.FREEZY_FROST,A.SIZZLY_SLIDE,A.SLACK_OFF,A.THUNDER_CAGE],[e.BUIZEL]:[A.JET_PUNCH,A.TRIPLE_AXEL,A.SUPERCELL_SLAM,A.SURGING_STRIKES],[e.CHERUBI]:[A.SLEEP_POWDER,A.STRENGTH_SAP,A.FIRE_LASH,A.FLOWER_TRICK],[e.SHELLOS]:[A.BOUNCY_BUBBLE,A.SCORCHING_SANDS,A.FREEZE_DRY,A.STEAM_ERUPTION],[e.DRIFLOON]:[A.PSYCHO_SHIFT,A.MIND_BLOWN,A.CALM_MIND,A.OBLIVION_WING],[e.BUNEARY]:[A.TRIPLE_AXEL,A.EXTREME_SPEED,A.THUNDEROUS_KICK,A.SWORDS_DANCE],[e.GLAMEOW]:[A.PARTING_SHOT,A.HIGH_HORSEPOWER,A.SWORDS_DANCE,A.EXTREME_SPEED],[e.CHINGLING]:[A.ALLURING_VOICE,A.EERIE_SPELL,A.TORCH_SONG,A.BOOMBURST],[e.STUNKY]:[A.CEASELESS_EDGE,A.FIRE_LASH,A.RECOVER,A.DIRE_CLAW],[e.BRONZOR]:[A.RECOVER,A.TACHYON_CUTTER,A.GLARE,A.LUMINA_CRASH],[e.BONSLY]:[A.ACCELEROCK,A.SWORDS_DANCE,A.STRENGTH_SAP,A.SAPPY_SEED],[e.MIME_JR]:[A.CHILLY_RECEPTION,A.MOONBLAST,A.FROST_BREATH,A.LUMINA_CRASH],[e.HAPPINY]:[A.COTTON_GUARD,A.SEISMIC_TOSS,A.SIZZLY_SLIDE,A.REVIVAL_BLESSING],[e.CHATOT]:[A.SPARKLING_ARIA,A.BOOMBURST,A.BATON_PASS,A.TORCH_SONG],[e.SPIRITOMB]:[A.PARTING_SHOT,A.BADDY_BAD,A.STRENGTH_SAP,A.SPECTRAL_THIEF],[e.GIBLE]:[A.METEOR_MASH,A.BITTER_BLADE,A.LANDS_WRATH,A.DRAGON_DANCE],[e.MUNCHLAX]:[A.STUFF_CHEEKS,A.GRAV_APPLE,A.SLACK_OFF,A.EXTREME_SPEED],[e.RIOLU]:[A.THUNDEROUS_KICK,A.TACHYON_CUTTER,A.TRIPLE_AXEL,A.SUNSTEEL_STRIKE],[e.HIPPOPOTAS]:[A.SHORE_UP,A.STONE_AXE,A.BULK_UP,A.SALT_CURE],[e.SKORUPI]:[A.COIL,A.DIRE_CLAW,A.CRABHAMMER,A.WICKED_BLOW],[e.CROAGUNK]:[A.DIRE_CLAW,A.TRIPLE_AXEL,A.THUNDEROUS_KICK,A.VICTORY_DANCE],[e.CARNIVINE]:[A.STRENGTH_SAP,A.FIRE_LASH,A.COIL,A.SAPPY_SEED],[e.FINNEON]:[A.QUIVER_DANCE,A.SPLISHY_SPLASH,A.FREEZE_DRY,A.OBLIVION_WING],[e.MANTYKE]:[A.SPLISHY_SPLASH,A.FREEZY_FROST,A.NASTY_PLOT,A.OBLIVION_WING],[e.SNOVER]:[A.LANDS_WRATH,A.POWDER,A.CALM_MIND,A.MATCHA_GOTCHA],[e.ROTOM]:[A.STRENGTH_SAP,A.FIERY_DANCE,A.SPLISHY_SPLASH,A.ELECTRO_DRIFT],[e.UXIE]:[A.LUMINA_CRASH,A.AURA_SPHERE,A.RECOVER,A.TAIL_GLOW],[e.MESPRIT]:[A.PHOTON_GEYSER,A.AURA_SPHERE,A.RECOVER,A.TAIL_GLOW],[e.AZELF]:[A.PSYSTRIKE,A.AURA_SPHERE,A.ICE_BEAM,A.TAIL_GLOW],[e.DIALGA]:[A.CORE_ENFORCER,A.TAKE_HEART,A.RECOVER,A.MAKE_IT_RAIN],[e.PALKIA]:[A.MALIGNANT_CHAIN,A.TAKE_HEART,A.RECOVER,A.ORIGIN_PULSE],[e.HEATRAN]:[A.ENERGY_BALL,A.RECOVER,A.ERUPTION,A.TACHYON_CUTTER],[e.REGIGIGAS]:[A.SKILL_SWAP,A.RECOVER,A.EXTREME_SPEED,A.GIGATON_HAMMER],[e.GIRATINA]:[A.DRAGON_DANCE,A.SPECTRAL_THIEF,A.RECOVER,A.COLLISION_COURSE],[e.CRESSELIA]:[A.COSMIC_POWER,A.BODY_PRESS,A.SIZZLY_SLIDE,A.LUMINA_CRASH],[e.PHIONE]:[A.BOUNCY_BUBBLE,A.FREEZE_DRY,A.STORED_POWER,A.ORIGIN_PULSE],[e.MANAPHY]:[A.BOUNCY_BUBBLE,A.FROST_BREATH,A.WILDBOLT_STORM,A.ORIGIN_PULSE],[e.DARKRAI]:[A.FIERY_WRATH,A.MOONBLAST,A.FIERY_DANCE,A.MAKE_IT_RAIN],[e.SHAYMIN]:[A.MATCHA_GOTCHA,A.FIERY_DANCE,A.AEROBLAST,A.QUIVER_DANCE],[e.ARCEUS]:[A.NO_RETREAT,A.COLLISION_COURSE,A.ASTRAL_BARRAGE,A.MULTI_ATTACK],[e.VICTINI]:[A.BLUE_FLARE,A.BOLT_STRIKE,A.LUSTER_PURGE,A.VICTORY_DANCE],[e.SNIVY]:[A.FLAMETHROWER,A.CLANGING_SCALES,A.MAKE_IT_RAIN,A.FLEUR_CANNON],[e.TEPIG]:[A.WAVE_CRASH,A.VOLT_TACKLE,A.AXE_KICK,A.VICTORY_DANCE],[e.OSHAWOTT]:[A.FREEZE_DRY,A.SHELL_SIDE_ARM,A.SACRED_SWORD,A.SHELL_SMASH],[e.PATRAT]:[A.FAKE_OUT,A.SWORDS_DANCE,A.DYNAMIC_PUNCH,A.EXTREME_SPEED],[e.LILLIPUP]:[A.CLOSE_COMBAT,A.BODY_SLAM,A.HIGH_HORSEPOWER,A.LAST_RESPECTS],[e.PURRLOIN]:[A.ENCORE,A.OBSTRUCT,A.PARTING_SHOT,A.WICKED_BLOW],[e.PANSAGE]:[A.SWORDS_DANCE,A.FIRE_LASH,A.EARTHQUAKE,A.IVY_CUDGEL],[e.PANSEAR]:[A.NASTY_PLOT,A.HYDRO_STEAM,A.EARTH_POWER,A.ERUPTION],[e.PANPOUR]:[A.NASTY_PLOT,A.ENERGY_BALL,A.EARTH_POWER,A.WATER_SPOUT],[e.MUNNA]:[A.COSMIC_POWER,A.AURA_SPHERE,A.LUNAR_BLESSING,A.MYSTICAL_POWER],[e.PIDOVE]:[A.SLASH,A.TIDY_UP,A.FLOATY_FALL,A.TRIPLE_ARROWS],[e.BLITZLE]:[A.HORN_LEECH,A.SWORDS_DANCE,A.FLARE_BLITZ,A.BOLT_STRIKE],[e.ROGGENROLA]:[A.BODY_PRESS,A.CURSE,A.SHORE_UP,A.DIAMOND_STORM],[e.WOOBAT]:[A.ESPER_WING,A.STORED_POWER,A.MYSTICAL_FIRE,A.OBLIVION_WING],[e.DRILBUR]:[A.METEOR_MASH,A.ICE_SPINNER,A.SHIFT_GEAR,A.THOUSAND_ARROWS],[e.AUDINO]:[A.TAKE_HEART,A.MOONBLAST,A.WISH,A.MATCHA_GOTCHA],[e.TIMBURR]:[A.MACH_PUNCH,A.DRAIN_PUNCH,A.ICE_HAMMER,A.DOUBLE_IRON_BASH],[e.TYMPOLE]:[A.JET_PUNCH,A.HIGH_HORSEPOWER,A.BULK_UP,A.SURGING_STRIKES],[e.THROH]:[A.MACH_PUNCH,A.SLACK_OFF,A.METEOR_MASH,A.RAGE_FIST],[e.SAWK]:[A.DRAIN_PUNCH,A.SUCKER_PUNCH,A.METEOR_MASH,A.VICTORY_DANCE],[e.SEWADDLE]:[A.STONE_AXE,A.PSYCHO_CUT,A.BITTER_BLADE,A.VICTORY_DANCE],[e.VENIPEDE]:[A.BANEFUL_BUNKER,A.LEECH_LIFE,A.NOXIOUS_TORQUE,A.POWER_TRIP],[e.COTTONEE]:[A.POLLEN_PUFF,A.PARTING_SHOT,A.SLEEP_POWDER,A.SEED_FLARE],[e.PETILIL]:[A.THUNDEROUS_KICK,A.SPARKLING_ARIA,A.FIERY_DANCE,A.FLOWER_TRICK],[e.BASCULIN]:[A.LAST_RESPECTS,A.CLOSE_COMBAT,A.SPLISHY_SPLASH,A.NO_RETREAT],[e.SANDILE]:[A.DIRE_CLAW,A.SUCKER_PUNCH,A.FIRE_LASH,A.HEADLONG_RUSH],[e.DARUMAKA]:[A.DRAIN_PUNCH,A.ZIPPY_ZAP,A.HEADLONG_RUSH,A.PYRO_BALL],[e.MARACTUS]:[A.EARTH_POWER,A.SIZZLY_SLIDE,A.FIERY_DANCE,A.QUIVER_DANCE],[e.DWEBBLE]:[A.CRABHAMMER,A.STONE_AXE,A.LEECH_LIFE,A.MIGHTY_CLEAVE],[e.SCRAGGY]:[A.SUCKER_PUNCH,A.BULLET_PUNCH,A.NOXIOUS_TORQUE,A.VICTORY_DANCE],[e.SIGILYPH]:[A.MOONBLAST,A.PSYCHO_SHIFT,A.ESPER_WING,A.OBLIVION_WING],[e.YAMASK]:[A.STRENGTH_SAP,A.GLARE,A.AURA_SPHERE,A.ASTRAL_BARRAGE],[e.TIRTOUGA]:[A.ICE_SPINNER,A.AQUA_STEP,A.SHORE_UP,A.MIGHTY_CLEAVE],[e.ARCHEN]:[A.ROOST,A.EARTHQUAKE,A.FLOATY_FALL,A.MIGHTY_CLEAVE],[e.TRUBBISH]:[A.COIL,A.RECOVER,A.DIRE_CLAW,A.GIGATON_HAMMER],[e.ZORUA]:[A.MALIGNANT_CHAIN,A.MOONBLAST,A.SECRET_SWORD,A.FIERY_WRATH],[e.MINCCINO]:[A.ICICLE_SPEAR,A.TIDY_UP,A.KNOCK_OFF,A.POPULATION_BOMB],[e.GOTHITA]:[A.RECOVER,A.MOONBLAST,A.AURA_SPHERE,A.LUMINA_CRASH],[e.SOLOSIS]:[A.MIST_BALL,A.SPEED_SWAP,A.FLAMETHROWER,A.LIGHT_OF_RUIN],[e.DUCKLETT]:[A.SPLISHY_SPLASH,A.SANDSEAR_STORM,A.WILDBOLT_STORM,A.QUIVER_DANCE],[e.VANILLITE]:[A.EARTH_POWER,A.AURORA_VEIL,A.CALM_MIND,A.SPARKLY_SWIRL],[e.DEERLING]:[A.TIDY_UP,A.HEADBUTT,A.COMBAT_TORQUE,A.FLOWER_TRICK],[e.EMOLGA]:[A.ICICLE_CRASH,A.ZING_ZAP,A.FLOATY_FALL,A.ELECTRIFY],[e.KARRABLAST]:[A.LEECH_LIFE,A.BITTER_BLADE,A.OBSTRUCT,A.DOUBLE_IRON_BASH],[e.FOONGUS]:[A.POLLEN_PUFF,A.PARTING_SHOT,A.FOUL_PLAY,A.SAPPY_SEED],[e.FRILLISH]:[A.CALM_MIND,A.BUZZY_BUZZ,A.FREEZE_DRY,A.STEAM_ERUPTION],[e.ALOMOMOLA]:[A.FLIP_TURN,A.HEART_SWAP,A.GLITZY_GLOW,A.REVIVAL_BLESSING],[e.JOLTIK]:[A.WILDBOLT_STORM,A.PARABOLIC_CHARGE,A.EARTH_POWER,A.QUIVER_DANCE],[e.FERROSEED]:[A.SYNTHESIS,A.CEASELESS_EDGE,A.SPIKY_SHIELD,A.SAPPY_SEED],[e.KLINK]:[A.TRIPLE_AXEL,A.HIGH_HORSEPOWER,A.RECOVER,A.AURA_WHEEL],[e.TYNAMO]:[A.SCALD,A.STRENGTH_SAP,A.FIRE_LASH,A.AURA_WHEEL],[e.ELGYEM]:[A.THUNDERCLAP,A.BADDY_BAD,A.AURA_SPHERE,A.PHOTON_GEYSER],[e.LITWICK]:[A.GIGA_DRAIN,A.EARTH_POWER,A.MOONBLAST,A.TORCH_SONG],[e.AXEW]:[A.STONE_AXE,A.DIRE_CLAW,A.BITTER_BLADE,A.GLAIVE_RUSH],[e.CUBCHOO]:[A.MOUNTAIN_GALE,A.AQUA_STEP,A.ICE_SHARD,A.COLLISION_COURSE],[e.CRYOGONAL]:[A.FREEZING_GLARE,A.AURORA_VEIL,A.NASTY_PLOT,A.ORIGIN_PULSE],[e.SHELMET]:[A.POWER_GEM,A.NASTY_PLOT,A.EARTH_POWER,A.STEAM_ERUPTION],[e.STUNFISK]:[A.THUNDERCLAP,A.SANDSEAR_STORM,A.STRENGTH_SAP,A.THUNDER_CAGE],[e.MIENFOO]:[A.GUNK_SHOT,A.SUPERCELL_SLAM,A.MOUNTAIN_GALE,A.WICKED_BLOW],[e.DRUDDIGON]:[A.FIRE_LASH,A.MORNING_SUN,A.DRAGON_DARTS,A.CLANGOROUS_SOUL],[e.GOLETT]:[A.SHIFT_GEAR,A.DRAIN_PUNCH,A.HEADLONG_RUSH,A.RAGE_FIST],[e.PAWNIARD]:[A.SUCKER_PUNCH,A.CEASELESS_EDGE,A.BITTER_BLADE,A.LAST_RESPECTS],[e.BOUFFALANT]:[A.HORN_LEECH,A.HIGH_JUMP_KICK,A.HEAD_SMASH,A.FLARE_BLITZ],[e.RUFFLET]:[A.FLOATY_FALL,A.AURA_SPHERE,A.NO_RETREAT,A.BOLT_BEAK],[e.VULLABY]:[A.FOUL_PLAY,A.BODY_PRESS,A.ROOST,A.RUINATION],[e.HEATMOR]:[A.EARTH_POWER,A.OVERHEAT,A.THUNDERBOLT,A.V_CREATE],[e.DURANT]:[A.HIGH_HORSEPOWER,A.FIRST_IMPRESSION,A.SWORDS_DANCE,A.BEHEMOTH_BASH],[e.DEINO]:[A.FIERY_WRATH,A.ESPER_WING,A.SLUDGE_BOMB,A.FICKLE_BEAM],[e.LARVESTA]:[A.THUNDERBOLT,A.DAZZLING_GLEAM,A.EARTH_POWER,A.HYDRO_STEAM],[e.COBALION]:[A.BEHEMOTH_BLADE,A.MIGHTY_CLEAVE,A.CEASELESS_EDGE,A.VICTORY_DANCE],[e.TERRAKION]:[A.MIGHTY_CLEAVE,A.HEADLONG_RUSH,A.KNOCK_OFF,A.VICTORY_DANCE],[e.VIRIZION]:[A.SAPPY_SEED,A.PSYBLADE,A.STONE_AXE,A.VICTORY_DANCE],[e.TORNADUS]:[A.SANDSEAR_STORM,A.PARTING_SHOT,A.SPLISHY_SPLASH,A.OBLIVION_WING],[e.THUNDURUS]:[A.SANDSEAR_STORM,A.HURRICANE,A.FROST_BREATH,A.ELECTRO_SHOT],[e.RESHIRAM]:[A.ENERGY_BALL,A.TAKE_HEART,A.FICKLE_BEAM,A.ERUPTION],[e.ZEKROM]:[A.TRIPLE_AXEL,A.THUNDEROUS_KICK,A.DRAGON_HAMMER,A.DRAGON_ENERGY],[e.LANDORUS]:[A.STONE_AXE,A.FLOATY_FALL,A.ROOST,A.BLEAKWIND_STORM],[e.KYUREM]:[A.DRAGON_DARTS,A.GLACIAL_LANCE,A.NO_RETREAT,A.DRAGON_ENERGY],[e.KELDEO]:[A.BOUNCY_BUBBLE,A.THUNDERBOLT,A.ICE_BEAM,A.STEAM_ERUPTION],[e.MELOETTA]:[A.BODY_SLAM,A.PSYCHIC_NOISE,A.TRIPLE_ARROWS,A.TORCH_SONG],[e.GENESECT]:[A.EXTREME_SPEED,A.SHIFT_GEAR,A.BEHEMOTH_BASH,A.TACHYON_CUTTER],[e.CHESPIN]:[A.COMBAT_TORQUE,A.SYNTHESIS,A.CEASELESS_EDGE,A.SAPPY_SEED],[e.FENNEKIN]:[A.TWIN_BEAM,A.FIERY_DANCE,A.THUNDERBOLT,A.SPARKLY_SWIRL],[e.FROAKIE]:[A.MOONBLAST,A.SHELL_SIDE_ARM,A.FIERY_WRATH,A.STEAM_ERUPTION],[e.BUNNELBY]:[A.DRAIN_PUNCH,A.TIDY_UP,A.LANDS_WRATH,A.EXTREME_SPEED],[e.FLETCHLING]:[A.DRILL_RUN,A.BURNING_BULWARK,A.HEAD_SMASH,A.VOLT_TACKLE],[e.SCATTERBUG]:[A.FOCUS_BLAST,A.AFTER_YOU,A.DECORATE,A.BLIZZARD],[e.LITLEO]:[A.EARTH_POWER,A.NASTY_PLOT,A.BURNING_BULWARK,A.BLUE_FLARE],[e.FLABEBE]:[A.GLITZY_GLOW,A.MYSTICAL_FIRE,A.TAKE_HEART,A.SEED_FLARE],[e.SKIDDO]:[A.HIGH_HORSEPOWER,A.GRASSY_GLIDE,A.STONE_AXE,A.SAPPY_SEED],[e.PANCHAM]:[A.DRAIN_PUNCH,A.SUCKER_PUNCH,A.METEOR_MASH,A.WICKED_BLOW],[e.FURFROU]:[A.TIDY_UP,A.SLACK_OFF,A.COMBAT_TORQUE,A.MULTI_ATTACK],[e.ESPURR]:[A.LUSTER_PURGE,A.MOONBLAST,A.AURA_SPHERE,A.DARK_VOID],[e.HONEDGE]:[A.TACHYON_CUTTER,A.SHADOW_BONE,A.BITTER_BLADE,A.BEHEMOTH_BLADE],[e.SPRITZEE]:[A.SPEED_SWAP,A.REVIVAL_BLESSING,A.ROOST,A.TORCH_SONG],[e.SWIRLIX]:[A.BELLY_DRUM,A.HEADLONG_RUSH,A.MAGICAL_TORQUE,A.REVIVAL_BLESSING],[e.INKAY]:[A.POWER_TRIP,A.SPIN_OUT,A.RECOVER,A.PSYCHO_BOOST],[e.BINACLE]:[A.TRIPLE_AXEL,A.CRABHAMMER,A.DIRE_CLAW,A.MIGHTY_CLEAVE],[e.SKRELP]:[A.STRENGTH_SAP,A.TRICK_ROOM,A.CALM_MIND,A.CORE_ENFORCER],[e.CLAUNCHER]:[A.SHELL_SMASH,A.ARMOR_CANNON,A.ENERGY_BALL,A.ORIGIN_PULSE],[e.HELIOPTILE]:[A.WEATHER_BALL,A.HYDRO_STEAM,A.EARTH_POWER,A.BOOMBURST],[e.TYRUNT]:[A.DRAGON_HAMMER,A.FLARE_BLITZ,A.VOLT_TACKLE,A.SHIFT_GEAR],[e.AMAURA]:[A.RECOVER,A.TERA_STARSTORM,A.POWER_GEM,A.GEOMANCY],[e.HAWLUCHA]:[A.TRIPLE_AXEL,A.HIGH_HORSEPOWER,A.FLOATY_FALL,A.WICKED_BLOW],[e.DEDENNE]:[A.BOOMBURST,A.FAKE_OUT,A.NASTY_PLOT,A.REVIVAL_BLESSING],[e.CARBINK]:[A.BODY_PRESS,A.SHORE_UP,A.SPARKLY_SWIRL,A.DIAMOND_STORM],[e.GOOMY]:[A.DRAGON_HAMMER,A.RECOVER,A.CALM_MIND,A.MAKE_IT_RAIN],[e.KLEFKI]:[A.HEAL_BELL,A.ENCORE,A.INSTRUCT,A.TOPSY_TURVY],[e.PHANTUMP]:[A.RAGE_FIST,A.SLEEP_POWDER,A.BULK_UP,A.SAPPY_SEED],[e.PUMPKABOO]:[A.SPIRIT_SHACKLE,A.FIRE_LASH,A.DIRE_CLAW,A.SAPPY_SEED],[e.BERGMITE]:[A.STONE_AXE,A.METAL_BURST,A.BODY_PRESS,A.GLACIAL_LANCE],[e.NOIBAT]:[A.AEROBLAST,A.OVERDRIVE,A.NASTY_PLOT,A.CLANGING_SCALES],[e.XERNEAS]:[A.EARTH_POWER,A.SPRINGTIDE_STORM,A.STORED_POWER,A.STRENGTH_SAP],[e.YVELTAL]:[A.SLUDGE_WAVE,A.POWER_TRIP,A.FIERY_WRATH,A.CLANGOROUS_SOUL],[e.ZYGARDE]:[A.DRAGON_DARTS,A.V_CREATE,A.CLANGOROUS_SOUL,A.HEAL_ORDER],[e.DIANCIE]:[A.MAGICAL_TORQUE,A.FIERY_DANCE,A.SHORE_UP,A.GEOMANCY],[e.HOOPA]:[A.PHOTON_GEYSER,A.SECRET_SWORD,A.FIERY_WRATH,A.SHELL_SMASH],[e.VOLCANION]:[A.HYDRO_STEAM,A.CALM_MIND,A.SEARING_SHOT,A.THUNDERCLAP],[e.ETERNAL_FLOETTE]:[A.MIND_BLOWN,A.CHLOROBLAST,A.LUSTER_PURGE,A.QUIVER_DANCE],[e.ROWLET]:[A.THOUSAND_ARROWS,A.SHADOW_BONE,A.FIRST_IMPRESSION,A.VICTORY_DANCE],[e.LITTEN]:[A.SUCKER_PUNCH,A.PARTING_SHOT,A.SLACK_OFF,A.SACRED_FIRE],[e.POPPLIO]:[A.PSYCHIC_NOISE,A.MOONLIGHT,A.OVERDRIVE,A.TORCH_SONG],[e.PIKIPEK]:[A.DUAL_WINGBEAT,A.BONE_RUSH,A.BURNING_BULWARK,A.POPULATION_BOMB],[e.YUNGOOS]:[A.EXTREME_SPEED,A.KNOCK_OFF,A.TIDY_UP,A.MULTI_ATTACK],[e.GRUBBIN]:[A.ICE_BEAM,A.EARTH_POWER,A.CALM_MIND,A.THUNDERCLAP],[e.CRABRAWLER]:[A.JET_PUNCH,A.SHORE_UP,A.MACH_PUNCH,A.SURGING_STRIKES],[e.ORICORIO]:[A.QUIVER_DANCE,A.FIERY_DANCE,A.THUNDERCLAP,A.OBLIVION_WING],[e.CUTIEFLY]:[A.STICKY_WEB,A.SLEEP_POWDER,A.HEAT_WAVE,A.SPARKLY_SWIRL],[e.ROCKRUFF]:[A.HIGH_HORSEPOWER,A.TIDY_UP,A.ICE_SPINNER,A.MIGHTY_CLEAVE],[e.WISHIWASHI]:[A.HEAL_ORDER,A.FREEZE_DRY,A.WATER_SHURIKEN,A.TAIL_GLOW],[e.MAREANIE]:[A.CEASELESS_EDGE,A.SIZZLY_SLIDE,A.BODY_PRESS,A.LEECH_SEED],[e.MUDBRAY]:[A.BODY_PRESS,A.YAWN,A.SHORE_UP,A.THOUSAND_WAVES],[e.DEWPIDER]:[A.AQUA_STEP,A.SILK_TRAP,A.SWORDS_DANCE,A.JET_PUNCH],[e.FOMANTIS]:[A.SUPERPOWER,A.HEADLONG_RUSH,A.ICE_HAMMER,A.BITTER_BLADE],[e.MORELULL]:[A.CALM_MIND,A.SAPPY_SEED,A.DRAINING_KISS,A.MATCHA_GOTCHA],[e.SALANDIT]:[A.SCALD,A.MALIGNANT_CHAIN,A.CORE_ENFORCER,A.ERUPTION],[e.STUFFUL]:[A.DRAIN_PUNCH,A.METEOR_MASH,A.TRIPLE_AXEL,A.RAGE_FIST],[e.BOUNSWEET]:[A.TRIPLE_AXEL,A.AQUA_STEP,A.THUNDEROUS_KICK,A.SAPPY_SEED],[e.COMFEY]:[A.REVIVAL_BLESSING,A.TAKE_HEART,A.STRENGTH_SAP,A.MATCHA_GOTCHA],[e.ORANGURU]:[A.JUNGLE_HEALING,A.YAWN,A.FOLLOW_ME,A.LUMINA_CRASH],[e.PASSIMIAN]:[A.PYRO_BALL,A.SUCKER_PUNCH,A.ZING_ZAP,A.VICTORY_DANCE],[e.WIMPOD]:[A.TRIPLE_AXEL,A.OBSTRUCT,A.JET_PUNCH,A.SURGING_STRIKES],[e.SANDYGAST]:[A.BITTER_MALICE,A.SPLISHY_SPLASH,A.TAKE_HEART,A.SALT_CURE],[e.PYUKUMUKU]:[A.COMEUPPANCE,A.BANEFUL_BUNKER,A.TOXIC_SPIKES,A.SALT_CURE],[e.TYPE_NULL]:[A.DIRE_CLAW,A.RECOVER,A.COMBAT_TORQUE,A.NO_RETREAT],[e.MINIOR]:[A.EARTH_POWER,A.FLOATY_FALL,A.TRI_ATTACK,A.DIAMOND_STORM],[e.KOMALA]:[A.SLACK_OFF,A.EXTREME_SPEED,A.KNOCK_OFF,A.COLLISION_COURSE],[e.TURTONATOR]:[A.BURNING_BULWARK,A.MORNING_SUN,A.BODY_PRESS,A.CORE_ENFORCER],[e.TOGEDEMARU]:[A.FAKE_OUT,A.METAL_BURST,A.METEOR_MASH,A.AURA_WHEEL],[e.MIMIKYU]:[A.SPIRIT_BREAK,A.TIDY_UP,A.FIRE_LASH,A.SPECTRAL_THIEF],[e.BRUXISH]:[A.PLAY_ROUGH,A.FIRE_FANG,A.DRAGON_DANCE,A.SURGING_STRIKES],[e.DRAMPA]:[A.SLACK_OFF,A.TRICK_ROOM,A.CORE_ENFORCER,A.BOOMBURST],[e.DHELMISE]:[A.SHADOW_BONE,A.IVY_CUDGEL,A.TRIPLE_DIVE,A.STRENGTH_SAP],[e.JANGMO_O]:[A.BODY_PRESS,A.SHELL_SIDE_ARM,A.SECRET_SWORD,A.GLAIVE_RUSH],[e.TAPU_KOKO]:[A.MAGICAL_TORQUE,A.TRIPLE_AXEL,A.SWORDS_DANCE,A.BOLT_STRIKE],[e.TAPU_LELE]:[A.MOONLIGHT,A.NASTY_PLOT,A.HEAT_WAVE,A.EXPANDING_FORCE],[e.TAPU_BULU]:[A.SAPPY_SEED,A.LANDS_WRATH,A.MAGICAL_TORQUE,A.VICTORY_DANCE],[e.TAPU_FINI]:[A.SPRINGTIDE_STORM,A.EARTH_POWER,A.RECOVER,A.QUIVER_DANCE],[e.COSMOG]:[A.PHOTON_GEYSER,A.PRECIPICE_BLADES,A.SACRED_FIRE,A.ASTRAL_BARRAGE],[e.NIHILEGO]:[A.STRENGTH_SAP,A.MALIGNANT_CHAIN,A.EARTH_POWER,A.QUIVER_DANCE],[e.BUZZWOLE]:[A.FIRST_IMPRESSION,A.COMBAT_TORQUE,A.ROCK_BLAST,A.DOUBLE_IRON_BASH],[e.PHEROMOSA]:[A.SECRET_SWORD,A.MAKE_IT_RAIN,A.ATTACK_ORDER,A.DIAMOND_STORM],[e.XURKITREE]:[A.FLAMETHROWER,A.GIGA_DRAIN,A.TAIL_GLOW,A.THUNDERCLAP],[e.CELESTEELA]:[A.RECOVER,A.BUZZY_BUZZ,A.EARTH_POWER,A.OBLIVION_WING],[e.KARTANA]:[A.MIGHTY_CLEAVE,A.DUAL_CHOP,A.BITTER_BLADE,A.BEHEMOTH_BLADE],[e.GUZZLORD]:[A.SUCKER_PUNCH,A.COMEUPPANCE,A.SLACK_OFF,A.SHED_TAIL],[e.NECROZMA]:[A.DYNAMAX_CANNON,A.SACRED_FIRE,A.ASTRAL_BARRAGE,A.CLANGOROUS_SOUL],[e.MAGEARNA]:[A.STRENGTH_SAP,A.EARTH_POWER,A.MOONBLAST,A.MAKE_IT_RAIN],[e.MARSHADOW]:[A.POWER_UP_PUNCH,A.BONEMERANG,A.METEOR_MASH,A.TRIPLE_AXEL],[e.POIPOLE]:[A.MALIGNANT_CHAIN,A.ICE_BEAM,A.ARMOR_CANNON,A.CLANGING_SCALES],[e.STAKATAKA]:[A.HEAVY_SLAM,A.SHORE_UP,A.CURSE,A.SALT_CURE],[e.BLACEPHALON]:[A.STEEL_BEAM,A.MOONBLAST,A.CHLOROBLAST,A.MOONGEIST_BEAM],[e.ZERAORA]:[A.SWORDS_DANCE,A.U_TURN,A.COLLISION_COURSE,A.TRIPLE_AXEL],[e.MELTAN]:[A.BULLET_PUNCH,A.DRAIN_PUNCH,A.BULK_UP,A.PLASMA_FISTS],[e.ALOLA_RATTATA]:[A.FALSE_SURRENDER,A.PSYCHIC_FANGS,A.COIL,A.EXTREME_SPEED],[e.ALOLA_SANDSHREW]:[A.SPIKY_SHIELD,A.LIQUIDATION,A.SHIFT_GEAR,A.GLACIAL_LANCE],[e.ALOLA_VULPIX]:[A.MOONBLAST,A.GLARE,A.MYSTICAL_FIRE,A.REVIVAL_BLESSING],[e.ALOLA_DIGLETT]:[A.THOUSAND_WAVES,A.SWORDS_DANCE,A.TRIPLE_DIVE,A.PYRO_BALL],[e.ALOLA_MEOWTH]:[A.BADDY_BAD,A.BUZZY_BUZZ,A.PARTING_SHOT,A.MAKE_IT_RAIN],[e.ALOLA_GEODUDE]:[A.THOUSAND_WAVES,A.BULK_UP,A.STONE_AXE,A.EXTREME_SPEED],[e.ALOLA_GRIMER]:[A.SUCKER_PUNCH,A.BARB_BARRAGE,A.RECOVER,A.SURGING_STRIKES],[e.GROOKEY]:[A.ROCK_SLIDE,A.PLAY_ROUGH,A.GRASSY_GLIDE,A.CLANGOROUS_SOUL],[e.SCORBUNNY]:[A.EXTREME_SPEED,A.HIGH_JUMP_KICK,A.TRIPLE_AXEL,A.BOLT_STRIKE],[e.SOBBLE]:[A.AEROBLAST,A.FROST_BREATH,A.ENERGY_BALL,A.NASTY_PLOT],[e.SKWOVET]:[A.SUCKER_PUNCH,A.SLACK_OFF,A.COIL,A.POPULATION_BOMB],[e.ROOKIDEE]:[A.ROOST,A.BODY_PRESS,A.KINGS_SHIELD,A.BEHEMOTH_BASH],[e.BLIPBUG]:[A.HEAL_ORDER,A.LUSTER_PURGE,A.SLEEP_POWDER,A.TAIL_GLOW],[e.NICKIT]:[A.BADDY_BAD,A.FLAMETHROWER,A.SPARKLY_SWIRL,A.MAKE_IT_RAIN],[e.GOSSIFLEUR]:[A.PARTING_SHOT,A.STRENGTH_SAP,A.SAPPY_SEED,A.SEED_FLARE],[e.WOOLOO]:[A.NUZZLE,A.MILK_DRINK,A.BODY_PRESS,A.MULTI_ATTACK],[e.CHEWTLE]:[A.ICE_FANG,A.PSYCHIC_FANGS,A.SHELL_SMASH,A.MIGHTY_CLEAVE],[e.YAMPER]:[A.ICE_FANG,A.SWORDS_DANCE,A.THUNDER_FANG,A.BOLT_STRIKE],[e.ROLYCOLY]:[A.BITTER_BLADE,A.BODY_PRESS,A.BULK_UP,A.DIAMOND_STORM],[e.APPLIN]:[A.CORE_ENFORCER,A.COMBAT_TORQUE,A.SAPPY_SEED,A.MATCHA_GOTCHA],[e.SILICOBRA]:[A.SHORE_UP,A.SHED_TAIL,A.MOUNTAIN_GALE,A.THOUSAND_ARROWS],[e.CRAMORANT]:[A.APPLE_ACID,A.SURF,A.BOLT_BEAK,A.OBLIVION_WING],[e.ARROKUDA]:[A.SUPERCELL_SLAM,A.TRIPLE_DIVE,A.ICE_SPINNER,A.SWORDS_DANCE],[e.TOXEL]:[A.BUZZY_BUZZ,A.BUG_BUZZ,A.SPARKLING_ARIA,A.TORCH_SONG],[e.SIZZLIPEDE]:[A.BURNING_BULWARK,A.ZING_ZAP,A.FIRST_IMPRESSION,A.BITTER_BLADE],[e.CLOBBOPUS]:[A.STORM_THROW,A.JET_PUNCH,A.MACH_PUNCH,A.SURGING_STRIKES],[e.SINISTEA]:[A.SPLISHY_SPLASH,A.MATCHA_GOTCHA,A.DRAINING_KISS,A.MOONGEIST_BEAM],[e.HATENNA]:[A.RECOVER,A.MOONBLAST,A.BUZZY_BUZZ,A.TORCH_SONG],[e.IMPIDIMP]:[A.SLACK_OFF,A.PARTING_SHOT,A.OCTOLOCK,A.WICKED_BLOW],[e.MILCERY]:[A.MOONBLAST,A.CHILLY_RECEPTION,A.EARTH_POWER,A.GEOMANCY],[e.FALINKS]:[A.BATON_PASS,A.POWER_TRIP,A.COMBAT_TORQUE,A.HEAL_ORDER],[e.PINCURCHIN]:[A.TRICK_ROOM,A.VOLT_SWITCH,A.STRENGTH_SAP,A.THUNDERCLAP],[e.SNOM]:[A.FROST_BREATH,A.HEAL_ORDER,A.EARTH_POWER,A.SPORE],[e.STONJOURNER]:[A.BODY_PRESS,A.HELPING_HAND,A.ACCELEROCK,A.DIAMOND_STORM],[e.EISCUE]:[A.TRIPLE_AXEL,A.AQUA_STEP,A.AXE_KICK,A.SHELL_SMASH],[e.INDEEDEE]:[A.MATCHA_GOTCHA,A.EXPANDING_FORCE,A.MOONBLAST,A.REVIVAL_BLESSING],[e.MORPEKO]:[A.TRIPLE_AXEL,A.OBSTRUCT,A.SWORDS_DANCE,A.COLLISION_COURSE],[e.CUFANT]:[A.LIQUIDATION,A.CURSE,A.COMBAT_TORQUE,A.GIGATON_HAMMER],[e.DRACOZOLT]:[A.TRIPLE_AXEL,A.GUNK_SHOT,A.FIRE_LASH,A.DRAGON_DANCE],[e.ARCTOZOLT]:[A.MOUNTAIN_GALE,A.AQUA_STEP,A.HIGH_HORSEPOWER,A.SHIFT_GEAR],[e.DRACOVISH]:[A.TRIPLE_AXEL,A.DRAGON_HAMMER,A.THUNDER_FANG,A.DRAGON_DANCE],[e.ARCTOVISH]:[A.ICE_FANG,A.THUNDER_FANG,A.HIGH_HORSEPOWER,A.SHIFT_GEAR],[e.DURALUDON]:[A.CORE_ENFORCER,A.BODY_PRESS,A.RECOVER,A.TACHYON_CUTTER],[e.DREEPY]:[A.SHADOW_BONE,A.POWER_UP_PUNCH,A.FIRE_LASH,A.DIRE_CLAW],[e.ZACIAN]:[A.MAGICAL_TORQUE,A.MIGHTY_CLEAVE,A.BITTER_BLADE,A.PRECIPICE_BLADES],[e.ZAMAZENTA]:[A.BULK_UP,A.BODY_PRESS,A.SLACK_OFF,A.DIAMOND_STORM],[e.ETERNATUS]:[A.BODY_PRESS,A.NASTY_PLOT,A.MALIGNANT_CHAIN,A.DRAGON_ENERGY],[e.KUBFU]:[A.METEOR_MASH,A.DRAIN_PUNCH,A.JET_PUNCH,A.DRAGON_DANCE],[e.ZARUDE]:[A.SAPPY_SEED,A.MIGHTY_CLEAVE,A.WICKED_BLOW,A.VICTORY_DANCE],[e.REGIELEKI]:[A.NASTY_PLOT,A.ICE_BEAM,A.EARTH_POWER,A.ELECTRO_DRIFT],[e.REGIDRAGO]:[A.SHELL_SIDE_ARM,A.FLAMETHROWER,A.TAKE_HEART,A.DRAGON_DARTS],[e.GLASTRIER]:[A.SPEED_SWAP,A.SLACK_OFF,A.HIGH_HORSEPOWER,A.GLACIAL_LANCE],[e.SPECTRIER]:[A.EARTH_POWER,A.MOONLIGHT,A.AURA_SPHERE,A.ASTRAL_BARRAGE],[e.CALYREX]:[A.SAPPY_SEED,A.RECOVER,A.SECRET_SWORD,A.PHOTON_GEYSER],[e.ENAMORUS]:[A.AEROBLAST,A.THOUSAND_ARROWS,A.STORED_POWER,A.FLEUR_CANNON],[e.GALAR_MEOWTH]:[A.LIQUIDATION,A.HORN_LEECH,A.BULLET_PUNCH,A.BEHEMOTH_BASH],[e.GALAR_PONYTA]:[A.MAGICAL_TORQUE,A.EXTREME_SPEED,A.FLARE_BLITZ,A.PHOTON_GEYSER],[e.GALAR_SLOWPOKE]:[A.SHED_TAIL,A.BADDY_BAD,A.MOONBLAST,A.PHOTON_GEYSER],[e.GALAR_FARFETCHD]:[A.ROOST,A.SACRED_SWORD,A.KINGS_SHIELD,A.BEHEMOTH_BLADE],[e.GALAR_ARTICUNO]:[A.SECRET_SWORD,A.NIGHT_DAZE,A.ICE_BEAM,A.OBLIVION_WING],[e.GALAR_ZAPDOS]:[A.POISON_JAB,A.FLOATY_FALL,A.ROOST,A.BOLT_BEAK],[e.GALAR_MOLTRES]:[A.ROOST,A.SLUDGE_BOMB,A.FLAMETHROWER,A.OBLIVION_WING],[e.GALAR_CORSOLA]:[A.SHELL_SMASH,A.AURA_SPHERE,A.INFERNAL_PARADE,A.ASTRAL_BARRAGE],[e.GALAR_ZIGZAGOON]:[A.CEASELESS_EDGE,A.FACADE,A.PARTING_SHOT,A.EXTREME_SPEED],[e.GALAR_DARUMAKA]:[A.ICE_SPINNER,A.ZING_ZAP,A.DRAIN_PUNCH,A.PYRO_BALL],[e.GALAR_YAMASK]:[A.STRENGTH_SAP,A.DIRE_CLAW,A.THOUSAND_WAVES,A.SPECTRAL_THIEF],[e.GALAR_STUNFISK]:[A.SPIKY_SHIELD,A.THOUSAND_ARROWS,A.STRENGTH_SAP,A.DOUBLE_IRON_BASH],[e.HISUI_GROWLITHE]:[A.WAVE_CRASH,A.HEAD_SMASH,A.VOLT_TACKLE,A.DRAGON_DANCE],[e.HISUI_VOLTORB]:[A.FROST_BREATH,A.NASTY_PLOT,A.APPLE_ACID,A.ELECTRO_DRIFT],[e.HISUI_QWILFISH]:[A.CEASELESS_EDGE,A.BANEFUL_BUNKER,A.RECOVER,A.FISHIOUS_REND],[e.HISUI_SNEASEL]:[A.DRAIN_PUNCH,A.KNOCK_OFF,A.PSYCHIC_FANGS,A.TRIPLE_AXEL],[e.HISUI_ZORUA]:[A.MOONBLAST,A.SECRET_SWORD,A.PARTING_SHOT,A.BLOOD_MOON],[e.SPRIGATITO]:[A.FIRE_LASH,A.TRIPLE_AXEL,A.SUCKER_PUNCH,A.WICKED_BLOW],[e.FUECOCO]:[A.ALLURING_VOICE,A.SLACK_OFF,A.OVERDRIVE,A.MOONGEIST_BEAM],[e.QUAXLY]:[A.DRAGON_DANCE,A.TRIPLE_AXEL,A.POWER_TRIP,A.THUNDEROUS_KICK],[e.LECHONK]:[A.MILK_DRINK,A.PSYSHIELD_BASH,A.BLAZING_TORQUE,A.FILLET_AWAY],[e.TAROUNTULA]:[A.STONE_AXE,A.LEECH_LIFE,A.THIEF,A.SPORE],[e.NYMBLE]:[A.KNOCK_OFF,A.FELL_STINGER,A.ATTACK_ORDER,A.WICKED_BLOW],[e.PAWMI]:[A.DRAIN_PUNCH,A.METEOR_MASH,A.JET_PUNCH,A.PLASMA_FISTS],[e.TANDEMAUS]:[A.BATON_PASS,A.COVET,A.SIZZLY_SLIDE,A.REVIVAL_BLESSING],[e.FIDOUGH]:[A.SOFT_BOILED,A.HIGH_HORSEPOWER,A.SIZZLY_SLIDE,A.TIDY_UP],[e.SMOLIV]:[A.STRENGTH_SAP,A.EARTH_POWER,A.CALM_MIND,A.BOOMBURST],[e.SQUAWKABILLY]:[A.PARTING_SHOT,A.EARTHQUAKE,A.FLARE_BLITZ,A.EXTREME_SPEED],[e.NACLI]:[A.BODY_PRESS,A.TOXIC,A.CURSE,A.DIAMOND_STORM],[e.CHARCADET]:[A.SACRED_SWORD,A.PHOTON_GEYSER,A.MOONBLAST,A.SPECTRAL_THIEF],[e.TADBULB]:[A.PARABOLIC_CHARGE,A.SCALD,A.EARTH_POWER,A.ELECTRO_SHOT],[e.WATTREL]:[A.NASTY_PLOT,A.SPLISHY_SPLASH,A.SANDSEAR_STORM,A.WILDBOLT_STORM],[e.MASCHIFF]:[A.PARTING_SHOT,A.COMBAT_TORQUE,A.PSYCHIC_FANGS,A.NO_RETREAT],[e.SHROODLE]:[A.GASTRO_ACID,A.PARTING_SHOT,A.TOXIC,A.SKETCH],[e.BRAMBLIN]:[A.TAILWIND,A.STRENGTH_SAP,A.FLOWER_TRICK,A.LAST_RESPECTS],[e.TOEDSCOOL]:[A.STRENGTH_SAP,A.TOPSY_TURVY,A.SAPPY_SEED,A.TAIL_GLOW],[e.KLAWF]:[A.CRABHAMMER,A.SHORE_UP,A.MIGHTY_CLEAVE,A.SHELL_SMASH],[e.CAPSAKID]:[A.STRENGTH_SAP,A.APPLE_ACID,A.FROST_BREATH,A.TORCH_SONG],[e.RELLOR]:[A.HEAL_BLOCK,A.RECOVER,A.MAGIC_POWDER,A.LUMINA_CRASH],[e.FLITTLE]:[A.COSMIC_POWER,A.AURA_SPHERE,A.ROOST,A.FIERY_DANCE],[e.TINKATINK]:[A.MAGICAL_TORQUE,A.PYRO_BALL,A.IVY_CUDGEL,A.SHIFT_GEAR],[e.WIGLETT]:[A.SHELL_SMASH,A.ICICLE_CRASH,A.SEED_BOMB,A.SURGING_STRIKES],[e.BOMBIRDIER]:[A.FLOATY_FALL,A.SWORDS_DANCE,A.SUCKER_PUNCH,A.MIGHTY_CLEAVE],[e.FINIZEN]:[A.TRIPLE_AXEL,A.DRAIN_PUNCH,A.HEADLONG_RUSH,A.SURGING_STRIKES],[e.VAROOM]:[A.COMBAT_TORQUE,A.U_TURN,A.BLAZING_TORQUE,A.NOXIOUS_TORQUE],[e.CYCLIZAR]:[A.PARTING_SHOT,A.FIRE_LASH,A.MAGICAL_TORQUE,A.GLAIVE_RUSH],[e.ORTHWORM]:[A.SIZZLY_SLIDE,A.COIL,A.BODY_PRESS,A.SHORE_UP],[e.GLIMMET]:[A.CALM_MIND,A.GIGA_DRAIN,A.FIERY_DANCE,A.MALIGNANT_CHAIN],[e.GREAVARD]:[A.SHADOW_BONE,A.SIZZLY_SLIDE,A.SHORE_UP,A.COLLISION_COURSE],[e.FLAMIGO]:[A.THUNDEROUS_KICK,A.TRIPLE_AXEL,A.FLOATY_FALL,A.VICTORY_DANCE],[e.CETODDLE]:[A.ZING_ZAP,A.HIGH_HORSEPOWER,A.SLACK_OFF,A.DRAGON_DANCE],[e.VELUZA]:[A.PSYBLADE,A.LEAF_BLADE,A.CEASELESS_EDGE,A.BITTER_BLADE],[e.DONDOZO]:[A.SOFT_BOILED,A.SIZZLY_SLIDE,A.BREAKING_SWIPE,A.SALT_CURE],[e.TATSUGIRI]:[A.SLUDGE_BOMB,A.FILLET_AWAY,A.CORE_ENFORCER,A.STEAM_ERUPTION],[e.GREAT_TUSK]:[A.STONE_AXE,A.MORNING_SUN,A.COLLISION_COURSE,A.SHIFT_GEAR],[e.SCREAM_TAIL]:[A.TORCH_SONG,A.GLITZY_GLOW,A.MOONLIGHT,A.SPARKLY_SWIRL],[e.BRUTE_BONNET]:[A.SAPPY_SEED,A.STRENGTH_SAP,A.EARTHQUAKE,A.WICKED_BLOW],[e.FLUTTER_MANE]:[A.MOONLIGHT,A.NASTY_PLOT,A.EARTH_POWER,A.MOONGEIST_BEAM],[e.SLITHER_WING]:[A.MIGHTY_CLEAVE,A.THUNDEROUS_KICK,A.FIRE_LASH,A.VICTORY_DANCE],[e.SANDY_SHOCKS]:[A.MORNING_SUN,A.ICE_BEAM,A.NASTY_PLOT,A.THUNDERCLAP],[e.IRON_TREADS]:[A.FUSION_BOLT,A.SHIFT_GEAR,A.SHORE_UP,A.SUNSTEEL_STRIKE],[e.IRON_BUNDLE]:[A.EARTH_POWER,A.SPLISHY_SPLASH,A.VOLT_SWITCH,A.NASTY_PLOT],[e.IRON_HANDS]:[A.DRAIN_PUNCH,A.BULK_UP,A.PLASMA_FISTS,A.ICE_HAMMER],[e.IRON_JUGULIS]:[A.FIERY_WRATH,A.ROOST,A.NASTY_PLOT,A.OBLIVION_WING],[e.IRON_MOTH]:[A.EARTH_POWER,A.SEARING_SHOT,A.MALIGNANT_CHAIN,A.QUIVER_DANCE],[e.IRON_THORNS]:[A.DIAMOND_STORM,A.SHORE_UP,A.SHIFT_GEAR,A.PLASMA_FISTS],[e.FRIGIBAX]:[A.BEHEMOTH_BLADE,A.DRAGON_DANCE,A.MOUNTAIN_GALE,A.PRECIPICE_BLADES],[e.GIMMIGHOUL]:[A.HAPPY_HOUR,A.AURA_SPHERE,A.SURF,A.ASTRAL_BARRAGE],[e.WO_CHIEN]:[A.SPORE,A.FIERY_WRATH,A.SAPPY_SEED,A.STRENGTH_SAP],[e.CHIEN_PAO]:[A.KNOCK_OFF,A.PARTING_SHOT,A.TRIPLE_AXEL,A.BITTER_BLADE],[e.TING_LU]:[A.SHORE_UP,A.CEASELESS_EDGE,A.SAPPY_SEED,A.PRECIPICE_BLADES],[e.CHI_YU]:[A.FIERY_WRATH,A.HYDRO_STEAM,A.MORNING_SUN,A.BLUE_FLARE],[e.ROARING_MOON]:[A.FIRE_LASH,A.DRAGON_HAMMER,A.METEOR_MASH,A.DRAGON_ASCENT],[e.IRON_VALIANT]:[A.PLASMA_FISTS,A.NO_RETREAT,A.SECRET_SWORD,A.MAGICAL_TORQUE],[e.KORAIDON]:[A.SUNSTEEL_STRIKE,A.SOLAR_BLADE,A.DRAGON_DARTS,A.BITTER_BLADE],[e.MIRAIDON]:[A.FROST_BREATH,A.WILDBOLT_STORM,A.SPACIAL_REND,A.RISING_VOLTAGE],[e.WALKING_WAKE]:[A.BOUNCY_BUBBLE,A.FUSION_FLARE,A.SLUDGE_WAVE,A.CORE_ENFORCER],[e.IRON_LEAVES]:[A.BITTER_BLADE,A.U_TURN,A.MIGHTY_CLEAVE,A.VICTORY_DANCE],[e.POLTCHAGEIST]:[A.PARABOLIC_CHARGE,A.BOUNCY_BUBBLE,A.LEECH_SEED,A.SPARKLY_SWIRL],[e.OKIDOGI]:[A.COMBAT_TORQUE,A.TIDY_UP,A.DIRE_CLAW,A.WICKED_BLOW],[e.MUNKIDORI]:[A.TWIN_BEAM,A.HEAT_WAVE,A.EARTH_POWER,A.MALIGNANT_CHAIN],[e.FEZANDIPITI]:[A.BARB_BARRAGE,A.BONEMERANG,A.TRIPLE_AXEL,A.VICTORY_DANCE],[e.OGERPON]:[A.SLEEP_POWDER,A.BONEMERANG,A.TRIPLE_AXEL,A.FLOWER_TRICK],[e.GOUGING_FIRE]:[A.EXTREME_SPEED,A.BULK_UP,A.SACRED_FIRE,A.GLAIVE_RUSH],[e.RAGING_BOLT]:[A.NASTY_PLOT,A.FLAMETHROWER,A.MORNING_SUN,A.ELECTRO_DRIFT],[e.IRON_BOULDER]:[A.PSYBLADE,A.KOWTOW_CLEAVE,A.STONE_AXE,A.BITTER_BLADE],[e.IRON_CROWN]:[A.NASTY_PLOT,A.SECRET_SWORD,A.PSYSTRIKE,A.ELECTRO_DRIFT],[e.TERAPAGOS]:[A.MOONBLAST,A.NASTY_PLOT,A.ASTRAL_BARRAGE,A.RECOVER],[e.PECHARUNT]:[A.TAKE_HEART,A.BODY_PRESS,A.SAPPY_SEED,A.ASTRAL_BARRAGE],[e.PALDEA_TAUROS]:[A.NO_RETREAT,A.BLAZING_TORQUE,A.AQUA_STEP,A.THUNDEROUS_KICK],[e.PALDEA_WOOPER]:[A.STONE_AXE,A.RECOVER,A.BANEFUL_BUNKER,A.BARB_BARRAGE],[e.BLOODMOON_URSALUNA]:[A.NASTY_PLOT,A.ROCK_POLISH,A.SANDSEAR_STORM,A.BOOMBURST]};var _L=(t=>(t.Button_Up="BUTTON_UP",t.Alt_Button_Up="ALT_BUTTON_UP",t.Button_Down="BUTTON_DOWN",t.Alt_Button_Down="ALT_BUTTON_DOWN",t.Button_Left="BUTTON_LEFT",t.Alt_Button_Left="ALT_BUTTON_LEFT",t.Button_Right="BUTTON_RIGHT",t.Alt_Button_Right="ALT_BUTTON_RIGHT",t.Button_Action="BUTTON_ACTION",t.Alt_Button_Action="ALT_BUTTON_ACTION",t.Button_Cancel="BUTTON_CANCEL",t.Alt_Button_Cancel="ALT_BUTTON_CANCEL",t.Button_Menu="BUTTON_MENU",t.Alt_Button_Menu="ALT_BUTTON_MENU",t.Button_Stats="BUTTON_STATS",t.Alt_Button_Stats="ALT_BUTTON_STATS",t.Button_Cycle_Form="BUTTON_CYCLE_FORM",t.Alt_Button_Cycle_Form="ALT_BUTTON_CYCLE_FORM",t.Button_Cycle_Shiny="BUTTON_CYCLE_SHINY",t.Alt_Button_Cycle_Shiny="ALT_BUTTON_CYCLE_SHINY",t.Button_Cycle_Gender="BUTTON_CYCLE_GENDER",t.Alt_Button_Cycle_Gender="ALT_BUTTON_CYCLE_GENDER",t.Button_Cycle_Ability="BUTTON_CYCLE_ABILITY",t.Alt_Button_Cycle_Ability="ALT_BUTTON_CYCLE_ABILITY",t.Button_Cycle_Nature="BUTTON_CYCLE_NATURE",t.Alt_Button_Cycle_Nature="ALT_BUTTON_CYCLE_NATURE",t.Button_Cycle_Tera="BUTTON_CYCLE_TERA",t.Alt_Button_Cycle_Tera="ALT_BUTTON_CYCLE_TERA",t.Button_Speed_Up="BUTTON_SPEED_UP",t.Alt_Button_Speed_Up="ALT_BUTTON_SPEED_UP",t.Button_Slow_Down="BUTTON_SLOW_DOWN",t.Alt_Button_Slow_Down="ALT_BUTTON_SLOW_DOWN",t.Button_Submit="BUTTON_SUBMIT",t.Alt_Button_Submit="ALT_BUTTON_SUBMIT",t))(_L||{});const $A=D.t("settings:pressToBind"),eQ={BUTTON_UP:[`KEY ${he.UP.toString()}`,$A],BUTTON_DOWN:[`KEY ${he.DOWN.toString()}`,$A],ALT_BUTTON_UP:[`KEY ${he.UP.toString()}`,$A],BUTTON_LEFT:[`KEY ${he.LEFT.toString()}`,$A],BUTTON_RIGHT:[`KEY ${he.RIGHT.toString()}`,$A],BUTTON_ACTION:[`KEY ${he.ACTION.toString()}`,$A],BUTTON_MENU:[`KEY ${he.MENU.toString()}`,$A],BUTTON_SUBMIT:[`KEY ${he.SUBMIT.toString()}`,$A],ALT_BUTTON_DOWN:[`KEY ${he.DOWN.toString()}`,$A],ALT_BUTTON_LEFT:[`KEY ${he.LEFT.toString()}`,$A],ALT_BUTTON_RIGHT:[`KEY ${he.RIGHT.toString()}`,$A],ALT_BUTTON_ACTION:[`KEY ${he.ACTION.toString()}`,$A],BUTTON_CANCEL:[`KEY ${he.CANCEL.toString()}`,$A],ALT_BUTTON_CANCEL:[`KEY ${he.CANCEL.toString()}`,$A],ALT_BUTTON_MENU:[`KEY ${he.MENU.toString()}`,$A],BUTTON_STATS:[`KEY ${he.STATS.toString()}`,$A],ALT_BUTTON_STATS:[`KEY ${he.STATS.toString()}`,$A],BUTTON_CYCLE_FORM:[`KEY ${he.CYCLE_FORM.toString()}`,$A],ALT_BUTTON_CYCLE_FORM:[`KEY ${he.CYCLE_FORM.toString()}`,$A],BUTTON_CYCLE_SHINY:[`KEY ${he.CYCLE_SHINY.toString()}`,$A],ALT_BUTTON_CYCLE_SHINY:[`KEY ${he.CYCLE_SHINY.toString()}`,$A],BUTTON_CYCLE_GENDER:[`KEY ${he.CYCLE_GENDER.toString()}`,$A],ALT_BUTTON_CYCLE_GENDER:[`KEY ${he.CYCLE_GENDER.toString()}`,$A],BUTTON_CYCLE_ABILITY:[`KEY ${he.CYCLE_ABILITY.toString()}`,$A],ALT_BUTTON_CYCLE_ABILITY:[`KEY ${he.CYCLE_ABILITY.toString()}`,$A],BUTTON_CYCLE_NATURE:[`KEY ${he.CYCLE_NATURE.toString()}`,$A],ALT_BUTTON_CYCLE_NATURE:[`KEY ${he.CYCLE_NATURE.toString()}`,$A],BUTTON_CYCLE_TERA:[`KEY ${he.CYCLE_TERA.toString()}`,$A],ALT_BUTTON_CYCLE_TERA:[`KEY ${he.CYCLE_TERA.toString()}`,$A],BUTTON_SPEED_UP:[`KEY ${he.SPEED_UP.toString()}`,$A],ALT_BUTTON_SPEED_UP:[`KEY ${he.SPEED_UP.toString()}`,$A],BUTTON_SLOW_DOWN:[`KEY ${he.SLOW_DOWN.toString()}`,$A],ALT_BUTTON_SLOW_DOWN:[`KEY ${he.SLOW_DOWN.toString()}`,$A],ALT_BUTTON_SUBMIT:[`KEY ${he.SUBMIT.toString()}`,$A]},AQ={BUTTON_UP:0,BUTTON_DOWN:0,BUTTON_LEFT:0,BUTTON_RIGHT:0,BUTTON_ACTION:0,BUTTON_MENU:0,BUTTON_SUBMIT:0,ALT_BUTTON_UP:0,ALT_BUTTON_DOWN:0,ALT_BUTTON_LEFT:0,ALT_BUTTON_RIGHT:0,ALT_BUTTON_ACTION:0,BUTTON_CANCEL:0,ALT_BUTTON_CANCEL:0,ALT_BUTTON_MENU:0,BUTTON_STATS:0,ALT_BUTTON_STATS:0,BUTTON_CYCLE_FORM:0,ALT_BUTTON_CYCLE_FORM:0,BUTTON_CYCLE_SHINY:0,ALT_BUTTON_CYCLE_SHINY:0,BUTTON_CYCLE_GENDER:0,ALT_BUTTON_CYCLE_GENDER:0,BUTTON_CYCLE_ABILITY:0,ALT_BUTTON_CYCLE_ABILITY:0,BUTTON_CYCLE_NATURE:0,ALT_BUTTON_CYCLE_NATURE:0,BUTTON_CYCLE_TERA:0,ALT_BUTTON_CYCLE_TERA:0,BUTTON_SPEED_UP:0,ALT_BUTTON_SPEED_UP:0,BUTTON_SLOW_DOWN:0,ALT_BUTTON_SLOW_DOWN:0,ALT_BUTTON_SUBMIT:0},EQ=["BUTTON_SUBMIT","BUTTON_MENU","BUTTON_ACTION","BUTTON_CANCEL","BUTTON_UP","BUTTON_DOWN","BUTTON_LEFT","BUTTON_RIGHT"];function Mb(t,E){switch(t){case"BUTTON_UP":case"BUTTON_DOWN":case"BUTTON_LEFT":case"BUTTON_RIGHT":case"BUTTON_ACTION":case"BUTTON_CANCEL":case"BUTTON_MENU":case"BUTTON_STATS":case"BUTTON_CYCLE_SHINY":case"BUTTON_CYCLE_FORM":case"BUTTON_CYCLE_GENDER":case"BUTTON_CYCLE_ABILITY":case"BUTTON_CYCLE_NATURE":case"BUTTON_CYCLE_TERA":case"BUTTON_SPEED_UP":case"BUTTON_SLOW_DOWN":case"ALT_BUTTON_UP":case"ALT_BUTTON_DOWN":case"ALT_BUTTON_LEFT":case"ALT_BUTTON_RIGHT":case"ALT_BUTTON_ACTION":case"ALT_BUTTON_CANCEL":case"ALT_BUTTON_MENU":case"ALT_BUTTON_STATS":case"ALT_BUTTON_CYCLE_SHINY":case"ALT_BUTTON_CYCLE_FORM":case"ALT_BUTTON_CYCLE_GENDER":case"ALT_BUTTON_CYCLE_ABILITY":case"ALT_BUTTON_CYCLE_NATURE":case"ALT_BUTTON_CYCLE_TERA":case"ALT_BUTTON_SPEED_UP":case"ALT_BUTTON_SLOW_DOWN":case"ALT_BUTTON_SUBMIT":if(E&&s.ui){const R=r((I=!1)=>(s.ui.revertMode(),s.ui.getHandler().updateBindings(),I),"cancelHandler");s.ui.setOverlayMode(Ce.KEYBOARD_BINDING,{target:t,cancelHandler:R})}break}return!0}r(Mb,"setSettingKeyboard");var Ac=(t=>(t.Controller="CONTROLLER",t.Gamepad_Support="GAMEPAD_SUPPORT",t.Button_Up="BUTTON_UP",t.Button_Down="BUTTON_DOWN",t.Button_Left="BUTTON_LEFT",t.Button_Right="BUTTON_RIGHT",t.Button_Action="BUTTON_ACTION",t.Button_Cancel="BUTTON_CANCEL",t.Button_Menu="BUTTON_MENU",t.Button_Stats="BUTTON_STATS",t.Button_Cycle_Form="BUTTON_CYCLE_FORM",t.Button_Cycle_Shiny="BUTTON_CYCLE_SHINY",t.Button_Cycle_Gender="BUTTON_CYCLE_GENDER",t.Button_Cycle_Ability="BUTTON_CYCLE_ABILITY",t.Button_Cycle_Nature="BUTTON_CYCLE_NATURE",t.Button_Cycle_Tera="BUTTON_CYCLE_TERA",t.Button_Speed_Up="BUTTON_SPEED_UP",t.Button_Slow_Down="BUTTON_SLOW_DOWN",t.Button_Submit="BUTTON_SUBMIT",t))(Ac||{});const Qt="Press action to assign",Pb={CONTROLLER:["Default","Change"],GAMEPAD_SUPPORT:["Auto","Disabled"],BUTTON_UP:[`KEY ${he.UP.toString()}`,Qt],BUTTON_DOWN:[`KEY ${he.DOWN.toString()}`,Qt],BUTTON_LEFT:[`KEY ${he.LEFT.toString()}`,Qt],BUTTON_RIGHT:[`KEY ${he.RIGHT.toString()}`,Qt],BUTTON_ACTION:[`KEY ${he.ACTION.toString()}`,Qt],BUTTON_CANCEL:[`KEY ${he.CANCEL.toString()}`,Qt],BUTTON_MENU:[`KEY ${he.MENU.toString()}`,Qt],BUTTON_STATS:[`KEY ${he.STATS.toString()}`,Qt],BUTTON_CYCLE_FORM:[`KEY ${he.CYCLE_FORM.toString()}`,Qt],BUTTON_CYCLE_SHINY:[`KEY ${he.CYCLE_SHINY.toString()}`,Qt],BUTTON_CYCLE_GENDER:[`KEY ${he.CYCLE_GENDER.toString()}`,Qt],BUTTON_CYCLE_ABILITY:[`KEY ${he.CYCLE_ABILITY.toString()}`,Qt],BUTTON_CYCLE_NATURE:[`KEY ${he.CYCLE_NATURE.toString()}`,Qt],BUTTON_CYCLE_TERA:[`KEY ${he.CYCLE_TERA.toString()}`,Qt],BUTTON_SPEED_UP:[`KEY ${he.SPEED_UP.toString()}`,Qt],BUTTON_SLOW_DOWN:[`KEY ${he.SLOW_DOWN.toString()}`,Qt],BUTTON_SUBMIT:[`KEY ${he.SUBMIT.toString()}`,Qt]},Gb={CONTROLLER:0,GAMEPAD_SUPPORT:0,BUTTON_UP:0,BUTTON_DOWN:0,BUTTON_LEFT:0,BUTTON_RIGHT:0,BUTTON_ACTION:0,BUTTON_CANCEL:0,BUTTON_MENU:0,BUTTON_STATS:0,BUTTON_CYCLE_FORM:0,BUTTON_CYCLE_SHINY:0,BUTTON_CYCLE_GENDER:0,BUTTON_CYCLE_ABILITY:0,BUTTON_CYCLE_NATURE:0,BUTTON_CYCLE_TERA:0,BUTTON_SPEED_UP:0,BUTTON_SLOW_DOWN:0,BUTTON_SUBMIT:0},tQ=[_L.Button_Up,_L.Button_Down,_L.Button_Left,_L.Button_Right];function yM(t,E){switch(t){case"GAMEPAD_SUPPORT":s.inputController.setGamepadSupport(Pb[t][E]!=="Disabled");break;case"BUTTON_ACTION":case"BUTTON_CANCEL":case"BUTTON_MENU":case"BUTTON_STATS":case"BUTTON_CYCLE_SHINY":case"BUTTON_CYCLE_FORM":case"BUTTON_CYCLE_GENDER":case"BUTTON_CYCLE_ABILITY":case"BUTTON_CYCLE_NATURE":case"BUTTON_CYCLE_TERA":case"BUTTON_SPEED_UP":case"BUTTON_SLOW_DOWN":case"BUTTON_SUBMIT":if(E&&s.ui){const R=r((I=!1)=>(s.ui.revertMode(),s.ui.getHandler().updateBindings(),I),"cancelHandler");s.ui.setOverlayMode(Ce.GAMEPAD_BINDING,{target:t,cancelHandler:R})}break;case"CONTROLLER":if(E){const R=s.inputController.getGamepadsName();if(s.ui&&R){const I=r(()=>(s.ui.revertMode(),s.ui.getHandler().setOptionCursor(Object.values(Ac).indexOf("CONTROLLER"),0,!0),s.ui.getHandler().updateBindings(),!1),"cancelHandler"),N=r(S=>(s.inputController.setChosenGamepad(S),I(),!0),"changeGamepadHandler");return s.ui.setOverlayMode(Ce.OPTION_SELECT,{options:[...R.map(S=>({label:b6(S,30),handler:r(()=>N(S),"handler")})),{label:"Cancel",handler:I}]}),!1}}break}return!0}r(yM,"setSettingGamepad");var _b=(t=>(t.WEATHER_CHANGED="onWeatherChanged",t.TERRAIN_CHANGED="onTerrainChanged",t.TAG_ADDED="onTagAdded",t.TAG_REMOVED="onTagRemoved",t))(_b||{});const Zh=class Zh extends Event{constructor(E,R){super(E),this.duration=R}};r(Zh,"ArenaEvent");let oS=Zh;const kh=class kh extends oS{constructor(E,R,I){super("onWeatherChanged",I),this.oldWeatherType=E,this.newWeatherType=R}};r(kh,"WeatherChangedEvent");let tC=kh;const Xh=class Xh extends oS{constructor(E,R,I){super("onTerrainChanged",I),this.oldTerrainType=E,this.newTerrainType=R}};r(Xh,"TerrainChangedEvent");let RC=Xh;const Qh=class Qh extends oS{constructor(E,R,I,N,S){super("onTagAdded",I),this.arenaTagType=E,this.arenaTagSide=R,this.arenaTagLayers=N,this.arenaTagMaxLayers=S}};r(Qh,"TagAddedEvent");let CS=Qh;const Jh=class Jh extends oS{constructor(E,R,I){super("onTagRemoved",I),this.arenaTagType=E,this.arenaTagSide=R}};r(Jh,"TagRemovedEvent");let ms=Jh;const $h=class $h{constructor(E){this.id=E.id,this.value=E.value,this.severity=E.severity}toChallenge(){return vP(this)}};r($h,"ChallengeData");let va=$h;var iG=(t=>(t[t.GAMEPAD=0]="GAMEPAD",t[t.KEYBOARD=1]="KEYBOARD",t))(iG||{}),vt=(t=>(t[t.SYSTEM=0]="SYSTEM",t[t.SESSION=1]="SESSION",t[t.SETTINGS=2]="SETTINGS",t[t.TUTORIALS=3]="TUTORIALS",t[t.SEEN_DIALOGUES=4]="SEEN_DIALOGUES",t[t.RUN_HISTORY=5]="RUN_HISTORY",t))(vt||{}),Ec=(t=>(t[t.RUN_HISTORY=0]="RUN_HISTORY",t[t.SESSION_PREVIEW=1]="SESSION_PREVIEW",t))(Ec||{});const qh=class qh extends gL{constructor(){super(Ce.RUN_INFO)}async setup(){this.runContainer=s.add.container(1,-(s.game.canvas.height/6)+1),this.modifiersModule=_o,this.runContainer.setVisible(!1),s.loadImage("encounter_exclaim","mystery-encounters")}show(E){super.show(E);const R=s.add.rectangle(0,0,s.game.canvas.width,s.game.canvas.height,26720);R.setOrigin(0,0),this.runContainer.add(R);const I=E[0];this.runDisplayMode=E[1],this.runDisplayMode===0?(this.runInfo=s.gameData.parseSessionData(JSON.stringify(I.entry)),this.isVictory=I.isVictory??!1):this.runDisplayMode===1&&(this.runInfo=E[0]),this.pageMode=0,this.addHeader(),this.statsBgWidth=(s.game.canvas.width/6-2)/3,this.runResultContainer=s.add.container(0,24);const N=bt(0,0,this.statsBgWidth-11,65);N.setOrigin(0,0),N.setName("Run_Result_Window"),this.runResultContainer.add(N),this.runDisplayMode===0?this.parseRunResult():this.runDisplayMode===1&&this.parseRunStatus(),this.runInfoContainer=s.add.container(0,89);const S=bt(0,0,this.statsBgWidth-11,90),T=S.getBottomRight();return this.runInfoContainer.add(S),this.parseRunInfo(T.x,T.y),this.partyContainer=s.add.container(this.statsBgWidth-10,23),this.parsePartyInfo(),this.showParty(!0),this.runContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,s.game.canvas.width/6,s.game.canvas.height/6),Phaser.Geom.Rectangle.Contains),this.getUi().bringToTop(this.runContainer),this.runContainer.setVisible(!0),this.isVictory&&(this.createHallofFame(),this.getUi().bringToTop(this.hallofFameContainer)),this.setCursor(0),this.getUi().add(this.runContainer),this.getUi().hideTooltip(),!0}addHeader(){var I;const E=bt(0,0,s.game.canvas.width/6-2,24);if(E.setOrigin(0,0),this.runContainer.add(E),this.runInfo.modifiers.length!==0){const N=E.getTopRight(),S=s.add.container(0,0),T=We(8,0,D.t("runHistory:viewHeldItems"),Se.WINDOW,{fontSize:"34px"}),i=this.getUi().getGamepadType();let o;i==="touch"?o=new Phaser.GameObjects.Sprite(s,0,2,"keyboard","E.png"):o=new Phaser.GameObjects.Sprite(s,0,2,i,(I=s.inputController)==null?void 0:I.getIconForLatestInputRecorded(_L.Button_Cycle_Ability)),S.add([T,o]),S.setPosition(N.x-T.displayWidth-o.displayWidth-8,10),this.runContainer.add(S)}const R=We(0,0,D.t("runHistory:runInfo"),Se.SETTINGS_LABEL);R.setOrigin(0,0),R.setPositionRelative(E,8,4),this.runContainer.add(R)}async parseRunResult(){var T,i;const E=s.gameData.gender??YA.UNSET,R=YA[E],I=this.isVictory?Se.PERFECT_IV:Se.SUMMARY_RED,N=this.isVictory?D.t("runHistory:victory"):D.t("runHistory:defeated",{context:R}),S=We(6,5,`${N} - ${D.t("saveSlotSelectUiHandler:wave")} ${this.runInfo.waveIndex}`,I,{fontSize:"65px",lineSpacing:.1});if(this.isVictory){const o=s.add.container(0,0),C=We(8,0,D.t("runHistory:viewHallOfFame"),Se.WINDOW,{fontSize:"65px"}),U=We(8,12,D.t("runHistory:viewEndingSplash"),Se.WINDOW,{fontSize:"65px"}),_=this.getUi().getGamepadType();let G,H;_==="touch"?(G=new Phaser.GameObjects.Sprite(s,0,4,"keyboard","R.png"),H=new Phaser.GameObjects.Sprite(s,0,16,"keyboard","F.png")):(G=new Phaser.GameObjects.Sprite(s,0,4,_,(T=s.inputController)==null?void 0:T.getIconForLatestInputRecorded(_L.Button_Cycle_Shiny)),H=new Phaser.GameObjects.Sprite(s,0,16,_,(i=s.inputController)==null?void 0:i.getIconForLatestInputRecorded(_L.Button_Cycle_Form))),o.add([C,G]),o.add([U,H]),o.setPosition(12,25),this.runResultContainer.add(o)}if(this.runResultContainer.add(S),!this.isVictory){const o=s.add.container(0,0);if(this.runInfo.battleType===AA.WILD||this.runInfo.battleType===AA.MYSTERY_ENCOUNTER&&!this.runInfo.trainer)switch(this.runInfo.enemyParty.length){case 1:this.parseWildSingleDefeat(o);break;case 2:this.parseWildDoubleDefeat(o);break}else(this.runInfo.battleType===AA.TRAINER||this.runInfo.battleType===AA.MYSTERY_ENCOUNTER&&this.runInfo.trainer)&&this.parseTrainerDefeat(o);this.runResultContainer.add(o)}this.runContainer.add(this.runResultContainer)}parseRunStatus(){const E=s.add.container(0,0);if(this.runResultContainer.add(E),this.runInfo.battleType===AA.WILD)this.runInfo.enemyParty.length===1?this.parseWildSingleDefeat(E):this.runInfo.enemyParty.length===2&&this.parseWildDoubleDefeat(E);else if(this.runInfo.battleType===AA.TRAINER){this.showTrainerSprites(E);const i=3;this.runInfo.enemyParty.forEach((c,f)=>{const d=s.add.sprite(0,0,"pb");d.setFrame(xI(c.pokeball)),d.setScale(.5),d.setPosition(58+f%i*8,f<=2?18:25),E.add(d)});const o=this.runInfo.trainer.toTrainer(),C=375;let U="";this.runInfo.trainer.trainerType>=C?U=o.variant===xA.FEMALE?D.t("trainerNames:rival_female"):D.t("trainerNames:rival"):U=o.getName(0,!0);const _=D.t(o.variant!==xA.DOUBLE?"battle:trainerAppeared":"battle:trainerAppearedDouble",{trainerName:U}).replace(/\n/g," "),G=s.add.container(0,0),H=We(0,0,_,Se.WINDOW,{fontSize:"35px",wordWrap:{width:200}});G.add(H),G.setPosition(55,32),this.runResultContainer.add(G)}else if(this.runInfo.battleType===AA.MYSTERY_ENCOUNTER){const i=s.add.sprite(0,0,"encounter_exclaim");i.setPosition(34,26),i.setScale(.65);const o=s.add.sprite(56,-106,"pkmn__sub");o.setScale(.65),o.setPosition(34,46);const C=D.t(s.getMysteryEncounter(this.runInfo.mysteryEncounterType,!0).localizationKey+":title"),U=s.add.container(0,0),_=We(0,0,C,Se.WINDOW,{fontSize:"45px",wordWrap:{width:160}});U.add(_),U.setPosition(47,37),this.runResultContainer.add([i,o,U])}const R=this.runResultContainer.getByName("Run_Result_Window"),I=R.getTopCenter().x,N=R.getBottomCenter().y,S=We(I,5,`${D.t("saveSlotSelectUiHandler:wave")} ${this.runInfo.waveIndex}`,Se.WINDOW,{fontSize:"60px",lineSpacing:.1});S.setOrigin(.5,0);const T=We(I,N-5,`${KM(this.runInfo.arena.biome)}`,Se.WINDOW,{fontSize:"60px"});T.setOrigin(.5,1),this.runResultContainer.add([S,T]),this.runContainer.add(this.runResultContainer)}parseWildSingleDefeat(E){const R=s.add.container(0,0),I=this.runInfo.enemyParty[0],N=I.boss;I.boss=!1,I.player=!0;const S=I.toPokemon(),T=s.addPokemonIcon(S,0,0,0,0),i=N?Se.PARTY_RED:Se.PARTY,o=We(36,26,`${D.t("saveSlotSelectUiHandler:lv")}${Js(S.level,1e3)}`,i,{fontSize:"44px",color:"#f8f8f8"});o.setShadow(0,0,void 0),o.setStroke("#424242",14),o.setOrigin(1,0),R.add(T),R.add(o),E.add(R),E.setPosition(27,12),S.destroy()}parseWildDoubleDefeat(E){this.runInfo.enemyParty.forEach((R,I)=>{const N=s.add.container(0,0),S=R.boss;R.boss=!1,R.player=!0;const T=R.toPokemon(),i=s.addPokemonIcon(T,0,0,0,0),o=We(36,26,`${D.t("saveSlotSelectUiHandler:lv")}${Js(T.level,1e3)}`,S?Se.PARTY_RED:Se.PARTY,{fontSize:"44px",color:"#f8f8f8"});o.setShadow(0,0,void 0),o.setStroke("#424242",14),o.setOrigin(1,0),N.add(i),N.add(o),N.setPosition(I*35,0),E.add(N),T.destroy()}),E.setPosition(8,14)}showTrainerSprites(E){const R=this.runInfo.trainer.toTrainer();R.config.loadAssets(this.runInfo.trainer.variant).then(()=>{const I=R.config.getSpriteKey(this.runInfo.trainer.variant===xA.FEMALE,!1),N=s.add.sprite(0,5,I);if(this.runInfo.trainer.variant===xA.DOUBLE&&!R.config.doubleOnly){const S=s.add.container(5,8);N.setPosition(-3,-3);const T=R.config.getSpriteKey(!0,!0),i=s.add.sprite(5,-3,T);this.runDisplayMode===0?(i.setScale(.2),N.setScale(.2),S.add(N),S.add(i),S.setPosition(12,38)):(N.setScale(.55),N.setPosition(-9,-3),i.setScale(.55),S.add([N,i]),S.setPosition(28,34)),E.add(S)}else{const S=this.runDisplayMode===0?.35:.55,T=this.runDisplayMode===0?[12,28]:[30,32];N.setScale(S,S),N.setPosition(T[0],T[1]),E.add(N)}})}parseTrainerDefeat(E){this.showTrainerSprites(E);const R=s.add.container(0,0);this.runInfo.enemyParty.forEach((I,N)=>{const S=Math.floor(N/3),T=s.add.container(0,0);T.setScale(.6);const i=I.boss;I.boss=!1,I.player=!0;const o=I.toPokemon(),C=s.addPokemonIcon(o,0,0,0,0);C.setPosition(39*(N%3)+5,35*S);const U=We(43*(N%3),27*(S+1),`${D.t("saveSlotSelectUiHandler:lv")}${Js(o.level,1e3)}`,i?Se.PARTY_RED:Se.PARTY,{fontSize:"54px"});U.setShadow(0,0,void 0),U.setStroke("#424242",14),U.setOrigin(0,0),T.add(C),T.add(U),R.add(T),o.destroy()}),R.setPosition(25,15),E.add(R)}async parseRunInfo(E,R){const I=MO(7,0,"",Se.WINDOW,{fontSize:"50px",lineSpacing:3});switch(I.setPosition(7,5),I.appendText(D.t("runHistory:mode")+": ",!1),this.runInfo.gameMode){case AE.DAILY:I.appendText(`${D.t("gameMode:dailyRun")}`,!1);break;case AE.SPLICED_ENDLESS:I.appendText(`${D.t("gameMode:endlessSpliced")}`,!1);break;case AE.CHALLENGE:I.appendText(`${D.t("gameMode:challenge")}`,!1),I.appendText(`${D.t("runHistory:challengeRules")}: `),I.setWrapMode(1),I.setWrapWidth(500);const H=this.challengeParser();if(H)for(let c=0;c<H.length;c++)c>0&&I.appendText(" + ",!1),I.appendText(H[c],!1);break;case AE.ENDLESS:I.appendText(`${D.t("gameMode:endless")}`,!1);break;case AE.CLASSIC:I.appendText(`${D.t("gameMode:classic")}`,!1);break}(this.runInfo.gameMode===AE.ENDLESS||this.runInfo.gameMode===AE.SPLICED_ENDLESS)&&this.runInfo.waveIndex===s.gameData.gameStats.highestEndlessWave&&(I.appendText(` [${D.t("runHistory:personalBest")}]`),I.setTint(16772956,4718441,7039999,16738665));const N=s.add.container(0,0),S=D.resolvedLanguage==="ja"?12:3,T=MO(7,0,"",Se.WINDOW,{fontSize:"50px",lineSpacing:S}),i=w1(this.runInfo.playTime);T.appendText(`${D.t("runHistory:runLength")}: ${i}`,!1);const o=UM(s.moneyFormat,this.runInfo.money),C=pA(Se.MONEY_WINDOW,!1,s.uiTheme);T.appendText(`[color=${C}]${D.t("battleScene:moneyOwned",{formattedMoney:o})}[/color]`),T.setPosition(7,70),N.add(T);const U=MO(0,0,"",Se.WINDOW,{fontSize:"55px"}),_=Phaser.Math.Clamp(this.runInfo.party.map(H=>H.toPokemon().getLuck()).reduce((H,c)=>H+=c,0),0,14);let G=D.t("runHistory:luck")+": "+Hx(_);if(_<14?G="[color=#"+cx(_).toString(16)+"]"+G+"[/color]":U.setTint(16772956,4718441,7039999,16738665),U.appendText("[align=right]"+G+"[/align]",!1),U.setPosition(E-U.displayWidth-5,R-13),N.add(U),this.runInfo.modifiers.length){let H=0;const c=s.add.container(8,this.runInfo.gameMode===AE.CHALLENGE?20:15);c.setScale(.45);for(const f of this.runInfo.modifiers){const d=f.toModifier(this.modifiersModule[f.className]);if(d instanceof DA)continue;const w=d==null?void 0:d.getIcon(!1);if(w){const m=Math.floor(H/7);w.setPosition(24*(H%7),20+35*m),c.add(w)}if(++H===20){const m=We(45,90,"+",Se.WINDOW);m.setPositionRelative(c,70,45),this.runInfoContainer.add(m);break}}this.runInfoContainer.add(c)}this.runInfoContainer.add(I),this.runInfoContainer.add(N),this.runContainer.add(this.runInfoContainer)}challengeParser(){const E=[];for(let R=0;R<this.runInfo.challenges.length;R++)if(this.runInfo.challenges[R].value!==0)switch(this.runInfo.challenges[R].id){case Je.SINGLE_GENERATION:E.push(D.t(`runHistory:challengeMonoGen${this.runInfo.challenges[R].value}`));break;case Je.SINGLE_TYPE:const I=L[this.runInfo.challenges[R].value-1],N=`[color=${Q1[I]}]`,S=`[shadow=${J1[I]}]`,T=N+S+D.t(`pokemonInfo:Type.${I}`)+"[/color][/shadow]";E.push(T);break;case Je.INVERSE_BATTLE:E.push(D.t("challenges:inverseBattle.shortName"));break;default:const i=Je[this.runInfo.challenges[R].id].split("_").map((o,C)=>C?`${o[0]}${o.slice(1).toLowerCase()}`:o.toLowerCase()).join("");E.push(D.t(`challenges:${i}.name`));break}return E}parsePartyInfo(){const E=this.runInfo.party,R=D.resolvedLanguage??"en",I=(s.game.canvas.height/6-23)/6;E.forEach((N,S)=>{var Gt;const T=new Z6(s,0,14,this.statsBgWidth*2+10,I-2,3),i=N.toPokemon(),o=s.add.container(this.statsBgWidth+5,(I-.5)*S),C=i.getTypes(),U=iO(C[0]),_=new Phaser.Display.Color(U[0],U[1],U[2]),G=_.clone().darken(45);T.setFillStyle(G.color);const H=s.add.container(0,0),c=s.addPokemonIcon(i,0,0,0,0);c.setScale(.75),c.setPosition(-99,1);const f=C[1]?iO(C[1]):void 0,d=f?new Phaser.Display.Color(f[0],f[1],f[2]):void 0;d?T.setStrokeStyle(1,d.color,.95):T.setStrokeStyle(1,_.color,.95),this.getUi().bringToTop(c);const w=s.add.container(-85,3.5),m="34px",W=i.getNature(),v=QO(W),$=i.getNameToRender(),Oe=["ko","zh_CN","zh_TW"];let q=D.t("starterSelectUiHandler:passive")??"-",Ie=D.t("starterSelectUiHandler:ability")??"-";Oe.includes(R)||(q=q.charAt(0),Ie=Ie.charAt(0));const le=i.passive?q+": "+i.getPassiveAbility().name:"",Ae=Ie+": "+i.getAbility().name,Re=D.resolvedLanguage==="ja"?12:3,se=MO(0,0,$,Se.SUMMARY,{fontSize:m,lineSpacing:Re});se.appendText(`${D.t("saveSlotSelectUiHandler:lv")}${aP(i.level,1)} - ${v}`),se.appendText(Ae),se.appendText(le),w.add(se);const ie=s.add.container(-35,6),He=[];i.stats.forEach(HA=>He.push(aP(HA,1)));for(let HA=0;HA<He.length;HA++){const tE=Ri(W,HA);He[HA]=tE<1?He[HA]+"[color=#40c8f8]↓[/color]":He[HA],He[HA]=tE>1?He[HA]+"[color=#f89890]↑[/color]":He[HA]}const ve=D.t("pokemonInfo:Stat.HPshortened")+": "+He[0],xe=D.t("pokemonInfo:Stat.ATKshortened")+": "+He[1],EA=D.t("pokemonInfo:Stat.DEFshortened")+": "+He[2],NA=D.t("pokemonInfo:Stat.SPATKshortened")+": "+He[3],rA=D.t("pokemonInfo:Stat.SPDEFshortened")+": "+He[4],ae=(R==="es-ES"||R==="pt_BR"?D.t("runHistory:SPDshortened"):D.t("pokemonInfo:Stat.SPDshortened"))+": "+He[5],Pe=MO(-5,0,ve,Se.SUMMARY,{fontSize:m,lineSpacing:Re});Pe.appendText(xe),Pe.appendText(EA),ie.add(Pe);const Te=MO(25,0,NA,Se.SUMMARY,{fontSize:m,lineSpacing:Re});Te.appendText(rA),Te.appendText(ae),ie.add(Te);const Ge=s.add.container(0,0);if(i.fusionSpecies){const HA=s.add.image(0,0,"icon_spliced");HA.setScale(.35),HA.setOrigin(0,0),i.isShiny()?HA.setPositionRelative(w,35,0):HA.setPositionRelative(w,28,0),Ge.add(HA),this.getUi().bringToTop(HA)}if(i.isShiny()){const HA=i.isFusion()&&i.shiny&&i.fusionShiny,tE=s.add.image(0,0,`shiny_star_small${HA?"_1":""}`);if(tE.setOrigin(0,0),tE.setScale(.65),tE.setPositionRelative(w,28,0),tE.setTint(nO(HA?i.variant:i.getVariant())),Ge.add(tE),this.getUi().bringToTop(tE),HA){const ME=s.add.image(0,0,"shiny_star_small_2");ME.setOrigin(0,0),ME.setScale(.5),ME.setPosition(tE.x+1,tE.y+1),ME.setTint(nO(i.fusionVariant)),Ge.add(ME),this.getUi().bringToTop(ME)}}const ze=i.getMoveset(),eA=s.add.container(70,-29),GA=[],IA=[],yA=[[-6.5,35.5],[37,35.5],[-6.5,43.5],[37,43.5]];for(let HA=0;HA<(ze==null?void 0:ze.length);HA++){const tE=s.add.container(yA[HA][0],yA[HA][1]);tE.setScale(.5);const ME=s.add.nineslice(0,0,"type_bgs","unknown",85,15,2,2,2,2);ME.setOrigin(1,0);const mt=We(-ME.width/2,2,"-",Se.PARTY);mt.setOrigin(.5,0),mt.setName("text-move-label"),GA.push(ME),IA.push(mt),tE.add(ME),tE.add(mt),eA.add(tE);const GR=(Gt=ze[HA])==null?void 0:Gt.getMove();GA[HA].setFrame(L[GR?GR.type:L.UNKNOWN].toString().toLowerCase()),IA[HA].setText(GR?GR.name:"-")}const DE=this.runInfo.gameMode===AE.SPLICED_ENDLESS||this.runInfo.gameMode===AE.ENDLESS?.25:.5,cE=s.add.container(-82,2),Pt=[];if(this.runInfo.modifiers.length){for(const HA of this.runInfo.modifiers){const tE=HA.toModifier(this.modifiersModule[HA.className]);tE instanceof DA&&tE.pokemonId===i.id&&(tE.stackCount=HA.stackCount,Pt.push(tE))}if(Pt.length>0){Pt.sort(fr);let HA=0;for(const[tE,ME]of Pt.entries()){if(tE>36){const GR=We(182,4,"+",Se.WINDOW);cE.add(GR);break}const mt=ME==null?void 0:ME.getIcon(!0);(ME==null?void 0:ME.stackCount)<(ME==null?void 0:ME.getMaxHeldItemCount(i))&&mt.list[1]instanceof Phaser.GameObjects.BitmapText&&mt.list[1].clearTint(),mt.setScale(DE),mt.setPosition(tE%19*10,HA*10),cE.add(mt),tE!==0&&tE%18===0&&HA++}}}cE.setName("heldItems"),cE.setVisible(!1),o.add(T),H.add(c),o.add(H),Ge.setName("PkmnMarks"),o.add(Ge),eA.setName("PkmnMoves"),o.add(eA),w.setName("PkmnInfoText"),o.add(w),ie.setName("PkmnStatsText"),o.add(ie),o.add(cE),o.setName("PkmnInfo"),this.partyContainer.add(o),i.destroy()}),this.runContainer.add(this.partyContainer)}showParty(E){this.partyContainer.getAll("name","PkmnInfo").forEach(I=>{I.getByName("PkmnMoves").setVisible(E),I.getByName("PkmnInfoText").setVisible(E),I.getByName("PkmnStatsText").setVisible(E),I.getByName("PkmnMarks").setVisible(E),I.getByName("heldItems").setVisible(!E),this.partyVisibility=E})}createVictorySplash(){this.endCardContainer=s.add.container(0,0);const R=(s.gameData.gender??YA.UNSET)===YA.FEMALE,I=s.add.image(0,0,`end_${R?"f":"m"}`);I.setOrigin(0),I.setScale(.5);const N=We(s.game.canvas.width/12,s.game.canvas.height/6-16,D.t("battle:congratulations"),Se.SUMMARY,{fontSize:"128px"});N.setOrigin(.5),this.endCardContainer.add(I),this.endCardContainer.add(N)}createHallofFame(){const E=s.gameData.gender??YA.UNSET,R=E===YA.FEMALE,I=YA[E].toLowerCase();this.hallofFameContainer=s.add.container(0,0);const N=s.add.image(0,0,`end_${R?"f":"m"}`);N.setOrigin(0),N.setPosition(-1,-1),N.setScale(.5);const S=N.getBottomCenter(),T=R?"red":"blue",i=s.add.image(0,0,"hall_of_fame_"+T);i.setPosition(159,89),i.setSize(s.game.canvas.width,s.game.canvas.height+10),i.setAlpha(.8),this.hallofFameContainer.add(N),this.hallofFameContainer.add(i);const o=We(0,0,D.t("runHistory:hallofFameText",{context:I}),Se.WINDOW);o.setPosition(S.x-o.displayWidth/2,164),this.hallofFameContainer.add(o),this.runInfo.party.forEach((C,U)=>{const _=C.toPokemon(),G=U%2,H=_.id,c=_.shiny,f=_.formIndex,d=_.variant,w=_.getSpeciesForm(),m=s.add.sprite(60+40*U,40+G*80,"pkmn__sub");m.setPipeline(s.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),this.hallofFameContainer.add(m);const W=new Map;W.set(H,!1);const v=_.gender===1;if(w.loadAssets(v,f,c,d,!0).then(()=>{W.set(H,!0),m.play(w.getSpriteKey(v,f,c,d)),m.setPipelineData("shiny",c),m.setPipelineData("variant",d),m.setPipelineData("spriteKey",w.getSpriteKey(v,f,c,d)),m.setVisible(!0)}),_.isFusion()){const $=s.add.sprite(80+40*U,50+G*80,_.getFusionIconAtlasKey());$.setName("sprite-fusion-icon"),$.setOrigin(.5,0),$.setFrame(_.getFusionIconId(!0)),this.hallofFameContainer.add($)}_.destroy()}),this.hallofFameContainer.setVisible(!1),this.runContainer.add(this.hallofFameContainer)}processInput(E){const R=this.getUi();let I=!1;const N=!1;switch(E){case he.CANCEL:case he.LEFT:I=!0,this.pageMode===0?(this.runInfoContainer.removeAll(!0),this.runResultContainer.removeAll(!0),this.partyContainer.removeAll(!0),this.runContainer.removeAll(!0),this.isVictory&&this.hallofFameContainer.removeAll(!0),super.clear(),this.runContainer.setVisible(!1),R.revertMode()):this.pageMode===1?(this.hallofFameContainer.setVisible(!1),this.pageMode=0):this.pageMode===2&&(this.endCardContainer.setVisible(!1),this.runContainer.remove(this.endCardContainer),this.pageMode=0);break;case he.DOWN:case he.UP:break;case he.CYCLE_FORM:case he.CYCLE_SHINY:case he.CYCLE_ABILITY:this.buttonCycleOption(E);break}return I&&R.playSelect(),I||N}buttonCycleOption(E){switch(E){case he.CYCLE_FORM:this.isVictory&&this.pageMode!==1&&(!this.endCardContainer||!this.endCardContainer.visible?(this.createVictorySplash(),this.endCardContainer.setVisible(!0),this.runContainer.add(this.endCardContainer),this.pageMode=2):(this.endCardContainer.setVisible(!1),this.runContainer.remove(this.endCardContainer),this.pageMode=0));break;case he.CYCLE_SHINY:this.isVictory&&this.pageMode!==2&&(this.hallofFameContainer.visible?(this.hallofFameContainer.setVisible(!1),this.pageMode=0):(this.hallofFameContainer.setVisible(!0),this.pageMode=1));break;case he.CYCLE_ABILITY:this.runInfo.modifiers.length!==0&&this.pageMode===0&&(this.partyVisibility?this.showParty(!1):this.showParty(!0));break}}};r(qh,"RunInfoUiHandler");let R2=qh;const ub=25,zh=class zh extends aS{constructor(){super(Ce.RUN_HISTORY),this.maxRows=3,this.scrollCursor=0}setup(){const E=this.getUi();this.runSelectContainer=s.add.container(0,0),this.runSelectContainer.setVisible(!1),E.add(this.runSelectContainer);const R=s.add.rectangle(0,0,s.game.canvas.width/6,-s.game.canvas.height/6,26720);R.setOrigin(0,0),this.runSelectContainer.add(R),this.runContainerInitialY=-s.game.canvas.height/6+8,this.runsContainer=s.add.container(8,this.runContainerInitialY),this.runSelectContainer.add(this.runsContainer),this.runs=[],s.loadImage("hall_of_fame_red","ui"),s.loadImage("hall_of_fame_blue","ui"),s.loadAtlas("rival_f","trainer"),s.loadAtlas("rival_m","trainer")}show(E){return super.show(E),this.getUi().bringToTop(this.runSelectContainer),this.runSelectContainer.setVisible(!0),this.populateRuns().then(()=>{this.setScrollCursor(0),this.setCursor(0),this.runs.length===0&&this.clearCursor()}),!0}processInput(E){const R=this.getUi();let I=!1;const N=!1;if([he.ACTION,he.CANCEL].includes(E)){if(E===he.ACTION){const S=this.cursor+this.scrollCursor;if(this.runs[S])s.ui.setOverlayMode(Ce.RUN_INFO,this.runs[S].entryData,Ec.RUN_HISTORY,!0);else return!1;return I=!0,I}this.runSelectCallback=null,I=!0,s.ui.revertMode()}else if(this.runs.length>0)switch(E){case he.UP:this.cursor?I=this.setCursor(this.cursor-1):this.scrollCursor?I=this.setScrollCursor(this.scrollCursor-1):this.runs.length>1&&(I=this.setCursor(Math.min(this.runs.length-1,this.maxRows-1)),I=this.setScrollCursor(Math.max(0,this.runs.length-this.maxRows))||I);break;case he.DOWN:this.cursor<Math.min(this.maxRows-1,this.runs.length-this.scrollCursor-1)?I=this.setCursor(this.cursor+1):this.scrollCursor<this.runs.length-this.maxRows?I=this.setScrollCursor(this.scrollCursor+1):this.runs.length>1&&(I=this.setCursor(0),I=this.setScrollCursor(0)||I);break}return I&&R.playSelect(),I||N}async populateRuns(){const E=await s.gameData.getRunHistoryData(),R=Object.keys(E);if(R.length===0){this.showEmpty();return}const I=R.map(Number);R.length>1&&I.sort((S,T)=>T-S);const N=R.length;for(let S=0;S<N;S++){const T=new oG(E[I[S]],S);s.add.existing(T),this.runsContainer.add(T),this.runs.push(T)}this.cursorObj&&R.length>0&&this.runsContainer.bringToTop(this.cursorObj)}async showEmpty(){const E=bt(0,0,304,165);this.runsContainer.add(E);const R=E.getCenter(),I=We(0,0,D.t("saveSlotSelectUiHandler:empty"),Se.WINDOW,{fontSize:"128px"});I.setPosition(R.x-18,R.y-15),this.runsContainer.add(I)}setCursor(E){const R=super.setCursor(E);return this.cursorObj||(this.cursorObj=s.add.nineslice(0,0,"select_cursor_highlight_thick",void 0,296,46,6,6,6,6),this.cursorObj.setOrigin(0,0),this.runsContainer.add(this.cursorObj)),this.cursorObj.setPosition(4,4+(E+this.scrollCursor)*56),R}setScrollCursor(E){const R=E!==this.scrollCursor;return R&&(this.scrollCursor=E,this.setCursor(this.cursor),s.tweens.add({targets:this.runsContainer,y:this.runContainerInitialY-56*E,duration:KA(325),ease:"Sine.easeInOut"})),R}clear(){super.clear(),this.runSelectContainer.setVisible(!1),this.setScrollCursor(0),this.clearCursor(),this.runSelectCallback=null,this.clearRuns()}clearCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}clearRuns(){this.runs.splice(0,this.runs.length),this.runsContainer.removeAll(!0)}};r(zh,"RunHistoryUiHandler");let O2=zh;const jh=class jh extends Phaser.GameObjects.Container{constructor(E,R){super(s,0,R*56),this.slotId=R,this.entryData=E,this.setup(this.entryData)}setup(E){const R=E.isVictory,I=s.gameData.parseSessionData(JSON.stringify(E.entry)),N=bt(0,0,304,52);if(this.add(N),R){const C=We(8,5,`${D.t("runHistory:victory")}`,Se.WINDOW);this.add(C)}else{const C=s.gameData.gender??YA.UNSET,U=YA[C].toLowerCase();if(I.battleType===AA.WILD||I.battleType===AA.MYSTERY_ENCOUNTER&&!I.trainer){const _=s.add.container(8,5),G=We(0,0,`${D.t("runHistory:defeatedWild",{context:U})}`,Se.WINDOW);_.add(G),I.enemyParty.forEach((H,c)=>{const f=s.add.container(65+c*25,-8);f.setScale(.75),H.boss=!1,H.player=!0;const d=H.toPokemon(),w=s.addPokemonIcon(d,0,0,0,0),m=We(32,20,`${D.t("saveSlotSelectUiHandler:lv")}${Js(d.level,1e3)}`,Se.PARTY,{fontSize:"54px",color:"#f8f8f8"});m.setShadow(0,0,void 0),m.setStroke("#424242",14),m.setOrigin(1,0),f.add(w),f.add(m),_.add(f),d.destroy()}),this.add(_)}else if(I.battleType===AA.TRAINER||I.battleType===AA.MYSTERY_ENCOUNTER&&I.trainer){const _=I.trainer.toTrainer();if(I.trainer.trainerType>=375){const H=_.variant===xA.FEMALE?"trainerNames:rival_female":"trainerNames:rival",c=We(8,5,`${D.t("runHistory:defeatedRival",{context:U})} ${D.t(H)}`,Se.WINDOW);this.add(c)}else{const H=We(8,5,`${D.t("runHistory:defeatedTrainer",{context:U})}${_.getName(0,!0)}`,Se.WINDOW);this.add(H)}}}const S=We(8,19,"",Se.WINDOW);let T="";switch(I.gameMode){case AE.DAILY:T=D.t("gameMode:dailyRun");break;case AE.SPLICED_ENDLESS:case AE.ENDLESS:T=D.t("gameMode:endless");break;case AE.CLASSIC:T=D.t("gameMode:classic");break;case AE.CHALLENGE:T=D.t("gameMode:challenge");break}if(S.appendText(T,!1),I.gameMode===AE.SPLICED_ENDLESS){const C=s.add.image(0,0,"icon_spliced");C.setScale(.75);const U=S.getTopRight();C.setPosition(U.x+5,27),this.add(C),S.appendText("    - ",!1)}else S.appendText(" - ",!1);S.appendText(D.t("saveSlotSelectUiHandler:wave")+" "+I.waveIndex,!1),this.add(S);const i=We(8,33,new Date(I.timestamp).toLocaleString(),Se.WINDOW);this.add(i);const o=s.add.container(140,17);I.party.forEach((C,U)=>{const _=s.add.container(26*U,0);_.setScale(.75);const G=C.toPokemon(),H=s.addPokemonIcon(G,0,0,0,0),c=We(32,20,`${D.t("saveSlotSelectUiHandler:lv")}${Js(G.level,1e3)}`,Se.PARTY,{fontSize:"54px",color:"#f8f8f8"});c.setShadow(0,0,void 0),c.setStroke("#424242",14),c.setOrigin(1,0),_.add(H),_.add(c),o.add(_),G.destroy()}),this.add(o)}};r(jh,"RunEntryContainer");let oG=jh;const Hb=/^[v^~<>=]*?(\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+))?(?:-([\da-z\-]+(?:\.[\da-z\-]+)*))?(?:\+[\da-z\-]+(?:\.[\da-z\-]+)*)?)?)?$/i,I2=r(t=>{if(typeof t!="string")throw new TypeError("Invalid argument expected string");const E=t.match(Hb);if(!E)throw new Error(`Invalid argument not valid semver ('${t}' received)`);return E.shift(),E},"validateAndParse"),L2=r(t=>t==="*"||t==="x"||t==="X","isWildcard"),N2=r(t=>{const E=parseInt(t,10);return isNaN(E)?t:E},"tryParse"),cb=r((t,E)=>typeof t!=typeof E?[String(t),String(E)]:[t,E],"forceType"),Bb=r((t,E)=>{if(L2(t)||L2(E))return 0;const[R,I]=cb(N2(t),N2(E));return R>I?1:R<I?-1:0},"compareStrings"),s2=r((t,E)=>{for(let R=0;R<Math.max(t.length,E.length);R++){const I=Bb(t[R]||"0",E[R]||"0");if(I!==0)return I}return 0},"compareSegments"),Oi=r((t,E)=>{const R=I2(t),I=I2(E),N=R.pop(),S=I.pop(),T=s2(R,I);return T!==0?T:N&&S?s2(N.split("."),S.split(".")):N||S?N?-1:1:0},"compareVersions"),hb={version:"1.0.4",migrate:r(t=>{t.starterData&&t.dexData&&Object.keys(t.starterData).forEach(E=>{var R;(R=t.dexData[E])!=null&&R.caughtAttr&&t.starterData[E]&&!t.starterData[E].abilityAttr&&(t.starterData[E].abilityAttr=1)})},"migrate")},fb={version:"1.0.4",migrate:r(t=>{t.gameStats&&t.gameStats.legendaryPokemonCaught!==void 0&&t.gameStats.subLegendaryPokemonCaught===void 0&&(t.gameStats.subLegendaryPokemonSeen=0,t.gameStats.subLegendaryPokemonCaught=0,t.gameStats.subLegendaryPokemonHatched=0,uI.filter(E=>E.subLegendary).forEach(E=>{const R=t.dexData[E.speciesId];t.gameStats.subLegendaryPokemonSeen+=R.seenCount,t.gameStats.legendaryPokemonSeen=Math.max(t.gameStats.legendaryPokemonSeen-R.seenCount,0),t.gameStats.subLegendaryPokemonCaught+=R.caughtCount,t.gameStats.legendaryPokemonCaught=Math.max(t.gameStats.legendaryPokemonCaught-R.caughtCount,0),t.gameStats.subLegendaryPokemonHatched+=R.hatchedCount,t.gameStats.legendaryPokemonHatched=Math.max(t.gameStats.legendaryPokemonHatched-R.hatchedCount,0)}),t.gameStats.subLegendaryPokemonSeen=Math.max(t.gameStats.subLegendaryPokemonSeen,t.gameStats.subLegendaryPokemonCaught),t.gameStats.legendaryPokemonSeen=Math.max(t.gameStats.legendaryPokemonSeen,t.gameStats.legendaryPokemonCaught),t.gameStats.mythicalPokemonSeen=Math.max(t.gameStats.mythicalPokemonSeen,t.gameStats.mythicalPokemonCaught))},"migrate")},db={version:"1.0.4",migrate:r(t=>{var E,R;if(!Ne(t.starterData))for(const I of iN)(E=t.starterData[I])!=null&&E.abilityAttr&&(t.starterData[I].abilityAttr|=fI.ABILITY_1),(R=t.dexData[I])!=null&&R.caughtAttr&&(t.dexData[I].caughtAttr|=LA.FEMALE)},"migrate")},Kb=[hb,fb,db],Fb={version:"1.0.4",migrate:r(t=>{t.hasOwnProperty("REROLL_TARGET")&&!t.hasOwnProperty(Xe.Shop_Cursor_Target)&&(t[Xe.Shop_Cursor_Target]=t.REROLL_TARGET,delete t.REROLL_TARGET,localStorage.setItem("settings",JSON.stringify(t)))},"migrate")},Yb=[Fb],Wb={version:"1.0.4",migrate:r(t=>{for(const E of t.modifiers)if(E.className==="PokemonBaseStatModifier")E.className="BaseStatModifier";else if(E.className==="PokemonResetNegativeStatStageModifier")E.className="ResetNegativeStatStageModifier";else if(E.className==="TempBattleStatBoosterModifier")if(E.typeId!=="DIRE_HIT"){E.className="TempStatStageBoosterModifier",E.typeId="TEMP_STAT_STAGE_BOOSTER";const I=E.typePregenArgs[0]+1;E.typePregenArgs[0]=I,E.args=[I,5,Math.min(E.args[1],5)]}else E.className="TempCritBoosterModifier",E.typePregenArgs=[],E.args=[5,Math.min(E.args[1],5)];else if(E.className==="DoubleBattleChanceBoosterModifier"&&E.args.length===1){let R;switch(E.typeId){case"MAX_LURE":R=30;break;case"SUPER_LURE":R=15;break;default:R=10;break}E.args=[R,Math.min(E.args[0],R)]}for(const E of t.enemyModifiers)E.className==="PokemonBaseStatModifier"?E.className="BaseStatModifier":E.className==="PokemonResetNegativeStatStageModifier"&&(E.className="ResetNegativeStatStageModifier")},"migrate")},mb={version:"1.0.4",migrate:r(t=>{for(const E of t.party)E.mysteryEncounterPokemonData&&(E.customPokemonData=new lR(E.mysteryEncounterPokemonData),E.mysteryEncounterPokemonData=null),E.fusionMysteryEncounterPokemonData&&(E.fusionCustomPokemonData=new lR(E.fusionMysteryEncounterPokemonData),E.fusionMysteryEncounterPokemonData=null),E.customPokemonData=E.customPokemonData??new lR,!Ne(E.natureOverride)&&E.natureOverride>=0&&(E.customPokemonData.nature=E.natureOverride,E.natureOverride=-1)},"migrate")},gb=[Wb,mb],pb={version:"1.7.0",migrate:r(t=>{t.starterData&&t.dexData&&Object.keys(t.starterData).forEach(E=>{var S,T;const R=(S=t.dexData[E])==null?void 0:S.caughtAttr,I=Number(E);if(!I)return;const N=de(I);R&&((T=N.forms)==null?void 0:T.length)>1&&N.forms.filter((o,C)=>o.isStarterSelectable&&R&s.gameData.getFormAttr(C)).length===0&&(t.dexData[E].caughtAttr+=LA.DEFAULT_FORM)})},"migrate")},yb=[pb],wb={version:"1.7.0",migrate:r(t=>{for(let E=0;E<t.modifiers.length;)t.modifiers[E].className==="TerastallizeModifier"?(t.party.forEach(R=>{R.id===t.modifiers[E].args[0]&&(R.teraType=t.modifiers[E].args[1])}),t.modifiers.splice(E,1)):E++;for(let E=0;E<t.enemyModifiers.length;)t.enemyModifiers[E].className==="TerastallizeModifier"?(t.enemyParty.forEach(R=>{R.id===t.enemyModifiers[E].args[0]&&(R.teraType=t.enemyModifiers[E].args[1])}),t.enemyModifiers.splice(E,1)):E++;t.party.forEach(E=>{Ne(E.teraType)&&(E.teraType=XN(E.species,E.formIndex).type1)}),t.enemyParty.forEach(E=>{Ne(E.teraType)&&(E.teraType=XN(E.species,E.formIndex).type1)})},"migrate")},Vb=[wb],vb={version:"1.8.3",migrate:r(t=>{var E;if(t.starterData&&t.dexData){const I=(E=t.dexData[172])==null?void 0:E.caughtAttr,N=de(172);N.speciesId===e.PICHU&&I&&(t.dexData[172].caughtAttr&=N.getFullUnlocksData(),t.dexData[172].caughtAttr|=LA.DEFAULT_FORM)}},"migrate")},xb=[vb],bb={version:"1.9.0",migrate:r(t=>{const E=r(R=>{var I;return R.moveset=(R.moveset??[new Ye(A.TACKLE),new Ye(A.GROWL)]).filter(N=>!!N).map(N=>Ye.loadMove(N)),(I=R.summonData).moveset&&(I.moveset=R.summonData.moveset.filter(N=>!!N).map(N=>Ye.loadMove(N))),R.customPokemonData&&"hitsRecCount"in R.customPokemonData&&typeof R.customPokemonData.hitsRecCount=="number"&&(R.battleData.hitCount=R.customPokemonData.hitsRecCount,R.customPokemonData.hitsRecCount=null),R},"mapParty");t.party=t.party.map(E),t.enemyParty=t.enemyParty.map(E)},"migrate")},Zb=[bb],lS=k6,Ii=[];Ii.push(...Kb);Ii.push(...yb);Ii.push(...xb);const Li=[];Li.push(...gb);Li.push(...Vb);Li.push(...Zb);const tc=[];tc.push(...Yb);const Rc=r(t=>{t.sort((E,R)=>Oi(E.version,R.version))},"sortMigrators");Rc(Ii);Rc(Li);Rc(tc);const Oc=r((t,E,R)=>{for(const I of t)Oi(R,I.version)===-1&&I.migrate(E)},"applyMigrators");function kb(t){const E=t.gameVersion;Oi(E,lS)===-1&&(Oc(Ii,t,E),console.log(`System data successfully migrated to v${lS}!`))}r(kb,"applySystemVersionMigration");function Xb(t){const E=t.gameVersion;Oi(E,lS)===-1&&(t.money=Math.floor(t.money),Oc(Li,t,E),console.log(`Session data successfully migrated to v${lS}!`))}r(Xb,"applySessionVersionMigration");function Qb(t){const E=t.hasOwnProperty("gameVersion")?t.gameVersion:"1.0.0";Oi(E,lS)===-1&&(Oc(tc,t,E),console.log(`Settings successfully migrated to v${lS}!`))}r(Qb,"applySettingsVersionMigration");function Ic(t,E,R){switch(R){case Me.POKEBALL:S2(t,E,48);break;case Me.GREAT_BALL:S2(t,E,96);break;case Me.ULTRA_BALL:T2(t,E,8);break;case Me.ROGUE_BALL:T2(t,E,10);break;case Me.MASTER_BALL:Jb(t,E);break}}r(Ic,"addPokeballOpenParticles");function S2(t,E,R){const I=s.anims.generateFrameNames("pb_particles",{start:0,end:3,suffix:".png"});s.anims.exists("pb_open_particle")||s.anims.create({key:"pb_open_particle",frames:I,frameRate:16,repeat:-1});const N=r(T=>{const i=s.add.sprite(t,E,"pb_open_particle");s.field.add(i);const o=T*45,[C,U]=[R*Math.cos(o*Math.PI/180),R*Math.sin(o*Math.PI/180)];s.tweens.add({targets:i,x:t+C,y:E+U,duration:575}),i.play({key:"pb_open_particle",startFrame:(T+3)%4,frameRate:Math.floor(16*s.gameSpeed)}),s.tweens.add({targets:i,delay:500,duration:75,alpha:0,ease:"Sine.easeIn",onComplete:r(()=>i.destroy(),"onComplete")})},"addParticle");let S=0;s.time.addEvent({delay:20,repeat:16,callback:r(()=>N(++S),"callback")})}r(S2,"doDefaultPbOpenParticles");function T2(t,E,R){const I=[];for(let N=0;N<10;N++)I.push(bv(N*25,t,E,1,1,5,R));s.tweens.add({targets:I,delay:750,duration:250,alpha:0,ease:"Sine.easeIn",onComplete:r(()=>{for(const N of I)N.destroy()},"onComplete")})}r(T2,"doUbOpenParticles");function Jb(t,E){const R=[];for(let I=0;I<2;I++){for(let N=0;N<8;N++)R.push(bv(N*32,t,E,I?1:2,I?2:1,8,4));s.tweens.add({targets:R,delay:750,duration:250,alpha:0,ease:"Sine.easeIn",onComplete:r(()=>{for(const N of R)N.destroy()},"onComplete")})}}r(Jb,"doMbOpenParticles");function bv(t,E,R,I,N,S,T){let i=0;const o=s.add.image(E,R,"pb_particles",`${T}.png`);s.field.add(o);const C=r(()=>{if(!o.scene)return U.remove();o.x=E+aI(t,i*I),o.y=R+hN(t,i*N),t=t+S,i++},"updateParticle"),U=s.tweens.addCounter({repeat:-1,duration:VE(1),onRepeat:r(()=>{C()},"onRepeat")});return o}r(bv,"doFanOutParticle");function $b(t){const E=r(()=>{const R=s.add.sprite(t.x,t.y,"pb_particles","4.png");R.setOrigin(t.originX,t.originY),R.setAlpha(.5),s.field.add(R),s.tweens.add({targets:R,y:t.y-10,ease:"Sine.easeOut",duration:250,onComplete:r(()=>{s.tweens.add({targets:R,y:t.y,alpha:0,ease:"Sine.easeIn",duration:250})},"onComplete")});const I=X6(25);s.tweens.add({targets:R,x:t.x+I,duration:500}),s.tweens.add({targets:R,alpha:0,delay:425,duration:75,onComplete:r(()=>R.destroy(),"onComplete")})},"addParticle");new Array(3).fill(null).map(()=>E())}r($b,"addPokeballCaptureStars");function aI(t,E){return E*Math.sin(t*(Math.PI/128))}r(aI,"sin");function hN(t,E){return E*Math.cos(t*(Math.PI/128))}r(hN,"cos");function HM(t,E){const R=E?`_${E+1}`:"",I=`shiny${R}`,N=`sparkle${R}`;if(!s.anims.exists(N)){const S=s.anims.generateFrameNames(I,{suffix:".png",end:34});s.anims.create({key:`sparkle${R}`,frames:S,frameRate:32,showOnStart:!0,hideOnComplete:!0})}t.play(N),s.playSound("se/sparkle")}r(HM,"doShinySparkleAnim");function xE(t,E){if(Ne(t))return null;const R=s.uiTheme??XO.DEFAULT;let I=qb(t);return E&&I&&(I=N8(I,E,R)),I}r(xE,"getEncounterText");function qb(t){var R,I;const E=(I=(R=s.currentBattle)==null?void 0:R.mysteryEncounter)==null?void 0:I.dialogueTokens;return D.exists(t,E)?D.t(t,E):t??null}r(qb,"getTextWithDialogueTokens");function YE(t){const E=xE(t);s.queueMessage(E??"",null,!0)}r(YE,"queueEncounterMessage");function fA(t,E=null,R=0,I=!0,N=null){return new Promise(S=>{const T=xE(t);s.ui.showText(T??"",E,()=>S(),R,I,N)})}r(fA,"showEncounterText");function rI(t,E,R=null,I=0){return new Promise(N=>{const S=xE(t),T=xE(E);s.ui.showDialogue(S??"",T??"",R,()=>N(),I)})}r(rI,"showEncounterDialogue");var Zv=(t=>(t[t.SWITCH=0]="SWITCH",t[t.SET=1]="SET",t))(Zv||{});const ef=class ef extends Fa{constructor(E,R){super(),this.partyMemberIndex=E,this.fieldIndex=E<s.currentBattle.getBattlerCount()?E:-1,this.player=R}getParty(){return this.player?s.getPlayerParty():s.getEnemyParty()}getPokemon(){return this.getParty()[this.partyMemberIndex]}};r(ef,"PartyMemberPokemonPhase");let OC=ef;const Af=class Af extends kt{start(){var I;super.start();const E=this.getPokemon();((I=E.status)==null?void 0:I.effect)===J.TOXIC&&(E.status.toxicTurnCount=0),s.arena.applyTags(_O,!1,E),s.currentBattle.isBattleMysteryEncounter()&&E.findTags(N=>N instanceof $l).length>0&&E.lapseTag(Y.MYSTERY_ENCOUNTER_POST_SUMMON),r6(wE,E);const R=E.isPlayer()?s.getPlayerField():s.getEnemyField();for(const N of R)sA(HS,N,null,!1);this.end()}};r(Af,"PostSummonPhase");let vN=Af;const Ef=class Ef extends kt{constructor(E){super(E)}start(){super.start(),this.getPokemon().sparkle(),s.time.delayedCall(1e3,()=>this.end())}};r(Ef,"ShinySparklePhase");let xa=Ef;const tf=class tf extends OC{constructor(E,R=!0,I=!1){super(E,R),this.loaded=I}start(){super.start(),ic(es,this.getPokemon()),this.preSummon()}preSummon(){var R,I;const E=this.getPokemon();if(!E.isAllowedInBattle()||this.player&&!this.getParty().some(N=>N.id===E.id)){console.warn("The Pokemon about to be sent out is fainted or illegal under a challenge. Attempting to resolve..."),E.isOnField()&&E.leaveField();const N=this.getParty(),S=N.findIndex((T,i)=>i>this.partyMemberIndex&&T.isAllowedInBattle());if(S===-1){console.error(`Party Details:
`,N),console.error("All available Pokemon were fainted or illegal!"),s.clearPhaseQueue(),s.unshiftPhase(new $O),this.end();return}[N[this.partyMemberIndex],N[S]]=[N[S],N[this.partyMemberIndex]],console.warn("Swapped %s %O with %s %O",Z(E),E,Z(N[0]),N[0])}if(this.player)s.ui.showText(D.t("battle:playerGo",{pokemonName:Z(this.getPokemon())})),this.player&&s.pbTray.hide(),s.trainer.setTexture(`trainer_${s.gameData.gender===YA.FEMALE?"f":"m"}_back_pb`),s.time.delayedCall(562,()=>{s.trainer.setFrame("2"),s.time.delayedCall(64,()=>{s.trainer.setFrame("3")})}),s.tweens.add({targets:s.trainer,x:-36,duration:1e3,onComplete:r(()=>s.trainer.setVisible(!1),"onComplete")}),s.time.delayedCall(750,()=>this.summon());else if(s.currentBattle.battleType===AA.TRAINER||((R=s.currentBattle.mysteryEncounter)==null?void 0:R.encounterMode)===JE.TRAINER_BATTLE){const N=(I=s.currentBattle.trainer)==null?void 0:I.getName(this.fieldIndex%2?b.TRAINER_PARTNER:b.TRAINER),S=this.getPokemon().getNameToRender(),T=D.t("battle:trainerSendOut",{trainerName:N,pokemonName:S});s.pbTrayEnemy.hide(),s.ui.showText(T,null,()=>this.summon())}else s.currentBattle.isBattleMysteryEncounter()&&(s.pbTrayEnemy.hide(),this.summonWild())}summon(){const E=this.getPokemon(),R=s.addFieldSprite(this.player?36:248,this.player?80:44,"pb",xI(E.getPokeball(!0)));if(R.setVisible(!1),R.setOrigin(.5,.625),s.field.add(R),this.fieldIndex===1)E.setFieldPosition(RR.RIGHT,0);else{const N=this.getParty().filter(S=>S.isAllowedInBattle()).length;E.setFieldPosition(!s.currentBattle.double||N===1?RR.CENTER:RR.LEFT)}const I=E.getFieldPositionOffset();R.setVisible(!0),s.tweens.add({targets:R,duration:650,x:(this.player?100:236)+I[0]}),s.tweens.add({targets:R,duration:150,ease:"Cubic.easeOut",y:(this.player?70:34)+I[1],onComplete:r(()=>{s.tweens.add({targets:R,duration:500,ease:"Cubic.easeIn",angle:1440,y:(this.player?132:86)+I[1],onComplete:r(()=>{if(s.playSound("se/pb_rel"),R.destroy(),s.add.existing(E),s.field.add(E),!this.player){const N=s.getPlayerPokemon();N!=null&&N.isOnField()&&s.field.moveBelow(E,N),s.currentBattle.seenEnemyPartyMemberIds.add(E.id)}Ic(E.x,E.y-16,E.getPokeball(!0)),s.updateModifiers(this.player),s.updateFieldScale(),E.showInfo(),E.playAnim(),E.setVisible(!0),E.getSprite().setVisible(!0),E.setScale(.5),E.tint(bI(E.getPokeball(!0))),E.untint(250,"Sine.easeIn"),s.updateFieldScale(),s.tweens.add({targets:E,duration:250,ease:"Sine.easeIn",scale:E.getSpriteScale(),onComplete:r(()=>{E.cry(E.getHpRatio()>.25?void 0:{rate:.85}),E.getSprite().clearTint(),E.fieldSetup(),E.summonData.speciesForm&&E.loadAssets(!1),s.time.delayedCall(1e3,()=>this.end())},"onComplete")})},"onComplete")})},"onComplete")})}summonWild(){const E=this.getPokemon();if(this.fieldIndex===1)E.setFieldPosition(RR.RIGHT,0);else{const R=this.getParty().filter(I=>!I.isFainted()).length;E.setFieldPosition(!s.currentBattle.double||R===1?RR.CENTER:RR.LEFT)}if(s.add.existing(E),s.field.add(E),!this.player){const R=s.getPlayerPokemon();R!=null&&R.isOnField()&&s.field.moveBelow(E,R),s.currentBattle.seenEnemyPartyMemberIds.add(E.id)}s.updateModifiers(this.player),s.updateFieldScale(),E.showInfo(),E.playAnim(),E.setVisible(!0),E.getSprite().setVisible(!0),E.setScale(.75),E.tint(bI(E.pokeball)),E.untint(250,"Sine.easeIn"),s.updateFieldScale(),E.x+=16,E.y-=20,E.alpha=0,s.tweens.add({targets:E,x:"-=16",y:"+=16",alpha:1,duration:1e3,ease:"Sine.easeIn",scale:E.getSpriteScale(),onComplete:r(()=>{E.cry(E.getHpRatio()>.25?void 0:{rate:.85}),E.getSprite().clearTint(),E.fieldSetup(),s.updateFieldScale(),s.time.delayedCall(1e3,()=>this.end())},"onComplete")})}onEnd(){const E=this.getPokemon();E.isShiny(!0)&&s.unshiftPhase(new xa(E.getBattlerIndex())),E.resetTurnData(),(!this.loaded||[AA.TRAINER,AA.MYSTERY_ENCOUNTER].includes(s.currentBattle.battleType)||s.currentBattle.waveIndex%10===1)&&(s.triggerPokemonFormChange(E,xt,!0),this.queuePostSummon())}queuePostSummon(){s.pushPhase(new vN(this.getPokemon().getBattlerIndex()))}end(){this.onEnd(),super.end()}};r(tf,"SummonPhase");let Ft=tf;const Rf=class Rf extends Ft{preSummon(){s.ui.showText(D.t("battle:sendOutPokemon",{pokemonName:Z(this.getPokemon())})),s.time.delayedCall(250,()=>this.summon())}};r(Rf,"SummonMissingPhase");let CG=Rf;var ZA=(t=>(t[t.INITIAL_SWITCH=0]="INITIAL_SWITCH",t[t.SWITCH=1]="SWITCH",t[t.BATON_PASS=2]="BATON_PASS",t[t.SHED_TAIL=3]="SHED_TAIL",t[t.FORCE_SWITCH=4]="FORCE_SWITCH",t))(ZA||{});const Of=class Of extends Ft{constructor(E,R,I,N,S=!0){super(R,S),this.switchType=E,this.slotIndex=I,this.doReturn=N}start(){super.start()}preSummon(){var R,I;if(this.player||(this.slotIndex===-1&&(this.slotIndex=(R=s.currentBattle.trainer)==null?void 0:R.getNextSummonIndex(this.fieldIndex?b.TRAINER_PARTNER:b.TRAINER)),this.slotIndex>-1&&(this.showEnemyTrainer(this.fieldIndex%2?b.TRAINER_PARTNER:b.TRAINER),s.pbTrayEnemy.showPbTray(s.getEnemyParty()))),!this.doReturn||this.slotIndex!==-1&&!(this.player?s.getPlayerParty():s.getEnemyParty())[this.slotIndex]){if(this.player){this.switchAndSummon();return}s.time.delayedCall(750,()=>this.switchAndSummon());return}const E=this.getPokemon();if((this.player?s.getEnemyField():s.getPlayerField()).forEach(N=>N.removeTagsBySourceId(E.id)),this.switchType===ZA.SWITCH||this.switchType===ZA.INITIAL_SWITCH){const N=E.getTag(OR);N&&s.tweens.add({targets:N.sprite,duration:250,scale:N.sprite.scale*.5,ease:"Sine.easeIn",onComplete:r(()=>N.sprite.destroy(),"onComplete")})}s.ui.showText(this.player?D.t("battle:playerComeBack",{pokemonName:Z(E)}):D.t("battle:trainerComeBack",{trainerName:(I=s.currentBattle.trainer)==null?void 0:I.getName(this.fieldIndex%2?b.TRAINER_PARTNER:b.TRAINER),pokemonName:E.getNameToRender()})),s.playSound("se/pb_rel"),E.hideInfo(),E.tint(bI(E.getPokeball(!0)),1,250,"Sine.easeIn"),s.tweens.add({targets:E,duration:250,ease:"Sine.easeIn",scale:.5,onComplete:r(()=>{s.time.delayedCall(750,()=>this.switchAndSummon()),E.leaveField(this.switchType===ZA.SWITCH,!1)},"onComplete")})}switchAndSummon(){const E=this.player?this.getParty():s.getEnemyParty(),R=E[this.slotIndex];if(this.lastPokemon=this.getPokemon(),R.resetSummonData(),R.loadAssets(!0),ic(es,R),$9(cS,this.lastPokemon),!R){this.end();return}if(this.switchType===ZA.BATON_PASS&&((this.player?s.getEnemyField():s.getPlayerField()).forEach(N=>N.transferTagsBySourceId(this.lastPokemon.id,R.id)),!s.findModifier(N=>N instanceof rs&&N.pokemonId===R.id))){const N=s.findModifier(S=>S instanceof rs&&S.pokemonId===this.lastPokemon.id);N&&s.tryTransferHeldItemModifier(N,R,!1,void 0,void 0,void 0,!1)}E[this.slotIndex]=this.lastPokemon,E[this.fieldIndex]=R;const I=r(()=>{var N;s.ui.showText(this.player?D.t("battle:playerGo",{pokemonName:Z(R)}):D.t("battle:trainerGo",{trainerName:(N=s.currentBattle.trainer)==null?void 0:N.getName(this.fieldIndex%2?b.TRAINER_PARTNER:b.TRAINER),pokemonName:this.getPokemon().getNameToRender()})),this.switchType===ZA.BATON_PASS||this.switchType===ZA.SHED_TAIL?this.lastPokemon.getTag(OR)&&(R.x+=this.lastPokemon.getSubstituteOffset()[0],R.y+=this.lastPokemon.getSubstituteOffset()[1],R.setAlpha(.5)):R.fieldSetup(!0),this.summon()},"showTextAndSummon");this.player?I():s.time.delayedCall(1500,()=>{this.hideEnemyTrainer(),s.pbTrayEnemy.hide(),I()})}onEnd(){var i;super.onEnd();const E=this.getPokemon(),R=s.currentBattle.lastMove,I=R?Ke[R]:void 0,N=(i=s.currentBattle.turnCommands[this.fieldIndex])==null?void 0:i.command,S=(I==null?void 0:I.hasAttr(oR))&&!this.lastPokemon.isFainted(),T=this.lastPokemon.hasAbilityWithAttr(As)&&!this.lastPokemon.isFainted();if((N===GE.POKEMON||S||T)&&(E.tempSummonData.turnCount--,E.tempSummonData.waveTurnCount--),this.switchType===ZA.BATON_PASS&&E)E.transferSummon(this.lastPokemon);else if(this.switchType===ZA.SHED_TAIL&&E){const o=this.lastPokemon.getTag(OR);o&&E.summonData.tags.push(o)}this.switchType!==ZA.INITIAL_SWITCH&&(E.resetTurnData(),E.turnData.switchedInThisTurn=!0),this.lastPokemon.resetSummonData(),s.triggerPokemonFormChange(E,xt,!0),s.arena.triggerWeatherBasedFormChanges()}queuePostSummon(){s.unshiftPhase(new vN(this.getPokemon().getBattlerIndex()))}};r(Of,"SwitchSummonPhase");let jR=Of;const If=class If extends Nt{constructor(E,R,I,N){super(),this.switchType=E,this.fieldIndex=R,this.isModal=I,this.doReturn=N}start(){if(super.start(),this.isModal&&!s.getPlayerParty().filter(R=>R.isAllowedInBattle()&&!R.isActive(!0)).length)return super.end();if(this.isModal&&!this.doReturn&&!s.getPlayerParty()[this.fieldIndex].isFainted())return super.end();if(this.isModal&&s.getPlayerField().filter(R=>R.isAllowedInBattle()&&R.isActive(!0)).length>=s.currentBattle.getBattlerCount())return super.end();const E=s.currentBattle.getBattlerCount()===1||s.getPokemonAllowedInBattle().length>1?this.fieldIndex:0;s.ui.setMode(Ce.PARTY,this.isModal?CR.FAINT_SWITCH:CR.POST_BATTLE_SWITCH,E,(R,I)=>{if(R>=s.currentBattle.getBattlerCount()&&R<6){s.tryRemovePhase(S=>S instanceof vN&&S.player&&S.fieldIndex===this.fieldIndex);const N=I===Ya.PASS_BATON?ZA.BATON_PASS:this.switchType;s.unshiftPhase(new jR(N,E,R,this.doReturn))}s.ui.setMode(Ce.MESSAGE).then(()=>super.end())},st.FilterNonFainted)}};r(If,"SwitchPhase");let xN=If;const Lf=class Lf extends Nt{constructor(E,R){super(),this.fieldIndex=E,this.useName=R}start(){super.start();const E=s.getPlayerField()[this.fieldIndex];if(s.battleStyle===Zv.SET)return super.end();if(s.field.getAll().indexOf(E)===-1)return s.unshiftPhase(new CG(this.fieldIndex)),super.end();if(!s.getPlayerParty().slice(1).filter(R=>R.isActive()).length)return super.end();if(E.getTag(Y.FRENZY)||E.isTrapped()||s.getPlayerField().some(R=>R.getTag(Y.COMMANDED)))return super.end();s.ui.showText(D.t("battle:switchQuestion",{pokemonName:this.useName?Z(E):D.t("battle:pokemon")}),null,()=>{s.ui.setMode(Ce.CONFIRM,()=>{s.ui.setMode(Ce.MESSAGE),s.unshiftPhase(new xN(ZA.INITIAL_SWITCH,this.fieldIndex,!1,!0)),this.end()},()=>{s.ui.setMode(Ce.MESSAGE),this.end()})})}};r(Lf,"CheckSwitchPhase");let GI=Lf;const an=class an extends Nt{start(){for(super.start(),s.phaseQueue=s.phaseQueue.filter(E=>!(E instanceof an));s.tryRemoveUnshiftedPhase(E=>E instanceof an););s.newBattle(),this.end()}};r(an,"NewBattlePhase");let US=an;const Nf=class Nf extends kt{constructor(E){super(E)}start(){const E=this.getPokemon();if(E!=null&&E.isActive(!0)&&E.status&&E.status.isPostTurn()&&!E.switchOutStatus){E.status.incrementTurn();const R=new SA(!1);if(sA($E,E,R),sA(Il,E,R),R.value)this.end();else{s.queueMessage(Pv(E.status.effect,Z(E)));const I=new me(0);switch(E.status.effect){case J.POISON:I.value=Math.max(E.getMaxHp()>>3,1);break;case J.TOXIC:I.value=Math.max(Math.floor(E.getMaxHp()/16*E.status.toxicTurnCount),1);break;case J.BURN:I.value=Math.max(E.getMaxHp()>>4,1),sA(Ul,E,null,!1,I);break}I.value&&(s.damageNumberHandler.add(this.getPokemon(),E.damage(I.value,!1,!0)),E.updateInfo(),rc(YS,E,I.value,E.hasPassive(),!1,[])),new Rs(XA.POISON+(E.status.effect-1),E).play(!1,()=>this.end())}}else this.end()}end(){s.currentBattle.battleSpec===tt.FINAL_BOSS?s.initFinalBossPhaseTwo(this.getPokemon()):super.end()}};r(Nf,"PostTurnStatusEffectPhase");let IC=Nf;const sf=class sf extends jR{constructor(E){super(ZA.SWITCH,E,-1,!0)}switchAndSummon(){this.end()}summon(){}onEnd(){const E=this.getPokemon();E.resetSprite(),E.resetTurnData(),E.resetSummonData(),s.updateFieldScale(),s.triggerPokemonFormChange(E,xt)}};r(sf,"ReturnPhase");let ba=sf;const Sf=class Sf extends kt{constructor(E){super(E)}start(){super.start();const E=this.getPokemon();let R=[],I=[],N=[];const S=s.getEnemyField(),T=s.uiTheme;for(let i=0;i<S.length;i++){R=S[i].ivs;const o=s.gameData.dexData[S[i].species.getRootSpeciesId()].ivs;I=S[i].getBattleInfo().getStatsValueContainer().list,N=I.filter(C=>C.name.indexOf("icon_stat_label")>=0);for(let C=0;C<N.length;C++){const U=h[N[C].frame.name];if(R[U]>o[U]&&uN.indexOf(Number(U))>=0){const _=R[U]===31?pA(Se.PERFECT_IV,!1,T):pA(Se.SUMMARY_GREEN,!1,T),G=Phaser.Display.Color.HexStringToColor(_).color;N[C].setTint(G)}N[C].setVisible(!0)}}s.hideIvs?this.end():s.ui.showText(D.t("battle:ivScannerUseQuestion",{pokemonName:Z(E)}),null,()=>{s.ui.setMode(Ce.CONFIRM,()=>{s.ui.setMode(Ce.MESSAGE),s.ui.clearText(),s.ui.getMessageHandler().promptIvs(E.id,E.ivs).then(()=>this.end())},()=>{s.ui.setMode(Ce.MESSAGE),s.ui.clearText(),this.end()})})}};r(Sf,"ScanIvsPhase");let Za=Sf;const Tf=class Tf extends Nt{constructor(E){super(),this.double=E}start(){super.start();const E=s.getPlayerField().find(R=>R.isActive(!0));E?E.setFieldPosition(this.double&&s.getPokemonAllowedInBattle().length>1?RR.LEFT:RR.CENTER,500).then(()=>{if(E.getFieldIndex()===1){const R=s.getPlayerParty();R[1]=R[0],R[0]=E}this.end()}):this.end()}};r(Tf,"ToggleDoublePositionPhase");let _I=Tf;const nf=class nf extends Nt{constructor(E){super(),this.resumeBgm=E}start(){super.start();const E=s.isBgmPlaying();E&&s.fadeOutBgm(1e3,!1),s.ui.fadeOut(1e3).then(()=>{for(const I of s.getPlayerParty()){I.hp=I.getMaxHp(),I.resetStatus(!0,!1,!1,!0);for(const N of I.moveset)N.ppUsed=0;I.updateInfo(!0)}const R=s.playSoundWithoutBgm("heal");s.time.delayedCall(KA(R.totalDuration*1e3),()=>{R.destroy(),this.resumeBgm&&E&&s.playBgm(),s.ui.fadeIn(500).then(()=>this.end())})}),s.arena.playerTerasUsed=0}};r(nf,"PartyHealPhase");let DS=nf;const af=class af extends Nt{constructor(E){super(),this.nextBiome=E}start(){var E,R;if(super.start(),this.nextBiome===void 0)return this.end();s.lastEnemyTrainer=((E=s.currentBattle)==null?void 0:E.trainer)??null,s.lastMysteryEncounter=(R=s.currentBattle)==null?void 0:R.mysteryEncounter,s.tweens.add({targets:[s.arenaEnemy,s.lastEnemyTrainer],x:"+=300",duration:2e3,onComplete:r(()=>{s.arenaEnemy.setX(s.arenaEnemy.x-600),s.newArena(this.nextBiome);const N=`${ni(this.nextBiome)}_bg`;s.arenaBgTransition.setTexture(N),s.arenaBgTransition.setAlpha(0),s.arenaBgTransition.setVisible(!0),s.arenaPlayerTransition.setBiome(this.nextBiome),s.arenaPlayerTransition.setAlpha(0),s.arenaPlayerTransition.setVisible(!0),s.tweens.add({targets:[s.arenaPlayer,s.arenaBgTransition,s.arenaPlayerTransition],duration:1e3,delay:1e3,ease:"Sine.easeInOut",alpha:r(S=>S===s.arenaPlayer?0:1,"alpha"),onComplete:r(()=>{s.arenaBg.setTexture(N),s.arenaPlayer.setBiome(this.nextBiome),s.arenaPlayer.setAlpha(1),s.arenaEnemy.setBiome(this.nextBiome),s.arenaEnemy.setAlpha(1),s.arenaNextEnemy.setBiome(this.nextBiome),s.arenaBgTransition.setVisible(!1),s.arenaPlayerTransition.setVisible(!1),s.lastEnemyTrainer&&s.lastEnemyTrainer.destroy(),this.end()},"onComplete")})},"onComplete")})}};r(af,"SwitchBiomePhase");let lG=af;const rf=class rf extends Nt{start(){super.start(),s.resetSeed();const E=s.arena.biomeType,R=s.currentBattle.waveIndex+1,I=r(N=>{R%10===1&&(s.applyModifiers(Jr,!0),s.unshiftPhase(new DS(!1))),s.unshiftPhase(new lG(N)),this.end()},"setNextBiome");if(s.gameMode.isClassic&&s.gameMode.isWaveFinal(R+9)||s.gameMode.isDaily&&s.gameMode.isWaveFinal(R)||s.gameMode.hasShortBiomes&&!(R%50))I(n.END);else if(s.gameMode.hasRandomBiomes)I(this.generateNextBiome(R));else if(Array.isArray(_N[E])){const N=_N[E].filter(S=>!Array.isArray(S)||!De(S[1])).map(S=>Array.isArray(S)?S[0]:S);if(N.length>1&&s.findModifier(S=>S instanceof Yr)){const S=N.map(T=>({label:KM(T),handler:r(()=>(s.ui.setMode(Ce.MESSAGE),I(T),!0),"handler")}));s.ui.setMode(Ce.OPTION_SELECT,{options:S,delay:1e3})}else I(N[De(N.length)])}else _N.hasOwnProperty(E)?I(_N[E]):I(this.generateNextBiome(R))}generateNextBiome(E){return E%50?s.generateRandomBiome(E):n.END}};r(rf,"SelectBiomePhase");let MS=rf;const of=class of extends bE{constructor(E){super(),this.FIRST_DIALOGUE_PROMPT_DELAY=300,this.optionSelectSettings=E}start(){super.start(),s.clearPhaseQueue(),s.clearPhaseQueueSplice();const E=s.currentBattle.mysteryEncounter;E.updateSeedOffset(),this.optionSelectSettings||s.mysteryEncounterSaveData.encounteredEvents.push(new t0(E.encounterType,E.encounterTier,s.currentBattle.waveIndex)),s.ui.setMode(Ce.MYSTERY_ENCOUNTER,this.optionSelectSettings)}handleOptionSelect(E,R){var I,N;if(s.currentBattle.mysteryEncounter.selectedOption=E,!this.optionSelectSettings){const S=s.mysteryEncounterSaveData.encounteredEvents[s.mysteryEncounterSaveData.encounteredEvents.length-1];S.type===((I=s.currentBattle.mysteryEncounter)==null?void 0:I.encounterType)&&(S.selectedOption=R)}return E.onOptionPhase?(s.currentBattle.mysteryEncounter.populateDialogueTokensFromRequirements(),E.onPreOptionPhase?s.executeWithSeedOffset(async()=>await E.onPreOptionPhase().then(S=>{(Ne(S)||S)&&this.continueEncounter()}),(N=s.currentBattle.mysteryEncounter)==null?void 0:N.getSeedOffset()):this.continueEncounter(),!0):!1}continueEncounter(){var I,N,S;const E=r(()=>{s.pushPhase(new UG),this.end()},"endDialogueAndContinueEncounter"),R=(S=(N=(I=s.currentBattle)==null?void 0:I.mysteryEncounter)==null?void 0:N.selectedOption)==null?void 0:S.dialogue;if(R!=null&&R.selected&&R.selected.length>0){s.ui.setMode(Ce.MESSAGE);const T=R.selected;let i=0;const o=r(()=>{const C=i===T.length-1?E:o,U=T[i];let _=null;const G=xE(U.text);U.speaker&&(_=xE(U.speaker)),i++,_?s.ui.showDialogue(G??"",_,null,C,0,i===1?this.FIRST_DIALOGUE_PROMPT_DELAY:0):s.ui.showText(G??"",null,C,i===1?this.FIRST_DIALOGUE_PROMPT_DELAY:0,!0)},"showNextDialogue");o()}else E()}end(){s.ui.setMode(Ce.MESSAGE).then(()=>super.end())}};r(of,"MysteryEncounterPhase");let LC=of;const Cf=class Cf extends bE{constructor(){super(),this.onOptionSelect=s.currentBattle.mysteryEncounter.selectedOption.onOptionPhase}start(){var E,R;super.start(),(E=s.currentBattle.mysteryEncounter)!=null&&E.autoHideIntroVisuals?uE().then(()=>{var I;s.executeWithSeedOffset(()=>{this.onOptionSelect().finally(()=>{this.end()})},((I=s.currentBattle.mysteryEncounter)==null?void 0:I.getSeedOffset())*500)}):s.executeWithSeedOffset(()=>{this.onOptionSelect().finally(()=>{this.end()})},((R=s.currentBattle.mysteryEncounter)==null?void 0:R.getSeedOffset())*500)}};r(Cf,"MysteryEncounterOptionSelectedPhase");let UG=Cf;const lf=class lf extends bE{start(){super.start();const E=[Y.FLINCHED,Y.ENDURING];for(s.getField(!0).forEach(S=>{const T=S.summonData.tags;T.filter(i=>E.includes(i.tagType)&&i.lapseTypes.includes(Yt.TURN_END)&&!i.lapse(S,Yt.TURN_END)).forEach(i=>{i.onRemove(S),T.splice(T.indexOf(i),1)})});s.findPhase(S=>S instanceof IC);)s.tryRemovePhase(S=>S instanceof IC);const R=s.getPokemonAllowedInBattle(),I=R.filter(S=>!S.isActive(!0));if(!R.length)return s.unshiftPhase(new $O),this.end();s.getPlayerField().forEach((S,T)=>{!S.isAllowedInBattle()&&I.length>T&&s.unshiftPhase(new xN(ZA.SWITCH,T,!0,!1))}),s.currentBattle.double&&R.length===1&&I.length===0&&s.unshiftPhase(new _I(!0)),this.end()}};r(lf,"MysteryEncounterBattleStartCleanupPhase");let DG=lf;const Uf=class Uf extends bE{constructor(E=!1){super(),this.disableSwitch=E}start(){super.start(),this.doMysteryEncounterBattle()}getBattleMessage(){var I,N;const E=s.getEnemyField(),R=s.currentBattle.mysteryEncounter.encounterMode;return s.currentBattle.battleSpec===tt.FINAL_BOSS?D.t("battle:bossAppeared",{bossName:E[0].name}):R===JE.TRAINER_BATTLE?s.currentBattle.double?D.t("battle:trainerAppearedDouble",{trainerName:(I=s.currentBattle.trainer)==null?void 0:I.getName(b.NONE,!0)}):D.t("battle:trainerAppeared",{trainerName:(N=s.currentBattle.trainer)==null?void 0:N.getName(b.NONE,!0)}):E.length===1?D.t("battle:singleWildAppeared",{pokemonName:E[0].name}):D.t("battle:multiWildAppeared",{pokemonName1:E[0].name,pokemonName2:E[1].name})}doMysteryEncounterBattle(){var R,I,N,S;const E=s.currentBattle.mysteryEncounter.encounterMode;if(E===JE.WILD_BATTLE||E===JE.BOSS_BATTLE){E===JE.BOSS_BATTLE&&s.playBgm();const T=s.getEnemyParty().filter(i=>!i.isFainted()).length;s.unshiftPhase(new Ft(0,!1)),s.currentBattle.double&&T>1&&s.unshiftPhase(new Ft(1,!1)),(R=s.currentBattle.mysteryEncounter)!=null&&R.hideBattleIntroMessage?this.endBattleSetup():s.ui.showText(this.getBattleMessage(),null,()=>this.endBattleSetup(),0)}else if(E===JE.TRAINER_BATTLE){this.showEnemyTrainer();const T=r(()=>{var C;s.currentBattle.started=!0,s.playBgm(),s.pbTray.showPbTray(s.getPlayerParty()),s.pbTrayEnemy.showPbTray(s.getEnemyParty());const o=r(()=>{this.hideEnemyTrainer();const U=s.getEnemyParty().filter(_=>!_.isFainted()).length;s.unshiftPhase(new Ft(0,!1)),s.currentBattle.double&&U>1&&s.unshiftPhase(new Ft(1,!1)),this.endBattleSetup()},"doTrainerSummon");(C=s.currentBattle.mysteryEncounter)!=null&&C.hideBattleIntroMessage?o():s.ui.showText(this.getBattleMessage(),null,o,1e3,!0)},"doSummon"),i=(I=s.currentBattle.trainer)==null?void 0:I.getEncounterMessages();if(!i||!i.length)T();else{const o=s.currentBattle.trainer;let C;s.executeWithSeedOffset(()=>C=SE(i),(N=s.currentBattle.mysteryEncounter)==null?void 0:N.getSeedOffset()),C=C;const U=r(()=>{s.ui.showDialogue(C,o==null?void 0:o.getName(b.NONE,!0),null,()=>{s.charSprite.hide().then(()=>s.hideFieldOverlay(250).then(()=>T()))})},"showDialogueAndSummon");(S=s.currentBattle.trainer)!=null&&S.config.hasCharSprite&&!s.ui.shouldSkipDialogue(C)?s.showFieldOverlay(500).then(()=>s.charSprite.showCharacter(o==null?void 0:o.getKey(),_M(i[0])).then(()=>U())):U()}}}endBattleSetup(){const E=s.getEnemyField(),R=s.currentBattle.mysteryEncounter.encounterMode;R!==JE.TRAINER_BATTLE&&s.findModifier(S=>S instanceof os)&&E.map(S=>s.pushPhase(new Za(S.getBattlerIndex())));const I=s.getPlayerParty().filter(N=>N.isAllowedInBattle());if(I[0].isOnField()||s.pushPhase(new Ft(0)),s.currentBattle.double?I.length>1&&(s.pushPhase(new _I(!0)),I[1].isOnField()||s.pushPhase(new Ft(1))):(I.length>1&&I[1].isOnField()&&(s.getPlayerField().forEach(N=>N.lapseTag(Y.COMMANDED)),s.pushPhase(new ba(1))),s.pushPhase(new _I(!1))),R!==JE.TRAINER_BATTLE&&!this.disableSwitch){const N=s.currentBattle.double?2:1;I.length>N&&(s.pushPhase(new GI(0,s.currentBattle.double)),s.currentBattle.double&&s.pushPhase(new GI(1,s.currentBattle.double)))}this.end()}showEnemyTrainer(){const E=s.currentBattle.trainer;E&&(E.alpha=0,E.x+=16,E.y-=16,E.setVisible(!0),s.tweens.add({targets:E,x:"-=16",y:"+=16",alpha:1,ease:"Sine.easeInOut",duration:750,onComplete:r(()=>{E.untint(100,"Sine.easeOut"),E.playAnim()},"onComplete")}))}hideEnemyTrainer(){s.tweens.add({targets:s.currentBattle.trainer,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750})}};r(Uf,"MysteryEncounterBattlePhase");let MG=Uf;const Df=class Df extends bE{constructor(E=!1){super(),this.addHealPhase=E}start(){super.start();const E=s.currentBattle.mysteryEncounter;E.doContinueEncounter?E.doContinueEncounter().then(()=>{this.end()}):s.executeWithSeedOffset(()=>{E.onRewards?E.onRewards().then(()=>{this.doEncounterRewardsAndContinue()}):this.doEncounterRewardsAndContinue()},s.currentBattle.waveIndex*1e3)}doEncounterRewardsAndContinue(){const E=s.currentBattle.mysteryEncounter;E.doEncounterExp&&E.doEncounterExp(),E.doEncounterRewards?E.doEncounterRewards():this.addHealPhase&&(s.tryRemovePhase(R=>R instanceof JO),s.unshiftPhase(new JO(0,void 0,{fillRemaining:!1,rerollMultiplier:-1}))),s.pushPhase(new PG),this.end()}};r(Df,"MysteryEncounterRewardsPhase");let ka=Df;const Mf=class Mf extends bE{constructor(){var E,R;super(),this.FIRST_DIALOGUE_PROMPT_DELAY=750,this.onPostOptionSelect=(R=(E=s.currentBattle.mysteryEncounter)==null?void 0:E.selectedOption)==null?void 0:R.onPostOptionPhase}start(){var E;super.start(),this.onPostOptionSelect?s.executeWithSeedOffset(async()=>await this.onPostOptionSelect().then(R=>{(Ne(R)||R)&&this.continueEncounter()}),((E=s.currentBattle.mysteryEncounter)==null?void 0:E.getSeedOffset())*2e3):this.continueEncounter()}continueEncounter(){var I,N,S;const E=r(()=>{(s.gameMode.hasRandomBiomes||s.isNewBiome())&&s.pushPhase(new MS),s.pushPhase(new US),this.end()},"endPhase"),R=(S=(N=(I=s.currentBattle)==null?void 0:I.mysteryEncounter)==null?void 0:N.dialogue)==null?void 0:S.outro;if(R&&R.length>0){let T=0;const i=r(()=>{const o=T===R.length-1?E:i,C=R[T];let U=null;const _=xE(C.text);C.speaker&&(U=xE(C.speaker)),T++,s.ui.setMode(Ce.MESSAGE),U?s.ui.showDialogue(_??"",U,null,o,0,T===1?this.FIRST_DIALOGUE_PROMPT_DELAY:0):s.ui.showText(_??"",null,o,T===1?this.FIRST_DIALOGUE_PROMPT_DELAY:0,!0)},"showNextDialogue");i()}else E()}};r(Mf,"PostMysteryEncounterPhase");let PG=Mf;const Pf=class Pf extends kt{constructor(E,R,I=null,N=!1){super(E),this.anim=I,this.targetIndex=R,this.playOnEmptyField=N}setAnimation(E){this.anim=E}start(){const E=this.targetIndex!==void 0?(this.player?s.getEnemyField():s.getPlayerField())[this.targetIndex]:this.getPokemon();new Rs(this.anim,this.getPokemon(),E).play(!1,()=>{this.end()})}};r(Pf,"CommonAnimPhase");let Wt=Pf;const Gf=class Gf extends kt{constructor(E,R,I=!1){super(E),this.targets=R,this.wasFollowUp=I}start(){super.start();const E=this.getPokemon();!this.wasFollowUp&&(E!=null&&E.isActive(!0))&&E.lapseTags(Yt.AFTER_MOVE),s.arena.setIgnoreAbilities(!1);for(const R of this.targets)R&&r6(Ir,R);this.end()}};r(Gf,"MoveEndPhase");let qR=Gf;const _f=class _f extends kt{constructor(E,R,I){super(E),this.move=I,this.targetIndex=R}start(){super.start();const E=this.getUserPokemon(),R=this.getTargetPokemon(),I=this.move.getMove();if(!R||!I.isChargingMove())return console.warn("Invalid parameters for MoveChargePhase"),super.end();new _r(I.chargeAnim,I.id,E).play(!1,()=>{I.showChargeText(E,R),sv(tA,E,R,I),E.addTag(Y.CHARGING,1,I.id,E.id),this.end()})}end(){const E=this.getUserPokemon(),R=this.move.getMove();if(R.isChargingMove()){const I=new SA(!1);sv(_U,E,null,R,I),I.value?(s.tryRemovePhase(N=>N instanceof qR&&N.getPokemon()===E),s.unshiftPhase(new lE(E,[this.targetIndex],this.move,!1))):E.getMoveQueue().push({move:R.id,targets:[this.targetIndex]}),E.pushMoveHistory({move:this.move.moveId,targets:[this.targetIndex],result:EE.OTHER})}super.end()}getUserPokemon(){return(this.player?s.getPlayerField():s.getEnemyField())[this.fieldIndex]}getTargetPokemon(){return s.getField(!0).find(E=>this.targetIndex===E.getBattlerIndex())}};r(_f,"MoveChargePhase");let GG=_f;const uf=class uf extends Nt{constructor(E,R,I,N=!1,S=!1,T=!1,i=!1){super(),this.failed=!1,this.cancelled=!1,this.reflected=!1,this.pokemon=E,this.targets=R,this.move=I,this.followUp=N,this.ignorePp=S,this.reflected=T,this.forcedLast=i}get pokemon(){return this._pokemon}set pokemon(E){this._pokemon=E}get move(){return this._move}set move(E){this._move=E}get targets(){return this._targets}set targets(E){this._targets=E}canMove(E=!1){return this.pokemon.isActive(!0)&&this.move.isUsable(this.pokemon,this.ignorePp,E)&&!!this.targets.length}fail(){this.failed=!0}cancel(){this.cancelled=!0}isForcedLast(){return this.forcedLast}start(){if(super.start(),console.log(A[this.move.moveId]),!this.canMove(!0))return this.pokemon.isActive(!0)&&(this.fail(),this.showMoveText(),this.showFailedText()),this.end();this.pokemon.turnData.acted=!0,this.followUp&&(this.pokemon.turnData.hitsLeft=-1,this.pokemon.turnData.hitCount=0),(!this.followUp||this.reflected)&&this.move.getMove().doesFlagEffectApply({flag:je.IGNORE_ABILITIES,user:this.pokemon,isFollowUp:this.followUp})&&s.arena.setIgnoreAbilities(!0,this.pokemon.getBattlerIndex()),this.resolveRedirectTarget(),this.resolveCounterAttackTarget(),this.resolvePreMoveStatusEffects(),this.lapsePreMoveAndMoveTags(),this.failed||this.cancelled||this.resolveFinalPreMoveCancellationChecks(),this.cancelled||this.failed?this.handlePreMoveFailures():this.move.getMove().isChargingMove()&&!this.pokemon.getTag(Y.CHARGING)?this.chargeMove():this.useMove(),this.end()}resolveFinalPreMoveCancellationChecks(){const E=this.getActiveTargetPokemon(),R=this.pokemon.getMoveQueue();(E.length===0&&!this.move.getMove().hasAttr(BL)||R.length&&R[0].move===A.NONE)&&(this.showMoveText(),this.showFailedText(),this.cancel())}getActiveTargetPokemon(){return s.getField(!0).filter(E=>this.targets.includes(E.getBattlerIndex()))}resolvePreMoveStatusEffects(){if(!this.followUp&&this.pokemon.status&&!this.pokemon.status.isPostTurn()){this.pokemon.status.incrementTurn();let E=!1,R=!1;switch(this.pokemon.status.effect){case J.PARALYSIS:E=(!this.pokemon.randBattleSeedInt(4)||Ze.STATUS_ACTIVATION_OVERRIDE===!0)&&Ze.STATUS_ACTIVATION_OVERRIDE!==!1;break;case J.SLEEP:{LE(cr,this.pokemon,null,this.move.getMove());const I=new me(this.pokemon.status.sleepTurnsRemaining??0);sA(ul,this.pokemon,null,!1,this.pokemon.status.effect,I),this.pokemon.status.sleepTurnsRemaining=I.value,R=this.pokemon.status.sleepTurnsRemaining<=0,E=!R&&!this.pokemon.getTag(Y.BYPASS_SLEEP);break}case J.FREEZE:R=!!this.move.getMove().findAttr(I=>I instanceof fE&&I.selfTarget&&I.isOfEffect(J.FREEZE))||!this.pokemon.randBattleSeedInt(5)&&Ze.STATUS_ACTIVATION_OVERRIDE!==!0||Ze.STATUS_ACTIVATION_OVERRIDE===!1,E=!R;break}E?(this.cancel(),s.queueMessage(Pv(this.pokemon.status.effect,Z(this.pokemon))),s.unshiftPhase(new Wt(this.pokemon.getBattlerIndex(),void 0,XA.POISON+(this.pokemon.status.effect-1)))):R&&(s.queueMessage(qI(this.pokemon.status.effect,Z(this.pokemon))),this.pokemon.resetStatus(),this.pokemon.updateInfo())}}lapsePreMoveAndMoveTags(){this.pokemon.lapseTags(Yt.PRE_MOVE),!this.followUp&&this.canMove()&&!this.cancelled&&this.pokemon.lapseTags(Yt.MOVE)}useMove(){var o,C,U;const E=this.getActiveTargetPokemon(),R=this.pokemon.getMoveQueue();if(s.triggerPokemonFormChange(this.pokemon,ha),this.move.getMove().hasAttr(HI)){const _=s.arena.findTags(f=>f.tagType===oe.FUTURE_SIGHT),G=s.arena.findTags(f=>f.tagType===oe.DOOM_DESIRE);let H=!1;const c=E[0].getBattlerIndex();for(const f of _)if(f.targetIndex===c){H=!0;break}for(const f of G)if(f.targetIndex===c){H=!0;break}if(H)return this.showMoveText(),this.showFailedText(),this.end()}let N=!0;for(const _ of this.move.getMove().getAttrs(IU))if(_.apply(this.pokemon,E[0],this.move.getMove())){N=!1;break}if(N&&this.showMoveText(),R.length>0&&(this.ignorePp=((o=R.shift())==null?void 0:o.ignorePP)??!1),((C=this.pokemon.getTag(Y.CHARGING))==null?void 0:C.sourceMove)===this.move.moveId&&this.pokemon.lapseTag(Y.CHARGING),!this.ignorePp){const _=1+this.getPpIncreaseFromPressure(E);this.move.usePp(_),s.eventTarget.dispatchEvent(new Ga((U=this.pokemon)==null?void 0:U.id,this.move.getMove(),this.move.ppUsed))}const S=this.move.getMove();let T=!1,i=!1;if(N){const _=S.applyConditions(this.pokemon,E[0],S);i=s.arena.isMoveWeatherCancelled(this.pokemon,S),T=s.arena.isMoveTerrainCancelled(this.pokemon,this.targets,S),N=_&&!i&&!T}if(Ke[this.move.moveId].hasAttr(vS)||N&&(s.currentBattle.lastMove=this.move.moveId),N){const _=this.move.getMove();ZO(dN,this.pokemon,null,_),s.unshiftPhase(new jO(this.pokemon.getBattlerIndex(),this.targets,_,this.reflected,this.move.virtual))}else{[A.ROAR,A.WHIRLWIND,A.TRICK_OR_TREAT,A.FORESTS_CURSE].includes(this.move.moveId)&&ZO(dN,this.pokemon,null,this.move.getMove()),this.pokemon.pushMoveHistory({move:this.move.moveId,targets:this.targets,result:EE.FAIL,virtual:this.move.virtual});const _=S.getFailedText(this.pokemon,E[0],S);let G;_?G=_:T?G=Yx(E[0],s.arena.getTerrainType()):i&&(G=dx(s.arena.getWeatherType())),this.showFailedText(G),this.pokemon.lapseTags(Yt.MOVE_EFFECT)}this.move.getMove().hasFlag(je.DANCE_MOVE)&&!this.followUp&&s.getField(!0).forEach(_=>{Z9(ol,_,this.move,this.pokemon,this.targets)})}chargeMove(){const E=this.move.getMove(),R=this.getActiveTargetPokemon();if(E.applyConditions(this.pokemon,R[0],E))ZO(dN,this.pokemon,null,this.move.getMove()),this.showMoveText(),s.unshiftPhase(new GG(this.pokemon.getBattlerIndex(),this.targets[0],this.move));else{this.pokemon.pushMoveHistory({move:this.move.moveId,targets:this.targets,result:EE.FAIL,virtual:this.move.virtual});const I=E.getFailedText(this.pokemon,R[0],E);this.showMoveText(),this.showFailedText(I??void 0),this.pokemon.lapseTags(Yt.MOVE_EFFECT)}}end(){s.unshiftPhase(new qR(this.pokemon.getBattlerIndex(),this.getActiveTargetPokemon(),this.followUp)),super.end()}getPpIncreaseFromPressure(E){return this.pokemon.getOpponents().filter(I=>E.includes(I)&&I.isActive(!0)&&I.hasAbilityWithAttr(cl)).length}resolveRedirectTarget(){if(this.targets.length===1){const E=this.targets[0],R=new me(E);s.getField(!0).filter(N=>N!==this.pokemon).forEach(N=>sA(Gl,N,null,!1,this.move.moveId,R,this.pokemon));let I=E!==R.value;this.pokemon.getOpponents().forEach(N=>{const S=N.getTag(vl);S&&(!S.powder||!this.pokemon.isOfType(L.GRASS)&&!this.pokemon.hasAbility(O.OVERCOAT))&&(R.value=N.getBattlerIndex(),I=!1)}),E!==R.value&&(this.move.getMove().getAttrs(GN).forEach(S=>{(!S.abilitiesOnly||I)&&(R.value=E)}),this.pokemon.hasAbilityWithAttr(KN)&&(R.value=E,s.queueAbilityDisplay(this.pokemon,this.pokemon.getPassiveAbility().hasAttr(KN),!0),s.queueAbilityDisplay(this.pokemon,this.pokemon.getPassiveAbility().hasAttr(KN),!1)),this.targets[0]=R.value)}}resolveCounterAttackTarget(){var E;if(this.targets.length===1&&this.targets[0]===FA.ATTACKER){if(this.pokemon.turnData.attacksReceived.length&&(this.targets[0]=this.pokemon.turnData.attacksReceived[0].sourceBattlerIndex,s.currentBattle.double&&this.move.getMove().hasFlag(je.REDIRECT_COUNTER)&&s.getField()[this.targets[0]].hp===0)){const R=this.pokemon.isPlayer()?s.getEnemyField():s.getPlayerField();this.targets[0]=((E=R.find(I=>I.hp>0))==null?void 0:E.getBattlerIndex())??FA.ATTACKER}this.targets[0]===FA.ATTACKER&&(this.fail(),this.showMoveText(),this.showFailedText())}}handlePreMoveFailures(){var E,R;if(this.cancelled||this.failed){if(this.failed){const I=this.ignorePp?0:1;I&&this.move.usePp(),s.eventTarget.dispatchEvent(new Ga((E=this.pokemon)==null?void 0:E.id,this.move.getMove(),I))}this.cancelled&&((R=this.pokemon.summonData.tags)!=null&&R.find(I=>I.tagType===Y.FRENZY))&&hI(this.pokemon,this.move.getMove()),this.pokemon.pushMoveHistory({move:A.NONE,result:EE.FAIL,targets:this.targets}),this.pokemon.lapseTags(Yt.MOVE_EFFECT),this.pokemon.lapseTags(Yt.AFTER_MOVE),this.pokemon.getMoveQueue().shift()}}showMoveText(){this.move.moveId!==A.NONE&&(this.pokemon.getTag(Y.RECHARGING)||this.pokemon.getTag(Y.INTERRUPTED)||(s.queueMessage(D.t(this.reflected?"battle:magicCoatActivated":"battle:useMove",{pokemonNameWithAffix:Z(this.pokemon),moveName:this.move.getName()}),500),LE(MN,this.pokemon,this.pokemon.getOpponents(!1)[0],this.move.getMove())))}showFailedText(E=D.t("battle:attackFailed")){s.queueMessage(E)}};r(uf,"MovePhase");let lE=uf;var kv=(t=>(t.EGG_COUNT_CHANGED="onEggCountChanged",t))(kv||{});const Hf=class Hf extends Event{constructor(E){super("onEggCountChanged"),this.eggCount=E}};r(Hf,"EggCountChangedEvent");let _G=Hf;const cf=class cf extends Phaser.GameObjects.Container{constructor(E){super(s,0,0),this.WINDOW_DEFAULT_WIDTH=37,this.WINDOW_MEDIUM_WIDTH=42,this.WINDOW_HEIGHT=26,this.onEggCountChangedEvent=I=>this.onEggCountChanged(I),this.eggCount=E,s.ui.getHandler().eventTarget.addEventListener(kv.EGG_COUNT_CHANGED,this.onEggCountChangedEvent),this.setup()}setup(){const E=this.eggCount>9?this.WINDOW_MEDIUM_WIDTH:this.WINDOW_DEFAULT_WIDTH;this.eggCountWindow=bt(5,5,E,this.WINDOW_HEIGHT),this.setVisible(this.eggCount>1),this.add(this.eggCountWindow);const R=s.add.sprite(19,18,"egg","egg_0");R.setScale(.32),this.eggCountText=We(28,13,`${this.eggCount}`,Se.MESSAGE,{fontSize:"66px"}),this.eggCountText.setName("text-egg-count"),this.add(R),this.add(this.eggCountText)}setWindowToDefaultSize(){this.eggCountWindow.setSize(this.WINDOW_DEFAULT_WIDTH,this.WINDOW_HEIGHT)}onEggCountChanged(E){var N;const R=E;if(!R||!((N=this.eggCountText)!=null&&N.data))return;const I=R.eggCount;I<10&&this.setWindowToDefaultSize(),I>0?this.eggCountText.setText(I.toString()):this.eggCountText.setVisible(!1)}};r(cf,"EggCounterContainer");let uG=cf;const zb="↑",jb="↓",Bf=class Bf extends gL{constructor(E){super(E),this.scrollCursor=0,this.fullCursor=0,this.scale=.1666666667,this.unskippedIndices=[],this.defaultTextStyle=Se.WINDOW}getWindowHeight(){var E,R;return(Math.min((((E=this.config)==null?void 0:E.options)||[]).length,((R=this.config)==null?void 0:R.maxOptions)||99)+1)*96*this.scale}setup(){const E=this.getUi();this.optionSelectContainer=s.add.container(s.game.canvas.width/6-1,-48),this.optionSelectContainer.setName(`option-select-${this.mode?Ce[this.mode]:"UNKNOWN"}`),this.optionSelectContainer.setVisible(!1),E.add(this.optionSelectContainer),this.optionSelectBg=bt(0,0,this.getWindowWidth(),this.getWindowHeight()),this.optionSelectBg.setName("option-select-bg"),this.optionSelectBg.setOrigin(1,1),this.optionSelectContainer.add(this.optionSelectBg),this.optionSelectTextContainer=s.add.container(0,0),this.optionSelectContainer.add(this.optionSelectTextContainer),this.optionSelectIcons=[],this.scale=OT(Se.WINDOW,s.uiTheme).scale,this.setCursor(0)}setupOptions(){var S,T,i,o,C,U,_;const E=((S=this.config)==null?void 0:S.options)??[],R=E;if(this.unskippedIndices=this.getUnskippedIndices(E),this.optionSelectText)if(this.optionSelectText instanceof rv)try{this.optionSelectText.destroy()}catch(G){console.error("Error while destroying optionSelectText:",G)}else console.warn("optionSelectText is not an instance of BBCodeText.");(T=this.optionSelectIcons)!=null&&T.length&&(this.optionSelectIcons.map(G=>G.destroy()),this.optionSelectIcons.splice(0,this.optionSelectIcons.length));const I=(i=this.config)!=null&&i.options&&((o=this.config)==null?void 0:o.options.length)>((C=this.config)==null?void 0:C.maxOptions)?this.getOptionsWithScroll():R,N=s.ui.getMode()===Ce.AUTO_COMPLETE?I:R;this.optionSelectText=MO(0,0,N.map(G=>G.item?`[shadow=${pA(G.style??this.defaultTextStyle,!0,s.uiTheme)}][color=${pA(G.style??Se.WINDOW,!1,s.uiTheme)}]    ${G.label}[/color][/shadow]`:`[shadow=${pA(G.style??this.defaultTextStyle,!0,s.uiTheme)}][color=${pA(G.style??Se.WINDOW,!1,s.uiTheme)}]${G.label}[/color][/shadow]`).join(`
`),Se.WINDOW,{maxLines:R.length,lineSpacing:12}),this.optionSelectText.setOrigin(0,0),this.optionSelectText.setName("text-option-select"),this.optionSelectTextContainer.add(this.optionSelectText),this.optionSelectContainer.setPosition(s.game.canvas.width/6-1-(((U=this.config)==null?void 0:U.xOffset)||0),-48+(((_=this.config)==null?void 0:_.yOffset)||0)),this.optionSelectBg.width=Math.max(this.optionSelectText.displayWidth+24,this.getWindowWidth()),this.optionSelectBg.height=this.getWindowHeight(),this.optionSelectTextContainer.setPosition(this.optionSelectBg.x-this.optionSelectBg.width+12+24*this.scale,this.optionSelectBg.y-this.optionSelectBg.height+2+42*this.scale),this.textContent=I.map(G=>G.item?`[shadow=${pA(G.style??this.defaultTextStyle,!0,s.uiTheme)}][color=${pA(G.style??Se.WINDOW,!1,s.uiTheme)}]    ${G.label}[/color][/shadow]`:`[shadow=${pA(G.style??this.defaultTextStyle,!0,s.uiTheme)}][color=${pA(G.style??Se.WINDOW,!1,s.uiTheme)}]${G.label}[/color][/shadow]`).join(`
`),this.optionSelectText.setText(this.textContent),R.forEach((G,H)=>{if(G.item){const c=s.add.sprite(0,0,"items",G.item);if(c.setScale(3*this.scale),this.optionSelectIcons.push(c),this.optionSelectTextContainer.add(c),c.setPositionRelative(this.optionSelectText,36*this.scale,7+H*(114*this.scale-3)),G.item==="candy"){const f=s.add.sprite(0,0,"items","candy_overlay");f.setScale(3*this.scale),this.optionSelectIcons.push(f),this.optionSelectTextContainer.add(f),f.setPositionRelative(this.optionSelectText,36*this.scale,7+H*(114*this.scale-3)),G.itemArgs&&(c.setTint(fL(DL(G.itemArgs[0]))),f.setTint(fL(DL(G.itemArgs[1]))))}}})}show(E){var R,I,N,S,T;return!E.length||!E[0].hasOwnProperty("options")||!E[0].options.length?!1:(super.show(E),this.config=E[0],this.setupOptions(),s.ui.bringToTop(this.optionSelectContainer),this.optionSelectContainer.setVisible(!0),this.scrollCursor=0,this.fullCursor=0,this.setCursor(0),this.config.delay&&(this.blockInput=!0,this.optionSelectTextContainer.setAlpha(.5),(R=this.cursorObj)==null||R.setAlpha(.8),s.time.delayedCall(KA(this.config.delay),()=>this.unblockInput())),(I=this.config)!=null&&I.supportHover&&((T=(S=(N=this.config)==null?void 0:N.options[this.unskippedIndices[this.fullCursor]])==null?void 0:S.onHover)==null||T.call(S)),!0)}processInput(E){var S,T,i,o,C,U,_,G;const R=this.getUi();let I=!1,N=!0;if(E===he.ACTION||E===he.CANCEL){if(this.blockInput)return R.playError(),!1;if(I=!0,E===he.CANCEL)if((S=this.config)!=null&&S.maxOptions&&this.config.options.length>this.config.maxOptions)this.setCursor(this.unskippedIndices.length-1);else if(!((T=this.config)!=null&&T.noCancel))this.setCursor(this.unskippedIndices.length-1);else return!1;const H=(i=this.config)==null?void 0:i.options[this.unskippedIndices[this.fullCursor]];H!=null&&H.handler()?(H.keepOpen||this.clear(),N=!H.overrideSound):R.playError()}else if(E===he.SUBMIT&&R.getMode()===Ce.AUTO_COMPLETE){I=!0;const H=(o=this.config)==null?void 0:o.options[this.unskippedIndices[this.fullCursor]];H!=null&&H.handler()?(H.keepOpen||this.clear(),N=!H.overrideSound):R.playError()}else{switch(E){case he.UP:this.fullCursor===0?I=this.setCursor(this.unskippedIndices.length-1):this.fullCursor&&(I=this.setCursor(this.fullCursor-1));break;case he.DOWN:this.fullCursor<this.unskippedIndices.length-1?I=this.setCursor(this.fullCursor+1):I=this.setCursor(0);break}(C=this.config)!=null&&C.supportHover&&((G=(_=(U=this.config)==null?void 0:U.options[this.unskippedIndices[this.fullCursor]])==null?void 0:_.onHover)==null||G.call(_))}return I&&N&&R.playSelect(),I}unblockInput(){var E;this.blockInput&&(this.blockInput=!1,this.optionSelectTextContainer.setAlpha(1),(E=this.cursorObj)==null||E.setAlpha(1))}getOptionsWithScroll(){var S;if(!this.config)return[];const E=this.config.options.slice(0);if(!this.config.maxOptions||this.config.options.length<this.config.maxOptions)return E;const R=E.length,I=this.scrollCursor,N=Math.min(R,I+(!I||this.scrollCursor+(this.config.maxOptions-1)>=R?this.config.maxOptions-1:this.config.maxOptions-2));return(S=this.config)!=null&&S.maxOptions&&E.length>this.config.maxOptions&&(E.splice(N,R),E.splice(0,I),I&&E.unshift({label:zb,handler:r(()=>!0,"handler"),style:this.defaultTextStyle}),N<R&&E.push({label:jb,handler:r(()=>!0,"handler"),style:this.defaultTextStyle})),E}getUnskippedIndices(E){return E.map((I,N)=>I.skip?null:N).filter(I=>I!==null)}setCursor(E){var I;const R=this.fullCursor!==E;if(R&&((I=this.config)!=null&&I.maxOptions)&&this.config.options.length>this.config.maxOptions)if(E===this.unskippedIndices.length-1)this.fullCursor=E,this.cursor=this.config.maxOptions-(this.config.options.length-this.unskippedIndices[E]),this.scrollCursor=this.config.options.length-this.config.maxOptions+1;else if(E===0)this.fullCursor=E,this.cursor=this.unskippedIndices[E],this.scrollCursor=0;else if(E&&E>this.fullCursor){const S=this.unskippedIndices[E]-this.unskippedIndices[this.fullCursor],T=this.unskippedIndices[E+1]-this.unskippedIndices[E]-1;this.cursor+S+T>=this.config.maxOptions-1?(this.fullCursor=E,this.cursor=this.config.maxOptions-2-T,this.scrollCursor=this.unskippedIndices[this.fullCursor]-this.cursor+1):(this.fullCursor=E,this.cursor=this.unskippedIndices[E]-this.scrollCursor+(this.scrollCursor?1:0))}else{const S=this.unskippedIndices[E]-this.unskippedIndices[E-1];this.cursor-S<1?(this.fullCursor=E,this.cursor=1,this.scrollCursor=this.unskippedIndices[this.fullCursor]-this.cursor+1):(this.fullCursor=E,this.cursor=this.unskippedIndices[E]-this.scrollCursor+(this.scrollCursor?1:0))}else this.fullCursor=E,this.cursor=this.unskippedIndices[E];return this.setupOptions(),this.cursorObj||(this.cursorObj=s.add.image(0,0,"cursor"),this.optionSelectContainer.add(this.cursorObj)),this.cursorObj.setScale(this.scale*6),this.cursorObj.setPositionRelative(this.optionSelectBg,12,102*this.scale+this.cursor*(114*this.scale-3)),R}clear(){super.clear(),this.config=null,this.optionSelectContainer.setVisible(!1),this.fullCursor=0,this.scrollCursor=0,this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};r(Bf,"AbstractOptionSelectUiHandler");let HG=Bf;const rn=class rn extends HG{constructor(){super(Ce.CONFIRM)}getWindowWidth(){return rn.windowWidth}show(E){if(E.length===5&&E[0]instanceof Function&&E[1]instanceof Function&&E[2]instanceof Function&&E[3]instanceof Function&&E[4]==="fullParty"){const R={options:[{label:D.t("partyUiHandler:SUMMARY"),handler:r(()=>(E[0](),!0),"handler")},{label:D.t("partyUiHandler:POKEDEX"),handler:r(()=>(E[1](),!0),"handler")},{label:D.t("menu:yes"),handler:r(()=>(E[2](),!0),"handler")},{label:D.t("menu:no"),handler:r(()=>(E[3](),!0),"handler")}],delay:E.length>=9&&E[8]!==null?E[8]:0};super.show([R]),this.switchCheck=E.length>=6&&E[5]!==null&&E[5];const I=E.length>=7&&E[6]!==null?E[6]:0,N=E.length>=8&&E[7]!==null?E[7]:0;return this.optionSelectContainer.setPosition(s.game.canvas.width/6-1+I,-48+N),this.setCursor(this.switchCheck?this.switchCheckCursor:0),!0}if(E.length>=2&&E[0]instanceof Function&&E[1]instanceof Function){const R={options:[{label:D.t("menu:yes"),handler:r(()=>(E[0](),!0),"handler")},{label:D.t("menu:no"),handler:r(()=>(E[1](),!0),"handler")}],delay:E.length>=6&&E[5]!==null?E[5]:0,noCancel:E.length>=7&&E[6]!==null?E[6]:!1};super.show([R]),this.switchCheck=E.length>=3&&E[2]!==null&&E[2];const I=E.length>=4&&E[3]!==null?E[3]:0,N=E.length>=5&&E[4]!==null?E[4]:0;return this.optionSelectContainer.setPosition(s.game.canvas.width/6-1+I,-48+N),this.setCursor(this.switchCheck?this.switchCheckCursor:0),!0}return!1}processInput(E){var R;return E===he.CANCEL&&this.blockInput&&!((R=this.config)!=null&&R.noCancel)&&this.unblockInput(),super.processInput(E)}setCursor(E){const R=super.setCursor(E);return R&&this.switchCheck&&(this.switchCheckCursor=this.cursor),R}};r(rn,"ConfirmUiHandler"),rn.windowWidth=48;let cG=rn;const RI=24,_s=[[0,-1],[.825,-.5],[.825,.5],[-.825,-.5],[-.825,.5],[0,1]],eZ=-3,n2=1,a2=[0,n2,-1,n2,-1,eZ],AZ=[0,5,0,5,0,0],us=[0,1,2,5,4,3],Di=new Array(12).fill(null).map(()=>0),hf=class hf extends Phaser.GameObjects.Container{constructor(E,R,I){super(s,E,R),this.showDiff=!!I,this.setup()}setup(){this.setName("stats");const E=new Array(6).fill(null).flatMap((S,T)=>[RI*_s[us[T]][0],RI*_s[us[T]][1]]),R=s.add.polygon(48,44,E,14213360,.625);R.setOrigin(0,0);const I=s.add.polygon(R.x,R.y,E).setStrokeStyle(1,4735056);I.setOrigin(0,0);const N=[[0,-1,0,1],[-.825,-.5,.825,.5],[.825,-.5,-.825,.5]].map(S=>{const T=new Phaser.GameObjects.Line(s,R.x,R.y,RI*S[0],RI*S[1],RI*S[2],RI*S[3],16777215).setLineWidth(.5);return T.setOrigin(0,0),T});this.ivChart=s.add.polygon(R.x,R.y,Di,10016928,.75),this.ivChart.setOrigin(0,0),this.add(R),N.map(S=>this.add(S)),this.add(this.ivChart),this.add(I),this.ivStatValueTexts=[];for(const S of uN){const T=We(R.x+RI*_s[S][0]*1.325+(this.showDiff?0:a2[S]),R.y+RI*_s[S][1]*1.325-4+(this.showDiff?0:AZ[S]),D.t(et(S)),Se.TOOLTIP_CONTENT);T.setOrigin(.5),this.ivStatValueTexts[S]=MO(T.x-(this.showDiff?0:a2[S]),T.y+8,"0",Se.TOOLTIP_CONTENT),this.ivStatValueTexts[S].setOrigin(.5),this.add(T),this.add(this.ivStatValueTexts[S])}}updateIvs(E,R){if(E){const I=new Array(6).fill(null).flatMap((C,U)=>[E[us[U]]/31*RI*_s[us[U]][0],E[us[U]]/31*RI*_s[us[U]][1]]),N=this.statsIvsCache||Di,S=pA(Se.SUMMARY_GOLD,!1,s.uiTheme);this.statsIvsCache=I.slice(0),this.ivStatValueTexts.map((C,U)=>{let _="";E[U]===31?_+=`[color=${S}][shadow]${E[U].toString()}[/shadow][/color]`:_=E[U].toString(),this.showDiff&&R&&(R[U]<E[U]?_+=` ([color=${pA(Se.SUMMARY_BLUE,!1,s.uiTheme)}][shadow=${pA(Se.SUMMARY_BLUE,!0,s.uiTheme)}]+${E[U]-R[U]}[/shadow][/color])`:_+=" (-)"),C.setText(`[shadow]${_}[/shadow]`)});const T=E.every(C=>C===31)?Number.parseInt(S.substr(1),16):10016928,i=this.ivChart.fillColor,o=i!==T?[Phaser.Display.Color.IntegerToColor(i),Phaser.Display.Color.IntegerToColor(T)]:null;s.tweens.addCounter({from:0,to:1,duration:1e3,ease:"Cubic.easeOut",onUpdate:r(C=>{const U=C.getValue(),_=I.map((G,H)=>G*U+N[H]*(1-U));o&&this.ivChart.setFillStyle(Phaser.Display.Color.ValueToColor(Phaser.Display.Color.Interpolate.ColorWithColor(o[0],o[1],1,U)).color,.75),this.ivChart.setTo(_)},"onUpdate")})}else this.statsIvsCache=Di,this.ivChart.setTo(Di)}};r(hf,"StatsContainer");let BG=hf;const Mi={pt:{infoContainerTextSize:"60px",infoContainerLabelXPos:-15,infoContainerTextXPos:-12}},ff=class ff extends Phaser.GameObjects.Container{constructor(E=372,R=66){super(s,E,R),this.infoWindowWidth=104,this.numCharsBeforeCutoff=16,this.initialX=E}setup(){this.setName("pkmn-info");const E=D.resolvedLanguage,R=Object.keys(Mi).find(C=>E==null?void 0:E.includes(C)),I=Mi[R];this.infoBg=bt(0,0,this.infoWindowWidth,132),this.infoBg.setOrigin(.5,.5),this.infoBg.setName("window-info-bg"),this.pokemonMovesContainer=s.add.container(6,14),this.pokemonMovesContainer.setName("pkmn-moves"),this.movesContainerInitialX=this.pokemonMovesContainer.x,this.pokemonMovesContainers=[],this.pokemonMoveBgs=[],this.pokemonMoveLabels=[];const N=bt(0,0,58,52);N.setOrigin(1,0),N.setName("window-moves-bg"),this.pokemonMovesContainer.add(N);const S=We(-N.width/2,6,D.t("pokemonInfoContainer:moveset"),Se.WINDOW,{fontSize:"64px"});S.setOrigin(.5,0),S.setName("text-moves"),this.pokemonMovesContainer.add(S);for(let C=0;C<4;C++){const U=s.add.container(-6,18+7*C);U.setScale(.5),U.setName("move");const _=s.add.nineslice(0,0,"type_bgs","unknown",92,14,2,2,2,2);_.setOrigin(1,0),_.setName("nineslice-move-bg");const G=We(-_.width/2,0,"-",Se.PARTY);G.setOrigin(.5,0),G.setName("text-move-label"),this.pokemonMoveBgs.push(_),this.pokemonMoveLabels.push(G),U.add(_),U.add(G),this.pokemonMovesContainers.push(U),this.pokemonMovesContainer.add(U)}this.add(this.pokemonMovesContainer),this.statsContainer=new BG(-48,-64,!0),this.add(this.infoBg),this.add(this.statsContainer);const T=(I==null?void 0:I.infoContainerLabelXPos)||-18,i=(I==null?void 0:I.infoContainerTextXPos)||-14,o=(I==null?void 0:I.infoContainerTextSize)||"64px";this.pokemonFormLabelText=We(T,19,D.t("pokemonInfoContainer:form"),Se.WINDOW,{fontSize:o}),this.pokemonFormLabelText.setOrigin(1,0),this.pokemonFormLabelText.setVisible(!1),this.add(this.pokemonFormLabelText),this.pokemonFormText=We(i,19,"",Se.WINDOW,{fontSize:o}),this.pokemonFormText.setOrigin(0,0),this.pokemonFormText.setVisible(!1),this.add(this.pokemonFormText),this.pokemonGenderText=We(-42,-61,"",Se.WINDOW,{fontSize:o}),this.pokemonGenderText.setOrigin(0,0),this.pokemonGenderText.setVisible(!1),this.pokemonGenderText.setName("text-pkmn-gender"),this.add(this.pokemonGenderText),this.pokemonGenderNewText=We(-36,-61,"",Se.WINDOW,{fontSize:"64px"}),this.pokemonGenderNewText.setOrigin(0,0),this.pokemonGenderNewText.setVisible(!1),this.pokemonGenderNewText.setName("text-pkmn-new-gender"),this.add(this.pokemonGenderNewText),this.pokemonAbilityLabelText=We(T,29,D.t("pokemonInfoContainer:ability"),Se.WINDOW,{fontSize:o}),this.pokemonAbilityLabelText.setOrigin(1,0),this.pokemonAbilityLabelText.setName("text-pkmn-ability-label"),this.add(this.pokemonAbilityLabelText),this.pokemonAbilityText=We(i,29,"",Se.WINDOW,{fontSize:o}),this.pokemonAbilityText.setOrigin(0,0),this.pokemonAbilityText.setName("text-pkmn-ability"),this.add(this.pokemonAbilityText),this.pokemonNatureLabelText=We(T,39,D.t("pokemonInfoContainer:nature"),Se.WINDOW,{fontSize:o}),this.pokemonNatureLabelText.setOrigin(1,0),this.pokemonNatureLabelText.setName("text-pkmn-nature-label"),this.add(this.pokemonNatureLabelText),this.pokemonNatureText=MO(i,39,"",Se.WINDOW,{fontSize:o,lineSpacing:3,maxLines:2}),this.pokemonNatureText.setOrigin(0,0),this.pokemonNatureText.setName("text-pkmn-nature"),this.add(this.pokemonNatureText),this.pokemonShinyIcon=s.add.image(-43.5,48.5,"shiny_star"),this.pokemonShinyIcon.setOrigin(0,0),this.pokemonShinyIcon.setScale(.75),this.pokemonShinyIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.pokemonShinyIcon.setName("img-pkmn-shiny-icon"),this.add(this.pokemonShinyIcon),this.pokemonShinyNewIcon=We(this.pokemonShinyIcon.x+12,this.pokemonShinyIcon.y,"",Se.WINDOW,{fontSize:o}),this.pokemonShinyNewIcon.setOrigin(0,0),this.pokemonShinyNewIcon.setName("text-pkmn-shiny-new-icon"),this.add(this.pokemonShinyNewIcon),this.pokemonShinyNewIcon.setVisible(!1),this.pokemonFusionShinyIcon=s.add.image(this.pokemonShinyIcon.x,this.pokemonShinyIcon.y,"shiny_star_2"),this.pokemonFusionShinyIcon.setOrigin(0,0),this.pokemonFusionShinyIcon.setScale(.75),this.pokemonFusionShinyIcon.setName("img-pkmn-fusion-shiny-icon"),this.add(this.pokemonFusionShinyIcon),this.setVisible(!1)}show(E,R=!1,I=1,N,S,T=!1){return new Promise(i=>{N||(N=s.gameData.dexData[E.species.speciesId]),S||(S=s.gameData.starterData[E.species.getRootSpeciesId()]);const o=BigInt(N.caughtAttr);if(E.gender>ye.GENDERLESS){this.pokemonGenderText.setText(SS(E.gender)),this.pokemonGenderText.setColor(WL(E.gender)),this.pokemonGenderText.setShadowColor(WL(E.gender,!0)),this.pokemonGenderText.setVisible(!0);const W=BigInt(1<<E.gender)*LA.MALE;this.pokemonGenderNewText.setText("(+)"),this.pokemonGenderNewText.setColor(pA(Se.SUMMARY_BLUE,!1,s.uiTheme)),this.pokemonGenderNewText.setShadowColor(pA(Se.SUMMARY_BLUE,!0,s.uiTheme)),this.pokemonGenderNewText.setVisible((W&o)===BigInt(0))}else this.pokemonGenderNewText.setVisible(!1),this.pokemonGenderText.setVisible(!1);const C=E.species.getFormNameToDisplay(E.formIndex);C?(this.pokemonFormLabelText.setVisible(!0),this.pokemonFormText.setVisible(!0),(BigInt(1<<E.formIndex)*LA.DEFAULT_FORM&o)===BigInt(0)?(this.pokemonFormLabelText.setColor(pA(Se.SUMMARY_BLUE,!1,s.uiTheme)),this.pokemonFormLabelText.setShadowColor(pA(Se.SUMMARY_BLUE,!0,s.uiTheme))):(this.pokemonFormLabelText.setColor(pA(Se.WINDOW,!1,s.uiTheme)),this.pokemonFormLabelText.setShadowColor(pA(Se.WINDOW,!0,s.uiTheme))),this.pokemonFormText.setText(C.length>this.numCharsBeforeCutoff?`${C.substring(0,this.numCharsBeforeCutoff-3)}...`:C),C.length>this.numCharsBeforeCutoff?(this.pokemonFormText.setInteractive(new Phaser.Geom.Rectangle(0,0,this.pokemonFormText.width,this.pokemonFormText.height),Phaser.Geom.Rectangle.Contains),this.pokemonFormText.on("pointerover",()=>s.ui.showTooltip("",C,!0)),this.pokemonFormText.on("pointerout",()=>s.ui.hideTooltip())):this.pokemonFormText.disableInteractive()):(this.pokemonFormLabelText.setVisible(!1),this.pokemonFormText.setVisible(!1),this.pokemonFormText.disableInteractive());const U=E.abilityIndex===2?Se.MONEY:Se.WINDOW;this.pokemonAbilityText.setText(E.getAbility(!0).name),this.pokemonAbilityText.setColor(pA(U,!1,s.uiTheme)),this.pokemonAbilityText.setShadowColor(pA(U,!0,s.uiTheme)),E.checkIfPlayerHasAbilityOfStarter(S.abilityAttr)?(this.pokemonAbilityLabelText.setColor(pA(Se.WINDOW,!1,s.uiTheme)),this.pokemonAbilityLabelText.setShadowColor(pA(Se.WINDOW,!0,s.uiTheme))):(this.pokemonAbilityLabelText.setColor(pA(Se.SUMMARY_BLUE,!1,s.uiTheme)),this.pokemonAbilityLabelText.setShadowColor(pA(Se.SUMMARY_BLUE,!0,s.uiTheme))),this.pokemonNatureText.setText(QO(E.getNature(),!0,!1,!1,s.uiTheme));const G=N.natureAttr,H=1<<E.nature+1;G&H?(this.pokemonNatureLabelText.setColor(pA(Se.WINDOW,!1,s.uiTheme)),this.pokemonNatureLabelText.setShadowColor(pA(Se.WINDOW,!0,s.uiTheme))):(this.pokemonNatureLabelText.setColor(pA(Se.SUMMARY_BLUE,!1,s.uiTheme)),this.pokemonNatureLabelText.setShadowColor(pA(Se.SUMMARY_BLUE,!0,s.uiTheme)));const c=E.isFusion(),f=c&&E.shiny&&E.fusionShiny,d=f?E.variant:E.getVariant();if(this.pokemonShinyIcon.setTexture(`shiny_star${f?"_1":""}`),this.pokemonShinyIcon.setVisible(E.isShiny()),this.pokemonShinyIcon.setTint(nO(d)),this.pokemonShinyIcon.visible){const W=f||d?`${d===2?D.t("common:epicShiny"):d===1?D.t("common:rareShiny"):D.t("common:commonShiny")}${f?`/${E.fusionVariant===2?D.t("common:epicShiny"):E.fusionVariant===1?D.t("common:rareShiny"):D.t("common:commonShiny")}`:""}`:"";this.pokemonShinyIcon.on("pointerover",()=>s.ui.showTooltip("",`${D.t("common:shinyOnHover")}${W?` (${W})`:""}`,!0)),this.pokemonShinyIcon.on("pointerout",()=>s.ui.hideTooltip());const v=BigInt(1<<(E.shiny?1:0)),$=BigInt(1<<E.variant+4);this.pokemonShinyNewIcon.setText("(+)"),this.pokemonShinyNewIcon.setColor(pA(Se.SUMMARY_BLUE,!1,s.uiTheme)),this.pokemonShinyNewIcon.setShadowColor(pA(Se.SUMMARY_BLUE,!0,s.uiTheme));const Oe=(v&o)===BigInt(0)||($&o)===BigInt(0);this.pokemonShinyNewIcon.setVisible(!!Oe)}else(o&LA.NON_SHINY)===BigInt(0)&&(o&LA.SHINY)===LA.SHINY?(this.pokemonShinyNewIcon.setVisible(!0),this.pokemonShinyNewIcon.setText("(+)"),this.pokemonShinyNewIcon.setColor(pA(Se.SUMMARY_BLUE,!1,s.uiTheme)),this.pokemonShinyNewIcon.setShadowColor(pA(Se.SUMMARY_BLUE,!0,s.uiTheme))):this.pokemonShinyNewIcon.setVisible(!1);this.pokemonFusionShinyIcon.setPosition(this.pokemonShinyIcon.x,this.pokemonShinyIcon.y),this.pokemonFusionShinyIcon.setVisible(f),c&&this.pokemonFusionShinyIcon.setTint(nO(E.fusionVariant));const w=E.species.getRootSpeciesId(),m=T?N.caughtAttr?N.ivs:null:s.gameData.dexData[w].caughtAttr?s.gameData.dexData[w].ivs:null;this.statsContainer.updateIvs(E.ivs,m),T||(s.tweens.add({targets:this,duration:KA(Math.floor(750/I)),ease:"Cubic.easeInOut",x:this.initialX-this.infoWindowWidth,onComplete:r(()=>{i()},"onComplete")}),R&&s.tweens.add({delay:KA(Math.floor(325/I)),targets:this.pokemonMovesContainer,duration:KA(Math.floor(325/I)),ease:"Cubic.easeInOut",x:this.movesContainerInitialX-57,onComplete:r(()=>i(),"onComplete")}));for(let W=0;W<4;W++){const v=W<E.moveset.length&&E.moveset[W]?E.moveset[W].getMove():null;this.pokemonMoveBgs[W].setFrame(L[v?v.type:L.UNKNOWN].toString().toLowerCase()),this.pokemonMoveLabels[W].setText(v?v.name:"-"),this.pokemonMovesContainers[W].setVisible(!!v)}this.setVisible(!0),this.shown=!0,s.hideEnemyModifierBar()})}changeToEggSummaryLayout(){const E=D.resolvedLanguage,R=Object.keys(Mi).find(i=>E==null?void 0:E.includes(i)),I=Mi[R],N=43,S=((I==null?void 0:I.infoContainerLabelXPos)||-18)+N,T=((I==null?void 0:I.infoContainerTextXPos)||-14)+N;this.x=this.initialX-this.infoWindowWidth,this.pokemonGenderText.setPosition(89,-2),this.pokemonGenderNewText.setPosition(79,-2),this.pokemonShinyIcon.setPosition(82,87),this.pokemonShinyNewIcon.setPosition(72,87),this.pokemonFormLabelText.setPosition(S,152),this.pokemonFormText.setPosition(T,152),this.pokemonAbilityLabelText.setPosition(S,110),this.pokemonAbilityText.setPosition(T,110),this.pokemonNatureLabelText.setPosition(S,125),this.pokemonNatureText.setPosition(T,125),this.statsContainer.setScale(.7),this.statsContainer.setPosition(30,-3),this.infoBg.setVisible(!1),this.pokemonMovesContainer.setVisible(!1)}makeRoomForConfirmUi(E=1,R=!1){const I=R?this.initialX-this.infoWindowWidth-67:this.initialX-this.infoWindowWidth-cG.windowWidth;return new Promise(N=>{s.tweens.add({targets:this,duration:KA(Math.floor(150/E)),ease:"Cubic.easeInOut",x:I,onComplete:r(()=>{N()},"onComplete")})})}hide(E=1){return new Promise(R=>{if(!this.shown)return s.showEnemyModifierBar(),R();s.tweens.add({targets:this.pokemonMovesContainer,duration:KA(Math.floor(750/E)),ease:"Cubic.easeInOut",x:this.movesContainerInitialX}),s.tweens.add({targets:this,duration:KA(Math.floor(750/E)),ease:"Cubic.easeInOut",x:this.initialX,onComplete:r(()=>{this.setVisible(!1),this.pokemonShinyIcon.off("pointerover"),this.pokemonShinyIcon.off("pointerout"),s.ui.hideTooltip(),s.showEnemyModifierBar(),R()},"onComplete")}),this.shown=!1})}};r(ff,"PokemonInfoContainer");let hG=ff;const uL={fadeIn:J6,fadeOut:Q6},AM=class AM extends bE{constructor(E,R,I){super(),this.eggLapsePhase=E,this.egg=R,this.eggsToHatchCount=I}start(){super.start(),s.ui.setModeForceTransition(Ce.EGG_HATCH_SCENE).then(()=>{if(!this.egg)return this.end();const E=s.gameData.eggs.findIndex(N=>N.id===this.egg.id);if(E===-1)return this.end();s.gameData.eggs.splice(E,1),s.fadeOutBgm(void 0,!1),this.eggHatchHandler=s.ui.getHandler(),this.eggHatchContainer=this.eggHatchHandler.eggHatchContainer,this.eggHatchBg=s.add.image(0,0,"default_bg"),this.eggHatchBg.setOrigin(0,0),this.eggHatchContainer.add(this.eggHatchBg),this.eggContainer=s.add.container(this.eggHatchBg.displayWidth/2,this.eggHatchBg.displayHeight/2),this.eggSprite=s.add.sprite(0,0,"egg",`egg_${this.egg.getKey()}`),this.eggCrackSprite=s.add.sprite(0,0,"egg_crack","0"),this.eggCrackSprite.setVisible(!1),this.eggLightraysOverlay=s.add.sprite(-this.eggHatchBg.displayWidth/2+4,-this.eggHatchBg.displayHeight/2,"egg_lightrays","3"),this.eggLightraysOverlay.setOrigin(0,0),this.eggLightraysOverlay.setVisible(!1),this.eggContainer.add(this.eggSprite),this.eggContainer.add(this.eggCrackSprite),this.eggContainer.add(this.eggLightraysOverlay),this.eggHatchContainer.add(this.eggContainer),this.eggCounterContainer=new uG(this.eggsToHatchCount),this.eggHatchContainer.add(this.eggCounterContainer);const R=r(()=>{const N=s.add.sprite(this.eggHatchBg.displayWidth/2,this.eggHatchBg.displayHeight/2,"pkmn__sub");return N.setPipeline(s.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),N},"getPokemonSprite");this.eggHatchContainer.add(this.pokemonSprite=R()),this.pokemonShinySparkle=s.add.sprite(this.pokemonSprite.x,this.pokemonSprite.y,"shiny"),this.pokemonShinySparkle.setVisible(!1),this.eggHatchContainer.add(this.pokemonShinySparkle),this.eggHatchOverlay=s.add.rectangle(0,-s.game.canvas.height/6,s.game.canvas.width/6,s.game.canvas.height/6,16777215),this.eggHatchOverlay.setOrigin(0,0),this.eggHatchOverlay.setAlpha(0),s.fieldUI.add(this.eggHatchOverlay),this.infoContainer=new hG,this.infoContainer.setup(),this.eggHatchContainer.add(this.infoContainer);const I=this.generatePokemon();I.fusionSpecies&&I.clearFusionSpecies(),this.pokemonSprite.setVisible(!1),this.pokemon=I,I.loadAssets().then(()=>{this.canSkip=!0,s.time.delayedCall(1e3,()=>{this.hatched||(this.evolutionBgm=s.playSoundWithoutBgm("evolution"))}),s.time.delayedCall(2e3,()=>{this.hatched||(this.eggCrackSprite.setVisible(!0),this.doSpray(1,this.eggSprite.displayHeight/-2),this.doEggShake(2).then(()=>{this.hatched||s.time.delayedCall(1e3,()=>{this.hatched||(this.doSpray(2,this.eggSprite.displayHeight/-4),this.eggCrackSprite.setFrame("1"),s.time.delayedCall(125,()=>this.eggCrackSprite.setFrame("2")),this.doEggShake(4).then(()=>{this.hatched||s.time.delayedCall(1e3,()=>{this.hatched||(s.playSound("se/egg_crack"),this.doSpray(4),this.eggCrackSprite.setFrame("3"),s.time.delayedCall(125,()=>this.eggCrackSprite.setFrame("4")),this.doEggShake(8,2).then(()=>{this.hatched||this.doHatch()}))})}))})}))})})})}end(){s.findPhase(E=>E instanceof AM)?this.eggHatchHandler.clear():s.time.delayedCall(250,()=>s.setModifiersVisible(!0)),super.end()}doEggShake(E,R,I){return new Promise(N=>{R===void 0&&(R=0),I===void 0&&(I=0),s.playSound("se/pb_move"),s.tweens.add({targets:this.eggContainer,x:`-=${E/(I?1:2)}`,ease:"Sine.easeInOut",duration:125,onComplete:r(()=>{s.tweens.add({targets:this.eggContainer,x:`+=${E}`,ease:"Sine.easeInOut",duration:250,onComplete:r(()=>{if(I++,I<R)return this.doEggShake(E,R,I).then(()=>N());s.tweens.add({targets:this.eggContainer,x:`-=${E/2}`,ease:"Sine.easeInOut",duration:125,onComplete:r(()=>N(),"onComplete")})},"onComplete")})},"onComplete")})})}trySkip(){var E;return!this.canSkip||this.skipped||((E=this.eggCounterContainer.eggCountText)==null?void 0:E.data)===void 0?!1:(this.skipped=!0,this.hatched?this.doReveal():this.doHatch(),!0)}doHatch(){this.canSkip=!1,this.hatched=!0,this.evolutionBgm&&uL.fadeOut(s,this.evolutionBgm,KA(100));for(let E=0;E<5;E++)s.time.delayedCall(KA(375*E),()=>s.playSound("se/egg_hatch",{volume:1-E*.2}));this.eggLightraysOverlay.setVisible(!0),this.eggLightraysOverlay.play("egg_lightrays"),s.tweens.add({duration:KA(125),targets:this.eggHatchOverlay,alpha:1,ease:"Cubic.easeIn",onComplete:r(()=>{this.skipped=!1,this.canSkip=!0},"onComplete")}),s.time.delayedCall(KA(1500),()=>{this.canSkip=!1,this.skipped||this.doReveal()})}doReveal(){const E=this.pokemon.isShiny();this.pokemon.species.subLegendary&&s.validateAchv(oA.HATCH_SUB_LEGENDARY),this.pokemon.species.legendary&&s.validateAchv(oA.HATCH_LEGENDARY),this.pokemon.species.mythical&&s.validateAchv(oA.HATCH_MYTHICAL),E&&s.validateAchv(oA.HATCH_SHINY),this.eggContainer.setVisible(!1);const R=this.pokemon.getSpriteKey(!0);try{this.pokemonSprite.play(R)}catch(I){console.error(`Failed to play animation for ${R}`,I)}this.pokemonSprite.setPipelineData("ignoreTimeTint",!0),this.pokemonSprite.setPipelineData("spriteKey",this.pokemon.getSpriteKey()),this.pokemonSprite.setPipelineData("shiny",this.pokemon.shiny),this.pokemonSprite.setPipelineData("variant",this.pokemon.variant),this.pokemonSprite.setVisible(!0),s.time.delayedCall(KA(250),()=>{this.eggsToHatchCount--,this.eggHatchHandler.eventTarget.dispatchEvent(new _G(this.eggsToHatchCount)),this.pokemon.cry(),E&&s.time.delayedCall(KA(500),()=>{HM(this.pokemonShinySparkle,this.pokemon.variant)}),s.time.delayedCall(KA(this.skipped?E?750:250:E?1750:1250),()=>{this.infoContainer.show(this.pokemon,!1,this.skipped?2:1),s.playSoundWithoutBgm("evolution_fanfare"),s.ui.showText(D.t("egg:hatchFromTheEgg",{pokemonName:this.pokemon.species.getExpandedSpeciesName()}),null,()=>{s.gameData.updateSpeciesDexIvs(this.pokemon.species.speciesId,this.pokemon.ivs),s.gameData.setPokemonCaught(this.pokemon,!0,!0).then(()=>{s.gameData.setEggMoveUnlocked(this.pokemon.species,this.eggMoveIndex).then(I=>{this.eggHatchData.setEggMoveUnlocked(I),s.ui.showText("",0),this.end()})})},null,!0,3e3)})}),s.tweens.add({duration:KA(this.skipped?500:3e3),targets:this.eggHatchOverlay,alpha:0,ease:"Cubic.easeOut"})}sin(E,R){return R*Math.sin(E*(Math.PI/128))}doSpray(E,R){s.tweens.addCounter({repeat:E,duration:VE(1),onRepeat:r(()=>{this.doSprayParticle(oE(8),R||0)},"onRepeat")})}doSprayParticle(E,R){const I=this.eggHatchBg.displayWidth/2,N=this.eggHatchBg.displayHeight/2+R,S=this.egg.isManaphyEgg()?"1":this.egg.tier.toString(),T=s.add.image(I,N,"egg_shard",`${S}_${Math.floor(E/2)}`);this.eggHatchContainer.add(T);let i=0,o=0;const C=3-oE(8),U=24+oE(32),_=s.tweens.addCounter({repeat:-1,duration:VE(1),onRepeat:r(()=>{G()},"onRepeat")}),G=r(()=>{const H=this.skipped?6:1;o+=H,E<160?(T.setPosition(I+C*i/3,N+o),T.y+=-this.sin(E,U),i>108&&T.setScale(1-(i-108)/20),E+=2*H,i+=H):(T.destroy(),_.remove())},"updateParticle");G()}generatePokemon(){return this.eggHatchData=this.eggLapsePhase.generatePokemon(this.egg),this.eggMoveIndex=this.eggHatchData.eggMoveIndex,this.eggHatchData.pokemon}};r(AM,"EggHatchPhase");let fG=AM;const df=class df extends bE{constructor(E){super(),this.eggHatchData=E}start(){super.start();const E=r(R=>{R>=this.eggHatchData.length?s.ui.setModeForceTransition(Ce.EGG_HATCH_SUMMARY,this.eggHatchData).then(()=>{s.fadeOutBgm(void 0,!1)}):(this.eggHatchData[R].setDex(),this.eggHatchData[R].updatePokemon().then(()=>{R<this.eggHatchData.length&&E(R+1)}))},"updateNextPokemon");E(0)}end(){s.time.delayedCall(250,()=>s.setModifiersVisible(!0)),s.ui.setModeForceTransition(Ce.MESSAGE).then(()=>{super.end()})}};r(df,"EggSummaryPhase");let dG=df;const Kf=class Kf{constructor(E,R){this.pokemon=E,this.eggMoveIndex=R}setEggMoveUnlocked(E){this.eggMoveUnlocked=E}setDex(){const E=s.gameData.dexData[this.pokemon.species.speciesId],R=s.gameData.starterData[this.pokemon.species.getRootSpeciesId()];this.dexEntryBeforeUpdate={seenAttr:E.seenAttr,caughtAttr:E.caughtAttr,natureAttr:E.natureAttr,seenCount:E.seenCount,caughtCount:E.caughtCount,hatchedCount:E.hatchedCount,ivs:[...E.ivs]},this.starterDataEntryBeforeUpdate={moveset:R.moveset,eggMoves:R.eggMoves,candyCount:R.candyCount,friendship:R.friendship,abilityAttr:R.abilityAttr,passiveAttr:R.passiveAttr,valueReduction:R.valueReduction,classicWinCount:R.classicWinCount}}getDex(){return this.dexEntryBeforeUpdate}getStarterEntry(){return this.starterDataEntryBeforeUpdate}updatePokemon(E=!1){return new Promise(R=>{s.gameData.setPokemonCaught(this.pokemon,!0,!0,E).then(()=>{s.gameData.updateSpeciesDexIvs(this.pokemon.species.speciesId,this.pokemon.ivs),s.gameData.setEggMoveUnlocked(this.pokemon.species,this.eggMoveIndex,E).then(I=>{this.setEggMoveUnlocked(I),R()})})})}};r(Kf,"EggHatchData");let KG=Kf;const Ff=class Ff extends bE{constructor(){super(...arguments),this.eggHatchData=[],this.minEggsToSkip=2}start(){super.start();const E=s.gameData.eggs.filter(I=>Ze.EGG_IMMEDIATE_HATCH_OVERRIDE?!0:--I.hatchWaves<1),R=E.length;this.eggHatchData=[],R>0?R>=this.minEggsToSkip&&s.eggSkipPreference===1?s.ui.showText(D.t("battle:eggHatching"),0,()=>{s.ui.showText(D.t("battle:eggSkipPrompt",{eggsToHatch:R}),0),s.ui.setModeWithoutClear(Ce.CONFIRM,()=>{this.hatchEggsSkipped(E),this.showSummary()},()=>{this.hatchEggsRegular(E),this.end()},null,null,null,1e3,!0)},100,!0):R>=this.minEggsToSkip&&s.eggSkipPreference===2?(s.queueMessage(D.t("battle:eggHatching")),this.hatchEggsSkipped(E),this.showSummary()):(s.queueMessage(D.t("battle:eggHatching")),this.hatchEggsRegular(E),this.end()):this.end()}hatchEggsRegular(E){let R=E.length;for(const I of E)s.unshiftPhase(new fG(this,I,R)),R--}hatchEggsSkipped(E){for(const R of E)this.hatchEggSilently(R)}showSummary(){s.unshiftPhase(new dG(this.eggHatchData)),this.end()}hatchEggSilently(E){const R=s.gameData.eggs.findIndex(S=>S.id===E.id);if(R===-1)return this.end();s.gameData.eggs.splice(R,1);const N=this.generatePokemon(E).pokemon;N.fusionSpecies&&N.clearFusionSpecies(),N.species.subLegendary&&s.validateAchv(oA.HATCH_SUB_LEGENDARY),N.species.legendary&&s.validateAchv(oA.HATCH_LEGENDARY),N.species.mythical&&s.validateAchv(oA.HATCH_MYTHICAL),N.isShiny()&&s.validateAchv(oA.HATCH_SHINY)}generatePokemon(E){let R,I;return s.executeWithSeedOffset(()=>{R=E.generatePlayerPokemon(),I=new KG(R,E.eggMoveIndex),I.setDex(),this.eggHatchData.push(I)},E.id,BN.toString()),I}};r(Ff,"EggLapsePhase");let PS=Ff;const Yf=class Yf extends Nt{constructor(E){super(),this.modifierType=q1(E)}start(){super.start(),this.doReward().then(()=>this.end())}doReward(){return new Promise(E=>{const R=this.modifierType.newModifier();s.addModifier(R),s.playSound("item_fanfare"),s.ui.showText(D.t("battle:rewardGain",{modifierName:R==null?void 0:R.type.name}),null,()=>E(),null,!0)})}};r(Yf,"ModifierRewardPhase");let zE=Yf;const Wf=class Wf extends Nt{constructor(E){super(),this.moneyMultiplier=E}start(){const E=new me(s.getWaveMoneyAmount(this.moneyMultiplier));s.applyModifiers(CO,!0,E),s.arena.getTag(oe.HAPPY_HOUR)&&(E.value*=2),s.addMoney(E.value);const R=navigator.language||"en-US",I=E.value.toLocaleString(R),N=D.t("battle:moneyWon",{moneyAmount:I});s.ui.showText(N,null,()=>this.end(),null,!0)}};r(Wf,"MoneyRewardPhase");let FG=Wf;const mf=class mf extends Nt{start(){var I,N,S,T,i,o;s.disableMenu=!0,s.playBgm((I=s.currentBattle.trainer)==null?void 0:I.config.victoryBgm),s.unshiftPhase(new FG((N=s.currentBattle.trainer)==null?void 0:N.config.moneyMultiplier));const E=(S=s.currentBattle.trainer)==null?void 0:S.config.modifierRewardFuncs;for(const C of E)s.unshiftPhase(new zE(C));const R=(T=s.currentBattle.trainer)==null?void 0:T.config.trainerType;bO.hasOwnProperty(l[R])&&!s.validateVoucher(bO[l[R]])&&(i=s.currentBattle.trainer)!=null&&i.config.isBoss&&(vE.getUpgradeUnlockedVouchers()?s.unshiftPhase(new zE([x.VOUCHER_PLUS,x.VOUCHER_PLUS,x.VOUCHER_PLUS,x.VOUCHER_PREMIUM][bO[l[R]].voucherType])):s.unshiftPhase(new zE([x.VOUCHER,x.VOUCHER,x.VOUCHER_PLUS,x.VOUCHER_PREMIUM][bO[l[R]].voucherType]))),s.arena.biomeType===n.SPACE&&(R===l.BREEDER||R===l.EXPERT_POKEMON_BREEDER)&&s.validateAchv(oA.BREEDERS_IN_SPACE),s.ui.showText(D.t("battle:trainerDefeated",{trainerName:(o=s.currentBattle.trainer)==null?void 0:o.getName(b.NONE,!0)}),null,()=>{var H,c;const C=(H=s.currentBattle.trainer)==null?void 0:H.getVictoryMessages();let U;s.executeWithSeedOffset(()=>U=SE(C),s.currentBattle.waveIndex),U=U;const _=r(()=>{const f=G;G=r(()=>{var d;return s.ui.showDialogue(U,(d=s.currentBattle.trainer)==null?void 0:d.getName(b.TRAINER,!0),null,f)},"showMessageOrEnd"),G()},"showMessage");let G=r(()=>this.end(),"showMessageOrEnd");if(C!=null&&C.length)if((c=s.currentBattle.trainer)!=null&&c.config.hasCharSprite&&!s.ui.shouldSkipDialogue(U)){const f=G;G=r(()=>s.charSprite.hide().then(()=>s.hideFieldOverlay(250).then(()=>f())),"showMessageOrEnd"),s.showFieldOverlay(500).then(()=>{var d;return s.charSprite.showCharacter((d=s.currentBattle.trainer)==null?void 0:d.getKey(),_M(C[0])).then(()=>_())})}else _();else G()},null,!0),this.showEnemyTrainer()}};r(mf,"TrainerVictoryPhase");let NC=mf;const gf=class gf extends bE{constructor(E,R,I){super(),this.expValue=E,this.useWaveIndexMultiplier=R,this.pokemonParticipantIds=I}start(){super.start(),s.applyPartyExp(this.expValue,!1,this.useWaveIndexMultiplier,this.pokemonParticipantIds),this.end()}};r(gf,"PartyExpPhase");let YG=gf;function EZ(){const t=s.add.sprite(0,0,"encounter_exclaim");t.setName("exclamation"),s.field.add(t),s.field.moveTo(t,s.field.getAll().length-1),t.setVisible(!0),t.setPosition(110,68),s.tweens.add({targets:t,y:"-=25",ease:"Cubic.easeOut",duration:300,yoyo:!0,onComplete:r(()=>{s.time.delayedCall(800,()=>{s.field.remove(t,!0)})},"onComplete")}),s.playSound("battle_anims/GEN8- Exclaim",{volume:.7})}r(EZ,"doTrainerExclamation");async function HE(t){var C,U;const E=[],R=s.currentBattle;let I=(t==null?void 0:t.doubleBattle)??!1;const N=t==null?void 0:t.trainerType,S=t==null?void 0:t.trainerConfig;let T;if(!Ne(N)||S){s.currentBattle.mysteryEncounter.encounterMode=JE.TRAINER_BATTLE,s.currentBattle.trainer&&(s.currentBattle.trainer.setVisible(!1),s.currentBattle.trainer.destroy()),T=S||yE[N];const _=T.doubleOnly||T.hasDouble&&!!t.doubleBattle;I=_;const G=Ne(t.female)?!!De(2):t.female,H=new FR(T.trainerType,_?xA.DOUBLE:G?xA.FEMALE:xA.DEFAULT,void 0,void 0,void 0,T);H.x+=300,H.setVisible(!1),s.field.add(H),s.currentBattle.trainer=H,E.push(H.loadAssets().then(()=>H.initSprite())),R.enemyLevels=s.currentBattle.trainer.getPartyLevels(s.currentBattle.waveIndex)}else{s.currentBattle.mysteryEncounter.encounterMode=JE.WILD_BATTLE;const _=t!=null&&t.pokemonConfigs&&t.pokemonConfigs.length>0?(C=t==null?void 0:t.pokemonConfigs)==null?void 0:C.length:I?2:1;R.enemyLevels=new Array(_).fill(null).map(()=>s.currentBattle.getLevelForWave())}s.getEnemyParty().forEach(_=>{_.leaveField(!0,!0,!0)}),R.enemyParty=[],R.double=I;const i=Ne(t.levelAdditiveModifier)?0:t.levelAdditiveModifier,o=Math.max(Math.round(s.currentBattle.waveIndex/10*i),0);R.enemyLevels=R.enemyLevels.map(_=>_+o),R.enemyLevels.forEach((_,G)=>{let H,c,f=!1;if((!Ne(N)||T)&&R.trainer)if(t!=null&&t.pokemonConfigs&&G<t.pokemonConfigs.length){const W=t.pokemonConfigs[G];_=W.level?W.level:_,c=W.dataSource,H=W.species,f=W.isBoss,R.enemyParty[G]=s.addEnemyPokemon(H,_,b.TRAINER,f,!1,c)}else R.enemyParty[G]=R.trainer.genPartyMember(G);else{if(t!=null&&t.pokemonConfigs&&G<t.pokemonConfigs.length){const W=t.pokemonConfigs[G];_=W.level?W.level:_,c=W.dataSource,H=W.species,f=W.isBoss,f&&(s.currentBattle.mysteryEncounter.encounterMode=JE.BOSS_BATTLE)}else H=s.randomSpecies(R.waveIndex,_,!0);R.enemyParty[G]=s.addEnemyPokemon(H,_,b.NONE,f,!1,c)}const d=s.getEnemyParty()[G];if(d.hp=d.getMaxHp(),d.status=null,d.passive=!1,G<(I?2:1)&&(d.setX(-66+d.getFieldPositionOffset()[0]),d.resetSummonData()),(Ne(t.countAsSeen)||t.countAsSeen)&&s.gameData.setPokemonSeen(d,!0,!!(N||T)),t!=null&&t.pokemonConfigs&&G<t.pokemonConfigs.length){const W=t.pokemonConfigs[G];if(Ne(W.nickname)||(d.nickname=btoa(unescape(encodeURIComponent(W.nickname)))),W.dataSource&&(d.id=De(4294967296)),Ne(W.formIndex)||(d.formIndex=W.formIndex),Ne(W.shiny)||(d.shiny=W.shiny),d.shiny&&!Ne(W.variant)&&(d.variant=W.variant),Ne(W.customPokemonData)||(d.customPokemonData=W.customPokemonData),W.isBoss){let $=Ne(W.bossSegments)?s.getEncounterBossSegments(s.currentBattle.waveIndex,_,H,!0):W.bossSegments;Ne(W.bossSegmentModifier)||($+=W.bossSegmentModifier),d.setBoss(!0,$)}W.passive&&(d.passive=!0),W.nature&&(d.nature=W.nature),W.ivs&&(d.ivs=W.ivs);const v=W.status;if(v){const $=Array.isArray(v)?v[0]:v,Oe=Array.isArray(v)?v[1]:v===J.SLEEP?3:void 0;d.status=new pN($,0,Oe)}if(Ne(W.abilityIndex)||(d.abilityIndex=W.abilityIndex),Ne(W.gender)||(d.gender=W.gender,d.summonData.gender=W.gender),Ne(W.aiType)||(d.aiType=W.aiType),W!=null&&W.moveSet&&W.moveSet.length>0){const $=W.moveSet.map(Oe=>new Ye(Oe));d.moveset=$,d.summonData.moveset=$}W.tags&&W.tags.length>0&&W.tags.forEach(Oe=>d.addTag(Oe)),W.tera&&W.tera!==L.UNKNOWN&&(d.teraType=W.tera,R.trainer&&R.trainer.config.setInstantTera(G)),W.mysteryEncounterBattleEffects&&(d.mysteryEncounterBattleEffects=W.mysteryEncounterBattleEffects),d.isShiny()&&!d.shinySparkle&&d.initShinySparkle(),d.initBattleInfo(),d.getBattleInfo().initInfo(d),d.generateName()}E.push(d.loadAssets());const w=[`HP: ${d.stats[0]} (${d.ivs[0]})`,` Atk: ${d.stats[1]} (${d.ivs[1]})`,` Def: ${d.stats[2]} (${d.ivs[2]})`,` Spatk: ${d.stats[3]} (${d.ivs[3]})`,` Spdef: ${d.stats[4]} (${d.ivs[4]})`,` Spd: ${d.stats[5]} (${d.ivs[5]})`],m=[];d.getMoveset().forEach(W=>{m.push(W.getName())}),console.log(`Pokemon: ${Z(d)}`,`| Species ID: ${d.species.speciesId}`,`| Level: ${d.level}`,`| Nature: ${QO(d.nature,!0,!0,!0)}`),console.log(`Stats (IVs): ${w}`),console.log(`Ability: ${d.getAbility().name}`,`| Passive Ability${d.hasPassive()?"":" (inactive)"}: ${d.getPassiveAbility().name}`,`${d.isBoss()?`| Boss Bars: ${d.bossSegments}`:""}`),console.log("Moveset:",m)}),s.pushPhase(new MG(t.disableSwitch)),await Promise.all(E),R.enemyParty.forEach((_,G)=>{G<(I?2:1)&&(_.setVisible(!1),R.double&&_.setFieldPosition(G?RR.RIGHT:RR.LEFT),_.x+=300)});{jL(s.getEnemyField(),R.battleType===AA.TRAINER?lt.TRAINER:lt.WILD);const _=(U=t==null?void 0:t.pokemonConfigs)==null?void 0:U.filter(G=>G==null?void 0:G.modifierConfigs).map(G=>G.modifierConfigs);s.generateEnemyModifiers(_)}}r(HE,"initBattleWithEnemyConfig");function Ni(t){return t=Array.isArray(t)?t:[t],Promise.all(t.map(E=>fM(E))).then(()=>dM(t))}r(Ni,"loadCustomMovesForEncounter");function rO(t,E=!0,R=!0){s.money=Math.min(Math.max(s.money+t,0),Number.MAX_SAFE_INTEGER),s.updateMoneyText(),s.animateMoneyChanged(!1),E&&s.playSound("se/buy"),R&&(t<0?s.queueMessage(D.t("mysteryEncounterMessages:paid_money",{amount:-t}),null,!0):s.queueMessage(D.t("mysteryEncounterMessages:receive_money",{amount:t}),null,!0))}r(rO,"updatePlayerMoney");function RA(t,E){const R=Object.keys(x).find(N=>x[N]===t);if(!R)return null;let I=x[R]();return I=I.withIdFromFunc(x[R]).withTierFromPool(lt.PLAYER,s.getPlayerParty()),I instanceof jE?I.generateType(s.getPlayerParty(),E):I}r(RA,"generateModifierType");function KE(t,E){const R=RA(t,E);return R&&new dt(R,0)}r(KE,"generateModifierTypeOption");function Ut(t,E,R){return new Promise(I=>{const N=s.ui.getMode();s.ui.setMode(Ce.PARTY,CR.SELECT,-1,(S,T)=>{S<s.getPlayerParty().length?s.ui.setMode(N).then(()=>{const i=s.getPlayerParty()[S],o=t(i);if(!o){s.currentBattle.mysteryEncounter.setDialogueToken("selectedPokemon",i.getNameToRender()),I(!0);return}s.ui.setMode(Ce.MESSAGE).then(()=>{var _,G,H;const C=r(()=>{const c=o.map(d=>{const w=d.handler;return d.handler=()=>(w(),s.currentBattle.mysteryEncounter.setDialogueToken("selectedPokemon",i.getNameToRender()),I(!0),!0),d}).concat({label:D.t("menu:cancel"),handler:r(()=>(s.ui.clearText(),s.ui.setMode(N),I(!1),!0),"handler"),onHover:r(()=>{fA(D.t("mysteryEncounterMessages:cancel_option"),0,0,!1)},"onHover")}),f={options:c,maxOptions:7,yOffset:0,supportHover:!0};c[0].onHover&&c[0].onHover(),s.ui.setModeWithoutClear(Ce.OPTION_SELECT,f,null,!0)},"displayOptions"),U=(H=(G=(_=s.currentBattle.mysteryEncounter)==null?void 0:_.selectedOption)==null?void 0:G.dialogue)==null?void 0:H.secondOptionPrompt;U?fA(U).then(()=>C()):C()})}):s.ui.setMode(N).then(()=>{E&&E(),I(!1)})},R)})}r(Ut,"selectPokemonForOption");function tZ(t,E,R,I){return new Promise(N=>{const S=s.ui.getMode(),T=r(U=>{s.ui.setMode(Ce.MESSAGE).then(()=>{E?fA(E).then(()=>{o[0].onHover&&o[0].onHover(),s.ui.setMode(Ce.OPTION_SELECT,U)}):(o[0].onHover&&o[0].onHover(),s.ui.setMode(Ce.OPTION_SELECT,U))})},"displayOptions"),i=r(U=>{s.ui.setMode(Ce.PARTY,CR.SELECT,-1,(_,G)=>{_<s.getPlayerParty().length?s.ui.setMode(S).then(()=>{N({selectedPokemonIndex:_,selectedOptionIndex:U})}):T(C)},R)},"selectPokemonAfterOption"),o=t.map((U,_)=>{const G=U.handler;return U.handler=()=>(G(),i(_),!0),U}).concat({label:D.t("menu:cancel"),handler:r(()=>(s.ui.clearText(),s.ui.setMode(S),N(null),!0),"handler"),onHover:r(()=>{I&&I(),fA(D.t("mysteryEncounterMessages:cancel_option"),0,0,!1)},"onHover")}),C={options:o,maxOptions:7,yOffset:0,supportHover:!0};T(C)})}r(tZ,"selectOptionThenPokemon");function lA(t,E,R){s.currentBattle.mysteryEncounter.doEncounterRewards=()=>(R&&R(),t?s.unshiftPhase(new JO(0,void 0,t)):s.tryRemovePhase(I=>I instanceof JO),E&&E.forEach(I=>{new js(I).addEggToGameData()}),!0)}r(lA,"setEncounterRewards");function WR(t,E,R=!0){const I=Array.isArray(t)?t:[t];s.currentBattle.mysteryEncounter.doEncounterExp=()=>(s.unshiftPhase(new YG(E,R,new Set(I))),!0)}r(WR,"setEncounterExp");function Xa(t){s.pushPhase(new LC(t))}r(Xa,"initSubsequentOptionSelect");function nA(t=!1,E=JE.NO_BATTLE){s.currentBattle.mysteryEncounter.encounterMode=E,s.clearPhaseQueue(),s.clearPhaseQueueSplice(),Xv(t)}r(nA,"leaveEncounterWithoutBattle");function Xv(t=!1,E=!1){if(s.getPlayerParty().filter(N=>N.isAllowedInBattle()).length===0){s.clearPhaseQueue(),s.unshiftPhase(new $O);return}const I=s.currentBattle.mysteryEncounter;I.continuousEncounter||E||(I.encounterMode===JE.NO_BATTLE?(s.pushPhase(new ka(t)),s.pushPhase(new PS)):s.getEnemyParty().find(N=>I.encounterMode!==JE.TRAINER_BATTLE?N.isOnField():!(N!=null&&N.isFainted(!0)))||(s.pushPhase(new bN(!0)),I.encounterMode===JE.TRAINER_BATTLE&&s.pushPhase(new NC),(s.gameMode.isEndless||!s.gameMode.isWaveFinal(s.currentBattle.waveIndex))&&(s.pushPhase(new ka(t)),I.doContinueEncounter||s.pushPhase(new PS))))}r(Xv,"handleMysteryEncounterVictory");function RZ(t=!1,E=!1){if(s.getPlayerParty().filter(N=>N.isAllowedInBattle()).length===0){s.clearPhaseQueue(),s.unshiftPhase(new $O);return}const I=s.currentBattle.mysteryEncounter;I.continuousEncounter||E||(I.encounterMode!==JE.NO_BATTLE&&s.pushPhase(new bN(!1)),s.pushPhase(new ka(t)),I.doContinueEncounter||s.pushPhase(new PS))}r(RZ,"handleMysteryEncounterBattleFailed");function uE(t=!0,E=!0,R=750){return new Promise(I=>{const N=s.currentBattle.mysteryEncounter.introVisuals,S=s.getEnemyField();S&&(s.currentBattle.enemyParty=[]),N?(t||(N.setVisible(!0),N.x=244,N.y=60,N.alpha=0),s.tweens.add({targets:[N,S],x:`${t?"+":"-"}=16`,y:`${t?"-":"+"}=16`,alpha:t?0:1,ease:"Sine.easeInOut",duration:R,onComplete:r(()=>{t&&E&&(s.field.remove(N,!0),S.forEach(T=>{T.leaveField(!0,!0,!0)}),s.currentBattle.mysteryEncounter.introVisuals=void 0),I(!0)},"onComplete")})):I(!0)})}r(uE,"transitionMysteryEncounterIntroVisuals");function RQ(){const t=s.currentBattle.mysteryEncounter;s.currentBattle.isBattleMysteryEncounter()&&t&&t.encounterMode!==JE.NO_BATTLE&&!t.startOfBattleEffectsComplete&&(t.startOfBattleEffects.forEach(R=>{let I;R.sourcePokemon?I=R.sourcePokemon:Ne(R.sourceBattlerIndex)?I=s.getEnemyField()[0]:R.sourceBattlerIndex===FA.ATTACKER?I=s.getEnemyField()[0]:R.sourceBattlerIndex===FA.ENEMY?I=s.getEnemyField()[0]:R.sourceBattlerIndex===FA.ENEMY_2?I=s.getEnemyField()[1]:R.sourceBattlerIndex===FA.PLAYER?I=s.getPlayerField()[0]:R.sourceBattlerIndex===FA.PLAYER_2&&(I=s.getPlayerField()[1]),s.pushPhase(new lE(I,R.targets,R.move,R.followUp,R.ignorePp))}),s.pushPhase(new DG),t.startOfBattleEffectsComplete=!0)}r(RQ,"handleMysteryEncounterBattleStartEffects");function OQ(){const t=s.currentBattle.mysteryEncounter;return s.currentBattle.isBattleMysteryEncounter()&&t&&t.onTurnStart?t.onTurnStart():!1}r(OQ,"handleMysteryEncounterTurnStartEffects");function Lc(t,E=!1,R=!1){let I,N=!1;const S=vE.getEventEncounters();let T;if(S.length>0&&De(2)===1){const o=SE(S),C=de(o.species).getWildSpeciesForLevel(t,!o.blockEvolution,E,s.gameMode);N=!0,I=de(C),T=o.formIndex}else I=s.arena.randomSpecies(s.currentBattle.waveIndex,t,0,pa(s.getPlayerParty()),E);const i=new pR(I,t,b.NONE,E);return T&&(i.formIndex=T),N&&i.trySetShinySeed(),R&&i.abilityIndex!==2&&i.species.abilityHidden&&i.tryRerollHiddenAbilitySeed(),i}r(Lc,"getRandomEncounterSpecies");const pf=class pf extends Nt{constructor(E=!1){super(),this.loaded=E}start(){var S,T,i,o;super.start(),s.updateGameInfo(),s.initSession(),s.eventTarget.dispatchEvent(new lP),s.gameMode.isClassic&&s.currentBattle.waveIndex>200&&s.unshiftPhase(new $O);const E=[],R=s.currentBattle;R.isBattleMysteryEncounter()&&!R.mysteryEncounter&&s.executeWithSeedOffset(()=>{const C=R.mysteryEncounterType;R.mysteryEncounter=s.getMysteryEncounter(C)},R.waveIndex*16);const I=R.mysteryEncounter;I&&(s.executeWithSeedOffset(()=>{I.onInit&&I.onInit(),I.populateDialogueTokensFromRequirements()},R.waveIndex),I.encounterAnimations&&I.encounterAnimations.length>0&&E.push(OX(I.encounterAnimations).then(()=>LX(!0))),I.initIntroVisuals(),s.field.add(I.introVisuals));let N=0;if((S=R.enemyLevels)==null||S.every((C,U)=>{var c,f;if(R.isBattleMysteryEncounter())return!1;if(!this.loaded)if(R.battleType===AA.TRAINER)R.enemyParty[U]=(c=R.trainer)==null?void 0:c.genPartyMember(U);else{let d=s.randomSpecies(R.waveIndex,C,!0);s.findModifier(w=>w instanceof zr)&&!s.gameMode.isBoss(R.waveIndex)&&s.arena.biomeType!==n.END&&De(10)===0&&(d=aZ(C)),R.enemyParty[U]=s.addEnemyPokemon(d,C,b.NONE,!!s.getEncounterBossSegments(R.waveIndex,C,d)),s.currentBattle.battleSpec===tt.FINAL_BOSS&&(R.enemyParty[U].ivs=new Array(6).fill(31)),s.getPlayerParty().slice(0,R.double?2:1).reverse().forEach(w=>{sA(Bl,w,null,!1,R.enemyParty[U])})}const _=s.getEnemyParty()[U];U<(R.double?2:1)&&(_.setX(-66+_.getFieldPositionOffset()[0]),_.fieldSetup(!0)),this.loaded||s.gameData.setPokemonSeen(_,!0,R.battleType===AA.TRAINER||((f=R==null?void 0:R.mysteryEncounter)==null?void 0:f.encounterMode)===JE.TRAINER_BATTLE),_.species.speciesId===e.ETERNATUS&&(s.gameMode.isClassic&&(R.battleSpec===tt.FINAL_BOSS||s.gameMode.isWaveFinal(R.waveIndex))?(R.battleSpec!==tt.FINAL_BOSS&&(_.formIndex=1,_.updateScale()),_.setBoss()):R.waveIndex%1e3||(_.formIndex=1,_.updateScale())),N+=_.getSpeciesForm().baseTotal,E.push(_.loadAssets());const G=[`HP: ${_.stats[0]} (${_.ivs[0]})`,` Atk: ${_.stats[1]} (${_.ivs[1]})`,` Def: ${_.stats[2]} (${_.ivs[2]})`,` Spatk: ${_.stats[3]} (${_.ivs[3]})`,` Spdef: ${_.stats[4]} (${_.ivs[4]})`,` Spd: ${_.stats[5]} (${_.ivs[5]})`],H=[];for(const d of _.getMoveset())H.push(d.getName());return console.log(`Pokemon: ${Z(_)}`,`| Species ID: ${_.species.speciesId}`,`| Level: ${_.level}`,`| Nature: ${QO(_.nature,!0,!0,!0)}`),console.log(`Stats (IVs): ${G}`),console.log(`Ability: ${_.getAbility().name}`,`| Passive Ability${_.hasPassive()?"":" (inactive)"}: ${_.getPassiveAbility().name}`,`${_.isBoss()?`| Boss Bars: ${_.bossSegments}`:""}`),console.log("Moveset:",H),!0}),s.getPlayerParty().filter(C=>C.isShiny()).length===rP&&s.validateAchv(oA.SHINY_PARTY),R.battleType===AA.TRAINER)E.push((T=R.trainer)==null?void 0:T.loadAssets().then(()=>{var C;return(C=R.trainer)==null?void 0:C.initSprite()}));else if(R.isBattleMysteryEncounter())(i=R.mysteryEncounter)!=null&&i.introVisuals&&E.push(R.mysteryEncounter.introVisuals.loadAssets().then(()=>R.mysteryEncounter.introVisuals.initSprite())),(o=R.mysteryEncounter)!=null&&o.loadAssets&&R.mysteryEncounter.loadAssets.length>0&&E.push(...R.mysteryEncounter.loadAssets),E.push(new Promise(C=>{s.loadSe("GEN8- Exclaim","battle_anims","GEN8- Exclaim.wav"),s.loadImage("encounter_exclaim","mystery-encounters"),s.load.once(Phaser.Loader.Events.COMPLETE,()=>C()),s.load.isLoading()||s.load.start()}));else if(!(Ze.OPP_HEALTH_SEGMENTS_OVERRIDE>1)&&R.enemyParty.filter(U=>U.isBoss()).length>1)for(const U of R.enemyParty)U.isBoss()&&!U.isPopulatedFromDataSource&&(U.setBoss(!0,Math.ceil(U.bossSegments*(U.getSpeciesForm().baseTotal/N))),U.initBattleInfo());Promise.all(E).then(()=>{if(R.enemyParty.every((C,U)=>{var _;if(R.isBattleMysteryEncounter())return!1;if(U<(R.double?2:1)){if(R.battleType===AA.WILD){for(const H of s.getField())ic(es,H,[]);s.field.add(C),R.seenEnemyPartyMemberIds.add(C.id);const G=s.getPlayerPokemon();G!=null&&G.isOnField()&&s.field.moveBelow(C,G),C.tint(0,.5)}else R.battleType===AA.TRAINER&&(C.setVisible(!1),(_=s.currentBattle.trainer)==null||_.tint(0,.5));R.double&&C.setFieldPosition(U?RR.RIGHT:RR.LEFT)}return!0}),!this.loaded&&R.battleType!==AA.MYSTERY_ENCOUNTER){jL(s.getEnemyField(),R.battleType===AA.TRAINER?lt.TRAINER:lt.WILD),s.generateEnemyModifiers(),Uc(!1);for(const C of s.getEnemyField())Dc(C,!1)}R.battleType===AA.TRAINER&&s.currentBattle.trainer&&s.currentBattle.trainer.genAI(s.getEnemyParty()),s.ui.setMode(Ce.MESSAGE).then(()=>{this.loaded?(this.doEncounter(),s.resetSeed()):(this.trySetWeatherIfNewBiome(),s.gameData.saveAll(!0,R.waveIndex%5===1||(s.lastSavePlayTime??0)>=300).then(C=>{if(s.disableMenu=!1,!C)return s.reset(!0);this.doEncounter(),s.resetSeed()}))})})}doEncounter(){var S,T;s.playBgm(void 0,!0),s.updateModifiers(!1),s.setFieldScale(1);const{battleType:E,waveIndex:R}=s.currentBattle;s.isMysteryEncounterValidForWave(E,R)&&!s.currentBattle.isBattleMysteryEncounter()&&(s.mysteryEncounterSaveData.encounterSpawnChance+=o9);for(const i of s.getPlayerParty())i&&i.resetWaveData();const I=s.getEnemyField();s.tweens.add({targets:[s.arenaEnemy,s.currentBattle.trainer,I,s.arenaPlayer,s.trainer].flat(),x:r((i,o,C,U)=>U<2+I.length?C+300:C-300,"x"),duration:2e3,onComplete:r(()=>{this.tryOverrideForBattleSpec()||this.doEncounterCommon()},"onComplete")});const N=(T=(S=s.currentBattle)==null?void 0:S.mysteryEncounter)==null?void 0:T.introVisuals;if(N){const i=N.enterFromRight;i&&(N.x+=500),s.tweens.add({targets:N,x:i?"-=200":"+=300",duration:2e3})}}getEncounterMessage(){var R,I;const E=s.getEnemyField();return s.currentBattle.battleSpec===tt.FINAL_BOSS?D.t("battle:bossAppeared",{bossName:Z(E[0])}):s.currentBattle.battleType===AA.TRAINER?s.currentBattle.double?D.t("battle:trainerAppearedDouble",{trainerName:(R=s.currentBattle.trainer)==null?void 0:R.getName(b.NONE,!0)}):D.t("battle:trainerAppeared",{trainerName:(I=s.currentBattle.trainer)==null?void 0:I.getName(b.NONE,!0)}):E.length===1?D.t("battle:singleWildAppeared",{pokemonName:E[0].getNameToRender()}):D.t("battle:multiWildAppeared",{pokemonName1:E[0].getNameToRender(),pokemonName2:E[1].getNameToRender()})}doEncounterCommon(E=!0){var I,N;const R=s.getEnemyField();if(s.currentBattle.battleType===AA.WILD){for(const S of R)S.untint(100,"Sine.easeOut"),S.cry(),S.showInfo(),S.isShiny()&&s.validateAchv(oA.SEE_SHINY);s.updateFieldScale(),E?s.ui.showText(this.getEncounterMessage(),null,()=>this.end(),1500):this.end()}else if(s.currentBattle.battleType===AA.TRAINER){const S=s.currentBattle.trainer;S==null||S.untint(100,"Sine.easeOut"),S==null||S.playAnim();const T=r(()=>{s.currentBattle.started=!0,s.playBgm(void 0),s.pbTray.showPbTray(s.getPlayerParty()),s.pbTrayEnemy.showPbTray(s.getEnemyParty());const o=r(()=>{this.hideEnemyTrainer();const C=s.getEnemyParty().filter(U=>!U.isFainted()).length;s.unshiftPhase(new Ft(0,!1)),s.currentBattle.double&&C>1&&s.unshiftPhase(new Ft(1,!1)),this.end()},"doTrainerSummon");E?s.ui.showText(this.getEncounterMessage(),null,o,1500,!0):o()},"doSummon"),i=(I=s.currentBattle.trainer)==null?void 0:I.getEncounterMessages();if(!(i!=null&&i.length))T();else{let o;s.executeWithSeedOffset(()=>o=SE(i),s.currentBattle.waveIndex),o=o;const C=r(()=>{s.ui.showDialogue(o,S==null?void 0:S.getName(b.NONE,!0),null,()=>{s.charSprite.hide().then(()=>s.hideFieldOverlay(250).then(()=>T()))})},"showDialogueAndSummon");(N=s.currentBattle.trainer)!=null&&N.config.hasCharSprite&&!s.ui.shouldSkipDialogue(o)?s.showFieldOverlay(500).then(()=>s.charSprite.showCharacter(S==null?void 0:S.getKey(),_M(i[0])).then(()=>C())):C()}}else if(s.currentBattle.isBattleMysteryEncounter()&&s.currentBattle.mysteryEncounter){const S=s.currentBattle.mysteryEncounter,T=S.introVisuals;T==null||T.playAnim(),S.onVisualsStart?S.onVisualsStart():S.spriteConfigs&&T&&T.playShinySparkles();const i=r(()=>{const C=r(()=>{s.ui.clearText(),s.ui.getMessageHandler().hideNameText(),s.unshiftPhase(new LC),this.end()},"doShowEncounterOptions");if(E){const U=S.dialogue.intro;if(!U)C();else{let G=0;const H=r(()=>{const c=G===U.length-1?C:H,f=U[G],d=xE(f==null?void 0:f.speaker),w=xE(f.text);G++,d?s.ui.showDialogue(w,d,null,c,0,G===1?750:0):s.ui.showText(w,null,c,G===1?750:0,!0)},"showNextDialogue");U.length>0&&H()}}else C()},"doEncounter"),o=D.t("battle:mysteryEncounterAppeared");o?(EZ(),s.ui.showDialogue(o,"???",null,()=>{s.charSprite.hide().then(()=>s.hideFieldOverlay(250).then(()=>i()))})):i()}}end(){const E=s.getEnemyField();if(E.forEach((R,I)=>{if(R.isShiny(!0)&&s.unshiftPhase(new xa(FA.ENEMY+I)),R.species.speciesId===e.ETERNATUS&&(s.gameMode.isBattleClassicFinalBoss(s.currentBattle.waveIndex)||s.gameMode.isEndlessMajorBoss(s.currentBattle.waveIndex))){const N=s.findModifier(S=>S instanceof tT,!1);N&&(s.removeModifier(N,!0),N.setTransferrableFalse(),s.addEnemyModifier(N))}}),[AA.TRAINER,AA.MYSTERY_ENCOUNTER].includes(s.currentBattle.battleType)||(E.map(I=>s.pushConditionalPhase(new vN(I.getBattlerIndex()),()=>{if(!s.getPlayerParty().length)return!1;const N=s.getPlayerParty().filter(T=>T.isOnField()).length,S=Math.min(s.getPlayerParty().filter(T=>!T.isFainted()).length,2);return s.currentBattle.double?N===S:N===1})),s.findModifier(I=>I instanceof os)&&E.map(I=>s.pushPhase(new Za(I.getBattlerIndex())))),!this.loaded){const R=s.getPokemonAllowedInBattle();if(R[0].isOnField()||s.pushPhase(new Ft(0)),s.currentBattle.double?R.length>1&&(s.pushPhase(new _I(!0)),R[1].isOnField()||s.pushPhase(new Ft(1))):(R.length>1&&R[1].isOnField()&&s.pushPhase(new ba(1)),s.pushPhase(new _I(!1))),s.currentBattle.battleType!==AA.TRAINER&&(s.currentBattle.waveIndex>1||!s.gameMode.isDaily)){const I=s.currentBattle.double?2:1;R.length>I&&(s.pushPhase(new GI(0,s.currentBattle.double)),s.currentBattle.double&&s.pushPhase(new GI(1,s.currentBattle.double)))}}$1(PL.Access_Menu).then(()=>super.end())}tryOverrideForBattleSpec(){switch(s.currentBattle.battleSpec){case tt.FINAL_BOSS:{const E=s.getEnemyPokemon();return s.ui.showText(this.getEncounterMessage(),null,()=>{const R="battleSpecDialogue:encounter";if(s.ui.shouldSkipDialogue(R))console.log(`Dialogue ${R} skipped`),this.doEncounterCommon(!1);else{const I=5643853+s.gameData.gameStats.classicSessionsPlayed,N=!D.exists(R,{fallbackLng:[]})||D.resolvedLanguage==="en"?D.t("battleSpecDialogue:key",{count:I,ordinal:!0}):"",S=I.toLocaleString()+N,T=s.gameData.gender??YA.UNSET,i=YA[T].toLowerCase(),o=D.t(R,{context:i,cycleCount:S});s.gameData.getSeenDialogues()[R]||s.gameData.saveSeenDialogue(R),s.ui.showDialogue(o,E==null?void 0:E.species.name,null,()=>{this.doEncounterCommon(!1)})}},1500,!0),!0}}return!1}trySetWeatherIfNewBiome(){this.loaded||s.arena.trySetWeather(Wx(s.arena))}};r(pf,"EncounterPhase");let sC=pf;const yf=class yf extends bE{start(){super.start(),s.ui.getMessageHandler().bg.setVisible(!1),s.ui.getMessageHandler().nameBoxContainer.setVisible(!1),this.endCard=s.add.image(0,0,`end_${s.gameData.gender===YA.FEMALE?"f":"m"}`),this.endCard.setOrigin(0),this.endCard.setScale(.5),s.field.add(this.endCard),this.text=We(s.game.canvas.width/12,s.game.canvas.height/6-16,D.t("battle:congratulations"),Se.SUMMARY,{fontSize:"128px"}),this.text.setOrigin(.5),s.field.add(this.text),s.ui.clearText(),s.ui.fadeIn(1e3).then(()=>{s.ui.showText("",null,()=>{s.ui.getMessageHandler().bg.setVisible(!0),this.end()},null,!0)})}};r(yf,"EndCardPhase");let SC=yf;const wf=class wf extends zE{doReward(){return new Promise(E=>{const R=this.modifierType.newModifier();s.addModifier(R),s.playSound("level_up_fanfare"),s.ui.setMode(Ce.MESSAGE),s.ui.fadeIn(250).then(()=>{s.ui.showText(D.t("battle:rewardGain",{modifierName:R==null?void 0:R.type.name}),null,()=>{s.time.delayedCall(1500,()=>s.arenaBg.setVisible(!0)),E()},null,!0,1500)})})}};r(wf,"GameOverModifierRewardPhase");let WG=wf;const rT=5,EL=3;var TC=(t=>(t[t.LOAD=0]="LOAD",t[t.SAVE=1]="SAVE",t))(TC||{});const Vf=class Vf extends aS{constructor(){super(Ce.SAVE_SLOT),this.scrollCursor=0}setup(){const E=this.getUi();this.saveSlotSelectContainer=s.add.container(0,0),this.saveSlotSelectContainer.setVisible(!1),E.add(this.saveSlotSelectContainer);const R=s.add.rectangle(0,0,s.game.canvas.width/6,-s.game.canvas.height/6,26720);R.setOrigin(0,0),this.saveSlotSelectContainer.add(R),this.sessionSlotsContainerInitialY=-s.game.canvas.height/6+8,this.sessionSlotsContainer=s.add.container(8,this.sessionSlotsContainerInitialY),this.saveSlotSelectContainer.add(this.sessionSlotsContainer),this.saveSlotSelectMessageBoxContainer=s.add.container(0,0),this.saveSlotSelectMessageBoxContainer.setVisible(!1),this.saveSlotSelectContainer.add(this.saveSlotSelectMessageBoxContainer),this.saveSlotSelectMessageBox=bt(1,-1,318,28),this.saveSlotSelectMessageBox.setOrigin(0,1),this.saveSlotSelectMessageBoxContainer.add(this.saveSlotSelectMessageBox),this.message=We(8,8,"",Se.WINDOW,{maxLines:2}),this.message.setOrigin(0,0),this.saveSlotSelectMessageBoxContainer.add(this.message),this.sessionSlots=[]}show(E){return E.length<2||!(E[1]instanceof Function)?!1:(super.show(E),this.uiMode=E[0],this.saveSlotSelectCallback=E[1],this.saveSlotSelectContainer.setVisible(!0),this.populateSessionSlots(),this.setScrollCursor(0),this.setCursor(0),!0)}processInput(E){const R=this.getUi();let I=!1,N=!1;if(E===he.ACTION||E===he.CANCEL){const S=this.saveSlotSelectCallback;if(E===he.ACTION){const T=this.cursor+this.scrollCursor;if(this.uiMode===0&&!this.sessionSlots[T].hasData)N=!0;else{switch(this.uiMode){case 0:this.saveSlotSelectCallback=null,S==null||S(T);break;case 1:{const i=r(()=>{const o=this.saveSlotSelectCallback;this.saveSlotSelectCallback=null,R.revertMode(),R.showText("",0),R.setMode(Ce.MESSAGE),o==null||o(T)},"saveAndCallback");if(this.sessionSlots[T].hasData)R.showText(D.t("saveSlotSelectUiHandler:overwriteData"),null,()=>{R.setOverlayMode(Ce.CONFIRM,()=>{s.gameData.deleteSession(T).then(o=>{o===!1?s.reset(!0):i()})},()=>{R.revertMode(),R.showText("",0)},!1,0,19,2e3)});else if(this.sessionSlots[T].hasData===!1)i();else return!1;break}}I=!0}}else this.saveSlotSelectCallback=null,S==null||S(-1),I=!0}else{const S=this.cursor+this.scrollCursor;switch(E){case he.UP:this.cursor?I=this.cursor===0?this.setCursor(this.cursor):this.setCursor(this.cursor-1,S):this.scrollCursor?I=this.setScrollCursor(this.scrollCursor-1,S):this.cursor===0&&this.scrollCursor===0&&(this.setScrollCursor(rT-EL),this.revertSessionSlot(rT-EL),this.setCursor(EL-1),I=!0);break;case he.DOWN:this.cursor<EL-1?I=this.setCursor(this.cursor+1,S):this.scrollCursor<rT-EL?I=this.setScrollCursor(this.scrollCursor+1,S):this.cursor===EL-1&&this.scrollCursor===rT-EL&&(this.setScrollCursor(0),this.revertSessionSlot(EL-1),this.setCursor(0),I=!0);break;case he.RIGHT:this.sessionSlots[S].hasData&&this.sessionSlots[S].saveData&&(s.ui.setOverlayMode(Ce.RUN_INFO,this.sessionSlots[S].saveData,Ec.SESSION_PREVIEW),I=!0)}}return I?R.playSelect():N&&R.playError(),I||N}populateSessionSlots(){for(let E=0;E<rT;E++){const R=new mG(E);s.add.existing(R),this.sessionSlotsContainer.add(R),this.sessionSlots.push(R),R.load().then(I=>{I&&this.cursor+this.scrollCursor===E&&this.setCursor(E)})}}showText(E,R,I,N,S,T){super.showText(E,R,I,N,S,T),(E==null?void 0:E.indexOf(`
`))===-1?(this.saveSlotSelectMessageBox.setSize(318,28),this.message.setY(-22)):(this.saveSlotSelectMessageBox.setSize(318,42),this.message.setY(-37)),this.saveSlotSelectMessageBoxContainer.setVisible(!!(E!=null&&E.length))}setCursor(E,R){const I=super.setCursor(E);if(!this.cursorObj){this.cursorObj=s.add.container(0,0);const T=s.add.nineslice(0,0,"select_cursor_highlight_thick",void 0,296,44,6,6,6,6),i=s.add.image(0,0,"cursor");i.setPosition(160,0),i.setName("rightArrow"),this.cursorObj.add([T,i]),this.sessionSlotsContainer.add(this.cursorObj)}const N=E+this.scrollCursor,S=N*56;if(this.sessionSlots[N]&&this.cursorObj){const T=this.sessionSlots[N].hasData;T?(this.cursorObj.setPosition(145,26+S),this.sessionSlots[N].setPosition(-6,S)):(this.cursorObj.setPosition(151,26+S),this.sessionSlots[N].setPosition(0,S)),this.setArrowVisibility(T)}return Ne(R)||this.revertSessionSlot(R),I}revertSessionSlot(E){const R=this.sessionSlots[E];R&&R.setPosition(0,E*56)}setArrowVisibility(E){var R;this.cursorObj&&((R=this.cursorObj)==null?void 0:R.getByName("rightArrow")).setVisible(E)}setScrollCursor(E,R){const I=E!==this.scrollCursor;return I&&(this.scrollCursor=E,this.setCursor(this.cursor,R),s.tweens.add({targets:this.sessionSlotsContainer,y:this.sessionSlotsContainerInitialY-56*E,duration:KA(325),ease:"Sine.easeInOut"})),I}clear(){super.clear(),this.saveSlotSelectContainer.setVisible(!1),this.setScrollCursor(0),this.eraseCursor(),this.saveSlotSelectCallback=null,this.clearSessionSlots()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}clearSessionSlots(){this.sessionSlots.splice(0,this.sessionSlots.length),this.sessionSlotsContainer.removeAll(!0)}};r(Vf,"SaveSlotSelectUiHandler");let r2=Vf;const vf=class vf extends Phaser.GameObjects.Container{constructor(E){super(s,0,E*56),this.slotId=E,this.setup()}setup(){const E=bt(0,0,304,52);this.add(E),this.loadingLabel=We(152,26,D.t("saveSlotSelectUiHandler:loading"),Se.WINDOW),this.loadingLabel.setOrigin(.5,.5),this.add(this.loadingLabel)}async setupWithData(E){this.remove(this.loadingLabel,!0);const R=We(8,5,`${$R.getModeName(E.gameMode)||D.t("gameMode:unkown")} - ${D.t("saveSlotSelectUiHandler:wave")} ${E.waveIndex}`,Se.WINDOW);this.add(R);const I=We(8,19,new Date(E.timestamp).toLocaleString(),Se.WINDOW);this.add(I);const N=We(8,33,w1(E.playTime),Se.WINDOW);this.add(N);const S=s.add.container(144,4);E.party.forEach((o,C)=>{const U=s.add.container(26*C,0);U.setScale(.75);const _=o.toPokemon(),G=s.addPokemonIcon(_,0,0,0,0),H=We(32,20,`${D.t("saveSlotSelectUiHandler:lv")}${Js(_.level,1e3)}`,Se.PARTY,{fontSize:"54px",color:"#f8f8f8"});H.setShadow(0,0,void 0),H.setStroke("#424242",14),H.setOrigin(1,0),U.add(G),U.add(H),S.add(U),_.destroy()}),this.add(S);const T=s.add.container(148,30);T.setScale(.5);let i=0;for(const o of E.modifiers){const C=o.toModifier(_o[o.className]);if(C instanceof DA)continue;const U=C==null?void 0:C.getIcon(!1);if(U&&(U.setPosition(24*i,0),T.add(U)),++i===12)break}this.add(T)}load(){return new Promise(E=>{s.gameData.getSession(this.slotId).then(async R=>{if(this.active){if(!R){this.hasData=!1,this.loadingLabel.setText(D.t("saveSlotSelectUiHandler:empty")),E(!1);return}this.hasData=!0,this.saveData=R,await this.setupWithData(R),E(!0)}})})}};r(vf,"SessionSlot");let mG=vf;const xf=class xf extends bE{start(){super.start(),s.playBgm("menu"),s.ui.setMode(Ce.CHALLENGE_SELECT)}};r(xf,"SelectChallengePhase");let gG=xf;const bf=class bf extends bE{start(){super.start(),s.playBgm("menu"),s.ui.setMode(Ce.STARTER_SELECT,E=>{s.ui.clearText(),s.ui.setMode(Ce.SAVE_SLOT,TC.SAVE,R=>{if(R===-1)return s.clearPhaseQueue(),s.pushPhase(new nC),this.end();s.sessionSlotId=R,this.initBattle(E)})})}initBattle(E){const R=s.getPlayerParty(),I=[];E.forEach((N,S)=>{!S&&Ze.STARTER_SPECIES_OVERRIDE&&(N.species=de(Ze.STARTER_SPECIES_OVERRIDE));const T=s.gameData.getSpeciesDexAttrProps(N.species,N.dexAttr);let i=Math.min(T.formIndex,Math.max(N.species.forms.length-1,0));N.species.speciesId in Ze.STARTER_FORM_OVERRIDES&&!Ne(Ze.STARTER_FORM_OVERRIDES[N.species.speciesId])&&N.species.forms[Ze.STARTER_FORM_OVERRIDES[N.species.speciesId]]&&(i=Ze.STARTER_FORM_OVERRIDES[N.species.speciesId]);let o=N.species.malePercent!==null?T.female?ye.FEMALE:ye.MALE:ye.GENDERLESS;Ze.GENDER_OVERRIDE!==null&&(o=Ze.GENDER_OVERRIDE);const C=s.gameData.dexData[N.species.speciesId].ivs.slice(0),U=s.addPlayerPokemon(N.species,s.gameMode.getStartingLevel(),N.abilityIndex,i,o,T.shiny,T.variant,C,N.nature);N.moveset&&U.tryPopulateMoveset(N.moveset),N.passive&&(U.passive=!0),U.luck=s.gameData.getDexAttrLuck(s.gameData.dexData[N.species.speciesId].caughtAttr),N.pokerus&&(U.pokerus=!0),N.nickname&&(U.nickname=N.nickname),Ne(N.teraType)?U.teraType=U.species.type1:U.teraType=N.teraType,(s.gameMode.isSplicedOnly||Ze.STARTER_FUSION_OVERRIDE)&&U.generateFusionSpecies(!0),U.setVisible(!1),JR(PO.STARTER_MODIFY,U),R.push(U),I.push(U.loadAssets())}),Uc(),Dc(R[0]),Promise.all(I).then(()=>{uL.fadeOut(s,s.sound.get("menu"),500,!0),s.time.delayedCall(500,()=>s.playBgm()),s.gameMode.isClassic?s.gameData.gameStats.classicSessionsPlayed++:s.gameData.gameStats.endlessSessionsPlayed++,s.newBattle(),s.arena.init(),s.sessionPlayTime=0,s.lastSavePlayTime=0,s.getPlayerParty().forEach(N=>{s.triggerPokemonFormChange(N,yN)}),this.end()})}};r(bf,"SelectStarterPhase");let pG=bf;const on=class on extends bE{constructor(){super(...arguments),this.loaded=!1}start(){super.start(),s.ui.clearText(),s.ui.fadeIn(250),s.playBgm("title",!0),s.gameData.getSession((ke==null?void 0:ke.lastSessionSlot)??-1).then(E=>{if(E){this.lastSessionData=E;const I=`${ni(E.arena.biome)}_bg`;s.arenaBg.setTexture(I)}this.showOptions()}).catch(E=>{console.error(E),this.showOptions()})}showOptions(){const E=[];ke&&ke.lastSessionSlot>-1&&E.push({label:D.t("continue",{ns:"menu"}),handler:r(()=>(this.loadSaveSlot(this.lastSessionData||!ke?-1:ke.lastSessionSlot),!0),"handler")}),E.push({label:D.t("menu:newGame"),handler:r(()=>{const I=r(T=>{this.gameMode=T,s.ui.setMode(Ce.MESSAGE),s.ui.clearText(),this.end()},"setModeAndEnd"),{gameData:N}=s,S=[];return S.push({label:$R.getModeName(AE.CLASSIC),handler:r(()=>(I(AE.CLASSIC),!0),"handler")}),S.push({label:D.t("menu:dailyRun"),handler:r(()=>(this.initDailyRun(),!0),"handler")}),N.isUnlocked(tR.ENDLESS_MODE)&&(S.push({label:$R.getModeName(AE.CHALLENGE),handler:r(()=>(I(AE.CHALLENGE),!0),"handler")}),S.push({label:$R.getModeName(AE.ENDLESS),handler:r(()=>(I(AE.ENDLESS),!0),"handler")}),N.isUnlocked(tR.SPLICED_ENDLESS_MODE)&&S.push({label:$R.getModeName(AE.SPLICED_ENDLESS),handler:r(()=>(I(AE.SPLICED_ENDLESS),!0),"handler")})),S.push({label:D.t("menu:cancel"),handler:r(()=>(s.clearPhaseQueue(),s.pushPhase(new on),super.end(),!0),"handler")}),s.ui.showText(D.t("menu:selectGameMode"),null,()=>s.ui.setOverlayMode(Ce.OPTION_SELECT,{options:S})),!0},"handler")},{label:D.t("menu:loadGame"),handler:r(()=>(s.ui.setOverlayMode(Ce.SAVE_SLOT,TC.LOAD,I=>{if(I===-1)return this.showOptions();this.loadSaveSlot(I)}),!0),"handler")},{label:D.t("menu:runHistory"),handler:r(()=>(s.ui.setOverlayMode(Ce.RUN_HISTORY),!0),"handler"),keepOpen:!0},{label:D.t("menu:settings"),handler:r(()=>(s.ui.setOverlayMode(Ce.SETTINGS),!0),"handler"),keepOpen:!0});const R={options:E,noCancel:!0,yOffset:47};s.ui.setMode(Ce.TITLE,R)}loadSaveSlot(E){s.sessionSlotId=E>-1||!ke?E:ke.lastSessionSlot,s.ui.setMode(Ce.MESSAGE),s.ui.resetModeChain(),s.gameData.loadSession(E,E===-1?this.lastSessionData:void 0).then(R=>{R?(this.loaded=!0,s.ui.showText(D.t("menu:sessionSuccess"),null,()=>this.end())):this.end()}).catch(R=>{console.error(R),s.ui.showText(D.t("menu:failedToLoadSession"),null)})}initDailyRun(){s.ui.clearText(),s.ui.setMode(Ce.SAVE_SLOT,TC.SAVE,E=>{if(s.clearPhaseQueue(),E===-1)return s.pushPhase(new on),super.end();s.sessionSlotId=E;const R=r(I=>{s.gameMode=bP(AE.DAILY),s.eventManager.startEventChallenges(),s.setSeed(I),s.resetSeed(0),s.money=s.gameMode.getStartingMoney();const N=w8(I),S=s.gameMode.getStartingLevel(),T=s.getPlayerParty(),i=[];for(const C of N){const U=s.gameData.getSpeciesDexAttrProps(C.species,C.dexAttr),_=Math.min(U.formIndex,Math.max(C.species.forms.length-1,0)),G=C.species.malePercent!==null?U.female?ye.FEMALE:ye.MALE:ye.GENDERLESS,H=s.addPlayerPokemon(C.species,S,C.abilityIndex,_,G,U.shiny,U.variant,void 0,C.nature);H.setVisible(!1),T.push(H),i.push(H.loadAssets())}jL(T,lt.DAILY_STARTER);const o=Array(3).fill(null).map(()=>x.EXP_SHARE().withIdFromFunc(x.EXP_SHARE).newModifier()).concat(Array(3).fill(null).map(()=>x.GOLDEN_EXP_CHARM().withIdFromFunc(x.GOLDEN_EXP_CHARM).newModifier())).concat([x.MAP().withIdFromFunc(x.MAP).newModifier()]).concat(ux(T)).filter(C=>C!==null);for(const C of o)s.addModifier(C,!0,!1,!1,!0);s.updateModifiers(!0,!0),Promise.all(i).then(()=>{s.time.delayedCall(500,()=>s.playBgm()),s.gameData.gameStats.dailyRunSessionsPlayed++,s.newArena(s.gameMode.getStartingBiome()),s.newBattle(),s.arena.init(),s.sessionPlayTime=0,s.lastSavePlayTime=0,this.end()})},"generateDaily");if(!DM||Cv)y8().then(I=>{if(I)R(I);else throw new Error("Daily run seed is null!")}).catch(I=>{console.error(`Failed to load daily run:
`,I)});else{let I=btoa(new Date().toISOString().substring(0,10));Ne(Ze.DAILY_RUN_SEED_OVERRIDE)||(I=Ze.DAILY_RUN_SEED_OVERRIDE),R(I)}})}end(){if(!this.loaded&&!s.gameMode.isDaily?(s.arena.preloadBgm(),s.gameMode=bP(this.gameMode),this.gameMode===AE.CHALLENGE?s.pushPhase(new gG):s.pushPhase(new pG),s.newArena(s.gameMode.getStartingBiome())):s.playBgm(),s.pushPhase(new sC(this.loaded)),this.loaded){const E=s.getPokemonAllowedInBattle().length;if(s.pushPhase(new Ft(0,!0,!0)),s.currentBattle.double&&E>1&&s.pushPhase(new Ft(1,!0,!0)),s.currentBattle.battleType!==AA.TRAINER&&(s.currentBattle.waveIndex>1||!s.gameMode.isDaily)){const R=s.currentBattle.double?2:1;E>R&&(s.pushPhase(new GI(0,s.currentBattle.double)),s.currentBattle.double&&s.pushPhase(new GI(1,s.currentBattle.double)))}}for(const E of Object.keys(s.gameData.achvUnlocks))bO.hasOwnProperty(E)&&E!=="CLASSIC_VICTORY"&&s.validateVoucher(bO[E]);super.end()}};r(on,"TitlePhase");let nC=on;const Zf=class Zf extends bE{constructor(E){super(),this.endCardPhase=E}start(){super.start();const E=r(()=>{s.gameData.saveAll(!0,!0,!0).then(R=>{if(!R)return s.reset(!0);s.gameData.tryClearSession(s.sessionSlotId).then(I=>{if(!I[0])return s.reset(!0);s.reset(),s.unshiftPhase(new nC),this.end()})})},"saveAndReset");this.endCardPhase?s.ui.fadeOut(500).then(()=>{var R,I;s.ui.getMessageHandler().bg.setVisible(!0),(R=this.endCardPhase)==null||R.endCard.destroy(),(I=this.endCardPhase)==null||I.text.destroy(),E()}):E()}};r(Zf,"PostGameOverPhase");let yG=Zf;const kf=class kf extends zE{constructor(E,R){super(E),this.species=R}doReward(){return new Promise(E=>{const R=this.modifierType.newModifier();s.addModifier(R),s.playSound("level_up_fanfare"),s.ui.setMode(Ce.MESSAGE),s.ui.showText(D.t("battle:beatModeFirstTime",{speciesName:this.species.name,gameMode:s.gameMode.getName(),newModifier:R==null?void 0:R.type.name}),null,()=>{E()},null,!0,1500)})}};r(kf,"RibbonModifierRewardPhase");let wG=kf;const Xf=class Xf extends bE{constructor(E){super(),this.unlockable=E}start(){s.time.delayedCall(2e3,()=>{s.gameData.unlocks[this.unlockable]=!0,s.playSound("level_up_fanfare"),s.ui.setMode(Ce.MESSAGE),s.ui.showText(D.t("battle:unlockedSomething",{unlockedThing:x8(this.unlockable)}),null,()=>{s.time.delayedCall(1500,()=>s.arenaBg.setVisible(!0)),this.end()},null,!0,1500)})}};r(Xf,"UnlockPhase");let gs=Xf;const EM=class EM extends bE{constructor(E,R,I,N,S){super(),this.text=E,this.callbackDelay=R,this.prompt=I,this.promptDelay=N,this.speaker=S}start(){if(super.start(),this.text.indexOf("$")>-1){const E=[],R=["#POKEMON1","#POKEMON2"];for(let N=0;N<s.getPlayerField().length;N++)E.push(s.getPlayerField()[N].getNameToRender()),this.text=this.text.split(E[N]).join(R[N]);const I=this.text.indexOf("$");if(I!==-1){let N=this.text.slice(0,I),S=this.text.slice(I+1);for(let T=0;T<s.getPlayerField().length;T++)N=N.split(R[T]).join(E[T]),S=S.split(R[T]).join(E[T]);s.unshiftPhase(new EM(S,this.callbackDelay,this.prompt,this.promptDelay,this.speaker)),this.text=N.trim()}else for(let N=0;N<s.getPlayerField().length;N++)this.text=this.text.split(R[N]).join(E[N])}this.speaker?s.ui.showDialogue(this.text,this.speaker,null,()=>this.end(),this.callbackDelay||(this.prompt?0:1500),this.promptDelay??0):s.ui.showText(this.text,null,()=>this.end(),this.callbackDelay||(this.prompt?0:1500),this.prompt,this.promptDelay)}};r(EM,"MessagePhase");let VG=EM;const Qf=class Qf extends Nt{constructor(E=!1){super(),this.firstRibbons=[],this.isVictory=E}start(){var E;if(super.start(),s.hideAbilityBar(),s.gameMode.isClassic&&s.currentBattle.waveIndex>200&&(this.isVictory=!0),!this.isVictory&&((E=s.currentBattle.mysteryEncounter)!=null&&E.onGameOver)&&!s.currentBattle.mysteryEncounter.onGameOver())return this.end();if(this.isVictory&&s.gameMode.isEndless){const R=s.gameData.gender??YA.UNSET,I=YA[R].toLowerCase();s.ui.showDialogue(D.t("miscDialogue:ending_endless",{context:I}),D.t("miscDialogue:ending_name"),0,()=>this.handleGameOver())}else this.isVictory||!s.enableRetries?this.handleGameOver():s.ui.showText(D.t("battle:retryBattle"),null,()=>{s.ui.setMode(Ce.CONFIRM,()=>{s.ui.fadeOut(1250).then(()=>{s.reset(),s.clearPhaseQueue(),s.gameData.loadSession(s.sessionSlotId).then(()=>{s.pushPhase(new sC(!0));const R=s.getPokemonAllowedInBattle().length;s.pushPhase(new Ft(0)),s.currentBattle.double&&R>1&&s.pushPhase(new Ft(1)),s.currentBattle.waveIndex>1&&s.currentBattle.battleType!==AA.TRAINER&&(s.pushPhase(new GI(0,s.currentBattle.double)),s.currentBattle.double&&R>1&&s.pushPhase(new GI(1,s.currentBattle.double))),s.ui.fadeIn(1250),this.end()})})},()=>this.handleGameOver(),!1,0,0,1e3)})}handleGameOver(){const E=r(R=>{s.disableMenu=!0,s.time.delayedCall(1e3,()=>{let I=!1;if(this.isVictory)if(s.gameMode.isClassic){I=s.validateAchv(oA.CLASSIC_VICTORY),s.validateAchv(oA.UNEVOLVED_CLASSIC_VICTORY),s.gameData.gameStats.sessionsWon++;for(const T of s.getPlayerParty())this.awardRibbon(T),T.species.getRootSpeciesId()!==T.species.getRootSpeciesId(!0)&&this.awardRibbon(T,!0)}else s.gameMode.isDaily&&R&&s.gameData.gameStats.dailyRunSessionsWon++;const N=this.isVictory?1e4:5e3;s.fadeOutBgm(N,!0);const S=s.getField().filter(T=>T==null?void 0:T.isActive(!0));S.map(T=>T.hideInfo()),s.ui.fadeOut(N).then(()=>{S.map(i=>i.setVisible(!1)),s.setFieldScale(1,!0),s.clearPhaseQueue(),s.ui.clearText(),this.isVictory&&s.gameMode.isChallenge&&s.gameMode.challenges.forEach(i=>s.validateAchvs(zA,i));const T=r(i=>{if(this.isVictory&&R){this.handleUnlocks();for(const o of this.firstRibbons)s.unshiftPhase(new wG(x.VOUCHER_PLUS,o));I||s.unshiftPhase(new WG(x.VOUCHER_PREMIUM))}this.getRunHistoryEntry().then(o=>{s.gameData.saveRunHistory(o,this.isVictory),s.pushPhase(new yG(i)),this.end()})},"clear");if(this.isVictory&&s.gameMode.isClassic){const i="miscDialogue:ending";if(!s.ui.shouldSkipDialogue(i))s.ui.fadeIn(500).then(()=>{const o=s.gameData.gender??YA.UNSET,C=YA[o].toLowerCase(),U=D.t(i,{context:C});s.charSprite.showCharacter(`rival_${s.gameData.gender===YA.FEMALE?"m":"f"}`,_M(U)).then(()=>{s.ui.showDialogue(i,s.gameData.gender===YA.FEMALE?yE[l.RIVAL].name:yE[l.RIVAL].nameFemale,null,()=>{s.ui.fadeOut(500).then(()=>{s.charSprite.hide().then(()=>{const _=new SC;s.unshiftPhase(_),T(_)})})})})});else{const o=new SC;s.unshiftPhase(o),T(o)}}else T()})})},"doGameOver");!DM||Cv?iv.savedata.session.newclear({slot:s.sessionSlotId,isVictory:this.isVictory,clientSessionId:xv}).then(R=>E(!s.gameMode.isDaily||!!R)).catch(R=>{s.clearPhaseQueue(),s.clearPhaseQueueSplice(),s.unshiftPhase(new VG(D.t("menu:serverCommunicationFailed"),2500)),setTimeout(()=>{window.location.reload()},2e3),this.end()}):this.isVictory?s.gameData.offlineNewClear().then(R=>{E(R)}):E(!1)}handleUnlocks(){this.isVictory&&s.gameMode.isClassic&&(s.gameData.unlocks[tR.ENDLESS_MODE]||s.unshiftPhase(new gs(tR.ENDLESS_MODE)),s.getPlayerParty().filter(E=>E.fusionSpecies).length&&!s.gameData.unlocks[tR.SPLICED_ENDLESS_MODE]&&s.unshiftPhase(new gs(tR.SPLICED_ENDLESS_MODE)),s.gameData.unlocks[tR.MINI_BLACK_HOLE]||s.unshiftPhase(new gs(tR.MINI_BLACK_HOLE)),!s.gameData.unlocks[tR.EVIOLITE]&&s.getPlayerParty().some(E=>E.getSpeciesForm(!0).speciesId in BA)&&s.unshiftPhase(new gs(tR.EVIOLITE)))}awardRibbon(E,R=!1){const I=de(E.species.speciesId);s.gameData.incrementRibbonCount(I,R)===1&&this.firstRibbons.push(de(E.species.getRootSpeciesId(R)))}async getRunHistoryEntry(){var R;const E=await s.gameData.getSession(s.sessionSlotId);return{seed:s.seed,playTime:s.sessionPlayTime,gameMode:s.gameMode.modeId,party:s.getPlayerParty().map(I=>new Zt(I)),enemyParty:s.getEnemyParty().map(I=>new Zt(I)),modifiers:E?E.modifiers:s.findModifiers(()=>!0).map(I=>new cN(I,!0)),enemyModifiers:E?E.enemyModifiers:s.findModifiers(()=>!0,!1).map(I=>new cN(I,!1)),arena:new wa(s.arena),pokeballCounts:s.pokeballCounts,money:Math.floor(s.money),score:s.score,waveIndex:s.currentBattle.waveIndex,battleType:s.currentBattle.battleType,trainer:s.currentBattle.trainer?new Va(s.currentBattle.trainer):null,gameVersion:s.game.config.gameVersion,timestamp:new Date().getTime(),challenges:s.gameMode.challenges.map(I=>new va(I)),mysteryEncounterType:((R=s.currentBattle.mysteryEncounter)==null?void 0:R.encounterType)??-1,mysteryEncounterSaveData:s.mysteryEncounterSaveData,playerFaints:s.arena.playerFaints}}};r(Qf,"GameOverPhase");let $O=Qf;const Cn=class Cn extends Nt{constructor(E){super(),this.isVictory=E}start(){for(super.start(),s.phaseQueue=s.phaseQueue.filter(R=>R instanceof Cn?(this.isVictory||(this.isVictory=R.isVictory),!1):!0);s.tryRemoveUnshiftedPhase(R=>R instanceof Cn?(this.isVictory||(this.isVictory=R.isVictory),!0):!1););s.gameData.gameStats.battles++,s.gameMode.isEndless&&s.currentBattle.waveIndex+1>s.gameData.gameStats.highestEndlessWave&&(s.gameData.gameStats.highestEndlessWave=s.currentBattle.waveIndex+1),this.isVictory&&(s.currentBattle.addBattleScore(),s.currentBattle.trainer&&s.gameData.gameStats.trainersDefeated++),s.gameMode.isEndless&&s.currentBattle.waveIndex>=5850&&(s.clearPhaseQueue(),s.unshiftPhase(new $O(!0)));for(const R of s.getField())R&&(R.tempSummonData.waveTurnCount=1);for(const R of s.getPokemonAllowedInBattle())EX(KS,R,!1,this.isVictory);s.currentBattle.moneyScattered&&s.currentBattle.pickUpScatteredMoney(),s.clearEnemyHeldItemModifiers();for(const R of s.getEnemyParty())try{R.destroy()}catch{console.warn("Unable to destroy stale pokemon object in BattleEndPhase:",R)}const E=s.findModifiers(R=>R instanceof XL||R instanceof Wr);for(const R of E){const I=[];R instanceof Wr&&I.push(s.getPokemonById(R.pokemonId)),R.lapse(...I)||s.removeModifier(R)}s.updateModifiers(),this.end()}};r(Cn,"BattleEndPhase");let bN=Cn;const Jf=class Jf extends bE{start(){super.start();const E=s.currentBattle.waveIndex,R=E%1e3?E%250?p.COMMON:p.GREAT:p.ULTRA;jL(s.getEnemyParty(),lt.ENEMY_BUFF);const I=Math.ceil(E/250);for(let N=0;N<I;N++)s.addEnemyModifier(_x(R,s.findModifiers(S=>S instanceof cI,!1)),!0,!0);s.updateModifiers(!1,!0),this.end()}};r(Jf,"AddEnemyBuffModifierPhase");let vG=Jf;const $f=class $f extends kt{constructor(E,R=!1){super(E),this.isExpOnly=R}start(){var I;super.start();const E=s.currentBattle.isBattleMysteryEncounter();(!E||!((I=s.currentBattle.mysteryEncounter)!=null&&I.preventGameStatsUpdates))&&s.gameData.gameStats.pokemonDefeated++;const R=this.getPokemon().getExpValue();if(s.applyPartyExp(R,!0),E)return Xv(!1,this.isExpOnly),this.end();if(!s.getEnemyParty().find(N=>s.currentBattle.battleType===AA.WILD?N.isOnField():!(N!=null&&N.isFainted(!0))))if(s.pushPhase(new bN(!0)),s.currentBattle.battleType===AA.TRAINER&&s.pushPhase(new NC),s.gameMode.isEndless||!s.gameMode.isWaveFinal(s.currentBattle.waveIndex)){if(s.pushPhase(new PS),s.gameMode.isClassic)switch(s.currentBattle.waveIndex){case aA.RIVAL_1:case aA.RIVAL_2:vE.getFixedBattleEventRewards(s.currentBattle.waveIndex).map(N=>s.pushPhase(new zE(x[N])));break;case aA.EVIL_BOSS_2:s.pushPhase(new zE(x.LOCK_CAPSULE));break}if(s.currentBattle.waveIndex%10)s.pushPhase(new JO(void 0,void 0,this.getFixedBattleCustomModifiers()));else if(s.gameMode.isDaily)s.pushPhase(new zE(x.EXP_CHARM)),s.currentBattle.waveIndex>10&&!s.gameMode.isWaveFinal(s.currentBattle.waveIndex)&&s.pushPhase(new zE(x.GOLDEN_POKEBALL));else{const N=s.gameMode.isEndless?10:s.offsetGym?0:20;s.gameMode.isEndless&&s.currentBattle.waveIndex===10&&s.pushPhase(new zE(x.EXP_SHARE)),s.currentBattle.waveIndex<=750&&(s.currentBattle.waveIndex<=500||s.currentBattle.waveIndex%30===N)&&s.pushPhase(new zE(s.currentBattle.waveIndex%30!==N||s.currentBattle.waveIndex>250?x.EXP_CHARM:x.SUPER_EXP_CHARM)),s.currentBattle.waveIndex<=150&&!(s.currentBattle.waveIndex%50)&&s.pushPhase(new zE(x.GOLDEN_POKEBALL)),s.gameMode.isEndless&&!(s.currentBattle.waveIndex%50)&&(s.pushPhase(new zE(s.currentBattle.waveIndex%250?x.VOUCHER_PLUS:x.VOUCHER_PREMIUM)),s.pushPhase(new vG))}(s.gameMode.hasRandomBiomes||s.isNewBiome())&&s.pushPhase(new MS),s.pushPhase(new US)}else s.currentBattle.battleType=AA.CLEAR,s.score+=s.gameMode.getClearScoreBonus(),s.updateScoreText(),s.pushPhase(new $O(!0));this.end()}getFixedBattleCustomModifiers(){const E=s.gameMode,R=s.currentBattle.waveIndex;if(E.isFixedBattle(R))return E.getFixedBattle(R).customModifierRewardSettings}};r($f,"VictoryPhase");let aC=$f;const OZ={};var xG=(t=>(t[t.PROFILE=0]="PROFILE",t[t.STATS=1]="STATS",t[t.MOVES=2]="MOVES",t))(xG||{}),Nc=(t=>(t[t.DEFAULT=0]="DEFAULT",t[t.LEARN_MOVE=1]="LEARN_MOVE",t))(Nc||{});const qf=class qf extends gL{constructor(){super(Ce.SUMMARY)}setup(){const E=this.getUi();this.summaryContainer=s.add.container(0,0),this.summaryContainer.setVisible(!1),E.add(this.summaryContainer);const R=s.add.image(0,0,"summary_bg");R.setOrigin(0,1),this.summaryContainer.add(R),this.tabSprite=s.add.sprite(134,-R.displayHeight+16,"summary_tabs_1"),this.tabSprite.setOrigin(1,1),this.summaryContainer.add(this.tabSprite);const I=We(4,-165,D.t("pokemonSummary:pokemonInfo"),Se.SUMMARY);I.setOrigin(0,1),this.summaryContainer.add(I),this.shinyOverlay=s.add.image(6,-54,"summary_overlay_shiny"),this.shinyOverlay.setOrigin(0,1),this.shinyOverlay.setVisible(!1),this.summaryContainer.add(this.shinyOverlay),this.numberText=We(17,-149,"0000",Se.SUMMARY),this.numberText.setOrigin(0,1),this.summaryContainer.add(this.numberText),this.pokemonSprite=s.initPokemonSprite(s.add.sprite(56,-106,"pkmn__sub"),void 0,!1,!0),this.summaryContainer.add(this.pokemonSprite),this.nameText=We(6,-54,"",Se.SUMMARY),this.nameText.setOrigin(0,0),this.summaryContainer.add(this.nameText),this.splicedIcon=s.add.sprite(0,-54,"icon_spliced"),this.splicedIcon.setVisible(!1),this.splicedIcon.setOrigin(0,0),this.splicedIcon.setScale(.75),this.splicedIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.summaryContainer.add(this.splicedIcon),this.shinyIcon=s.add.image(0,-54,"shiny_star"),this.shinyIcon.setVisible(!1),this.shinyIcon.setOrigin(0,0),this.shinyIcon.setScale(.75),this.shinyIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.summaryContainer.add(this.shinyIcon),this.fusionShinyIcon=s.add.image(0,0,"shiny_star_2"),this.fusionShinyIcon.setVisible(!1),this.fusionShinyIcon.setOrigin(0,0),this.fusionShinyIcon.setScale(.75),this.summaryContainer.add(this.fusionShinyIcon),this.pokeball=s.add.sprite(6,-19,"pb"),this.pokeball.setOrigin(0,1),this.summaryContainer.add(this.pokeball),this.candyIcon=s.add.sprite(13,-140,"candy"),this.candyIcon.setScale(.8),this.summaryContainer.add(this.candyIcon),this.candyOverlay=s.add.sprite(13,-140,"candy_overlay"),this.candyOverlay.setScale(.8),this.summaryContainer.add(this.candyOverlay),this.candyShadow=s.add.sprite(13,-140,"candy"),this.candyShadow.setTint(0),this.candyShadow.setAlpha(.5),this.candyShadow.setScale(.8),this.candyShadow.setInteractive(new Phaser.Geom.Rectangle(0,0,30,16),Phaser.Geom.Rectangle.Contains),this.summaryContainer.add(this.candyShadow),this.candyCountText=We(20,-146,"x0",Se.WINDOW_ALT,{fontSize:"76px"}),this.candyCountText.setOrigin(0,0),this.summaryContainer.add(this.candyCountText),this.friendshipIcon=s.add.sprite(13,-60,"friendship"),this.friendshipIcon.setScale(.8),this.summaryContainer.add(this.friendshipIcon),this.friendshipOverlay=s.add.sprite(13,-60,"friendship_overlay"),this.friendshipOverlay.setScale(.8),this.summaryContainer.add(this.friendshipOverlay),this.friendshipShadow=s.add.sprite(13,-60,"friendship"),this.friendshipShadow.setTint(0),this.friendshipShadow.setAlpha(.5),this.friendshipShadow.setScale(.8),this.friendshipShadow.setInteractive(new Phaser.Geom.Rectangle(0,0,50,16),Phaser.Geom.Rectangle.Contains),this.summaryContainer.add(this.friendshipShadow),this.friendshipText=We(20,-66,"x0",Se.WINDOW_ALT,{fontSize:"76px"}),this.friendshipText.setOrigin(0,0),this.summaryContainer.add(this.friendshipText),this.championRibbon=s.add.image(88,-146,"champion_ribbon"),this.championRibbon.setOrigin(0,0),this.championRibbon.setScale(1.25),this.summaryContainer.add(this.championRibbon),this.championRibbon.setVisible(!1),this.levelText=We(24,-17,"",Se.SUMMARY_ALT),this.levelText.setOrigin(0,1),this.summaryContainer.add(this.levelText),this.genderText=We(96,-17,"",Se.SUMMARY),this.genderText.setOrigin(0,1),this.summaryContainer.add(this.genderText),this.statusContainer=s.add.container(-106,-16);const N=s.add.image(0,0,"summary_status");N.setOrigin(0,0),this.statusContainer.add(N);const S=We(3,0,D.t("pokemonSummary:status"),Se.SUMMARY);S.setOrigin(0,0),this.statusContainer.add(S),this.status=s.add.sprite(91,4,UL("statuses")),this.status.setOrigin(.5,0),this.statusContainer.add(this.status),this.summaryContainer.add(this.statusContainer),this.moveEffectContainer=s.add.container(106,-62),this.summaryContainer.add(this.moveEffectContainer);const T=s.add.image(0,0,"summary_moves_effect");T.setOrigin(0,0),this.moveEffectContainer.add(T);const i=We(8,12,D.t("pokemonSummary:powerAccuracyCategory"),Se.SUMMARY);i.setLineSpacing(9),i.setOrigin(0,0),this.moveEffectContainer.add(i),this.movePowerText=We(99,27,"0",Se.WINDOW_ALT),this.movePowerText.setOrigin(1,1),this.moveEffectContainer.add(this.movePowerText),this.moveAccuracyText=We(99,43,"0",Se.WINDOW_ALT),this.moveAccuracyText.setOrigin(1,1),this.moveEffectContainer.add(this.moveAccuracyText),this.moveCategoryIcon=s.add.sprite(99,57,"categories"),this.moveCategoryIcon.setOrigin(1,1),this.moveEffectContainer.add(this.moveCategoryIcon);const o=r(()=>{const C=s.add.sprite(0,0,this.getPageKey(0));return C.setOrigin(0,1),C},"getSummaryPageBg");this.summaryContainer.add(this.summaryPageContainer=s.add.container(106,0)),this.summaryPageContainer.add(o()),this.summaryPageContainer.setVisible(!1),this.summaryContainer.add(this.summaryPageTransitionContainer=s.add.container(106,0)),this.summaryPageTransitionContainer.add(o()),this.summaryPageTransitionContainer.setVisible(!1)}getPageKey(E){return E===void 0&&(E=this.cursor),`summary_${xG[E].toLowerCase()}`}show(E){var _,G,H,c,f;super.show(E),this.pokemon=E[0],this.summaryUiMode=E.length>1?E[1]:0,this.playerParty=E[4]??!0,s.ui.bringToTop(this.summaryContainer),this.summaryContainer.setVisible(!0),this.cursor=-1,this.shinyOverlay.setVisible(this.pokemon.isShiny());const R=OZ[this.pokemon.species.getRootSpeciesId()];this.candyIcon.setTint(fL(DL(R[0]))),this.candyOverlay.setTint(fL(DL(R[1]))),this.numberText.setText(UT(this.pokemon.species.speciesId,4)),this.numberText.setColor(this.getTextColor(this.pokemon.isShiny()?Se.SUMMARY_GOLD:Se.SUMMARY)),this.numberText.setShadowColor(this.getTextColor(this.pokemon.isShiny()?Se.SUMMARY_GOLD:Se.SUMMARY,!0));const I=this.pokemon.getSpriteKey(!0);try{this.pokemonSprite.play(I)}catch(d){console.error(`Failed to play animation for ${I}`,d)}this.pokemonSprite.setPipelineData("teraColor",iO(this.pokemon.getTeraType())),this.pokemonSprite.setPipelineData("isTerastallized",this.pokemon.isTerastallized),this.pokemonSprite.setPipelineData("ignoreTimeTint",!0),this.pokemonSprite.setPipelineData("spriteKey",this.pokemon.getSpriteKey()),this.pokemonSprite.setPipelineData("shiny",((_=this.pokemon.summonData.illusion)==null?void 0:_.basePokemon.shiny)??this.pokemon.shiny),this.pokemonSprite.setPipelineData("variant",((G=this.pokemon.summonData.illusion)==null?void 0:G.basePokemon.variant)??this.pokemon.variant),["spriteColors","fusionSpriteColors"].map(d=>{var w,m;delete this.pokemonSprite.pipelineData[`${d}Base`],(w=this.pokemon)!=null&&w.summonData.speciesForm&&(d+="Base"),this.pokemonSprite.pipelineData[d]=(m=this.pokemon)==null?void 0:m.getSprite().pipelineData[d]}),this.pokemon.cry(),this.nameText.setText(this.pokemon.getNameToRender(!1));const N=this.pokemon.isFusion();this.splicedIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+2,3),this.splicedIcon.setVisible(N),this.splicedIcon.visible&&(this.splicedIcon.on("pointerover",()=>{var d,w,m,W;return s.ui.showTooltip("",`${(d=this.pokemon)==null?void 0:d.species.getName(this.pokemon.formIndex)}/${(W=(w=this.pokemon)==null?void 0:w.fusionSpecies)==null?void 0:W.getName((m=this.pokemon)==null?void 0:m.fusionFormIndex)}`,!0)}),this.splicedIcon.on("pointerout",()=>s.ui.hideTooltip())),s.gameData.starterData[this.pokemon.species.getRootSpeciesId()].classicWinCount>0&&s.gameData.starterData[this.pokemon.species.getRootSpeciesId(!0)].classicWinCount>0?this.championRibbon.setVisible(!0):this.championRibbon.setVisible(!1);let S=s.gameData.starterData[this.pokemon.species.getRootSpeciesId()].friendship;(!S||S===void 0)&&(S=0);const T=Bv(kE[this.pokemon.species.getRootSpeciesId()]),i=16-16*(S/T);this.candyShadow.visible&&(this.candyShadow.on("pointerover",()=>s.ui.showTooltip("",`${S}/${T}`,!0)),this.candyShadow.on("pointerout",()=>s.ui.hideTooltip())),this.candyCountText.setText(`x${s.gameData.starterData[this.pokemon.species.getRootSpeciesId()].candyCount}`),this.candyShadow.setCrop(0,0,16,i),this.friendshipShadow.visible&&(this.friendshipShadow.on("pointerover",()=>s.ui.showTooltip("",`${D.t("pokemonSummary:friendship")}`,!0)),this.friendshipShadow.on("pointerout",()=>s.ui.hideTooltip())),this.friendshipText.setText(`${((H=this.pokemon)==null?void 0:H.friendship)||"0"} / 255`),this.friendshipShadow.setCrop(0,0,16,16-16*((((c=this.pokemon)==null?void 0:c.friendship)||0)/255));const o=this.pokemon.isDoubleShiny(!1),C=this.pokemon.getBaseVariant(o);if(this.shinyIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+(this.splicedIcon.visible?this.splicedIcon.displayWidth+1:0)+1,3),this.shinyIcon.setTexture(`shiny_star${o?"_1":""}`),this.shinyIcon.setVisible(this.pokemon.isShiny(!1)),this.shinyIcon.setTint(nO(C)),this.shinyIcon.visible){const d=o||C?`${C===2?D.t("common:epicShiny"):C===1?D.t("common:rareShiny"):D.t("common:commonShiny")}${o?`/${this.pokemon.fusionVariant===2?D.t("common:epicShiny"):this.pokemon.fusionVariant===1?D.t("common:rareShiny"):D.t("common:commonShiny")}`:""}`:"";this.shinyIcon.on("pointerover",()=>s.ui.showTooltip("",`${D.t("common:shinyOnHover")}${d?` (${d})`:""}`,!0)),this.shinyIcon.on("pointerout",()=>s.ui.hideTooltip())}switch(this.fusionShinyIcon.setPosition(this.shinyIcon.x,this.shinyIcon.y),this.fusionShinyIcon.setVisible(o),N&&this.fusionShinyIcon.setTint(nO(((f=this.pokemon.summonData.illusion)==null?void 0:f.basePokemon.fusionVariant)??this.pokemon.fusionVariant)),this.pokeball.setFrame(xI(this.pokemon.pokeball)),this.levelText.setText(`${D.t("pokemonSummary:lv")}${this.pokemon.level.toString()}`),this.genderText.setText(SS(this.pokemon.getGender(!0))),this.genderText.setColor(WL(this.pokemon.getGender(!0))),this.genderText.setShadowColor(WL(this.pokemon.getGender(!0),!0)),this.summaryUiMode){case 0:{const d=E.length<2?0:E[2];this.hideMoveEffect(!0),this.setCursor(d),E.length>3&&(this.selectCallback=E[3]);break}case 1:this.newMove=E[2],this.moveSelectFunction=E[3],this.showMoveEffect(!0),this.setCursor(2),this.showMoveSelect();break}const U=E.length>=2;return this.pokemon.status||this.pokemon.pokerus?(this.showStatus(!U),this.status.setFrame(this.pokemon.status?J[this.pokemon.status.effect].toLowerCase():"pokerus")):this.hideStatus(!U),!0}processInput(E){var T,i,o,C,U,_,G,H,c;if(this.transitioning)return!1;const R=this.getUi(),I=R.handlers[Ce.PARTY].active;let N=!1,S=!1;if(this.moveSelect)if(E===he.ACTION)if(this.pokemon&&this.moveCursor<this.pokemon.moveset.length){if(this.summaryUiMode===1)(T=this.moveSelectFunction)==null||T.call(this,this.moveCursor);else if(this.selectedMoveIndex===-1)this.selectedMoveIndex=this.moveCursor,this.setCursor(this.moveCursor);else{if(this.selectedMoveIndex!==this.moveCursor){const f=(i=this.pokemon)==null?void 0:i.moveset[this.selectedMoveIndex];this.pokemon.moveset[this.selectedMoveIndex]=this.pokemon.moveset[this.moveCursor],this.pokemon.moveset[this.moveCursor]=f;const d=this.moveRowsContainer.getAt(this.selectedMoveIndex),w=this.moveRowsContainer.getAt(this.moveCursor);this.moveRowsContainer.moveTo(d,this.moveCursor),this.moveRowsContainer.moveTo(w,this.selectedMoveIndex),d.setY(this.moveCursor*16),w.setY(this.selectedMoveIndex*16)}this.selectedMoveIndex=-1,this.selectedMoveCursorObj&&(this.selectedMoveCursorObj.destroy(),this.selectedMoveCursorObj=null)}N=!0}else{if(this.moveCursor===4)return this.processInput(he.CANCEL);S=!0}else if(E===he.CANCEL)this.hideMoveSelect(),N=!0;else switch(E){case he.UP:N=this.setCursor(this.moveCursor?this.moveCursor-1:4);break;case he.DOWN:N=this.setCursor(this.moveCursor<4?this.moveCursor+1:0);break;case he.LEFT:if(this.moveSelect=!1,this.setCursor(1),this.summaryUiMode===1){this.hideMoveEffect(),this.destroyBlinkCursor(),N=!0;break}this.hideMoveSelect(),N=!0;break}else if(E===he.ACTION)this.cursor===2?(this.showMoveSelect(),N=!0):this.cursor===0&&((o=this.pokemon)!=null&&o.hasPassive())?((U=this.abilityContainer.nameText)==null||U.setVisible(!((C=this.abilityContainer.descriptionText)!=null&&C.visible)),(_=this.abilityContainer.descriptionText)==null||_.setVisible(!this.abilityContainer.descriptionText.visible),this.abilityContainer.labelImage.setVisible(!this.abilityContainer.labelImage.visible),(H=this.passiveContainer.nameText)==null||H.setVisible(!((G=this.passiveContainer.descriptionText)!=null&&G.visible)),(c=this.passiveContainer.descriptionText)==null||c.setVisible(!this.passiveContainer.descriptionText.visible),this.passiveContainer.labelImage.setVisible(!this.passiveContainer.labelImage.visible)):this.cursor===1&&(this.permStatsContainer.setVisible(!this.permStatsContainer.visible),this.ivContainer.setVisible(!this.ivContainer.visible));else if(E===he.CANCEL){if(this.summaryUiMode===1)this.hideMoveSelect();else{if(this.selectCallback instanceof Function){const f=this.selectCallback;this.selectCallback=null,f()}I?R.setMode(Ce.PARTY):R.setMode(Ce.MESSAGE)}N=!0}else{const f=Ct(xG);switch(E){case he.UP:case he.DOWN:{if(this.summaryUiMode===1||!I)break;const d=E===he.DOWN,w=s.getPlayerParty(),m=this.pokemon?w.indexOf(this.pokemon):-1;if(d&&m<w.length-1||!d&&m){const W=this.cursor;this.clear(),this.show([w[m+(d?1:-1)],this.summaryUiMode,W])}break}case he.LEFT:this.cursor&&(N=this.setCursor(this.cursor-1));break;case he.RIGHT:this.cursor<f.length-1&&(N=this.setCursor(this.cursor+1),this.summaryUiMode===1&&this.cursor===2&&(this.moveSelect=!0));break}}return N?R.playSelect():S&&R.playError(),N||S}setCursor(E,R=!1){let I=R||this.moveCursor!==E;if(this.moveSelect){this.moveCursor=E;const N=this.getSelectedMove();N?(this.moveDescriptionText.setY(84),this.movePowerText.setText(N.power>=0?N.power.toString():"---"),this.moveAccuracyText.setText(N.accuracy>=0?N.accuracy.toString():"---"),this.moveCategoryIcon.setFrame(u[N.category].toLowerCase()),this.showMoveEffect()):this.hideMoveEffect(),this.moveDescriptionText.setText((N==null?void 0:N.effect)||"");const S=Math.floor(this.moveDescriptionText.displayHeight/14.83);this.descriptionScrollTween&&(this.descriptionScrollTween.remove(),this.descriptionScrollTween=null),S>3&&(this.descriptionScrollTween=s.tweens.add({targets:this.moveDescriptionText,delay:KA(2e3),loop:-1,hold:KA(2e3),duration:KA((S-3)*2e3),y:`-=${14.83*(S-3)}`})),this.moveCursorObj||(this.moveCursorObj=s.add.sprite(-2,0,"summary_moves_cursor","highlight"),this.moveCursorObj.setOrigin(0,1),this.movesContainer.add(this.moveCursorObj)),this.moveCursorObj.setY(16*this.moveCursor+1),this.moveCursorBlinkTimer&&this.moveCursorBlinkTimer.destroy(),this.moveCursorObj.setVisible(!0),this.moveCursorBlinkTimer=s.time.addEvent({loop:!0,delay:KA(600),callback:r(()=>{var T;(T=this.moveCursorObj)==null||T.setVisible(!1),s.time.delayedCall(KA(100),()=>{this.moveCursorObj&&this.moveCursorObj.setVisible(!0)})},"callback")}),this.selectedMoveIndex>-1&&(this.selectedMoveCursorObj||(this.selectedMoveCursorObj=s.add.sprite(-2,0,"summary_moves_cursor","select"),this.selectedMoveCursorObj.setOrigin(0,1),this.movesContainer.add(this.selectedMoveCursorObj),this.movesContainer.moveBelow(this.selectedMoveCursorObj,this.moveCursorObj)),this.selectedMoveCursorObj.setY(16*this.selectedMoveIndex+1))}else if(I=this.cursor!==E,I){const N=this.cursor<E;this.cursor=E,this.tabSprite.setTexture(`summary_tabs_${this.cursor+1}`),this.getUi().hideTooltip(),this.summaryPageContainer.visible?(this.transitioning=!0,this.populatePageContainer(this.summaryPageTransitionContainer,N?E:E+1),N?this.summaryPageTransitionContainer.x+=214:this.populatePageContainer(this.summaryPageContainer),s.tweens.add({targets:this.summaryPageTransitionContainer,x:N?"-=214":"+=214",duration:250,onComplete:r(()=>{N?(this.populatePageContainer(this.summaryPageContainer),this.cursor===2&&(this.moveCursorObj=null,this.showMoveSelect(),this.showMoveEffect())):this.summaryPageTransitionContainer.x-=214,this.summaryPageTransitionContainer.setVisible(!1),this.transitioning=!1},"onComplete")}),this.summaryPageTransitionContainer.setVisible(!0)):(this.populatePageContainer(this.summaryPageContainer),this.summaryPageContainer.setVisible(!0))}return I}populatePageContainer(E,R){var N,S,T,i,o,C,U,_,G,H,c,f,d,w,m,W,v,$,Oe,q,Ie,le,Ae;R===void 0&&(R=this.cursor),E.getAll().length>1&&(E.each(Re=>{Re instanceof Phaser.GameObjects.Container&&Re.removeAll(!0)}),E.removeBetween(1,void 0,!0));const I=E.getAt(0);switch(I.setTexture(this.getPageKey(R)),this.descriptionScrollTween&&(this.descriptionScrollTween.remove(),this.descriptionScrollTween=null),R){case 0:{const Re=s.add.container(0,-I.height);E.add(Re);const se=MO(7,12,`${D.t("pokemonSummary:ot")}/${mI((ke==null?void 0:ke.username)||D.t("pokemonSummary:unknown"),s.gameData.gender===YA.FEMALE?Se.SUMMARY_PINK:Se.SUMMARY_BLUE)}`,Se.SUMMARY_ALT);se.setOrigin(0,0),Re.add(se);const ie=We(141,12,`${D.t("pokemonSummary:idNo")}${s.gameData.trainerId.toString()}`,Se.SUMMARY_ALT);ie.setOrigin(0,0),Re.add(ie);const He=We(7,28,`${D.t("pokemonSummary:type")}/`,Se.WINDOW_ALT);He.setOrigin(0,0),Re.add(He);const ve=r((Te,Ge,ze=!1)=>{const eA=He.width*He.scale+9+34*Te,GA=ze?s.add.sprite(eA,42,"type_tera"):s.add.sprite(eA,42,UL("types"),L[Ge].toLowerCase());if(ze){GA.setScale(.5);const IA=iO(Ge);GA.setTint(Phaser.Display.Color.GetColor(IA[0],IA[1],IA[2]))}return GA.setOrigin(0,1),GA},"getTypeIcon"),xe=(N=this.pokemon)==null?void 0:N.getTypes(!1,!1,!0,!1);if(Re.add(ve(0,xe[0])),xe.length>1&&Re.add(ve(1,xe[1])),(S=this.pokemon)!=null&&S.getLuck()){const Te=We(141,28,D.t("common:luckIndicator"),Se.SUMMARY_ALT);Te.setOrigin(0,0),Re.add(Te);const Ge=We(141+Te.displayWidth+2,28,this.pokemon.getLuck().toString(),Se.SUMMARY);Ge.setOrigin(0,0),Ge.setTint(nO(Math.min(this.pokemon.getLuck()-1,2))),Re.add(Ge)}if(s.gameData.achvUnlocks.hasOwnProperty(oA.TERASTALLIZE.id)&&!Ne(this.pokemon)){const Te=s.add.sprite(123,26,"button_tera");Te.setName("terrastallize-icon"),Te.setFrame(L[this.pokemon.getTeraType()].toLowerCase()),Re.add(Te)}this.abilityContainer={labelImage:s.add.image(0,0,"summary_profile_ability"),ability:(T=this.pokemon)==null?void 0:T.getAbility(!0),nameText:null,descriptionText:null};const EA=[this.abilityContainer];(i=this.pokemon)!=null&&i.hasPassive()&&(this.passiveContainer={labelImage:s.add.image(0,0,"summary_profile_passive"),ability:this.pokemon.getPassiveAbility(),nameText:null,descriptionText:null},EA.push(this.passiveContainer),this.abilityPrompt=s.add.image(0,0,(o=s.inputController)!=null&&o.gamepadSupport?"summary_profile_prompt_a":"summary_profile_prompt_z"),this.abilityPrompt.setPosition(8,43),this.abilityPrompt.setVisible(!0),this.abilityPrompt.setOrigin(0,0),Re.add(this.abilityPrompt)),EA.forEach(Te=>{var GA,IA;Te.labelImage.setPosition(17,43),Te.labelImage.setVisible(!0),Te.labelImage.setOrigin(0,0),Re.add(Te.labelImage),Te.nameText=We(7,66,(GA=Te.ability)==null?void 0:GA.name,Se.SUMMARY_ALT),Te.nameText.setOrigin(0,1),Re.add(Te.nameText),Te.descriptionText=We(7,69,(IA=Te.ability)==null?void 0:IA.description,Se.WINDOW_ALT,{wordWrap:{width:1224}}),Te.descriptionText.setOrigin(0,0),Re.add(Te.descriptionText);const Ge=s.make.graphics({});Ge.setScale(6),Ge.fillStyle(16777215),Ge.beginPath(),Ge.fillRect(110,90.5,206,31);const ze=Ge.createGeometryMask();Te.descriptionText.setMask(ze);const eA=Math.floor(Te.descriptionText.displayHeight/14.83);eA>2&&(Te.descriptionText.setY(69),this.descriptionScrollTween=s.tweens.add({targets:Te.descriptionText,delay:KA(2e3),loop:-1,hold:KA(2e3),duration:KA((eA-2)*2e3),y:`-=${14.83*(eA-2)}`}))}),(C=this.passiveContainer)==null||C.labelImage.setVisible(!1),(_=(U=this.passiveContainer)==null?void 0:U.nameText)==null||_.setVisible(!1),(H=(G=this.passiveContainer)==null?void 0:G.descriptionText)==null||H.setVisible(!1);const NA=mI("",Se.WINDOW_ALT),rA=mN(be[(c=this.pokemon)==null?void 0:c.getNature()]),Be=`${mI(mN(QO((f=this.pokemon)==null?void 0:f.getNature())),Se.SUMMARY_RED)}${NA}`,ae=D.t("pokemonSummary:memoString",{metFragment:D.t(`pokemonSummary:metFragment.${((d=this.pokemon)==null?void 0:d.metBiome)===-1?"apparently":"normal"}`,{biome:`${mI(KM((w=this.pokemon)==null?void 0:w.metBiome),Se.SUMMARY_RED)}${NA}`,level:`${mI((m=this.pokemon)==null?void 0:m.metLevel.toString(),Se.SUMMARY_RED)}${NA}`,wave:`${mI((W=this.pokemon)!=null&&W.metWave?this.pokemon.metWave.toString():D.t("pokemonSummary:unknownTrainer"),Se.SUMMARY_RED)}${NA}`}),natureFragment:D.t(`pokemonSummary:natureFragment.${rA}`,{nature:Be})}),Pe=MO(7,113,String(ae),Se.WINDOW_ALT);Pe.setOrigin(0,0),Re.add(Pe);break}case 1:{this.statsContainer=s.add.container(0,-I.height),E.add(this.statsContainer),this.permStatsContainer=s.add.container(27,56),this.statsContainer.add(this.permStatsContainer),this.ivContainer=s.add.container(27,56),this.statsContainer.add(this.ivContainer),this.statsContainer.setVisible(!0),uN.forEach((eA,GA)=>{var GR,Us,zI,yR,_R,BO;const IA=D.t(et(eA)),yA=GA%3,DE=Math.floor(GA/3),cE=Ri((GR=this.pokemon)==null?void 0:GR.getNature(),GA),Pt=We(115*DE+(DE===1?5:0),16*yA,IA,cE===1?Se.SUMMARY:cE>1?Se.SUMMARY_PINK:Se.SUMMARY_BLUE),Gt=We(115*DE+(DE===1?5:0),16*yA,IA,((Us=this.pokemon)==null?void 0:Us.ivs[eA])===31?Se.SUMMARY_GOLD:Se.SUMMARY);Pt.setOrigin(.5,0),Gt.setOrigin(.5,0),this.permStatsContainer.add(Pt),this.ivContainer.add(Gt);const HA=eA!==h.HP?YM((zI=this.pokemon)==null?void 0:zI.getStat(eA)):`${YM((yR=this.pokemon)==null?void 0:yR.hp,!0)}/${YM((_R=this.pokemon)==null?void 0:_R.getMaxHp(),!0)}`,tE=`${(BO=this.pokemon)==null?void 0:BO.ivs[eA]}/31`,ME=We(93+88*DE,16*yA,HA,Se.WINDOW_ALT);ME.setOrigin(1,0),this.permStatsContainer.add(ME);const mt=We(93+88*DE,16*yA,tE,Se.WINDOW_ALT);mt.setOrigin(1,0),this.ivContainer.add(mt)}),this.ivContainer.setVisible(!1),s.findModifiers(eA=>{var GA;return eA instanceof DA&&eA.pokemonId===((GA=this.pokemon)==null?void 0:GA.id)},this.playerParty).sort(fr).forEach((eA,GA)=>{const IA=eA.getIcon(!0);IA.setPosition(GA%17*12+3,14*Math.floor(GA/17)+15),this.statsContainer.add(IA),IA.setInteractive(new Phaser.Geom.Rectangle(0,0,32,32),Phaser.Geom.Rectangle.Contains),IA.on("pointerover",()=>s.ui.showTooltip(eA.type.name,eA.type.getDescription(),!0)),IA.on("pointerout",()=>s.ui.hideTooltip())});const se=(v=this.pokemon)==null?void 0:v.level,ie=($=this.pokemon)==null?void 0:$.levelExp,He=(Oe=this.pokemon)==null?void 0:Oe.exp,ve=(q=this.pokemon)==null?void 0:q.species.growthRate,xe=Dv(se+1,ve),EA=se<s.getMaxExpLevel()?ie/xe:0,NA=We(6,112,D.t("pokemonSummary:expPoints"),Se.SUMMARY);NA.setOrigin(0,0),this.statsContainer.add(NA);const rA=We(6,128,D.t("pokemonSummary:nextLv"),Se.SUMMARY);rA.setOrigin(0,0),this.statsContainer.add(rA);const Be=We(208,112,He.toString(),Se.WINDOW_ALT);Be.setOrigin(1,0),this.statsContainer.add(Be);const ae=se<s.getMaxExpLevel()?SO(se+1,ve)-He:0,Pe=We(208,128,ae.toString(),Se.WINDOW_ALT);Pe.setOrigin(1,0),this.statsContainer.add(Pe);const Te=s.add.image(140,145,"summary_stats_overlay_exp");Te.setOrigin(0,0),this.statsContainer.add(Te);const Ge=s.make.graphics({});Ge.setScale(6),Ge.fillStyle(16777215),Ge.beginPath(),Ge.fillRect(140+E.x,145+E.y+21,Math.floor(EA*64),3);const ze=Ge.createGeometryMask();Te.setMask(ze),this.abilityPrompt=s.add.image(0,0,(Ie=s.inputController)!=null&&Ie.gamepadSupport?"summary_profile_prompt_a":"summary_profile_prompt_z"),this.abilityPrompt.setPosition(8,47),this.abilityPrompt.setVisible(!0),this.abilityPrompt.setOrigin(0,0),this.statsContainer.add(this.abilityPrompt);break}case 2:{this.movesContainer=s.add.container(5,-I.height+26),E.add(this.movesContainer),this.extraMoveRowContainer=s.add.container(0,64),this.extraMoveRowContainer.setVisible(!1),this.movesContainer.add(this.extraMoveRowContainer);const Re=s.add.image(-2,1,"summary_moves_overlay_row");Re.setOrigin(0,1),this.extraMoveRowContainer.add(Re);const se=We(35,0,this.summaryUiMode===1&&this.newMove?this.newMove.name:D.t("pokemonSummary:cancel"),this.summaryUiMode===1?Se.SUMMARY_PINK:Se.SUMMARY);if(se.setOrigin(0,1),this.extraMoveRowContainer.add(se),this.summaryUiMode===1){if(this.extraMoveRowContainer.setVisible(!0),this.newMove&&this.pokemon){const NA=UL("types"),rA=this.pokemon.getMoveType(this.newMove),Be=s.add.sprite(0,0,NA,L[rA].toLowerCase());Be.setOrigin(0,1),this.extraMoveRowContainer.add(Be)}const ve=s.add.image(163,-1,"summary_moves_overlay_pp");ve.setOrigin(0,1),this.extraMoveRowContainer.add(ve);const xe=UT((le=this.newMove)==null?void 0:le.pp,2,"  "),EA=We(173,1,`${xe}/${xe}`,Se.WINDOW);EA.setOrigin(0,1),this.extraMoveRowContainer.add(EA)}this.moveRowsContainer=s.add.container(0,0),this.movesContainer.add(this.moveRowsContainer);for(let ve=0;ve<4;ve++){const xe=this.pokemon&&this.pokemon.moveset.length>ve?(Ae=this.pokemon)==null?void 0:Ae.moveset[ve]:null,EA=s.add.container(0,16*ve);if(this.moveRowsContainer.add(EA),xe&&this.pokemon){const ae=UL("types"),Pe=this.pokemon.getMoveType(xe.getMove()),Te=s.add.sprite(0,0,ae,L[Pe].toLowerCase());Te.setOrigin(0,1),EA.add(Te)}const NA=We(35,0,xe?xe.getName():"-",Se.SUMMARY);NA.setOrigin(0,1),EA.add(NA);const rA=s.add.image(163,-1,"summary_moves_overlay_pp");rA.setOrigin(0,1),EA.add(rA);const Be=We(173,1,"--/--",Se.WINDOW);if(Be.setOrigin(0,1),xe){const ae=xe.getMovePp(),Pe=ae-xe.ppUsed;Be.setText(`${UT(Pe,2,"  ")}/${UT(ae,2,"  ")}`)}EA.add(Be)}this.moveDescriptionText=We(2,84,"",Se.WINDOW_ALT,{wordWrap:{width:1212}}),this.movesContainer.add(this.moveDescriptionText);const ie=s.make.graphics({});ie.setScale(6),ie.fillStyle(16777215),ie.beginPath(),ie.fillRect(112,130,202,46);const He=ie.createGeometryMask();this.moveDescriptionText.setMask(He);break}}}showStatus(E){this.statusVisible||(this.statusVisible=!0,s.tweens.add({targets:this.statusContainer,x:0,duration:E?0:250,ease:"Sine.easeOut"}))}hideStatus(E){this.statusVisible&&(this.statusVisible=!1,s.tweens.add({targets:this.statusContainer,x:-106,duration:E?0:250,ease:"Sine.easeIn"}))}getSelectedMove(){return this.cursor!==2?null:this.moveCursor<4&&this.pokemon&&this.moveCursor<this.pokemon.moveset.length?this.pokemon.moveset[this.moveCursor].getMove():this.summaryUiMode===1&&this.moveCursor===4?this.newMove:null}showMoveSelect(){this.moveSelect=!0,this.extraMoveRowContainer.setVisible(!0),this.selectedMoveIndex=-1,this.setCursor(0),this.showMoveEffect()}hideMoveSelect(){var E;if(this.summaryUiMode===1){(E=this.moveSelectFunction)==null||E.call(this,4);return}this.moveSelect=!1,this.extraMoveRowContainer.setVisible(!1),this.moveDescriptionText.setText(""),this.destroyBlinkCursor(),this.hideMoveEffect()}destroyBlinkCursor(){this.moveCursorBlinkTimer&&(this.moveCursorBlinkTimer.destroy(),this.moveCursorBlinkTimer=null),this.moveCursorObj&&(this.moveCursorObj.destroy(),this.moveCursorObj=null),this.selectedMoveCursorObj&&(this.selectedMoveCursorObj.destroy(),this.selectedMoveCursorObj=null)}showMoveEffect(E){this.moveEffectsVisible||(this.moveEffectsVisible=!0,s.tweens.add({targets:this.moveEffectContainer,x:6,duration:E?0:250,ease:"Sine.easeOut"}))}hideMoveEffect(E){this.moveEffectsVisible&&(this.moveEffectsVisible=!1,s.tweens.add({targets:this.moveEffectContainer,x:106,duration:E?0:250,ease:"Sine.easeIn"}))}clear(){super.clear(),this.pokemon=null,this.cursor=-1,this.newMove=null,this.moveSelect&&(this.moveSelect=!1,this.moveSelectFunction=null,this.extraMoveRowContainer.setVisible(!1),this.moveCursorBlinkTimer&&(this.moveCursorBlinkTimer.destroy(),this.moveCursorBlinkTimer=null),this.moveCursorObj&&(this.moveCursorObj.destroy(),this.moveCursorObj=null),this.selectedMoveCursorObj&&(this.selectedMoveCursorObj.destroy(),this.selectedMoveCursorObj=null),this.hideMoveEffect(!0)),this.summaryContainer.setVisible(!1),this.summaryPageContainer.setVisible(!1)}};r(qf,"SummaryUiHandler");let i2=qf;const si=1;function iI(t,E,R,I,N){const S=de(t).getSpriteKey(E??!1,R??0,I??!1,N??0),T=de(t).getSpriteAtlasPath(E??!1,R??0,I??!1,N??0);return{spriteKey:S,fileRoot:T}}r(iI,"getSpriteKeysFromSpecies");function cM(t){const E=t.getSpeciesForm().getSpriteKey(t.getGender()===ye.FEMALE,t.formIndex,t.shiny,t.variant),R=t.getSpeciesForm().getSpriteAtlasPath(t.getGender()===ye.FEMALE,t.formIndex,t.shiny,t.variant);return{spriteKey:E,fileRoot:R}}r(cM,"getSpriteKeysFromPokemon");function IZ(t=!1,E=!1,R=!1){const I=s.getPlayerParty();let N,S=null;const T=I.filter(o=>(!t||o.isAllowedInChallenge())&&(E||!o.isFainted())),i=I.filter(o=>o.isAllowedInChallenge());if(R&&T.length===1){const o=I.filter(C=>(!t||C.isAllowedInChallenge())&&C.isFainted());o.length>0&&(N=De(o.length),S=o[N])}return!S&&T.length>0&&(N=De(T.length),S=T[N]),!S&&t&&i.length>0&&(N=De(i.length),S=i[N]),S||(N=De(I.length),S=I[N]),S}r(IZ,"getRandomPlayerPokemon");function sc(t=!1,E=!1){const R=s.getPlayerParty();let I=null;for(const N of R)t&&!N.isAllowedInChallenge()||!E&&N.isFainted()||(I=I?(I==null?void 0:I.level)<(N==null?void 0:N.level)?N:I:N);return I}r(sc,"getHighestLevelPlayerPokemon");function LZ(t,E=!1,R=!1){const I=s.getPlayerParty();let N=null;for(const S of I)E&&!S.isAllowedInChallenge()||!R&&S.isFainted()||(N=N?N.getStat(t)<(S==null?void 0:S.getStat(t))?S:N:S);return N}r(LZ,"getHighestStatPlayerPokemon");function NZ(t=!1,E=!1){const R=s.getPlayerParty();let I=null;for(const N of R)t&&!N.isAllowedInChallenge()||!E&&N.isFainted()||(I=I?(I==null?void 0:I.stats.reduce((S,T)=>S+T))<(N==null?void 0:N.stats.reduce((S,T)=>S+T))?N:I:N);return I}r(NZ,"getHighestStatTotalPlayerPokemon");function Sc(t,E,R,I=!0,N=!0,S=!0){let T=Array.isArray(t)?t[0]:t,i=Array.isArray(t)?t[1]:t,o=Object.keys(kE).map(U=>[Number.parseInt(U),kE[U]]).filter(U=>{const _=de(U[0]);return _&&(!E||!E.includes(U[0]))&&(I||!_.subLegendary)&&(N||!_.legendary)&&(S||!_.mythical)}).map(U=>[de(U[0]),U[1]]);R&&R.length>0&&(o=o.filter(U=>R.includes(U[0].type1)||!Ne(U[0].type2)&&R.includes(U[0].type2)));let C=o.filter(U=>U[1]>=T&&U[1]<=i);for(;C.length===0&&!(T===0&&i===10);)T>0?T--:i++,C=o.filter(U=>U[1]>=T&&U[1]<=i);if(C.length>0){const U=De(C.length);return Phaser.Math.RND.shuffle(C)[U][0].speciesId}return e.BULBASAUR}r(Sc,"getRandomSpeciesByStarterCost");function Qv(t){t.hp=0,t.trySetStatus(J.FAINT),t.updateInfo(),YE(D.t("battle:fainted",{pokemonNameWithAffix:Z(t)}))}r(Qv,"koPlayerPokemon");function sZ(t,E){const R=Math.round(t.hp+E),I=Math.max(Math.min(R,t.getMaxHp()),0);I===0?Qv(t):t.hp=I}r(sZ,"applyHpChangeToPokemon");function Tc(t,E){E<=0&&console.warn("Healing pokemon with `applyDamageToPokemon` is not recommended! Please use `applyHealToPokemon` instead."),t.isAllowedInBattle()&&t.hp-E<=0&&(E=t.hp-1),sZ(t,-E)}r(Tc,"applyDamageToPokemon");async function o2(t,E){var N;const R=(N=x.MYSTERY_ENCOUNTER_SHUCKLE_JUICE().generateType(s.getPlayerParty(),[E]))==null?void 0:N.withIdFromFunc(x.MYSTERY_ENCOUNTER_SHUCKLE_JUICE),I=R==null?void 0:R.newModifier(t);I&&(s.addModifier(I,!1,!1,!1,!0),t.calculateStats())}r(o2,"modifyPlayerPokemonBST");async function zR(t,E,R){const I=E.newModifier(t),N=s.findModifier(S=>S instanceof DA&&S.type.id===E.id&&S.pokemonId===t.id&&S.matchType(I));N&&N.getStackCount()>=N.getMaxStackCount()||s.addModifier(I,!1,!1,!1,!0)}r(zR,"applyModifierTypeToPlayerPokemon");function SZ(t,E,R){const I=t.y;if(!R){const i=3*t.getMaxHp(),o=2*t.hp,C=t.species.catchRate,U=mP(E),_=t.status?r8(t.status.effect):1,G=Math.round((i-o)*C*U/i*_);R=Math.round(65536/Math.sqrt(Math.sqrt(255/G)))}const N=t.getFieldPositionOffset(),S=xI(E),T=s.addFieldSprite(91,105,"pb",S);return T.setOrigin(.5,.625),s.field.add(T),s.time.delayedCall(300,()=>{s.field.moveBelow(T,t)}),new Promise(i=>{s.trainer.setTexture(`trainer_${s.gameData.gender===YA.FEMALE?"f":"m"}_back_pb`),s.time.delayedCall(512,()=>{s.playSound("se/pb_throw"),s.trainer.setFrame("2"),s.time.delayedCall(256,()=>{s.trainer.setFrame("3"),s.time.delayedCall(768,()=>{s.trainer.setTexture(`trainer_${s.gameData.gender===YA.FEMALE?"f":"m"}_back`)})}),s.tweens.add({targets:T,x:{value:236+N[0],ease:"Linear"},y:{value:16+N[1],ease:"Cubic.easeOut"},duration:500,onComplete:r(()=>{T.setTexture("pb",`${S}_opening`),s.time.delayedCall(17,()=>T.setTexture("pb",`${S}_open`)),s.playSound("se/pb_rel"),t.tint(bI(E)),Ic(T.x,T.y,E),s.tweens.add({targets:t,duration:500,ease:"Sine.easeIn",scale:.25,y:20,onComplete:r(()=>{T.setTexture("pb",`${S}_opening`),t.setVisible(!1),s.playSound("se/pb_catch"),s.time.delayedCall(17,()=>T.setTexture("pb",`${S}`));const o=r(()=>{let C=0;const U=T.x,_=s.tweens.addCounter({from:0,to:1,repeat:4,yoyo:!0,ease:"Cubic.easeOut",duration:250,repeatDelay:500,onUpdate:r(G=>{if(C&&C<4){const H=G.getValue(),c=C%2===1?1:-1;T.setX(U+H*4*c),T.setAngle(H*27.5*c)}},"onUpdate"),onRepeat:r(()=>{if(!t.species.isObtainable())_.stop(),C2(t,I,T,E).then(()=>i(!1));else if(C++<3)De(65536)<R?s.playSound("se/pb_move"):(_.stop(),C2(t,I,T,E).then(()=>i(!1)));else{s.playSound("se/pb_lock"),$b(T);const G=s.add.sprite(T.x,T.y,"pb","pb");G.setOrigin(T.originX,T.originY),G.setTintFill(0),G.setAlpha(0),s.field.add(G),s.tweens.add({targets:G,alpha:.375,duration:200,easing:"Sine.easeOut",onComplete:r(()=>{s.tweens.add({targets:G,alpha:0,duration:200,easing:"Sine.easeIn",onComplete:r(()=>G.destroy(),"onComplete")})},"onComplete")})}},"onRepeat"),onComplete:r(()=>{GS(t,T,E).then(()=>i(!0))},"onComplete")})},"doShake");s.time.delayedCall(250,()=>F8(T,16,72,350,o))},"onComplete")})},"onComplete")})})})}r(SZ,"trainerThrowPokeball");function C2(t,E,R,I){return new Promise(N=>{var T;s.playSound("se/pb_rel"),t.setY(E),((T=t.status)==null?void 0:T.effect)!==J.SLEEP&&t.cry(t.getHpRatio()>.25?void 0:{rate:.85}),t.tint(bI(I)),t.setVisible(!0),t.untint(250,"Sine.easeOut");const S=xI(I);R.setTexture("pb",`${S}_opening`),s.time.delayedCall(17,()=>R.setTexture("pb",`${S}_open`)),s.tweens.add({targets:t,duration:250,ease:"Sine.easeOut",scale:1}),s.currentBattle.lastUsedPokeball=I,Jv(R),s.ui.showText(D.t("battle:pokemonBrokeFree",{pokemonName:t.getNameToRender()}),null,()=>N(),null,!0)})}r(C2,"failCatch");async function GS(t,E,R,I=!0,N=!1){const S=t.fusionSpecies?t.getFusionSpeciesForm():t.getSpeciesForm();return S.abilityHidden&&(t.fusionSpecies?t.fusionAbilityIndex:t.abilityIndex)===S.getAbilityCount()-1&&s.validateAchv(oA.HIDDEN_ABILITY),t.species.subLegendary&&s.validateAchv(oA.CATCH_SUB_LEGENDARY),t.species.legendary&&s.validateAchv(oA.CATCH_LEGENDARY),t.species.mythical&&s.validateAchv(oA.CATCH_MYTHICAL),s.pokemonInfoContainer.show(t,!0),s.gameData.updateSpeciesDexIvs(t.species.getRootSpeciesId(!0),t.ivs),new Promise(T=>{const i=r(()=>{const o=r(()=>{s.getEnemyParty().some(_=>_.id===t.id)||s.getEnemyParty().push(t),s.unshiftPhase(new aC(t.id,!0)),s.pokemonInfoContainer.hide(),E&&Jv(E),T()},"end"),C=r(()=>{t&&t.leaveField(!1,!0,!0)},"removePokemon"),U=r(_=>{const G=t.addToParty(R,_),H=s.findModifiers(c=>c instanceof DA,!1);s.getPlayerParty().filter(c=>c.isShiny()).length===6&&s.validateAchv(oA.SHINY_PARTY),Promise.all(H.map(c=>s.addModifier(c,!0))).then(()=>{s.updateModifiers(!0),C(),G?G.loadAssets().then(o):o()})},"addToParty");Promise.all([t.hideInfo(),s.gameData.setPokemonCaught(t)]).then(()=>{if(s.getPlayerParty().length===6){const _=r(()=>{s.ui.showText(D.t("battle:partyFull",{pokemonName:t.getNameToRender()}),null,()=>{s.pokemonInfoContainer.makeRoomForConfirmUi(1,!0),s.ui.setMode(Ce.CONFIRM,()=>{const G=s.addPlayerPokemon(t.species,t.level,t.abilityIndex,t.formIndex,t.gender,t.shiny,t.variant,t.ivs,t.nature,t);s.ui.setMode(Ce.SUMMARY,G,0,Nc.DEFAULT,()=>{s.ui.setMode(Ce.MESSAGE).then(()=>{_()})},!1)},()=>{const G={shiny:t.shiny,variant:t.variant,form:t.formIndex,female:t.gender===ye.FEMALE};s.ui.setOverlayMode(Ce.POKEDEX_PAGE,t.species,t.formIndex,G,null,()=>{s.ui.setMode(Ce.MESSAGE).then(()=>{_()})})},()=>{s.ui.setMode(Ce.PARTY,CR.RELEASE,0,(G,H)=>{s.ui.setMode(Ce.MESSAGE).then(()=>{G<6?U(G):_()})})},()=>{s.ui.setMode(Ce.MESSAGE).then(()=>{C(),o()})},"fullParty")})},"promptRelease");_()}else U()})},"doPokemonCatchMenu");I?s.ui.showText(D.t(N?"battle:pokemonObtained":"battle:pokemonCaught",{pokemonName:t.getNameToRender()}),null,i,0,!0):i()})}r(GS,"catchPokemon");function Jv(t){t&&s.tweens.add({targets:t,duration:250,delay:250,ease:"Sine.easeIn",alpha:0,onComplete:r(()=>{t.destroy()},"onComplete")})}r(Jv,"removePb");async function TZ(t){await new Promise(E=>{s.playSound("se/flee"),s.tweens.add({targets:t,x:"+=16",y:"-=16",alpha:0,duration:1e3,ease:"Sine.easeIn",scale:t.getSpriteScale(),onComplete:r(()=>{t.setVisible(!1),t.leaveField(!0,!0,!0),fA(D.t("battle:pokemonFled",{pokemonName:t.getNameToRender()}),null,600,!1).then(()=>{E()})},"onComplete")})})}r(TZ,"doPokemonFlee");function nZ(t){return new Promise(E=>{s.tweens.add({targets:t,x:"+=16",y:"-=16",alpha:0,duration:1e3,ease:"Sine.easeIn",scale:t.getSpriteScale(),onComplete:r(()=>{t.setVisible(!1),t.leaveField(!0,!0,!0),fA(D.t("battle:playerFled",{pokemonName:t.getNameToRender()}),null,600,!1).then(()=>{E()})},"onComplete")})})}r(nZ,"doPlayerFlee");const l2=[[e.SCYTHER,40],[e.SCIZOR,40],[e.KLEAVOR,40],[e.PINSIR,40],[e.HERACROSS,40],[e.YANMA,40],[e.YANMEGA,40],[e.SHUCKLE,40],[e.ANORITH,40],[e.ARMALDO,40],[e.ESCAVALIER,40],[e.ACCELGOR,40],[e.JOLTIK,40],[e.GALVANTULA,40],[e.DURANT,40],[e.LARVESTA,40],[e.VOLCARONA,40],[e.DEWPIDER,40],[e.ARAQUANID,40],[e.WIMPOD,40],[e.GOLISOPOD,40],[e.SIZZLIPEDE,40],[e.CENTISKORCH,40],[e.NYMBLE,40],[e.LOKIX,40],[e.BUZZWOLE,1],[e.PHEROMOSA,1]];function aZ(t){const E=l2.reduce((N,S)=>N+S[1],0),R=De(E);let I=0;for(const N of l2)if(I+=N[1],R<I){const S=de(N[0]);return de(S.getSpeciesForLevel(t,!0))}return de(e.SCYTHER)}r(aZ,"getGoldenBugNetSpecies");function Si(t=0){const E=s.currentBattle;return E.getLevelForWave()+Math.max(Math.round(E.waveIndex/10*t),0)}r(Si,"getEncounterPokemonLevelForWave");async function U2(t){const E=t.fusionSpecies?t.getFusionSpeciesForm():t.getSpeciesForm();return E.abilityHidden&&(t.fusionSpecies?t.fusionAbilityIndex:t.abilityIndex)===E.getAbilityCount()-1&&s.validateAchv(oA.HIDDEN_ABILITY),t.species.subLegendary&&s.validateAchv(oA.CATCH_SUB_LEGENDARY),t.species.legendary&&s.validateAchv(oA.CATCH_LEGENDARY),t.species.mythical&&s.validateAchv(oA.CATCH_MYTHICAL),s.gameData.updateSpeciesDexIvs(t.species.getRootSpeciesId(!0),t.ivs),s.gameData.setPokemonCaught(t,!0,!1,!1)}r(U2,"addPokemonDataToDexAndValidateAchievements");function fN(t,E){return t.isAllowedInChallenge()?t.isAllowedInBattle()?null:xE(E)??null:D.t("partyUiHandler:cantBeUsed",{pokemonName:t.getNameToRender()})??null}r(fN,"isPokemonValidForEncounterOptionSelection");function $v(t,E){t.isFusion()?(t.fusionCustomPokemonData||(t.fusionCustomPokemonData=new lR),t.fusionCustomPokemonData.ability=E):t.customPokemonData.ability=E}r($v,"applyAbilityOverrideToPokemon");async function qv(t,E,R,I=s){if(hL.hasOwnProperty(t))return;I.experimentalSprites&&V1(t)&&(E=`exp/${E}`);let S=QR;E.split("/").map(i=>S?S=S[i]:null),!(!S||S[R]!==1)&&(hL[t]=await I.cachedFetch(`./images/pokemon/variant/${E}.json`).then(i=>i.json()))}r(qv,"loadPokemonVariantAssets");const zf=class zf extends Phaser.GameObjects.Container{constructor(E){var U;if(super(s,-72,76),this.encounter=E,this.enterFromRight=E.enterIntroVisualsFromRight??!1,this.spriteConfigs=E.spriteConfigs.map(_=>{const G={..._};if(!Ne(G.species)){const H=iI(G.species,void 0,void 0,G.isShiny,G.variant);G.spriteKey=H.spriteKey,G.fileRoot=H.fileRoot,G.isPokemon=!0}return G}),!this.spriteConfigs)return;const R=r((_,G,H)=>{const c=s.addFieldSprite(0,0,_);return c.setOrigin(.5,1),c.setPipeline(s.spritePipeline,{tone:[0,0,0,0],hasShadow:!!G,yShadowOffset:H??0}),c},"getSprite"),I=r((_,G,H)=>{const c=s.add.sprite(-19,2,"items",_);return c.setOrigin(.5,1),c.setPipeline(s.spritePipeline,{tone:[0,0,0,0],hasShadow:!!G,yShadowOffset:H??0}),c},"getItemSprite"),N=-40,S=40,T=4;let i=0;const o=Math.round((S-N)/Math.max(this.spriteConfigs.filter(_=>!_.x&&!_.y).length,1));this.shinySparkleSprites=[];const C=s.add.container(0,0);(U=this.spriteConfigs)==null||U.forEach(_=>{const{spriteKey:G,isItem:H,hasShadow:c,scale:f,x:d,y:w,yShadow:m,alpha:W,isPokemon:v,isShiny:$,variant:Oe}=_;let q,Ie,le;H?(q=I(G,c,m),Ie=I(G)):(q=R(G,c,m),Ie=R(G),v&&$&&(q.setPipelineData("spriteKey",G),Ie.setPipelineData("spriteKey",G),q.setPipelineData("shiny",!0),q.setPipelineData("variant",Oe),Ie.setPipelineData("shiny",!0),Ie.setPipelineData("variant",Oe),le=s.add.sprite(q.x,q.y,"shiny"),le.setOrigin(.5,1),le.setVisible(!1),this.shinySparkleSprites.push({sprite:le,variant:Oe??0}),C.add(le))),q.setVisible(!_.hidden),Ie.setVisible(!1),f&&(q.setScale(f),Ie.setScale(f)),d||w?(d&&(q.setPosition(T+d,q.y),Ie.setPosition(T+d,Ie.y)),w&&(q.setPosition(q.x,q.y+w),Ie.setPosition(Ie.x,Ie.y+w))):this.spriteConfigs.length===1?(q.x=T,Ie.x=T):(q.x=N+(i+.5)*o+T,Ie.x=N+(i+.5)*o+T,i++),Ne(le)||le.setPosition(q.x,q.y),Ne(W)||(q.setAlpha(W),Ie.setAlpha(W)),this.add(q),this.add(Ie)}),this.add(C)}loadAssets(){return new Promise(E=>{this.spriteConfigs||E();const R=[];this.spriteConfigs.forEach(I=>{I.isPokemon?(s.loadPokemonAtlas(I.spriteKey,I.fileRoot),I.isShiny&&!Ne(I.variant)&&R.push(qv(I.spriteKey,I.fileRoot,I.variant))):I.isItem?s.loadAtlas("items",""):s.loadAtlas(I.spriteKey,I.fileRoot)}),s.load.once(Phaser.Loader.Events.COMPLETE,()=>{this.spriteConfigs.every(I=>{if(I.isItem)return!0;const N=console.warn;console.warn=()=>{};const S=s.anims.generateFrameNames(I.spriteKey,{zeroPad:4,suffix:".png",start:1,end:128});return console.warn=N,s.anims.exists(I.spriteKey)||s.anims.create({key:I.spriteKey,frames:S,frameRate:10,repeat:-1}),!0}),Promise.all(R).then(()=>E())}),s.load.isLoading()||s.load.start()})}initSprite(){this.spriteConfigs&&(this.getSprites().map((E,R)=>{if(!this.spriteConfigs[R].isItem&&(E.setTexture(this.spriteConfigs[R].spriteKey).setFrame(0),E.texture.frameTotal>1)){const I=E.texture.frames["0001.png"];E.setFrame(I??0)}}),this.getTintSprites().map((E,R)=>{if(!this.spriteConfigs[R].isItem&&(E.setTexture(this.spriteConfigs[R].spriteKey).setFrame(0),E.texture.frameTotal>1)){const I=E.texture.frames["0001.png"];E.setFrame(I??0)}}),this.spriteConfigs.every((E,R)=>{if(!E.tint)return!0;const I=this.getAt(R*2+1);return this.tint(I,0,E.tint),!0}))}tryPlaySprite(E,R,I){return E.texture.key==="__MISSING"?(console.error(`No texture found for '${I.key}'!`),!1):E.texture.frameTotal<=1?(console.warn(`No animation found for '${I.key}'. Is this intentional?`),!1):(E.play(I),R.play(I),!0)}playShinySparkles(){for(const E of this.shinySparkleSprites)s.time.delayedCall(500,()=>{HM(E.sprite,E.variant)})}playAnim(){if(!this.spriteConfigs)return;const E=this.getSprites(),R=this.getTintSprites();this.spriteConfigs.forEach((I,N)=>{if(!I.disableAnimation){const S={key:I.spriteKey,repeat:I!=null&&I.repeat?-1:0,startFrame:(I==null?void 0:I.startFrame)??0};this.tryPlaySprite(E[N],R[N],S)}})}getSpriteAtIndex(E){if(!this.spriteConfigs)return[];const R=[];return R.push(this.getAt(E*2)),R.push(this.getAt(E*2+1)),R}getSprites(){if(!this.spriteConfigs)return[];const E=[];return this.spriteConfigs.forEach((R,I)=>{E.push(this.getAt(I*2))}),E}getTintSprites(){if(!this.spriteConfigs)return[];const E=[];return this.spriteConfigs.forEach((R,I)=>{E.push(this.getAt(I*2+1))}),E}tint(E,R,I,N,S){E.setTintFill(R),E.setVisible(!0),N?(E.setAlpha(0),s.tweens.add({targets:E,alpha:I||1,duration:N,ease:S||"Linear"})):E.setAlpha(I)}tintAll(E,R,I,N){this.getTintSprites().map(T=>{this.tint(T,E,R,I,N)})}untint(E,R,I){R?s.tweens.add({targets:E,alpha:0,duration:R,ease:I||"Linear",onComplete:r(()=>{E.setVisible(!1),E.setAlpha(1)},"onComplete")}):(E.setVisible(!1),E.setAlpha(1))}untintAll(E,R){this.getTintSprites().map(N=>{this.untint(N,E,R)})}setVisible(E){for(const R of this.getSprites())R.setVisible(E);return super.setVisible(E)}};r(zf,"MysteryEncounterIntroVisuals");let bG=zf;const qE=[],jf=class jf{};r(jf,"EncounterSceneRequirement");let ZN=jf;const ed=class ed{};r(ed,"EncounterPokemonRequirement");let qO=ed;const ln=class ln extends qO{static Some(...E){return new ln(!1,...E)}static Every(...E){return new ln(!0,...E)}constructor(E,...R){super(),this.isAnd=E,this.invertQuery=!1,this.minNumberOfPokemon=1,this.requirements=R}meetsRequirement(){return this.isAnd?this.requirements.every(E=>E.meetsRequirement()):this.requirements.some(E=>E.meetsRequirement())}queryParty(E){if(this.isAnd)return this.requirements.reduce((I,N)=>N.queryParty(I),E);const R=this.requirements.find(I=>I.queryParty(E).length>0);return R?R.queryParty(E):[]}getDialogueToken(E){if(this.isAnd)throw new Error("Not implemented (Sorry)");for(const R of this.requirements)if(R.meetsRequirement())return R.getDialogueToken(E);return this.requirements[0].getDialogueToken(E)}};r(ln,"CombinationPokemonRequirement");let kN=ln;const Ad=class Ad extends ZN{constructor(E){super(),this.waveRange=E}meetsRequirement(){if(!Ne(this.waveRange)&&this.waveRange[0]<=this.waveRange[1]){const E=s.currentBattle.waveIndex;if(E>=0&&this.waveRange[0]>=0&&this.waveRange[0]>E||this.waveRange[1]>=0&&this.waveRange[1]<E)return!1}return!0}getDialogueToken(E){return["waveIndex",s.currentBattle.waveIndex.toString()]}};r(Ad,"WaveRangeRequirement");let ZG=Ad;const Ed=class Ed extends ZN{constructor(E,R){super(),this.waveModuli=E,this.modulusValue=R}meetsRequirement(){return this.waveModuli.includes(s.currentBattle.waveIndex%this.modulusValue)}getDialogueToken(E){return["waveIndex",s.currentBattle.waveIndex.toString()]}};r(Ed,"WaveModulusRequirement");let kG=Ed;const td=class td extends ZN{constructor(E,R){super(),this.partySizeRange=E,this.excludeDisallowedPokemon=R}meetsRequirement(){if(!Ne(this.partySizeRange)&&this.partySizeRange[0]<=this.partySizeRange[1]){const E=this.excludeDisallowedPokemon?s.getPokemonAllowedInBattle().length:s.getPlayerParty().length;if(E>=0&&this.partySizeRange[0]>=0&&this.partySizeRange[0]>E||this.partySizeRange[1]>=0&&this.partySizeRange[1]<E)return!1}return!0}getDialogueToken(E){return["partySize",s.getPlayerParty().length.toString()]}};r(td,"PartySizeRequirement");let XG=td;const Rd=class Rd extends ZN{constructor(E,R=1){super(),this.minNumberOfItems=R,this.requiredHeldItemModifiers=Array.isArray(E)?E:[E]}meetsRequirement(){var I;const E=s.getPlayerParty();if(Ne(E)||((I=this.requiredHeldItemModifiers)==null?void 0:I.length)<0)return!1;let R=0;for(const N of this.requiredHeldItemModifiers){const S=s.findModifiers(T=>T.constructor.name===N);if((S==null?void 0:S.length)>0)for(const T of S)R+=T.stackCount}return R>=this.minNumberOfItems}getDialogueToken(E){return["requiredItem",this.requiredHeldItemModifiers[0]]}};r(Rd,"PersistentModifierRequirement");let rC=Rd;const Od=class Od extends ZN{constructor(E,R){super(),this.requiredMoney=E??0,this.scalingMultiplier=R??0}meetsRequirement(){const E=s.money;return Ne(E)?!1:(this.scalingMultiplier>0&&(this.requiredMoney=s.getWaveMoneyAmount(this.scalingMultiplier)),!(this.requiredMoney>0&&this.requiredMoney>E))}getDialogueToken(E){return["money",this.scalingMultiplier>0?s.getWaveMoneyAmount(this.scalingMultiplier).toString():this.requiredMoney.toString()]}};r(Od,"MoneyRequirement");let zO=Od;const Id=class Id extends qO{constructor(E,R=!0,I=1,N=!1){super(),this.excludeFainted=R,this.minNumberOfPokemon=I,this.invertQuery=N,this.requiredType=Array.isArray(E)?E:[E]}meetsRequirement(){let E=s.getPlayerParty();return Ne(E)?!1:(this.excludeFainted&&(E=E.filter(R=>!R.isFainted())),this.queryParty(E).length>=this.minNumberOfPokemon)}queryParty(E){return this.invertQuery?E.filter(R=>this.requiredType.filter(I=>R.getTypes().includes(I)).length===0):E.filter(R=>this.requiredType.filter(I=>R.getTypes().includes(I)).length>0)}getDialogueToken(E){const R=this.requiredType.filter(I=>E==null?void 0:E.getTypes().includes(I));return R.length>0?["type",L[R[0]]]:["type",""]}};r(Id,"TypeRequirement");let _S=Id;const Ld=class Ld extends qO{constructor(E,R,I=1,N=!1){super(),this.requiredMoves=[],this.excludeDisallowedPokemon=R,this.minNumberOfPokemon=I,this.invertQuery=N,this.requiredMoves=Array.isArray(E)?E:[E]}meetsRequirement(){var R;const E=s.getPlayerParty();return Ne(E)||((R=this.requiredMoves)==null?void 0:R.length)<0?!1:this.queryParty(E).length>=this.minNumberOfPokemon}queryParty(E){return this.invertQuery?E.filter(R=>(!this.excludeDisallowedPokemon||R.isAllowedInBattle())&&!R.moveset.some(I=>I.moveId&&this.requiredMoves.includes(I.moveId))):E.filter(R=>(!this.excludeDisallowedPokemon||R.isAllowedInBattle())&&R.moveset.some(I=>I.moveId&&this.requiredMoves.includes(I.moveId)))}getDialogueToken(E){const R=E==null?void 0:E.moveset.filter(I=>I.moveId&&this.requiredMoves.includes(I.moveId));return R&&R.length>0&&R[0]?["move",R[0].getName()]:["move",""]}};r(Ld,"MoveRequirement");let wL=Ld;const Nd=class Nd extends qO{constructor(E,R,I=1,N=!1){super(),this.excludeDisallowedPokemon=R,this.minNumberOfPokemon=I,this.invertQuery=N,this.requiredAbilities=Array.isArray(E)?E:[E]}meetsRequirement(){var R;const E=s.getPlayerParty();return Ne(E)||((R=this.requiredAbilities)==null?void 0:R.length)<0?!1:this.queryParty(E).length>=this.minNumberOfPokemon}queryParty(E){return this.invertQuery?E.filter(R=>(!this.excludeDisallowedPokemon||R.isAllowedInBattle())&&this.requiredAbilities.filter(I=>R.hasAbility(I,!1)).length===0):E.filter(R=>(!this.excludeDisallowedPokemon||R.isAllowedInBattle())&&this.requiredAbilities.some(I=>R.hasAbility(I,!1)))}getDialogueToken(E){const R=this.requiredAbilities.find(I=>E==null?void 0:E.hasAbility(I,!1));return Ne(R)?["ability",""]:["ability",qE[R].name]}};r(Nd,"AbilityRequirement");let iC=Nd;const sd=class sd extends qO{constructor(E,R=1,I=!1){super(),this.minNumberOfPokemon=R,this.invertQuery=I,this.requiredStatusEffect=Array.isArray(E)?E:[E]}meetsRequirement(){var I;const E=s.getPlayerParty();if(Ne(E)||((I=this.requiredStatusEffect)==null?void 0:I.length)<0)return!1;const R=this.queryParty(E).length>=this.minNumberOfPokemon;return console.log(R),R}queryParty(E){return this.invertQuery?E.filter(R=>!this.requiredStatusEffect.some(I=>{var N;return I===J.NONE?Ne(R.status)||Ne(R.status.effect)||R.status.effect===I:((N=R.status)==null?void 0:N.effect)===I})):E.filter(R=>this.requiredStatusEffect.some(I=>{var N;return I===J.NONE?Ne(R.status)||Ne(R.status.effect)||R.status.effect===I:((N=R.status)==null?void 0:N.effect)===I}))}getDialogueToken(E){const R=this.requiredStatusEffect.filter(I=>{var N;return I===J.NONE?Ne(E==null?void 0:E.status)||Ne(E.status.effect)||E.status.effect===I:((N=E.status)==null?void 0:N.effect)===I});return R.length>0?["status",J[R[0]]]:["status",""]}};r(sd,"StatusEffectRequirement");let QG=sd;const Sd=class Sd extends qO{constructor(E,R=1,I=!1,N=!0){super(),this.minNumberOfPokemon=R,this.invertQuery=I,this.requiredHeldItemModifiers=Array.isArray(E)?E:[E],this.requireTransferable=N}meetsRequirement(){const E=s.getPlayerParty();return Ne(E)?!1:this.queryParty(E).length>=this.minNumberOfPokemon}queryParty(E){return this.invertQuery?E.filter(R=>R.getHeldItems().filter(I=>!this.requiredHeldItemModifiers.some(N=>I.constructor.name===N)&&(!this.requireTransferable||I.isTransferable)).length>0):E.filter(R=>this.requiredHeldItemModifiers.some(I=>R.getHeldItems().some(N=>N.constructor.name===I&&(!this.requireTransferable||N.isTransferable))))}getDialogueToken(E){const R=E==null?void 0:E.getHeldItems().filter(I=>this.requiredHeldItemModifiers.some(N=>I.constructor.name===N)&&(!this.requireTransferable||I.isTransferable));return R&&R.length>0?["heldItem",R[0].type.name]:["heldItem",""]}};r(Sd,"HeldItemRequirement");let HL=Sd;const Td=class Td extends qO{constructor(E,R=1,I=!1,N=!0){super(),this.minNumberOfPokemon=R,this.invertQuery=I,this.requiredHeldItemTypes=Array.isArray(E)?E:[E],this.requireTransferable=N}meetsRequirement(){const E=s.getPlayerParty();return Ne(E)?!1:this.queryParty(E).length>=this.minNumberOfPokemon}queryParty(E){return this.invertQuery?E.filter(R=>R.getHeldItems().filter(I=>!this.requiredHeldItemTypes.some(N=>I instanceof DI&&I.type.moveType===N&&(!this.requireTransferable||I.isTransferable))).length>0):E.filter(R=>this.requiredHeldItemTypes.some(I=>R.getHeldItems().some(N=>N instanceof DI&&N.type.moveType===I&&(!this.requireTransferable||N.isTransferable))))}getDialogueToken(E){const R=E==null?void 0:E.getHeldItems().filter(I=>this.requiredHeldItemTypes.some(N=>I instanceof DI&&I.type.moveType===N)&&(!this.requireTransferable||I.isTransferable));return R&&R.length>0?["heldItem",R[0].type.name]:["heldItem",""]}};r(Td,"AttackTypeBoosterHeldItemTypeRequirement");let oC=Td;const nd=class nd extends qO{constructor(E,R=1,I=!1){super(),this.minNumberOfPokemon=R,this.invertQuery=I,this.requiredHealthRange=E}meetsRequirement(){if(!Ne(this.requiredHealthRange)&&this.requiredHealthRange[0]<=this.requiredHealthRange[1]){const E=s.getPlayerParty();if(this.queryParty(E).length<this.minNumberOfPokemon)return!1}return!0}queryParty(E){return this.invertQuery?E.filter(R=>R.getHpRatio()<this.requiredHealthRange[0]||R.getHpRatio()>this.requiredHealthRange[1]):E.filter(R=>R.getHpRatio()>=this.requiredHealthRange[0]&&R.getHpRatio()<=this.requiredHealthRange[1])}getDialogueToken(E){const R=E==null?void 0:E.getHpRatio();return Ne(R)?["healthRatio",""]:["healthRatio",Math.floor(R*100).toString()+"%"]}};r(nd,"HealthRatioRequirement");let JG=nd;const ad=class ad extends qO{constructor(E,R={}){super(),this.requiredMoves=Array.isArray(E)?E:[E],this.excludeLevelMoves=R.excludeLevelMoves??!1,this.excludeTmMoves=R.excludeTmMoves??!1,this.excludeEggMoves=R.excludeEggMoves??!1,this.includeFainted=R.includeFainted??!1,this.minNumberOfPokemon=R.minNumberOfPokemon??1,this.invertQuery=R.invertQuery??!1}meetsRequirement(){var R;const E=s.getPlayerParty().filter(I=>this.includeFainted?I.isAllowedInChallenge():I.isAllowedInBattle());return Ne(E)||((R=this.requiredMoves)==null?void 0:R.length)<0?!1:this.queryParty(E).length>=this.minNumberOfPokemon}queryParty(E){return this.invertQuery?E.filter(R=>!this.requiredMoves.some(I=>this.getAllPokemonMoves(R).includes(I))):E.filter(R=>this.requiredMoves.every(I=>this.getAllPokemonMoves(R).includes(I)))}getDialogueToken(E){return["requiredMoves",this.requiredMoves.map(R=>new Ye(R).getName()).join(", ")]}getPokemonLevelMoves(E){return E.getLevelMoves().map(([R,I])=>I)}getAllPokemonMoves(E){const R=[];return this.excludeLevelMoves||R.push(...this.getPokemonLevelMoves(E)??[]),this.excludeTmMoves||R.push(...E.compatibleTms??[]),this.excludeEggMoves||R.push(...E.getEggMoves()??[]),R}};r(ad,"CanLearnMoveRequirement");let $G=ad;var MA=(t=>(t[t.DEFAULT=0]="DEFAULT",t[t.DISABLED_OR_DEFAULT=1]="DISABLED_OR_DEFAULT",t[t.DEFAULT_OR_SPECIAL=2]="DEFAULT_OR_SPECIAL",t[t.DISABLED_OR_SPECIAL=3]="DISABLED_OR_SPECIAL",t))(MA||{});const rd=class rd{constructor(E){Ne(E)||Object.assign(this,E),this.hasDexProgress=this.hasDexProgress??!1,this.requirements=this.requirements??[],this.primaryPokemonRequirements=this.primaryPokemonRequirements??[],this.secondaryPokemonRequirements=this.secondaryPokemonRequirements??[]}hasRequirements(){return this.requirements.length>0||this.primaryPokemonRequirements.length>0||this.secondaryPokemonRequirements.length>0}meetsRequirements(){return!this.requirements.some(E=>!E.meetsRequirement())&&this.meetsSupportingRequirementAndSupportingPokemonSelected()&&this.meetsPrimaryRequirementAndPrimaryPokemonSelected()}pokemonMeetsPrimaryRequirements(E){return!this.primaryPokemonRequirements.some(R=>!R.queryParty(s.getPlayerParty()).map(I=>I.id).includes(E.id))}meetsPrimaryRequirementAndPrimaryPokemonSelected(){if(!this.primaryPokemonRequirements||this.primaryPokemonRequirements.length===0)return!0;let E=s.getPlayerParty();for(const R of this.primaryPokemonRequirements)if(R.meetsRequirement()){const I=R.queryParty(s.getPlayerParty());E=E.filter(N=>I.includes(N))}else return this.primaryPokemon=void 0,!1;if(E.length===0)return!1;if(this.excludePrimaryFromSecondaryRequirements&&this.secondaryPokemon&&this.secondaryPokemon.length>0){const R=[],I=[];for(const N of E)this.secondaryPokemon.includes(N)?I.push(N):R.push(N);return R.length>0?(this.primaryPokemon=R[De(R.length)],!0):I.length>1||this.secondaryPokemon.length-I.length>=1?(this.primaryPokemon=I[De(I.length)],this.secondaryPokemon=this.secondaryPokemon.filter(N=>N!==this.primaryPokemon),!0):(console.log("Mystery Encounter Edge Case: Requirement not met due to primay pokemon overlapping with support pokemon. There's no valid primary pokemon left."),!1)}return this.primaryPokemon=E[0],!0}meetsSupportingRequirementAndSupportingPokemonSelected(){if(!this.secondaryPokemonRequirements||this.secondaryPokemonRequirements.length===0)return this.secondaryPokemon=[],!0;let E=s.getPlayerParty();for(const R of this.secondaryPokemonRequirements)if(R.meetsRequirement()){const I=R.queryParty(s.getPlayerParty());E=E.filter(N=>I.includes(N))}else return this.secondaryPokemon=[],!1;return this.secondaryPokemon=E,!0}};r(rd,"MysteryEncounterOption");let qG=rd;const tM=class tM{constructor(){this.optionMode=MA.DEFAULT,this.requirements=[],this.primaryPokemonRequirements=[],this.secondaryPokemonRequirements=[],this.excludePrimaryFromSecondaryRequirements=!1,this.isDisabledOnRequirementsNotMet=!0,this.hasDexProgress=!1}static newOptionWithMode(E){return Object.assign(new tM,{optionMode:E})}withHasDexProgress(E){return Object.assign(this,{hasDexProgress:E})}withSceneRequirement(E){return this.requirements.push(E),Object.assign(this,{requirements:this.requirements})}withSceneMoneyRequirement(E,R){return this.withSceneRequirement(new zO(E,R))}withPreOptionPhase(E){return Object.assign(this,{onPreOptionPhase:E})}withOptionPhase(E){return Object.assign(this,{onOptionPhase:E})}withPostOptionPhase(E){return Object.assign(this,{onPostOptionPhase:E})}withPrimaryPokemonRequirement(E){return this.primaryPokemonRequirements.push(E),Object.assign(this,{primaryPokemonRequirements:this.primaryPokemonRequirements})}withPokemonTypeRequirement(E,R,I,N){return this.withPrimaryPokemonRequirement(new _S(E,R,I,N))}withPokemonCanLearnMoveRequirement(E,R){return this.withPrimaryPokemonRequirement(new $G(E,R))}withSecondaryPokemonRequirement(E,R=!0){return this.secondaryPokemonRequirements.push(E),this.excludePrimaryFromSecondaryRequirements=R,Object.assign(this,{secondaryPokemonRequirements:this.secondaryPokemonRequirements})}withDialogue(E){return this.dialogue=E,this}build(){return new qG(this)}};r(tM,"MysteryEncounterOptionBuilder");let PA=tM;const rZ=2,iZ=1,id=class id{constructor(E){this.startOfBattleEffects=[],Ne(E)||Object.assign(this,E),this.encounterTier=this.encounterTier??QA.COMMON,this.localizationKey=this.localizationKey??"",this.dialogue=this.dialogue??{},this.spriteConfigs=this.spriteConfigs?[...this.spriteConfigs]:[],this.maxAllowedEncounters=this.maxAllowedEncounters??this.encounterTier===QA.ROGUE?iZ:rZ,this.encounterMode=JE.DEFAULT,this.requirements=this.requirements?this.requirements:[],this.hideBattleIntroMessage=this.hideBattleIntroMessage??!1,this.autoHideIntroVisuals=this.autoHideIntroVisuals??!0,this.enterIntroVisualsFromRight=this.enterIntroVisualsFromRight??!1,this.continuousEncounter=this.continuousEncounter??!1,this.startOfBattleEffectsComplete=!1,this.lockEncounterRewardTiers=!0,this.dialogueTokens={},this.enemyPartyConfigs=[],this.startOfBattleEffects=[],this.introVisuals=void 0,this.misc=null,this.expMultiplier=1,this.loadAssets=[]}meetsRequirements(){const E=!this.requirements.some(N=>!N.meetsRequirement()),R=this.meetsSecondaryRequirementAndSecondaryPokemonSelected(),I=this.meetsPrimaryRequirementAndPrimaryPokemonSelected();return E&&R&&I}pokemonMeetsPrimaryRequirements(E){return!this.primaryPokemonRequirements.some(R=>!R.queryParty(s.getPlayerParty()).map(I=>I.id).includes(E.id))}meetsPrimaryRequirementAndPrimaryPokemonSelected(){if(!this.primaryPokemonRequirements||this.primaryPokemonRequirements.length===0){const R=s.getPlayerParty().filter(I=>I.isActive(!0));return R.length>0?this.primaryPokemon=R[0]:this.primaryPokemon=s.getPlayerParty().filter(I=>I.isAllowedInBattle())[0],!0}let E=s.getPlayerParty();for(const R of this.primaryPokemonRequirements)if(R.meetsRequirement())E=E.filter(I=>R.queryParty(s.getPlayerParty()).includes(I));else return this.primaryPokemon=void 0,!1;if(E.length===0)return!1;if(this.excludePrimaryFromSupportRequirements&&this.secondaryPokemon&&this.secondaryPokemon.length>0){const R=[],I=[];for(const N of E)this.secondaryPokemon.includes(N)?I.push(N):R.push(N);return R.length>0?(this.primaryPokemon=R[De(R.length,0)],!0):I.length>1||this.secondaryPokemon.length-I.length>=1?(this.primaryPokemon=I[De(I.length,0)],this.secondaryPokemon=this.secondaryPokemon.filter(N=>N!==this.primaryPokemon),!0):(console.log("Mystery Encounter Edge Case: Requirement not met due to primary pokemon overlapping with secondary pokemon. There's no valid primary pokemon left."),!1)}return this.primaryPokemon=E[De(E.length,0)],!0}meetsSecondaryRequirementAndSecondaryPokemonSelected(){if(!this.secondaryPokemonRequirements||this.secondaryPokemonRequirements.length===0)return this.secondaryPokemon=[],!0;let E=s.getPlayerParty();for(const R of this.secondaryPokemonRequirements)if(R.meetsRequirement())E=E.filter(I=>R.queryParty(s.getPlayerParty()).includes(I));else return this.secondaryPokemon=[],!1;return this.secondaryPokemon=E,!0}initIntroVisuals(){this.introVisuals=new bG(this)}populateDialogueTokensFromRequirements(){var E,R,I;if(this.meetsRequirements(),((E=this.requirements)==null?void 0:E.length)>0)for(const N of this.requirements){const S=N.getDialogueToken();(S==null?void 0:S.length)===2&&this.setDialogueToken(...S)}if(this.primaryPokemon&&this.primaryPokemon.length>0){this.setDialogueToken("primaryName",this.primaryPokemon.getNameToRender());for(const N of this.primaryPokemonRequirements)if(!N.invertQuery){const S=N.getDialogueToken(this.primaryPokemon);(S==null?void 0:S.length)===2&&this.setDialogueToken("primary"+Ps(S[0]),S[1])}}if(((R=this.secondaryPokemonRequirements)==null?void 0:R.length)>0&&this.secondaryPokemon&&this.secondaryPokemon.length>0){this.setDialogueToken("secondaryName",this.secondaryPokemon[0].getNameToRender());for(const N of this.secondaryPokemonRequirements)if(!N.invertQuery){const S=N.getDialogueToken(this.secondaryPokemon[0]);(S==null?void 0:S.length)===2&&this.setDialogueToken("primary"+Ps(S[0]),S[1]),this.setDialogueToken("secondary"+Ps(S[0]),S[1])}}for(let N=0;N<this.options.length;N++){const S=this.options[N];S.meetsRequirements();const T=N+1;if(S.requirements.length>0)for(const i of S.requirements){const o=i.getDialogueToken();(o==null?void 0:o.length)===2&&this.setDialogueToken("option"+T+Ps(o[0]),o[1])}if(S.primaryPokemonRequirements.length>0&&S.primaryPokemon){this.setDialogueToken("option"+T+"PrimaryName",S.primaryPokemon.getNameToRender());for(const i of S.primaryPokemonRequirements)if(!i.invertQuery){const o=i.getDialogueToken(S.primaryPokemon);(o==null?void 0:o.length)===2&&this.setDialogueToken("option"+T+"Primary"+Ps(o[0]),o[1])}}if(((I=S.secondaryPokemonRequirements)==null?void 0:I.length)>0&&S.secondaryPokemon&&S.secondaryPokemon.length>0){this.setDialogueToken("option"+T+"SecondaryName",S.secondaryPokemon[0].getNameToRender());for(const i of S.secondaryPokemonRequirements)if(!i.invertQuery){const o=i.getDialogueToken(S.secondaryPokemon[0]);(o==null?void 0:o.length)===2&&this.setDialogueToken("option"+T+"Secondary"+Ps(o[0]),o[1])}}}}setDialogueToken(E,R){this.dialogueTokens[E]=R}getSeedOffset(){return this.seedOffset}updateSeedOffset(){const E=this.seedOffset??s.currentBattle.waveIndex*1e3;this.seedOffset=E+512}};r(id,"MysteryEncounter");let zG=id;const RM=class RM{constructor(){this.enemyPartyConfigs=[],this.localizationKey="",this.dialogue={},this.requirements=[],this.primaryPokemonRequirements=[],this.secondaryPokemonRequirements=[],this.excludePrimaryFromSupportRequirements=!0,this.dialogueTokens={},this.hideBattleIntroMessage=!1,this.autoHideIntroVisuals=!0,this.enterIntroVisualsFromRight=!1,this.continuousEncounter=!1,this.catchAllowed=!1,this.fleeAllowed=!0,this.lockEncounterRewardTiers=!1,this.startOfBattleEffectsComplete=!1,this.hasBattleAnimationsWithoutTargets=!1,this.skipEnemyBattleTurns=!1,this.skipToFightInput=!1,this.preventGameStatsUpdates=!1,this.maxAllowedEncounters=3,this.expMultiplier=1}static withEncounterType(E){return Object.assign(new RM,{encounterType:E})}withOption(E){return this.options?(this.options.push(E),this):Object.assign(this,{options:[E]})}withSimpleOption(E,R){return this.withOption(PA.newOptionWithMode(MA.DEFAULT).withDialogue(E).withOptionPhase(R).build())}withSimpleDexProgressOption(E,R){return this.withOption(PA.newOptionWithMode(MA.DEFAULT).withHasDexProgress(!0).withDialogue(E).withOptionPhase(R).build())}withIntroSpriteConfigs(E){return Object.assign(this,{spriteConfigs:E})}withIntroDialogue(E=[]){return this.dialogue={...this.dialogue,intro:E},this}withIntro({spriteConfigs:E,dialogue:R}){return this.withIntroSpriteConfigs(E).withIntroDialogue(R)}setLocalizationKey(E){return this.localizationKey=E,this}withEncounterTier(E){return Object.assign(this,{encounterTier:E})}withAnimations(...E){const R=Array.isArray(E)?E:[E];return Object.assign(this,{encounterAnimations:R})}withDisallowedGameModes(...E){const R=Array.isArray(E)?E:[E];return Object.assign(this,{disallowedGameModes:R})}withDisallowedChallenges(...E){const R=Array.isArray(E)?E:[E];return Object.assign(this,{disallowedChallenges:R})}withContinuousEncounter(E){return Object.assign(this,{continuousEncounter:E})}withBattleAnimationsWithoutTargets(E){return Object.assign(this,{hasBattleAnimationsWithoutTargets:E})}withSkipEnemyBattleTurns(E){return Object.assign(this,{skipEnemyBattleTurns:E})}withSkipToFightInput(E){return Object.assign(this,{skipToFightInput:E})}withPreventGameStatsUpdates(E){return Object.assign(this,{preventGameStatsUpdates:E})}withMaxAllowedEncounters(E){return Object.assign(this,{maxAllowedEncounters:E})}withSceneRequirement(E){return this.requirements.push(E),this}withSceneWaveRangeRequirement(E,R){return this.withSceneRequirement(new ZG([E,R??E]))}withScenePartySizeRequirement(E,R,I=!1){return this.withSceneRequirement(new XG([E,R??E],I))}withPrimaryPokemonRequirement(E){return this.primaryPokemonRequirements.push(E),Object.assign(this,{primaryPokemonRequirements:this.primaryPokemonRequirements})}withPrimaryPokemonStatusEffectRequirement(E,R=1,I=!1){return this.withPrimaryPokemonRequirement(new QG(E,R,I))}withPrimaryPokemonHealthRatioRequirement(E,R=1,I=!1){return this.withPrimaryPokemonRequirement(new JG(E,R,I))}withSecondaryPokemonRequirement(E,R=!1){return this.secondaryPokemonRequirements.push(E),this.excludePrimaryFromSupportRequirements=R,Object.assign(this,{excludePrimaryFromSecondaryRequirements:this.excludePrimaryFromSupportRequirements,secondaryPokemonRequirements:this.secondaryPokemonRequirements})}withRewards(E){return Object.assign(this,{doEncounterRewards:E})}withExp(E){return Object.assign(this,{doEncounterExp:E})}withOnInit(E){return Object.assign(this,{onInit:E})}withOnVisualsStart(E){return Object.assign(this,{onVisualsStart:E})}withCatchAllowed(E){return Object.assign(this,{catchAllowed:E})}withFleeAllowed(E){return Object.assign(this,{fleeAllowed:E})}withHideWildIntroMessage(E){return Object.assign(this,{hideBattleIntroMessage:E})}withAutoHideIntroVisuals(E){return Object.assign(this,{autoHideIntroVisuals:E})}withEnterIntroVisualsFromRight(E){return Object.assign(this,{enterIntroVisualsFromRight:E})}withTitle(E){const R=this.dialogue.encounterOptionsDialogue??{};return this.dialogue={...this.dialogue,encounterOptionsDialogue:{...R,title:E}},this}withDescription(E){const R=this.dialogue.encounterOptionsDialogue??{};return this.dialogue={...this.dialogue,encounterOptionsDialogue:{...R,description:E}},this}withQuery(E){const R=this.dialogue.encounterOptionsDialogue??{};return this.dialogue={...this.dialogue,encounterOptionsDialogue:{...R,query:E}},this}withOutroDialogue(E=[]){return this.dialogue={...this.dialogue,outro:E},this}build(){return new zG(this)}};r(RM,"MysteryEncounterBuilder");let NE=RM;const Jt="mysteryEncounters/darkDeal",oZ=[e.NECROZMA,e.COSMOG,e.COSMOEM,e.SOLGALEO,e.LUNALA,e.ETERNATUS,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.IRON_VALIANT,e.MIRAIDON,e.IRON_LEAVES,e.IRON_BOULDER,e.IRON_CROWN,e.MEW,e.CELEBI,e.DEOXYS,e.JIRACHI,e.DARKRAI,e.PHIONE,e.MANAPHY,e.ARCEUS,e.SHAYMIN,e.VICTINI,e.MELOETTA,e.KELDEO,e.GENESECT,e.DIANCIE,e.HOOPA,e.VOLCANION,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.ZARUDE,e.MELTAN,e.MELMETAL,e.PECHARUNT],CZ=NE.withEncounterType(ge.DARK_DEAL).withEncounterTier(QA.ROGUE).withIntroSpriteConfigs([{spriteKey:"dark_deal_scientist",fileRoot:"mystery-encounters",hasShadow:!0},{spriteKey:"dark_deal_porygon",fileRoot:"mystery-encounters",hasShadow:!0,repeat:!0}]).withIntroDialogue([{text:`${Jt}:intro`},{speaker:`${Jt}:speaker`,text:`${Jt}:intro_dialogue`}]).withSceneWaveRangeRequirement(30,mE[1]).withScenePartySizeRequirement(2,6,!0).withCatchAllowed(!0).setLocalizationKey(`${Jt}`).withTitle(`${Jt}:title`).withDescription(`${Jt}:description`).withQuery(`${Jt}:query`).withOption(PA.newOptionWithMode(MA.DEFAULT).withDialogue({buttonLabel:`${Jt}:option.1.label`,buttonTooltip:`${Jt}:option.1.tooltip`,selected:[{speaker:`${Jt}:speaker`,text:`${Jt}:option.1.selected_dialogue`},{text:`${Jt}:option.1.selected_message`}]}).withPreOptionPhase(async()=>{const t=IZ(!0,!1,!0),E=t.getHeldItems().filter(I=>!(I instanceof EI));s.removePokemonFromPlayerParty(t);const R=s.currentBattle.mysteryEncounter;R.setDialogueToken("pokeName",t.getNameToRender()),R.misc={removedTypes:t.getTypes(),modifiers:E}}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;s.unshiftPhase(new zE(x.ROGUE_BALL));let E=t.misc.removedTypes;const R=s.gameMode.challenges.filter(C=>C.value&&C.id===Je.SINGLE_TYPE);s.gameMode.isChallenge&&R.length>0&&(E=R.map(C=>C.value-1));const I=t.misc.modifiers,N=De(100),S=N>=65?6:N>=15?7:N>=5?8:[9,10],T=de(Sc(S,oZ,E)),i={species:T,isBoss:!0,modifierConfigs:I.map(C=>({modifier:C,stackCount:C.getStackCount()}))};!Ne(T.forms)&&T.forms.length>0&&(i.formIndex=0),await HE({pokemonConfigs:[i]})}).build()).withSimpleOption({buttonLabel:`${Jt}:option.2.label`,buttonTooltip:`${Jt}:option.2.tooltip`,selected:[{speaker:`${Jt}:speaker`,text:`${Jt}:option.2.selected`}]},async()=>(nA(!0),!0)).withOutroDialogue([{text:`${Jt}:outro`}]).build(),IR="mysteryEncounters/departmentStoreSale",lZ=NE.withEncounterType(ge.DEPARTMENT_STORE_SALE).withEncounterTier(QA.COMMON).withSceneWaveRangeRequirement(mE[0],100).withIntroSpriteConfigs([{spriteKey:"department_store_sale_lady",fileRoot:"mystery-encounters",hasShadow:!0,x:-20},{spriteKey:"",fileRoot:"",species:e.FURFROU,hasShadow:!0,repeat:!0,x:30}]).withIntroDialogue([{text:`${IR}:intro`},{text:`${IR}:intro_dialogue`,speaker:`${IR}:speaker`}]).withAutoHideIntroVisuals(!1).setLocalizationKey(`${IR}`).withTitle(`${IR}:title`).withDescription(`${IR}:description`).withQuery(`${IR}:query`).withSimpleOption({buttonLabel:`${IR}:option.1.label`,buttonTooltip:`${IR}:option.1.tooltip`},async()=>{const t=[];let E=0;for(;E<5;){const R=De(5);R<2?t.push(x.TM_COMMON):R<4?t.push(x.TM_GREAT):t.push(x.TM_ULTRA),E++}lA({guaranteedModifierTypeFuncs:t,fillRemaining:!1}),nA()}).withSimpleOption({buttonLabel:`${IR}:option.2.label`,buttonTooltip:`${IR}:option.2.tooltip`},async()=>{const t=[];let E=0;for(;E<3;)De(3)===0?t.push(x.PP_UP):t.push(x.BASE_STAT_BOOSTER),E++;lA({guaranteedModifierTypeFuncs:t,fillRemaining:!1}),nA()}).withSimpleOption({buttonLabel:`${IR}:option.3.label`,buttonTooltip:`${IR}:option.3.tooltip`},async()=>{const t=[];let E=0;for(;E<5;)De(5)===0?t.push(x.DIRE_HIT):t.push(x.TEMP_STAT_STAGE_BOOSTER),E++;lA({guaranteedModifierTypeFuncs:t,fillRemaining:!1}),nA()}).withSimpleOption({buttonLabel:`${IR}:option.4.label`,buttonTooltip:`${IR}:option.4.tooltip`},async()=>{const t=[];let E=0;for(;E<4;){const R=De(65);R<10?t.push(x.POKEBALL):R<40?t.push(x.GREAT_BALL):R<60?t.push(x.ULTRA_BALL):t.push(x.ROGUE_BALL),E++}lA({guaranteedModifierTypeFuncs:t,fillRemaining:!1}),nA()}).withOutroDialogue([{text:`${IR}:outro`}]).build(),pE="mysteryEncounters/fieldTrip",UZ=NE.withEncounterType(ge.FIELD_TRIP).withEncounterTier(QA.COMMON).withSceneWaveRangeRequirement(mE[0],100).withIntroSpriteConfigs([{spriteKey:"preschooler_m",fileRoot:"trainer",hasShadow:!0},{spriteKey:"field_trip_teacher",fileRoot:"mystery-encounters",hasShadow:!0},{spriteKey:"preschooler_f",fileRoot:"trainer",hasShadow:!0}]).withIntroDialogue([{text:`${pE}:intro`},{text:`${pE}:intro_dialogue`,speaker:`${pE}:speaker`}]).withAutoHideIntroVisuals(!1).setLocalizationKey(`${pE}`).withTitle(`${pE}:title`).withDescription(`${pE}:description`).withQuery(`${pE}:query`).withOption(PA.newOptionWithMode(MA.DEFAULT).withDialogue({buttonLabel:`${pE}:option.1.label`,buttonTooltip:`${pE}:option.1.tooltip`,secondOptionPrompt:`${pE}:second_option_prompt`}).withPreOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;return Ut(r(R=>R.moveset.map(I=>({label:I.getName(),handler:r(()=>(t.setDialogueToken("moveCategory",D.t(`${pE}:physical`)),wM(R,I,u.PHYSICAL),!0),"handler")})),"onPokemonSelected"))}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;if(t.misc.correctMove){const E=[KE(x.TEMP_STAT_STAGE_BOOSTER,[h.ATK]),KE(x.TEMP_STAT_STAGE_BOOSTER,[h.DEF]),KE(x.TEMP_STAT_STAGE_BOOSTER,[h.SPD]),KE(x.DIRE_HIT),KE(x.RARER_CANDY)];lA({guaranteedModifierTypeOptions:E,fillRemaining:!1})}nA(!t.misc.correctMove)}).build()).withOption(PA.newOptionWithMode(MA.DEFAULT).withDialogue({buttonLabel:`${pE}:option.2.label`,buttonTooltip:`${pE}:option.2.tooltip`,secondOptionPrompt:`${pE}:second_option_prompt`}).withPreOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;return Ut(r(R=>R.moveset.map(I=>({label:I.getName(),handler:r(()=>(t.setDialogueToken("moveCategory",D.t(`${pE}:special`)),wM(R,I,u.SPECIAL),!0),"handler")})),"onPokemonSelected"))}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;if(t.misc.correctMove){const E=[KE(x.TEMP_STAT_STAGE_BOOSTER,[h.SPATK]),KE(x.TEMP_STAT_STAGE_BOOSTER,[h.SPDEF]),KE(x.TEMP_STAT_STAGE_BOOSTER,[h.SPD]),KE(x.DIRE_HIT),KE(x.RARER_CANDY)];lA({guaranteedModifierTypeOptions:E,fillRemaining:!1})}nA(!t.misc.correctMove)}).build()).withOption(PA.newOptionWithMode(MA.DEFAULT).withDialogue({buttonLabel:`${pE}:option.3.label`,buttonTooltip:`${pE}:option.3.tooltip`,secondOptionPrompt:`${pE}:second_option_prompt`}).withPreOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;return Ut(r(R=>R.moveset.map(I=>({label:I.getName(),handler:r(()=>(t.setDialogueToken("moveCategory",D.t(`${pE}:status`)),wM(R,I,u.STATUS),!0),"handler")})),"onPokemonSelected"))}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;if(t.misc.correctMove){const E=[KE(x.TEMP_STAT_STAGE_BOOSTER,[h.ACC]),KE(x.TEMP_STAT_STAGE_BOOSTER,[h.SPD]),KE(x.GREAT_BALL),KE(x.IV_SCANNER),KE(x.RARER_CANDY)];lA({guaranteedModifierTypeOptions:E,fillRemaining:!1})}nA(!t.misc.correctMove)}).build()).build();function wM(t,E,R){const I=s.currentBattle.mysteryEncounter,N=E.getMove().category===R;I.setDialogueToken("pokeName",t.getNameToRender()),I.setDialogueToken("move",E.getName()),N?(I.selectedOption.dialogue.selected=[{text:`${pE}:option.selected`},{text:`${pE}:correct`,speaker:`${pE}:speaker`},{text:`${pE}:correct_exp`}],WR([t.id],100)):(I.selectedOption.dialogue.selected=[{text:`${pE}:option.selected`},{text:`${pE}:incorrect`,speaker:`${pE}:speaker`},{text:`${pE}:incorrect_exp`}],WR(s.getPlayerParty().map(S=>S.id),50)),I.misc={correctMove:N}}r(wM,"pokemonAndMoveChosen");const zv=[A.PLUCK,A.COVET,A.KNOCK_OFF,A.THIEF,A.TRICK,A.SWITCHEROO],jv=[A.CHARM,A.FLATTER,A.DRAGON_CHEER,A.ALLURING_VOICE,A.ATTRACT,A.SWEET_SCENT,A.CAPTIVATE,A.AROMATIC_MIST],D2=[A.AQUA_STEP,A.CLANGOROUS_SOUL,A.DRAGON_DANCE,A.FEATHER_DANCE,A.FIERY_DANCE,A.LUNAR_DANCE,A.PETAL_DANCE,A.REVELATION_DANCE,A.QUIVER_DANCE,A.SWORDS_DANCE,A.TEETER_DANCE,A.VICTORY_DANCE];A.FAKE_OUT,A.FOLLOW_ME,A.TAUNT,A.ROAR,A.TELEPORT,A.CHARM,A.FAKE_TEARS,A.TICKLE,A.CAPTIVATE,A.RAGE_POWDER,A.SUBSTITUTE,A.SHED_TAIL;A.PROTECT,A.WIDE_GUARD,A.MAX_GUARD,A.SAFEGUARD,A.REFLECT,A.BARRIER,A.QUICK_GUARD,A.FLOWER_SHIELD,A.KINGS_SHIELD,A.CRAFTY_SHIELD,A.SPIKY_SHIELD,A.OBSTRUCT,A.DETECT;const DZ=[A.BIND,A.CLAMP,A.INFESTATION,A.SAND_TOMB,A.SNAP_TRAP,A.THUNDER_CAGE,A.WRAP,A.SPIRIT_SHACKLE,A.MEAN_LOOK,A.JAW_LOCK,A.BLOCK,A.SPIDER_WEB,A.ANCHOR_SHOT,A.OCTOLOCK,A.PURSUIT,A.CONSTRICT,A.BEAT_UP,A.COIL,A.WRING_OUT,A.STRING_SHOT],MZ=[O.INTIMIDATE,O.ARENA_TRAP,O.SHADOW_TAG,O.SUCTION_CUPS,O.STICKY_HOLD],PZ=[O.FLAME_BODY,O.FLASH_FIRE,O.WELL_BAKED_BODY,O.HEATPROOF,O.THERMAL_EXCHANGE,O.THICK_FAT,O.WATER_BUBBLE,O.MAGMA_ARMOR,O.WATER_VEIL,O.STEAM_ENGINE,O.PRIMORDIAL_SEA],iL=class iL extends kt{constructor(E,R,I,N,S=!0,T=!1,i=!0,o=null,C=!1,U=!1){super(E),this.selfTarget=R,this.stats=I,this.stages=N,this.showMessage=S,this.ignoreAbilities=T,this.canBeCopied=i,this.onChange=o,this.comingFromMirrorArmorUser=C,this.comingFromStickyWeb=U}start(){var o;if(this.stats.length>1){for(let C=0;C<this.stats.length;C++){const U=[this.stats[C]];s.unshiftPhase(new iL(this.battlerIndex,this.selfTarget,U,this.stages,this.showMessage,this.ignoreAbilities,this.canBeCopied,this.onChange,this.comingFromMirrorArmorUser))}return this.end()}const E=this.getPokemon();let R;if(E.isPlayer())if(!this.comingFromStickyWeb)R=s.getEnemyField()[s.currentBattle.lastEnemyInvolved];else{const C=s.arena.findTagsOnSide(U=>U.tagType===oe.STICKY_WEB,qe.PLAYER)[0].sourceId;s.getEnemyField().forEach(U=>{U.id===C&&(R=U)})}else if(!this.comingFromStickyWeb)R=s.getPlayerField()[s.currentBattle.lastPlayerInvolved];else{const C=s.arena.findTagsOnSide(U=>U.tagType===oe.STICKY_WEB,qe.ENEMY)[0].sourceId;s.getPlayerField().forEach(U=>{U.id===C&&(R=U)})}if(!E.isActive(!0))return this.end();const I=new me(this.stages);this.ignoreAbilities||sA(Sr,E,null,!1,I);let N=!1;const S=this.stats.filter(C=>{const U=new SA(!1);if(!this.selfTarget&&I.value<0&&s.arena.applyTagsForSide(HC,E.isPlayer()?qe.PLAYER:qe.ENEMY,!1,null,U),!U.value&&!this.selfTarget&&I.value<0){Bi(sO,E,C,U,N),Bi(fS,E,C,U,N,E);const _=E.getAlly();Ne(_)||Bi(fS,_,C,U,N,E),R!==void 0&&!E.findTag(G=>G instanceof gl)&&!this.comingFromMirrorArmorUser&&Bi(jC,E,C,U,N,R,this.stages)}return U.value&&(N=!0),!U.value}),T=S.map(C=>(I.value>=1?Math.min(E.getStatStage(C)+I.value,6):Math.max(E.getStatStage(C)+I.value,-6))-E.getStatStage(C));(o=this.onChange)==null||o.call(this,this.getPokemon(),S,T);const i=r(()=>{if(this.showMessage){const U=this.getStatStageChangeMessages(S,I.value,T);for(const _ of U)s.queueMessage(_)}for(const U of S)I.value>0&&E.getStatStage(U)<6?E.turnData.statStagesIncreased=!0:I.value<0&&E.getStatStage(U)>-6&&(E.turnData.statStagesDecreased=!0),E.setStatStage(U,E.getStatStage(U)+I.value);if(I.value>0&&this.canBeCopied)for(const U of E.getOpponents())sA(Cl,U,null,!1,this.stats,I.value);if(z9(WC,E,S,this.stages,this.selfTarget),!(s.findPhase(U=>U instanceof iL&&U.battlerIndex===this.battlerIndex)instanceof iL)){const U=s.applyModifier(xr,this.player,E);U&&(E.loseHeldItem(U),s.updateModifiers(this.player))}E.updateInfo(),$1(PL.Stat_Change).then(()=>super.end())},"end");if(T.filter(C=>C).length&&s.moveAnimations){E.enableMask();const C=E.maskSprite,U=(this.player?106:236)*E.getSpriteScale()*s.field.scale,_=((this.player?148:84)+(I.value>=1?160:0))*E.getSpriteScale()*s.field.scale,G=156*s.field.scale*E.getSpriteScale(),H=316*s.field.scale*E.getSpriteScale(),c=I.value>=1?h[h.ATK].toLowerCase():h[h.SPD].toLowerCase(),f=s.add.tileSprite(U,_,G,H,"battle_stats",c);f.setPipeline(s.fieldSpritePipeline),f.setAlpha(0),f.setScale(6),f.setOrigin(.5,1),s.playSound(`se/stat_${I.value>=1?"up":"down"}`),f.setMask(new Phaser.Display.Masks.BitmapMask(s,C??void 0)),s.tweens.add({targets:f,duration:250,alpha:.8375,onComplete:r(()=>{s.tweens.add({targets:f,delay:1e3,duration:250,alpha:0})},"onComplete")}),s.tweens.add({targets:f,duration:1500,y:`${I.value>=1?"-":"+"}=${160*6}`}),s.time.delayedCall(1750,()=>{E.disableMask(),i()})}else i()}aggregateStatStageChanges(){const E=[h.ACC,h.EVA],R=E.some(N=>this.stats.includes(N));let I;if(this.stats.length===1)for(;(I=s.findPhase(N=>N instanceof iL&&N.battlerIndex===this.battlerIndex&&N.stats.length===1&&N.stats[0]===this.stats[0]&&N.selfTarget===this.selfTarget&&N.showMessage===this.showMessage&&N.ignoreAbilities===this.ignoreAbilities))&&(this.stages+=I.stages,!!s.tryRemovePhase(N=>N===I)););for(;(I=s.findPhase(N=>N instanceof iL&&N.battlerIndex===this.battlerIndex&&N.selfTarget===this.selfTarget&&E.some(S=>N.stats.includes(S))===R&&N.stages===this.stages&&N.showMessage===this.showMessage&&N.ignoreAbilities===this.ignoreAbilities))&&(this.stats.push(...I.stats),!!s.tryRemovePhase(N=>N===I)););}getStatStageChangeMessages(E,R,I){const N=[],S={};for(let T=0;T<I.length;T++){const i=I[T];S[i]||(S[i]=[]),S[i].push(T)}return Object.keys(S).forEach(T=>{const i=E.filter((C,U)=>S[T].includes(U));let o="";i.length>1?(o=i.length>=5?D.t("battle:stats"):`${i.slice(0,-1).map(C=>D.t(et(C))).join(", ")}${i.length>2?",":""} ${D.t("battle:statsAnd")} ${D.t(et(i[i.length-1]))}`,N.push(D.t(jw(Math.abs(Number.parseInt(T)),R>=1),{pokemonNameWithAffix:Z(this.getPokemon()),stats:o,count:i.length}))):(o=D.t(et(i[0])),N.push(D.t(jw(Math.abs(Number.parseInt(T)),R>=1),{pokemonNameWithAffix:Z(this.getPokemon()),stats:o,count:i.length})))}),N}};r(iL,"StatStageChangePhase");let hA=iL;const LR="mysteryEncounters/fightOrFlight",GZ=NE.withEncounterType(ge.FIGHT_OR_FLIGHT).withEncounterTier(QA.COMMON).withSceneWaveRangeRequirement(...mE).withCatchAllowed(!0).withHideWildIntroMessage(!0).withFleeAllowed(!1).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${LR}:intro`}]).withOnInit(()=>{const t=s.currentBattle.mysteryEncounter,E=Si(si),R=Lc(E,!0);t.setDialogueToken("enemyPokemon",R.getNameToRender());const I={pokemonConfigs:[{level:E,species:R.species,dataSource:new Zt(R),isBoss:!0,tags:[Y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:r(o=>{YE(`${LR}:option.1.stat_boost`),s.unshiftPhase(new hA(o.getBattlerIndex(),!0,[De(4,1)],2))},"mysteryEncounterBattleEffects")}]};t.enemyPartyConfigs=[I];const N=s.currentBattle.waveIndex>160?p.MASTER:s.currentBattle.waveIndex>120?p.ROGUE:s.currentBattle.waveIndex>40?p.ULTRA:p.GREAT;jL(s.getPlayerParty(),lt.PLAYER,0);let S=null;for(;!S||S.type.id.includes("TM_")||S.type.id==="CANDY_JAR";)S=z1(1,s.getPlayerParty(),[],{guaranteedModifierTiers:[N],allowLuckUpgrades:!1})[0];t.setDialogueToken("itemName",S.type.name),t.misc=S;const{spriteKey:T,fileRoot:i}=cM(R);return t.spriteConfigs=[{spriteKey:S.type.iconImage,fileRoot:"items",hasShadow:!1,x:35,y:-5,scale:.75,isItem:!0,disableAnimation:!0},{spriteKey:T,fileRoot:i,hasShadow:!0,tint:.25,x:-5,repeat:!0,isPokemon:!0,isShiny:R.shiny,variant:R.variant}],!0}).setLocalizationKey(`${LR}`).withTitle(`${LR}:title`).withDescription(`${LR}:description`).withQuery(`${LR}:query`).withSimpleOption({buttonLabel:`${LR}:option.1.label`,buttonTooltip:`${LR}:option.1.tooltip`,selected:[{text:`${LR}:option.1.selected`}]},async()=>{const t=s.currentBattle.mysteryEncounter.misc;lA({guaranteedModifierTypeOptions:[t],fillRemaining:!1}),await HE(s.currentBattle.mysteryEncounter.enemyPartyConfigs[0])}).withOption(PA.newOptionWithMode(MA.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new wL(zv,!0)).withDialogue({buttonLabel:`${LR}:option.2.label`,buttonTooltip:`${LR}:option.2.tooltip`,disabledButtonTooltip:`${LR}:option.2.disabled_tooltip`,selected:[{text:`${LR}:option.2.selected`}]}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter,E=s.currentBattle.mysteryEncounter.misc;lA({guaranteedModifierTypeOptions:[E],fillRemaining:!1});const R=t.options[1].primaryPokemon;WR(R.id,t.enemyPartyConfigs[0].pokemonConfigs[0].species.baseExp),nA()}).build()).withSimpleOption({buttonLabel:`${LR}:option.3.label`,buttonTooltip:`${LR}:option.3.tooltip`,selected:[{text:`${LR}:option.3.selected`}]},async()=>(nA(!0),!0)).build(),M2=A.SURF,P2=A.FLY,G2=25,_t="mysteryEncounters/lostAtSea",_Z=NE.withEncounterType(ge.LOST_AT_SEA).withEncounterTier(QA.COMMON).withSceneWaveRangeRequirement(...mE).withIntroSpriteConfigs([{spriteKey:"lost_at_sea_buoy",fileRoot:"mystery-encounters",hasShadow:!1,x:20,y:3}]).withIntroDialogue([{text:`${_t}:intro`}]).withOnInit(()=>{const t=s.currentBattle.mysteryEncounter;return t.setDialogueToken("damagePercentage",String(G2)),t.setDialogueToken("option1RequiredMove",new Ye(M2).getName()),t.setDialogueToken("option2RequiredMove",new Ye(P2).getName()),!0}).setLocalizationKey(`${_t}`).withTitle(`${_t}:title`).withDescription(`${_t}:description`).withQuery(`${_t}:query`).withOption(PA.newOptionWithMode(MA.DISABLED_OR_DEFAULT).withPokemonCanLearnMoveRequirement(M2).withDialogue({buttonLabel:`${_t}:option.1.label`,disabledButtonLabel:`${_t}:option.1.label_disabled`,buttonTooltip:`${_t}:option.1.tooltip`,disabledButtonTooltip:`${_t}:option.1.tooltip_disabled`,selected:[{text:`${_t}:option.1.selected`}]}).withOptionPhase(async()=>_2()).build()).withOption(PA.newOptionWithMode(MA.DISABLED_OR_DEFAULT).withPokemonCanLearnMoveRequirement(P2).withDialogue({buttonLabel:`${_t}:option.2.label`,disabledButtonLabel:`${_t}:option.2.label_disabled`,buttonTooltip:`${_t}:option.2.tooltip`,disabledButtonTooltip:`${_t}:option.2.tooltip_disabled`,selected:[{text:`${_t}:option.2.selected`}]}).withOptionPhase(async()=>_2()).build()).withSimpleOption({buttonLabel:`${_t}:option.3.label`,buttonTooltip:`${_t}:option.3.tooltip`,selected:[{text:`${_t}:option.3.selected`}]},async()=>{const t=s.getPlayerParty().filter(E=>E.isAllowedInBattle());for(const E of t){const R=G2/100,I=Math.floor(E.getMaxHp()*R);Tc(E,I)}return nA(),!0}).withOutroDialogue([{text:`${_t}:outro`}]).build();function _2(){var R,I;const t=de(e.LAPRAS),{mysteryEncounter:E}=s.currentBattle;return(I=(R=E==null?void 0:E.selectedOption)==null?void 0:R.primaryPokemon)!=null&&I.id?WR(E.selectedOption.primaryPokemon.id,t.baseExp,!0):console.warn("Lost at sea: No guide pokemon found but pokemon guides player. huh!?"),nA(),!0}r(_2,"handlePokemonGuidingYouPhase");const cR="mysteryEncounters/mysteriousChallengers",uZ=NE.withEncounterType(ge.MYSTERIOUS_CHALLENGERS).withEncounterTier(QA.GREAT).withSceneWaveRangeRequirement(...mE).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${cR}:intro`}]).withOnInit(()=>{const t=s.currentBattle.mysteryEncounter,E=s.arena.randomTrainerType(s.currentBattle.waveIndex),R=yE[E].clone();let I=!1;R.hasGenders&&(I=!!De(2));const N=R.getSpriteKey(I,R.doubleOnly);t.enemyPartyConfigs.push({trainerConfig:R,female:I});let S=0,T=s.arena.randomTrainerType(s.currentBattle.waveIndex);for(;S<5&&T===E;)T=s.arena.randomTrainerType(s.currentBattle.waveIndex),S++;const i=new iE(new pe(1,ce.STRONGER,!1,!0),new pe(Math.min(Math.ceil(s.currentBattle.waveIndex/20),5),ce.AVERAGE,!1,!0)),o=yE[T].clone();o.setPartyTemplates(i),I=!1,o.hasGenders&&(I=!!De(2));const C=o.getSpriteKey(I,o.doubleOnly);t.enemyPartyConfigs.push({trainerConfig:o,levelAdditiveModifier:1,female:I});const U=s.arena.randomTrainerType(s.currentBattle.waveIndex,!0),_=ue.ELITE_FOUR,G=yE[U].clone();G.title=yE[U].title,G.setPartyTemplates(_),G.partyTemplateFunc=null,I=!1,G.hasGenders&&(I=!!De(2));const H=G.getSpriteKey(I,G.doubleOnly);return t.enemyPartyConfigs.push({trainerConfig:G,levelAdditiveModifier:1.5,female:I}),t.spriteConfigs=[{spriteKey:N,fileRoot:"trainer",hasShadow:!0,tint:1},{spriteKey:C,fileRoot:"trainer",hasShadow:!0,tint:1},{spriteKey:H,fileRoot:"trainer",hasShadow:!0,tint:1}],!0}).setLocalizationKey(`${cR}`).withTitle(`${cR}:title`).withDescription(`${cR}:description`).withQuery(`${cR}:query`).withSimpleOption({buttonLabel:`${cR}:option.1.label`,buttonTooltip:`${cR}:option.1.tooltip`,selected:[{text:`${cR}:option.selected`}]},async()=>{const E=s.currentBattle.mysteryEncounter.enemyPartyConfigs[0];lA({guaranteedModifierTypeFuncs:[x.TM_COMMON,x.TM_GREAT,x.MEMORY_MUSHROOM],fillRemaining:!0});let R;s.executeWithSeedOffset(()=>{R=HE(E)},s.currentBattle.waveIndex*10),await R}).withSimpleOption({buttonLabel:`${cR}:option.2.label`,buttonTooltip:`${cR}:option.2.tooltip`,selected:[{text:`${cR}:option.selected`}]},async()=>{const E=s.currentBattle.mysteryEncounter.enemyPartyConfigs[1];lA({guaranteedModifierTiers:[p.ULTRA,p.ULTRA,p.GREAT,p.GREAT],fillRemaining:!0});let R;s.executeWithSeedOffset(()=>{R=HE(E)},s.currentBattle.waveIndex*100),await R}).withSimpleOption({buttonLabel:`${cR}:option.3.label`,buttonTooltip:`${cR}:option.3.tooltip`,selected:[{text:`${cR}:option.selected`}]},async()=>{const t=s.currentBattle.mysteryEncounter,E=t.enemyPartyConfigs[2];t.expMultiplier=.9,lA({guaranteedModifierTiers:[p.ROGUE,p.ROGUE,p.ULTRA,p.GREAT],fillRemaining:!0});let R;s.executeWithSeedOffset(()=>{R=HE(E)},s.currentBattle.waveIndex*1e3),await R}).withOutroDialogue([{text:`${cR}:outro`}]).build(),NR="mysteryEncounters/mysteriousChest",iT=100,u2=30,oT=25,Pi=30,VM=10,H2=5,HZ=NE.withEncounterType(ge.MYSTERIOUS_CHEST).withEncounterTier(QA.COMMON).withSceneWaveRangeRequirement(...mE).withScenePartySizeRequirement(2,6,!0).withAutoHideIntroVisuals(!1).withCatchAllowed(!0).withIntroSpriteConfigs([{spriteKey:"mysterious_chest_blue",fileRoot:"mystery-encounters",hasShadow:!0,y:8,yShadow:6,alpha:1,disableAnimation:!0},{spriteKey:"mysterious_chest_red",fileRoot:"mystery-encounters",hasShadow:!1,y:8,yShadow:6,alpha:0,disableAnimation:!0}]).withIntroDialogue([{text:`${NR}:intro`}]).setLocalizationKey(`${NR}`).withTitle(`${NR}:title`).withDescription(`${NR}:description`).withQuery(`${NR}:query`).withOnInit(()=>{const t=s.currentBattle.mysteryEncounter,E={levelAdditiveModifier:.5,disableSwitch:!0,pokemonConfigs:[{species:de(e.GIMMIGHOUL),formIndex:0,isBoss:!0,moveSet:[A.NASTY_PLOT,A.SHADOW_BALL,A.POWER_GEM,A.THIEF]}]};return t.enemyPartyConfigs=[E],t.setDialogueToken("gimmighoulName",de(e.GIMMIGHOUL).getName()),t.setDialogueToken("trapPercent",u2.toString()),t.setDialogueToken("commonPercent",oT.toString()),t.setDialogueToken("ultraPercent",Pi.toString()),t.setDialogueToken("roguePercent",VM.toString()),t.setDialogueToken("masterPercent",H2.toString()),!0}).withOption(PA.newOptionWithMode(MA.DEFAULT).withDialogue({buttonLabel:`${NR}:option.1.label`,buttonTooltip:`${NR}:option.1.tooltip`,selected:[{text:`${NR}:option.1.selected`}]}).withPreOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter,E=t.introVisuals,R=De(iT);if(t.misc={roll:R},R<u2){const I=E.getSpriteAtIndex(0);E.getSpriteAtIndex(1)[0].setAlpha(1),I[0].setAlpha(.001)}E.spriteConfigs[0].disableAnimation=!1,E.spriteConfigs[1].disableAnimation=!1,E.playAnim()}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter,E=t.misc.roll;if(E>=iT-oT)lA({guaranteedModifierTiers:[p.COMMON,p.COMMON,p.GREAT,p.GREAT]}),YE(`${NR}:option.1.normal`),nA();else if(E>=iT-oT-Pi)lA({guaranteedModifierTiers:[p.ULTRA,p.ULTRA,p.ULTRA]}),YE(`${NR}:option.1.good`),nA();else if(E>=iT-oT-Pi-VM)lA({guaranteedModifierTiers:[p.ROGUE,p.ROGUE]}),YE(`${NR}:option.1.great`),nA();else if(E>=iT-oT-Pi-VM-H2)lA({guaranteedModifierTiers:[p.MASTER]}),YE(`${NR}:option.1.amazing`),nA();else{const R=sc(!0,!1);Qv(R),t.setDialogueToken("pokeName",R.getNameToRender()),await fA(`${NR}:option.1.bad`),s.getPokemonAllowedInBattle().length===0?(s.clearPhaseQueue(),s.unshiftPhase(new $O)):(await uE(!0,!0,500),lA({fillRemaining:!0}),await HE(t.enemyPartyConfigs[0]))}}).build()).withSimpleOption({buttonLabel:`${NR}:option.2.label`,buttonTooltip:`${NR}:option.2.tooltip`,selected:[{text:`${NR}:option.2.selected`}]},async()=>(nA(!0),!0)).build(),It="mysteryEncounters/shadyVitaminDealer",c2=1.5,cZ=5,BZ=NE.withEncounterType(ge.SHADY_VITAMIN_DEALER).withEncounterTier(QA.COMMON).withSceneWaveRangeRequirement(...mE).withSceneRequirement(new zO(0,c2)).withPrimaryPokemonHealthRatioRequirement([.51,1]).withIntroSpriteConfigs([{spriteKey:e.KROOKODILE.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,x:12,y:-5,yShadow:-5},{spriteKey:"shady_vitamin_dealer",fileRoot:"mystery-encounters",hasShadow:!0,x:-12,y:3,yShadow:3}]).withIntroDialogue([{text:`${It}:intro`},{text:`${It}:intro_dialogue`,speaker:`${It}:speaker`}]).setLocalizationKey(`${It}`).withTitle(`${It}:title`).withDescription(`${It}:description`).withQuery(`${It}:query`).withOption(PA.newOptionWithMode(MA.DISABLED_OR_DEFAULT).withSceneMoneyRequirement(0,c2).withDialogue({buttonLabel:`${It}:option.1.label`,buttonTooltip:`${It}:option.1.tooltip`,selected:[{text:`${It}:option.selected`}]}).withPreOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;return Ut(r(I=>{rO(-t.options[0].requirements[0].requiredMoney);const N=[RA(x.BASE_STAT_BOOSTER),RA(x.BASE_STAT_BOOSTER)];t.setDialogueToken("boost1",N[0].name),t.setDialogueToken("boost2",N[1].name),t.misc={chosenPokemon:I,modifiers:N}},"onPokemonSelected"),void 0,r(I=>I.isAllowedInChallenge()?t.pokemonMeetsPrimaryRequirements(I)?null:xE(`${It}:invalid_selection`)??null:D.t("partyUiHandler:cantBeUsed",{pokemonName:I.getNameToRender()})??null,"selectableFilter"))}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter,E=t.misc.chosenPokemon,R=t.misc.modifiers;for(const I of R)await zR(E,I);nA(!0)}).withPostOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter,E=t.misc.chosenPokemon;Tc(E,Math.floor(E.getMaxHp()/2));const R=E.nature;let I=De(25);for(;I===R;)I=De(25);E.setCustomNature(I),t.setDialogueToken("newNature",QO(I)),YE(`${It}:cheap_side_effects`),WR([E.id],100),await E.updateInfo()}).build()).withOption(PA.newOptionWithMode(MA.DISABLED_OR_DEFAULT).withSceneMoneyRequirement(0,cZ).withDialogue({buttonLabel:`${It}:option.2.label`,buttonTooltip:`${It}:option.2.tooltip`,selected:[{text:`${It}:option.selected`}]}).withPreOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;return Ut(r(I=>{rO(-t.options[1].requirements[0].requiredMoney);const N=[RA(x.BASE_STAT_BOOSTER),RA(x.BASE_STAT_BOOSTER)];t.setDialogueToken("boost1",N[0].name),t.setDialogueToken("boost2",N[1].name),t.misc={chosenPokemon:I,modifiers:N}},"onPokemonSelected"),void 0,r(I=>fN(I,`${It}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter,E=t.misc.chosenPokemon,R=t.misc.modifiers;for(const I of R)await zR(E,I);nA(!0)}).withPostOptionPhase(async()=>{const E=s.currentBattle.mysteryEncounter.misc.chosenPokemon;YE(`${It}:no_bad_effects`),WR([E.id],100),await E.updateInfo()}).build()).withSimpleOption({buttonLabel:`${It}:option.3.label`,buttonTooltip:`${It}:option.3.tooltip`,selected:[{text:`${It}:option.3.selected`,speaker:`${It}:speaker`}]},async()=>(nA(!0),!0)).build(),sR="mysteryEncounters/slumberingSnorlax",hZ=NE.withEncounterType(ge.SLUMBERING_SNORLAX).withEncounterTier(QA.GREAT).withSceneWaveRangeRequirement(15,150).withCatchAllowed(!0).withHideWildIntroMessage(!0).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:e.SNORLAX.toString(),fileRoot:"pokemon",hasShadow:!0,tint:.25,scale:1.25,repeat:!0,y:5}]).withIntroDialogue([{text:`${sR}:intro`}]).withOnInit(()=>{const t=s.currentBattle.mysteryEncounter;console.log(t);const I={levelAdditiveModifier:.5,pokemonConfigs:[{species:de(e.SNORLAX),isBoss:!0,shiny:!1,status:[J.SLEEP,6],nature:be.DOCILE,moveSet:[A.BODY_SLAM,A.CRUNCH,A.SLEEP_TALK,A.REST],modifierConfigs:[{modifier:RA(x.BERRY,[OA.SITRUS])},{modifier:RA(x.BERRY,[OA.ENIGMA])},{modifier:RA(x.BASE_STAT_BOOSTER,[h.HP])},{modifier:RA(x.SOOTHE_BELL),stackCount:De(2,0)},{modifier:RA(x.LUCKY_EGG),stackCount:De(2,0)}],customPokemonData:new lR({spriteScale:1.25}),aiType:P6.SMART}]};return t.enemyPartyConfigs=[I],Ni([A.SNORE]),t.setDialogueToken("snorlaxName",de(e.SNORLAX).getName()),!0}).setLocalizationKey(`${sR}`).withTitle(`${sR}:title`).withDescription(`${sR}:description`).withQuery(`${sR}:query`).withSimpleOption({buttonLabel:`${sR}:option.1.label`,buttonTooltip:`${sR}:option.1.tooltip`,selected:[{text:`${sR}:option.1.selected`}]},async()=>{const t=s.currentBattle.mysteryEncounter;lA({guaranteedModifierTypeFuncs:[x.LEFTOVERS],fillRemaining:!0}),t.startOfBattleEffects.push({sourceBattlerIndex:FA.ENEMY,targets:[FA.PLAYER],move:new Ye(A.SNORE),ignorePp:!0}),await HE(t.enemyPartyConfigs[0])}).withSimpleOption({buttonLabel:`${sR}:option.2.label`,buttonTooltip:`${sR}:option.2.tooltip`,selected:[{text:`${sR}:option.2.selected`}]},async()=>{s.unshiftPhase(new DS(!0)),YE(`${sR}:option.2.rest_result`),nA()}).withOption(PA.newOptionWithMode(MA.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new wL(zv,!0)).withDialogue({buttonLabel:`${sR}:option.3.label`,buttonTooltip:`${sR}:option.3.tooltip`,disabledButtonTooltip:`${sR}:option.3.disabled_tooltip`,selected:[{text:`${sR}:option.3.selected`}]}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;lA({guaranteedModifierTypeFuncs:[x.LEFTOVERS],fillRemaining:!1}),WR(t.primaryPokemon.id,de(e.SNORLAX).baseExp),nA()}).build()).build(),ZE="mysteryEncounters/trainingSession",fZ=NE.withEncounterType(ge.TRAINING_SESSION).withEncounterTier(QA.ULTRA).withSceneWaveRangeRequirement(...mE).withScenePartySizeRequirement(2,6,!0).withFleeAllowed(!1).withHideWildIntroMessage(!0).withPreventGameStatsUpdates(!0).withIntroSpriteConfigs([{spriteKey:"training_session_gear",fileRoot:"mystery-encounters",hasShadow:!0,y:6,x:5,yShadow:-2}]).withIntroDialogue([{text:`${ZE}:intro`}]).setLocalizationKey(`${ZE}`).withTitle(`${ZE}:title`).withDescription(`${ZE}:description`).withQuery(`${ZE}:query`).withOption(PA.newOptionWithMode(MA.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${ZE}:option.1.label`,buttonTooltip:`${ZE}:option.1.tooltip`,selected:[{text:`${ZE}:option.selected`}]}).withPreOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;return Ut(r(I=>{t.misc={playerPokemon:I}},"onPokemonSelected"),void 0,r(I=>fN(I,`${ZE}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter,E=t.misc.playerPokemon,R=Math.min(2+Math.floor(s.currentBattle.waveIndex/50),5),I=new WT,N=vM(E,R,I);s.removePokemonFromPlayerParty(E,!1),lA({fillRemaining:!0},void 0,r(()=>{t.setDialogueToken("stat1","-"),t.setDialogueToken("stat2","-");let T=[];E.ivs.forEach((o,C)=>{o<31&&T.push({iv:o,index:C})});let i=0;for(;T.length>0&&i<2;){T=lI(T);const o=T.pop();let C=o.iv;i===0?t.setDialogueToken("stat1",D.t(et(o.index))??""):t.setDialogueToken("stat2",D.t(et(o.index))??""),o.iv<=21&&o.iv-1%5===0&&(C+=1),C+=o.iv<=10?10:o.iv<=20?5:3,C=Math.min(C,31),E.ivs[o.index]=C,i++}i>0&&(E.calculateStats(),s.gameData.updateSpeciesDexIvs(E.species.getRootSpeciesId(!0),E.ivs),s.gameData.setPokemonCaught(E,!1)),s.getPlayerParty().push(E);for(const o of I.value)o.pokemonId=E.id,s.addModifier(o,!0,!1,!1,!0);s.updateModifiers(!0),YE(`${ZE}:option.1.finished`)},"onBeforeRewardsPhase")),await HE(N)}).build()).withOption(PA.newOptionWithMode(MA.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${ZE}:option.2.label`,buttonTooltip:`${ZE}:option.2.tooltip`,secondOptionPrompt:`${ZE}:option.2.select_prompt`,selected:[{text:`${ZE}:option.selected`}]}).withPreOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter,E=new Array(25).fill(null).map((N,S)=>S);return Ut(r(N=>E.map(S=>({label:QO(S,!0,!0,!0,s.uiTheme),handler:r(()=>(t.setDialogueToken("nature",QO(S)),t.misc={playerPokemon:N,chosenNature:S},!0),"handler")})),"onPokemonSelected"),void 0,r(N=>fN(N,`${ZE}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter,E=t.misc.playerPokemon,R=Math.min(2+Math.floor(s.currentBattle.waveIndex/40),6),I=new WT,N=vM(E,R,I);s.removePokemonFromPlayerParty(E,!1),lA({fillRemaining:!0},void 0,r(()=>{YE(`${ZE}:option.2.finished`),E.setCustomNature(t.misc.chosenNature),s.gameData.unlockSpeciesNature(E.species,t.misc.chosenNature),s.getPlayerParty().push(E);for(const T of I.value)T.pokemonId=E.id,s.addModifier(T,!0,!1,!1,!0);s.updateModifiers(!0)},"onBeforeRewardsPhase")),await HE(N)}).build()).withOption(PA.newOptionWithMode(MA.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${ZE}:option.3.label`,buttonTooltip:`${ZE}:option.3.tooltip`,secondOptionPrompt:`${ZE}:option.3.select_prompt`,selected:[{text:`${ZE}:option.selected`}]}).withPreOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;return Ut(r(I=>{const N=I.getFusionSpeciesForm()?I.getFusionSpeciesForm():I.getSpeciesForm(),S=N.getAbilityCount(),T=new Array(S).fill(null).map((o,C)=>qE[N.getAbility(C)]),i=[];return T.forEach((o,C)=>{if(!i.some(U=>U.label===o.name)){const U={label:o.name,handler:r(()=>(t.setDialogueToken("ability",o.name),t.misc={playerPokemon:I,abilityIndex:C},!0),"handler"),onHover:r(()=>{fA(o.description,0,0,!1)},"onHover")};i.push(U)}}),i},"onPokemonSelected"),void 0,r(I=>fN(I,`${ZE}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter,E=t.misc.playerPokemon,R=Math.min(2+Math.floor(s.currentBattle.waveIndex/30),6),I=new WT,N=vM(E,R,I);N.pokemonConfigs[0].tags=[Y.MYSTERY_ENCOUNTER_POST_SUMMON],s.removePokemonFromPlayerParty(E,!1),lA({fillRemaining:!0},void 0,r(()=>{var i,o;YE(`${ZE}:option.3.finished`);const T=t.misc.abilityIndex;if(E.getFusionSpeciesForm()){E.fusionAbilityIndex=T;const C=(i=E.fusionSpecies)==null?void 0:i.getRootSpeciesId();!Ne(C)&&kE.hasOwnProperty(C)&&s.gameData.dexData[C].caughtAttr&&(s.gameData.starterData[C].abilityAttr|=E.fusionAbilityIndex!==1||(o=E.fusionSpecies)!=null&&o.ability2?1<<E.fusionAbilityIndex:fI.ABILITY_HIDDEN)}else E.abilityIndex=T;E.calculateStats(),s.gameData.setPokemonCaught(E,!1),s.getPlayerParty().push(E);for(const C of I.value)C.pokemonId=E.id,s.addModifier(C,!0,!1,!1,!0);s.updateModifiers(!0)},"onBeforeRewardsPhase")),await HE(N)}).build()).withSimpleOption({buttonLabel:`${ZE}:option.4.label`,buttonTooltip:`${ZE}:option.4.tooltip`,selected:[{text:`${ZE}:option.4.selected`}]},async()=>(nA(!0),!0)).build();function vM(t,E,R){t.resetSummonData(),R.value=t.getHeldItems();const I=R.value.map(S=>({modifier:S.clone(),isTransferable:!1,stackCount:S.stackCount})),N=new Zt(t);return{pokemonConfigs:[{species:t.species,isBoss:!0,bossSegments:E,formIndex:t.formIndex,level:t.level,dataSource:N,modifierConfigs:I}]}}r(vM,"getEnemyConfig");const od=class od{constructor(){this.value=[]}};r(od,"ModifiersHolder");let WT=od;const nc=[e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.ROARING_MOON,e.WALKING_WAKE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.IRON_VALIANT,e.IRON_LEAVES,e.IRON_BOULDER,e.IRON_CROWN],dZ=[e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON],FE="mysteryEncounters/safariZone",AS=[512,184,768],B2=2,h2=3,KZ=NE.withEncounterType(ge.SAFARI_ZONE).withEncounterTier(QA.GREAT).withSceneWaveRangeRequirement(...mE).withSceneRequirement(new zO(0,B2)).withAutoHideIntroVisuals(!1).withIntroSpriteConfigs([{spriteKey:"safari_zone",fileRoot:"mystery-encounters",hasShadow:!1,x:4,y:6}]).withIntroDialogue([{text:`${FE}:intro`}]).setLocalizationKey(`${FE}`).withTitle(`${FE}:title`).withDescription(`${FE}:description`).withQuery(`${FE}:query`).withOnInit(()=>{var t;return(t=s.currentBattle.mysteryEncounter)==null||t.setDialogueToken("numEncounters",h2.toString()),!0}).withOption(PA.newOptionWithMode(MA.DISABLED_OR_DEFAULT).withSceneRequirement(new zO(0,B2)).withDialogue({buttonLabel:`${FE}:option.1.label`,buttonTooltip:`${FE}:option.1.tooltip`,selected:[{text:`${FE}:option.1.selected`}]}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;return t.continuousEncounter=!0,t.misc={safariPokemonRemaining:h2},rO(-t.options[0].requirements[0].requiredMoney),s.loadSe("PRSFX- Bug Bite","battle_anims","PRSFX- Bug Bite.wav"),s.loadSe("PRSFX- Sludge Bomb2","battle_anims","PRSFX- Sludge Bomb2.wav"),s.loadSe("PRSFX- Taunt2","battle_anims","PRSFX- Taunt2.wav"),s.loadAtlas("safari_zone_bait","mystery-encounters"),s.loadAtlas("safari_zone_mud","mystery-encounters"),s.currentBattle.enemyParty=[],await uE(),await CC(),Xa({overrideOptions:Qa,hideDescription:!0}),!0}).build()).withSimpleOption({buttonLabel:`${FE}:option.2.label`,buttonTooltip:`${FE}:option.2.tooltip`,selected:[{text:`${FE}:option.2.selected`}]},async()=>(nA(!0),!0)).build(),Qa=[PA.newOptionWithMode(MA.DEFAULT).withDialogue({buttonLabel:`${FE}:safari.1.label`,buttonTooltip:`${FE}:safari.1.tooltip`,selected:[{text:`${FE}:safari.1.selected`}]}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter,E=t.misc.pokemon;return await FZ(E)?t.misc.safariPokemonRemaining>0?(await CC(),Xa({overrideOptions:Qa,startingCursorIndex:0,hideDescription:!0})):(t.continuousEncounter=!1,nA(!0)):await xM(0),!0}).build(),PA.newOptionWithMode(MA.DEFAULT).withDialogue({buttonLabel:`${FE}:safari.2.label`,buttonTooltip:`${FE}:safari.2.tooltip`,selected:[{text:`${FE}:safari.2.selected`}]}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter.misc.pokemon;return await YZ(t),d2(2),f2(1,8)?await fA(xE(`${FE}:safari.eating`)??"",null,1e3,!1):await fA(xE(`${FE}:safari.busy_eating`)??"",null,1e3,!1),await xM(1),!0}).build(),PA.newOptionWithMode(MA.DEFAULT).withDialogue({buttonLabel:`${FE}:safari.3.label`,buttonTooltip:`${FE}:safari.3.tooltip`,selected:[{text:`${FE}:safari.3.selected`}]}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter.misc.pokemon;return await WZ(t),f2(-2),d2(-1,8)?await fA(xE(`${FE}:safari.angry`)??"",null,1e3,!1):await fA(xE(`${FE}:safari.beside_itself_angry`)??"",null,1e3,!1),await xM(2),!0}).build(),PA.newOptionWithMode(MA.DEFAULT).withDialogue({buttonLabel:`${FE}:safari.4.label`,buttonTooltip:`${FE}:safari.4.tooltip`}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter,E=t.misc.pokemon;return await nZ(E),t.misc.safariPokemonRemaining>0?(await CC(),Xa({overrideOptions:Qa,startingCursorIndex:3,hideDescription:!0})):(t.continuousEncounter=!1,nA(!0)),!0}).build()];async function CC(){const t=s.currentBattle.mysteryEncounter;t.setDialogueToken("remainingCount",t.misc.safariPokemonRemaining),s.queueMessage(xE(`${FE}:safari.remaining_count`)??"",null,!0);let E,R;s.executeWithSeedOffset(()=>{E=gZ();const N=s.currentBattle.getLevelForWave();if(E=de(E.getWildSpeciesForLevel(N,!0,!1,s.gameMode)),R=s.addEnemyPokemon(E,N,b.NONE,!1),R.shiny||R.trySetShinySeed(),R.species.abilityHidden){const S=R.species.ability2?2:1;if(R.abilityIndex<S){const T=new me(256);s.applyModifiers(MI,!0,T),!De(T.value)&&(R.abilityIndex=S)}}R.calculateStats(),s.currentBattle.enemyParty.unshift(R)},s.currentBattle.waveIndex*1e3*t.misc.safariPokemonRemaining),s.gameData.setPokemonSeen(R,!0),await R.loadAssets(),t.misc.catchStage=0,t.misc.fleeStage=0,t.misc.pokemon=R,t.misc.safariPokemonRemaining-=1,s.unshiftPhase(new Ft(0,!1)),t.setDialogueToken("pokemonName",Z(R)),s.findModifier(N=>N instanceof os)&&s.pushPhase(new Za(R.getBattlerIndex()))}r(CC,"summonSafariPokemon");function FZ(t){const E=t.species.catchRate,R=s.currentBattle.mysteryEncounter.misc.catchStage,I=(2+Math.min(Math.max(R,0),6))/(2-Math.max(Math.min(R,0),-6)),S=Math.round(E*1.5*I),T=Math.round(1048560/Math.sqrt(Math.sqrt(16711680/S)));return SZ(t,Me.POKEBALL,T)}r(FZ,"throwPokeball");async function YZ(t){const E=t.y,R=t.getFieldPositionOffset(),I=s.addFieldSprite(91,105,"safari_zone_bait","0001.png");return I.setOrigin(.5,.625),s.field.add(I),new Promise(N=>{s.trainer.setTexture(`trainer_${s.gameData.gender===YA.FEMALE?"f":"m"}_back_pb`),s.time.delayedCall(AS[0],()=>{s.playSound("se/pb_throw"),s.trainer.setFrame("2"),s.time.delayedCall(AS[1],()=>{s.trainer.setFrame("3"),s.time.delayedCall(AS[2],()=>{s.trainer.setTexture(`trainer_${s.gameData.gender===YA.FEMALE?"f":"m"}_back`)})}),s.tweens.add({targets:I,x:{value:210+R[0],ease:"Linear"},y:{value:55+R[1],ease:"Cubic.easeOut"},duration:500,onComplete:r(()=>{let S=1;s.time.delayedCall(768,()=>{s.tweens.add({targets:t,duration:150,ease:"Cubic.easeOut",yoyo:!0,y:E-5,loop:6,onStart:r(()=>{s.playSound("battle_anims/PRSFX- Bug Bite"),I.setFrame("0002.png")},"onStart"),onLoop:r(()=>{S%2===0&&s.playSound("battle_anims/PRSFX- Bug Bite"),S===4&&I.setFrame("0003.png"),S++},"onLoop"),onComplete:r(()=>{s.time.delayedCall(256,()=>{I.destroy(),N(!0)})},"onComplete")})})},"onComplete")})})})}r(YZ,"throwBait");async function WZ(t){const E=t.y,R=t.getFieldPositionOffset(),I=s.addFieldSprite(91,115,"safari_zone_mud","0001.png");return I.setOrigin(.5,.625),s.field.add(I),new Promise(N=>{s.trainer.setTexture(`trainer_${s.gameData.gender===YA.FEMALE?"f":"m"}_back_pb`),s.time.delayedCall(AS[0],()=>{s.playSound("se/pb_throw"),s.trainer.setFrame("2"),s.time.delayedCall(AS[1],()=>{s.trainer.setFrame("3"),s.time.delayedCall(AS[2],()=>{s.trainer.setTexture(`trainer_${s.gameData.gender===YA.FEMALE?"f":"m"}_back`)})}),s.tweens.add({targets:I,x:{value:230+R[0],ease:"Linear"},y:{value:55+R[1],ease:"Cubic.easeOut"},duration:500,onComplete:r(()=>{s.playSound("battle_anims/PRSFX- Sludge Bomb2"),I.setFrame("0002.png"),s.time.delayedCall(200,()=>{I.setFrame("0003.png"),s.time.delayedCall(400,()=>{I.setFrame("0004.png")})}),s.tweens.add({targets:I,alpha:0,ease:"Cubic.easeIn",duration:1e3,onComplete:r(()=>{I.destroy(),s.tweens.add({targets:t,duration:300,ease:"Cubic.easeOut",yoyo:!0,y:E-20,loop:1,onStart:r(()=>{s.playSound("battle_anims/PRSFX- Taunt2")},"onStart"),onLoop:r(()=>{s.playSound("battle_anims/PRSFX- Taunt2")},"onLoop"),onComplete:r(()=>{N(!0)},"onComplete")})},"onComplete")})},"onComplete")})})})}r(WZ,"throwMud");function mZ(t,E){const R=t.species.catchRate,I=(2+Math.min(Math.max(E,0),6))/(2-Math.max(Math.min(E,0),-6)),N=(255*255-R*R)/255/2*I;console.log("Flee rate: "+N);const S=De(256);return console.log("Roll: "+S),S<N}r(mZ,"isPokemonFlee");function f2(t,E){if(E&&De(10)>=E)return!1;const R=s.currentBattle.mysteryEncounter.misc.fleeStage??0;return s.currentBattle.mysteryEncounter.misc.fleeStage=Math.min(Math.max(R+t,-6),6),!0}r(f2,"tryChangeFleeStage");function d2(t,E){if(E&&De(10)>=E)return!1;const R=s.currentBattle.mysteryEncounter.misc.catchStage??0;return s.currentBattle.mysteryEncounter.misc.catchStage=Math.min(Math.max(R+t,-6),6),!0}r(d2,"tryChangeCatchStage");async function xM(t){const E=s.getEnemyParty();if(E.length>1){for(let S=1;S<E.length;S++)E[S].destroy();s.currentBattle.enemyParty=E.slice(0,1)}const R=s.currentBattle.mysteryEncounter,I=R.misc.pokemon;mZ(I,R.misc.fleeStage)?(await TZ(I),R.misc.safariPokemonRemaining>0?(await CC(),Xa({overrideOptions:Qa,startingCursorIndex:t,hideDescription:!0})):(R.continuousEncounter=!1,nA(!0))):(s.queueMessage(xE(`${FE}:safari.watching`)??"",0,null,1e3),Xa({overrideOptions:Qa,startingCursorIndex:t,hideDescription:!0}))}r(xM,"doEndTurn");function gZ(){return de(Sc([0,5],nc,void 0,!1,!1,!1))}r(gZ,"getSafariSpeciesSpawn");var aO=(t=>(t[t.MAGMA_BG=0]="MAGMA_BG",t[t.MAGMA_SPOUT=1]="MAGMA_SPOUT",t[t.SMOKESCREEN=2]="SMOKESCREEN",t[t.DANCE=3]="DANCE",t))(aO||{});const Cd=class Cd{constructor(E,R){this.isSuppressable=!0,this.isCopiable=!0,this.isReplaceable=!0,this.id=E,this.nameAppend="",this.generation=R,this.attrs=[],this.conditions=[],this.isSuppressable=!0,this.isCopiable=!0,this.isReplaceable=!0,this.localize()}get isSwappable(){return this.isCopiable&&this.isReplaceable}localize(){const E=O[this.id].split("_").filter(R=>R).map((R,I)=>I?`${R[0]}${R.slice(1).toLowerCase()}`:R.toLowerCase()).join("");this.name=this.id?`${D.t(`ability:${E}.name`)}${this.nameAppend}`:"",this.description=this.id?D.t(`ability:${E}.description`):""}getAttrs(E){return this.attrs.filter(R=>R instanceof E)}hasAttr(E){return this.attrs.some(R=>R instanceof E)}attr(E,...R){const I=new E(...R);return this.attrs.push(I),this}conditionalAttr(E,R,...I){const N=new R(...I);return N.addCondition(E),this.attrs.push(N),this}bypassFaint(){return this.isBypassFaint=!0,this}ignorable(){return this.isIgnorable=!0,this}unsuppressable(){return this.isSuppressable=!1,this}uncopiable(){return this.isCopiable=!1,this}unreplaceable(){return this.isReplaceable=!1,this}condition(E){return this.conditions.push(E),this}partial(){return this.nameAppend+=" (P)",this}unimplemented(){return this.nameAppend+=" (N)",this}edgeCase(){return this}};r(Cd,"Ability");let Q=Cd;const zt="mysteryEncounters/fieryFallout",pZ=20,yZ=NE.withEncounterType(ge.FIERY_FALLOUT).withEncounterTier(QA.COMMON).withSceneWaveRangeRequirement(40,mE[1]).withCatchAllowed(!0).withIntroSpriteConfigs([]).withAnimations(aO.MAGMA_BG,aO.MAGMA_SPOUT).withAutoHideIntroVisuals(!1).withFleeAllowed(!1).withIntroDialogue([{text:`${zt}:intro`}]).withOnInit(()=>{const t=s.currentBattle.mysteryEncounter,E=de(e.VOLCARONA),R={pokemonConfigs:[{species:E,isBoss:!1,gender:ye.MALE,tags:[Y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:r(N=>{s.unshiftPhase(new hA(N.getBattlerIndex(),!0,[h.SPDEF,h.SPD],1))},"mysteryEncounterBattleEffects")},{species:E,isBoss:!1,gender:ye.FEMALE,tags:[Y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:r(N=>{s.unshiftPhase(new hA(N.getBattlerIndex(),!0,[h.SPDEF,h.SPD],1))},"mysteryEncounterBattleEffects")}],doubleBattle:!0,disableSwitch:!0};t.enemyPartyConfigs=[R],t.spriteConfigs=[{spriteKey:"",fileRoot:"",species:e.VOLCARONA,repeat:!0,hidden:!0,hasShadow:!0,x:-20,startFrame:20},{spriteKey:"",fileRoot:"",species:e.VOLCARONA,repeat:!0,hidden:!0,hasShadow:!0,x:20}],Ni([A.FIRE_SPIN,A.QUIVER_DANCE]);const I=s.getEnemyPokemon();return s.arena.trySetWeather(X.SUNNY,I),t.setDialogueToken("volcaronaName",de(e.VOLCARONA).getName()),!0}).withOnVisualsStart(()=>{new VI(aO.MAGMA_BG,s.getPlayerPokemon(),s.getPlayerPokemon()).playWithoutTargets(200,70,2,3);const E=new VI(aO.MAGMA_SPOUT,s.getPlayerPokemon(),s.getPlayerPokemon());return E.playWithoutTargets(80,100,2),s.time.delayedCall(600,()=>{E.playWithoutTargets(-20,100,2)}),s.time.delayedCall(1200,()=>{E.playWithoutTargets(140,150,2)}),!0}).setLocalizationKey(`${zt}`).withTitle(`${zt}:title`).withDescription(`${zt}:description`).withQuery(`${zt}:query`).withSimpleOption({buttonLabel:`${zt}:option.1.label`,buttonTooltip:`${zt}:option.1.tooltip`,selected:[{text:`${zt}:option.1.selected`}]},async()=>{const t=s.currentBattle.mysteryEncounter;lA({fillRemaining:!0},void 0,()=>K2()),t.startOfBattleEffects.push({sourceBattlerIndex:FA.ENEMY,targets:[FA.PLAYER],move:new Ye(A.FIRE_SPIN),ignorePp:!0},{sourceBattlerIndex:FA.ENEMY_2,targets:[FA.PLAYER_2],move:new Ye(A.FIRE_SPIN),ignorePp:!0}),await HE(s.currentBattle.mysteryEncounter.enemyPartyConfigs[0])}).withSimpleOption({buttonLabel:`${zt}:option.2.label`,buttonTooltip:`${zt}:option.2.tooltip`,selected:[{text:`${zt}:option.2.selected`}]},async()=>{const t=s.currentBattle.mysteryEncounter,E=s.getPlayerParty().filter(I=>I.isAllowedInBattle()&&!I.getTypes().includes(L.FIRE));for(const I of E){const N=pZ/100,S=Math.floor(I.getMaxHp()*N);Tc(I,S)}const R=E.filter(I=>Ne(I.status)||Ne(I.status.effect)||I.status.effect===J.NONE);if((R==null?void 0:R.length)>0){const I=De(R.length),N=R[I];N.trySetStatus(J.BURN)&&(t.setDialogueToken("burnedPokemon",N.getNameToRender()),t.setDialogueToken("abilityName",new Q(O.HEATPROOF,3).name),YE(`${zt}:option.2.target_burned`),$v(N,O.HEATPROOF))}nA(!0)}).withOption(PA.newOptionWithMode(MA.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(kN.Some(new _S(L.FIRE,!0,1),new iC(PZ,!0))).withDialogue({buttonLabel:`${zt}:option.3.label`,buttonTooltip:`${zt}:option.3.tooltip`,disabledButtonTooltip:`${zt}:option.3.disabled_tooltip`,selected:[{text:`${zt}:option.3.selected`}]}).withPreOptionPhase(async()=>{uE(!1,!1,2e3)}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;await uE(),lA({fillRemaining:!0},void 0,()=>{K2()});const E=t.options[2].primaryPokemon;WR([E.id],de(e.VOLCARONA).baseExp*2),nA()}).build()).build();function K2(){var E;const t=(E=s.getPlayerParty())==null?void 0:E[0];if(t){let R=RA(x.ATTACK_TYPE_BOOSTER);R||(R=RA(x.ATTACK_TYPE_BOOSTER,[L.FIRE])),zR(t,R);const I=s.currentBattle.mysteryEncounter;I.setDialogueToken("itemName",R.name),I.setDialogueToken("leadPokemon",t.getNameToRender()),YE(`${zt}:found_item`)}}r(K2,"giveLeadPokemonAttackTypeBoostItem");const wR="mysteryEncounters/theStrongStuff",wZ=15,F2=10,VZ=NE.withEncounterType(ge.THE_STRONG_STUFF).withEncounterTier(QA.COMMON).withSceneWaveRangeRequirement(...mE).withScenePartySizeRequirement(3,6).withMaxAllowedEncounters(1).withHideWildIntroMessage(!0).withAutoHideIntroVisuals(!1).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:"berry_juice",fileRoot:"items",hasShadow:!0,isItem:!0,scale:1.25,x:-15,y:3,disableAnimation:!0},{spriteKey:e.SHUCKLE.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,scale:1.25,x:20,y:10,yShadow:7}]).withIntroDialogue([{text:`${wR}:intro`}]).withOnInit(()=>{const t=s.currentBattle.mysteryEncounter,E={levelAdditiveModifier:1,disableSwitch:!0,pokemonConfigs:[{species:de(e.SHUCKLE),isBoss:!0,bossSegments:5,shiny:!1,customPokemonData:new lR({spriteScale:1.25}),nature:be.HARDY,moveSet:[A.INFESTATION,A.SALT_CURE,A.GASTRO_ACID,A.HEAL_ORDER],modifierConfigs:[{modifier:RA(x.BERRY,[OA.SITRUS])},{modifier:RA(x.BERRY,[OA.ENIGMA])},{modifier:RA(x.BERRY,[OA.APICOT])},{modifier:RA(x.BERRY,[OA.GANLON])},{modifier:RA(x.BERRY,[OA.LUM]),stackCount:2}],tags:[Y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:r(R=>{YE(`${wR}:option.2.stat_boost`),s.unshiftPhase(new hA(R.getBattlerIndex(),!0,[h.DEF,h.SPDEF],1))},"mysteryEncounterBattleEffects")}]};return t.enemyPartyConfigs=[E],Ni([A.GASTRO_ACID,A.STEALTH_ROCK]),t.setDialogueToken("shuckleName",de(e.SHUCKLE).getName()),!0}).setLocalizationKey(`${wR}`).withTitle(`${wR}:title`).withDescription(`${wR}:description`).withQuery(`${wR}:query`).withSimpleOption({buttonLabel:`${wR}:option.1.label`,buttonTooltip:`${wR}:option.1.tooltip`,selected:[{text:`${wR}:option.1.selected`}]},async()=>{const t=s.currentBattle.mysteryEncounter;return s.time.delayedCall(750,()=>{uE(!0,!0,50)}),s.getPlayerParty().slice(0).sort((R,I)=>{const N=R.getSpeciesForm().getBaseStatTotal();return I.getSpeciesForm().getBaseStatTotal()-N}).forEach((R,I)=>{I<2?(o2(R,-15),t.setDialogueToken("highBstPokemon"+(I+1),R.getNameToRender())):o2(R,F2)}),t.setDialogueToken("reductionValue",wZ.toString()),t.setDialogueToken("increaseValue",F2.toString()),await fA(`${wR}:option.1.selected_2`,null,void 0,!0),t.dialogue.outro=[{text:`${wR}:outro`}],lA({fillRemaining:!0}),nA(!0),!0}).withSimpleOption({buttonLabel:`${wR}:option.2.label`,buttonTooltip:`${wR}:option.2.tooltip`,selected:[{text:`${wR}:option.2.selected`}]},async()=>{const t=s.currentBattle.mysteryEncounter;lA({guaranteedModifierTypeFuncs:[x.SOUL_DEW],fillRemaining:!0}),t.startOfBattleEffects.push({sourceBattlerIndex:FA.ENEMY,targets:[FA.PLAYER],move:new Ye(A.GASTRO_ACID),ignorePp:!0},{sourceBattlerIndex:FA.ENEMY,targets:[FA.PLAYER],move:new Ye(A.STEALTH_ROCK),ignorePp:!0}),t.dialogue.outro=[],await uE(!0,!0,500),await HE(t.enemyPartyConfigs[0])}).build(),$t="mysteryEncounters/thePokemonSalesman",Gi=4,vZ=100,xZ=50,bZ=NE.withEncounterType(ge.THE_POKEMON_SALESMAN).withEncounterTier(QA.ULTRA).withSceneWaveRangeRequirement(...mE).withSceneRequirement(new zO(0,Gi)).withAutoHideIntroVisuals(!1).withIntroSpriteConfigs([{spriteKey:"pokemon_salesman",fileRoot:"mystery-encounters",hasShadow:!0}]).withIntroDialogue([{text:`${$t}:intro`},{text:`${$t}:intro_dialogue`,speaker:`${$t}:speaker`}]).setLocalizationKey(`${$t}`).withTitle(`${$t}:title`).withDescription(`${$t}:description`).withQuery(`${$t}:query`).withOnInit(()=>{const t=s.currentBattle.mysteryEncounter;let E=Y2(),R=0;for(;(Ne(E.abilityHidden)||E.abilityHidden===O.NONE)&&R<5;)E=Y2(),R++;const I=De(vZ);let N=vE.getEventEncounters().filter(_=>!de(_.species).legendary&&!de(_.species).subLegendary&&!de(_.species).mythical&&!nc.includes(_.species)&&!dZ.includes(_.species)),S;if(I===0||(Ne(E.abilityHidden)||E.abilityHidden===O.NONE)&&N.length===0)E=de(e.MAGIKARP),S=new Rt(E,5,2,void 0,void 0,!0);else if(N.length>0&&(I<=xZ||Ne(E.abilityHidden)||E.abilityHidden===O.NONE)){R=0;do{const _=SE(N);if(E=de(_.species),S=new Rt(E,5,E.abilityHidden===O.NONE?void 0:2,_.formIndex),S.trySetShinySeed(),S.trySetShinySeed(),S.trySetShinySeed(),S.shiny||S.abilityIndex===2)break;R++}while(R<6);if(!S.shiny&&S.abilityIndex!==2)if(N.some(_=>!!de(_.species).abilityHidden)){N.filter(G=>!!de(G.species).abilityHidden);const _=SE(N);E=de(_.species),S=new Rt(E,5,2,_.formIndex),S.trySetShinySeed(),S.trySetShinySeed(),S.trySetShinySeed()}else E=de(e.MAGIKARP),S=new Rt(E,5,2,void 0,void 0,!0)}else S=new Rt(E,5,2,E.formIndex);S.generateAndPopulateMoveset();const{spriteKey:T,fileRoot:i}=cM(S);t.spriteConfigs.push({spriteKey:T,fileRoot:i,hasShadow:!0,repeat:!0,isPokemon:!0,isShiny:S.shiny,variant:S.variant});const o=kE[E.speciesId];let C=Gi*(Math.max(o,2.5)/5);S.shiny&&(C=Gi,S.abilityIndex=0,t.dialogue.encounterOptionsDialogue.description=`${$t}:description_shiny`,t.options[0].dialogue.buttonTooltip=`${$t}:option.1.tooltip_shiny`);const U=s.getWaveMoneyAmount(C);return t.setDialogueToken("purchasePokemon",S.getNameToRender()),t.setDialogueToken("price",U.toString()),t.misc={price:U,pokemon:S},S.calculateStats(),!0}).withOption(PA.newOptionWithMode(MA.DISABLED_OR_DEFAULT).withHasDexProgress(!0).withSceneMoneyRequirement(0,Gi).withDialogue({buttonLabel:`${$t}:option.1.label`,buttonTooltip:`${$t}:option.1.tooltip`,selected:[{text:`${$t}:option.1.selected_message`}]}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter,E=t.misc.price,R=t.misc.pokemon;rO(-E,!0,!1),await rI(`${$t}:option.1.selected_dialogue`,`${$t}:speaker`),await uE();const I=new Zt(R);I.player=!1,await GS(I.toPokemon(),null,Me.POKEBALL,!0,!0),nA(!0)}).build()).withSimpleOption({buttonLabel:`${$t}:option.2.label`,buttonTooltip:`${$t}:option.2.tooltip`,selected:[{text:`${$t}:option.2.selected`}]},async()=>(nA(!0),!0)).build();function Y2(){return de(Sc([0,5],nc,void 0,!1,!1,!1))}r(Y2,"getSalesmanSpeciesOffer");const at="mysteryEncounters/anOfferYouCantRefuse",ZZ=10,kZ=30,XZ=NE.withEncounterType(ge.AN_OFFER_YOU_CANT_REFUSE).withEncounterTier(QA.GREAT).withSceneWaveRangeRequirement(...mE).withScenePartySizeRequirement(2,6,!0).withIntroSpriteConfigs([{spriteKey:e.LIEPARD.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,x:0,y:-4,yShadow:-4},{spriteKey:"rich_kid_m",fileRoot:"trainer",hasShadow:!0,x:2,y:5,yShadow:5}]).withIntroDialogue([{text:`${at}:intro`},{text:`${at}:intro_dialogue`,speaker:`${at}:speaker`}]).setLocalizationKey(`${at}`).withTitle(`${at}:title`).withDescription(`${at}:description`).withQuery(`${at}:query`).withOnInit(()=>{const t=s.currentBattle.mysteryEncounter,E=NZ(!0,!0),R=E.getSpeciesForm().getRootSpeciesId(),I=kE[R]??1,N=Math.max(kZ/10*I,ZZ),S=s.getWaveMoneyAmount(N);if(t.setDialogueToken("strongestPokemon",E.getNameToRender()),t.setDialogueToken("price",S.toString()),t.misc={pokemon:E,price:S},t.options[1].primaryPokemonRequirements[0].meetsRequirement()){const o=t.dialogueTokens.option2PrimaryAbility,C=t.dialogueTokens.option2PrimaryMove;o?t.setDialogueToken("moveOrAbility",o):C&&t.setDialogueToken("moveOrAbility",C)}const i=RA(x.SHINY_CHARM);return t.setDialogueToken("itemName",(i==null?void 0:i.name)??D.t("modifierType:ModifierType.SHINY_CHARM.name")),t.setDialogueToken("liepardName",de(e.LIEPARD).getName()),!0}).withOption(PA.newOptionWithMode(MA.DEFAULT).withDialogue({buttonLabel:`${at}:option.1.label`,buttonTooltip:`${at}:option.1.tooltip`,selected:[{text:`${at}:option.1.selected`,speaker:`${at}:speaker`}]}).withPreOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;return rO(t.misc.price),s.removePokemonFromPlayerParty(t.misc.pokemon),!0}).withOptionPhase(async()=>{s.unshiftPhase(new zE(x.SHINY_CHARM)),nA(!0)}).build()).withOption(PA.newOptionWithMode(MA.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(kN.Some(new wL(DZ,!0),new iC(MZ,!0))).withDialogue({buttonLabel:`${at}:option.2.label`,buttonTooltip:`${at}:option.2.tooltip`,disabledButtonTooltip:`${at}:option.2.tooltip_disabled`,selected:[{speaker:`${at}:speaker`,text:`${at}:option.2.selected`}]}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;rO(t.misc.price),WR(t.options[1].primaryPokemon.id,de(e.LIEPARD).baseExp,!0),nA(!0)}).build()).withSimpleOption({buttonLabel:`${at}:option.3.label`,buttonTooltip:`${at}:option.3.tooltip`,selected:[{speaker:`${at}:speaker`,text:`${at}:option.3.selected`}]},async()=>(nA(!0),!0)).build(),ut="mysteryEncounters/delibirdy",bM=["BerryModifier","PokemonInstantReviveModifier"],ZM=["BerryModifier","PokemonInstantReviveModifier","TerastallizeModifier","PokemonBaseStatModifier","PokemonBaseStatTotalModifier"],W2=2,tL=r(()=>{const t=vE.getDelibirdyBuff();if(t.length>0){const E=t.filter(R=>{const I=RA(x[R]),N=s.findModifier(S=>S.type.id===(I==null?void 0:I.id));return!(N&&N.getStackCount()>=N.getMaxStackCount())});E.length>0?s.unshiftPhase(new zE(x[SE(E)])):s.unshiftPhase(new zE(x.VOUCHER))}},"doEventReward"),QZ=NE.withEncounterType(ge.DELIBIRDY).withEncounterTier(QA.GREAT).withSceneWaveRangeRequirement(...mE).withSceneRequirement(new zO(0,W2)).withPrimaryPokemonRequirement(kN.Some(new HL(bM),new HL(ZM,1,!0))).withIntroSpriteConfigs([{spriteKey:"",fileRoot:"",species:e.DELIBIRD,hasShadow:!0,repeat:!0,startFrame:38,scale:.94},{spriteKey:"",fileRoot:"",species:e.DELIBIRD,hasShadow:!0,repeat:!0,scale:1.06},{spriteKey:"",fileRoot:"",species:e.DELIBIRD,hasShadow:!0,repeat:!0,startFrame:65,x:1,y:5,yShadow:5}]).withIntroDialogue([{text:`${ut}:intro`}]).setLocalizationKey(`${ut}`).withTitle(`${ut}:title`).withDescription(`${ut}:description`).withQuery(`${ut}:query`).withOutroDialogue([{text:`${ut}:outro`}]).withOnInit(()=>(s.currentBattle.mysteryEncounter.setDialogueToken("delibirdName",de(e.DELIBIRD).getName()),s.loadBgm("mystery_encounter_delibirdy","mystery_encounter_delibirdy.mp3"),!0)).withOnVisualsStart(()=>(s.fadeAndSwitchBgm("mystery_encounter_delibirdy"),!0)).withOption(PA.newOptionWithMode(MA.DISABLED_OR_DEFAULT).withSceneMoneyRequirement(0,W2).withDialogue({buttonLabel:`${ut}:option.1.label`,buttonTooltip:`${ut}:option.1.tooltip`,selected:[{text:`${ut}:option.1.selected`}]}).withPreOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;return rO(-t.options[0].requirements[0].requiredMoney,!0,!1),!0}).withOptionPhase(async()=>{const t=s.findModifier(E=>E instanceof CO);if(t&&t.getStackCount()>=t.getMaxStackCount()){const E=RA(x.SHELL_BELL);await zR(s.getPlayerPokemon(),E),s.playSound("item_fanfare"),await fA(D.t("battle:rewardGain",{modifierName:E.name}),null,void 0,!0),tL()}else s.unshiftPhase(new zE(x.AMULET_COIN)),tL();nA(!0)}).build()).withOption(PA.newOptionWithMode(MA.DISABLED_OR_DEFAULT).withPrimaryPokemonRequirement(new HL(bM)).withDialogue({buttonLabel:`${ut}:option.2.label`,buttonTooltip:`${ut}:option.2.tooltip`,secondOptionPrompt:`${ut}:option.2.select_prompt`,selected:[{text:`${ut}:option.2.selected`}]}).withPreOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;return Ut(r(I=>I.getHeldItems().filter(S=>bM.some(T=>S.constructor.name===T)&&S.isTransferable).map(S=>({label:S.type.name,handler:r(()=>(t.setDialogueToken("chosenItem",S.type.name),t.misc={chosenPokemon:I,chosenModifier:S},!0),"handler")})),"onPokemonSelected"),void 0,r(I=>t.options[1].pokemonMeetsPrimaryRequirements(I)?null:xE(`${ut}:invalid_selection`)??null,"selectableFilter"))}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter,E=t.misc.chosenModifier,R=t.misc.chosenPokemon;if(E instanceof XE){const I=s.findModifier(N=>N instanceof QL);if(I&&I.getStackCount()>=I.getMaxStackCount()){const N=RA(x.SHELL_BELL);await zR(s.getPlayerPokemon(),N),s.playSound("item_fanfare"),await fA(D.t("battle:rewardGain",{modifierName:N.name}),null,void 0,!0),tL()}else s.unshiftPhase(new zE(x.CANDY_JAR)),tL()}else{const I=s.findModifier(N=>N instanceof Ts);if(I&&I.getStackCount()>=I.getMaxStackCount()){const N=RA(x.SHELL_BELL);await zR(s.getPlayerPokemon(),N),s.playSound("item_fanfare"),await fA(D.t("battle:rewardGain",{modifierName:N.name}),null,void 0,!0),tL()}else s.unshiftPhase(new zE(x.BERRY_POUCH)),tL()}R.loseHeldItem(E,!1),nA(!0)}).build()).withOption(PA.newOptionWithMode(MA.DISABLED_OR_DEFAULT).withPrimaryPokemonRequirement(new HL(ZM,1,!0)).withDialogue({buttonLabel:`${ut}:option.3.label`,buttonTooltip:`${ut}:option.3.tooltip`,secondOptionPrompt:`${ut}:option.3.select_prompt`,selected:[{text:`${ut}:option.3.selected`}]}).withPreOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;return Ut(r(I=>I.getHeldItems().filter(S=>!ZM.some(T=>S.constructor.name===T)&&S.isTransferable).map(S=>({label:S.type.name,handler:r(()=>(t.setDialogueToken("chosenItem",S.type.name),t.misc={chosenPokemon:I,chosenModifier:S},!0),"handler")})),"onPokemonSelected"),void 0,r(I=>t.options[2].pokemonMeetsPrimaryRequirements(I)?null:xE(`${ut}:invalid_selection`)??null,"selectableFilter"))}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter,E=t.misc.chosenModifier,R=t.misc.chosenPokemon,I=s.findModifier(N=>N instanceof ET);if(I&&I.getStackCount()>=I.getMaxStackCount()){const N=RA(x.SHELL_BELL);await zR(s.getPlayerParty()[0],N),s.playSound("item_fanfare"),await fA(D.t("battle:rewardGain",{modifierName:N.name}),null,void 0,!0),tL()}else s.unshiftPhase(new zE(x.HEALING_CHARM)),tL();R.loseHeldItem(E,!1),nA(!0)}).build()).build(),SR="mysteryEncounters/absoluteAvarice",JZ=NE.withEncounterType(ge.ABSOLUTE_AVARICE).withEncounterTier(QA.GREAT).withSceneWaveRangeRequirement(20,180).withSceneRequirement(new rC("BerryModifier",6)).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:"",fileRoot:"",species:e.GREEDENT,hasShadow:!0,alpha:.001,repeat:!0,x:-5},{spriteKey:"",fileRoot:"",species:e.GREEDENT,hasShadow:!1,repeat:!0,x:-5},{spriteKey:"lum_berry",fileRoot:"items",isItem:!0,x:7,y:-14,hidden:!0,disableAnimation:!0},{spriteKey:"salac_berry",fileRoot:"items",isItem:!0,x:2,y:4,hidden:!0,disableAnimation:!0},{spriteKey:"lansat_berry",fileRoot:"items",isItem:!0,x:32,y:5,hidden:!0,disableAnimation:!0},{spriteKey:"liechi_berry",fileRoot:"items",isItem:!0,x:6,y:-5,hidden:!0,disableAnimation:!0},{spriteKey:"sitrus_berry",fileRoot:"items",isItem:!0,x:7,y:8,hidden:!0,disableAnimation:!0},{spriteKey:"enigma_berry",fileRoot:"items",isItem:!0,x:26,y:-4,hidden:!0,disableAnimation:!0},{spriteKey:"leppa_berry",fileRoot:"items",isItem:!0,x:16,y:-27,hidden:!0,disableAnimation:!0},{spriteKey:"petaya_berry",fileRoot:"items",isItem:!0,x:30,y:-17,hidden:!0,disableAnimation:!0},{spriteKey:"ganlon_berry",fileRoot:"items",isItem:!0,x:16,y:-11,hidden:!0,disableAnimation:!0},{spriteKey:"apicot_berry",fileRoot:"items",isItem:!0,x:14,y:-2,hidden:!0,disableAnimation:!0},{spriteKey:"starf_berry",fileRoot:"items",isItem:!0,x:18,y:9,hidden:!0,disableAnimation:!0}]).withHideWildIntroMessage(!0).withAutoHideIntroVisuals(!1).withIntroDialogue([{text:`${SR}:intro`}]).setLocalizationKey(`${SR}`).withTitle(`${SR}:title`).withDescription(`${SR}:description`).withQuery(`${SR}:query`).withOnInit(()=>{const t=s.currentBattle.mysteryEncounter;s.loadSe("PRSFX- Bug Bite","battle_anims","PRSFX- Bug Bite.wav"),s.loadSe("Follow Me","battle_anims","Follow Me.mp3");const E=s.findModifiers(T=>T instanceof XE),R=new Map;s.getPlayerParty().forEach(T=>{const i=E.filter(o=>o.pokemonId===T.id);(i==null?void 0:i.length)>0&&R.set(T.id,i)}),t.misc={berryItemsMap:R};const I=[];E.forEach(T=>{for(let i=0;i<T.stackCount;i++){const o=RA(x.BERRY,[T.berryType]);I.push({modifier:o})}});const N=s.currentBattle.waveIndex<50?[h.SPDEF]:[h.SPDEF,h.SPD],S={levelAdditiveModifier:1,pokemonConfigs:[{species:de(e.GREEDENT),isBoss:!0,bossSegments:3,shiny:!1,moveSet:[A.THRASH,A.CRUNCH,A.BODY_PRESS,A.SLACK_OFF],modifierConfigs:I,tags:[Y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:r(T=>{YE(`${SR}:option.1.boss_enraged`),s.unshiftPhase(new hA(T.getBattlerIndex(),!0,N,1))},"mysteryEncounterBattleEffects")}]};return t.enemyPartyConfigs=[S],t.setDialogueToken("greedentName",de(e.GREEDENT).getName()),!0}).withOnVisualsStart(()=>($Z(),m2(),s.findModifiers(E=>E instanceof XE).forEach(E=>{s.removeModifier(E)}),s.updateModifiers(!0),!0)).withOption(PA.newOptionWithMode(MA.DEFAULT).withDialogue({buttonLabel:`${SR}:option.1.label`,buttonTooltip:`${SR}:option.1.tooltip`,selected:[{text:`${SR}:option.1.selected`}]}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter,E=RA(x.REVIVER_SEED);t.setDialogueToken("foodReward",(E==null?void 0:E.name)??D.t("modifierType:ModifierType.REVIVER_SEED.name")),lA({fillRemaining:!0},void 0,r(()=>{s.getPlayerParty().forEach(N=>{const S=N.getHeldItems();if(E&&!S.some(T=>T instanceof eT)){const T=E.newModifier(N);s.addModifier(T,!1,!1,!1,!0)}}),YE(`${SR}:option.1.food_stash`)},"givePartyPokemonReviverSeeds")),t.startOfBattleEffects.push({sourceBattlerIndex:FA.ENEMY,targets:[FA.ENEMY],move:new Ye(A.STUFF_CHEEKS),ignorePp:!0}),await uE(!0,!0,500),await HE(t.enemyPartyConfigs[0])}).build()).withOption(PA.newOptionWithMode(MA.DEFAULT).withDialogue({buttonLabel:`${SR}:option.2.label`,buttonTooltip:`${SR}:option.2.tooltip`,selected:[{text:`${SR}:option.2.selected`}]}).withOptionPhase(async()=>{const E=s.currentBattle.mysteryEncounter.misc.berryItemsMap;s.getPlayerParty().forEach(I=>{const N=E.get(I.id),S=[];N==null||N.forEach(i=>S.push(...new Array(i.stackCount).fill(i.berryType)));const T=Math.floor((S.length??0)*2/5);if(T>0)for(let i=0;i<T;i++){Phaser.Math.RND.shuffle(S);const o=S.pop(),C=RA(x.BERRY,[o]);zR(I,C)}}),await s.updateModifiers(!0),await uE(!0,!0,500),nA(!0)}).build()).withOption(PA.newOptionWithMode(MA.DEFAULT).withDialogue({buttonLabel:`${SR}:option.3.label`,buttonTooltip:`${SR}:option.3.tooltip`,selected:[{text:`${SR}:option.3.selected`}]}).withPreOptionPhase(async()=>(qZ(),m2(!0),!0)).withOptionPhase(async()=>{const t=sc(!1,!0).level-2,E=new pR(de(e.GREEDENT),t,b.NONE,!1,!0);E.moveset=[new Ye(A.THRASH),new Ye(A.BODY_PRESS),new Ye(A.STUFF_CHEEKS),new Ye(A.SLACK_OFF)],E.passive=!0,await uE(!0,!0,500),await GS(E,null,Me.POKEBALL,!1),nA(!0)}).build()).build();function $Z(){var I;const R=(I=s.currentBattle.mysteryEncounter.introVisuals)==null?void 0:I.getSpriteAtIndex(1);s.playSound("battle_anims/Follow Me"),s.tweens.chain({targets:R,tweens:[{duration:500,ease:"Cubic.easeOut",y:"+=75",x:"-=65",scale:1.1},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(oE(2)>0?"-=":"+=")+5,y:(oE(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(oE(2)>0?"-=":"+=")+5,y:(oE(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(oE(2)>0?"-=":"+=")+5,y:(oE(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(oE(2)>0?"-=":"+=")+5,y:(oE(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(oE(2)>0?"-=":"+=")+5,y:(oE(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(oE(2)>0?"-=":"+=")+5,y:(oE(2)>0?"-=":"+=")+5},{duration:500,ease:"Cubic.easeOut",y:"-=75",x:"+=65",scale:1},{duration:300,ease:"Cubic.easeOut",yoyo:!0,y:"-=20",loop:1}]})}r($Z,"doGreedentSpriteSteal");function qZ(){var R;const t=(R=s.currentBattle.mysteryEncounter.introVisuals)==null?void 0:R.getSpriteAtIndex(1);let E=1;s.tweens.add({targets:t,duration:150,ease:"Cubic.easeOut",yoyo:!0,y:"-=8",loop:5,onStart:r(()=>{s.playSound("battle_anims/PRSFX- Bug Bite")},"onStart"),onLoop:r(()=>{E%2===0&&s.playSound("battle_anims/PRSFX- Bug Bite"),E++},"onLoop")})}r(qZ,"doGreedentEatBerries");function m2(t=!1){let R=["starf","sitrus","lansat","salac","apicot","enigma","liechi","ganlon","lum","petaya","leppa"];t&&(R=R.reverse());const I=s.currentBattle.mysteryEncounter;R.forEach((N,S)=>{var U;const T=I.spriteConfigs.findIndex(_=>{var G;return(G=_.spriteKey)==null?void 0:G.includes(N)});let i,o;const C=(U=I.introVisuals)==null?void 0:U.getSpriteAtIndex(T);C&&(i=C[0],o=C[1]),s.time.delayedCall(150*S+400,()=>{i&&i.setVisible(!t),o&&o.setVisible(!t),N==="petaya"&&i&&o&&!t&&s.time.delayedCall(200,()=>{zZ([i,o],30,500)})})})}r(m2,"doBerrySpritePile");function zZ(t,E,R){let I=1,N=E;const S=r(()=>{s.tweens.add({targets:t,y:"+="+N,x:{value:"+="+I*I*10,ease:"Linear"},duration:I*R,ease:"Cubic.easeIn",onComplete:r(()=>{I=I>.01?I*.5:0,I&&(N=N*I,s.tweens.add({targets:t,y:"-="+N,x:{value:"+="+I*I*10,ease:"Linear"},duration:I*R,ease:"Cubic.easeOut",onComplete:r(()=>S(),"onComplete")}))},"onComplete")})},"doBounce");S()}r(zZ,"doBerryBounce");const TR="mysteryEncounters/aTrainersTest",jZ=NE.withEncounterType(ge.A_TRAINERS_TEST).withEncounterTier(QA.ROGUE).withSceneWaveRangeRequirement(100,mE[1]).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${TR}:intro`}]).withAutoHideIntroVisuals(!1).withOnInit(()=>{const t=s.currentBattle.mysteryEncounter;let E,R,I;switch(De(5)){case 1:E=l.CHERYL,R=iI(e.BLISSEY),I="cheryl";break;case 2:E=l.MARLEY,R=iI(e.ARCANINE),I="marley";break;case 3:E=l.MIRA,R=iI(e.ALAKAZAM,!1,1),I="mira";break;case 4:E=l.RILEY,R=iI(e.LUCARIO,!1,1),I="riley";break;default:E=l.BUCK,R=iI(e.CLAYDOL),I="buck";break}t.dialogue.intro=[{speaker:`trainerNames:${I}`,text:`${TR}:${I}.intro_dialogue`}],t.options[0].dialogue.selected=[{speaker:`trainerNames:${I}`,text:`${TR}:${I}.accept`}],t.options[1].dialogue.selected=[{speaker:`trainerNames:${I}`,text:`${TR}:${I}.decline`}],t.setDialogueToken("statTrainerName",D.t(`trainerNames:${I}`));const N=`${D.t(`${TR}:title`)}:
${D.t(`trainerNames:${I}`)}`;t.misc={trainerType:E,trainerNameKey:I,trainerEggDescription:N};const S=yE[E].clone(),T=S.getSpriteKey();return t.enemyPartyConfigs.push({levelAdditiveModifier:1,trainerConfig:S}),t.spriteConfigs=[{spriteKey:R.spriteKey,fileRoot:R.fileRoot,hasShadow:!0,repeat:!0,isPokemon:!0,x:22,y:-2,yShadow:-2},{spriteKey:T,fileRoot:"trainer",hasShadow:!0,disableAnimation:!0,x:-24,y:4,yShadow:4}],!0}).setLocalizationKey(`${TR}`).withTitle(`${TR}:title`).withDescription(`${TR}:description`).withQuery(`${TR}:query`).withIntroDialogue().withSimpleOption({buttonLabel:`${TR}:option.1.label`,buttonTooltip:`${TR}:option.1.tooltip`},async()=>{const t=s.currentBattle.mysteryEncounter,E=t.enemyPartyConfigs[0];await uE();const R={pulled:!1,sourceType:ot.EVENT,eggDescriptor:t.misc.trainerEggDescription,tier:K.EPIC};t.setDialogueToken("eggType",D.t(`${TR}:eggTypes.epic`)),lA({guaranteedModifierTypeFuncs:[x.SACRED_ASH],guaranteedModifierTiers:[p.ROGUE,p.ULTRA],fillRemaining:!0},[R]),await HE(E)}).withSimpleOption({buttonLabel:`${TR}:option.2.label`,buttonTooltip:`${TR}:option.2.tooltip`},async()=>{const t=s.currentBattle.mysteryEncounter;s.unshiftPhase(new DS(!0));const E={pulled:!1,sourceType:ot.EVENT,eggDescriptor:t.misc.trainerEggDescription,tier:K.RARE};t.setDialogueToken("eggType",D.t(`${TR}:eggTypes.rare`)),lA({fillRemaining:!1,rerollMultiplier:-1},[E]),nA()}).withOutroDialogue([{text:`${TR}:outro`}]).build(),lO="mysteryEncounters/trashToTreasure",g2=700,p2=2.5,ek=NE.withEncounterType(ge.TRASH_TO_TREASURE).withEncounterTier(QA.ULTRA).withSceneWaveRangeRequirement(60,mE[1]).withMaxAllowedEncounters(1).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:e.GARBODOR.toString()+"-gigantamax",fileRoot:"pokemon",hasShadow:!1,disableAnimation:!0,scale:1.5,y:8,tint:.4}]).withAutoHideIntroVisuals(!1).withIntroDialogue([{text:`${lO}:intro`}]).setLocalizationKey(`${lO}`).withTitle(`${lO}:title`).withDescription(`${lO}:description`).withQuery(`${lO}:query`).withOnInit(()=>{const t=s.currentBattle.mysteryEncounter,I={levelAdditiveModifier:.5,pokemonConfigs:[{species:de(e.GARBODOR),isBoss:!0,shiny:!1,formIndex:1,bossSegmentModifier:1,moveSet:[A.GUNK_SHOT,A.STOMPING_TANTRUM,A.HAMMER_ARM,A.PAYBACK],modifierConfigs:[{modifier:RA(x.BERRY)},{modifier:RA(x.BERRY)},{modifier:RA(x.BERRY)},{modifier:RA(x.BERRY)},{modifier:RA(x.BASE_STAT_BOOSTER)},{modifier:RA(x.BASE_STAT_BOOSTER)},{modifier:RA(x.TOXIC_ORB),stackCount:De(2,0)},{modifier:RA(x.SOOTHE_BELL),stackCount:De(2,1)},{modifier:RA(x.LUCKY_EGG),stackCount:De(3,1)},{modifier:RA(x.GOLDEN_EGG),stackCount:De(2,0)}]}],disableSwitch:!0};return t.enemyPartyConfigs=[I],Ni([A.TOXIC,A.STOCKPILE]),s.loadSe("PRSFX- Dig2","battle_anims","PRSFX- Dig2.wav"),s.loadSe("PRSFX- Venom Drench","battle_anims","PRSFX- Venom Drench.wav"),t.setDialogueToken("costMultiplier",p2.toString()),!0}).withOption(PA.newOptionWithMode(MA.DEFAULT).withDialogue({buttonLabel:`${lO}:option.1.label`,buttonTooltip:`${lO}:option.1.tooltip`,selected:[{text:`${lO}:option.1.selected`}]}).withPreOptionPhase(async()=>{Ek()}).withOptionPhase(async()=>{await uE(),await Ak();const t=RA(x.MYSTERY_ENCOUNTER_BLACK_SLUDGE,[p2]),E=t==null?void 0:t.newModifier();E&&(await s.addModifier(E,!1,!1,!1,!0),s.playSound("battle_anims/PRSFX- Venom Drench",{volume:2}),await fA(D.t("battle:rewardGain",{modifierName:E.type.name}),null,void 0,!0)),nA(!0)}).build()).withOption(PA.newOptionWithMode(MA.DEFAULT).withDialogue({buttonLabel:`${lO}:option.2.label`,buttonTooltip:`${lO}:option.2.tooltip`,selected:[{text:`${lO}:option.2.selected`}]}).withOptionPhase(async()=>{s.setFieldScale(.75),await fA(`${lO}:option.2.selected_2`),await uE();const t=s.currentBattle.mysteryEncounter;lA({guaranteedModifierTiers:[p.ROGUE,p.ROGUE,p.ULTRA,p.GREAT],fillRemaining:!0}),t.startOfBattleEffects.push({sourceBattlerIndex:FA.ENEMY,targets:[FA.PLAYER],move:new Ye(A.TOXIC),ignorePp:!0},{sourceBattlerIndex:FA.ENEMY,targets:[FA.ENEMY],move:new Ye(A.STOCKPILE),ignorePp:!0}),await HE(t.enemyPartyConfigs[0])}).build()).build();async function Ak(){const t=RA(x.SHELL_BELL),E=RA(x.LEFTOVERS),R=s.getPlayerParty();for(const I of R){const S=s.findModifiers(T=>T instanceof DA&&T.pokemonId===I.id,!0).find(T=>T instanceof jS);if(!S||S.getStackCount()<S.getMaxStackCount()){await zR(I,E);break}}for(const I of R){const S=s.findModifiers(T=>T instanceof DA&&T.pokemonId===I.id,!0).find(T=>T instanceof jS);if(!S||S.getStackCount()<S.getMaxStackCount()){await zR(I,E);break}}s.playSound("item_fanfare"),await fA(D.t("battle:rewardGainCount",{modifierName:E.name,count:2}),null,void 0,!0);for(const I of R){const S=s.findModifiers(T=>T instanceof DA&&T.pokemonId===I.id,!0).find(T=>T instanceof Ss);if(!S||S.getStackCount()<S.getMaxStackCount()){await zR(I,t);break}}s.playSound("item_fanfare"),await fA(D.t("battle:rewardGainCount",{modifierName:t.name,count:1}),null,void 0,!0)}r(Ak,"tryApplyDigRewardItems");function Ek(){s.playSound("battle_anims/PRSFX- Dig2"),s.time.delayedCall(g2,()=>{s.playSound("battle_anims/PRSFX- Dig2"),s.playSound("battle_anims/PRSFX- Venom Drench",{volume:2})}),s.time.delayedCall(g2*2,()=>{s.playSound("battle_anims/PRSFX- Dig2")})}r(Ek,"doGarbageDig");const Ht="mysteryEncounters/berriesAbound",tk=NE.withEncounterType(ge.BERRIES_ABOUND).withEncounterTier(QA.COMMON).withSceneWaveRangeRequirement(...mE).withCatchAllowed(!0).withHideWildIntroMessage(!0).withFleeAllowed(!1).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${Ht}:intro`}]).withOnInit(()=>{const t=s.currentBattle.mysteryEncounter,E=Si(si),R=Lc(E,!0);t.setDialogueToken("enemyPokemon",Z(R));const I={pokemonConfigs:[{level:E,species:R.species,dataSource:new Zt(R),isBoss:!0}]};t.enemyPartyConfigs=[I];const N=s.currentBattle.waveIndex>160?7:s.currentBattle.waveIndex>120?5:s.currentBattle.waveIndex>40?4:2;jL(s.getPlayerParty(),lt.PLAYER,0),t.misc={numBerries:N};const{spriteKey:S,fileRoot:T}=cM(R);t.spriteConfigs=[{spriteKey:"berries_abound_bush",fileRoot:"mystery-encounters",x:25,y:-6,yShadow:-7,disableAnimation:!0,hasShadow:!0},{spriteKey:S,fileRoot:T,hasShadow:!0,tint:.25,x:-5,repeat:!0,isPokemon:!0,isShiny:R.shiny,variant:R.variant}];const i=LZ(uN[h.SPD],!0,!1);return t.misc.fastestPokemon=i,t.misc.enemySpeed=R.getStat(h.SPD),t.setDialogueToken("fastestPokemon",i.getNameToRender()),!0}).setLocalizationKey(`${Ht}`).withTitle(`${Ht}:title`).withDescription(`${Ht}:description`).withQuery(`${Ht}:query`).withSimpleOption({buttonLabel:`${Ht}:option.1.label`,buttonTooltip:`${Ht}:option.1.tooltip`,selected:[{text:`${Ht}:option.1.selected`}]},async()=>{const E=s.currentBattle.mysteryEncounter.misc.numBerries,R=r(()=>{const N=D.t(`${Ht}:berries`);s.playSound("item_fanfare"),YE(D.t("battle:rewardGainCount",{modifierName:N,count:E}));for(let S=0;S<E;S++)kM()},"doBerryRewards"),I=[];for(let N=0;N<5;N++){const S=KE(x.BERRY);S&&I.push(S)}lA({guaranteedModifierTypeOptions:I,fillRemaining:!1},void 0,R),await HE(s.currentBattle.mysteryEncounter.enemyPartyConfigs[0])}).withOption(PA.newOptionWithMode(MA.DEFAULT).withDialogue({buttonLabel:`${Ht}:option.2.label`,buttonTooltip:`${Ht}:option.2.tooltip`}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter,E=t.misc.fastestPokemon,R=t.misc.enemySpeed,I=E.getStat(h.SPD)/(R*1.1),N=t.misc.numBerries,S=[];for(let o=0;o<5;o++){const C=KE(x.BERRY);C&&S.push(C)}if(I<1){const o=r(()=>{const _=D.t(`${Ht}:berries`);s.playSound("item_fanfare"),YE(D.t("battle:rewardGainCount",{modifierName:_,count:N}));for(let G=0;G<N;G++)kM()},"doBerryRewards"),C=s.currentBattle.waveIndex<50?[h.DEF,h.SPDEF,h.SPD]:[h.ATK,h.DEF,h.SPATK,h.SPDEF,h.SPD],U=s.currentBattle.mysteryEncounter.enemyPartyConfigs[0];U.pokemonConfigs[0].tags=[Y.MYSTERY_ENCOUNTER_POST_SUMMON],U.pokemonConfigs[0].mysteryEncounterBattleEffects=_=>{YE(`${Ht}:option.2.boss_enraged`),s.unshiftPhase(new hA(_.getBattlerIndex(),!0,C,1))},lA({guaranteedModifierTypeOptions:S,fillRemaining:!1},void 0,o),await fA(`${Ht}:option.2.selected_bad`),await HE(U);return}const T=Math.max(Math.min(Math.round((I-1)/.08),N),2);t.setDialogueToken("numBerries",String(T));const i=r(()=>{const o=D.t(`${Ht}:berries`);s.playSound("item_fanfare"),YE(D.t("battle:rewardGainCount",{modifierName:o,count:T}));for(let C=0;C<T;C++)kM(E)},"doFasterBerryRewards");WR(E.id,t.enemyPartyConfigs[0].pokemonConfigs[0].species.baseExp),lA({guaranteedModifierTypeOptions:S,fillRemaining:!1},void 0,i),await fA(`${Ht}:option.2.selected`),nA()}).build()).withSimpleOption({buttonLabel:`${Ht}:option.3.label`,buttonTooltip:`${Ht}:option.3.tooltip`,selected:[{text:`${Ht}:option.3.selected`}]},async()=>(nA(!0),!0)).build();function kM(t){const E=De(Object.keys(OA).filter(N=>!Number.isNaN(Number(N))).length),R=RA(x.BERRY,[E]),I=s.getPlayerParty();if(t){const N=s.findModifier(S=>S instanceof XE&&S.pokemonId===t.id&&S.berryType===E,!0);if(!N||N.getStackCount()<N.getMaxStackCount()){zR(t,R);return}}for(const N of I){const S=s.findModifier(T=>T instanceof XE&&T.pokemonId===N.id&&T.berryType===E,!0);if(!S||S.getStackCount()<S.getMaxStackCount()){zR(N,R);return}}}r(kM,"tryGiveBerry");const rE="mysteryEncounters/clowningAround",y2=[O.STURDY,O.PICKUP,O.INTIMIDATE,O.GUTS,O.DROUGHT,O.DRIZZLE,O.SNOW_WARNING,O.SAND_STREAM,O.ELECTRIC_SURGE,O.PSYCHIC_SURGE,O.GRASSY_SURGE,O.MISTY_SURGE,O.MAGICIAN,O.SHEER_FORCE,O.PRANKSTER],Rk=NE.withEncounterType(ge.CLOWNING_AROUND).withEncounterTier(QA.ULTRA).withDisallowedChallenges(Je.SINGLE_TYPE).withSceneWaveRangeRequirement(80,mE[1]).withAnimations(aO.SMOKESCREEN).withAutoHideIntroVisuals(!1).withIntroSpriteConfigs([{spriteKey:e.MR_MIME.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,x:-25,tint:.3,y:-3,yShadow:-3},{spriteKey:e.BLACEPHALON.toString(),fileRoot:"pokemon/exp",hasShadow:!0,repeat:!0,x:25,tint:.3,y:-3,yShadow:-3},{spriteKey:"harlequin",fileRoot:"trainer",hasShadow:!0,x:0,y:2,yShadow:2}]).withIntroDialogue([{text:`${rE}:intro`},{text:`${rE}:intro_dialogue`,speaker:`${rE}:speaker`}]).withOnInit(()=>{const t=s.currentBattle.mysteryEncounter,E=l.HARLEQUIN,R=yE[E].clone(),I=new iE(new pe(1,ce.STRONG),new pe(1,ce.STRONGER));R.setPartyTemplates(I),R.setDoubleOnly(),R.partyTemplateFunc=null;const N=y2[De(y2.length)];t.setDialogueToken("ability",new Q(N,3).name),t.misc={ability:N};const S=De(18);let T=De(17);return T>=S&&T++,t.enemyPartyConfigs.push({trainerConfig:R,pokemonConfigs:[{species:de(e.MR_MIME),isBoss:!0,moveSet:[A.TEETER_DANCE,A.ALLY_SWITCH,A.DAZZLING_GLEAM,A.PSYCHIC]},{species:de(e.BLACEPHALON),customPokemonData:new lR({ability:N,types:[S,T]}),isBoss:!0,moveSet:[A.TRICK,A.HYPNOSIS,A.SHADOW_BALL,A.MIND_BLOWN]}],doubleBattle:!0}),Ni([A.ROLE_PLAY,A.TAUNT]),t.setDialogueToken("blacephalonName",de(e.BLACEPHALON).getName()),!0}).setLocalizationKey(`${rE}`).withTitle(`${rE}:title`).withDescription(`${rE}:description`).withQuery(`${rE}:query`).withOption(PA.newOptionWithMode(MA.DEFAULT).withDialogue({buttonLabel:`${rE}:option.1.label`,buttonTooltip:`${rE}:option.1.tooltip`,selected:[{text:`${rE}:option.1.selected`,speaker:`${rE}:speaker`}]}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter,E=t.enemyPartyConfigs[0];lA({fillRemaining:!0}),t.startOfBattleEffects.push({sourceBattlerIndex:FA.ENEMY,targets:[FA.ENEMY_2],move:new Ye(A.ROLE_PLAY),ignorePp:!0},{sourceBattlerIndex:FA.ENEMY_2,targets:[FA.PLAYER],move:new Ye(A.TAUNT),ignorePp:!0},{sourceBattlerIndex:FA.ENEMY_2,targets:[FA.PLAYER_2],move:new Ye(A.TAUNT),ignorePp:!0}),await uE(),await HE(E)}).withPostOptionPhase(async()=>(await Ok()&&await fA(`${rE}:option.1.ability_gained`),s.tweens.add({targets:s.currentBattle.trainer,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:250}),new VI(aO.SMOKESCREEN,s.getPlayerPokemon(),s.getPlayerPokemon()).playWithoutTargets(230,40,2),!0)).build()).withOption(PA.newOptionWithMode(MA.DEFAULT).withDialogue({buttonLabel:`${rE}:option.2.label`,buttonTooltip:`${rE}:option.2.tooltip`,selected:[{text:`${rE}:option.2.selected`,speaker:`${rE}:speaker`},{text:`${rE}:option.2.selected_2`},{text:`${rE}:option.2.selected_3`,speaker:`${rE}:speaker`}]}).withPreOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter,E=s.getPlayerParty();let R=E[0],I=R.getHeldItems().filter(o=>o.isTransferable&&!(o instanceof XE)).reduce((o,C)=>o+C.stackCount,0);for(const o of E){const C=o.getHeldItems().filter(U=>U.isTransferable&&!(U instanceof XE)).reduce((U,_)=>U+_.stackCount,0);C>I&&(R=o,I=C)}t.setDialogueToken("switchPokemon",R.getNameToRender());const N=R.getHeldItems();let S=0;for(const o of N.filter(C=>C instanceof XE))S+=o.stackCount,s.removeModifier(o);XM(R,S,"Berries");let T=0,i=0;for(const o of N.filter(C=>C.isTransferable&&!(C instanceof XE))){const C=o.type.withTierFromPool(lt.PLAYER,E),U=C.tier??p.ULTRA;C.id==="GOLDEN_EGG"||U===p.ROGUE?(i+=o.stackCount,s.removeModifier(o)):(C.id==="LUCKY_EGG"||C.id==="SOOTHE_BELL"||U===p.ULTRA)&&(T+=o.stackCount,s.removeModifier(o))}XM(R,T,p.ULTRA),XM(R,i,p.ROGUE)}).withOptionPhase(async()=>{nA(!0)}).withPostOptionPhase(async()=>{new VI(aO.SMOKESCREEN,s.getPlayerPokemon(),s.getPlayerPokemon()).playWithoutTargets(230,40,2),await uE(!0,!0,200)}).build()).withOption(PA.newOptionWithMode(MA.DEFAULT).withDialogue({buttonLabel:`${rE}:option.3.label`,buttonTooltip:`${rE}:option.3.tooltip`,selected:[{text:`${rE}:option.3.selected`,speaker:`${rE}:speaker`},{text:`${rE}:option.3.selected_2`},{text:`${rE}:option.3.selected_3`,speaker:`${rE}:speaker`}]}).withPreOptionPhase(async()=>{for(const t of s.getPlayerParty()){const E=t.getTypes(!1,!1,!0);let R=t.moveset.filter(S=>S&&!E.includes(S.getMove().type)&&S.getMove().category!==u.STATUS).map(S=>S.getMove().type);(R==null?void 0:R.length)>0&&(R=[...new Set(R)].sort(),R=lI(R));const I=[L.UNKNOWN];let N=null;for(;N===null||N===I[0]||E.includes(N);)R.length>0?N=R.pop()??null:N=De(18);I.push(N),t.customPokemonData.types=I,t.isFusion()&&(t.fusionCustomPokemonData||(t.fusionCustomPokemonData=new lR),t.fusionCustomPokemonData.types=I)}}).withOptionPhase(async()=>{nA(!0)}).withPostOptionPhase(async()=>{new VI(aO.SMOKESCREEN,s.getPlayerPokemon(),s.getPlayerPokemon()).playWithoutTargets(230,40,2),await uE(!0,!0,200)}).build()).withOutroDialogue([{text:`${rE}:outro`}]).build();async function Ok(){return new Promise(async t=>{await rI(`${rE}:option.1.apply_ability_dialogue`,`${rE}:speaker`),await fA(`${rE}:option.1.apply_ability_message`),s.ui.setMode(Ce.MESSAGE).then(()=>{e6(t)})})}r(Ok,"handleSwapAbility");function e6(t){fA(`${rE}:option.1.ability_prompt`,null,500,!1);const R={options:[{label:D.t("menu:yes"),handler:r(()=>(Ik(t),!0),"handler")},{label:D.t("menu:no"),handler:r(()=>(t(!1),!0),"handler")}],maxOptions:7,yOffset:0};s.ui.setModeWithoutClear(Ce.OPTION_SELECT,R,null,!0)}r(e6,"displayYesNoOptions");function Ik(t){Ut(r(I=>{const N=s.currentBattle.mysteryEncounter;$v(I,N.misc.ability),N.setDialogueToken("chosenPokemon",I.getNameToRender()),s.ui.setMode(Ce.MESSAGE).then(()=>t(!0))},"onPokemonSelected"),r(()=>{s.ui.setMode(Ce.MESSAGE).then(()=>{e6(t)})},"onPokemonNotSelected"))}r(Ik,"onYesAbilitySwap");function XM(t,E,R){const I=[[x.REVIVER_SEED,1],[x.GOLDEN_PUNCH,5],[x.ATTACK_TYPE_BOOSTER,99],[x.QUICK_CLAW,3],[x.WIDE_LENS,3]],N=[[x.LEFTOVERS,4],[x.SHELL_BELL,4],[x.SOUL_DEW,10],[x.SCOPE_LENS,1],[x.BATON,1],[x.FOCUS_BAND,5],[x.KINGS_ROCK,3],[x.GRIP_CLAW,5]],S=[[OA.APICOT,3],[OA.ENIGMA,2],[OA.GANLON,3],[OA.LANSAT,3],[OA.LEPPA,2],[OA.LIECHI,3],[OA.LUM,2],[OA.PETAYA,3],[OA.SALAC,2],[OA.SITRUS,2],[OA.STARF,3]];let T;R==="Berries"?T=S:T=R===p.ULTRA?I:N;for(let i=0;i<E;i++){if(T.length===0)return;const o=De(T.length),C=T[o];let U;R==="Berries"?U=RA(x.BERRY,[C[0]]):U=RA(C[0]),zR(t,U),C[1]--,C[1]<=0&&T.splice(o,1)}}r(XM,"generateItemsOfTier");const qA="mysteryEncounters/partTimer",Lk=NE.withEncounterType(ge.PART_TIMER).withEncounterTier(QA.COMMON).withSceneWaveRangeRequirement(...mE).withIntroSpriteConfigs([{spriteKey:"part_timer_crate",fileRoot:"mystery-encounters",hasShadow:!1,y:6,x:15},{spriteKey:"worker_f",fileRoot:"trainer",hasShadow:!0,x:-18,y:4}]).withAutoHideIntroVisuals(!1).withIntroDialogue([{text:`${qA}:intro`},{speaker:`${qA}:speaker`,text:`${qA}:intro_dialogue`}]).withOnInit(()=>(s.loadSe("PRSFX- Horn Drill1","battle_anims","PRSFX- Horn Drill1.wav"),s.loadSe("PRSFX- Horn Drill3","battle_anims","PRSFX- Horn Drill3.wav"),s.loadSe("PRSFX- Guillotine2","battle_anims","PRSFX- Guillotine2.wav"),s.loadSe("PRSFX- Heavy Slam2","battle_anims","PRSFX- Heavy Slam2.wav"),s.loadSe("PRSFX- Agility","battle_anims","PRSFX- Agility.wav"),s.loadSe("PRSFX- Extremespeed1","battle_anims","PRSFX- Extremespeed1.wav"),s.loadSe("PRSFX- Accelerock1","battle_anims","PRSFX- Accelerock1.wav"),s.loadSe("PRSFX- Captivate","battle_anims","PRSFX- Captivate.wav"),s.loadSe("PRSFX- Attract2","battle_anims","PRSFX- Attract2.wav"),s.loadSe("PRSFX- Aurora Veil2","battle_anims","PRSFX- Aurora Veil2.wav"),!0)).setLocalizationKey(`${qA}`).withTitle(`${qA}:title`).withDescription(`${qA}:description`).withQuery(`${qA}:query`).withOption(PA.newOptionWithMode(MA.DEFAULT).withDialogue({buttonLabel:`${qA}:option.1.label`,buttonTooltip:`${qA}:option.1.tooltip`,selected:[{text:`${qA}:option.1.selected`}]}).withPreOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;return Ut(r(I=>{t.setDialogueToken("selectedPokemon",I.getNameToRender());const N=Math.floor((2*90+16)*I.level*.01)+5,S=(I.getStat(h.SPD)-N)/N,T=Math.min(Math.max(2.5*(1+S),1),4);t.misc={moneyMultiplier:T};for(const i of I.moveset)if(i){const o=i.getMovePp()-2;i.ppUsed=i.ppUsed<o?o:i.ppUsed}WR(I.id,100),uE(!0,!1),sk()},"onPokemonSelected"),void 0,r(I=>fN(I,`${qA}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async()=>{await uE(!1,!1);const t=s.currentBattle.mysteryEncounter.misc.moneyMultiplier;t>2.5?await rI(`${qA}:job_complete_good`,`${qA}:speaker`):await rI(`${qA}:job_complete_bad`,`${qA}:speaker`);const E=s.getWaveMoneyAmount(t);rO(E,!0,!1),await fA(D.t("mysteryEncounterMessages:receive_money",{amount:E})),await fA(`${qA}:pokemon_tired`),lA({fillRemaining:!0}),nA()}).build()).withOption(PA.newOptionWithMode(MA.DEFAULT).withDialogue({buttonLabel:`${qA}:option.2.label`,buttonTooltip:`${qA}:option.2.tooltip`,selected:[{text:`${qA}:option.2.selected`}]}).withPreOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;return Ut(r(I=>{t.setDialogueToken("selectedPokemon",I.getNameToRender());const N=Math.floor((2*75+16)*I.level*.01)+I.level+10,S=Math.floor((2*75+16)*I.level*.01)+5,T=N+1.5*(S*2),o=(I.getStat(h.HP)+1.5*(I.getStat(h.ATK)+I.getStat(h.DEF))-T)/T,C=Math.min(Math.max(2.5*(1+o),1),4);t.misc={moneyMultiplier:C};for(const U of I.moveset)if(U){const _=U.getMovePp()-2;U.ppUsed=U.ppUsed<_?_:U.ppUsed}WR(I.id,100),uE(!0,!1),Nk()},"onPokemonSelected"),void 0,r(I=>fN(I,`${qA}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async()=>{await uE(!1,!1);const t=s.currentBattle.mysteryEncounter.misc.moneyMultiplier;t>2.5?await rI(`${qA}:job_complete_good`,`${qA}:speaker`):await rI(`${qA}:job_complete_bad`,`${qA}:speaker`);const E=s.getWaveMoneyAmount(t);rO(E,!0,!1),await fA(D.t("mysteryEncounterMessages:receive_money",{amount:E})),await fA(`${qA}:pokemon_tired`),lA({fillRemaining:!0}),nA()}).build()).withOption(PA.newOptionWithMode(MA.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new wL(jv,!0)).withDialogue({buttonLabel:`${qA}:option.3.label`,buttonTooltip:`${qA}:option.3.tooltip`,disabledButtonTooltip:`${qA}:option.3.disabled_tooltip`,selected:[{text:`${qA}:option.3.selected`}]}).withPreOptionPhase(async()=>{var R;const t=s.currentBattle.mysteryEncounter,E=(R=t.selectedOption)==null?void 0:R.primaryPokemon;t.setDialogueToken("selectedPokemon",E.getNameToRender());for(const I of E.moveset)if(I){const N=I.getMovePp()-2;I.ppUsed=I.ppUsed<N?N:I.ppUsed}return WR(E.id,100),uE(!0,!1),Sk(),!0}).withOptionPhase(async()=>{await uE(!1,!1),await rI(`${qA}:job_complete_good`,`${qA}:speaker`);const t=s.getWaveMoneyAmount(2.5);rO(t,!0,!1),await fA(D.t("mysteryEncounterMessages:receive_money",{amount:t})),await fA(`${qA}:pokemon_tired`),lA({fillRemaining:!0}),nA()}).build()).withOutroDialogue([{speaker:`${qA}:speaker`,text:`${qA}:outro`}]).build();function Nk(){s.playSound("battle_anims/PRSFX- Horn Drill1"),s.playSound("battle_anims/PRSFX- Horn Drill1"),s.time.delayedCall(1e3,()=>{s.playSound("battle_anims/PRSFX- Guillotine2")}),s.time.delayedCall(2e3,()=>{s.playSound("battle_anims/PRSFX- Heavy Slam2")}),s.time.delayedCall(2500,()=>{s.playSound("battle_anims/PRSFX- Guillotine2")})}r(Nk,"doStrongWorkSfx");function sk(){s.playSound("battle_anims/PRSFX- Accelerock1"),s.time.delayedCall(1500,()=>{s.playSound("battle_anims/PRSFX- Extremespeed1")}),s.time.delayedCall(2e3,()=>{s.playSound("battle_anims/PRSFX- Extremespeed1")}),s.time.delayedCall(2250,()=>{s.playSound("battle_anims/PRSFX- Agility")})}r(sk,"doDeliverySfx");function Sk(){s.playSound("battle_anims/PRSFX- Captivate"),s.time.delayedCall(1500,()=>{s.playSound("battle_anims/PRSFX- Attract2")}),s.time.delayedCall(2e3,()=>{s.playSound("battle_anims/PRSFX- Aurora Veil2")}),s.time.delayedCall(3e3,()=>{s.playSound("battle_anims/PRSFX- Attract2")})}r(Sk,"doSalesSfx");const ld=class ld extends aS{constructor(){super(Ce.EVOLUTION_SCENE)}setup(){this.canCancel=!1,this.cancelled=!1;const E=this.getUi();this.evolutionContainer=s.add.container(0,-s.game.canvas.height/6),E.add(this.evolutionContainer);const R=s.add.sprite(0,0,"bg",s.windowType);R.setOrigin(0,1),R.setVisible(!1),E.add(R),this.messageBg=R,this.messageContainer=s.add.container(12,-39),this.messageContainer.setVisible(!1),E.add(this.messageContainer);const I=We(0,0,"",Se.MESSAGE,{maxLines:2,wordWrap:{width:1780}});this.messageContainer.add(I),this.message=I,this.initPromptSprite(this.messageContainer)}show(E){return super.show(E),s.ui.bringToTop(this.evolutionContainer),s.ui.bringToTop(this.messageBg),s.ui.bringToTop(this.messageContainer),this.messageBg.setVisible(!0),this.messageContainer.setVisible(!0),!0}processInput(E){if(this.canCancel&&!this.cancelled&&E===he.CANCEL)return this.cancelled=!0,!0;const R=this.getUi();if(this.awaitingActionInput&&(E===he.CANCEL||E===he.ACTION)&&this.onActionInput){R.playSelect();const I=this.onActionInput;return this.onActionInput=null,I(),!0}return!1}setCursor(E){return!1}clear(){this.clearText(),this.canCancel=!1,this.cancelled=!1,this.evolutionContainer.removeAll(!0),this.messageContainer.setVisible(!1),this.messageBg.setVisible(!1)}};r(ld,"EvolutionSceneHandler");let jG=ld;const Ud=class Ud extends OC{constructor(E){super(E,!0)}getPlayerPokemon(){return super.getPokemon()}};r(Ud,"PlayerPartyMemberPokemonPhase");let lC=Ud;var ac=(t=>(t[t.LEARN_MOVE=0]="LEARN_MOVE",t[t.MEMORY=1]="MEMORY",t[t.TM=2]="TM",t))(ac||{});const Dd=class Dd extends lC{constructor(E,R,I=0,N=-1){super(E),this.moveId=R,this.learnMoveType=I,this.cost=N}start(){super.start();const E=this.getPokemon(),R=Ke[this.moveId],I=E.getMoveset();if(I.some(S=>S.moveId===R.id)&&this.moveId!==A.SKETCH)return this.end();this.messageMode=s.ui.getHandler()instanceof jG?Ce.EVOLUTION_SCENE:Ce.MESSAGE,s.ui.setMode(this.messageMode),I.length<4?this.learnMove(I.length,R,E):this.replaceMoveCheck(R,E)}async replaceMoveCheck(E,R){const I=D.t("battle:learnMovePrompt",{pokemonName:Z(R),moveName:E.name}),N=D.t("battle:learnMoveLimitReached",{pokemonName:Z(R)}),S=D.t("battle:learnMoveReplaceQuestion",{moveName:E.name}),T=[I,N].join("$");await s.ui.showTextPromise(T),await s.ui.showTextPromise(S,void 0,!1),await s.ui.setModeWithoutClear(Ce.CONFIRM,()=>this.forgetMoveProcess(E,R),()=>{s.ui.setMode(this.messageMode),this.rejectMoveAndEnd(E,R)})}async forgetMoveProcess(E,R){s.ui.setMode(this.messageMode),await s.ui.showTextPromise(D.t("battle:learnMoveForgetQuestion"),void 0,!0),await s.ui.setModeWithoutClear(Ce.SUMMARY,R,Nc.LEARN_MOVE,E,I=>{if(I===4){s.ui.setMode(this.messageMode).then(()=>this.rejectMoveAndEnd(E,R));return}const N=D.t("battle:learnMoveForgetSuccess",{pokemonName:Z(R),moveName:R.moveset[I].getName()}),S=[D.t("battle:countdownPoof"),N,D.t("battle:learnMoveAnd")].join("$");s.ui.setMode(this.messageMode).then(()=>this.learnMove(I,E,R,S))})}async rejectMoveAndEnd(E,R){await s.ui.showTextPromise(D.t("battle:learnMoveStopTeaching",{moveName:E.name}),void 0,!1),s.ui.setModeWithoutClear(Ce.CONFIRM,()=>{s.ui.setMode(this.messageMode),s.ui.showTextPromise(D.t("battle:learnMoveNotLearned",{pokemonName:Z(R),moveName:E.name}),void 0,!0).then(()=>this.end())},()=>{s.ui.setMode(this.messageMode),this.replaceMoveCheck(E,R)})}async learnMove(E,R,I,N){this.learnMoveType===2?(I.usedTMs||(I.usedTMs=[]),I.usedTMs.push(this.moveId),s.tryRemovePhase(T=>T instanceof JO)):this.learnMoveType===1&&(this.cost!==-1?(Ze.WAIVE_ROLL_FEE_OVERRIDE||(s.money-=this.cost,s.updateMoneyText(),s.animateMoneyChanged(!1)),s.playSound("se/buy")):s.tryRemovePhase(T=>T instanceof JO)),I.setMove(E,this.moveId),fM(this.moveId).then(()=>{dM([this.moveId],!0)}),s.ui.setMode(this.messageMode);const S=D.t("battle:learnMove",{pokemonName:Z(I),moveName:R.name});N&&await s.ui.showTextPromise(N),s.playSound("level_up_fanfare"),s.ui.showText(S,null,()=>{s.triggerPokemonFormChange(I,yN,!0),this.end()},this.messageMode===Ce.EVOLUTION_SCENE?1e3:void 0,!0)}};r(Dd,"LearnMovePhase");let kI=Dd;const gt="mysteryEncounters/dancingLessons",Tk=[n.VOLCANO,n.BEACH,n.ISLAND,n.WASTELAND,n.MOUNTAIN,n.BADLANDS,n.DESERT],nk=[n.CONSTRUCTION_SITE,n.POWER_PLANT,n.FACTORY,n.LABORATORY,n.SLUM,n.METROPOLIS,n.DOJO],ak=[n.JUNGLE,n.FAIRY_CAVE,n.MEADOW,n.PLAINS,n.GRASS,n.TALL_GRASS,n.FOREST],rk=[n.RUINS,n.SWAMP,n.CAVE,n.ABYSS,n.GRAVEYARD,n.LAKE,n.TEMPLE],ik=NE.withEncounterType(ge.DANCING_LESSONS).withEncounterTier(QA.GREAT).withSceneWaveRangeRequirement(...mE).withIntroSpriteConfigs([]).withAnimations(aO.DANCE).withHideWildIntroMessage(!0).withAutoHideIntroVisuals(!1).withCatchAllowed(!0).withFleeAllowed(!1).withOnVisualsStart(()=>{const t=s.getEnemyPokemon();return new VI(aO.DANCE,t,s.getPlayerPokemon()).play(!1,()=>{t.shiny&&t.sparkle()}),!0}).withIntroDialogue([{text:`${gt}:intro`}]).setLocalizationKey(`${gt}`).withTitle(`${gt}:title`).withDescription(`${gt}:description`).withQuery(`${gt}:query`).withOnInit(()=>{const t=s.currentBattle.mysteryEncounter,E=de(e.ORICORIO),R=Si(si),I=new pR(E,R,b.NONE,!1);I.moveset.some(o=>o&&o.getMove().id===A.REVELATION_DANCE)||(I.moveset.length<4?I.moveset.push(new Ye(A.REVELATION_DANCE)):I.moveset[0]=new Ye(A.REVELATION_DANCE));const N=s.arena.biomeType;Tk.includes(N)?I.formIndex=0:nk.includes(N)?I.formIndex=1:ak.includes(N)?I.formIndex=2:rk.includes(N)?I.formIndex=3:I.formIndex=0;const S=new Zt(I),T=s.addEnemyPokemon(E,R,b.NONE,!1,!1,S);for(const o of s.getEnemyParty())o.leaveField(!0,!0,!0);s.currentBattle.enemyParty=[T],s.field.add(T),T.x-=300,t.loadAssets.push(T.loadAssets());const i={pokemonConfigs:[{species:E,dataSource:S,isBoss:!0,tags:[Y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:r(o=>{YE(`${gt}:option.1.boss_enraged`),s.unshiftPhase(new hA(o.getBattlerIndex(),!0,[h.ATK,h.DEF,h.SPATK,h.SPDEF],1))},"mysteryEncounterBattleEffects")}]};return t.enemyPartyConfigs=[i],t.misc={oricorioData:S},t.setDialogueToken("oricorioName",de(e.ORICORIO).getName()),!0}).withOption(PA.newOptionWithMode(MA.DEFAULT).withDialogue({buttonLabel:`${gt}:option.1.label`,buttonTooltip:`${gt}:option.1.tooltip`,selected:[{text:`${gt}:option.1.selected`}]}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;t.startOfBattleEffects.push({sourceBattlerIndex:FA.ENEMY,targets:[FA.PLAYER],move:new Ye(A.REVELATION_DANCE),ignorePp:!0}),await QM(),lA({guaranteedModifierTypeFuncs:[x.BATON],fillRemaining:!0}),await HE(t.enemyPartyConfigs[0])}).build()).withOption(PA.newOptionWithMode(MA.DEFAULT).withDialogue({buttonLabel:`${gt}:option.2.label`,buttonTooltip:`${gt}:option.2.tooltip`,selected:[{text:`${gt}:option.2.selected`}]}).withPreOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;return Ut(r(R=>{t.setDialogueToken("selectedPokemon",R.getNameToRender()),s.unshiftPhase(new kI(s.getPlayerParty().indexOf(R),A.REVELATION_DANCE)),new VI(aO.DANCE,s.getEnemyPokemon(),s.getPlayerPokemon()).play()},"onPokemonSelected"))}).withOptionPhase(async()=>{await QM(),nA(!0)}).build()).withOption(PA.newOptionWithMode(MA.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new wL(D2,!0)).withDialogue({buttonLabel:`${gt}:option.3.label`,buttonTooltip:`${gt}:option.3.tooltip`,disabledButtonTooltip:`${gt}:option.3.disabled_tooltip`,secondOptionPrompt:`${gt}:option.3.select_prompt`,selected:[{text:`${gt}:option.3.selected`}]}).withPreOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;return Ut(r(I=>I.moveset.filter(N=>N&&D2.includes(N.getMove().id)).map(N=>({label:N.getName(),handler:r(()=>(t.setDialogueToken("selectedPokemon",I.getNameToRender()),t.setDialogueToken("selectedMove",N.getName()),t.misc.selectedMove=N,!0),"handler")})),"onPokemonSelected"),void 0,r(I=>I.isAllowedInBattle()?t.options[2].pokemonMeetsPrimaryRequirements(I)?null:xE(`${gt}:invalid_selection`)??null:D.t("partyUiHandler:cantBeUsed",{pokemonName:I.getNameToRender()})??null,"selectableFilter"))}).withOptionPhase(async()=>{var I;const t=s.currentBattle.mysteryEncounter,E=t.misc.oricorioData.toPokemon();E.passive=!0;const R=(I=t.misc.selectedMove)==null?void 0:I.getMove().id;E.moveset.some(N=>N.getMove().id===R)||(E.moveset.length<4?E.moveset.push(new Ye(R)):E.moveset[3]=new Ye(R)),await QM(),await GS(E,null,Me.POKEBALL,!1),nA(!0)}).build()).build();function QM(){return new Promise(t=>{const E=s.getEnemyParty()[0];s.tweens.add({targets:E,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750,onComplete:r(()=>{s.field.remove(E,!0),t()},"onComplete")})})}r(QM,"hideOricorioPokemon");var A6=(t=>(t[t.CENTER=0]="CENTER",t[t.LEFT=1]="LEFT",t[t.RIGHT=2]="RIGHT",t))(A6||{});function e0(t,E,R){return new Promise(I=>{const N=s.fieldUI.getByName("Dream Background"),S=s.add.image(0,0,"default_bg");S.setOrigin(0,0),S.setVisible(!1),N.add(S);let T,i,o,C;const U=R===0?0:R===2?100:-100,_=R!==0?-15:0,G=r(()=>{const H=s.addPokemonSprite(t,S.displayWidth/2+U,S.displayHeight/2+_,"pkmn__sub");return H.setPipeline(s.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),H},"getPokemonSprite");N.add(T=G()),N.add(i=G()),N.add(o=G()),N.add(C=G()),T.setAlpha(0),i.setAlpha(0),i.setTintFill(16777215),o.setVisible(!1),C.setVisible(!1),C.setTintFill(16777215),[T,i,o,C].map(H=>{const c=t.getSpriteKey(!0);try{H.play(c)}catch(f){console.error(`Failed to play animation for ${c}`,f)}H.setPipeline(s.spritePipeline,{tone:[0,0,0,0],hasShadow:!1,teraColor:iO(t.getTeraType()),isTerastallized:t.isTerastallized}),H.setPipelineData("ignoreTimeTint",!0),H.setPipelineData("spriteKey",t.getSpriteKey()),H.setPipelineData("shiny",t.shiny),H.setPipelineData("variant",t.variant),["spriteColors","fusionSpriteColors"].map(f=>{t.summonData.speciesForm&&(f+="Base"),H.pipelineData[f]=t.getSprite().pipelineData[f]})}),[o,C].map(H=>{const c=E.getSpriteKey(!0);try{H.play(c)}catch(f){console.error(`Failed to play animation for ${c}`,f)}H.setPipelineData("ignoreTimeTint",!0),H.setPipelineData("spriteKey",E.getSpriteKey()),H.setPipelineData("shiny",E.shiny),H.setPipelineData("variant",E.variant),["spriteColors","fusionSpriteColors"].map(f=>{E.summonData.speciesForm&&(f+="Base"),H.pipelineData[f]=E.getSprite().pipelineData[f]})}),s.tweens.add({targets:T,alpha:1,ease:"Cubic.easeInOut",duration:2e3,onComplete:r(()=>{ok(S,N,U,_),s.tweens.addCounter({from:0,to:1,duration:1e3,onUpdate:r(H=>{i.setAlpha(H.getValue())},"onUpdate"),onComplete:r(()=>{T.setVisible(!1),s.time.delayedCall(700,()=>{Ck(S,N,U,_),s.time.delayedCall(1e3,()=>{C.setScale(.25),C.setVisible(!0),E6(1.5,6,i,C).then(()=>{o.setVisible(!0),lk(S,N,U,_),s.time.delayedCall(900,()=>{s.tweens.add({targets:C,alpha:0,duration:1500,delay:150,easing:"Sine.easeIn",onComplete:r(()=>{s.time.delayedCall(3e3,()=>{I(),s.tweens.add({targets:o,alpha:0,duration:2e3,delay:150,easing:"Sine.easeIn",onComplete:r(()=>{t.destroy(),E.setVisible(!1),E.setAlpha(1)},"onComplete")})})},"onComplete")})})})})})},"onComplete")})},"onComplete")})})}r(e0,"doPokemonTransformationSequence");function ok(t,E,R,I){let N=0;s.tweens.addCounter({repeat:64,duration:VE(1),onRepeat:r(()=>{if(N<64){if(!(N&7))for(let S=0;S<4;S++)Uk((N&120)*2+S*64,t,E,R,I);N++}},"onRepeat")})}r(ok,"doSpiralUpward");function Ck(t,E,R,I){let N=0;s.tweens.addCounter({repeat:96,duration:VE(1),onRepeat:r(()=>{if(N<96){if(N<6)for(let S=0;S<9;S++)Dk(S*16,t,E,R,I);N++}},"onRepeat")})}r(Ck,"doArcDownward");function E6(t,E,R,I){return new Promise(N=>{const S=t===E;s.tweens.add({targets:R,scale:.25,ease:"Cubic.easeInOut",duration:500/t,yoyo:!S}),s.tweens.add({targets:I,scale:1,ease:"Cubic.easeInOut",duration:500/t,yoyo:!S,onComplete:r(()=>{t<E?E6(t+.5,E,R,I).then(T=>N(T)):(R.setVisible(!1),N(!0))},"onComplete")})})}r(E6,"doCycle");function lk(t,E,R,I){let N=0;s.tweens.addCounter({repeat:48,duration:VE(1),onRepeat:r(()=>{if(N){if(N===32)for(let S=0;S<16;S++)w2(S*16,8,t,E,R,I)}else for(let S=0;S<16;S++)w2(S*16,4,t,E,R,I);N++},"onRepeat")})}r(lk,"doCircleInward");function Uk(t,E,R,I,N){const S=E.displayWidth/2+I,T=s.add.image(S,0,"evo_sparkle");R.add(T);let i=0,o=48;const C=s.tweens.addCounter({repeat:-1,duration:VE(1),onRepeat:r(()=>{U()},"onRepeat")}),U=r(()=>{!i||T.y>8?(T.setPosition(S,88-i*i/80+N),T.y+=aI(t,o)/4,T.x+=hN(t,o),T.setScale(1-i/80),t+=4,i&1&&o--,i++):(T.destroy(),C.remove())},"updateParticle");U()}r(Uk,"doSpiralUpwardParticle");function Dk(t,E,R,I,N){const S=E.displayWidth/2+I,T=s.add.image(S,0,"evo_sparkle");T.setScale(.5),R.add(T);let i=0,o=8;const C=s.tweens.addCounter({repeat:-1,duration:VE(1),onRepeat:r(()=>{U()},"onRepeat")}),U=r(()=>{!i||T.y<88?(T.setPosition(S,8+i*i/5+N),T.y+=aI(t,o)/4,T.x+=hN(t,o),o=8+aI(i*4,40),i++):(T.destroy(),C.remove())},"updateParticle");U()}r(Dk,"doArcDownParticle");function w2(t,E,R,I,N,S){const T=R.displayWidth/2+N,i=R.displayHeight/2+S,o=s.add.image(T,i,"evo_sparkle");I.add(o);let C=120;const U=s.tweens.addCounter({repeat:-1,duration:VE(1),onRepeat:r(()=>{_()},"onRepeat")}),_=r(()=>{C>8?(o.setPosition(T,i),o.y+=aI(t,C),o.x+=hN(t,C),C-=E,t+=4):(o.destroy(),U.remove())},"updateParticle");_()}r(w2,"doCircleInwardParticle");const ct="mysteryEncounters/weirdDream",Mk=[e.ETERNATUS,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.ROARING_MOON,e.WALKING_WAKE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.IRON_VALIANT,e.IRON_LEAVES,e.IRON_BOULDER,e.IRON_CROWN,e.COSMOG,e.MELTAN,e.KUBFU,e.COSMOEM,e.POIPOLE,e.TERAPAGOS,e.TYPE_NULL,e.CALYREX,e.NAGANADEL,e.URSHIFU,e.OGERPON,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI],UC=600,Ti=570,t6=20,Pk=10,Gk=[90,110],_k=[40,50],uk=NE.withEncounterType(ge.WEIRD_DREAM).withEncounterTier(QA.ROGUE).withDisallowedChallenges(Je.SINGLE_TYPE,Je.SINGLE_GENERATION).withSceneWaveRangeRequirement(30,140).withIntroSpriteConfigs([{spriteKey:"weird_dream_woman",fileRoot:"mystery-encounters",hasShadow:!0,y:11,yShadow:6,x:4}]).withIntroDialogue([{text:`${ct}:intro`},{speaker:`${ct}:speaker`,text:`${ct}:intro_dialogue`}]).setLocalizationKey(`${ct}`).withTitle(`${ct}:title`).withDescription(`${ct}:description`).withQuery(`${ct}:query`).withOnInit(()=>{s.loadBgm("mystery_encounter_weird_dream","mystery_encounter_weird_dream.mp3");const t=Hk(),E=t.map(R=>R.newPokemon.loadAssets());return s.currentBattle.mysteryEncounter.misc={teamTransformations:t,loadAssets:E},!0}).withOnVisualsStart(()=>(s.fadeAndSwitchBgm("mystery_encounter_weird_dream"),!0)).withOption(PA.newOptionWithMode(MA.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${ct}:option.1.label`,buttonTooltip:`${ct}:option.1.tooltip`,selected:[{text:`${ct}:option.1.selected`}]}).withPreOptionPhase(async()=>{s.time.delayedCall(1e3,()=>{hk()});for(const t of s.currentBattle.mysteryEncounter.misc.teamTransformations)s.removePokemonFromPlayerParty(t.previousPokemon,!1),s.getPlayerParty().push(t.newPokemon)}).withOptionPhase(async()=>{const t=fA(`${ct}:option.1.cutscene`);await Promise.all(s.currentBattle.mysteryEncounter.misc.loadAssets);const E=s.currentBattle.mysteryEncounter.misc.teamTransformations;if(E.length<=3)for(const R of E){const I=R.previousPokemon,N=R.newPokemon;await e0(I,N,A6.CENTER)}else await dk(E);await t,fk(),await fA(`${ct}:option.1.dream_complete`),await ck(E),lA({guaranteedModifierTypeFuncs:[x.MEMORY_MUSHROOM,x.ROGUE_BALL,x.MINT,x.MINT,x.MINT],fillRemaining:!1}),nA(!0)}).build()).withSimpleOption({buttonLabel:`${ct}:option.2.label`,buttonTooltip:`${ct}:option.2.tooltip`,selected:[{text:`${ct}:option.2.selected`}]},async()=>{const t=s.currentBattle.mysteryEncounter.misc.teamTransformations,E=[];for(const T of t){const i=T.newPokemon,o=T.previousPokemon;await R6(o,i,i.species.getRootSpeciesId(),!0);const C=new Zt(i);C.player=!1;const U=[];for(const G of T.heldItems)U.push({modifier:G.clone(),stackCount:G.getStackCount(),isTransferable:!1});if(O6(i)){const G=I6(i);U.push({modifier:RA(x.MYSTERY_ENCOUNTER_OLD_GATEAU,[t6,G]),stackCount:1,isTransferable:!1})}const _={species:T.newSpecies,isBoss:i.getSpeciesForm().getBaseStatTotal()>Ti,level:o.level,dataSource:C,modifierConfigs:U};E.push(_)}const R=s.gameData.gender??YA.UNSET,I=yE[R===YA.FEMALE?l.FUTURE_SELF_F:l.FUTURE_SELF_M].clone();I.setPartyTemplates(new pe(t.length,ce.STRONG));const N={trainerConfig:I,pokemonConfigs:E,female:R===YA.FEMALE},S=r(()=>{const T=s.getPlayerParty().filter(i=>!i.passive);if((T==null?void 0:T.length)>0){const i=T[De(T.length)];i.passive=!0,i.updateInfo(!0)}},"onBeforeRewards");lA({guaranteedModifierTiers:[p.ROGUE,p.ROGUE,p.ULTRA,p.ULTRA,p.GREAT,p.GREAT],fillRemaining:!1},void 0,S),await fA(`${ct}:option.2.selected_2`,null,void 0,!0),await HE(N)}).withSimpleOption({buttonLabel:`${ct}:option.3.label`,buttonTooltip:`${ct}:option.3.tooltip`,selected:[{text:`${ct}:option.3.selected`}]},async()=>{for(const t of s.getPlayerParty())t.level=Math.max(Math.ceil((100-Pk)/100*t.level),1),t.exp=SO(t.level,t.species.growthRate),t.levelExp=0,t.calculateStats(),t.getBattleInfo().setLevel(t.level),await t.updateInfo();return nA(!0),!0}).build();function Hk(){const t=s.getPlayerParty(),E=t.map(i=>i.species),R=t.map(i=>({previousPokemon:i}));let I=!1,N=!1;const S=t.length,T=lI(t.slice(0));for(let i=0;i<S;i++){const o=T[i],C=R.findIndex(c=>c.previousPokemon.id===o.id);R[C].heldItems=o.getHeldItems().filter(c=>!(c instanceof EI));const U=o.getSpeciesForm().getBaseStatTotal();let _;i<2?_=Gk:_=_k;const G=Bk(U,_,I,N,E),H=G.getBaseStatTotal();H>UC&&(I=!0),H<=UC&&H>=Ti&&(N=!0),R[C].newSpecies=G,console.log("New species: "+JSON.stringify(G)),E.push(G)}for(const i of R){const o=De(i.newSpecies.getAbilityCount());i.newPokemon=s.addPlayerPokemon(i.newSpecies,i.previousPokemon.level,o,void 0)}return R}r(Hk,"getTeamTransformations");async function ck(t){var I;let E=!1;for(const N of t){const S=N.previousPokemon,T=N.newPokemon,i=T.species.getRootSpeciesId();await R6(S,T,i)&&(E=!0);for(const o of N.heldItems)o.pokemonId=T.id,s.addModifier(o,!1,!1,!1,!0);if(O6(T)){const o=I6(T),C=(I=x.MYSTERY_ENCOUNTER_OLD_GATEAU().generateType(s.getPlayerParty(),[t6,o]))==null?void 0:I.withIdFromFunc(x.MYSTERY_ENCOUNTER_OLD_GATEAU),U=C==null?void 0:C.newModifier(T);U&&s.addModifier(U,!1,!1,!1,!0)}T.calculateStats(),await T.updateInfo()}const R=s.getPlayerParty().filter(N=>!N.passive);if((R==null?void 0:R.length)>0){const N=R[De(R.length)];N.passive=!0,await N.updateInfo(!0)}E&&s.playSound("level_up_fanfare")}r(ck,"doNewTeamPostProcess");async function R6(t,E,R,I=!1){let N=!1;if(E.species.abilityHidden){const C=E.species.ability2?2:1;if(E.abilityIndex<C){const U=new me(256);s.applyModifiers(MI,!0,U),!De(U.value)&&(E.abilityIndex=C)}}E.ivs=E.ivs.map(C=>{const U=De(31);return U>C?U:C}),E.nature=[be.HARDY,be.DOCILE,be.BASHFUL,be.QUIRKY,be.SERIOUS][De(5)],!I&&(E.getSpeciesForm().getBaseStatTotal()<=Ti||E.isShiny())&&(E.getSpeciesForm().abilityHidden&&E.abilityIndex===E.getSpeciesForm().getAbilityCount()-1&&s.validateAchv(oA.HIDDEN_ABILITY),E.species.subLegendary&&s.validateAchv(oA.CATCH_SUB_LEGENDARY),E.species.legendary&&s.validateAchv(oA.CATCH_LEGENDARY),E.species.mythical&&s.validateAchv(oA.CATCH_MYTHICAL),s.gameData.updateSpeciesDexIvs(E.species.getRootSpeciesId(!0),E.ivs),await s.gameData.setPokemonCaught(E,!0,!1,!1)&&(N=!0,await fA(D.t("battle:addedAsAStarter",{pokemonName:de(R).getName()})))),E.pokerus=t.pokerus,E.luck=t.getLuck(),E.ivs=E.ivs.map((C,U)=>t.ivs[U]>C?t.ivs[U]:C),!I&&s.gameData.dexData[R].caughtAttr&&s.gameData.addStarterCandy(de(R),1),E.generateAndPopulateMoveset();const S=E.moveset;E.moveset=t.moveset.slice(0);const T=await Kk(E,R,I);Fk(E,S,T);const i=[L.UNKNOWN];let o=De(18);for(;o===i[0];)o=De(18);return i.push(o),E.customPokemonData.types=i,E.passive=t.passive,N}r(R6,"postProcessTransformedPokemon");function O6(t){return t.getSpeciesForm().getBaseStatTotal()<Ti}r(O6,"shouldGetOldGateau");function I6(t){const E=[],R=t.getSpeciesForm().baseStats.slice(0);return E.push(R[h.HP]<R[h.SPD]?h.HP:h.SPD),E.push(R[h.ATK]<R[h.SPATK]?h.ATK:h.SPATK),E.push(R[h.DEF]<R[h.SPDEF]?h.DEF:h.SPDEF),E}r(I6,"getOldGateauBoostedStats");function Bk(t,E,R,I,N){let S;for(;Ne(S);){const T=t+E[1],i=Math.max(t+E[0],0);let o=uI.filter(C=>{const U=C.getBaseStatTotal(),_=U>=i&&U<=T,G=(!I||U<Ti||U>UC)&&(!R||U<=UC);return _&&G&&!Mk.includes(C.speciesId)});if((o==null?void 0:o.length)>20)for(o=lI(o),S=o.pop();Ne(S)||N.includes(S);)S=o.pop();else E[0]-=10,E[1]+=10}return S}r(Bk,"getTransformedSpecies");function hk(){const t=s.add.container(0,-s.game.canvas.height/6);t.name="Dream Background";const E=s.add.rectangle(0,0,s.game.canvas.width/6,s.game.canvas.height/6,0);E.setName("Black Background"),E.setOrigin(0,0),t.add(E),E.setVisible(!0);const R=s.add.video(0,0,"evo_bg").stop();R.setLoop(!0),R.setOrigin(0,0),R.setScale(.4359673025),t.add(R),s.fieldUI.add(t),s.fieldUI.bringToTop(t),R.play(),t.setVisible(!0),t.alpha=0,s.tweens.add({targets:t,alpha:1,duration:3e3,ease:"Sine.easeInOut"})}r(hk,"doShowDreamBackground");function fk(){const t=s.fieldUI.getByName("Dream Background");s.tweens.add({targets:t,alpha:0,duration:3e3,ease:"Sine.easeInOut",onComplete:r(()=>{s.fieldUI.remove(t,!0)},"onComplete")})}r(fk,"doHideDreamBackground");function dk(t){return new Promise(E=>{const R=[];for(let S=0;S<3;S++){const T=S*4e3;s.time.delayedCall(T,()=>{const i=t[S],o=i.previousPokemon,C=i.newPokemon,U=S,_=e0(o,C,U).then(()=>{if(t.length>S+3){const G=t[S+3],H=G.previousPokemon,c=G.newPokemon;R.push(e0(H,c,U))}});R.push(_)})}const I=setInterval(N,500);async function N(){R.length===t.length&&(clearInterval(I),await Promise.all(R),E())}r(N,"checkAllPromisesExist")})}r(dk,"doSideBySideTransformations");async function Kk(t,E,R=!1){var S;let I=null;const N=(S=t.getEggMoves())==null?void 0:S.slice(0);if(N){const T=lI([0,1,2,3]);let i=T.pop(),o=Ne(i)?null:N[i],C=0;for(;C<3&&(!o||t.moveset.some(U=>U.moveId===o));)i=T.pop(),o=Ne(i)?null:N[i],C++;o&&(t.moveset.some(U=>U.moveId===o)||(t.moveset.length<4?t.moveset.push(new Ye(o)):(I=De(4),t.moveset[I]=new Ye(o))),!R&&!Ne(i)&&s.gameData.dexData[E].caughtAttr&&await s.gameData.setEggMoveUnlocked(de(E),i,!0))}return I}r(Kk,"addEggMoveToNewPokemonMoveset");function Fk(t,E,R){let I=null;for(const N of E)if((N==null?void 0:N.getMove().type)===t.getTypes()[0]&&!t.moveset.some(S=>S.moveId===N.moveId)){I=N;break}if(!I){for(const N of E)if(!t.moveset.some(S=>S.moveId===N.moveId)){I=N;break}}if(I)if(t.moveset.length<4)t.moveset.push(I);else{let N=De(4);for(;R!==null&&N===R;)N=De(4);t.moveset[N]=I}}r(Fk,"addFavoredMoveToNewPokemonMoveset");const Md=class Md extends Nt{start(){super.start(),s.trainer.setVisible(!0),s.trainer.setTexture(`trainer_${s.gameData.gender===YA.FEMALE?"f":"m"}_back`),s.tweens.add({targets:s.trainer,x:106,duration:1e3,onComplete:r(()=>this.end(),"onComplete")})}};r(Md,"ShowTrainerPhase");let A0=Md;const ft="mysteryEncounters/theWinstrateChallenge",Yk=NE.withEncounterType(ge.THE_WINSTRATE_CHALLENGE).withEncounterTier(QA.ROGUE).withSceneWaveRangeRequirement(100,mE[1]).withIntroSpriteConfigs([{spriteKey:"vito",fileRoot:"trainer",hasShadow:!1,x:16,y:-4},{spriteKey:"vivi",fileRoot:"trainer",hasShadow:!1,x:-14,y:-4},{spriteKey:"victor",fileRoot:"trainer",hasShadow:!0,x:-32},{spriteKey:"victoria",fileRoot:"trainer",hasShadow:!0,x:40},{spriteKey:"vicky",fileRoot:"trainer",hasShadow:!0,x:3,y:5,yShadow:5}]).withIntroDialogue([{text:`${ft}:intro`},{speaker:`${ft}:speaker`,text:`${ft}:intro_dialogue`}]).withAutoHideIntroVisuals(!1).withOnInit(()=>{const t=s.currentBattle.mysteryEncounter;return t.enemyPartyConfigs.push(wk()),t.enemyPartyConfigs.push(yk()),t.enemyPartyConfigs.push(pk()),t.enemyPartyConfigs.push(gk()),t.enemyPartyConfigs.push(mk()),!0}).setLocalizationKey(`${ft}`).withTitle(`${ft}:title`).withDescription(`${ft}:description`).withQuery(`${ft}:query`).withSimpleOption({buttonLabel:`${ft}:option.1.label`,buttonTooltip:`${ft}:option.1.tooltip`,selected:[{speaker:`${ft}:speaker`,text:`${ft}:option.1.selected`}]},async()=>{s.currentBattle.mysteryEncounter.doContinueEncounter=async()=>{await Wk()},await uE(!0,!1),await E0()}).withSimpleOption({buttonLabel:`${ft}:option.2.label`,buttonTooltip:`${ft}:option.2.tooltip`,selected:[{speaker:`${ft}:speaker`,text:`${ft}:option.2.selected`}]},async()=>{s.unshiftPhase(new DS(!0)),lA({guaranteedModifierTypeFuncs:[x.RARER_CANDY],fillRemaining:!1}),nA()}).build();async function E0(){const t=s.currentBattle.mysteryEncounter,E=t.enemyPartyConfigs.pop();if(E)await HE(E);else{await uE(!1,!1),await rI(`${ft}:victory`,`${ft}:speaker`);const R=x.VOUCHER_PREMIUM().newModifier();s.addModifier(R),s.playSound("item_fanfare"),await fA(D.t("battle:rewardGain",{modifierName:R==null?void 0:R.type.name})),await rI(`${ft}:victory_2`,`${ft}:speaker`),s.ui.clearText();const I=KE(x.MYSTERY_ENCOUNTER_MACHO_BRACE);I.type.tier=p.MASTER,lA({guaranteedModifierTypeOptions:[I],fillRemaining:!1}),t.doContinueEncounter=void 0,nA(!1,JE.NO_BATTLE)}}r(E0,"spawnNextTrainerOrEndEncounter");function Wk(){return new Promise(async t=>{if(s.currentBattle.mysteryEncounter.enemyPartyConfigs.length===0){const E=s.currentBattle.trainer;E&&s.tweens.add({targets:E,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750,onComplete:r(()=>{s.field.remove(E,!0)},"onComplete")}),await E0(),t()}else{s.arena.resetArenaEffects();const E=s.getPlayerField();for(const I of E)I.lapseTag(Y.COMMANDED);E.forEach((I,N)=>s.unshiftPhase(new ba(N)));for(const I of s.getPlayerParty())I.species.speciesId===e.EISCUE&&I.hasAbility(O.ICE_FACE)&&I.formIndex===1&&s.triggerPokemonFormChange(I,cA),I.resetBattleAndWaveData(),x9(fC,I);s.unshiftPhase(new A0);const R=s.currentBattle.trainer;s.currentBattle.trainer=null,await E0(),R&&s.tweens.add({targets:R,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750,onComplete:r(()=>{s.field.remove(R,!0),t()},"onComplete")})}})}r(Wk,"endTrainerBattleAndShowDialogue");function mk(){return{trainerType:l.VICTOR,pokemonConfigs:[{species:de(e.SWELLOW),isBoss:!1,abilityIndex:0,nature:be.ADAMANT,moveSet:[A.FACADE,A.BRAVE_BIRD,A.PROTECT,A.QUICK_ATTACK],modifierConfigs:[{modifier:RA(x.FLAME_ORB),isTransferable:!1},{modifier:RA(x.FOCUS_BAND),stackCount:2,isTransferable:!1}]},{species:de(e.OBSTAGOON),isBoss:!1,abilityIndex:1,nature:be.ADAMANT,moveSet:[A.FACADE,A.OBSTRUCT,A.NIGHT_SLASH,A.FIRE_PUNCH],modifierConfigs:[{modifier:RA(x.FLAME_ORB),isTransferable:!1},{modifier:RA(x.LEFTOVERS),stackCount:2,isTransferable:!1}]}]}}r(mk,"getVictorTrainerConfig");function gk(){return{trainerType:l.VICTORIA,pokemonConfigs:[{species:de(e.ROSERADE),isBoss:!1,abilityIndex:0,nature:be.CALM,moveSet:[A.SYNTHESIS,A.SLUDGE_BOMB,A.GIGA_DRAIN,A.SLEEP_POWDER],modifierConfigs:[{modifier:RA(x.SOUL_DEW),isTransferable:!1},{modifier:RA(x.QUICK_CLAW),stackCount:2,isTransferable:!1}]},{species:de(e.GARDEVOIR),isBoss:!1,formIndex:1,nature:be.TIMID,moveSet:[A.PSYSHOCK,A.MOONBLAST,A.SHADOW_BALL,A.WILL_O_WISP],modifierConfigs:[{modifier:RA(x.ATTACK_TYPE_BOOSTER,[L.PSYCHIC]),stackCount:1,isTransferable:!1},{modifier:RA(x.ATTACK_TYPE_BOOSTER,[L.FAIRY]),stackCount:1,isTransferable:!1}]}]}}r(gk,"getVictoriaTrainerConfig");function pk(){return{trainerType:l.VIVI,pokemonConfigs:[{species:de(e.SEAKING),isBoss:!1,abilityIndex:3,nature:be.ADAMANT,moveSet:[A.WATERFALL,A.MEGAHORN,A.KNOCK_OFF,A.REST],modifierConfigs:[{modifier:RA(x.BERRY,[OA.LUM]),stackCount:2,isTransferable:!1},{modifier:RA(x.BASE_STAT_BOOSTER,[h.HP]),stackCount:4,isTransferable:!1}]},{species:de(e.BRELOOM),isBoss:!1,abilityIndex:1,nature:be.JOLLY,moveSet:[A.SPORE,A.SWORDS_DANCE,A.SEED_BOMB,A.DRAIN_PUNCH],modifierConfigs:[{modifier:RA(x.BASE_STAT_BOOSTER,[h.HP]),stackCount:4,isTransferable:!1},{modifier:RA(x.TOXIC_ORB),isTransferable:!1}]},{species:de(e.CAMERUPT),isBoss:!1,formIndex:1,nature:be.CALM,moveSet:[A.EARTH_POWER,A.FIRE_BLAST,A.YAWN,A.PROTECT],modifierConfigs:[{modifier:RA(x.QUICK_CLAW),stackCount:3,isTransferable:!1}]}]}}r(pk,"getViviTrainerConfig");function yk(){return{trainerType:l.VICKY,pokemonConfigs:[{species:de(e.MEDICHAM),isBoss:!1,formIndex:1,nature:be.IMPISH,moveSet:[A.AXE_KICK,A.ICE_PUNCH,A.ZEN_HEADBUTT,A.BULLET_PUNCH],modifierConfigs:[{modifier:RA(x.SHELL_BELL),isTransferable:!1}]}]}}r(yk,"getVickyTrainerConfig");function wk(){return{trainerType:l.VITO,pokemonConfigs:[{species:de(e.HISUI_ELECTRODE),isBoss:!1,abilityIndex:0,nature:be.MODEST,moveSet:[A.THUNDERBOLT,A.GIGA_DRAIN,A.FOUL_PLAY,A.THUNDER_WAVE],modifierConfigs:[{modifier:RA(x.BASE_STAT_BOOSTER,[h.SPD]),stackCount:2,isTransferable:!1}]},{species:de(e.SWALOT),isBoss:!1,abilityIndex:2,nature:be.QUIET,moveSet:[A.SLUDGE_BOMB,A.GIGA_DRAIN,A.ICE_BEAM,A.EARTHQUAKE],modifierConfigs:[{modifier:RA(x.BERRY,[OA.SITRUS]),stackCount:2},{modifier:RA(x.BERRY,[OA.APICOT]),stackCount:2},{modifier:RA(x.BERRY,[OA.GANLON]),stackCount:2},{modifier:RA(x.BERRY,[OA.STARF]),stackCount:2},{modifier:RA(x.BERRY,[OA.SALAC]),stackCount:2},{modifier:RA(x.BERRY,[OA.LUM]),stackCount:2},{modifier:RA(x.BERRY,[OA.LANSAT]),stackCount:2},{modifier:RA(x.BERRY,[OA.LIECHI]),stackCount:2},{modifier:RA(x.BERRY,[OA.PETAYA]),stackCount:2},{modifier:RA(x.BERRY,[OA.ENIGMA]),stackCount:2},{modifier:RA(x.BERRY,[OA.LEPPA]),stackCount:2}]},{species:de(e.DODRIO),isBoss:!1,abilityIndex:2,nature:be.JOLLY,moveSet:[A.DRILL_PECK,A.QUICK_ATTACK,A.THRASH,A.KNOCK_OFF],modifierConfigs:[{modifier:RA(x.KINGS_ROCK),stackCount:2,isTransferable:!1}]},{species:de(e.ALAKAZAM),isBoss:!1,formIndex:1,nature:be.BOLD,moveSet:[A.PSYCHIC,A.SHADOW_BALL,A.FOCUS_BLAST,A.THUNDERBOLT],modifierConfigs:[{modifier:RA(x.WIDE_LENS),stackCount:2,isTransferable:!1}]},{species:de(e.DARMANITAN),isBoss:!1,abilityIndex:0,nature:be.IMPISH,moveSet:[A.EARTHQUAKE,A.U_TURN,A.FLARE_BLITZ,A.ROCK_SLIDE],modifierConfigs:[{modifier:RA(x.QUICK_CLAW),stackCount:2,isTransferable:!1}]}]}}r(wk,"getVitoTrainerConfig");const wt="mysteryEncounters/teleportingHijinks",JM=1.75,Vk=[n.SPACE,n.FAIRY_CAVE,n.LABORATORY,n.ISLAND,n.WASTELAND,n.DOJO],vk=[L.ELECTRIC,L.STEEL],xk=NE.withEncounterType(ge.TELEPORTING_HIJINKS).withEncounterTier(QA.COMMON).withSceneWaveRangeRequirement(...mE).withSceneRequirement(new kG([1,2,3],10)).withSceneRequirement(new zO(0,JM)).withAutoHideIntroVisuals(!1).withCatchAllowed(!0).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:"teleporting_hijinks_teleporter",fileRoot:"mystery-encounters",hasShadow:!0,x:4,y:4,yShadow:1}]).withIntroDialogue([{text:`${wt}:intro`}]).setLocalizationKey(`${wt}`).withTitle(`${wt}:title`).withDescription(`${wt}:description`).withQuery(`${wt}:query`).withOnInit(()=>{const t=s.currentBattle.mysteryEncounter,E=s.getWaveMoneyAmount(JM);return t.setDialogueToken("price",E.toString()),t.misc={price:E},!0}).withOption(PA.newOptionWithMode(MA.DISABLED_OR_DEFAULT).withSceneMoneyRequirement(0,JM).withDialogue({buttonLabel:`${wt}:option.1.label`,buttonTooltip:`${wt}:option.1.tooltip`,selected:[{text:`${wt}:option.1.selected`}]}).withPreOptionPhase(async()=>{rO(-s.currentBattle.mysteryEncounter.misc.price,!0,!1)}).withOptionPhase(async()=>{const t=await V2();lA({fillRemaining:!0}),await HE(t)}).build()).withOption(PA.newOptionWithMode(MA.DISABLED_OR_SPECIAL).withPokemonTypeRequirement(vk,!0,1).withDialogue({buttonLabel:`${wt}:option.2.label`,buttonTooltip:`${wt}:option.2.tooltip`,disabledButtonTooltip:`${wt}:option.2.disabled_tooltip`,selected:[{text:`${wt}:option.2.selected`}]}).withOptionPhase(async()=>{const t=await V2();lA({fillRemaining:!0}),WR(s.currentBattle.mysteryEncounter.selectedOption.primaryPokemon.id,100),await HE(t)}).build()).withSimpleOption({buttonLabel:`${wt}:option.3.label`,buttonTooltip:`${wt}:option.3.tooltip`,selected:[{text:`${wt}:option.3.selected`}]},async()=>{const t=s.currentBattle.mysteryEncounter,E=Si(si),R=s.arena.randomSpecies(s.currentBattle.waveIndex,E,0,pa(s.getPlayerParty()),!0),I=new pR(R,E,b.NONE,!0);t.setDialogueToken("enemyPokemon",Z(I));const N={pokemonConfigs:[{level:E,species:R,dataSource:new Zt(I),isBoss:!0}]},S=KE(x.ATTACK_TYPE_BOOSTER,[L.STEEL]),T=KE(x.ATTACK_TYPE_BOOSTER,[L.ELECTRIC]);lA({guaranteedModifierTypeOptions:[S,T],fillRemaining:!0}),await uE(!0,!0),await HE(N)}).build();async function V2(){const t=s.currentBattle.mysteryEncounter,E=Vk.filter(o=>s.arena.biomeType!==o),R=E[De(E.length)];await fA(`${wt}:transport`),await Promise.all([bk(R),uE()]),s.updateBiomeWaveText(),s.playBgm(),await fA(`${wt}:attacked`);const I=Si(si),N=s.arena.randomSpecies(s.currentBattle.waveIndex,I,0,pa(s.getPlayerParty()),!0),S=new pR(N,I,b.NONE,!0);t.setDialogueToken("enemyPokemon",Z(S));const T=s.currentBattle.waveIndex<50?[h.DEF,h.SPDEF,h.SPD]:[h.ATK,h.DEF,h.SPATK,h.SPDEF,h.SPD];return{pokemonConfigs:[{level:I,species:N,dataSource:new Zt(S),isBoss:!0,tags:[Y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:r(o=>{YE(`${wt}:boss_enraged`),s.unshiftPhase(new hA(o.getBattlerIndex(),!0,T,1))},"mysteryEncounterBattleEffects")}]}}r(V2,"doBiomeTransitionDialogueAndBattleInit");async function bk(t){return new Promise(E=>{s.tweens.add({targets:[s.arenaEnemy,s.lastEnemyTrainer],x:"+=300",duration:2e3,onComplete:r(()=>{s.newArena(t);const I=`${ni(t)}_bg`;s.arenaBgTransition.setTexture(I),s.arenaBgTransition.setAlpha(0),s.arenaBgTransition.setVisible(!0),s.arenaPlayerTransition.setBiome(t),s.arenaPlayerTransition.setAlpha(0),s.arenaPlayerTransition.setVisible(!0),s.tweens.add({targets:[s.arenaPlayer,s.arenaBgTransition,s.arenaPlayerTransition],duration:1e3,ease:"Sine.easeInOut",alpha:r(N=>N===s.arenaPlayer?0:1,"alpha"),onComplete:r(()=>{s.arenaBg.setTexture(I),s.arenaPlayer.setBiome(t),s.arenaPlayer.setAlpha(1),s.arenaEnemy.setBiome(t),s.arenaEnemy.setAlpha(1),s.arenaNextEnemy.setBiome(t),s.arenaBgTransition.setVisible(!1),s.arenaPlayerTransition.setVisible(!1),s.lastEnemyTrainer&&s.lastEnemyTrainer.destroy(),E(),s.tweens.add({targets:s.arenaEnemy,x:"-=300"})},"onComplete")})},"onComplete")})})}r(bk,"animateBiomeChange");const kA="mysteryEncounters/bugTypeSuperfan",$M=[e.PARASECT,e.VENOMOTH,e.LEDIAN,e.ARIADOS,e.YANMA,e.BEAUTIFLY,e.DUSTOX,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.ANORITH,e.KRICKETUNE,e.WORMADAM,e.MOTHIM,e.SKORUPI,e.JOLTIK,e.LARVESTA,e.VIVILLON,e.CHARJABUG,e.RIBOMBEE,e.SPIDOPS,e.LOKIX],AN=[e.SCYTHER,e.PINSIR,e.HERACROSS,e.FORRETRESS,e.SCIZOR,e.SHUCKLE,e.SHEDINJA,e.ARMALDO,e.VESPIQUEN,e.DRAPION,e.YANMEGA,e.LEAVANNY,e.SCOLIPEDE,e.CRUSTLE,e.ESCAVALIER,e.ACCELGOR,e.GALVANTULA,e.VIKAVOLT,e.ARAQUANID,e.ORBEETLE,e.CENTISKORCH,e.FROSMOTH,e.KLEAVOR],Zk=[{species:e.PINSIR,formIndex:1},{species:e.SCIZOR,formIndex:1},{species:e.HERACROSS,formIndex:1},{species:e.ORBEETLE,formIndex:1},{species:e.CENTISKORCH,formIndex:1},{species:e.DURANT},{species:e.VOLCARONA},{species:e.GOLISOPOD}],v2=[e.GENESECT,e.SLITHER_WING,e.BUZZWOLE,e.PHEROMOSA],x2=[A.MEGAHORN,A.ATTACK_ORDER,A.BUG_BITE,A.FIRST_IMPRESSION,A.LUNGE],b2=[A.SILVER_WIND,A.SIGNAL_BEAM,A.BUG_BUZZ,A.POLLEN_PUFF,A.STRUGGLE_BUG],Z2=[A.STRING_SHOT,A.DEFEND_ORDER,A.RAGE_POWDER,A.STICKY_WEB,A.SILK_TRAP],k2=[A.LEECH_LIFE,A.U_TURN,A.HEAL_ORDER,A.QUIVER_DANCE,A.INFESTATION],LL=[30,50,70,100,120,140,160],kk=NE.withEncounterType(ge.BUG_TYPE_SUPERFAN).withEncounterTier(QA.GREAT).withPrimaryPokemonRequirement(kN.Some(new HL(["BypassSpeedChanceModifier","ContactHeldItemTransferChanceModifier"],1),new oC(L.BUG,1),new _S(L.BUG,!1,1))).withMaxAllowedEncounters(1).withSceneWaveRangeRequirement(...mE).withIntroSpriteConfigs([]).withAutoHideIntroVisuals(!1).withIntroDialogue([{text:`${kA}:intro`},{speaker:`${kA}:speaker`,text:`${kA}:intro_dialogue`}]).withOnInit(()=>{const t=s.currentBattle.mysteryEncounter,E=Xk(s.currentBattle.waveIndex),R=E.getSpriteKey();t.enemyPartyConfigs.push({trainerConfig:E,female:!0});let I,N;s.currentBattle.waveIndex<LL[3]?(I=iI(e.BEEDRILL,!1),N=iI(e.BUTTERFREE,!1)):(I=iI(e.BEEDRILL,!1,1),N=iI(e.BUTTERFREE,!1,1)),t.spriteConfigs=[{spriteKey:I.spriteKey,fileRoot:I.fileRoot,hasShadow:!0,repeat:!0,isPokemon:!0,x:-30,tint:.15,y:-4,yShadow:-4},{spriteKey:N.spriteKey,fileRoot:N.fileRoot,hasShadow:!0,repeat:!0,isPokemon:!0,x:30,tint:.15,y:-4,yShadow:-4},{spriteKey:R,fileRoot:"trainer",hasShadow:!0,x:4,y:7,yShadow:7}];const T=[RA(x.QUICK_CLAW),RA(x.GRIP_CLAW),RA(x.ATTACK_TYPE_BOOSTER,[L.BUG])].map(i=>(i==null?void 0:i.name)??"unknown").join("/");return t.setDialogueToken("requiredBugItems",T),!0}).setLocalizationKey(`${kA}`).withTitle(`${kA}:title`).withDescription(`${kA}:description`).withQuery(`${kA}:query`).withSimpleOption({buttonLabel:`${kA}:option.1.label`,buttonTooltip:`${kA}:option.1.tooltip`,selected:[{speaker:`${kA}:speaker`,text:`${kA}:option.1.selected`}]},async()=>{const t=s.currentBattle.mysteryEncounter,E=t.enemyPartyConfigs[0],R=[];R.push(new Ye(x2[De(x2.length)])),R.push(new Ye(b2[De(b2.length)])),R.push(new Ye(Z2[De(Z2.length)])),R.push(new Ye(k2[De(k2.length)])),t.misc={moveTutorOptions:R},t.onRewards=Qk,lA({fillRemaining:!0}),await uE(!0,!0),await HE(E)}).withOption(PA.newOptionWithMode(MA.DISABLED_OR_DEFAULT).withPrimaryPokemonRequirement(new _S(L.BUG,!1,1)).withDialogue({buttonLabel:`${kA}:option.2.label`,buttonTooltip:`${kA}:option.2.tooltip`,disabledButtonTooltip:`${kA}:option.2.disabled_tooltip`}).withPreOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter,E=s.getPlayerParty().filter(I=>I.isOfType(L.BUG,!0)).length,R=D.t(`${kA}:numBugTypes`,{count:E});if(t.setDialogueToken("numBugTypes",R),E<2)lA({guaranteedModifierTypeFuncs:[x.SUPER_LURE,x.GREAT_BALL],fillRemaining:!1}),t.selectedOption.dialogue.selected=[{speaker:`${kA}:speaker`,text:`${kA}:option.2.selected_0_to_1`}];else if(E<4)lA({guaranteedModifierTypeFuncs:[x.QUICK_CLAW,x.MAX_LURE,x.ULTRA_BALL],fillRemaining:!1}),t.selectedOption.dialogue.selected=[{speaker:`${kA}:speaker`,text:`${kA}:option.2.selected_2_to_3`}];else if(E<6)lA({guaranteedModifierTypeFuncs:[x.GRIP_CLAW,x.MAX_LURE,x.ROGUE_BALL],fillRemaining:!1}),t.selectedOption.dialogue.selected=[{speaker:`${kA}:speaker`,text:`${kA}:option.2.selected_4_to_5`}];else{const I=[KE(x.MASTER_BALL)],N=[];s.findModifier(C=>C instanceof kS)||I.push(KE(x.MEGA_BRACELET)),s.findModifier(C=>C instanceof XS)||I.push(KE(x.DYNAMAX_BAND));const S=KE(x.EVOLUTION_ITEM);S&&N.push(S);const T=KE(x.RARE_EVOLUTION_ITEM);T&&N.push(T);const i=KE(x.FORM_CHANGE_ITEM);i&&N.push(i);const o=KE(x.RARE_FORM_CHANGE_ITEM);o&&N.push(o),N.length>0&&I.push(N[De(N.length)]),lA({guaranteedModifierTypeOptions:I,fillRemaining:!1}),t.selectedOption.dialogue.selected=[{speaker:`${kA}:speaker`,text:`${kA}:option.2.selected_6`}]}}).withOptionPhase(async()=>{nA()}).build()).withOption(PA.newOptionWithMode(MA.DISABLED_OR_DEFAULT).withPrimaryPokemonRequirement(kN.Some(new HL(["BypassSpeedChanceModifier","ContactHeldItemTransferChanceModifier"],1),new oC(L.BUG,1))).withDialogue({buttonLabel:`${kA}:option.3.label`,buttonTooltip:`${kA}:option.3.tooltip`,disabledButtonTooltip:`${kA}:option.3.disabled_tooltip`,selected:[{text:`${kA}:option.3.selected`},{speaker:`${kA}:speaker`,text:`${kA}:option.3.selected_dialogue`}],secondOptionPrompt:`${kA}:option.3.select_prompt`}).withPreOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;return Ut(r(I=>I.getHeldItems().filter(S=>(S instanceof zS||S instanceof is||S instanceof DI&&S.type.moveType===L.BUG)&&S.isTransferable).map(S=>({label:S.type.name,handler:r(()=>(t.setDialogueToken("selectedItem",S.type.name),t.misc={chosenPokemon:I,chosenModifier:S},!0),"handler")})),"onPokemonSelected"),void 0,r(I=>I.getHeldItems().some(S=>S instanceof zS||S instanceof is||S instanceof DI&&S.type.moveType===L.BUG)?null:xE(`${kA}:option.3.invalid_selection`)??null,"selectableFilter"))}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter,E=t.misc.chosenModifier;t.misc.chosenPokemon.loseHeldItem(E,!1),s.updateModifiers(!0,!0);const I=KE(x.MYSTERY_ENCOUNTER_GOLDEN_BUG_NET);I.type.tier=p.ROGUE,lA({guaranteedModifierTypeOptions:[I],guaranteedModifierTypeFuncs:[x.REVIVER_SEED],fillRemaining:!1}),nA(!0)}).build()).withOutroDialogue([{text:`${kA}:outro`}]).build();function Xk(t){const E=yE[l.BUG_TYPE_SUPERFAN].clone();E.name=D.t("trainerNames:bug_type_superfan");let R=Zk.slice(0);R=lI(R);const I=R.pop();if(t<LL[0])E.setPartyMemberFunc(0,g([e.BEEDRILL],b.TRAINER,!0)).setPartyMemberFunc(1,g([e.BUTTERFREE],b.TRAINER,!0));else if(t<LL[1])E.setPartyTemplates(new pe(3,ce.AVERAGE)).setPartyMemberFunc(0,g([e.BEEDRILL],b.TRAINER,!0)).setPartyMemberFunc(1,g([e.BUTTERFREE],b.TRAINER,!0)).setPartyMemberFunc(2,g($M,b.TRAINER,!0));else if(t<LL[2])E.setPartyTemplates(new pe(4,ce.AVERAGE)).setPartyMemberFunc(0,g([e.BEEDRILL],b.TRAINER,!0)).setPartyMemberFunc(1,g([e.BUTTERFREE],b.TRAINER,!0)).setPartyMemberFunc(2,g($M,b.TRAINER,!0)).setPartyMemberFunc(3,g(AN,b.TRAINER,!0));else if(t<LL[3])E.setPartyTemplates(new pe(5,ce.AVERAGE)).setPartyMemberFunc(0,g([e.BEEDRILL],b.TRAINER,!0)).setPartyMemberFunc(1,g([e.BUTTERFREE],b.TRAINER,!0)).setPartyMemberFunc(2,g($M,b.TRAINER,!0)).setPartyMemberFunc(3,g(AN,b.TRAINER,!0)).setPartyMemberFunc(4,g(AN,b.TRAINER,!0));else if(t<LL[4])E.setPartyTemplates(new pe(5,ce.AVERAGE)).setPartyMemberFunc(0,g([e.BEEDRILL],b.TRAINER,!0,N=>{N.formIndex=1,N.generateAndPopulateMoveset(),N.generateName()})).setPartyMemberFunc(1,g([e.BUTTERFREE],b.TRAINER,!0,N=>{N.formIndex=1,N.generateAndPopulateMoveset(),N.generateName()})).setPartyMemberFunc(2,g(AN,b.TRAINER,!0)).setPartyMemberFunc(3,g(AN,b.TRAINER,!0)).setPartyMemberFunc(4,g([I.species],b.TRAINER,!0,N=>{Ne(I.formIndex)||(N.formIndex=I.formIndex,N.generateAndPopulateMoveset(),N.generateName())}));else if(t<LL[5]){R=lI(R);const N=R.pop();E.setPartyTemplates(new pe(5,ce.AVERAGE)).setPartyMemberFunc(0,g([e.BEEDRILL],b.TRAINER,!0,S=>{S.formIndex=1,S.generateAndPopulateMoveset(),S.generateName()})).setPartyMemberFunc(1,g([e.BUTTERFREE],b.TRAINER,!0,S=>{S.formIndex=1,S.generateAndPopulateMoveset(),S.generateName()})).setPartyMemberFunc(2,g(AN,b.TRAINER,!0)).setPartyMemberFunc(3,g([I.species],b.TRAINER,!0,S=>{Ne(I.formIndex)||(S.formIndex=I.formIndex,S.generateAndPopulateMoveset(),S.generateName())})).setPartyMemberFunc(4,g([N.species],b.TRAINER,!0,S=>{Ne(N.formIndex)||(S.formIndex=N.formIndex,S.generateAndPopulateMoveset(),S.generateName())}))}else if(t<LL[6])E.setPartyTemplates(new iE(new pe(4,ce.AVERAGE),new pe(1,ce.STRONG))).setPartyMemberFunc(0,g([e.BEEDRILL],b.TRAINER,!0,N=>{N.formIndex=1,N.generateAndPopulateMoveset(),N.generateName()})).setPartyMemberFunc(1,g([e.BUTTERFREE],b.TRAINER,!0,N=>{N.formIndex=1,N.generateAndPopulateMoveset(),N.generateName()})).setPartyMemberFunc(2,g(AN,b.TRAINER,!0)).setPartyMemberFunc(3,g([I.species],b.TRAINER,!0,N=>{Ne(I.formIndex)||(N.formIndex=I.formIndex,N.generateAndPopulateMoveset(),N.generateName())})).setPartyMemberFunc(4,g(v2,b.TRAINER,!0));else{R=lI(R);const N=R.pop();E.setPartyTemplates(new iE(new pe(4,ce.AVERAGE),new pe(1,ce.STRONG))).setPartyMemberFunc(0,g([e.BEEDRILL],b.TRAINER,!0,S=>{S.setBoss(!0,2),S.formIndex=1,S.generateAndPopulateMoveset(),S.generateName()})).setPartyMemberFunc(1,g([e.BUTTERFREE],b.TRAINER,!0,S=>{S.setBoss(!0,2),S.formIndex=1,S.generateAndPopulateMoveset(),S.generateName()})).setPartyMemberFunc(2,g([I.species],b.TRAINER,!0,S=>{Ne(I.formIndex)||(S.formIndex=I.formIndex,S.generateAndPopulateMoveset(),S.generateName())})).setPartyMemberFunc(3,g([N.species],b.TRAINER,!0,S=>{Ne(N.formIndex)||(S.formIndex=N.formIndex,S.generateAndPopulateMoveset(),S.generateName())})).setPartyMemberFunc(4,g(v2,b.TRAINER,!0))}return E}r(Xk,"getTrainerConfigForWave");function Qk(){return new Promise(async t=>{const E=s.currentBattle.mysteryEncounter.misc.moveTutorOptions;await rI(`${kA}:battle_won`,`${kA}:speaker`);const R=1,I=new yL({delayVisibility:!1,scale:R,onSide:!0,right:!0,x:1,y:-yL.getHeight(R,!0)-1,width:s.game.canvas.width/6-2});s.ui.add(I);const N=E.map(i=>({label:i.getName(),handler:r(()=>(I.active=!1,I.setVisible(!1),!0),"handler"),onHover:r(()=>{I.active=!0,I.show(Ke[i.moveId])},"onHover")})),S=r(()=>{I.active=!1,I.setVisible(!1)},"onHoverOverCancel"),T=await tZ(N,`${kA}:teach_move_prompt`,void 0,S);T||(I.active=!1,I.setVisible(!1)),T&&T.selectedOptionIndex<E.length&&s.unshiftPhase(new kI(T.selectedPokemonIndex,E[T.selectedOptionIndex].moveId)),t()})}r(Qk,"doBugTypeMoveTutor");const Lt="mysteryEncounters/funAndGames",Jk=NE.withEncounterType(ge.FUN_AND_GAMES).withEncounterTier(QA.GREAT).withSceneWaveRangeRequirement(...mE).withSceneRequirement(new zO(0,1.5)).withAutoHideIntroVisuals(!1).withSkipEnemyBattleTurns(!0).withSkipToFightInput(!0).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:"fun_and_games_game",fileRoot:"mystery-encounters",hasShadow:!1,x:0,y:6},{spriteKey:"fun_and_games_wobbuffet",fileRoot:"mystery-encounters",hasShadow:!0,x:-28,y:6,yShadow:6},{spriteKey:"fun_and_games_man",fileRoot:"mystery-encounters",hasShadow:!0,x:40,y:6,yShadow:6}]).withIntroDialogue([{speaker:`${Lt}:speaker`,text:`${Lt}:intro_dialogue`}]).setLocalizationKey(`${Lt}`).withTitle(`${Lt}:title`).withDescription(`${Lt}:description`).withQuery(`${Lt}:query`).withOnInit(()=>{const t=s.currentBattle.mysteryEncounter;return s.loadBgm("mystery_encounter_fun_and_games","mystery_encounter_fun_and_games.mp3"),t.setDialogueToken("wobbuffetName",de(e.WOBBUFFET).getName()),!0}).withOnVisualsStart(()=>(s.fadeAndSwitchBgm("mystery_encounter_fun_and_games"),!0)).withOption(PA.newOptionWithMode(MA.DISABLED_OR_DEFAULT).withSceneRequirement(new zO(0,1.5)).withDialogue({buttonLabel:`${Lt}:option.1.label`,buttonTooltip:`${Lt}:option.1.tooltip`,selected:[{text:`${Lt}:option.1.selected`}]}).withPreOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;return Ut(r(I=>{t.misc={playerPokemon:I}},"onPokemonSelected"),void 0,r(I=>fN(I,`${Lt}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;t.misc.turnsRemaining=3;const E=t.options[0].requirements[0].requiredMoney;return rO(-E,!0,!1),await fA(D.t("mysteryEncounterMessages:paid_money",{amount:E})),t.onTurnStart=qk,t.doContinueEncounter=L6,e9(),await $k(),await zk(),!0}).build()).withSimpleOption({buttonLabel:`${Lt}:option.2.label`,buttonTooltip:`${Lt}:option.2.tooltip`,selected:[{text:`${Lt}:option.2.selected`}]},async()=>(await uE(!0,!0),nA(!0),!0)).build();async function $k(){return new Promise(async t=>{const E=s.currentBattle.mysteryEncounter,R=E.misc.playerPokemon,I=s.getPlayerParty(),N=I.indexOf(R);if(N!==0){const U=I[0];I[0]=R,I[N]=U}let S;s.ui.showText(D.t("battle:playerGo",{pokemonName:Z(R)})),s.pbTray.hide(),s.trainer.setTexture(`trainer_${s.gameData.gender===YA.FEMALE?"f":"m"}_back_pb`),s.time.delayedCall(562,()=>{s.trainer.setFrame("2"),s.time.delayedCall(64,()=>{s.trainer.setFrame("3")})}),s.tweens.add({targets:s.trainer,x:-36,duration:1e3,onComplete:r(()=>s.trainer.setVisible(!1),"onComplete")}),s.time.delayedCall(750,()=>{S=jk(R)});const T=de(e.WOBBUFFET);s.currentBattle.enemyParty=[];const i=s.addEnemyPokemon(T,E.misc.playerPokemon.level,b.NONE,!1,!0);i.ivs=[0,0,0,0,0,0],i.setNature(be.MILD),i.setAlpha(0),i.setVisible(!1),i.calculateStats(),s.currentBattle.enemyParty[0]=i,s.gameData.setPokemonSeen(i,!0),await i.loadAssets();const o=setInterval(C,500);async function C(){S&&(clearInterval(o),await S,t())}r(C,"checkPlayerAnimationPromise")})}r($k,"summonPlayerPokemon");function L6(){return new Promise(async t=>{const E=s.getEnemyPokemon();if(!E||E.isFainted(!0)||E.hp===0){E&&(E.hideInfo(),E.leaveField()),uE(!0,!0),s.currentBattle.enemyParty=[],s.currentBattle.mysteryEncounter.doContinueEncounter=void 0,nA(!0),await fA(`${Lt}:ko`);const R=s.getWaveMoneyAmount(1.5);rO(-R,!0,!1)}t()})}r(L6,"handleLoseMinigame");function qk(){const t=s.currentBattle.mysteryEncounter,E=s.getEnemyPokemon();if(!E)return L6(),!0;if(t.misc.turnsRemaining<=0){const R=E.hp/E.getMaxHp();let I,N=!1;return R<.03?(lA({guaranteedModifierTypeFuncs:[x.MULTI_LENS],fillRemaining:!1}),I=`${Lt}:best_result`):R<.15?(lA({guaranteedModifierTypeFuncs:[x.SCOPE_LENS],fillRemaining:!1}),I=`${Lt}:great_result`):R<.33?(lA({guaranteedModifierTypeFuncs:[x.WIDE_LENS],fillRemaining:!1}),I=`${Lt}:good_result`):(N=!0,I=`${Lt}:bad_result`),E.hideInfo(),E.leaveField(),s.currentBattle.enemyParty=[],s.currentBattle.mysteryEncounter.doContinueEncounter=void 0,nA(N),YE(`${Lt}:end_game`),YE(I),!0}return t.misc.turnsRemaining<3&&YE(`${Lt}:charging_continue`),YE(`${Lt}:turn_remaining_${t.misc.turnsRemaining}`),t.misc.turnsRemaining--,!1}r(qk,"handleNextTurn");async function zk(){const t=s.getEnemyPokemon();s.add.existing(t),s.field.add(t);const E=s.getPlayerPokemon();E!=null&&E.isOnField()&&s.field.moveBelow(t,E),t.showInfo(),s.time.delayedCall(1e3,()=>{t.cry()}),t.resetSummonData(),s.currentBattle.mysteryEncounter.misc.wobbuffetHealth=t.hp}r(zk,"showWobbuffetHealthBar");function jk(t){return new Promise(E=>{const R=s.addFieldSprite(36,80,"pb",xI(t.pokeball));R.setVisible(!1),R.setOrigin(.5,.625),s.field.add(R),t.setFieldPosition(RR.CENTER,0);const I=t.getFieldPositionOffset();R.setVisible(!0),s.tweens.add({targets:R,duration:650,x:100+I[0]}),s.tweens.add({targets:R,duration:150,ease:"Cubic.easeOut",y:70+I[1],onComplete:r(()=>{s.tweens.add({targets:R,duration:500,ease:"Cubic.easeIn",angle:1440,y:132+I[1],onComplete:r(()=>{s.playSound("se/pb_rel"),R.destroy(),s.add.existing(t),s.field.add(t),Ic(t.x,t.y-16,t.pokeball),s.updateModifiers(!0),s.updateFieldScale(),t.showInfo(),t.playAnim(),t.setVisible(!0),t.getSprite().setVisible(!0),t.setScale(.5),t.tint(bI(t.pokeball)),t.untint(250,"Sine.easeIn"),s.updateFieldScale(),s.tweens.add({targets:t,duration:250,ease:"Sine.easeIn",scale:t.getSpriteScale(),onComplete:r(()=>{t.cry(t.getHpRatio()>.25?void 0:{rate:.85}),t.getSprite().clearTint(),t.resetSummonData(),s.time.delayedCall(1e3,()=>{t.isShiny()&&s.unshiftPhase(new xa(t.getBattlerIndex())),t.resetTurnData(),s.triggerPokemonFormChange(t,xt,!0),s.pushPhase(new vN(t.getBattlerIndex())),E()})},"onComplete")})},"onComplete")})},"onComplete")})})}r(jk,"summonPlayerPokemonAnimation");function e9(){var I,N,S;const t=(I=s.currentBattle.mysteryEncounter.introVisuals)==null?void 0:I.getSpriteAtIndex(0)[0],E=(N=s.currentBattle.mysteryEncounter.introVisuals)==null?void 0:N.getSpriteAtIndex(1)[0],R=(S=s.currentBattle.mysteryEncounter.introVisuals)==null?void 0:S.getSpriteAtIndex(2)[0];s.tweens.add({targets:R,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750}),s.tweens.add({targets:[E,t],x:"+=16",ease:"Sine.easeInOut",duration:750})}r(e9,"hideShowmanIntroSprite");const qt="mysteryEncounters/uncommonBreed",A9=NE.withEncounterType(ge.UNCOMMON_BREED).withEncounterTier(QA.COMMON).withSceneWaveRangeRequirement(...mE).withCatchAllowed(!0).withHideWildIntroMessage(!0).withFleeAllowed(!1).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${qt}:intro`}]).withOnInit(()=>{const t=s.currentBattle.mysteryEncounter,E=sc(!1,!0).level-2,R=Lc(E,!0,!0),I=R.getEggMoves();if(I){const o=De(4),C=I[o];t.misc={eggMove:C,pokemon:R},R.moveset.length<4?R.moveset.push(new Ye(C)):R.moveset[0]=new Ye(C)}else t.misc.pokemon=R;const N=s.currentBattle.waveIndex<50?[h.DEF,h.SPDEF,h.SPD]:[h.ATK,h.DEF,h.SPATK,h.SPDEF,h.SPD],S={pokemonConfigs:[{level:E,species:R.species,dataSource:new Zt(R),isBoss:!1,tags:[Y.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:r(o=>{YE(`${qt}:option.1.stat_boost`),s.unshiftPhase(new hA(o.getBattlerIndex(),!0,N,1))},"mysteryEncounterBattleEffects")}]};t.enemyPartyConfigs=[S];const{spriteKey:T,fileRoot:i}=cM(R);return t.spriteConfigs=[{spriteKey:T,fileRoot:i,hasShadow:!0,x:-5,repeat:!0,isPokemon:!0,isShiny:R.shiny,variant:R.variant}],t.setDialogueToken("enemyPokemon",R.getNameToRender()),s.loadSe("PRSFX- Spotlight2","battle_anims","PRSFX- Spotlight2.wav"),!0}).withOnVisualsStart(()=>{const t=s.currentBattle.mysteryEncounter,E=t.introVisuals.getSprites();return s.tweens.add({targets:E,duration:300,ease:"Cubic.easeOut",yoyo:!0,y:"-=20",loop:1,onComplete:r(()=>{var R;return(R=t.introVisuals)==null?void 0:R.playShinySparkles()},"onComplete")}),s.time.delayedCall(500,()=>s.playSound("battle_anims/PRSFX- Spotlight2")),!0}).setLocalizationKey(`${qt}`).withTitle(`${qt}:title`).withDescription(`${qt}:description`).withQuery(`${qt}:query`).withSimpleOption({buttonLabel:`${qt}:option.1.label`,buttonTooltip:`${qt}:option.1.tooltip`,selected:[{text:`${qt}:option.1.selected`}]},async()=>{const t=s.currentBattle.mysteryEncounter,E=t.misc.eggMove;if(!Ne(E)){const R=new Ye(E),N=R.getMove()instanceof we?FA.ENEMY:FA.PLAYER;t.startOfBattleEffects.push({sourceBattlerIndex:FA.ENEMY,targets:[N],move:R,ignorePp:!0})}lA({fillRemaining:!0}),await HE(t.enemyPartyConfigs[0])}).withOption(PA.newOptionWithMode(MA.DISABLED_OR_SPECIAL).withSceneRequirement(new rC("BerryModifier",4)).withDialogue({buttonLabel:`${qt}:option.2.label`,buttonTooltip:`${qt}:option.2.tooltip`,disabledButtonTooltip:`${qt}:option.2.disabled_tooltip`,selected:[{text:`${qt}:option.2.selected`}]}).withOptionPhase(async()=>{const t=s.findModifiers(I=>I instanceof XE);for(let I=0;I<4;I++){const N=De(t.length),S=t[N];S.stackCount--,S.stackCount===0&&(s.removeModifier(S),t.splice(N,1))}await s.updateModifiers(!0,!0);const E=s.currentBattle.mysteryEncounter,R=E.misc.pokemon;X2(R,E.misc.eggMove),await GS(R,null,Me.POKEBALL,!1),lA({fillRemaining:!0}),nA()}).build()).withOption(PA.newOptionWithMode(MA.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new wL(jv,!0)).withDialogue({buttonLabel:`${qt}:option.3.label`,buttonTooltip:`${qt}:option.3.tooltip`,disabledButtonTooltip:`${qt}:option.3.disabled_tooltip`,selected:[{text:`${qt}:option.3.selected`}]}).withOptionPhase(async()=>{var R,I;const t=s.currentBattle.mysteryEncounter,E=t.misc.pokemon;X2(E,t.misc.eggMove),E.ivs=E.ivs.map(N=>{const S=De(31);return S>N?S:N}),await GS(E,null,Me.POKEBALL,!1),(I=(R=t.selectedOption)==null?void 0:R.primaryPokemon)!=null&&I.id&&WR(t.selectedOption.primaryPokemon.id,E.getExpValue(),!1),lA({fillRemaining:!0}),nA()}).build()).build();function X2(t,E){const R=t.getEggMoves();if(R){let I=R[De(4)];for(;I===E;)I=R[De(4)];t.moveset.length<4?t.moveset.push(new Ye(I)):t.moveset[1]=new Ye(I)}}r(X2,"givePokemonExtraEggMove");const At="mysteryEncounters/globalTradeSystem",E9=512,t9=4096,R9={1:[e.RATTATA,e.PIDGEY,e.WEEDLE],2:[e.SENTRET,e.HOOTHOOT,e.LEDYBA],3:[e.POOCHYENA,e.ZIGZAGOON,e.TAILLOW],4:[e.BIDOOF,e.STARLY,e.KRICKETOT],5:[e.PATRAT,e.PURRLOIN,e.PIDOVE],6:[e.BUNNELBY,e.LITLEO,e.SCATTERBUG],7:[e.PIKIPEK,e.YUNGOOS,e.ROCKRUFF],8:[e.SKWOVET,e.WOOLOO,e.ROOKIDEE],9:[e.LECHONK,e.FIDOUGH,e.TAROUNTULA]},O9=[e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.ROARING_MOON,e.WALKING_WAKE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.IRON_VALIANT,e.IRON_LEAVES,e.IRON_BOULDER,e.IRON_CROWN],I9=NE.withEncounterType(ge.GLOBAL_TRADE_SYSTEM).withEncounterTier(QA.COMMON).withSceneWaveRangeRequirement(...mE).withAutoHideIntroVisuals(!1).withIntroSpriteConfigs([{spriteKey:"global_trade_system",fileRoot:"mystery-encounters",hasShadow:!0,disableAnimation:!0,x:3,y:5,yShadow:1}]).withIntroDialogue([{text:`${At}:intro`}]).setLocalizationKey(`${At}`).withTitle(`${At}:title`).withDescription(`${At}:description`).withQuery(`${At}:query`).withOnInit(()=>{const t=s.currentBattle.mysteryEncounter;let E;s.musicPreference===FT.GENFIVE?(E="mystery_encounter_gen_5_gts",s.loadBgm(E,`${E}.mp3`)):(E="mystery_encounter_gen_6_gts",s.loadBgm(E,`${E}.mp3`));const R=L9();return t.misc={tradeOptionsMap:R,bgmKey:E},!0}).withOnVisualsStart(()=>(s.fadeAndSwitchBgm(s.currentBattle.mysteryEncounter.misc.bgmKey),!0)).withOption(PA.newOptionWithMode(MA.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${At}:option.1.label`,buttonTooltip:`${At}:option.1.tooltip`,secondOptionPrompt:`${At}:option.1.trade_options_prompt`}).withPreOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;return Ut(r(R=>{const N=t.misc.tradeOptionsMap.get(R.id);return N?N.map(S=>({label:S.getNameToRender(),handler:r(()=>(t.setDialogueToken("tradedPokemon",R.getNameToRender()),t.setDialogueToken("received",S.getNameToRender()),t.misc.tradedPokemon=R,t.misc.receivedPokemon=S,!0),"handler"),onHover:r(()=>{const i=S.species.forms&&S.species.forms.length>S.formIndex?S.species.forms[S.formIndex].formName:null,o=`${D.t("pokemonInfoContainer:ability")} ${S.getAbility().name}${S.getGender()!==ye.GENDERLESS?`     |     ${D.t("pokemonInfoContainer:gender")} ${SS(S.getGender())}`:""}`,C=D.t("pokemonInfoContainer:nature")+" "+QO(S.getNature())+(i?`     |     ${D.t("pokemonInfoContainer:form")} ${i}`:"");fA(`${o}
${C}`,0,0,!1)},"onHover")})):[]},"onPokemonSelected"))}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter,E=t.misc.tradedPokemon,R=t.misc.receivedPokemon,I=E.getHeldItems().filter(i=>!(i instanceof EI)&&!(i instanceof Ns)),N=qM();t.setDialogueToken("tradeTrainerName",N.trim()),s.removePokemonFromPlayerParty(E,!1),R.passive=E.passive,R.pokeball=oE(4);const S=new Zt(R),T=s.addPlayerPokemon(R.species,R.level,S.abilityIndex,S.formIndex,S.gender,S.shiny,S.variant,S.ivs,S.nature,S);s.getPlayerParty().push(T),await T.loadAssets();for(const i of I)i.pokemonId=T.id,s.addModifier(i,!0,!1,!1,!0);await Q2(),await $2(E,T),await fA(`${At}:trade_received`,null,0,!0,4e3),s.playBgm(t.misc.bgmKey),await U2(T),await J2(),E.destroy(),nA(!0)}).build()).withOption(PA.newOptionWithMode(MA.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${At}:option.2.label`,buttonTooltip:`${At}:option.2.tooltip`}).withPreOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;return Ut(r(R=>{const I=N6(s.getPlayerParty().map(T=>T.species)),N=new pR(I,R.level,b.NONE,!1);if(!N.shiny){const T=new me(E9);vE.isEventActive()&&(T.value*=vE.getShinyMultiplier()),s.applyModifiers(as,!0,T);const i=Math.min(T.value,t9);N.trySetShinySeed(i,!1)}const S=N.species.ability2?2:1;if(N.species.abilityHidden&&N.abilityIndex<S){const T=new me(64);s.applyModifiers(MI,!0,T),!De(T.value)&&(N.abilityIndex=S)}if(!N.shiny&&(!N.species.abilityHidden||N.abilityIndex<S)){const T=N.getEggMoves();if(T){const i=T[De(3)];if(!N.moveset.some(o=>o.moveId===i))if(N.moveset.length<4)N.moveset.push(new Ye(i));else{const o=De(4);N.moveset[o]=new Ye(i)}}}t.setDialogueToken("tradedPokemon",R.getNameToRender()),t.setDialogueToken("received",N.getNameToRender()),t.misc.tradedPokemon=R,t.misc.receivedPokemon=N},"onPokemonSelected"))}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter,E=t.misc.tradedPokemon,R=t.misc.receivedPokemon,I=E.getHeldItems().filter(i=>!(i instanceof EI)&&!(i instanceof Ns)),N=qM();t.setDialogueToken("tradeTrainerName",N.trim()),s.removePokemonFromPlayerParty(E,!1),R.passive=E.passive,R.pokeball=oE(4);const S=new Zt(R),T=s.addPlayerPokemon(R.species,R.level,S.abilityIndex,S.formIndex,S.gender,S.shiny,S.variant,S.ivs,S.nature,S);s.getPlayerParty().push(T),await T.loadAssets();for(const i of I)i.pokemonId=T.id,s.addModifier(i,!0,!1,!1,!0);await Q2(),await $2(E,T),await fA(`${At}:trade_received`,null,0,!0,4e3),s.playBgm(t.misc.bgmKey),await U2(T),await J2(),E.destroy(),nA(!0)}).build()).withOption(PA.newOptionWithMode(MA.DEFAULT).withDialogue({buttonLabel:`${At}:option.3.label`,buttonTooltip:`${At}:option.3.tooltip`,secondOptionPrompt:`${At}:option.3.trade_options_prompt`}).withPreOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter;return Ut(r(I=>I.getHeldItems().filter(S=>S.isTransferable).map(S=>({label:S.type.name,handler:r(()=>(t.setDialogueToken("chosenItem",S.type.name),t.misc.chosenModifier=S,t.misc.chosenPokemon=I,!0),"handler")})),"onPokemonSelected"),void 0,r(I=>I.getHeldItems().filter(S=>S.isTransferable).length>0?null:xE(`${At}:option.3.invalid_selection`)??null,"selectableFilter"))}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter,E=t.misc.chosenModifier,R=s.getPlayerParty(),I=t.misc.chosenPokemon,N=E.type.withTierFromPool(lt.PLAYER,R);let S=N.tier??p.GREAT;N.id==="WHITE_HERB"?S=p.GREAT:N.id==="LUCKY_EGG"?S=p.ULTRA:N.id==="GOLDEN_EGG"&&(S=p.ROGUE),S<p.MASTER&&S++,jL(R,lt.PLAYER,0);let T=null;for(;!T||T.type.id.includes("TM_");)T=z1(1,R,[],{guaranteedModifierTiers:[S],allowLuckUpgrades:!1})[0];t.setDialogueToken("itemName",T.type.name),lA({guaranteedModifierTypeOptions:[T],fillRemaining:!1}),I.loseHeldItem(E,!1),await s.updateModifiers(!0,!0);const i=qM();t.setDialogueToken("tradeTrainerName",i.trim()),await fA(`${At}:item_trade_selected`),nA()}).build()).withSimpleOption({buttonLabel:`${At}:option.4.label`,buttonTooltip:`${At}:option.4.tooltip`,selected:[{text:`${At}:option.4.selected`}]},async()=>(nA(!0),!0)).build();function L9(){const t=new Map,E=s.getPlayerParty().map(R=>R.species);for(const R of s.getPlayerParty())if(R.species.legendary||R.species.subLegendary||R.species.mythical){const I=R.species.generation,N=R9[I].map(S=>{const T=de(S);return new pR(T,5,b.NONE,!1)});t.set(R.id,N)}else{const I=R.getSpeciesForm().getBaseStatTotal(),N=[];for(let S=0;S<3;S++){const T=N6(E,I);E.push(T),N.push(T)}t.set(R.id,N.map(S=>new pR(S,R.level,b.NONE,!1)))}return t}r(L9,"getPokemonTradeOptions");function N6(t,E){let R,I=9999,N=0;for(E&&(I=E+100,N=E-100);Ne(R);){let S=uI.filter(T=>{const i=T.legendary||T.subLegendary||T.mythical,o=T.getBaseStatTotal(),C=o>=N&&o<=I;return!i&&C&&!O9.includes(T.speciesId)});if((S==null?void 0:S.length)>20)for(S=lI(S),R=S.pop();Ne(R)||t.includes(R);)R=S.pop();else N-=10,I+=10}return R}r(N6,"generateTradeOption");function Q2(){return new Promise(t=>{const E=s.add.container(0,-s.game.canvas.height/6);E.setName("Trade Background");const R=s.add.rectangle(0,0,s.game.canvas.width/6,s.game.canvas.height/6,0);R.setName("Black Background"),R.setOrigin(0,0),R.setVisible(!1),E.add(R);const I=s.add.image(0,0,"default_bg");I.setName("Trade Background Image"),I.setOrigin(0,0),E.add(I),s.fieldUI.add(E),s.fieldUI.bringToTop(E),E.setVisible(!0),E.alpha=0,s.tweens.add({targets:E,alpha:1,duration:500,ease:"Sine.easeInOut",onComplete:r(()=>{t()},"onComplete")})})}r(Q2,"showTradeBackground");function J2(){return new Promise(t=>{const E=s.fieldUI.getByName("Trade Background");s.tweens.add({targets:E,alpha:0,duration:1e3,ease:"Sine.easeInOut",onComplete:r(()=>{s.fieldUI.remove(E,!0),t()},"onComplete")})})}r(J2,"hideTradeBackground");function $2(t,E){return new Promise(R=>{const I=s.fieldUI.getByName("Trade Background"),N=I.getByName("Trade Background Image");let S,T,i,o;const C=r(()=>{const c=s.addPokemonSprite(t,N.displayWidth/2,N.displayHeight/2,"pkmn__sub");return c.setPipeline(s.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),c},"getPokemonSprite");I.add(S=C()),I.add(T=C()),I.add(i=C()),I.add(o=C()),S.setAlpha(0),T.setAlpha(0),T.setTintFill(bI(t.pokeball)),i.setVisible(!1),o.setVisible(!1),o.setTintFill(bI(E.pokeball)),[S,T].map(c=>{const f=t.getSpriteKey(!0);try{c.play(f)}catch(d){console.error(`Failed to play animation for ${f}`,d)}c.setPipeline(s.spritePipeline,{tone:[0,0,0,0],hasShadow:!1,teraColor:iO(t.getTeraType()),isTerastallized:t.isTerastallized}),c.setPipelineData("ignoreTimeTint",!0),c.setPipelineData("spriteKey",t.getSpriteKey()),c.setPipelineData("shiny",t.shiny),c.setPipelineData("variant",t.variant),["spriteColors","fusionSpriteColors"].map(d=>{t.summonData.speciesForm&&(d+="Base"),c.pipelineData[d]=t.getSprite().pipelineData[d]})}),[i,o].map(c=>{const f=E.getSpriteKey(!0);try{c.play(f)}catch(d){console.error(`Failed to play animation for ${f}`,d)}c.setPipeline(s.spritePipeline,{tone:[0,0,0,0],hasShadow:!1,teraColor:iO(t.getTeraType()),isTerastallized:t.isTerastallized}),c.setPipelineData("ignoreTimeTint",!0),c.setPipelineData("spriteKey",E.getSpriteKey()),c.setPipelineData("shiny",E.shiny),c.setPipelineData("variant",E.variant),["spriteColors","fusionSpriteColors"].map(d=>{E.summonData.speciesForm&&(d+="Base"),c.pipelineData[d]=E.getSprite().pipelineData[d]})});const U=xI(t.pokeball),_=s.add.sprite(N.displayWidth/2,N.displayHeight/2,"pb",U);_.setVisible(!1),I.add(_);const G=xI(E.pokeball),H=s.add.sprite(N.displayWidth/2,N.displayHeight/2,"pb",G);H.setVisible(!1),I.add(H),s.tweens.add({targets:S,alpha:1,ease:"Cubic.easeInOut",duration:500,onComplete:r(async()=>{s.fadeOutBgm(1e3,!1),await fA(`${At}:pokemon_trade_selected`),t.cry(),s.playBgm("evolution"),await fA(`${At}:pokemon_trade_goodbye`),_.setAlpha(0),_.setVisible(!0),s.tweens.add({targets:_,alpha:1,ease:"Cubic.easeInOut",duration:250,onComplete:r(()=>{_.setTexture("pb",`${U}_opening`),s.time.delayedCall(17,()=>_.setTexture("pb",`${U}_open`)),s.playSound("se/pb_rel"),T.setVisible(!0),s.tweens.add({targets:[T,S],duration:500,ease:"Sine.easeIn",scale:.25,onComplete:r(()=>{S.setVisible(!1),_.setTexture("pb",`${U}_opening`),T.setVisible(!1),s.playSound("se/pb_catch"),s.time.delayedCall(17,()=>_.setTexture("pb",`${U}`)),s.tweens.add({targets:_,y:"+=10",duration:200,delay:250,ease:"Cubic.easeIn",onComplete:r(()=>{s.playSound("se/pb_bounce_1"),s.tweens.add({targets:_,y:"-=100",duration:200,delay:1e3,ease:"Cubic.easeInOut",onStart:r(()=>{s.playSound("se/pb_throw")},"onStart"),onComplete:r(async()=>{await N9(S,i),await s9(E,i,o,H,G),R()},"onComplete")})},"onComplete")})},"onComplete")})},"onComplete")})},"onComplete")})})}r($2,"doPokemonTradeSequence");function N9(t,E){return new Promise(R=>{const I=s.fieldUI.getByName("Trade Background"),N=I.getByName("Trade Background Image");I.getByName("Black Background").setVisible(!0),I.bringToTop(t),I.bringToTop(E),t.x=N.displayWidth/4,t.y=200,t.scale=1,t.setVisible(!0),E.x=N.displayWidth*3/4,E.y=-200,E.scale=1,E.setVisible(!0);const T=300,i=750,o=1e3;s.tweens.add({targets:N,alpha:0,ease:"Cubic.easeInOut",duration:T,onComplete:r(()=>{s.tweens.add({targets:[E,t],y:N.displayWidth/2-100,ease:"Cubic.easeInOut",duration:o*3,onComplete:r(()=>{s.tweens.add({targets:E,x:N.displayWidth/4,ease:"Cubic.easeInOut",duration:o/2,delay:i}),s.tweens.add({targets:t,x:N.displayWidth*3/4,ease:"Cubic.easeInOut",duration:o/2,delay:i,onComplete:r(()=>{s.tweens.add({targets:E,y:"+=200",ease:"Cubic.easeInOut",duration:o*2,delay:i}),s.tweens.add({targets:t,y:"-=200",ease:"Cubic.easeInOut",duration:o*2,delay:i,onComplete:r(()=>{s.tweens.add({targets:N,alpha:1,ease:"Cubic.easeInOut",duration:T,onComplete:r(()=>{R()},"onComplete")})},"onComplete")})},"onComplete")})},"onComplete")})},"onComplete")})})}r(N9,"doPokemonTradeFlyBySequence");function s9(t,E,R,I,N){return new Promise(S=>{const T=s.fieldUI.getByName("Trade Background"),i=T.getByName("Trade Background Image");E.setVisible(!1),E.x=i.displayWidth/2,E.y=i.displayHeight/2,R.setVisible(!1),R.x=i.displayWidth/2,R.y=i.displayHeight/2,I.setVisible(!0),I.x=i.displayWidth/2,I.y=i.displayHeight/2-100;let o;t.shiny&&(o=s.add.sprite(E.x,E.y,"shiny"),o.setVisible(!1),T.add(o));const C=1e3;s.playSound("se/pb_throw"),s.tweens.add({targets:I,y:"+=100",ease:"Cubic.easeInOut",duration:C,onComplete:r(()=>{s.playSound("se/pb_bounce_1"),s.time.delayedCall(100,()=>s.playSound("se/pb_bounce_1")),s.time.delayedCall(2e3,()=>{s.playSound("se/pb_rel"),s.fadeOutBgm(500,!1),t.cry(),R.scale=.25,R.alpha=1,E.setVisible(!0),E.scale=.25,R.alpha=1,R.setVisible(!0),I.setTexture("pb",`${N}_opening`),s.time.delayedCall(17,()=>I.setTexture("pb",`${N}_open`)),s.tweens.add({targets:E,duration:250,ease:"Sine.easeOut",scale:1}),s.tweens.add({targets:R,duration:250,ease:"Sine.easeOut",scale:1,alpha:0,onComplete:r(()=>{t.shiny&&s.time.delayedCall(500,()=>{HM(o,t.variant)}),I.destroy(),s.time.delayedCall(2e3,()=>S())},"onComplete")})})},"onComplete")})})}r(s9,"doTradeReceivedSequence");function qM(){const t=l.YOUNGSTER-l.ACE_TRAINER+1,E=`trainersCommon:${l[oE(t)+1]}`,R=D.exists(`${E}.MALE`)?oE(2)===0?".MALE":".FEMALE":"",I=SE(Object.keys(D.t(`${E}${R}`,{returnObjects:!0}))),S=D.t(`${E}${R}.${I}`).split(" & ");return S[oE(S.length)]}r(qM,"generateRandomTraderName");const mA="mysteryEncounters/theExpertPokemonBreeder",YO="trainerNames:expert_pokemon_breeder",VO=45,WO=60,vO=75,S9=20,Pd=class Pd{constructor(E,R){this.species=E,this.evolution=R}};r(Pd,"BreederSpeciesEvolution");let IE=Pd;const T9=[[e.MUNCHLAX,new IE(e.SNORLAX,WO)],[e.HAPPINY,new IE(e.CHANSEY,VO),new IE(e.BLISSEY,vO)],[e.MAGBY,new IE(e.MAGMAR,VO),new IE(e.MAGMORTAR,vO)],[e.ELEKID,new IE(e.ELECTABUZZ,VO),new IE(e.ELECTIVIRE,vO)],[e.RIOLU,new IE(e.LUCARIO,WO)],[e.BUDEW,new IE(e.ROSELIA,VO),new IE(e.ROSERADE,vO)],[e.TOXEL,new IE(e.TOXTRICITY,WO)],[e.MIME_JR,new IE(e.GALAR_MR_MIME,VO),new IE(e.MR_RIME,vO)]],n9=[[e.PICHU,new IE(e.PIKACHU,VO),new IE(e.RAICHU,vO)],[e.PICHU,new IE(e.PIKACHU,VO),new IE(e.ALOLA_RAICHU,vO)],[e.SMOOCHUM,new IE(e.JYNX,WO)],[e.TYROGUE,new IE(e.HITMONLEE,WO)],[e.TYROGUE,new IE(e.HITMONCHAN,WO)],[e.TYROGUE,new IE(e.HITMONTOP,WO)],[e.IGGLYBUFF,new IE(e.JIGGLYPUFF,VO),new IE(e.WIGGLYTUFF,vO)],[e.AZURILL,new IE(e.MARILL,VO),new IE(e.AZUMARILL,vO)],[e.WYNAUT,new IE(e.WOBBUFFET,WO)],[e.CHINGLING,new IE(e.CHIMECHO,WO)],[e.BONSLY,new IE(e.SUDOWOODO,WO)],[e.MANTYKE,new IE(e.MANTINE,WO)]],a9=NE.withEncounterType(ge.THE_EXPERT_POKEMON_BREEDER).withEncounterTier(QA.ULTRA).withSceneWaveRangeRequirement(25,180).withScenePartySizeRequirement(4,6,!0).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${mA}:intro`},{speaker:YO,text:`${mA}:intro_dialogue`}]).withOnInit(()=>{const t=s.currentBattle.mysteryEncounter,E=s.currentBattle.waveIndex;t.enemyPartyConfigs=[r9()];const R=E<VO?e.CLEFFA:E<vO?e.CLEFAIRY:e.CLEFABLE;t.spriteConfigs=[{spriteKey:R.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,x:14,y:-2,yShadow:-2},{spriteKey:"expert_pokemon_breeder",fileRoot:"trainer",hasShadow:!0,x:-14,y:4,yShadow:2}];let I=s.getPlayerParty().slice(0);I=I.filter(d=>d.isAllowedInBattle()).sort((d,w)=>d.friendship-w.friendship);const N=I[0],S=I[1],T=I[2];t.setDialogueToken("pokemon1Name",N.getNameToRender()),t.setDialogueToken("pokemon2Name",S.getNameToRender()),t.setDialogueToken("pokemon3Name",T.getNameToRender());const[i,o]=zM(N);let C=xE(`${mA}:option.1.tooltip_base`);if(o>0){const d=D.t(`${mA}:numEggs`,{count:o,rarity:D.t("egg:greatTier")});C+=D.t(`${mA}:eggs_tooltip`,{eggs:d}),t.setDialogueToken("pokemon1RareEggs",d)}if(i>0){const d=D.t(`${mA}:numEggs`,{count:i,rarity:D.t("egg:defaultTier")});C+=D.t(`${mA}:eggs_tooltip`,{eggs:d}),t.setDialogueToken("pokemon1CommonEggs",d)}t.options[0].dialogue.buttonTooltip=C;const[U,_]=zM(S);let G=xE(`${mA}:option.2.tooltip_base`);if(_>0){const d=D.t(`${mA}:numEggs`,{count:_,rarity:D.t("egg:greatTier")});G+=D.t(`${mA}:eggs_tooltip`,{eggs:d}),t.setDialogueToken("pokemon2RareEggs",d)}if(U>0){const d=D.t(`${mA}:numEggs`,{count:U,rarity:D.t("egg:defaultTier")});G+=D.t(`${mA}:eggs_tooltip`,{eggs:d}),t.setDialogueToken("pokemon2CommonEggs",d)}t.options[1].dialogue.buttonTooltip=G;const[H,c]=zM(T);let f=xE(`${mA}:option.3.tooltip_base`);if(c>0){const d=D.t(`${mA}:numEggs`,{count:c,rarity:D.t("egg:greatTier")});f+=D.t(`${mA}:eggs_tooltip`,{eggs:d}),t.setDialogueToken("pokemon3RareEggs",d)}if(H>0){const d=D.t(`${mA}:numEggs`,{count:H,rarity:D.t("egg:defaultTier")});f+=D.t(`${mA}:eggs_tooltip`,{eggs:d}),t.setDialogueToken("pokemon3CommonEggs",d)}return t.options[2].dialogue.buttonTooltip=f,t.misc={pokemon1:N,pokemon1CommonEggs:i,pokemon1RareEggs:o,pokemon2:S,pokemon2CommonEggs:U,pokemon2RareEggs:_,pokemon3:T,pokemon3CommonEggs:H,pokemon3RareEggs:c},!0}).setLocalizationKey(`${mA}`).withTitle(`${mA}:title`).withDescription(`${mA}:description`).withQuery(`${mA}:query`).withOption(PA.newOptionWithMode(MA.DEFAULT).withDialogue({buttonLabel:`${mA}:option.1.label`,selected:[{speaker:YO,text:`${mA}:option.selected`}]}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter,E=t.enemyPartyConfigs[0],{pokemon1:R,pokemon1CommonEggs:I,pokemon1RareEggs:N}=t.misc;t.misc.chosenPokemon=R,t.setDialogueToken("chosenPokemon",R.getNameToRender());const S=jM(I,N);lA({guaranteedModifierTypeFuncs:[x.SOOTHE_BELL],fillRemaining:!0},S,()=>EP()),eP(t,R),t.dialogue.outro=[{speaker:YO,text:`${mA}:outro`}],t.dialogueTokens.hasOwnProperty("pokemon1CommonEggs")&&t.dialogue.outro.push({text:D.t(`${mA}:gained_eggs`,{numEggs:t.dialogueTokens.pokemon1CommonEggs})}),t.dialogueTokens.hasOwnProperty("pokemon1RareEggs")&&t.dialogue.outro.push({text:D.t(`${mA}:gained_eggs`,{numEggs:t.dialogueTokens.pokemon1RareEggs})}),t.onGameOver=AP,await HE(E)}).build()).withOption(PA.newOptionWithMode(MA.DEFAULT).withDialogue({buttonLabel:`${mA}:option.2.label`,selected:[{speaker:YO,text:`${mA}:option.selected`}]}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter,E=t.enemyPartyConfigs[0],{pokemon2:R,pokemon2CommonEggs:I,pokemon2RareEggs:N}=t.misc;t.misc.chosenPokemon=R,t.setDialogueToken("chosenPokemon",R.getNameToRender());const S=jM(I,N);lA({guaranteedModifierTypeFuncs:[x.SOOTHE_BELL],fillRemaining:!0},S,()=>EP()),eP(t,R),t.dialogue.outro=[{speaker:YO,text:`${mA}:outro`}],t.dialogueTokens.hasOwnProperty("pokemon2CommonEggs")&&t.dialogue.outro.push({text:D.t(`${mA}:gained_eggs`,{numEggs:t.dialogueTokens.pokemon2CommonEggs})}),t.dialogueTokens.hasOwnProperty("pokemon2RareEggs")&&t.dialogue.outro.push({text:D.t(`${mA}:gained_eggs`,{numEggs:t.dialogueTokens.pokemon2RareEggs})}),t.onGameOver=AP,await HE(E)}).build()).withOption(PA.newOptionWithMode(MA.DEFAULT).withDialogue({buttonLabel:`${mA}:option.3.label`,selected:[{speaker:YO,text:`${mA}:option.selected`}]}).withOptionPhase(async()=>{const t=s.currentBattle.mysteryEncounter,E=t.enemyPartyConfigs[0],{pokemon3:R,pokemon3CommonEggs:I,pokemon3RareEggs:N}=t.misc;t.misc.chosenPokemon=R,t.setDialogueToken("chosenPokemon",R.getNameToRender());const S=jM(I,N);lA({guaranteedModifierTypeFuncs:[x.SOOTHE_BELL],fillRemaining:!0},S,()=>EP()),eP(t,R),t.dialogue.outro=[{speaker:YO,text:`${mA}:outro`}],t.dialogueTokens.hasOwnProperty("pokemon3CommonEggs")&&t.dialogue.outro.push({text:D.t(`${mA}:gained_eggs`,{numEggs:t.dialogueTokens.pokemon3CommonEggs})}),t.dialogueTokens.hasOwnProperty("pokemon3RareEggs")&&t.dialogue.outro.push({text:D.t(`${mA}:gained_eggs`,{numEggs:t.dialogueTokens.pokemon3RareEggs})}),t.onGameOver=AP,await HE(E)}).build()).withOutroDialogue([{speaker:YO,text:`${mA}:outro`}]).build();function r9(){const t=s.currentBattle.waveIndex,E=yE[l.EXPERT_POKEMON_BREEDER].clone();E.name=D.t(YO);const R=t<VO?e.CLEFFA:t<vO?e.CLEFAIRY:e.CLEFABLE,I={trainerType:l.EXPERT_POKEMON_BREEDER,pokemonConfigs:[{nickname:D.t(`${mA}:cleffa_1_nickname`,{speciesName:de(R).getName()}),species:de(R),isBoss:!1,abilityIndex:1,shiny:!1,nature:be.ADAMANT,moveSet:[A.FIRE_PUNCH,A.ICE_PUNCH,A.THUNDER_PUNCH,A.METEOR_MASH],ivs:[31,31,31,31,31,31],tera:L.FAIRY}]};if(s.arena.biomeType===n.SPACE)I.pokemonConfigs.push({nickname:D.t(`${mA}:cleffa_2_nickname`,{speciesName:de(R).getName()}),species:de(R),isBoss:!1,abilityIndex:1,shiny:!0,variant:1,nature:be.MODEST,moveSet:[A.MOONBLAST,A.MYSTICAL_FIRE,A.ICE_BEAM,A.THUNDERBOLT],ivs:[31,31,31,31,31,31]},{nickname:D.t(`${mA}:cleffa_3_nickname`,{speciesName:de(R).getName()}),species:de(R),isBoss:!1,abilityIndex:2,shiny:!0,variant:2,nature:be.BOLD,moveSet:[A.TRI_ATTACK,A.STORED_POWER,A.TAKE_HEART,A.MOONLIGHT],ivs:[31,31,31,31,31,31]});else{const N=q2(T9,t),S=q2(n9,t);I.pokemonConfigs.push({species:de(N),isBoss:!1,ivs:[31,31,31,31,31,31]},{species:de(S),isBoss:!1,ivs:[31,31,31,31,31,31]})}return I}r(r9,"getPartyConfig");function q2(t,E){const I=lI(t.slice(0)).pop().slice(0);let N=I.pop();for(;N instanceof IE&&N.evolution>E;)N=I.pop();return N instanceof IE?N.species:N}r(q2,"getSpeciesFromPool");function zM(t){const E=t.getSpeciesForm().getBaseStatTotal(),R=Math.min(Math.max(Math.floor((680-E)/20),1),18),I=t.species.getRootSpeciesId();let N=0;if(kE.hasOwnProperty(I)){const o=kE[I];N=Math.min(Math.max(Math.floor(7-o)*2,0),12)}let S=Math.min(N+R,30),T=Math.min(S,5);S-=T;const i=Math.floor(S/4);return T+=S%4,[T,i]}r(zM,"calculateEggRewardsForPokemon");function jM(t,E){const R=D.t(`${mA}:title`)+`:
`+D.t(YO),I=[];if(t>0)for(let N=0;N<t;N++)I.push({pulled:!1,sourceType:ot.EVENT,eggDescriptor:R,tier:K.COMMON});if(E>0)for(let N=0;N<E;N++)I.push({pulled:!1,sourceType:ot.EVENT,eggDescriptor:R,tier:K.RARE});return I}r(jM,"getEggOptions");function eP(t,E){const R=s.getPlayerParty(),I=R.indexOf(E);R[I]=R[0],R[0]=E,t.misc.originalParty=s.getPlayerParty().slice(1),t.misc.originalPartyHeldItems=t.misc.originalParty.map(N=>N.getHeldItems()),s.party=[E]}r(eP,"removePokemonFromPartyAndStoreHeldItems");function s6(){const t=s.currentBattle.mysteryEncounter;s.getPlayerParty().push(...t.misc.originalParty);const E=t.misc.originalPartyHeldItems;for(const R of E)for(const I of R)s.addModifier(I,!0,!1,!1,!0);s.updateModifiers(!0)}r(s6,"restorePartyAndHeldItems");function AP(){const t=s.currentBattle.mysteryEncounter;t.dialogue.outro=[{speaker:YO,text:`${mA}:outro_failed`}],s6();const E=t.misc.chosenPokemon;E.friendship=0,t.doEncounterRewards=void 0,t.misc.encounterFailed=!0,s.playBgm(s.arena.bgm),s.clearPhaseQueue(),s.clearPhaseQueueSplice();const R=s.getEnemyPokemon();return R&&(s.playSound("se/pb_rel"),R.hideInfo(),R.tint(bI(R.pokeball),1,250,"Sine.easeIn"),s.tweens.add({targets:R,duration:250,ease:"Sine.easeIn",scale:.5,onComplete:r(()=>{R.leaveField(!0,!0,!0)},"onComplete")})),s.time.delayedCall(250,()=>{var S,T;const I=(S=s.currentBattle.trainer)==null?void 0:S.getSprites(),N=(T=s.currentBattle.trainer)==null?void 0:T.getTintSprites();if(I&&N)for(let i=0;i<I.length;i++)I[i].setVisible(!0),N[i].setVisible(!0),I[i].clearTint(),N[i].clearTint();s.tweens.add({targets:s.currentBattle.trainer,x:"-=16",y:"+=16",alpha:1,ease:"Sine.easeInOut",duration:750})}),RZ(!0),!1}r(AP,"onGameOver");function EP(){const t=s.currentBattle.mysteryEncounter;t.misc.encounterFailed||(t.misc.chosenPokemon.addFriendship(S9),s6())}r(EP,"doPostEncounterCleanup");const i9=3,IQ=256,o9=3,LQ=12,NQ=15,C9=[n.SEA,n.SEABED,n.BADLANDS,n.DESERT,n.ICE_CAVE,n.VOLCANO,n.WASTELAND,n.ABYSS,n.SPACE,n.END],l9=[n.TOWN,n.PLAINS,n.GRASS,n.TALL_GRASS,n.METROPOLIS,n.FOREST,n.SWAMP,n.BEACH,n.LAKE,n.MOUNTAIN,n.CAVE,n.MEADOW,n.POWER_PLANT,n.GRAVEYARD,n.DOJO,n.FACTORY,n.RUINS,n.CONSTRUCTION_SITE,n.JUNGLE,n.FAIRY_CAVE,n.TEMPLE,n.SLUM,n.SNOWY_FOREST,n.ISLAND,n.LABORATORY],U9=[n.TOWN,n.PLAINS,n.GRASS,n.TALL_GRASS,n.METROPOLIS,n.FOREST,n.SWAMP,n.BEACH,n.LAKE,n.MOUNTAIN,n.BADLANDS,n.CAVE,n.DESERT,n.ICE_CAVE,n.MEADOW,n.POWER_PLANT,n.GRAVEYARD,n.DOJO,n.FACTORY,n.RUINS,n.CONSTRUCTION_SITE,n.JUNGLE,n.FAIRY_CAVE,n.TEMPLE,n.SLUM,n.SNOWY_FOREST,n.ISLAND,n.LABORATORY],D9=[n.TOWN,n.PLAINS,n.GRASS,n.TALL_GRASS,n.METROPOLIS,n.BEACH,n.LAKE,n.MEADOW,n.POWER_PLANT,n.GRAVEYARD,n.DOJO,n.FACTORY,n.CONSTRUCTION_SITE,n.SLUM,n.ISLAND],nE={},M9=[],P9=[ge.DANCING_LESSONS],G9=[ge.MYSTERIOUS_CHALLENGERS,ge.SHADY_VITAMIN_DEALER,ge.THE_POKEMON_SALESMAN,ge.THE_WINSTRATE_CHALLENGE,ge.THE_EXPERT_POKEMON_BREEDER],_9=[ge.DEPARTMENT_STORE_SALE,ge.PART_TIMER,ge.FUN_AND_GAMES,ge.GLOBAL_TRADE_SYSTEM],u9=[ge.FIGHT_OR_FLIGHT,ge.DARK_DEAL,ge.MYSTERIOUS_CHEST,ge.TRAINING_SESSION,ge.DELIBIRDY,ge.A_TRAINERS_TEST,ge.TRASH_TO_TREASURE,ge.BERRIES_ABOUND,ge.CLOWNING_AROUND,ge.WEIRD_DREAM,ge.TELEPORTING_HIJINKS,ge.BUG_TYPE_SUPERFAN,ge.UNCOMMON_BREED],CT=new Map([[n.TOWN,[]],[n.PLAINS,[ge.SLUMBERING_SNORLAX]],[n.GRASS,[ge.SLUMBERING_SNORLAX,ge.ABSOLUTE_AVARICE]],[n.TALL_GRASS,[ge.SLUMBERING_SNORLAX,ge.ABSOLUTE_AVARICE]],[n.METROPOLIS,[]],[n.FOREST,[ge.SAFARI_ZONE,ge.ABSOLUTE_AVARICE]],[n.SEA,[ge.LOST_AT_SEA]],[n.SWAMP,[ge.SAFARI_ZONE]],[n.BEACH,[]],[n.LAKE,[]],[n.SEABED,[]],[n.MOUNTAIN,[]],[n.BADLANDS,[ge.DANCING_LESSONS]],[n.CAVE,[ge.THE_STRONG_STUFF]],[n.DESERT,[ge.DANCING_LESSONS]],[n.ICE_CAVE,[]],[n.MEADOW,[]],[n.POWER_PLANT,[]],[n.VOLCANO,[ge.FIERY_FALLOUT,ge.DANCING_LESSONS]],[n.GRAVEYARD,[]],[n.DOJO,[]],[n.FACTORY,[]],[n.RUINS,[]],[n.WASTELAND,[ge.DANCING_LESSONS]],[n.ABYSS,[ge.DANCING_LESSONS]],[n.SPACE,[ge.THE_EXPERT_POKEMON_BREEDER]],[n.CONSTRUCTION_SITE,[]],[n.JUNGLE,[ge.SAFARI_ZONE]],[n.FAIRY_CAVE,[]],[n.TEMPLE,[]],[n.SLUM,[]],[n.SNOWY_FOREST,[]],[n.ISLAND,[]],[n.LABORATORY,[]]]);function H9(){nE[ge.MYSTERIOUS_CHALLENGERS]=uZ,nE[ge.MYSTERIOUS_CHEST]=HZ,nE[ge.DARK_DEAL]=CZ,nE[ge.FIGHT_OR_FLIGHT]=GZ,nE[ge.TRAINING_SESSION]=fZ,nE[ge.SLUMBERING_SNORLAX]=hZ,nE[ge.DEPARTMENT_STORE_SALE]=lZ,nE[ge.SHADY_VITAMIN_DEALER]=BZ,nE[ge.FIELD_TRIP]=UZ,nE[ge.SAFARI_ZONE]=KZ,nE[ge.LOST_AT_SEA]=_Z,nE[ge.FIERY_FALLOUT]=yZ,nE[ge.THE_STRONG_STUFF]=VZ,nE[ge.THE_POKEMON_SALESMAN]=bZ,nE[ge.AN_OFFER_YOU_CANT_REFUSE]=XZ,nE[ge.DELIBIRDY]=QZ,nE[ge.ABSOLUTE_AVARICE]=JZ,nE[ge.A_TRAINERS_TEST]=jZ,nE[ge.TRASH_TO_TREASURE]=ek,nE[ge.BERRIES_ABOUND]=tk,nE[ge.CLOWNING_AROUND]=Rk,nE[ge.PART_TIMER]=Lk,nE[ge.DANCING_LESSONS]=ik,nE[ge.WEIRD_DREAM]=uk,nE[ge.THE_WINSTRATE_CHALLENGE]=Yk,nE[ge.TELEPORTING_HIJINKS]=xk,nE[ge.BUG_TYPE_SUPERFAN]=kk,nE[ge.FUN_AND_GAMES]=Jk,nE[ge.UNCOMMON_BREED]=A9,nE[ge.GLOBAL_TRADE_SYSTEM]=I9,nE[ge.THE_EXPERT_POKEMON_BREEDER]=a9,M9.forEach(E=>{C9.forEach(R=>{const I=CT.get(R);I&&!I.includes(E)&&I.push(E)})}),P9.forEach(E=>{l9.forEach(R=>{const I=CT.get(R);I&&!I.includes(E)&&I.push(E)})}),G9.forEach(E=>{U9.forEach(R=>{const I=CT.get(R);I&&!I.includes(E)&&I.push(E)})}),_9.forEach(E=>{D9.forEach(R=>{const I=CT.get(R);I&&!I.includes(E)&&I.push(E)})});let t="";CT.forEach((E,R)=>{u9.forEach(I=>{E.includes(I)||E.push(I)}),t+=`${KM(R).toUpperCase()}: [${E.map(I=>ge[I].toString().toLowerCase()).sort().join(", ")}]
`})}r(H9,"initMysteryEncounters");const Gd=class Gd{constructor(E,R,I,N){this.type=E,this.tier=R,this.waveIndex=I,this.selectedOption=N??-1}};r(Gd,"SeenEncounterData");let t0=Gd;const _d=class _d{constructor(E){this.encounteredEvents=[],this.encounterSpawnChance=i9,this.queuedEncounters=[],Ne(E)||Object.assign(this,E),this.encounteredEvents=this.encounteredEvents??[],this.queuedEncounters=this.queuedEncounters??[]}};r(_d,"MysteryEncounterSaveData");let DC=_d;const iN=[e.BULBASAUR,e.CHARMANDER,e.SQUIRTLE,e.CHIKORITA,e.CYNDAQUIL,e.TOTODILE,e.TREECKO,e.TORCHIC,e.MUDKIP,e.TURTWIG,e.CHIMCHAR,e.PIPLUP,e.SNIVY,e.TEPIG,e.OSHAWOTT,e.CHESPIN,e.FENNEKIN,e.FROAKIE,e.ROWLET,e.LITTEN,e.POPPLIO,e.GROOKEY,e.SCORBUNNY,e.SOBBLE,e.SPRIGATITO,e.FUECOCO,e.QUAXLY],MC="x0i2O7WRiANTqPmZ";function Hs(t,E=0){switch(t){case vt.SYSTEM:return"data";case vt.SESSION:{let R="sessionData";return E&&(R+=E),R}case vt.SETTINGS:return"settings";case vt.TUTORIALS:return"tutorials";case vt.SEEN_DIALOGUES:return"seenDialogues";case vt.RUN_HISTORY:return"runHistoryData"}}r(Hs,"getDataTypeKey");function cs(t,E){return(E?R=>btoa(encodeURIComponent(R)):R=>eS.AES.encrypt(R,MC))(t)}r(cs,"encrypt");function EN(t,E){return(E?R=>decodeURIComponent(atob(R)):R=>eS.AES.decrypt(R,MC).toString(eS.enc.Utf8))(t)}r(EN,"decrypt");const LA={NON_SHINY:1n,SHINY:2n,MALE:4n,FEMALE:8n,DEFAULT_VARIANT:16n,VARIANT_2:32n,VARIANT_3:64n,DEFAULT_FORM:128n},fI={ABILITY_1:1,ABILITY_2:2,ABILITY_HIDDEN:4},S6="{}";let R0=S6;function sQ(){return JSON.parse(R0=localStorage.getItem(`starterPrefs_${ke==null?void 0:ke.username}`)||S6)}r(sQ,"loadStarterPreferences");function SQ(t){const E=JSON.stringify(t);E!==R0&&(localStorage.setItem(`starterPrefs_${ke==null?void 0:ke.username}`,E),R0=E)}r(SQ,"saveStarterPreferences");const _i={seenAttr:"$sa",caughtAttr:"$ca",natureAttr:"$na",seenCount:"$s",caughtCount:"$c",hatchedCount:"$hc",ivs:"$i",moveset:"$m",eggMoves:"$em",candyCount:"$x",friendship:"$f",abilityAttr:"$a",passiveAttr:"$pa",valueReduction:"$vr",classicWinCount:"$wc"},ud=class ud{constructor(){this.loadSettings(),this.loadGamepadSettings(),this.loadMappingConfigs(),this.trainerId=oE(65536),this.secretId=oE(65536),this.starterData={},this.gameStats=new EC,this.runHistory={},this.unlocks={[tR.ENDLESS_MODE]:!1,[tR.MINI_BLACK_HOLE]:!1,[tR.SPLICED_ENDLESS_MODE]:!1,[tR.EVIOLITE]:!1},this.achvUnlocks={},this.voucherUnlocks={},this.voucherCounts={[SI.REGULAR]:0,[SI.PLUS]:0,[SI.PREMIUM]:0,[SI.GOLDEN]:0},this.eggs=[],this.eggPity=[0,0,0,0],this.unlockPity=[0,0,0,0],this.initDexData(),this.initStarterData()}getSystemSaveData(){return{trainerId:this.trainerId,secretId:this.secretId,gender:this.gender,dexData:this.dexData,starterData:this.starterData,gameStats:this.gameStats,unlocks:this.unlocks,achvUnlocks:this.achvUnlocks,voucherUnlocks:this.voucherUnlocks,voucherCounts:this.voucherCounts,eggs:this.eggs.map(E=>new AC(E)),gameVersion:s.game.config.gameVersion,timestamp:new Date().getTime(),eggPity:this.eggPity.slice(0),unlockPity:this.unlockPity.slice(0)}}isUnlocked(E){return Ze.ITEM_UNLOCK_OVERRIDE.includes(E)?!0:this.unlocks[E]}saveSystem(){return new Promise(E=>{s.ui.savingIcon.show();const R=this.getSystemSaveData(),I=2147483648,N=JSON.stringify(R,(S,T)=>typeof T=="bigint"?T<=I?Number(T):T.toString():T);localStorage.setItem(`data_${ke==null?void 0:ke.username}`,cs(N,tO)),s.ui.savingIcon.hide(),E(!0)})}loadSystem(){return new Promise(E=>{if(console.log("Client Session:",xv),!localStorage.getItem(`data_${ke==null?void 0:ke.username}`))return E(!1);this.initSystem(EN(localStorage.getItem(`data_${ke==null?void 0:ke.username}`),tO)).then(E)})}initSystem(E,R){return new Promise(I=>{try{let N=this.parseSystemData(E);if(R){const i=this.parseSystemData(R);i.timestamp>N.timestamp?(console.debug("Use cached system"),N=i,E=R):this.clearLocalData()}console.debug(N),localStorage.setItem(`data_${ke==null?void 0:ke.username}`,cs(E,tO));const S=`runHistoryData_${ke==null?void 0:ke.username}`;if(localStorage.getItem(S)||localStorage.setItem(S,""),kb(N),this.trainerId=N.trainerId,this.secretId=N.secretId,this.gender=N.gender,this.saveSetting(Xe.Player_Gender,N.gender===YA.FEMALE?1:0),N.starterData)this.starterData=N.starterData;else{if(this.initStarterData(),N.starterMoveData){const o=N.starterMoveData;for(const C of Object.keys(o))this.starterData[C].moveset=o[C]}if(N.starterEggMoveData){const o=N.starterEggMoveData;for(const C of Object.keys(o))this.starterData[C].eggMoves=o[C]}this.migrateStarterAbilities(N,this.starterData);const i=Object.keys(this.starterData).map(o=>Number.parseInt(o));for(const o of i)this.starterData[o].candyCount+=N.dexData[o].caughtCount,this.starterData[o].candyCount+=N.dexData[o].hatchedCount*2,N.dexData[o].caughtAttr&LA.SHINY&&(this.starterData[o].candyCount+=4)}if(N.gameStats&&(this.gameStats=N.gameStats),N.unlocks)for(const i of Object.keys(N.unlocks))this.unlocks.hasOwnProperty(i)&&(this.unlocks[i]=N.unlocks[i]);if(N.achvUnlocks)for(const i of Object.keys(N.achvUnlocks))oA.hasOwnProperty(i)&&(this.achvUnlocks[i]=N.achvUnlocks[i]);if(N.voucherUnlocks)for(const i of Object.keys(N.voucherUnlocks))bO.hasOwnProperty(i)&&(this.voucherUnlocks[i]=N.voucherUnlocks[i]);N.voucherCounts&&gN(SI).forEach(i=>{const o=SI[i];this.voucherCounts[o]=N.voucherCounts[o]||0}),this.eggs=N.eggs?N.eggs.map(i=>i.toEgg()):[],this.eggPity=N.eggPity?N.eggPity.slice(0):[0,0,0,0],this.unlockPity=N.unlockPity?N.unlockPity.slice(0):[0,0,0,0],this.dexData=Object.assign(this.dexData,N.dexData),this.consolidateDexData(this.dexData),this.defaultDexData=null,I(!0)}catch(N){console.error(N),I(!1)}})}async getRunHistoryData(){if(!DM){const I=`runHistoryData_${ke==null?void 0:ke.username}`,N=localStorage.getItem(I);if(N){const S=N;return S?JSON.parse(EN(S,tO)):{}}return localStorage.setItem(`runHistoryData_${ke==null?void 0:ke.username}`,""),{}}const E=`runHistoryData_${ke==null?void 0:ke.username}`,R=localStorage.getItem(E);if(R){const I=R;return I?JSON.parse(EN(I,tO)):{}}return localStorage.setItem(`runHistoryData_${ke==null?void 0:ke.username}`,""),{}}async saveRunHistory(E,R){const I=await this.getRunHistoryData();let N=Object.keys(I).map(Number);for(;N.length>=ub;){const T=Math.min.apply(Math,N).toString();delete I[T],N=Object.keys(I).map(Number)}const S=E.timestamp.toString();return I[S]={entry:E,isVictory:R,isFavorite:!1},localStorage.setItem(`runHistoryData_${ke==null?void 0:ke.username}`,cs(JSON.stringify(I),tO)),!0}parseSystemData(E){return JSON.parse(E,(R,I)=>{if(R==="gameStats")return new EC(I);if(R==="eggs"){const N=[];I===null&&(I=[]);for(const S of I)N.push(new AC(S));return N}return R.endsWith("Attr")&&!["natureAttr","abilityAttr","passiveAttr"].includes(R)?BigInt(I??0):I})}convertSystemDataStr(E,R=!1){R||(E=E.replace(/\$pAttr/g,"$pa")),E=E.replace(/"trainerId":\d+/g,`"trainerId":${this.trainerId}`),E=E.replace(/"secretId":\d+/g,`"secretId":${this.secretId}`);const I=R?Object.keys(_i):Object.values(_i),N=R?Object.values(_i):Object.keys(_i);for(const S in I)E=E.replace(new RegExp(`${I[S].replace("$","\\$")}`,"g"),N[S]);return E}async verify(){return!0}clearLocalData(){}saveSetting(E,R){let I={};return localStorage.hasOwnProperty("settings")&&(I=JSON.parse(localStorage.getItem("settings"))),rG(E,R),I[E]=R,I.gameVersion=s.game.config.gameVersion,localStorage.setItem("settings",JSON.stringify(I)),!0}saveMappingConfigs(E,R){const I=E.toLowerCase();let N={};return localStorage.hasOwnProperty("mappingConfigs")&&(N=JSON.parse(localStorage.getItem("mappingConfigs"))),N[I]||(N[I]={}),N[I].custom=R.custom,localStorage.setItem("mappingConfigs",JSON.stringify(N)),!0}loadMappingConfigs(){if(!localStorage.hasOwnProperty("mappingConfigs"))return!1;const E=JSON.parse(localStorage.getItem("mappingConfigs"));for(const R of Object.keys(E))s.inputController.injectConfig(R,E[R]);return!0}resetMappingToFactory(){return localStorage.hasOwnProperty("mappingConfigs")?(localStorage.removeItem("mappingConfigs"),s.inputController.resetConfigs(),!0):!1}saveControlSetting(E,R,I,N,S){let T={};return localStorage.hasOwnProperty(R)&&(T=JSON.parse(localStorage.getItem(R))),E===iG.GAMEPAD?yM(I,S):E===iG.KEYBOARD&&Mb(I,S),Object.keys(N).forEach(i=>{i===I&&(T[i]=S)}),localStorage.setItem(R,JSON.stringify(T)),!0}loadSettings(){if(vx(),!localStorage.hasOwnProperty("settings"))return!1;const E=JSON.parse(localStorage.getItem("settings"));Qb(E);for(const R of Object.keys(E))rG(R,E[R]);return!0}loadGamepadSettings(){if(Object.values(Ac).map(R=>R).forEach(R=>yM(R,Gb[R])),!localStorage.hasOwnProperty("settingsGamepad"))return!1;const E=JSON.parse(localStorage.getItem("settingsGamepad"));for(const R of Object.keys(E))yM(R,E[R]);return!0}saveTutorialFlag(E,R){const I=Hs(vt.TUTORIALS);let N={};return localStorage.hasOwnProperty(I)&&(N=JSON.parse(localStorage.getItem(I))),Object.keys(PL).map(S=>S).forEach(S=>{const T=PL[S];T===E?N[T]=R:N[T]??(N[T]=!1)}),localStorage.setItem(I,JSON.stringify(N)),!0}getTutorialFlags(){const E=Hs(vt.TUTORIALS),R={};if(Object.values(PL).map(N=>N).forEach(N=>R[PL[N]]=!1),!localStorage.hasOwnProperty(E))return R;const I=JSON.parse(localStorage.getItem(E));for(const N of Object.keys(I))R[N]=I[N];return R}saveSeenDialogue(E){const R=Hs(vt.SEEN_DIALOGUES),I=this.getSeenDialogues();return I[E]=!0,localStorage.setItem(R,JSON.stringify(I)),console.log("Dialogue saved as seen:",E),!0}getSeenDialogues(){const E=Hs(vt.SEEN_DIALOGUES),R={};if(!localStorage.hasOwnProperty(E))return R;const I=JSON.parse(localStorage.getItem(E));for(const N of Object.keys(I))R[N]=I[N];return R}getSessionSaveData(){var E;return{seed:s.seed,playTime:s.sessionPlayTime,gameMode:s.gameMode.modeId,party:s.getPlayerParty().map(R=>new Zt(R)),enemyParty:s.getEnemyParty().map(R=>new Zt(R)),modifiers:s.findModifiers(()=>!0).map(R=>new cN(R,!0)),enemyModifiers:s.findModifiers(()=>!0,!1).map(R=>new cN(R,!1)),arena:new wa(s.arena),pokeballCounts:s.pokeballCounts,money:Math.floor(s.money),score:s.score,waveIndex:s.currentBattle.waveIndex,battleType:s.currentBattle.battleType,trainer:s.currentBattle.battleType===AA.TRAINER?new Va(s.currentBattle.trainer):null,gameVersion:s.game.config.gameVersion,timestamp:new Date().getTime(),challenges:s.gameMode.challenges.map(R=>new va(R)),mysteryEncounterType:((E=s.currentBattle.mysteryEncounter)==null?void 0:E.encounterType)??-1,mysteryEncounterSaveData:s.mysteryEncounterSaveData,playerFaints:s.arena.playerFaints}}getSession(E){return new Promise(async(R,I)=>{if(E<0)return R(null);const N=r(async S=>{try{const T=this.parseSessionData(S);R(T)}catch(T){I(T);return}},"handleSessionData");{const S=localStorage.getItem(`sessionData${E||""}_${ke==null?void 0:ke.username}`);if(S)await N(EN(S,tO));else return R(null)}})}loadSession(E,R){return new Promise(async(I,N)=>{try{const S=r(async T=>{var H,c,f,d,w;console.debug(T),s.gameMode=bP(T.gameMode||AE.CLASSIC),T.challenges&&(s.gameMode.challenges=T.challenges.map(m=>m.toChallenge())),s.setSeed(T.seed||s.game.config.seed[0]),s.resetSeed(),console.log("Seed:",s.seed),s.sessionPlayTime=T.playTime||0,s.lastSavePlayTime=0;const i=[],o=s.getPlayerParty();o.splice(0,o.length);for(const m of T.party){const W=m.toPokemon();W.setVisible(!1),i.push(W.loadAssets(!1)),o.push(W)}Object.keys(s.pokeballCounts).forEach(m=>{s.pokeballCounts[m]=T.pokeballCounts[m]||0}),Ze.POKEBALL_OVERRIDE.active&&(s.pokeballCounts=Ze.POKEBALL_OVERRIDE.pokeballs),s.money=Math.floor(T.money||0),s.updateMoneyText(),s.money>this.gameStats.highestMoney&&(this.gameStats.highestMoney=s.money),s.score=T.score,s.updateScoreText(),s.mysteryEncounterSaveData=new DC(T.mysteryEncounterSaveData),s.newArena(T.arena.biome,T.playerFaints);const C=T.battleType||0,U=T.trainer?yE[T.trainer.trainerType]:null,_=T.mysteryEncounterType!==-1?T.mysteryEncounterType:void 0,G=s.newBattle(T.waveIndex,C,T.trainer,C===AA.TRAINER?(U==null?void 0:U.doubleOnly)||((H=T.trainer)==null?void 0:H.variant)===xA.DOUBLE:T.enemyParty.length>1,_);if(G.enemyLevels=T.enemyParty.map(m=>m.level),s.arena.init(),T.enemyParty.forEach((m,W)=>{var $;const v=m.toPokemon(C,W,(($=T.trainer)==null?void 0:$.variant)===xA.DOUBLE);G.enemyParty[W]=v,C===AA.WILD&&G.seenEnemyPartyMemberIds.add(v.id),i.push(v.loadAssets())}),s.arena.weather=T.arena.weather,s.arena.eventTarget.dispatchEvent(new tC(X.NONE,(c=s.arena.weather)==null?void 0:c.weatherType,(f=s.arena.weather)==null?void 0:f.turnsLeft)),s.arena.terrain=T.arena.terrain,s.arena.eventTarget.dispatchEvent(new RC($e.NONE,(d=s.arena.terrain)==null?void 0:d.terrainType,(w=s.arena.terrain)==null?void 0:w.turnsLeft)),s.arena.playerTerasUsed=T.arena.playerTerasUsed,s.arena.tags=T.arena.tags,s.arena.tags)for(const m of s.arena.tags)if(m instanceof _O){const{tagType:W,side:v,turnCount:$,layers:Oe,maxLayers:q}=m;s.arena.eventTarget.dispatchEvent(new CS(W,v,$,Oe,q))}else s.arena.eventTarget.dispatchEvent(new CS(m.tagType,m.side,m.turnCount));s.modifiers.length&&(console.warn("Existing modifiers not cleared on session load, deleting..."),s.modifiers=[]);for(const m of T.modifiers){const W=m.toModifier(_o[m.className]);W&&s.addModifier(W,!0)}s.updateModifiers(!0);for(const m of T.enemyModifiers){const W=m.toModifier(_o[m.className]);W&&s.addEnemyModifier(W,!0)}s.updateModifiers(!1),Promise.all(i).then(()=>I(!0))},"initSessionFromData");R?S(R):this.getSession(E).then(T=>T&&S(T)).catch(T=>{N(T)})}catch(S){N(S);return}})}deleteSession(E){return new Promise(R=>(localStorage.removeItem(`sessionData${E||""}_${ke==null?void 0:ke.username}`),R(!0)))}offlineNewClear(){return new Promise(E=>{const R=this.getSessionSaveData(),I=R.seed;let N=[];return R.gameMode===AE.DAILY?localStorage.hasOwnProperty("daily")?(N=JSON.parse(atob(localStorage.getItem("daily"))),N.includes(I)?E(!1):(N.push(I),localStorage.setItem("daily",btoa(JSON.stringify(N))),E(!0))):(N.push(I),localStorage.setItem("daily",btoa(JSON.stringify(N))),E(!0)):E(!0)})}async tryClearSession(E){let R=[!1,!1];return localStorage.removeItem(`sessionData${E||""}_${ke==null?void 0:ke.username}`),R=[!0,!0],await t2(),R}parseSessionData(E){const R=JSON.parse(E,(I,N)=>{switch(I){case"party":case"enemyParty":{const S=[];for(const T of N??[])S.push(new Zt(T));return S}case"trainer":return N?new Va(N):null;case"modifiers":case"enemyModifiers":{const S=[];for(const T of N??[])(T==null?void 0:T.className)==="ExpBalanceModifier"&&(T.stackCount=Math.min(T.stackCount,4)),!(T instanceof RT&&(T.effect===J.FREEZE||T.effect===J.SLEEP))&&S.push(new cN(T,I==="modifiers"));return S}case"arena":return new wa(N);case"challenges":{const S=[];for(const T of N??[])S.push(new va(T));return S}case"mysteryEncounterType":return N;case"mysteryEncounterSaveData":return new DC(N);default:return N}});return Xb(R),R}saveAll(E=!1,R=!1,I=!1,N=!1){return new Promise(S=>{$6(!E,t2).then(T=>{if(T!==null&&!T)return S(!1);R&&s.ui.savingIcon.show();const i=I?this.parseSessionData(EN(localStorage.getItem(`sessionData${s.sessionSlotId?s.sessionSlotId:""}_${ke==null?void 0:ke.username}`),tO)):this.getSessionSaveData(),o=2147483648,C=N?this.parseSystemData(EN(localStorage.getItem(`data_${ke==null?void 0:ke.username}`),tO)):this.getSystemSaveData();s.sessionSlotId,localStorage.setItem(`data_${ke==null?void 0:ke.username}`,cs(JSON.stringify(C,(U,_)=>typeof _=="bigint"?_<=o?Number(_):_.toString():_),tO)),localStorage.setItem(`sessionData${s.sessionSlotId?s.sessionSlotId:""}_${ke==null?void 0:ke.username}`,cs(JSON.stringify(i),tO)),console.debug("Session data saved!"),this.verify().then(U=>{s.ui.savingIcon.hide(),S(U)})})})}tryExportData(E,R=0){return new Promise(I=>{const N=`${Hs(E,R)}_${ke==null?void 0:ke.username}`,S=r(T=>{switch(E){case vt.SYSTEM:T=this.convertSystemDataStr(T,!0);break}const i=eS.AES.encrypt(T,MC),o=new Blob([i.toString()],{type:"text/json"}),C=document.createElement("a");C.href=window.URL.createObjectURL(o),C.download=`${N}.prsv`,C.click(),C.remove()},"handleData");{const T=localStorage.getItem(N);T&&S(EN(T,tO)),I(!!T)}})}importData(E,R=0){const I=`${Hs(E,R)}_${ke==null?void 0:ke.username}`;let N=document.getElementById("saveFile");N&&N.remove(),N=document.createElement("input"),N.id="saveFile",N.type="file",N.accept=".prsv",N.style.display="none",N.addEventListener("change",S=>{const T=new FileReader;T.onload=(i=>o=>{var G,H;let C,U=eS.AES.decrypt((H=(G=o.target)==null?void 0:G.result)==null?void 0:H.toString(),MC).toString(eS.enc.Utf8),_=!1;try{switch(C=vt[E].toLowerCase(),E){case vt.SYSTEM:{U=this.convertSystemDataStr(U);const c=this.parseSystemData(U);_=!!c.dexData&&!!c.timestamp;break}case vt.SESSION:{const c=this.parseSessionData(U);_=!!c.party&&!!c.enemyParty&&!!c.timestamp;break}case vt.RUN_HISTORY:{const c=JSON.parse(U),f=Object.keys(c);C=D.t("menuUiHandler:RUN_HISTORY").toLowerCase(),f.forEach(d=>{const w=Object.keys(c[d]);_=["isFavorite","isVictory","entry"].every(m=>w.includes(m))&&w.length===3});break}case vt.SETTINGS:case vt.TUTORIALS:_=!0;break}}catch(c){console.error(c)}if(C=C,!_)return s.ui.showText(`Your ${C} data could not be loaded. It may be corrupted.`,null,()=>s.ui.showText("",0),KA(1500));s.ui.showText(`Your ${C} data will be overridden and the page will reload. Proceed?`,null,()=>{s.ui.setOverlayMode(Ce.CONFIRM,()=>{localStorage.setItem(I,cs(U,tO)),window.location.reload()},()=>{s.ui.revertMode(),s.ui.showText("",0)},!1,-98)})})(S.target.files[0]),T.readAsText(S.target.files[0])}),N.click()}initDexData(){const E={};for(const N of uI)E[N.speciesId]={seenAttr:0n,caughtAttr:0n,natureAttr:0,seenCount:0,caughtCount:0,hatchedCount:0,ivs:[0,0,0,0,0,0]};const R=LA.NON_SHINY|LA.MALE|LA.FEMALE|LA.DEFAULT_VARIANT|LA.DEFAULT_FORM,I=[];s.executeWithSeedOffset(()=>{const N=[be.HARDY,be.DOCILE,be.SERIOUS,be.BASHFUL,be.QUIRKY];for(let S=0;S<iN.length;S++)I.push(SE(N))},0,"default");for(let N=0;N<iN.length;N++){const S=E[iN[N]];S.seenAttr=R,S.caughtAttr=R,S.natureAttr=1<<I[N]+1;for(const T in S.ivs)S.ivs[T]=15}this.defaultDexData=Object.assign({},E),this.dexData=E}initStarterData(){const E={},R=Object.keys(kE).map(I=>Number.parseInt(I));for(const I of R)E[I]={moveset:null,eggMoves:0,candyCount:0,friendship:0,abilityAttr:iN.includes(I)?fI.ABILITY_1:0,passiveAttr:0,valueReduction:0,classicWinCount:0};this.starterData=E}setPokemonSeen(E,R=!0,I=!1){var S,T;if((S=s.currentBattle)!=null&&S.isBattleMysteryEncounter()&&((T=s.currentBattle.mysteryEncounter)!=null&&T.preventGameStatsUpdates))return;const N=this.dexData[E.species.speciesId];N.seenAttr|=E.getDexAttr(),R&&(N.seenCount++,this.gameStats.pokemonSeen++,!I&&E.species.subLegendary?this.gameStats.subLegendaryPokemonSeen++:!I&&E.species.legendary?this.gameStats.legendaryPokemonSeen++:!I&&E.species.mythical&&this.gameStats.mythicalPokemonSeen++,!I&&E.isShiny()&&this.gameStats.shinyPokemonSeen++)}setPokemonCaught(E,R=!0,I=!1,N=!0){const S=E.species.getRootSpeciesId();return!R&&!s.gameData.dexData[S].caughtAttr?Promise.resolve(!1):this.setPokemonSpeciesCaught(E,E.species,R,I,N)}setPokemonSpeciesCaught(E,R,I=!0,N=!1,S=!0){return new Promise(T=>{const i=this.dexData[R.speciesId],o=i.caughtAttr,C=E.formIndex,U=E.getDexAttr()&R.getFullUnlocksData();i.caughtAttr|=U;const _=E.getFormKey();C>0&&(E.species.speciesId===e.PIKACHU&&R.speciesId===e.PICHU&&(i.caughtAttr|=s.gameData.getFormAttr(0)),E.species.speciesId===e.URSHIFU?C===2?i.caughtAttr|=s.gameData.getFormAttr(0):C===3&&(i.caughtAttr|=s.gameData.getFormAttr(1)):E.species.speciesId===e.ZYGARDE?C===4?i.caughtAttr|=s.gameData.getFormAttr(2):C===5&&(i.caughtAttr|=s.gameData.getFormAttr(3)):(PI.hasOwnProperty(R.speciesId)?PI[R.speciesId]:[]).filter(m=>m.formKey===_).length>0&&(i.caughtAttr|=s.gameData.getFormAttr(0))),kE.hasOwnProperty(R.speciesId)&&(this.starterData[R.speciesId].abilityAttr|=E.abilityIndex!==1||E.species.ability2?1<<E.abilityIndex:fI.ABILITY_HIDDEN),i.natureAttr|=1<<E.nature+1;const G=CE.hasOwnProperty(R.speciesId),H=!o,c=(o&U)!==U;I&&(N?(i.hatchedCount++,this.gameStats.pokemonHatched++,E.species.subLegendary?this.gameStats.subLegendaryPokemonHatched++:E.species.legendary?this.gameStats.legendaryPokemonHatched++:E.species.mythical&&this.gameStats.mythicalPokemonHatched++,E.isShiny()&&this.gameStats.shinyPokemonHatched++):(i.caughtCount++,this.gameStats.pokemonCaught++,E.species.subLegendary?this.gameStats.subLegendaryPokemonCaught++:E.species.legendary?this.gameStats.legendaryPokemonCaught++:E.species.mythical&&this.gameStats.mythicalPokemonCaught++,E.isShiny()&&this.gameStats.shinyPokemonCaught++),!G&&(!s.gameMode.isDaily||c||N)&&this.addStarterCandy(R,1*(E.isShiny()?5*(1<<(E.variant??0)):1)*(N||E.isBoss()?2:1)));const f=r(d=>{if(G){const w=CE[R.speciesId];this.setPokemonSpeciesCaught(E,de(w),I,N,S).then(m=>T(m))}else T(d)},"checkPrevolution");if(H&&kE.hasOwnProperty(R.speciesId)){if(!S){T(!0);return}s.playSound("level_up_fanfare"),s.ui.showText(D.t("battle:addedAsAStarter",{pokemonName:R.name}),null,()=>f(!0),null,!0)}else f(!1)})}incrementRibbonCount(E,R=!1){const I=E.getRootSpeciesId(R);this.starterData[I].classicWinCount||(this.starterData[I].classicWinCount=0),this.starterData[I].classicWinCount||s.gameData.gameStats.ribbonsOwned++;const N=s.gameData.gameStats.ribbonsOwned;return N>=100&&s.validateAchv(oA._100_RIBBONS),N>=75&&s.validateAchv(oA._75_RIBBONS),N>=50&&s.validateAchv(oA._50_RIBBONS),N>=25&&s.validateAchv(oA._25_RIBBONS),N>=10&&s.validateAchv(oA._10_RIBBONS),++this.starterData[I].classicWinCount}addStarterCandy(E,R){const I=E.getRootSpeciesId();s.gameData.dexData[I].caughtAttr&&(s.candyBar.showStarterSpeciesCandy(E.speciesId,R),this.starterData[E.speciesId].candyCount+=R)}setEggMoveUnlocked(E,R,I=!0,N=!1){return new Promise(S=>{const T=E.speciesId;if(!NO.hasOwnProperty(T)||!NO[T][R]){S(!1);return}this.starterData[T].eggMoves||(this.starterData[T].eggMoves=0);const i=1<<R;if(this.starterData[T].eggMoves&i){S(!1);return}if(this.starterData[T].eggMoves|=i,!I){S(!0);return}s.playSound("level_up_fanfare");const o=Ke[NO[T][R]].name;let C=N?E.getName()+" ":"";C+=R===3?D.t("egg:rareEggMoveUnlock",{moveName:o}):D.t("egg:eggMoveUnlock",{moveName:o}),s.ui.showText(C,null,()=>S(!0),null,!0)})}isRootSpeciesUnlocked(E){var R;return!!((R=this.dexData[E.getRootSpeciesId()])!=null&&R.caughtAttr)}unlockSpeciesNature(E,R){if(!this.isRootSpeciesUnlocked(E))return;const I=r(N=>{this.dexData[N].natureAttr|=1<<R+1,CE.hasOwnProperty(N)&&I(CE[N])},"_unlockSpeciesNature");I(E.speciesId)}updateSpeciesDexIvs(E,R){let I;do{I=s.gameData.dexData[E];const N=I.ivs;for(let S=0;S<N.length;S++)N[S]<R[S]&&(N[S]=R[S]);N.filter(S=>S===31).length===6&&s.validateAchv(oA.PERFECT_IVS)}while(CE.hasOwnProperty(E)&&(E=CE[E]))}getSpeciesCount(E){const R=Object.keys(this.dexData);let I=0;for(const N of R)E(this.dexData[N])&&I++;return I}getStarterCount(E){const R=Object.keys(kE);let I=0;for(const N of R){const S=this.dexData[N];E(S)&&I++}return I}getSpeciesDefaultDexAttr(E,R=!1,I=!1){let N=0n;const T=this.dexData[E.speciesId].caughtAttr;return I?T&LA.SHINY?(N|=LA.SHINY,T&LA.VARIANT_3?N|=LA.VARIANT_3:T&LA.VARIANT_2?N|=LA.VARIANT_2:N|=LA.DEFAULT_VARIANT):(N|=LA.NON_SHINY,N|=LA.DEFAULT_VARIANT):(N|=T&LA.NON_SHINY||!(T&LA.SHINY)?LA.NON_SHINY:LA.SHINY,T&LA.DEFAULT_VARIANT?N|=LA.DEFAULT_VARIANT:T&LA.VARIANT_2?N|=LA.VARIANT_2:T&LA.VARIANT_3?N|=LA.VARIANT_3:N|=LA.DEFAULT_VARIANT),N|=T&LA.MALE||!(T&LA.FEMALE)?LA.MALE:LA.FEMALE,N|=this.getFormAttr(this.getFormIndex(T)),N}getSpeciesDexAttrProps(E,R){const I=!(R&LA.NON_SHINY),N=!(R&LA.MALE);let S=0;R&LA.DEFAULT_VARIANT?S=0:R&LA.VARIANT_2?S=1:R&LA.VARIANT_3&&(S=2);const T=this.getFormIndex(R);return{shiny:I,female:N,variant:S,formIndex:T}}getStarterSpeciesDefaultAbilityIndex(E){const R=this.starterData[E.speciesId].abilityAttr;return R&fI.ABILITY_1?0:!E.ability2||R&fI.ABILITY_2?1:2}getSpeciesDefaultNature(E){const R=this.dexData[E.speciesId];for(let I=0;I<25;I++)if(R.natureAttr&1<<I+1)return I;return 0}getSpeciesDefaultNatureAttr(E){return 1<<this.getSpeciesDefaultNature(E)}getDexAttrLuck(E){return E&LA.SHINY?E&LA.VARIANT_3?3:E&LA.VARIANT_2?2:1:0}getNaturesForAttr(E=0){const R=[];for(let I=0;I<25;I++)E&1<<I+1&&R.push(I);return R}getSpeciesStarterValue(E){let I=kE[E];const N=r(T=>(T>1?T--:T/=2,T),"decrementValue");for(let T=0;T<this.starterData[E].valueReduction;T++)I=N(I);const S=new me(I);return JR(PO.STARTER_COST,E,S),S.value}getFormIndex(E){if(!E||E<LA.DEFAULT_FORM)return 0;let R=0;for(;!(E&this.getFormAttr(R));)R++;return R}getFormAttr(E){return BigInt(1)<<BigInt(7+E)}consolidateDexData(E){var R;for(const I of Object.keys(E)){const N=E[I];N.hasOwnProperty("hatchedCount")||(N.hatchedCount=0),(!N.hasOwnProperty("natureAttr")||N.caughtAttr&&!N.natureAttr)&&(N.natureAttr=((R=this.defaultDexData)==null?void 0:R[I].natureAttr)||1<<oE(25,1))}}migrateStarterAbilities(E,R){const I=Object.keys(this.starterData).map(T=>Number.parseInt(T)),N=R||E.starterData,S=E.dexData;for(const T of I){const i=S[T].caughtAttr;N[T].abilityAttr=(i&LA.DEFAULT_VARIANT?fI.ABILITY_1:0)|(i&LA.VARIANT_2?fI.ABILITY_2:0)|(i&LA.VARIANT_3?fI.ABILITY_HIDDEN:0),i&&(i&LA.DEFAULT_VARIANT||(S[T].caughtAttr^=LA.DEFAULT_VARIANT),i&LA.VARIANT_2&&(S[T].caughtAttr^=LA.VARIANT_2),i&LA.VARIANT_3&&(S[T].caughtAttr^=LA.VARIANT_3))}}};r(ud,"GameData");let z2=ud;const V=-1,k=0,j2={[e.BULBASAUR]:[[1,A.TACKLE],[1,A.GROWL],[3,A.VINE_WHIP],[6,A.GROWTH],[9,A.LEECH_SEED],[12,A.RAZOR_LEAF],[15,A.POISON_POWDER],[15,A.SLEEP_POWDER],[18,A.SEED_BOMB],[21,A.TAKE_DOWN],[24,A.SWEET_SCENT],[27,A.SYNTHESIS],[30,A.WORRY_SEED],[33,A.POWER_WHIP],[36,A.SOLAR_BEAM]],[e.IVYSAUR]:[[1,A.VINE_WHIP],[1,A.TACKLE],[1,A.GROWL],[1,A.GROWTH],[9,A.LEECH_SEED],[12,A.RAZOR_LEAF],[15,A.POISON_POWDER],[15,A.SLEEP_POWDER],[20,A.SEED_BOMB],[25,A.TAKE_DOWN],[30,A.SWEET_SCENT],[35,A.SYNTHESIS],[40,A.WORRY_SEED],[45,A.POWER_WHIP],[50,A.SOLAR_BEAM]],[e.VENUSAUR]:[[k,A.PETAL_BLIZZARD],[1,A.GROWTH],[1,A.PETAL_DANCE],[1,A.VINE_WHIP],[1,A.TACKLE],[1,A.GROWL],[9,A.LEECH_SEED],[12,A.RAZOR_LEAF],[15,A.POISON_POWDER],[15,A.SLEEP_POWDER],[20,A.SEED_BOMB],[25,A.TAKE_DOWN],[30,A.SWEET_SCENT],[37,A.SYNTHESIS],[44,A.WORRY_SEED],[51,A.POWER_WHIP],[58,A.SOLAR_BEAM]],[e.CHARMANDER]:[[1,A.SCRATCH],[1,A.GROWL],[4,A.EMBER],[8,A.SMOKESCREEN],[12,A.DRAGON_BREATH],[17,A.FIRE_FANG],[20,A.SLASH],[24,A.FLAMETHROWER],[28,A.SCARY_FACE],[32,A.FIRE_SPIN],[36,A.INFERNO],[40,A.FLARE_BLITZ]],[e.CHARMELEON]:[[1,A.SCRATCH],[1,A.GROWL],[1,A.EMBER],[1,A.SMOKESCREEN],[1,A.FIRE_SPIN],[12,A.DRAGON_BREATH],[19,A.FIRE_FANG],[24,A.SLASH],[30,A.FLAMETHROWER],[37,A.SCARY_FACE],[48,A.INFERNO],[54,A.FLARE_BLITZ]],[e.CHARIZARD]:[[k,A.AIR_SLASH],[1,A.SCRATCH],[1,A.GROWL],[1,A.EMBER],[1,A.SMOKESCREEN],[1,A.HEAT_WAVE],[1,A.DRAGON_CLAW],[12,A.DRAGON_BREATH],[19,A.FIRE_FANG],[24,A.SLASH],[30,A.FLAMETHROWER],[39,A.SCARY_FACE],[46,A.FIRE_SPIN],[54,A.INFERNO],[62,A.FLARE_BLITZ]],[e.SQUIRTLE]:[[1,A.TACKLE],[1,A.TAIL_WHIP],[3,A.WATER_GUN],[6,A.WITHDRAW],[9,A.RAPID_SPIN],[12,A.BITE],[15,A.WATER_PULSE],[18,A.PROTECT],[21,A.RAIN_DANCE],[24,A.AQUA_TAIL],[27,A.SHELL_SMASH],[30,A.IRON_DEFENSE],[33,A.HYDRO_PUMP],[36,A.WAVE_CRASH]],[e.WARTORTLE]:[[1,A.TACKLE],[1,A.TAIL_WHIP],[1,A.WATER_GUN],[1,A.WITHDRAW],[9,A.RAPID_SPIN],[12,A.BITE],[15,A.WATER_PULSE],[20,A.PROTECT],[25,A.RAIN_DANCE],[30,A.AQUA_TAIL],[35,A.SHELL_SMASH],[40,A.IRON_DEFENSE],[45,A.HYDRO_PUMP],[50,A.WAVE_CRASH]],[e.BLASTOISE]:[[k,A.FLASH_CANNON],[1,A.TACKLE],[1,A.TAIL_WHIP],[1,A.WATER_GUN],[1,A.WITHDRAW],[9,A.RAPID_SPIN],[12,A.BITE],[15,A.WATER_PULSE],[20,A.PROTECT],[25,A.RAIN_DANCE],[30,A.AQUA_TAIL],[35,A.SHELL_SMASH],[42,A.IRON_DEFENSE],[49,A.HYDRO_PUMP],[56,A.WAVE_CRASH]],[e.CATERPIE]:[[1,A.TACKLE],[1,A.STRING_SHOT],[9,A.BUG_BITE]],[e.METAPOD]:[[k,A.HARDEN],[V,A.TACKLE],[V,A.STRING_SHOT],[V,A.BUG_BITE],[1,A.HARDEN]],[e.BUTTERFREE]:[[k,A.GUST],[1,A.TACKLE],[1,A.STRING_SHOT],[1,A.HARDEN],[1,A.BUG_BITE],[4,A.SUPERSONIC],[8,A.CONFUSION],[12,A.POISON_POWDER],[12,A.STUN_SPORE],[12,A.SLEEP_POWDER],[16,A.PSYBEAM],[20,A.WHIRLWIND],[24,A.AIR_SLASH],[28,A.SAFEGUARD],[32,A.BUG_BUZZ],[36,A.TAILWIND],[40,A.RAGE_POWDER],[44,A.QUIVER_DANCE]],[e.WEEDLE]:[[1,A.POISON_STING],[1,A.STRING_SHOT],[9,A.BUG_BITE]],[e.KAKUNA]:[[k,A.HARDEN],[V,A.POISON_STING],[V,A.STRING_SHOT],[V,A.BUG_BITE],[1,A.HARDEN]],[e.BEEDRILL]:[[k,A.TWINEEDLE],[1,A.POISON_STING],[1,A.STRING_SHOT],[1,A.HARDEN],[1,A.BUG_BITE],[1,A.FURY_ATTACK],[11,A.FURY_CUTTER],[14,A.RAGE],[17,A.PURSUIT],[20,A.FOCUS_ENERGY],[23,A.VENOSHOCK],[26,A.ASSURANCE],[29,A.TOXIC_SPIKES],[32,A.PIN_MISSILE],[35,A.POISON_JAB],[38,A.AGILITY],[41,A.ENDEAVOR],[44,A.FELL_STINGER]],[e.PIDGEY]:[[1,A.TACKLE],[5,A.SAND_ATTACK],[9,A.GUST],[13,A.QUICK_ATTACK],[17,A.WHIRLWIND],[21,A.TWISTER],[25,A.FEATHER_DANCE],[29,A.AGILITY],[33,A.WING_ATTACK],[37,A.ROOST],[41,A.TAILWIND],[45,A.AERIAL_ACE],[49,A.AIR_SLASH],[53,A.HURRICANE]],[e.PIDGEOTTO]:[[1,A.GUST],[1,A.SAND_ATTACK],[1,A.TACKLE],[5,A.SAND_ATTACK],[9,A.GUST],[13,A.QUICK_ATTACK],[17,A.WHIRLWIND],[22,A.TWISTER],[27,A.FEATHER_DANCE],[32,A.AGILITY],[37,A.WING_ATTACK],[42,A.ROOST],[47,A.TAILWIND],[52,A.AERIAL_ACE],[57,A.AIR_SLASH],[62,A.HURRICANE]],[e.PIDGEOT]:[[1,A.GUST],[1,A.SAND_ATTACK],[1,A.TACKLE],[1,A.QUICK_ATTACK],[1,A.HURRICANE],[5,A.SAND_ATTACK],[9,A.GUST],[17,A.WHIRLWIND],[22,A.TWISTER],[27,A.FEATHER_DANCE],[32,A.AGILITY],[38,A.WING_ATTACK],[44,A.ROOST],[50,A.TAILWIND],[56,A.AERIAL_ACE],[62,A.AIR_SLASH],[68,A.HURRICANE]],[e.RATTATA]:[[1,A.TACKLE],[1,A.TAIL_WHIP],[4,A.QUICK_ATTACK],[7,A.FOCUS_ENERGY],[10,A.BITE],[13,A.LASER_FOCUS],[16,A.TAKE_DOWN],[19,A.ASSURANCE],[22,A.CRUNCH],[25,A.SUCKER_PUNCH],[28,A.SUPER_FANG],[31,A.DOUBLE_EDGE],[34,A.ENDEAVOR]],[e.RATICATE]:[[k,A.SCARY_FACE],[1,A.SWORDS_DANCE],[1,A.TACKLE],[1,A.TAIL_WHIP],[1,A.QUICK_ATTACK],[1,A.FOCUS_ENERGY],[10,A.BITE],[13,A.LASER_FOCUS],[16,A.TAKE_DOWN],[19,A.ASSURANCE],[24,A.CRUNCH],[29,A.SUCKER_PUNCH],[34,A.SUPER_FANG],[39,A.DOUBLE_EDGE],[44,A.ENDEAVOR]],[e.SPEAROW]:[[1,A.GROWL],[1,A.PECK],[4,A.LEER],[8,A.ASSURANCE],[11,A.FURY_ATTACK],[15,A.AERIAL_ACE],[18,A.WING_ATTACK],[22,A.TAKE_DOWN],[25,A.AGILITY],[29,A.FOCUS_ENERGY],[32,A.ROOST],[36,A.DRILL_PECK]],[e.FEAROW]:[[1,A.LEER],[1,A.GROWL],[1,A.PECK],[1,A.ASSURANCE],[1,A.PLUCK],[1,A.DRILL_RUN],[1,A.PURSUIT],[4,A.LEER],[8,A.ASSURANCE],[11,A.FURY_ATTACK],[15,A.AERIAL_ACE],[18,A.WING_ATTACK],[23,A.TAKE_DOWN],[27,A.AGILITY],[32,A.FOCUS_ENERGY],[36,A.ROOST],[41,A.DRILL_PECK]],[e.EKANS]:[[1,A.WRAP],[1,A.LEER],[4,A.POISON_STING],[9,A.BITE],[12,A.GLARE],[17,A.SCREECH],[20,A.ACID],[25,A.SWALLOW],[25,A.STOCKPILE],[25,A.SPIT_UP],[28,A.ACID_SPRAY],[33,A.SLUDGE_BOMB],[36,A.GASTRO_ACID],[38,A.BELCH],[41,A.HAZE],[44,A.COIL],[49,A.GUNK_SHOT]],[e.ARBOK]:[[k,A.CRUNCH],[1,A.WRAP],[1,A.POISON_STING],[1,A.LEER],[1,A.BITE],[1,A.THUNDER_FANG],[1,A.ICE_FANG],[1,A.FIRE_FANG],[12,A.GLARE],[17,A.SCREECH],[20,A.ACID],[27,A.STOCKPILE],[27,A.SPIT_UP],[27,A.SWALLOW],[32,A.ACID_SPRAY],[39,A.SLUDGE_BOMB],[44,A.GASTRO_ACID],[48,A.BELCH],[51,A.HAZE],[56,A.COIL],[63,A.GUNK_SHOT]],[e.PIKACHU]:[[1,A.TAIL_WHIP],[1,A.GROWL],[1,A.THUNDER_SHOCK],[1,A.QUICK_ATTACK],[1,A.SWEET_KISS],[1,A.CHARM],[1,A.NASTY_PLOT],[1,A.PLAY_NICE],[1,A.NUZZLE],[4,A.THUNDER_WAVE],[8,A.DOUBLE_TEAM],[12,A.ELECTRO_BALL],[16,A.FEINT],[20,A.SPARK],[24,A.AGILITY],[28,A.IRON_TAIL],[32,A.DISCHARGE],[36,A.THUNDERBOLT],[40,A.LIGHT_SCREEN],[44,A.THUNDER],[48,A.PIKA_PAPOW]],[e.RAICHU]:[[k,A.ZIPPY_ZAP],[1,A.TAIL_WHIP],[1,A.GROWL],[1,A.THUNDER_SHOCK],[1,A.THUNDER_WAVE],[1,A.THUNDER],[1,A.AGILITY],[1,A.QUICK_ATTACK],[1,A.DOUBLE_TEAM],[1,A.LIGHT_SCREEN],[1,A.SWEET_KISS],[1,A.CHARM],[1,A.SPARK],[1,A.IRON_TAIL],[1,A.FEINT],[1,A.NASTY_PLOT],[1,A.DISCHARGE],[1,A.ELECTRO_BALL],[1,A.PLAY_NICE],[1,A.NUZZLE],[1,A.THUNDER_PUNCH],[5,A.THUNDERBOLT],[50,A.PIKA_PAPOW]],[e.SANDSHREW]:[[1,A.SCRATCH],[1,A.DEFENSE_CURL],[3,A.POISON_STING],[6,A.SAND_ATTACK],[9,A.ROLLOUT],[12,A.FURY_CUTTER],[15,A.RAPID_SPIN],[18,A.BULLDOZE],[21,A.SWIFT],[24,A.FURY_SWIPES],[27,A.AGILITY],[30,A.SLASH],[33,A.DIG],[36,A.GYRO_BALL],[39,A.SWORDS_DANCE],[42,A.SANDSTORM],[45,A.EARTHQUAKE]],[e.SANDSLASH]:[[1,A.SCRATCH],[1,A.SAND_ATTACK],[1,A.POISON_STING],[1,A.DEFENSE_CURL],[1,A.CRUSH_CLAW],[1,A.AGILITY],[9,A.ROLLOUT],[12,A.FURY_CUTTER],[15,A.RAPID_SPIN],[18,A.BULLDOZE],[21,A.SWIFT],[26,A.FURY_SWIPES],[31,A.SAND_TOMB],[36,A.SLASH],[41,A.DIG],[46,A.GYRO_BALL],[51,A.SWORDS_DANCE],[56,A.SANDSTORM],[61,A.EARTHQUAKE]],[e.NIDORAN_F]:[[1,A.POISON_STING],[1,A.GROWL],[5,A.SCRATCH],[10,A.TAIL_WHIP],[15,A.FURY_SWIPES],[20,A.TOXIC_SPIKES],[25,A.DOUBLE_KICK],[30,A.BITE],[35,A.HELPING_HAND],[40,A.TOXIC],[45,A.FLATTER],[50,A.CRUNCH],[55,A.EARTH_POWER]],[e.NIDORINA]:[[1,A.SCRATCH],[1,A.TAIL_WHIP],[1,A.POISON_STING],[1,A.GROWL],[15,A.FURY_SWIPES],[22,A.TOXIC_SPIKES],[29,A.DOUBLE_KICK],[36,A.BITE],[43,A.HELPING_HAND],[50,A.TOXIC],[57,A.FLATTER],[64,A.CRUNCH],[71,A.EARTH_POWER]],[e.NIDOQUEEN]:[[k,A.SUPERPOWER],[1,A.SLUDGE_WAVE],[1,A.SCRATCH],[1,A.DOUBLE_KICK],[1,A.TAIL_WHIP],[1,A.POISON_STING],[1,A.BITE],[1,A.GROWL],[1,A.TOXIC],[1,A.FURY_SWIPES],[1,A.CRUNCH],[1,A.FLATTER],[1,A.HELPING_HAND],[1,A.TOXIC_SPIKES],[1,A.EARTH_POWER]],[e.NIDORAN_M]:[[1,A.POISON_STING],[1,A.LEER],[5,A.PECK],[10,A.FOCUS_ENERGY],[15,A.FURY_ATTACK],[20,A.TOXIC_SPIKES],[25,A.DOUBLE_KICK],[30,A.HORN_ATTACK],[35,A.HELPING_HAND],[40,A.TOXIC],[45,A.FLATTER],[50,A.POISON_JAB],[55,A.EARTH_POWER]],[e.NIDORINO]:[[1,A.POISON_STING],[1,A.LEER],[1,A.PECK],[1,A.FOCUS_ENERGY],[15,A.FURY_ATTACK],[22,A.TOXIC_SPIKES],[29,A.DOUBLE_KICK],[36,A.HORN_ATTACK],[43,A.HELPING_HAND],[50,A.TOXIC],[57,A.FLATTER],[64,A.POISON_JAB],[71,A.EARTH_POWER]],[e.NIDOKING]:[[k,A.MEGAHORN],[1,A.SLUDGE_WAVE],[1,A.DOUBLE_KICK],[1,A.HORN_ATTACK],[1,A.FURY_ATTACK],[1,A.POISON_STING],[1,A.LEER],[1,A.PECK],[1,A.TOXIC],[1,A.FOCUS_ENERGY],[1,A.FLATTER],[1,A.HELPING_HAND],[1,A.TOXIC_SPIKES],[1,A.POISON_JAB],[1,A.EARTH_POWER]],[e.CLEFAIRY]:[[1,A.POUND],[1,A.GROWL],[1,A.SING],[1,A.DEFENSE_CURL],[1,A.SPLASH],[1,A.SWEET_KISS],[1,A.CHARM],[1,A.COPYCAT],[1,A.DISARMING_VOICE],[1,A.SPOTLIGHT],[4,A.STORED_POWER],[8,A.ENCORE],[12,A.AFTER_YOU],[16,A.LIFE_DEW],[20,A.METRONOME],[24,A.MOONLIGHT],[28,A.GRAVITY],[32,A.METEOR_MASH],[36,A.FOLLOW_ME],[40,A.COSMIC_POWER],[44,A.MOONBLAST],[48,A.HEALING_WISH]],[e.CLEFABLE]:[[V,A.POUND],[V,A.GROWL],[V,A.SING],[V,A.DEFENSE_CURL],[V,A.SPLASH],[V,A.SWEET_KISS],[V,A.CHARM],[V,A.ENCORE],[V,A.MOONLIGHT],[V,A.FOLLOW_ME],[V,A.COSMIC_POWER],[V,A.GRAVITY],[V,A.HEALING_WISH],[V,A.COPYCAT],[V,A.AFTER_YOU],[V,A.STORED_POWER],[V,A.DISARMING_VOICE],[1,A.METRONOME],[1,A.METEOR_MASH],[1,A.MOONBLAST],[1,A.LIFE_DEW],[1,A.SPOTLIGHT]],[e.VULPIX]:[[1,A.TAIL_WHIP],[1,A.EMBER],[4,A.DISABLE],[8,A.QUICK_ATTACK],[12,A.SPITE],[16,A.INCINERATE],[20,A.CONFUSE_RAY],[24,A.WILL_O_WISP],[28,A.EXTRASENSORY],[32,A.FLAMETHROWER],[36,A.IMPRISON],[40,A.FIRE_SPIN],[44,A.SAFEGUARD],[48,A.INFERNO],[52,A.FIRE_BLAST]],[e.NINETALES]:[[V,A.DISABLE],[V,A.EMBER],[V,A.FIRE_SPIN],[V,A.CONFUSE_RAY],[V,A.FIRE_BLAST],[V,A.SPITE],[V,A.SAFEGUARD],[V,A.WILL_O_WISP],[V,A.IMPRISON],[V,A.EXTRASENSORY],[V,A.NASTY_PLOT],[V,A.INCINERATE],[V,A.INFERNO],[1,A.FLAMETHROWER],[1,A.TAIL_WHIP],[1,A.QUICK_ATTACK]],[e.JIGGLYPUFF]:[[1,A.POUND],[1,A.SING],[1,A.DISABLE],[1,A.DEFENSE_CURL],[1,A.SWEET_KISS],[1,A.CHARM],[1,A.COPYCAT],[1,A.DISARMING_VOICE],[4,A.ECHOED_VOICE],[8,A.COVET],[12,A.STOCKPILE],[12,A.SPIT_UP],[12,A.SWALLOW],[16,A.ROUND],[20,A.REST],[24,A.BODY_SLAM],[28,A.MIMIC],[32,A.GYRO_BALL],[36,A.HYPER_VOICE],[44,A.DOUBLE_EDGE]],[e.WIGGLYTUFF]:[[1,A.POUND],[1,A.BODY_SLAM],[1,A.DOUBLE_EDGE],[1,A.SING],[1,A.DISABLE],[1,A.MIMIC],[1,A.DEFENSE_CURL],[1,A.REST],[1,A.SWEET_KISS],[1,A.CHARM],[1,A.STOCKPILE],[1,A.SPIT_UP],[1,A.SWALLOW],[1,A.HYPER_VOICE],[1,A.COVET],[1,A.GYRO_BALL],[1,A.COPYCAT],[1,A.ROUND],[1,A.ECHOED_VOICE],[1,A.DISARMING_VOICE],[5,A.PLAY_ROUGH]],[e.ZUBAT]:[[1,A.SUPERSONIC],[1,A.ABSORB],[5,A.ASTONISH],[10,A.MEAN_LOOK],[15,A.POISON_FANG],[20,A.QUICK_GUARD],[25,A.AIR_CUTTER],[30,A.BITE],[35,A.HAZE],[40,A.VENOSHOCK],[45,A.CONFUSE_RAY],[50,A.AIR_SLASH],[55,A.LEECH_LIFE]],[e.GOLBAT]:[[1,A.SUPERSONIC],[1,A.ABSORB],[1,A.SCREECH],[1,A.MEAN_LOOK],[1,A.ASTONISH],[15,A.POISON_FANG],[20,A.QUICK_GUARD],[27,A.AIR_CUTTER],[34,A.BITE],[41,A.HAZE],[48,A.VENOSHOCK],[55,A.CONFUSE_RAY],[62,A.AIR_SLASH],[69,A.LEECH_LIFE]],[e.ODDISH]:[[1,A.ABSORB],[1,A.GROWTH],[4,A.ACID],[8,A.SWEET_SCENT],[12,A.MEGA_DRAIN],[14,A.POISON_POWDER],[16,A.STUN_SPORE],[18,A.SLEEP_POWDER],[20,A.GIGA_DRAIN],[24,A.TOXIC],[28,A.MOONBLAST],[32,A.GRASSY_TERRAIN],[36,A.MOONLIGHT],[40,A.PETAL_DANCE]],[e.GLOOM]:[[1,A.ACID],[1,A.ABSORB],[1,A.GROWTH],[1,A.SWEET_SCENT],[12,A.MEGA_DRAIN],[14,A.POISON_POWDER],[16,A.STUN_SPORE],[18,A.SLEEP_POWDER],[20,A.GIGA_DRAIN],[26,A.TOXIC],[32,A.MOONBLAST],[38,A.GRASSY_TERRAIN],[44,A.MOONLIGHT],[50,A.PETAL_DANCE]],[e.VILEPLUME]:[[k,A.PETAL_BLIZZARD],[1,A.ACID],[1,A.ABSORB],[1,A.MEGA_DRAIN],[1,A.GROWTH],[1,A.POISON_POWDER],[1,A.STUN_SPORE],[1,A.SLEEP_POWDER],[1,A.PETAL_DANCE],[1,A.TOXIC],[1,A.GIGA_DRAIN],[1,A.SWEET_SCENT],[1,A.MOONLIGHT],[1,A.AROMATHERAPY],[1,A.GRASSY_TERRAIN],[1,A.MOONBLAST]],[e.PARAS]:[[1,A.SCRATCH],[6,A.POISON_POWDER],[6,A.STUN_SPORE],[11,A.ABSORB],[17,A.FURY_CUTTER],[22,A.SPORE],[27,A.SLASH],[33,A.GROWTH],[38,A.GIGA_DRAIN],[43,A.AROMATHERAPY],[49,A.RAGE_POWDER],[54,A.X_SCISSOR]],[e.PARASECT]:[[1,A.SCRATCH],[1,A.ABSORB],[1,A.POISON_POWDER],[1,A.STUN_SPORE],[1,A.CROSS_POISON],[6,A.POISON_POWDER],[6,A.STUN_SPORE],[11,A.ABSORB],[17,A.FURY_CUTTER],[22,A.SPORE],[29,A.SLASH],[37,A.GROWTH],[44,A.GIGA_DRAIN],[51,A.AROMATHERAPY],[59,A.RAGE_POWDER],[66,A.X_SCISSOR]],[e.VENONAT]:[[1,A.TACKLE],[1,A.DISABLE],[5,A.SUPERSONIC],[11,A.CONFUSION],[13,A.POISON_POWDER],[17,A.PSYBEAM],[23,A.STUN_SPORE],[25,A.BUG_BUZZ],[29,A.SLEEP_POWDER],[35,A.LEECH_LIFE],[37,A.ZEN_HEADBUTT],[41,A.POISON_FANG],[47,A.PSYCHIC]],[e.VENOMOTH]:[[k,A.AIR_SLASH],[1,A.TACKLE],[1,A.SUPERSONIC],[1,A.DISABLE],[1,A.QUIVER_DANCE],[1,A.SILVER_WIND],[11,A.CONFUSION],[13,A.POISON_POWDER],[17,A.PSYBEAM],[23,A.STUN_SPORE],[25,A.BUG_BUZZ],[29,A.SLEEP_POWDER],[37,A.LEECH_LIFE],[41,A.ZEN_HEADBUTT],[47,A.POISON_FANG],[55,A.PSYCHIC]],[e.DIGLETT]:[[1,A.SCRATCH],[1,A.SAND_ATTACK],[4,A.GROWL],[8,A.ASTONISH],[12,A.MUD_SLAP],[16,A.BULLDOZE],[20,A.SUCKER_PUNCH],[24,A.SLASH],[28,A.SANDSTORM],[32,A.DIG],[36,A.EARTH_POWER],[40,A.EARTHQUAKE],[44,A.FISSURE]],[e.DUGTRIO]:[[k,A.SAND_TOMB],[1,A.SCRATCH],[1,A.SAND_ATTACK],[1,A.GROWL],[1,A.TRI_ATTACK],[1,A.ASTONISH],[1,A.NIGHT_SLASH],[1,A.ROTOTILLER],[12,A.MUD_SLAP],[16,A.BULLDOZE],[20,A.SUCKER_PUNCH],[24,A.SLASH],[30,A.SANDSTORM],[36,A.DIG],[42,A.EARTH_POWER],[48,A.EARTHQUAKE],[54,A.FISSURE]],[e.MEOWTH]:[[1,A.GROWL],[1,A.FAKE_OUT],[4,A.FEINT],[8,A.SCRATCH],[12,A.PAY_DAY],[16,A.BITE],[20,A.TAUNT],[24,A.ASSURANCE],[29,A.FURY_SWIPES],[32,A.SCREECH],[36,A.SLASH],[40,A.NASTY_PLOT],[44,A.PLAY_ROUGH]],[e.PERSIAN]:[[k,A.POWER_GEM],[1,A.SCRATCH],[1,A.GROWL],[1,A.FAKE_OUT],[1,A.FEINT],[1,A.SWITCHEROO],[12,A.PAY_DAY],[16,A.BITE],[20,A.TAUNT],[24,A.ASSURANCE],[31,A.FURY_SWIPES],[36,A.SCREECH],[42,A.SLASH],[48,A.NASTY_PLOT],[54,A.PLAY_ROUGH]],[e.PSYDUCK]:[[1,A.SCRATCH],[1,A.TAIL_WHIP],[1,A.WATER_SPORT],[3,A.WATER_GUN],[6,A.CONFUSION],[9,A.FURY_SWIPES],[12,A.WATER_PULSE],[15,A.DISABLE],[18,A.ZEN_HEADBUTT],[21,A.SCREECH],[24,A.AQUA_TAIL],[27,A.SOAK],[30,A.PSYCH_UP],[34,A.AMNESIA],[39,A.WONDER_ROOM]],[e.GOLDUCK]:[[1,A.SCRATCH],[1,A.TAIL_WHIP],[1,A.WATER_GUN],[1,A.CONFUSION],[1,A.AQUA_JET],[1,A.WATER_SPORT],[1,A.ME_FIRST],[9,A.FURY_SWIPES],[12,A.WATER_PULSE],[15,A.DISABLE],[18,A.ZEN_HEADBUTT],[21,A.SCREECH],[24,A.AQUA_TAIL],[27,A.SOAK],[30,A.PSYCH_UP],[36,A.AMNESIA],[40,A.HYDRO_PUMP],[45,A.WONDER_ROOM]],[e.MANKEY]:[[1,A.SCRATCH],[1,A.LEER],[1,A.FOCUS_ENERGY],[1,A.COVET],[5,A.FURY_SWIPES],[8,A.LOW_KICK],[12,A.SEISMIC_TOSS],[17,A.SWAGGER],[22,A.CROSS_CHOP],[26,A.ASSURANCE],[29,A.THRASH],[33,A.CLOSE_COMBAT],[36,A.SCREECH],[40,A.STOMPING_TANTRUM],[44,A.OUTRAGE],[48,A.FINAL_GAMBIT]],[e.PRIMEAPE]:[[1,A.SCRATCH],[1,A.LEER],[1,A.FOCUS_ENERGY],[1,A.COVET],[1,A.FLING],[5,A.FURY_SWIPES],[8,A.LOW_KICK],[15,A.SEISMIC_TOSS],[17,A.SWAGGER],[22,A.CROSS_CHOP],[26,A.ASSURANCE],[30,A.THRASH],[35,A.RAGE_FIST],[39,A.CLOSE_COMBAT],[44,A.SCREECH],[48,A.STOMPING_TANTRUM],[53,A.OUTRAGE],[57,A.FINAL_GAMBIT]],[e.GROWLITHE]:[[1,A.LEER],[1,A.EMBER],[4,A.HOWL],[8,A.BITE],[12,A.FLAME_WHEEL],[16,A.HELPING_HAND],[20,A.AGILITY],[24,A.FIRE_FANG],[28,A.RETALIATE],[32,A.CRUNCH],[36,A.TAKE_DOWN],[40,A.FLAMETHROWER],[44,A.ROAR],[48,A.PLAY_ROUGH],[52,A.REVERSAL],[56,A.FLARE_BLITZ]],[e.ARCANINE]:[[k,A.EXTREME_SPEED],[1,A.TAKE_DOWN],[1,A.LEER],[1,A.BITE],[1,A.ROAR],[1,A.EMBER],[1,A.AGILITY],[1,A.FLAME_WHEEL],[1,A.REVERSAL],[1,A.CRUNCH],[1,A.HELPING_HAND],[1,A.ODOR_SLEUTH],[1,A.HOWL],[1,A.FLARE_BLITZ],[1,A.FIRE_FANG],[1,A.RETALIATE],[1,A.PLAY_ROUGH],[5,A.FLAMETHROWER]],[e.POLIWAG]:[[1,A.WATER_GUN],[1,A.HYPNOSIS],[1,A.WATER_SPORT],[6,A.POUND],[12,A.MUD_SHOT],[18,A.BUBBLE_BEAM],[24,A.RAIN_DANCE],[30,A.BODY_SLAM],[36,A.EARTH_POWER],[42,A.HYDRO_PUMP],[48,A.BELLY_DRUM],[54,A.DOUBLE_EDGE]],[e.POLIWHIRL]:[[1,A.POUND],[1,A.WATER_GUN],[1,A.HYPNOSIS],[1,A.WATER_SPORT],[1,A.MUD_SHOT],[18,A.BUBBLE_BEAM],[24,A.RAIN_DANCE],[32,A.BODY_SLAM],[40,A.EARTH_POWER],[48,A.HYDRO_PUMP],[56,A.BELLY_DRUM],[66,A.DOUBLE_EDGE]],[e.POLIWRATH]:[[k,A.DYNAMIC_PUNCH],[V,A.POUND],[V,A.DOUBLE_EDGE],[V,A.WATER_GUN],[V,A.HYDRO_PUMP],[V,A.BELLY_DRUM],[V,A.RAIN_DANCE],[V,A.MUD_SHOT],[V,A.EARTH_POWER],[V,A.CIRCLE_THROW],[1,A.BUBBLE_BEAM],[1,A.BODY_SLAM],[1,A.HYPNOSIS],[1,A.WATER_SPORT]],[e.ABRA]:[[1,A.TELEPORT],[1,A.CONFUSION]],[e.KADABRA]:[[k,A.PSYBEAM],[1,A.CONFUSION],[1,A.DISABLE],[1,A.TELEPORT],[1,A.KINESIS],[10,A.REFLECT],[15,A.ALLY_SWITCH],[20,A.PSYCHO_CUT],[25,A.RECOVER],[30,A.PSYSHOCK],[35,A.PSYCHIC],[40,A.ROLE_PLAY],[45,A.FUTURE_SIGHT],[50,A.CALM_MIND]],[e.ALAKAZAM]:[[1,A.DISABLE],[1,A.CONFUSION],[1,A.TELEPORT],[1,A.KINESIS],[5,A.PSYBEAM],[10,A.REFLECT],[15,A.ALLY_SWITCH],[20,A.PSYCHO_CUT],[25,A.RECOVER],[30,A.PSYSHOCK],[35,A.PSYCHIC],[40,A.ROLE_PLAY],[45,A.FUTURE_SIGHT],[50,A.CALM_MIND]],[e.MACHOP]:[[1,A.LEER],[1,A.LOW_KICK],[4,A.FOCUS_ENERGY],[8,A.REVENGE],[12,A.LOW_SWEEP],[16,A.KNOCK_OFF],[20,A.SCARY_FACE],[24,A.VITAL_THROW],[29,A.STRENGTH],[32,A.DUAL_CHOP],[36,A.BULK_UP],[40,A.SEISMIC_TOSS],[44,A.DYNAMIC_PUNCH],[48,A.CROSS_CHOP],[52,A.DOUBLE_EDGE]],[e.MACHOKE]:[[1,A.LEER],[1,A.LOW_KICK],[1,A.FOCUS_ENERGY],[1,A.REVENGE],[1,A.KARATE_CHOP],[12,A.LOW_SWEEP],[16,A.KNOCK_OFF],[20,A.SCARY_FACE],[24,A.VITAL_THROW],[31,A.STRENGTH],[36,A.DUAL_CHOP],[42,A.BULK_UP],[48,A.SEISMIC_TOSS],[54,A.DYNAMIC_PUNCH],[60,A.CROSS_CHOP],[66,A.DOUBLE_EDGE]],[e.MACHAMP]:[[1,A.LEER],[1,A.LOW_KICK],[1,A.FOCUS_ENERGY],[1,A.REVENGE],[1,A.WIDE_GUARD],[1,A.KARATE_CHOP],[12,A.LOW_SWEEP],[16,A.KNOCK_OFF],[20,A.SCARY_FACE],[24,A.VITAL_THROW],[31,A.STRENGTH],[36,A.DUAL_CHOP],[42,A.BULK_UP],[48,A.SEISMIC_TOSS],[54,A.DYNAMIC_PUNCH],[60,A.CROSS_CHOP],[66,A.DOUBLE_EDGE]],[e.BELLSPROUT]:[[1,A.VINE_WHIP],[7,A.GROWTH],[11,A.WRAP],[13,A.SLEEP_POWDER],[15,A.POISON_POWDER],[17,A.STUN_SPORE],[23,A.ACID],[27,A.KNOCK_OFF],[29,A.SWEET_SCENT],[35,A.GASTRO_ACID],[39,A.RAZOR_LEAF],[41,A.POISON_JAB],[47,A.SLAM],[52,A.POWER_WHIP]],[e.WEEPINBELL]:[[1,A.VINE_WHIP],[1,A.WRAP],[1,A.GROWTH],[13,A.SLEEP_POWDER],[15,A.POISON_POWDER],[17,A.STUN_SPORE],[24,A.ACID],[29,A.KNOCK_OFF],[32,A.SWEET_SCENT],[39,A.GASTRO_ACID],[44,A.RAZOR_LEAF],[47,A.POISON_JAB],[54,A.SLAM],[58,A.POWER_WHIP]],[e.VICTREEBEL]:[[k,A.LEAF_STORM],[V,A.STOCKPILE],[V,A.SWALLOW],[V,A.SPIT_UP],[V,A.WRAP],[V,A.GROWTH],[V,A.ACID],[V,A.KNOCK_OFF],[V,A.GASTRO_ACID],[V,A.POISON_JAB],[V,A.SLAM],[V,A.POWER_WHIP],[1,A.VINE_WHIP],[1,A.SLEEP_POWDER],[1,A.POISON_POWDER],[1,A.STUN_SPORE],[1,A.SWEET_SCENT],[1,A.RAZOR_LEAF],[44,A.LEAF_BLADE]],[e.TENTACOOL]:[[1,A.POISON_STING],[1,A.WATER_GUN],[4,A.ACID],[8,A.WRAP],[12,A.SUPERSONIC],[16,A.WATER_PULSE],[20,A.SCREECH],[24,A.BUBBLE_BEAM],[28,A.HEX],[32,A.ACID_ARMOR],[36,A.POISON_JAB],[40,A.SURF],[44,A.SLUDGE_WAVE],[48,A.HYDRO_PUMP]],[e.TENTACRUEL]:[[1,A.WRAP],[1,A.POISON_STING],[1,A.ACID],[1,A.WATER_GUN],[1,A.REFLECT_TYPE],[1,A.WRING_OUT],[12,A.SUPERSONIC],[16,A.WATER_PULSE],[20,A.SCREECH],[24,A.BUBBLE_BEAM],[28,A.HEX],[34,A.ACID_ARMOR],[40,A.POISON_JAB],[46,A.SURF],[52,A.SLUDGE_WAVE],[58,A.HYDRO_PUMP]],[e.GEODUDE]:[[1,A.TACKLE],[1,A.DEFENSE_CURL],[6,A.ROCK_POLISH],[10,A.ROLLOUT],[12,A.BULLDOZE],[16,A.ROCK_THROW],[18,A.SMACK_DOWN],[24,A.SELF_DESTRUCT],[28,A.STEALTH_ROCK],[30,A.ROCK_BLAST],[34,A.EARTHQUAKE],[36,A.EXPLOSION],[40,A.DOUBLE_EDGE],[42,A.STONE_EDGE]],[e.GRAVELER]:[[1,A.TACKLE],[1,A.DEFENSE_CURL],[1,A.ROCK_POLISH],[10,A.ROLLOUT],[12,A.BULLDOZE],[16,A.ROCK_THROW],[18,A.SMACK_DOWN],[24,A.SELF_DESTRUCT],[30,A.STEALTH_ROCK],[34,A.ROCK_BLAST],[40,A.EARTHQUAKE],[44,A.EXPLOSION],[50,A.DOUBLE_EDGE],[54,A.STONE_EDGE]],[e.GOLEM]:[[1,A.TACKLE],[1,A.DEFENSE_CURL],[1,A.ROCK_POLISH],[1,A.ROLLOUT],[1,A.HEAVY_SLAM],[16,A.ROCK_THROW],[18,A.SMACK_DOWN],[22,A.BULLDOZE],[24,A.SELF_DESTRUCT],[30,A.STEALTH_ROCK],[34,A.ROCK_BLAST],[40,A.EARTHQUAKE],[44,A.EXPLOSION],[50,A.DOUBLE_EDGE],[54,A.STONE_EDGE]],[e.PONYTA]:[[1,A.TACKLE],[1,A.GROWL],[5,A.TAIL_WHIP],[10,A.EMBER],[15,A.FLAME_CHARGE],[20,A.AGILITY],[25,A.FLAME_WHEEL],[30,A.STOMP],[35,A.FIRE_SPIN],[41,A.TAKE_DOWN],[45,A.INFERNO],[50,A.FIRE_BLAST],[55,A.FLARE_BLITZ]],[e.RAPIDASH]:[[k,A.SMART_STRIKE],[1,A.TACKLE],[1,A.TAIL_WHIP],[1,A.GROWL],[1,A.EMBER],[1,A.QUICK_ATTACK],[1,A.MEGAHORN],[1,A.POISON_JAB],[15,A.FLAME_CHARGE],[20,A.AGILITY],[25,A.FLAME_WHEEL],[30,A.STOMP],[35,A.FIRE_SPIN],[43,A.TAKE_DOWN],[49,A.INFERNO],[56,A.FIRE_BLAST],[63,A.FLARE_BLITZ]],[e.SLOWPOKE]:[[1,A.TACKLE],[1,A.CURSE],[3,A.GROWL],[6,A.WATER_GUN],[9,A.YAWN],[12,A.CONFUSION],[15,A.DISABLE],[18,A.WATER_PULSE],[21,A.HEADBUTT],[24,A.ZEN_HEADBUTT],[27,A.AMNESIA],[30,A.SURF],[33,A.SLACK_OFF],[36,A.PSYCHIC],[39,A.PSYCH_UP],[42,A.RAIN_DANCE],[45,A.HEAL_PULSE]],[e.SLOWBRO]:[[V,A.FUTURE_SIGHT],[1,A.TACKLE],[1,A.GROWL],[1,A.WATER_GUN],[1,A.WITHDRAW],[1,A.CURSE],[9,A.YAWN],[12,A.CONFUSION],[15,A.DISABLE],[18,A.WATER_PULSE],[21,A.HEADBUTT],[24,A.ZEN_HEADBUTT],[27,A.AMNESIA],[30,A.SURF],[33,A.SLACK_OFF],[36,A.PSYCHIC],[41,A.PSYCH_UP],[46,A.RAIN_DANCE],[51,A.HEAL_PULSE]],[e.MAGNEMITE]:[[1,A.TACKLE],[1,A.THUNDER_SHOCK],[4,A.SUPERSONIC],[8,A.THUNDER_WAVE],[12,A.ELECTRO_BALL],[16,A.GYRO_BALL],[20,A.SPARK],[24,A.SCREECH],[28,A.MAGNET_RISE],[32,A.FLASH_CANNON],[36,A.DISCHARGE],[40,A.METAL_SOUND],[44,A.LIGHT_SCREEN],[48,A.LOCK_ON],[52,A.ZAP_CANNON]],[e.MAGNETON]:[[k,A.TRI_ATTACK],[1,A.TACKLE],[1,A.SUPERSONIC],[1,A.THUNDER_SHOCK],[1,A.THUNDER_WAVE],[1,A.ELECTRIC_TERRAIN],[12,A.ELECTRO_BALL],[16,A.GYRO_BALL],[20,A.SPARK],[24,A.SCREECH],[28,A.MAGNET_RISE],[34,A.FLASH_CANNON],[40,A.DISCHARGE],[46,A.METAL_SOUND],[52,A.LIGHT_SCREEN],[58,A.LOCK_ON],[64,A.ZAP_CANNON]],[e.FARFETCHD]:[[1,A.SAND_ATTACK],[1,A.PECK],[5,A.LEER],[10,A.FURY_CUTTER],[15,A.CUT],[20,A.AERIAL_ACE],[25,A.AIR_CUTTER],[30,A.KNOCK_OFF],[35,A.FALSE_SWIPE],[40,A.SLASH],[45,A.SWORDS_DANCE],[50,A.AIR_SLASH],[55,A.LEAF_BLADE],[60,A.AGILITY],[65,A.BRAVE_BIRD]],[e.DODUO]:[[1,A.GROWL],[1,A.PECK],[5,A.QUICK_ATTACK],[9,A.FURY_ATTACK],[14,A.PLUCK],[19,A.DOUBLE_HIT],[23,A.AGILITY],[27,A.UPROAR],[30,A.ACUPRESSURE],[33,A.SWORDS_DANCE],[36,A.DRILL_PECK],[39,A.ENDEAVOR],[43,A.THRASH]],[e.DODRIO]:[[k,A.TRI_ATTACK],[1,A.TRI_ATTACK],[1,A.GROWL],[1,A.PECK],[5,A.QUICK_ATTACK],[12,A.FURY_ATTACK],[15,A.PLUCK],[19,A.DOUBLE_HIT],[23,A.AGILITY],[26,A.UPROAR],[30,A.ACUPRESSURE],[34,A.SWORDS_DANCE],[38,A.DRILL_PECK],[43,A.ENDEAVOR],[50,A.THRASH]],[e.SEEL]:[[1,A.HEADBUTT],[3,A.GROWL],[7,A.CHARM],[11,A.ICY_WIND],[13,A.ENCORE],[17,A.ICE_SHARD],[21,A.REST],[23,A.AQUA_RING],[27,A.AURORA_BEAM],[31,A.AQUA_JET],[33,A.BRINE],[37,A.TAKE_DOWN],[41,A.DIVE],[43,A.AQUA_TAIL],[47,A.ICE_BEAM],[51,A.SAFEGUARD],[53,A.SNOWSCAPE]],[e.DEWGONG]:[[k,A.SHEER_COLD],[1,A.HEADBUTT],[1,A.GROWL],[1,A.ICY_WIND],[1,A.CHARM],[1,A.SIGNAL_BEAM],[13,A.ENCORE],[17,A.ICE_SHARD],[21,A.REST],[23,A.AQUA_RING],[27,A.AURORA_BEAM],[31,A.AQUA_JET],[33,A.BRINE],[39,A.TAKE_DOWN],[45,A.DIVE],[49,A.AQUA_TAIL],[55,A.ICE_BEAM],[61,A.SAFEGUARD],[65,A.SNOWSCAPE]],[e.GRIMER]:[[1,A.POUND],[1,A.POISON_GAS],[4,A.HARDEN],[7,A.MUD_SLAP],[12,A.DISABLE],[15,A.SLUDGE],[18,A.MUD_SHOT],[21,A.MINIMIZE],[26,A.TOXIC],[29,A.SLUDGE_BOMB],[32,A.SLUDGE_WAVE],[37,A.SCREECH],[40,A.GUNK_SHOT],[43,A.ACID_ARMOR],[46,A.BELCH],[48,A.MEMENTO]],[e.MUK]:[[1,A.POUND],[1,A.HARDEN],[1,A.POISON_GAS],[1,A.MUD_SLAP],[12,A.DISABLE],[15,A.SLUDGE],[18,A.MUD_SHOT],[21,A.MINIMIZE],[26,A.TOXIC],[29,A.SLUDGE_BOMB],[32,A.SLUDGE_WAVE],[37,A.SCREECH],[40,A.GUNK_SHOT],[46,A.ACID_ARMOR],[52,A.BELCH],[57,A.MEMENTO]],[e.SHELLDER]:[[1,A.TACKLE],[1,A.WATER_GUN],[4,A.WITHDRAW],[8,A.ICE_SHARD],[12,A.LEER],[16,A.WHIRLPOOL],[20,A.SUPERSONIC],[24,A.AURORA_BEAM],[28,A.PROTECT],[32,A.RAZOR_SHELL],[36,A.IRON_DEFENSE],[40,A.ICE_BEAM],[44,A.SHELL_SMASH],[48,A.HYDRO_PUMP]],[e.CLOYSTER]:[[k,A.ICICLE_SPEAR],[1,A.TACKLE],[1,A.LEER],[1,A.SUPERSONIC],[1,A.WATER_GUN],[1,A.HYDRO_PUMP],[1,A.ICE_BEAM],[1,A.AURORA_BEAM],[1,A.WITHDRAW],[1,A.PROTECT],[1,A.SPIKES],[1,A.WHIRLPOOL],[1,A.IRON_DEFENSE],[1,A.TOXIC_SPIKES],[1,A.ICE_SHARD],[1,A.SHELL_SMASH],[1,A.ICICLE_CRASH],[5,A.RAZOR_SHELL]],[e.GASTLY]:[[1,A.CONFUSE_RAY],[1,A.LICK],[1,A.ACID],[4,A.HYPNOSIS],[8,A.MEAN_LOOK],[12,A.PAYBACK],[16,A.SPITE],[20,A.CURSE],[24,A.HEX],[28,A.NIGHT_SHADE],[32,A.SUCKER_PUNCH],[36,A.DARK_PULSE],[40,A.SHADOW_BALL],[44,A.DESTINY_BOND],[48,A.DREAM_EATER]],[e.HAUNTER]:[[k,A.SHADOW_PUNCH],[1,A.HYPNOSIS],[1,A.CONFUSE_RAY],[1,A.LICK],[1,A.ACID],[1,A.MEAN_LOOK],[12,A.PAYBACK],[16,A.SPITE],[20,A.CURSE],[24,A.HEX],[30,A.NIGHT_SHADE],[36,A.SUCKER_PUNCH],[42,A.DARK_PULSE],[48,A.SHADOW_BALL],[54,A.DESTINY_BOND],[60,A.DREAM_EATER]],[e.GENGAR]:[[1,A.HYPNOSIS],[1,A.CONFUSE_RAY],[1,A.LICK],[1,A.ACID],[1,A.PERISH_SONG],[1,A.MEAN_LOOK],[1,A.SHADOW_PUNCH],[1,A.REFLECT_TYPE],[12,A.PAYBACK],[16,A.SPITE],[20,A.CURSE],[24,A.HEX],[30,A.NIGHT_SHADE],[36,A.SUCKER_PUNCH],[42,A.DARK_PULSE],[48,A.SHADOW_BALL],[54,A.DESTINY_BOND],[60,A.DREAM_EATER]],[e.ONIX]:[[1,A.BIND],[1,A.TACKLE],[1,A.ROCK_THROW],[1,A.HARDEN],[1,A.MUD_SPORT],[4,A.SMACK_DOWN],[8,A.ROCK_POLISH],[12,A.DRAGON_BREATH],[16,A.CURSE],[20,A.ROCK_SLIDE],[22,A.GYRO_BALL],[24,A.SCREECH],[28,A.SAND_TOMB],[32,A.STEALTH_ROCK],[36,A.SLAM],[40,A.SANDSTORM],[44,A.DIG],[48,A.IRON_TAIL],[52,A.STONE_EDGE],[56,A.DOUBLE_EDGE]],[e.DROWZEE]:[[1,A.POUND],[1,A.HYPNOSIS],[5,A.DISABLE],[9,A.CONFUSION],[13,A.HEADBUTT],[17,A.POISON_GAS],[21,A.PSYBEAM],[25,A.PSYCH_UP],[29,A.ZEN_HEADBUTT],[33,A.SWAGGER],[37,A.PSYCHIC],[41,A.NASTY_PLOT],[45,A.PSYSHOCK],[49,A.FUTURE_SIGHT]],[e.HYPNO]:[[1,A.POUND],[1,A.DISABLE],[1,A.CONFUSION],[1,A.HYPNOSIS],[1,A.SWITCHEROO],[1,A.NIGHTMARE],[13,A.HEADBUTT],[17,A.POISON_GAS],[21,A.PSYBEAM],[25,A.PSYCH_UP],[32,A.ZEN_HEADBUTT],[37,A.SWAGGER],[42,A.PSYCHIC],[47,A.NASTY_PLOT],[51,A.PSYSHOCK],[56,A.FUTURE_SIGHT]],[e.KRABBY]:[[1,A.LEER],[1,A.WATER_GUN],[1,A.MUD_SPORT],[4,A.HARDEN],[8,A.METAL_CLAW],[12,A.MUD_SHOT],[16,A.PROTECT],[20,A.BUBBLE_BEAM],[24,A.STOMP],[29,A.FLAIL],[32,A.RAZOR_SHELL],[36,A.SLAM],[40,A.SWORDS_DANCE],[44,A.CRABHAMMER],[48,A.GUILLOTINE]],[e.KINGLER]:[[1,A.LEER],[1,A.WATER_GUN],[1,A.HARDEN],[1,A.METAL_CLAW],[1,A.HAMMER_ARM],[1,A.WIDE_GUARD],[1,A.MUD_SPORT],[12,A.MUD_SHOT],[16,A.PROTECT],[20,A.BUBBLE_BEAM],[24,A.STOMP],[31,A.FLAIL],[36,A.RAZOR_SHELL],[42,A.SLAM],[48,A.SWORDS_DANCE],[54,A.CRABHAMMER],[60,A.GUILLOTINE]],[e.VOLTORB]:[[1,A.TACKLE],[1,A.CHARGE],[4,A.THUNDER_SHOCK],[6,A.EERIE_IMPULSE],[9,A.SPARK],[11,A.ROLLOUT],[13,A.SCREECH],[16,A.CHARGE_BEAM],[20,A.SWIFT],[22,A.ELECTRO_BALL],[26,A.SELF_DESTRUCT],[29,A.LIGHT_SCREEN],[34,A.MAGNET_RISE],[37,A.DISCHARGE],[41,A.EXPLOSION],[46,A.GYRO_BALL],[50,A.MIRROR_COAT]],[e.ELECTRODE]:[[1,A.TACKLE],[1,A.THUNDER_SHOCK],[1,A.CHARGE],[1,A.EERIE_IMPULSE],[1,A.MAGNETIC_FLUX],[9,A.SPARK],[11,A.ROLLOUT],[13,A.SCREECH],[16,A.CHARGE_BEAM],[20,A.SWIFT],[22,A.ELECTRO_BALL],[26,A.SELF_DESTRUCT],[29,A.LIGHT_SCREEN],[36,A.MAGNET_RISE],[41,A.DISCHARGE],[47,A.EXPLOSION],[54,A.GYRO_BALL],[58,A.MIRROR_COAT]],[e.EXEGGCUTE]:[[1,A.ABSORB],[1,A.HYPNOSIS],[1,A.BARRAGE],[5,A.REFLECT],[10,A.LEECH_SEED],[15,A.MEGA_DRAIN],[20,A.CONFUSION],[25,A.SYNTHESIS],[30,A.BULLET_SEED],[35,A.GIGA_DRAIN],[40,A.EXTRASENSORY],[45,A.UPROAR],[50,A.WORRY_SEED],[55,A.SOLAR_BEAM]],[e.EXEGGUTOR]:[[k,A.STOMP],[V,A.GROWTH],[1,A.BARRAGE],[1,A.SEED_BOMB],[1,A.PSYSHOCK],[1,A.WOOD_HAMMER],[1,A.LEAF_STORM],[1,A.MEGA_DRAIN],[1,A.CONFUSION],[1,A.SYNTHESIS],[1,A.BULLET_SEED],[1,A.GIGA_DRAIN],[1,A.EXTRASENSORY],[1,A.UPROAR],[1,A.WORRY_SEED],[1,A.SOLAR_BEAM],[1,A.ABSORB],[1,A.HYPNOSIS],[1,A.REFLECT],[1,A.LEECH_SEED]],[e.CUBONE]:[[1,A.GROWL],[1,A.MUD_SLAP],[4,A.TAIL_WHIP],[8,A.FALSE_SWIPE],[12,A.HEADBUTT],[16,A.RETALIATE],[20,A.FLING],[24,A.STOMPING_TANTRUM],[29,A.BONE_RUSH],[32,A.FOCUS_ENERGY],[36,A.ENDEAVOR],[40,A.BONEMERANG],[44,A.THRASH],[48,A.DOUBLE_EDGE]],[e.MAROWAK]:[[1,A.TAIL_WHIP],[1,A.GROWL],[1,A.MUD_SLAP],[1,A.FALSE_SWIPE],[1,A.BONE_CLUB],[12,A.HEADBUTT],[16,A.RETALIATE],[20,A.FLING],[24,A.STOMPING_TANTRUM],[31,A.BONE_RUSH],[36,A.FOCUS_ENERGY],[42,A.ENDEAVOR],[48,A.BONEMERANG],[54,A.THRASH],[60,A.DOUBLE_EDGE]],[e.HITMONLEE]:[[k,A.BRICK_BREAK],[1,A.TACKLE],[1,A.FOCUS_ENERGY],[1,A.FAKE_OUT],[1,A.HELPING_HAND],[1,A.FEINT],[1,A.LOW_SWEEP],[1,A.JUMP_KICK],[1,A.ROLLING_KICK],[1,A.MACH_PUNCH],[1,A.RAPID_SPIN],[4,A.DOUBLE_KICK],[8,A.LOW_KICK],[12,A.ENDURE],[16,A.SUCKER_PUNCH],[21,A.WIDE_GUARD],[24,A.BLAZE_KICK],[28,A.FEINT],[32,A.MEGA_KICK],[36,A.CLOSE_COMBAT],[40,A.REVERSAL],[44,A.HIGH_JUMP_KICK],[50,A.AXE_KICK]],[e.HITMONCHAN]:[[k,A.DRAIN_PUNCH],[1,A.TACKLE],[1,A.FOCUS_ENERGY],[1,A.FAKE_OUT],[1,A.HELPING_HAND],[1,A.FEINT],[1,A.PURSUIT],[1,A.COMET_PUNCH],[1,A.LOW_SWEEP],[1,A.RAPID_SPIN],[4,A.MACH_PUNCH],[8,A.VACUUM_WAVE],[12,A.DETECT],[16,A.BULLET_PUNCH],[21,A.QUICK_GUARD],[24,A.THUNDER_PUNCH],[24,A.ICE_PUNCH],[24,A.FIRE_PUNCH],[28,A.AGILITY],[32,A.MEGA_PUNCH],[36,A.CLOSE_COMBAT],[40,A.COUNTER],[44,A.FOCUS_PUNCH]],[e.LICKITUNG]:[[1,A.DEFENSE_CURL],[1,A.LICK],[1,A.TACKLE],[6,A.REST],[12,A.SUPERSONIC],[18,A.WRAP],[24,A.DISABLE],[30,A.STOMP],[32,A.ROLLOUT],[36,A.KNOCK_OFF],[42,A.SCREECH],[48,A.SLAM],[54,A.POWER_WHIP],[60,A.BELLY_DRUM]],[e.KOFFING]:[[1,A.TACKLE],[1,A.POISON_GAS],[4,A.SMOG],[8,A.SMOKESCREEN],[12,A.CLEAR_SMOG],[16,A.ASSURANCE],[20,A.SLUDGE],[24,A.HAZE],[28,A.SELF_DESTRUCT],[32,A.SLUDGE_BOMB],[36,A.TOXIC],[40,A.BELCH],[44,A.EXPLOSION],[48,A.MEMENTO],[52,A.DESTINY_BOND]],[e.WEEZING]:[[k,A.DOUBLE_HIT],[1,A.TACKLE],[1,A.SMOKESCREEN],[1,A.SMOG],[1,A.POISON_GAS],[1,A.HEAT_WAVE],[12,A.CLEAR_SMOG],[16,A.ASSURANCE],[20,A.SLUDGE],[24,A.HAZE],[28,A.SELF_DESTRUCT],[32,A.SLUDGE_BOMB],[38,A.TOXIC],[44,A.BELCH],[50,A.EXPLOSION],[56,A.MEMENTO],[62,A.DESTINY_BOND]],[e.RHYHORN]:[[1,A.TACKLE],[1,A.TAIL_WHIP],[5,A.SMACK_DOWN],[10,A.BULLDOZE],[15,A.HORN_ATTACK],[20,A.SCARY_FACE],[25,A.STOMP],[30,A.ROCK_BLAST],[35,A.DRILL_RUN],[40,A.TAKE_DOWN],[45,A.EARTHQUAKE],[50,A.STONE_EDGE],[55,A.MEGAHORN],[60,A.HORN_DRILL]],[e.RHYDON]:[[k,A.HAMMER_ARM],[1,A.TACKLE],[1,A.TAIL_WHIP],[1,A.SMACK_DOWN],[1,A.BULLDOZE],[15,A.HORN_ATTACK],[20,A.SCARY_FACE],[25,A.STOMP],[30,A.ROCK_BLAST],[35,A.DRILL_RUN],[40,A.TAKE_DOWN],[47,A.EARTHQUAKE],[54,A.STONE_EDGE],[61,A.MEGAHORN],[68,A.HORN_DRILL]],[e.CHANSEY]:[[1,A.POUND],[1,A.DEFENSE_CURL],[1,A.SWEET_KISS],[1,A.CHARM],[1,A.COVET],[1,A.COPYCAT],[1,A.DISARMING_VOICE],[4,A.TAIL_WHIP],[8,A.ECHOED_VOICE],[12,A.LIFE_DEW],[16,A.SING],[20,A.FLING],[24,A.TAKE_DOWN],[28,A.HEAL_PULSE],[32,A.HELPING_HAND],[36,A.LIGHT_SCREEN],[40,A.DOUBLE_EDGE],[44,A.SOFT_BOILED],[48,A.LAST_RESORT],[52,A.HEALING_WISH]],[e.TANGELA]:[[1,A.BIND],[1,A.ABSORB],[1,A.CONSTRICT],[4,A.STUN_SPORE],[8,A.GROWTH],[12,A.MEGA_DRAIN],[16,A.VINE_WHIP],[20,A.POISON_POWDER],[24,A.DOUBLE_HIT],[28,A.KNOCK_OFF],[32,A.GIGA_DRAIN],[34,A.ANCIENT_POWER],[36,A.SLEEP_POWDER],[40,A.SLAM],[44,A.TICKLE],[48,A.POWER_WHIP],[52,A.INGRAIN],[56,A.GRASSY_TERRAIN]],[e.KANGASKHAN]:[[1,A.POUND],[1,A.TAIL_WHIP],[1,A.COMET_PUNCH],[4,A.GROWL],[8,A.FAKE_OUT],[12,A.BITE],[16,A.STOMP],[20,A.FOCUS_ENERGY],[24,A.HEADBUTT],[28,A.SUCKER_PUNCH],[32,A.DOUBLE_HIT],[36,A.CRUNCH],[40,A.ENDURE],[44,A.REVERSAL],[48,A.OUTRAGE],[52,A.LAST_RESORT]],[e.HORSEA]:[[1,A.LEER],[1,A.WATER_GUN],[5,A.SMOKESCREEN],[10,A.TWISTER],[15,A.FOCUS_ENERGY],[20,A.DRAGON_BREATH],[25,A.BUBBLE_BEAM],[30,A.AGILITY],[35,A.LASER_FOCUS],[40,A.DRAGON_PULSE],[45,A.HYDRO_PUMP],[50,A.DRAGON_DANCE],[55,A.RAIN_DANCE]],[e.SEADRA]:[[1,A.LEER],[1,A.WATER_GUN],[1,A.SMOKESCREEN],[1,A.TWISTER],[15,A.FOCUS_ENERGY],[20,A.DRAGON_BREATH],[25,A.BUBBLE_BEAM],[30,A.AGILITY],[37,A.LASER_FOCUS],[44,A.DRAGON_PULSE],[51,A.HYDRO_PUMP],[58,A.DRAGON_DANCE],[65,A.RAIN_DANCE]],[e.GOLDEEN]:[[1,A.TAIL_WHIP],[1,A.PECK],[1,A.WATER_SPORT],[5,A.SUPERSONIC],[10,A.WATER_PULSE],[15,A.HORN_ATTACK],[20,A.AGILITY],[25,A.AQUA_RING],[30,A.FLAIL],[35,A.WATERFALL],[40,A.SOAK],[45,A.MEGAHORN],[50,A.HORN_DRILL]],[e.SEAKING]:[[1,A.TAIL_WHIP],[1,A.SUPERSONIC],[1,A.WATER_SPORT],[1,A.PECK],[1,A.WATER_PULSE],[15,A.HORN_ATTACK],[20,A.AGILITY],[25,A.AQUA_RING],[30,A.FLAIL],[37,A.WATERFALL],[44,A.SOAK],[51,A.MEGAHORN],[58,A.HORN_DRILL]],[e.STARYU]:[[1,A.TACKLE],[1,A.HARDEN],[4,A.WATER_GUN],[8,A.CONFUSE_RAY],[12,A.RAPID_SPIN],[16,A.MINIMIZE],[20,A.SWIFT],[24,A.PSYBEAM],[28,A.BRINE],[32,A.LIGHT_SCREEN],[36,A.POWER_GEM],[40,A.PSYCHIC],[44,A.SURF],[48,A.RECOVER],[52,A.COSMIC_POWER],[56,A.HYDRO_PUMP]],[e.STARMIE]:[[1,A.TACKLE],[1,A.WATER_GUN],[1,A.HYDRO_PUMP],[1,A.SURF],[1,A.PSYBEAM],[1,A.PSYCHIC],[1,A.RECOVER],[1,A.HARDEN],[1,A.MINIMIZE],[1,A.CONFUSE_RAY],[1,A.LIGHT_SCREEN],[1,A.SWIFT],[1,A.SPOTLIGHT],[1,A.RAPID_SPIN],[1,A.COSMIC_POWER],[1,A.BRINE],[1,A.POWER_GEM]],[e.MR_MIME]:[[1,A.POUND],[1,A.TICKLE],[1,A.BATON_PASS],[1,A.ENCORE],[1,A.COPYCAT],[1,A.POWER_SWAP],[1,A.GUARD_SWAP],[1,A.WIDE_GUARD],[1,A.QUICK_GUARD],[1,A.BARRIER],[12,A.CONFUSION],[16,A.ROLE_PLAY],[20,A.PROTECT],[24,A.RECYCLE],[28,A.PSYBEAM],[32,A.MIMIC],[36,A.LIGHT_SCREEN],[36,A.REFLECT],[36,A.SAFEGUARD],[40,A.SUCKER_PUNCH],[44,A.DAZZLING_GLEAM],[48,A.PSYCHIC],[52,A.TEETER_DANCE]],[e.SCYTHER]:[[1,A.LEER],[1,A.QUICK_ATTACK],[4,A.FURY_CUTTER],[8,A.FALSE_SWIPE],[12,A.WING_ATTACK],[16,A.DOUBLE_TEAM],[20,A.DOUBLE_HIT],[24,A.SLASH],[28,A.FOCUS_ENERGY],[30,A.STEEL_WING],[32,A.AGILITY],[36,A.AIR_SLASH],[40,A.X_SCISSOR],[44,A.SWORDS_DANCE]],[e.JYNX]:[[1,A.POUND],[1,A.LICK],[1,A.POWDER_SNOW],[1,A.SWEET_KISS],[1,A.COPYCAT],[12,A.CONFUSION],[16,A.COVET],[20,A.SING],[24,A.FAKE_TEARS],[28,A.ICE_PUNCH],[34,A.PSYCHIC],[40,A.LOVELY_KISS],[46,A.MEAN_LOOK],[52,A.PERISH_SONG],[58,A.BLIZZARD]],[e.ELECTABUZZ]:[[1,A.LEER],[1,A.THUNDER_SHOCK],[1,A.QUICK_ATTACK],[1,A.CHARGE],[12,A.SWIFT],[16,A.SHOCK_WAVE],[20,A.THUNDER_WAVE],[24,A.SCREECH],[28,A.THUNDER_PUNCH],[34,A.DISCHARGE],[40,A.LOW_KICK],[46,A.THUNDERBOLT],[52,A.LIGHT_SCREEN],[58,A.THUNDER],[64,A.GIGA_IMPACT]],[e.MAGMAR]:[[1,A.LEER],[1,A.EMBER],[1,A.SMOKESCREEN],[1,A.SMOG],[12,A.CLEAR_SMOG],[16,A.FLAME_WHEEL],[20,A.CONFUSE_RAY],[24,A.SCARY_FACE],[28,A.FIRE_PUNCH],[34,A.LAVA_PLUME],[40,A.LOW_KICK],[46,A.FLAMETHROWER],[52,A.SUNNY_DAY],[58,A.FIRE_BLAST],[64,A.HYPER_BEAM]],[e.PINSIR]:[[1,A.VISE_GRIP],[1,A.HARDEN],[4,A.FOCUS_ENERGY],[8,A.BIND],[12,A.SEISMIC_TOSS],[16,A.BUG_BITE],[20,A.STORM_THROW],[24,A.DOUBLE_HIT],[28,A.VITAL_THROW],[32,A.X_SCISSOR],[36,A.STRENGTH],[40,A.SWORDS_DANCE],[44,A.SUBMISSION],[48,A.GUILLOTINE],[52,A.SUPERPOWER]],[e.TAUROS]:[[1,A.TACKLE],[1,A.TAIL_WHIP],[5,A.WORK_UP],[10,A.PAYBACK],[15,A.ASSURANCE],[20,A.HORN_ATTACK],[25,A.SCARY_FACE],[30,A.ZEN_HEADBUTT],[35,A.RAGING_BULL],[40,A.REST],[45,A.SWAGGER],[50,A.THRASH],[55,A.DOUBLE_EDGE],[60,A.GIGA_IMPACT]],[e.MAGIKARP]:[[1,A.SPLASH],[15,A.TACKLE],[25,A.FLAIL]],[e.GYARADOS]:[[k,A.BITE],[1,A.TACKLE],[1,A.LEER],[1,A.SPLASH],[1,A.FLAIL],[1,A.TWISTER],[4,A.WHIRLPOOL],[8,A.ICE_FANG],[12,A.BRINE],[16,A.SCARY_FACE],[21,A.WATERFALL],[24,A.CRUNCH],[28,A.RAIN_DANCE],[32,A.AQUA_TAIL],[36,A.DRAGON_DANCE],[40,A.HYDRO_PUMP],[44,A.HURRICANE],[48,A.THRASH],[52,A.HYPER_BEAM]],[e.LAPRAS]:[[1,A.GROWL],[1,A.WATER_GUN],[5,A.SING],[10,A.MIST],[15,A.LIFE_DEW],[20,A.ICE_SHARD],[25,A.CONFUSE_RAY],[30,A.WATER_PULSE],[35,A.BRINE],[40,A.BODY_SLAM],[45,A.ICE_BEAM],[50,A.RAIN_DANCE],[55,A.HYDRO_PUMP],[60,A.PERISH_SONG],[65,A.SHEER_COLD]],[e.DITTO]:[[1,A.TRANSFORM]],[e.EEVEE]:[[1,A.TACKLE],[1,A.TAIL_WHIP],[1,A.GROWL],[1,A.HELPING_HAND],[1,A.COVET],[5,A.SAND_ATTACK],[10,A.QUICK_ATTACK],[15,A.BABY_DOLL_EYES],[20,A.SWIFT],[25,A.BITE],[30,A.COPYCAT],[35,A.BATON_PASS],[40,A.TAKE_DOWN],[45,A.CHARM],[50,A.DOUBLE_EDGE],[55,A.LAST_RESORT],[60,A.VEEVEE_VOLLEY]],[e.VAPOREON]:[[k,A.BOUNCY_BUBBLE],[V,A.VEEVEE_VOLLEY],[1,A.TACKLE],[1,A.TAKE_DOWN],[1,A.DOUBLE_EDGE],[1,A.TAIL_WHIP],[1,A.BITE],[1,A.GROWL],[1,A.SWIFT],[1,A.CHARM],[1,A.BATON_PASS],[1,A.HELPING_HAND],[1,A.COVET],[1,A.COPYCAT],[5,A.SAND_ATTACK],[10,A.WATER_GUN],[15,A.QUICK_ATTACK],[20,A.BABY_DOLL_EYES],[25,A.HAZE],[30,A.WATER_PULSE],[35,A.AURORA_BEAM],[40,A.AQUA_RING],[45,A.MUDDY_WATER],[50,A.ACID_ARMOR],[55,A.HYDRO_PUMP],[60,A.LAST_RESORT]],[e.JOLTEON]:[[k,A.BUZZY_BUZZ],[V,A.VEEVEE_VOLLEY],[1,A.TACKLE],[1,A.TAKE_DOWN],[1,A.DOUBLE_EDGE],[1,A.TAIL_WHIP],[1,A.BITE],[1,A.GROWL],[1,A.SWIFT],[1,A.CHARM],[1,A.BATON_PASS],[1,A.HELPING_HAND],[1,A.COVET],[1,A.COPYCAT],[5,A.SAND_ATTACK],[10,A.THUNDER_SHOCK],[15,A.QUICK_ATTACK],[20,A.BABY_DOLL_EYES],[25,A.THUNDER_WAVE],[30,A.DOUBLE_KICK],[35,A.THUNDER_FANG],[40,A.PIN_MISSILE],[45,A.DISCHARGE],[50,A.AGILITY],[55,A.THUNDER],[60,A.LAST_RESORT]],[e.FLAREON]:[[k,A.SIZZLY_SLIDE],[V,A.VEEVEE_VOLLEY],[1,A.TACKLE],[1,A.TAKE_DOWN],[1,A.DOUBLE_EDGE],[1,A.TAIL_WHIP],[1,A.GROWL],[1,A.SWIFT],[1,A.CHARM],[1,A.BATON_PASS],[1,A.HELPING_HAND],[1,A.COVET],[1,A.COPYCAT],[5,A.SAND_ATTACK],[10,A.EMBER],[15,A.QUICK_ATTACK],[20,A.BABY_DOLL_EYES],[25,A.SMOG],[30,A.BITE],[35,A.FIRE_FANG],[40,A.FIRE_SPIN],[45,A.LAVA_PLUME],[50,A.SCARY_FACE],[55,A.FLARE_BLITZ],[60,A.LAST_RESORT]],[e.PORYGON]:[[1,A.TACKLE],[1,A.CONVERSION],[5,A.RECYCLE],[10,A.MAGNET_RISE],[15,A.THUNDER_SHOCK],[20,A.PSYBEAM],[25,A.CONVERSION_2],[30,A.AGILITY],[35,A.RECOVER],[40,A.DISCHARGE],[45,A.TRI_ATTACK],[50,A.MAGIC_COAT],[55,A.LOCK_ON],[60,A.ZAP_CANNON]],[e.OMANYTE]:[[1,A.BIND],[1,A.WITHDRAW],[1,A.CONSTRICT],[5,A.ROLLOUT],[10,A.SAND_ATTACK],[15,A.WATER_GUN],[20,A.LEER],[25,A.MUD_SHOT],[30,A.ANCIENT_POWER],[35,A.BRINE],[41,A.PROTECT],[45,A.ROCK_BLAST],[50,A.SURF],[55,A.SHELL_SMASH],[60,A.HYDRO_PUMP]],[e.OMASTAR]:[[k,A.CRUNCH],[1,A.BIND],[1,A.SAND_ATTACK],[1,A.CONSTRICT],[1,A.SPIKE_CANNON],[1,A.WITHDRAW],[1,A.ROLLOUT],[15,A.WATER_GUN],[20,A.LEER],[25,A.MUD_SHOT],[30,A.ANCIENT_POWER],[35,A.BRINE],[43,A.PROTECT],[49,A.ROCK_BLAST],[56,A.SURF],[63,A.SHELL_SMASH],[70,A.HYDRO_PUMP]],[e.KABUTO]:[[1,A.ABSORB],[1,A.HARDEN],[5,A.SCRATCH],[10,A.SAND_ATTACK],[15,A.AQUA_JET],[20,A.LEER],[25,A.MUD_SHOT],[30,A.ANCIENT_POWER],[35,A.BRINE],[41,A.PROTECT],[45,A.LEECH_LIFE],[50,A.LIQUIDATION],[55,A.METAL_SOUND],[60,A.STONE_EDGE]],[e.KABUTOPS]:[[k,A.SLASH],[1,A.SCRATCH],[1,A.SAND_ATTACK],[1,A.ABSORB],[1,A.HARDEN],[1,A.FEINT],[1,A.NIGHT_SLASH],[15,A.AQUA_JET],[20,A.LEER],[25,A.MUD_SHOT],[30,A.ANCIENT_POWER],[35,A.BRINE],[43,A.PROTECT],[49,A.LEECH_LIFE],[56,A.LIQUIDATION],[63,A.METAL_SOUND],[70,A.STONE_EDGE]],[e.AERODACTYL]:[[1,A.BITE],[1,A.ANCIENT_POWER],[5,A.SUPERSONIC],[10,A.WING_ATTACK],[15,A.SCARY_FACE],[20,A.ROCK_SLIDE],[25,A.ROAR],[30,A.CRUNCH],[35,A.IRON_HEAD],[40,A.TAKE_DOWN],[45,A.STONE_EDGE],[50,A.AGILITY],[55,A.HYPER_BEAM],[60,A.GIGA_IMPACT]],[e.SNORLAX]:[[1,A.TACKLE],[1,A.SCREECH],[1,A.ODOR_SLEUTH],[1,A.DEFENSE_CURL],[1,A.METRONOME],[1,A.LICK],[1,A.FLAIL],[1,A.STOCKPILE],[1,A.SWALLOW],[1,A.RECYCLE],[1,A.BLOCK],[1,A.COVET],[1,A.FLING],[1,A.LAST_RESORT],[12,A.YAWN],[16,A.BITE],[20,A.REST],[20,A.SNORE],[20,A.SLEEP_TALK],[24,A.CRUNCH],[28,A.BODY_SLAM],[32,A.HEAVY_SLAM],[36,A.AMNESIA],[40,A.HIGH_HORSEPOWER],[44,A.HAMMER_ARM],[48,A.BELLY_DRUM],[52,A.BELCH],[56,A.GIGA_IMPACT]],[e.ARTICUNO]:[[1,A.GUST],[1,A.MIST],[5,A.POWDER_SNOW],[10,A.REFLECT],[15,A.ICE_SHARD],[20,A.AGILITY],[25,A.ANCIENT_POWER],[30,A.TAILWIND],[35,A.FREEZE_DRY],[40,A.ROOST],[45,A.ICE_BEAM],[50,A.SNOWSCAPE],[55,A.HURRICANE],[60,A.HAZE],[65,A.BLIZZARD],[70,A.SHEER_COLD]],[e.ZAPDOS]:[[1,A.PECK],[1,A.THUNDER_WAVE],[5,A.THUNDER_SHOCK],[10,A.LIGHT_SCREEN],[15,A.PLUCK],[20,A.AGILITY],[25,A.ANCIENT_POWER],[30,A.CHARGE],[35,A.DRILL_PECK],[40,A.ROOST],[45,A.DISCHARGE],[50,A.RAIN_DANCE],[55,A.THUNDER],[60,A.DETECT],[65,A.MAGNETIC_FLUX],[70,A.ZAP_CANNON]],[e.MOLTRES]:[[1,A.GUST],[1,A.LEER],[5,A.EMBER],[10,A.SAFEGUARD],[15,A.WING_ATTACK],[20,A.AGILITY],[25,A.ANCIENT_POWER],[30,A.INCINERATE],[35,A.AIR_SLASH],[40,A.ROOST],[45,A.HEAT_WAVE],[50,A.SUNNY_DAY],[55,A.HURRICANE],[60,A.ENDURE],[65,A.OVERHEAT],[70,A.SKY_ATTACK]],[e.DRATINI]:[[1,A.WRAP],[1,A.LEER],[5,A.TWISTER],[10,A.THUNDER_WAVE],[15,A.DRAGON_TAIL],[20,A.AGILITY],[25,A.SLAM],[31,A.AQUA_TAIL],[35,A.DRAGON_RUSH],[40,A.SAFEGUARD],[45,A.RAIN_DANCE],[50,A.DRAGON_DANCE],[55,A.OUTRAGE],[60,A.HYPER_BEAM]],[e.DRAGONAIR]:[[1,A.WRAP],[1,A.LEER],[1,A.THUNDER_WAVE],[1,A.TWISTER],[15,A.DRAGON_TAIL],[20,A.AGILITY],[25,A.SLAM],[33,A.AQUA_TAIL],[39,A.DRAGON_RUSH],[46,A.SAFEGUARD],[53,A.RAIN_DANCE],[60,A.DRAGON_DANCE],[67,A.OUTRAGE],[74,A.HYPER_BEAM]],[e.DRAGONITE]:[[k,A.HURRICANE],[1,A.FIRE_PUNCH],[1,A.THUNDER_PUNCH],[1,A.WING_ATTACK],[1,A.WRAP],[1,A.LEER],[1,A.THUNDER_WAVE],[1,A.TWISTER],[1,A.EXTREME_SPEED],[1,A.ROOST],[15,A.DRAGON_TAIL],[20,A.AGILITY],[25,A.SLAM],[33,A.AQUA_TAIL],[39,A.DRAGON_RUSH],[41,A.OUTRAGE],[46,A.SAFEGUARD],[53,A.RAIN_DANCE],[62,A.DRAGON_DANCE],[80,A.HYPER_BEAM]],[e.MEWTWO]:[[1,A.DISABLE],[1,A.CONFUSION],[1,A.SWIFT],[1,A.LIFE_DEW],[8,A.ANCIENT_POWER],[16,A.PSYCHO_CUT],[24,A.SAFEGUARD],[32,A.AMNESIA],[40,A.AURA_SPHERE],[48,A.PSYCHIC],[56,A.POWER_SWAP],[56,A.GUARD_SWAP],[64,A.MIST],[72,A.PSYSTRIKE],[80,A.RECOVER],[88,A.FUTURE_SIGHT]],[e.MEW]:[[1,A.POUND],[1,A.REFLECT_TYPE],[10,A.AMNESIA],[20,A.BATON_PASS],[30,A.ANCIENT_POWER],[40,A.LIFE_DEW],[50,A.NASTY_PLOT],[60,A.METRONOME],[70,A.IMPRISON],[80,A.TRANSFORM],[90,A.AURA_SPHERE],[100,A.PSYCHIC]],[e.CHIKORITA]:[[1,A.TACKLE],[1,A.GROWL],[5,A.RAZOR_LEAF],[9,A.POISON_POWDER],[12,A.SYNTHESIS],[17,A.REFLECT],[20,A.MAGICAL_LEAF],[23,A.LEECH_SEED],[28,A.SWEET_SCENT],[31,A.LIGHT_SCREEN],[34,A.BODY_SLAM],[39,A.SAFEGUARD],[42,A.GIGA_DRAIN],[45,A.SOLAR_BEAM]],[e.BAYLEEF]:[[1,A.TACKLE],[1,A.GROWL],[1,A.RAZOR_LEAF],[1,A.POISON_POWDER],[12,A.SYNTHESIS],[18,A.REFLECT],[22,A.MAGICAL_LEAF],[26,A.LEECH_SEED],[32,A.SWEET_SCENT],[36,A.LIGHT_SCREEN],[40,A.BODY_SLAM],[46,A.SAFEGUARD],[50,A.GIGA_DRAIN],[54,A.SOLAR_BEAM]],[e.MEGANIUM]:[[k,A.PETAL_DANCE],[1,A.TACKLE],[1,A.GROWL],[1,A.RAZOR_LEAF],[1,A.POISON_POWDER],[1,A.PETAL_BLIZZARD],[12,A.SYNTHESIS],[18,A.REFLECT],[22,A.MAGICAL_LEAF],[26,A.LEECH_SEED],[34,A.SWEET_SCENT],[40,A.LIGHT_SCREEN],[46,A.BODY_SLAM],[54,A.SAFEGUARD],[60,A.GIGA_DRAIN],[65,A.SOLAR_BEAM]],[e.CYNDAQUIL]:[[1,A.TACKLE],[1,A.LEER],[5,A.EMBER],[10,A.SMOKESCREEN],[13,A.QUICK_ATTACK],[19,A.FLAME_WHEEL],[22,A.DEFENSE_CURL],[28,A.FLAME_CHARGE],[31,A.SWIFT],[37,A.LAVA_PLUME],[40,A.FLAMETHROWER],[46,A.INFERNO],[49,A.ROLLOUT],[55,A.DOUBLE_EDGE],[58,A.OVERHEAT],[64,A.ERUPTION]],[e.QUILAVA]:[[1,A.TACKLE],[1,A.LEER],[1,A.SMOKESCREEN],[10,A.EMBER],[13,A.QUICK_ATTACK],[20,A.FLAME_WHEEL],[24,A.DEFENSE_CURL],[31,A.SWIFT],[35,A.FLAME_CHARGE],[42,A.LAVA_PLUME],[46,A.FLAMETHROWER],[53,A.INFERNO],[57,A.ROLLOUT],[64,A.DOUBLE_EDGE],[68,A.OVERHEAT],[75,A.ERUPTION]],[e.TYPHLOSION]:[[1,A.TACKLE],[1,A.DOUBLE_EDGE],[1,A.LEER],[1,A.EMBER],[1,A.SMOKESCREEN],[1,A.ERUPTION],[1,A.GYRO_BALL],[13,A.QUICK_ATTACK],[20,A.FLAME_WHEEL],[24,A.DEFENSE_CURL],[31,A.SWIFT],[35,A.FLAME_CHARGE],[43,A.LAVA_PLUME],[48,A.FLAMETHROWER],[56,A.INFERNO],[61,A.ROLLOUT],[74,A.OVERHEAT]],[e.TOTODILE]:[[1,A.SCRATCH],[1,A.LEER],[5,A.WATER_GUN],[9,A.BITE],[13,A.SCARY_FACE],[19,A.ICE_FANG],[22,A.FLAIL],[27,A.CRUNCH],[30,A.SLASH],[33,A.SCREECH],[37,A.THRASH],[41,A.AQUA_TAIL],[45,A.SUPERPOWER],[50,A.HYDRO_PUMP]],[e.CROCONAW]:[[1,A.SCRATCH],[1,A.LEER],[1,A.WATER_GUN],[13,A.BITE],[15,A.SCARY_FACE],[21,A.ICE_FANG],[24,A.FLAIL],[30,A.CRUNCH],[34,A.SLASH],[37,A.SCREECH],[42,A.THRASH],[47,A.AQUA_TAIL],[50,A.SUPERPOWER],[55,A.HYDRO_PUMP]],[e.FERALIGATR]:[[1,A.AGILITY],[1,A.SCRATCH],[1,A.LEER],[1,A.WATER_GUN],[13,A.BITE],[15,A.SCARY_FACE],[21,A.ICE_FANG],[24,A.FLAIL],[32,A.CRUNCH],[37,A.SLASH],[44,A.SCREECH],[51,A.THRASH],[59,A.AQUA_TAIL],[65,A.SUPERPOWER],[70,A.HYDRO_PUMP]],[e.SENTRET]:[[1,A.SCRATCH],[4,A.DEFENSE_CURL],[7,A.QUICK_ATTACK],[13,A.FURY_SWIPES],[16,A.HELPING_HAND],[19,A.FOLLOW_ME],[25,A.SLAM],[28,A.REST],[31,A.SUCKER_PUNCH],[36,A.AMNESIA],[39,A.BATON_PASS],[42,A.DOUBLE_EDGE],[47,A.HYPER_VOICE]],[e.FURRET]:[[k,A.AGILITY],[1,A.SCRATCH],[1,A.QUICK_ATTACK],[1,A.DEFENSE_CURL],[1,A.COIL],[13,A.FURY_SWIPES],[17,A.HELPING_HAND],[21,A.FOLLOW_ME],[28,A.SLAM],[32,A.REST],[36,A.SUCKER_PUNCH],[42,A.AMNESIA],[46,A.BATON_PASS],[50,A.DOUBLE_EDGE],[56,A.HYPER_VOICE]],[e.HOOTHOOT]:[[1,A.GROWL],[1,A.PECK],[3,A.TACKLE],[6,A.ECHOED_VOICE],[9,A.CONFUSION],[12,A.REFLECT],[15,A.DEFOG],[18,A.AIR_SLASH],[21,A.EXTRASENSORY],[24,A.TAKE_DOWN],[27,A.UPROAR],[30,A.ROOST],[33,A.MOONBLAST],[36,A.HYPNOSIS],[39,A.DREAM_EATER]],[e.NOCTOWL]:[[1,A.TACKLE],[1,A.GROWL],[1,A.PECK],[1,A.SKY_ATTACK],[1,A.ECHOED_VOICE],[9,A.CONFUSION],[12,A.REFLECT],[15,A.DEFOG],[18,A.AIR_SLASH],[23,A.EXTRASENSORY],[28,A.TAKE_DOWN],[33,A.UPROAR],[38,A.ROOST],[43,A.MOONBLAST],[48,A.HYPNOSIS],[53,A.DREAM_EATER]],[e.LEDYBA]:[[1,A.TACKLE],[5,A.SUPERSONIC],[8,A.SWIFT],[12,A.LIGHT_SCREEN],[12,A.REFLECT],[12,A.SAFEGUARD],[15,A.MACH_PUNCH],[19,A.ROOST],[22,A.STRUGGLE_BUG],[26,A.BATON_PASS],[29,A.AGILITY],[33,A.BUG_BUZZ],[36,A.AIR_SLASH],[40,A.DOUBLE_EDGE]],[e.LEDIAN]:[[1,A.TACKLE],[1,A.SUPERSONIC],[1,A.SWIFT],[5,A.SUPERSONIC],[12,A.LIGHT_SCREEN],[12,A.REFLECT],[12,A.SAFEGUARD],[15,A.MACH_PUNCH],[20,A.ROOST],[24,A.STRUGGLE_BUG],[29,A.BATON_PASS],[33,A.AGILITY],[38,A.BUG_BUZZ],[42,A.AIR_SLASH],[47,A.DOUBLE_EDGE]],[e.SPINARAK]:[[1,A.POISON_STING],[1,A.STRING_SHOT],[1,A.CONSTRICT],[5,A.ABSORB],[8,A.INFESTATION],[12,A.SCARY_FACE],[15,A.NIGHT_SHADE],[19,A.SHADOW_SNEAK],[22,A.FURY_SWIPES],[26,A.SUCKER_PUNCH],[29,A.AGILITY],[33,A.PIN_MISSILE],[36,A.PSYCHIC],[40,A.POISON_JAB],[44,A.CROSS_POISON],[47,A.STICKY_WEB],[51,A.TOXIC_THREAD]],[e.ARIADOS]:[[k,A.SWORDS_DANCE],[1,A.POISON_STING],[1,A.ABSORB],[1,A.STRING_SHOT],[1,A.CONSTRICT],[1,A.FOCUS_ENERGY],[1,A.BUG_BITE],[1,A.FELL_STINGER],[8,A.INFESTATION],[12,A.SCARY_FACE],[15,A.NIGHT_SHADE],[19,A.SHADOW_SNEAK],[23,A.FURY_SWIPES],[28,A.SUCKER_PUNCH],[31,A.AGILITY],[35,A.PIN_MISSILE],[41,A.PSYCHIC],[46,A.POISON_JAB],[50,A.CROSS_POISON],[54,A.STICKY_WEB],[59,A.TOXIC_THREAD]],[e.CROBAT]:[[k,A.CROSS_POISON],[1,A.SUPERSONIC],[1,A.ABSORB],[1,A.TOXIC],[1,A.SCREECH],[1,A.MEAN_LOOK],[1,A.ASTONISH],[1,A.TAILWIND],[15,A.POISON_FANG],[20,A.QUICK_GUARD],[27,A.AIR_CUTTER],[34,A.BITE],[41,A.HAZE],[48,A.VENOSHOCK],[55,A.CONFUSE_RAY],[62,A.AIR_SLASH],[69,A.LEECH_LIFE]],[e.CHINCHOU]:[[1,A.SUPERSONIC],[1,A.WATER_GUN],[4,A.ELECTRO_BALL],[8,A.THUNDER_WAVE],[12,A.BUBBLE_BEAM],[16,A.CONFUSE_RAY],[20,A.SPARK],[24,A.CHARGE],[28,A.DISCHARGE],[32,A.AQUA_RING],[36,A.FLAIL],[40,A.TAKE_DOWN],[44,A.HYDRO_PUMP]],[e.LANTURN]:[[k,A.STOCKPILE],[k,A.SPIT_UP],[k,A.SWALLOW],[1,A.SUPERSONIC],[1,A.WATER_GUN],[1,A.SPOTLIGHT],[1,A.THUNDER_WAVE],[1,A.ELECTRO_BALL],[1,A.EERIE_IMPULSE],[12,A.BUBBLE_BEAM],[16,A.CONFUSE_RAY],[20,A.SPARK],[24,A.CHARGE],[30,A.DISCHARGE],[36,A.AQUA_RING],[42,A.FLAIL],[48,A.TAKE_DOWN],[54,A.HYDRO_PUMP]],[e.PICHU]:[[1,A.TAIL_WHIP],[1,A.THUNDER_SHOCK],[4,A.PLAY_NICE],[8,A.SWEET_KISS],[12,A.NUZZLE],[16,A.NASTY_PLOT],[20,A.CHARM]],[e.CLEFFA]:[[1,A.POUND],[1,A.SPLASH],[1,A.COPYCAT],[4,A.SING],[8,A.SWEET_KISS],[12,A.DISARMING_VOICE],[16,A.ENCORE],[20,A.CHARM]],[e.IGGLYBUFF]:[[1,A.POUND],[1,A.SING],[1,A.COPYCAT],[4,A.DEFENSE_CURL],[8,A.SWEET_KISS],[12,A.DISARMING_VOICE],[16,A.DISABLE],[20,A.CHARM]],[e.TOGEPI]:[[1,A.POUND],[1,A.GROWL],[4,A.SWEET_KISS],[8,A.LIFE_DEW],[12,A.CHARM],[16,A.ANCIENT_POWER],[20,A.YAWN],[24,A.METRONOME],[28,A.AFTER_YOU],[32,A.DOUBLE_EDGE],[36,A.SAFEGUARD],[40,A.FOLLOW_ME],[44,A.BATON_PASS],[48,A.LAST_RESORT],[52,A.WISH]],[e.TOGETIC]:[[k,A.FAIRY_WIND],[1,A.POUND],[1,A.GROWL],[1,A.SWEET_KISS],[1,A.LIFE_DEW],[12,A.CHARM],[16,A.ANCIENT_POWER],[20,A.YAWN],[24,A.METRONOME],[28,A.AFTER_YOU],[32,A.DOUBLE_EDGE],[36,A.SAFEGUARD],[40,A.FOLLOW_ME],[44,A.BATON_PASS],[48,A.LAST_RESORT],[52,A.WISH]],[e.NATU]:[[1,A.LEER],[1,A.PECK],[5,A.STORED_POWER],[10,A.TELEPORT],[15,A.CONFUSE_RAY],[20,A.NIGHT_SHADE],[26,A.PSYCHO_SHIFT],[30,A.POWER_SWAP],[35,A.PSYCHIC],[35,A.GUARD_SWAP],[40,A.WISH],[45,A.FUTURE_SIGHT]],[e.XATU]:[[k,A.AIR_SLASH],[1,A.LEER],[1,A.PECK],[1,A.TELEPORT],[1,A.TAILWIND],[1,A.STORED_POWER],[15,A.CONFUSE_RAY],[20,A.NIGHT_SHADE],[28,A.PSYCHO_SHIFT],[34,A.POWER_SWAP],[34,A.GUARD_SWAP],[41,A.PSYCHIC],[48,A.WISH],[55,A.FUTURE_SIGHT]],[e.MAREEP]:[[1,A.TACKLE],[1,A.GROWL],[4,A.THUNDER_WAVE],[8,A.THUNDER_SHOCK],[11,A.COTTON_SPORE],[15,A.CHARGE],[18,A.TAKE_DOWN],[22,A.ELECTRO_BALL],[25,A.CONFUSE_RAY],[29,A.POWER_GEM],[32,A.DISCHARGE],[36,A.COTTON_GUARD],[39,A.DAZZLING_GLEAM],[43,A.LIGHT_SCREEN],[46,A.THUNDER]],[e.FLAAFFY]:[[1,A.TACKLE],[1,A.GROWL],[6,A.THUNDER_SHOCK],[9,A.THUNDER_WAVE],[11,A.COTTON_SPORE],[16,A.CHARGE],[20,A.TAKE_DOWN],[25,A.ELECTRO_BALL],[29,A.CONFUSE_RAY],[34,A.POWER_GEM],[38,A.DISCHARGE],[43,A.COTTON_GUARD],[47,A.DAZZLING_GLEAM],[52,A.LIGHT_SCREEN],[56,A.THUNDER]],[e.AMPHAROS]:[[k,A.THUNDER_PUNCH],[1,A.FIRE_PUNCH],[1,A.TACKLE],[1,A.GROWL],[1,A.THUNDER_SHOCK],[1,A.THUNDER_WAVE],[1,A.ZAP_CANNON],[1,A.DRAGON_PULSE],[1,A.MAGNETIC_FLUX],[1,A.ION_DELUGE],[11,A.COTTON_SPORE],[16,A.CHARGE],[20,A.TAKE_DOWN],[25,A.ELECTRO_BALL],[29,A.CONFUSE_RAY],[35,A.POWER_GEM],[40,A.DISCHARGE],[46,A.COTTON_GUARD],[51,A.DAZZLING_GLEAM],[57,A.LIGHT_SCREEN],[62,A.THUNDER]],[e.BELLOSSOM]:[[k,A.PETAL_BLIZZARD],[1,A.ACID],[1,A.ABSORB],[1,A.MEGA_DRAIN],[1,A.GROWTH],[1,A.POISON_POWDER],[1,A.STUN_SPORE],[1,A.SLEEP_POWDER],[1,A.PETAL_DANCE],[1,A.TOXIC],[1,A.GIGA_DRAIN],[1,A.SWEET_SCENT],[1,A.MOONLIGHT],[1,A.QUIVER_DANCE],[1,A.GRASSY_TERRAIN],[1,A.MOONBLAST]],[e.MARILL]:[[1,A.SPLASH],[1,A.TACKLE],[1,A.TAIL_WHIP],[1,A.WATER_GUN],[1,A.DEFENSE_CURL],[1,A.ROLLOUT],[1,A.HELPING_HAND],[6,A.BUBBLE_BEAM],[9,A.CHARM],[12,A.SLAM],[15,A.BOUNCE],[19,A.AQUA_TAIL],[21,A.PLAY_ROUGH],[24,A.AQUA_RING],[27,A.RAIN_DANCE],[30,A.HYDRO_PUMP],[33,A.DOUBLE_EDGE],[36,A.SUPERPOWER]],[e.AZUMARILL]:[[1,A.SPLASH],[1,A.TACKLE],[1,A.TAIL_WHIP],[1,A.WATER_GUN],[1,A.DEFENSE_CURL],[1,A.ROLLOUT],[1,A.HELPING_HAND],[6,A.BUBBLE_BEAM],[9,A.CHARM],[12,A.SLAM],[15,A.BOUNCE],[21,A.AQUA_TAIL],[25,A.PLAY_ROUGH],[30,A.AQUA_RING],[35,A.RAIN_DANCE],[40,A.HYDRO_PUMP],[45,A.DOUBLE_EDGE],[50,A.SUPERPOWER]],[e.SUDOWOODO]:[[k,A.SLAM],[1,A.ROCK_THROW],[1,A.TACKLE],[1,A.FLAIL],[1,A.FAKE_TEARS],[1,A.HAMMER_ARM],[1,A.COPYCAT],[1,A.STONE_EDGE],[1,A.WOOD_HAMMER],[12,A.BLOCK],[16,A.MIMIC],[20,A.ROCK_TOMB],[24,A.TEARFUL_LOOK],[28,A.SUCKER_PUNCH],[32,A.ROCK_SLIDE],[36,A.LOW_KICK],[40,A.COUNTER],[44,A.DOUBLE_EDGE],[48,A.HEAD_SMASH]],[e.POLITOED]:[[k,A.BOUNCE],[V,A.BODY_SLAM],[V,A.DOUBLE_EDGE],[V,A.WATER_GUN],[V,A.BUBBLE_BEAM],[V,A.HYPNOSIS],[V,A.PERISH_SONG],[V,A.SWAGGER],[V,A.HYPER_VOICE],[V,A.MUD_SHOT],[V,A.EARTH_POWER],[1,A.RAIN_DANCE],[1,A.HYDRO_PUMP],[1,A.BELLY_DRUM],[1,A.POUND],[1,A.WATER_SPORT]],[e.HOPPIP]:[[1,A.TACKLE],[1,A.SPLASH],[4,A.TAIL_WHIP],[6,A.ABSORB],[8,A.FAIRY_WIND],[10,A.POISON_POWDER],[10,A.STUN_SPORE],[10,A.SLEEP_POWDER],[12,A.BULLET_SEED],[15,A.SYNTHESIS],[19,A.LEECH_SEED],[22,A.MEGA_DRAIN],[24,A.ACROBATICS],[27,A.COTTON_SPORE],[29,A.U_TURN],[32,A.GIGA_DRAIN],[35,A.BOUNCE],[38,A.MEMENTO]],[e.SKIPLOOM]:[[1,A.TAIL_WHIP],[1,A.ABSORB],[1,A.SPLASH],[1,A.SYNTHESIS],[8,A.TACKLE],[10,A.FAIRY_WIND],[12,A.POISON_POWDER],[12,A.STUN_SPORE],[12,A.SLEEP_POWDER],[15,A.BULLET_SEED],[20,A.LEECH_SEED],[24,A.MEGA_DRAIN],[28,A.ACROBATICS],[31,A.COTTON_SPORE],[34,A.U_TURN],[37,A.GIGA_DRAIN],[41,A.BOUNCE],[44,A.MEMENTO]],[e.JUMPLUFF]:[[1,A.TAIL_WHIP],[1,A.ABSORB],[1,A.SPLASH],[1,A.SYNTHESIS],[8,A.TACKLE],[10,A.FAIRY_WIND],[12,A.POISON_POWDER],[12,A.STUN_SPORE],[12,A.SLEEP_POWDER],[15,A.BULLET_SEED],[20,A.LEECH_SEED],[24,A.MEGA_DRAIN],[30,A.ACROBATICS],[35,A.COTTON_SPORE],[39,A.U_TURN],[43,A.GIGA_DRAIN],[49,A.BOUNCE],[55,A.MEMENTO]],[e.AIPOM]:[[1,A.SCRATCH],[1,A.TAIL_WHIP],[4,A.SAND_ATTACK],[8,A.ASTONISH],[11,A.BATON_PASS],[15,A.TICKLE],[18,A.FURY_SWIPES],[22,A.SWIFT],[25,A.SCREECH],[29,A.AGILITY],[32,A.DOUBLE_HIT],[36,A.FLING],[39,A.NASTY_PLOT],[43,A.LAST_RESORT]],[e.SUNKERN]:[[1,A.TACKLE],[1,A.GROWTH],[7,A.ABSORB],[10,A.MEGA_DRAIN],[16,A.RAZOR_LEAF],[19,A.WORRY_SEED],[22,A.GIGA_DRAIN],[25,A.ENDEAVOR],[28,A.SYNTHESIS],[31,A.SOLAR_BEAM],[34,A.DOUBLE_EDGE],[36,A.SUNNY_DAY],[39,A.SEED_BOMB]],[e.SUNFLORA]:[[V,A.SEED_BOMB],[1,A.POUND],[1,A.TACKLE],[1,A.GROWTH],[1,A.ENDEAVOR],[1,A.SYNTHESIS],[4,A.INGRAIN],[7,A.ABSORB],[10,A.MEGA_DRAIN],[13,A.LEECH_SEED],[16,A.RAZOR_LEAF],[19,A.WORRY_SEED],[22,A.GIGA_DRAIN],[25,A.BULLET_SEED],[28,A.PETAL_DANCE],[31,A.SOLAR_BEAM],[34,A.DOUBLE_EDGE],[39,A.SUNNY_DAY],[43,A.LEAF_STORM],[50,A.PETAL_BLIZZARD]],[e.YANMA]:[[1,A.TACKLE],[6,A.QUICK_ATTACK],[11,A.DOUBLE_TEAM],[14,A.AIR_CUTTER],[17,A.DETECT],[22,A.SUPERSONIC],[27,A.UPROAR],[30,A.BUG_BITE],[33,A.ANCIENT_POWER],[38,A.HYPNOSIS],[43,A.WING_ATTACK],[46,A.SCREECH],[49,A.U_TURN],[54,A.AIR_SLASH],[57,A.BUG_BUZZ]],[e.WOOPER]:[[1,A.TAIL_WHIP],[1,A.WATER_GUN],[4,A.RAIN_DANCE],[8,A.MUD_SHOT],[12,A.MIST],[12,A.HAZE],[16,A.SLAM],[21,A.YAWN],[24,A.AQUA_TAIL],[28,A.MUDDY_WATER],[32,A.AMNESIA],[36,A.TOXIC],[40,A.EARTHQUAKE]],[e.QUAGSIRE]:[[1,A.TAIL_WHIP],[1,A.WATER_GUN],[1,A.RAIN_DANCE],[1,A.MUD_SHOT],[12,A.MIST],[12,A.HAZE],[16,A.SLAM],[23,A.YAWN],[28,A.AQUA_TAIL],[34,A.MUDDY_WATER],[40,A.AMNESIA],[46,A.TOXIC],[52,A.EARTHQUAKE]],[e.ESPEON]:[[k,A.GLITZY_GLOW],[V,A.VEEVEE_VOLLEY],[1,A.TACKLE],[1,A.TAKE_DOWN],[1,A.DOUBLE_EDGE],[1,A.TAIL_WHIP],[1,A.BITE],[1,A.GROWL],[1,A.CHARM],[1,A.BATON_PASS],[1,A.HELPING_HAND],[1,A.COVET],[1,A.COPYCAT],[5,A.SAND_ATTACK],[10,A.CONFUSION],[15,A.QUICK_ATTACK],[20,A.BABY_DOLL_EYES],[25,A.SWIFT],[30,A.PSYBEAM],[35,A.MORNING_SUN],[40,A.POWER_SWAP],[45,A.PSYCHIC],[50,A.PSYCH_UP],[55,A.FUTURE_SIGHT],[60,A.LAST_RESORT]],[e.UMBREON]:[[k,A.BADDY_BAD],[V,A.VEEVEE_VOLLEY],[1,A.TACKLE],[1,A.TAKE_DOWN],[1,A.DOUBLE_EDGE],[1,A.TAIL_WHIP],[1,A.BITE],[1,A.GROWL],[1,A.SWIFT],[1,A.CHARM],[1,A.BATON_PASS],[1,A.HELPING_HAND],[1,A.COVET],[1,A.COPYCAT],[1,A.PURSUIT],[5,A.SAND_ATTACK],[10,A.SNARL],[15,A.QUICK_ATTACK],[20,A.BABY_DOLL_EYES],[25,A.CONFUSE_RAY],[30,A.ASSURANCE],[35,A.MOONLIGHT],[40,A.GUARD_SWAP],[45,A.DARK_PULSE],[50,A.SCREECH],[55,A.MEAN_LOOK],[60,A.LAST_RESORT]],[e.MURKROW]:[[1,A.PECK],[1,A.ASTONISH],[5,A.GUST],[11,A.HAZE],[15,A.WING_ATTACK],[21,A.NIGHT_SHADE],[25,A.ASSURANCE],[31,A.TAUNT],[35,A.MEAN_LOOK],[40,A.FOUL_PLAY],[50,A.SUCKER_PUNCH],[55,A.TORMENT],[60,A.QUASH]],[e.SLOWKING]:[[V,A.FUTURE_SIGHT],[V,A.CHILLY_RECEPTION],[1,A.POWER_GEM],[1,A.NASTY_PLOT],[1,A.SWAGGER],[1,A.TACKLE],[1,A.CURSE],[1,A.GROWL],[1,A.WATER_GUN],[9,A.YAWN],[12,A.CONFUSION],[15,A.DISABLE],[18,A.WATER_PULSE],[21,A.HEADBUTT],[24,A.ZEN_HEADBUTT],[27,A.AMNESIA],[30,A.SURF],[33,A.SLACK_OFF],[36,A.PSYCHIC],[39,A.PSYCH_UP],[42,A.RAIN_DANCE],[45,A.HEAL_PULSE]],[e.MISDREAVUS]:[[1,A.GROWL],[1,A.CONFUSION],[1,A.PSYWAVE],[10,A.ASTONISH],[14,A.CONFUSE_RAY],[19,A.MEAN_LOOK],[23,A.HEX],[28,A.PSYBEAM],[32,A.PAIN_SPLIT],[37,A.PAYBACK],[41,A.SHADOW_BALL],[46,A.PERISH_SONG],[50,A.POWER_GEM]],[e.UNOWN]:[[1,A.HIDDEN_POWER]],[e.WOBBUFFET]:[[k,A.COUNTER],[k,A.DESTINY_BOND],[k,A.SAFEGUARD],[k,A.MIRROR_COAT],[1,A.COUNTER],[1,A.DESTINY_BOND],[1,A.SAFEGUARD],[1,A.MIRROR_COAT],[1,A.AMNESIA],[1,A.SPLASH],[1,A.CHARM],[1,A.ENCORE]],[e.GIRAFARIG]:[[1,A.TACKLE],[1,A.GROWL],[1,A.ASTONISH],[1,A.POWER_SWAP],[1,A.GUARD_SWAP],[5,A.CONFUSION],[10,A.ASSURANCE],[14,A.STOMP],[19,A.PSYBEAM],[23,A.AGILITY],[28,A.DOUBLE_HIT],[32,A.TWIN_BEAM],[37,A.CRUNCH],[41,A.BATON_PASS],[46,A.NASTY_PLOT],[50,A.PSYCHIC]],[e.PINECO]:[[1,A.TACKLE],[1,A.PROTECT],[6,A.SELF_DESTRUCT],[9,A.BUG_BITE],[12,A.TAKE_DOWN],[17,A.RAPID_SPIN],[20,A.ROLLOUT],[23,A.CURSE],[28,A.SPIKES],[31,A.PAYBACK],[34,A.EXPLOSION],[39,A.IRON_DEFENSE],[42,A.GYRO_BALL],[45,A.DOUBLE_EDGE]],[e.FORRETRESS]:[[k,A.HEAVY_SLAM],[1,A.TACKLE],[1,A.SELF_DESTRUCT],[1,A.PROTECT],[1,A.ZAP_CANNON],[1,A.TOXIC_SPIKES],[1,A.MAGNET_RISE],[1,A.BUG_BITE],[1,A.MIRROR_SHOT],[12,A.TAKE_DOWN],[17,A.RAPID_SPIN],[20,A.ROLLOUT],[23,A.CURSE],[28,A.SPIKES],[32,A.PAYBACK],[36,A.EXPLOSION],[42,A.IRON_DEFENSE],[46,A.GYRO_BALL],[50,A.DOUBLE_EDGE]],[e.DUNSPARCE]:[[1,A.DEFENSE_CURL],[1,A.FLAIL],[1,A.TACKLE],[4,A.MUD_SLAP],[8,A.ROLLOUT],[12,A.GLARE],[16,A.SCREECH],[20,A.ANCIENT_POWER],[24,A.DRILL_RUN],[28,A.YAWN],[32,A.HYPER_DRILL],[36,A.ROOST],[40,A.DRAGON_RUSH],[44,A.COIL],[48,A.DOUBLE_EDGE],[52,A.ENDEAVOR]],[e.GLIGAR]:[[1,A.POISON_STING],[4,A.SAND_ATTACK],[7,A.HARDEN],[10,A.KNOCK_OFF],[13,A.QUICK_ATTACK],[16,A.FURY_CUTTER],[19,A.POISON_TAIL],[22,A.ACROBATICS],[27,A.SLASH],[30,A.U_TURN],[35,A.SCREECH],[40,A.X_SCISSOR],[45,A.CRABHAMMER],[50,A.SWORDS_DANCE]],[e.STEELIX]:[[1,A.BIND],[1,A.TACKLE],[1,A.ROCK_THROW],[1,A.HARDEN],[1,A.MUD_SPORT],[1,A.CRUNCH],[1,A.ROCK_POLISH],[1,A.THUNDER_FANG],[1,A.ICE_FANG],[1,A.FIRE_FANG],[4,A.SMACK_DOWN],[8,A.AUTOTOMIZE],[12,A.DRAGON_BREATH],[16,A.CURSE],[20,A.ROCK_SLIDE],[22,A.GYRO_BALL],[24,A.SCREECH],[28,A.SAND_TOMB],[32,A.STEALTH_ROCK],[36,A.SLAM],[40,A.SANDSTORM],[44,A.DIG],[48,A.IRON_TAIL],[52,A.STONE_EDGE],[56,A.DOUBLE_EDGE],[60,A.MAGNET_RISE]],[e.SNUBBULL]:[[1,A.TACKLE],[1,A.TAIL_WHIP],[1,A.SCARY_FACE],[1,A.CHARM],[1,A.THUNDER_FANG],[1,A.ICE_FANG],[1,A.FIRE_FANG],[7,A.BITE],[13,A.LICK],[19,A.HEADBUTT],[25,A.ROAR],[31,A.LAST_RESORT],[37,A.PLAY_ROUGH],[43,A.PAYBACK],[49,A.CRUNCH]],[e.GRANBULL]:[[1,A.TACKLE],[1,A.TAIL_WHIP],[1,A.SCARY_FACE],[1,A.OUTRAGE],[1,A.CHARM],[1,A.THUNDER_FANG],[1,A.ICE_FANG],[1,A.FIRE_FANG],[7,A.BITE],[13,A.LICK],[19,A.HEADBUTT],[27,A.ROAR],[35,A.LAST_RESORT],[43,A.PLAY_ROUGH],[51,A.PAYBACK],[59,A.CRUNCH]],[e.QWILFISH]:[[1,A.TACKLE],[1,A.POISON_STING],[4,A.HARDEN],[8,A.WATER_GUN],[12,A.FELL_STINGER],[16,A.MINIMIZE],[20,A.SPIKES],[24,A.BRINE],[28,A.POISON_JAB],[32,A.PIN_MISSILE],[36,A.TOXIC_SPIKES],[40,A.STOCKPILE],[40,A.SPIT_UP],[44,A.TOXIC],[48,A.AQUA_TAIL],[52,A.ACUPRESSURE],[56,A.DESTINY_BOND]],[e.SCIZOR]:[[k,A.BULLET_PUNCH],[1,A.WING_ATTACK],[1,A.LEER],[1,A.AGILITY],[1,A.QUICK_ATTACK],[1,A.FALSE_SWIPE],[1,A.FURY_CUTTER],[1,A.AIR_SLASH],[12,A.METAL_CLAW],[16,A.DOUBLE_TEAM],[20,A.DOUBLE_HIT],[24,A.SLASH],[28,A.FOCUS_ENERGY],[30,A.STEEL_WING],[32,A.IRON_DEFENSE],[36,A.IRON_HEAD],[40,A.X_SCISSOR],[44,A.SWORDS_DANCE]],[e.SHUCKLE]:[[1,A.WRAP],[1,A.WITHDRAW],[1,A.BIDE],[1,A.CONSTRICT],[5,A.ROLLOUT],[10,A.STRUGGLE_BUG],[15,A.ROCK_THROW],[20,A.SAFEGUARD],[25,A.REST],[30,A.BUG_BITE],[35,A.GUARD_SPLIT],[35,A.POWER_SPLIT],[40,A.ROCK_SLIDE],[45,A.GASTRO_ACID],[50,A.STICKY_WEB],[55,A.POWER_TRICK],[60,A.STONE_EDGE],[65,A.SHELL_SMASH]],[e.HERACROSS]:[[1,A.TACKLE],[1,A.LEER],[1,A.ARM_THRUST],[5,A.FURY_ATTACK],[10,A.ENDURE],[15,A.AERIAL_ACE],[20,A.HORN_ATTACK],[25,A.COUNTER],[30,A.BRICK_BREAK],[35,A.PIN_MISSILE],[40,A.THROAT_CHOP],[45,A.THRASH],[50,A.SWORDS_DANCE],[55,A.MEGAHORN],[60,A.CLOSE_COMBAT]],[e.SNEASEL]:[[1,A.SCRATCH],[1,A.LEER],[6,A.TAUNT],[12,A.QUICK_ATTACK],[18,A.METAL_CLAW],[24,A.ICY_WIND],[30,A.FURY_SWIPES],[36,A.HONE_CLAWS],[42,A.BEAT_UP],[48,A.AGILITY],[54,A.SCREECH],[60,A.SLASH]],[e.TEDDIURSA]:[[1,A.SCRATCH],[1,A.LICK],[1,A.COVET],[1,A.FLING],[1,A.BABY_DOLL_EYES],[8,A.FURY_SWIPES],[13,A.PAYBACK],[17,A.SWEET_SCENT],[22,A.SLASH],[25,A.PLAY_NICE],[29,A.PLAY_ROUGH],[33,A.CHARM],[37,A.REST],[37,A.SNORE],[41,A.THRASH]],[e.URSARING]:[[1,A.SCRATCH],[1,A.LEER],[1,A.LICK],[1,A.COVET],[1,A.FLING],[1,A.BABY_DOLL_EYES],[1,A.FAKE_TEARS],[1,A.CHARM],[8,A.FURY_SWIPES],[13,A.PAYBACK],[17,A.SWEET_SCENT],[22,A.SLASH],[25,A.PLAY_NICE],[29,A.PLAY_ROUGH],[35,A.SCARY_FACE],[41,A.REST],[41,A.SNORE],[48,A.HIGH_HORSEPOWER],[56,A.THRASH],[64,A.HAMMER_ARM]],[e.SLUGMA]:[[1,A.SMOG],[1,A.YAWN],[5,A.EMBER],[8,A.ROCK_THROW],[13,A.HARDEN],[20,A.CLEAR_SMOG],[22,A.ANCIENT_POWER],[27,A.INCINERATE],[29,A.ROCK_SLIDE],[34,A.LAVA_PLUME],[36,A.AMNESIA],[41,A.BODY_SLAM],[43,A.RECOVER],[48,A.FLAMETHROWER],[50,A.EARTH_POWER]],[e.MAGCARGO]:[[k,A.SHELL_SMASH],[1,A.EMBER],[1,A.ROCK_THROW],[1,A.SMOG],[1,A.YAWN],[1,A.EARTH_POWER],[13,A.HARDEN],[20,A.CLEAR_SMOG],[22,A.ANCIENT_POWER],[27,A.INCINERATE],[29,A.ROCK_SLIDE],[34,A.LAVA_PLUME],[36,A.AMNESIA],[43,A.BODY_SLAM],[47,A.RECOVER],[54,A.FLAMETHROWER]],[e.SWINUB]:[[1,A.TACKLE],[1,A.MUD_SLAP],[1,A.ODOR_SLEUTH],[5,A.POWDER_SNOW],[10,A.FLAIL],[15,A.ICE_SHARD],[20,A.MIST],[25,A.ENDURE],[30,A.ICY_WIND],[35,A.AMNESIA],[40,A.TAKE_DOWN],[45,A.EARTHQUAKE],[50,A.BLIZZARD]],[e.PILOSWINE]:[[k,A.ICE_FANG],[1,A.TACKLE],[1,A.FLAIL],[1,A.POWDER_SNOW],[1,A.MUD_SLAP],[1,A.ODOR_SLEUTH],[1,A.ANCIENT_POWER],[15,A.ICE_SHARD],[20,A.MIST],[25,A.ENDURE],[30,A.ICY_WIND],[37,A.AMNESIA],[44,A.TAKE_DOWN],[51,A.EARTHQUAKE],[58,A.BLIZZARD],[65,A.THRASH]],[e.CORSOLA]:[[1,A.TACKLE],[1,A.HARDEN],[5,A.WATER_GUN],[10,A.AQUA_RING],[15,A.ENDURE],[20,A.ANCIENT_POWER],[25,A.BUBBLE_BEAM],[30,A.FLAIL],[35,A.LIFE_DEW],[40,A.POWER_GEM],[45,A.EARTH_POWER],[50,A.RECOVER],[55,A.MIRROR_COAT]],[e.REMORAID]:[[1,A.WATER_GUN],[1,A.HELPING_HAND],[4,A.WATER_PULSE],[8,A.FOCUS_ENERGY],[12,A.PSYBEAM],[16,A.AURORA_BEAM],[20,A.BUBBLE_BEAM],[24,A.LOCK_ON],[28,A.BULLET_SEED],[32,A.ICE_BEAM],[36,A.HYDRO_PUMP],[40,A.SOAK],[44,A.HYPER_BEAM]],[e.OCTILLERY]:[[k,A.OCTAZOOKA],[1,A.WRAP],[1,A.CONSTRICT],[1,A.WATER_GUN],[1,A.FOCUS_ENERGY],[1,A.HELPING_HAND],[1,A.ROCK_BLAST],[1,A.WATER_PULSE],[1,A.GUNK_SHOT],[12,A.PSYBEAM],[16,A.AURORA_BEAM],[20,A.BUBBLE_BEAM],[24,A.LOCK_ON],[30,A.BULLET_SEED],[36,A.ICE_BEAM],[42,A.HYDRO_PUMP],[48,A.SOAK],[54,A.HYPER_BEAM]],[e.DELIBIRD]:[[1,A.PRESENT],[1,A.METRONOME],[5,A.FAKE_OUT],[5,A.POWDER_SNOW],[6,A.MIST],[10,A.ICE_SHARD],[15,A.AERIAL_ACE],[20,A.ICY_WIND],[25,A.DRILL_PECK],[30,A.ICE_PUNCH],[35,A.HAZE],[40,A.AIR_SLASH],[45,A.TAILWIND],[50,A.SNOWSCAPE],[55,A.BLIZZARD],[60,A.BRAVE_BIRD]],[e.MANTINE]:[[1,A.WING_ATTACK],[1,A.TACKLE],[1,A.SUPERSONIC],[1,A.WATER_GUN],[1,A.PSYBEAM],[1,A.SIGNAL_BEAM],[1,A.BULLET_SEED],[1,A.ROOST],[12,A.WATER_PULSE],[16,A.WIDE_GUARD],[20,A.AGILITY],[24,A.BUBBLE_BEAM],[28,A.HEADBUTT],[32,A.AIR_SLASH],[36,A.AQUA_RING],[40,A.BOUNCE],[44,A.TAKE_DOWN],[48,A.HYDRO_PUMP]],[e.SKARMORY]:[[1,A.LEER],[1,A.PECK],[4,A.SAND_ATTACK],[8,A.FURY_ATTACK],[12,A.METAL_CLAW],[16,A.AGILITY],[20,A.WING_ATTACK],[24,A.SLASH],[28,A.STEEL_WING],[32,A.PAYBACK],[36,A.DRILL_PECK],[40,A.METAL_SOUND],[44,A.SPIKES],[48,A.IRON_DEFENSE],[52,A.BRAVE_BIRD]],[e.HOUNDOUR]:[[1,A.LEER],[1,A.EMBER],[4,A.HOWL],[8,A.SMOG],[13,A.ROAR],[16,A.BITE],[20,A.INCINERATE],[25,A.BEAT_UP],[28,A.FIRE_FANG],[32,A.TORMENT],[37,A.COMEUPPANCE],[40,A.FOUL_PLAY],[44,A.FLAMETHROWER],[49,A.CRUNCH],[52,A.NASTY_PLOT],[56,A.INFERNO]],[e.HOUNDOOM]:[[1,A.LEER],[1,A.EMBER],[1,A.SMOG],[1,A.HOWL],[1,A.NASTY_PLOT],[1,A.THUNDER_FANG],[13,A.ROAR],[16,A.BITE],[20,A.INCINERATE],[26,A.BEAT_UP],[30,A.FIRE_FANG],[35,A.TORMENT],[41,A.COMEUPPANCE],[45,A.FOUL_PLAY],[50,A.FLAMETHROWER],[56,A.CRUNCH],[62,A.INFERNO]],[e.KINGDRA]:[[V,A.LASER_FOCUS],[1,A.LEER],[1,A.WATER_GUN],[1,A.SMOKESCREEN],[1,A.TWISTER],[1,A.WHIRLPOOL],[1,A.YAWN],[15,A.FOCUS_ENERGY],[20,A.DRAGON_BREATH],[25,A.BUBBLE_BEAM],[30,A.AGILITY],[37,A.WATER_PULSE],[44,A.DRAGON_PULSE],[51,A.HYDRO_PUMP],[58,A.DRAGON_DANCE],[65,A.RAIN_DANCE],[72,A.WAVE_CRASH]],[e.PHANPY]:[[1,A.TACKLE],[1,A.GROWL],[1,A.DEFENSE_CURL],[1,A.ODOR_SLEUTH],[6,A.FLAIL],[10,A.ROLLOUT],[15,A.BULLDOZE],[19,A.ENDURE],[24,A.SLAM],[28,A.TAKE_DOWN],[33,A.CHARM],[37,A.LAST_RESORT],[42,A.DOUBLE_EDGE]],[e.DONPHAN]:[[k,A.FURY_ATTACK],[1,A.TACKLE],[1,A.GROWL],[1,A.HORN_ATTACK],[1,A.DEFENSE_CURL],[1,A.ODOR_SLEUTH],[1,A.FLAIL],[1,A.ENDURE],[1,A.TAKE_DOWN],[1,A.CHARM],[1,A.LAST_RESORT],[1,A.DOUBLE_EDGE],[1,A.THUNDER_FANG],[1,A.FIRE_FANG],[1,A.BULLDOZE],[6,A.RAPID_SPIN],[10,A.ROLLOUT],[15,A.ASSURANCE],[19,A.KNOCK_OFF],[24,A.SLAM],[30,A.STOMPING_TANTRUM],[37,A.SCARY_FACE],[43,A.EARTHQUAKE],[50,A.GIGA_IMPACT]],[e.PORYGON2]:[[1,A.TACKLE],[1,A.DEFENSE_CURL],[1,A.CONVERSION],[1,A.RECYCLE],[1,A.MAGNET_RISE],[1,A.MAGIC_COAT],[15,A.THUNDER_SHOCK],[20,A.PSYBEAM],[25,A.CONVERSION_2],[30,A.AGILITY],[35,A.RECOVER],[40,A.DISCHARGE],[45,A.TRI_ATTACK],[50,A.LOCK_ON],[55,A.ZAP_CANNON],[60,A.HYPER_BEAM]],[e.STANTLER]:[[1,A.TACKLE],[1,A.ME_FIRST],[3,A.LEER],[7,A.ASTONISH],[10,A.HYPNOSIS],[13,A.STOMP],[16,A.SAND_ATTACK],[21,A.TAKE_DOWN],[23,A.CONFUSE_RAY],[25,A.PSYSHIELD_BASH],[27,A.CALM_MIND],[32,A.ROLE_PLAY],[37,A.ZEN_HEADBUTT],[49,A.IMPRISON],[55,A.DOUBLE_EDGE]],[e.SMEARGLE]:[[1,A.SKETCH],[11,A.SKETCH],[21,A.SKETCH],[31,A.SKETCH],[41,A.SKETCH],[51,A.SKETCH],[61,A.SKETCH],[71,A.SKETCH],[81,A.SKETCH],[91,A.SKETCH]],[e.TYROGUE]:[[1,A.TACKLE],[1,A.FOCUS_ENERGY],[1,A.FAKE_OUT],[1,A.HELPING_HAND],[10,A.LOW_SWEEP],[10,A.MACH_PUNCH],[10,A.RAPID_SPIN]],[e.HITMONTOP]:[[k,A.TRIPLE_KICK],[1,A.TACKLE],[1,A.FOCUS_ENERGY],[1,A.RAPID_SPIN],[1,A.FAKE_OUT],[1,A.HELPING_HAND],[1,A.FEINT],[1,A.PURSUIT],[1,A.ROLLING_KICK],[1,A.LOW_SWEEP],[1,A.MACH_PUNCH],[4,A.QUICK_ATTACK],[8,A.GYRO_BALL],[12,A.DETECT],[16,A.REVENGE],[21,A.WIDE_GUARD],[21,A.QUICK_GUARD],[24,A.SUCKER_PUNCH],[28,A.AGILITY],[32,A.DIG],[36,A.CLOSE_COMBAT],[40,A.COUNTER],[44,A.ENDEAVOR]],[e.SMOOCHUM]:[[1,A.POUND],[1,A.LICK],[4,A.POWDER_SNOW],[8,A.COPYCAT],[12,A.CONFUSION],[16,A.COVET],[20,A.SING],[24,A.FAKE_TEARS],[28,A.ICE_PUNCH],[32,A.PSYCHIC],[36,A.SWEET_KISS],[40,A.MEAN_LOOK],[44,A.PERISH_SONG],[48,A.BLIZZARD]],[e.ELEKID]:[[1,A.LEER],[1,A.QUICK_ATTACK],[4,A.THUNDER_SHOCK],[8,A.CHARGE],[12,A.SWIFT],[16,A.SHOCK_WAVE],[20,A.THUNDER_WAVE],[24,A.SCREECH],[28,A.THUNDER_PUNCH],[32,A.DISCHARGE],[36,A.LOW_KICK],[40,A.THUNDERBOLT],[44,A.LIGHT_SCREEN],[48,A.THUNDER]],[e.MAGBY]:[[1,A.LEER],[1,A.SMOG],[4,A.EMBER],[8,A.SMOKESCREEN],[12,A.CLEAR_SMOG],[16,A.FLAME_WHEEL],[20,A.CONFUSE_RAY],[24,A.SCARY_FACE],[28,A.FIRE_PUNCH],[32,A.LAVA_PLUME],[36,A.LOW_KICK],[40,A.FLAMETHROWER],[44,A.SUNNY_DAY],[48,A.FIRE_BLAST]],[e.MILTANK]:[[1,A.TACKLE],[1,A.GROWL],[5,A.ROLLOUT],[10,A.DEFENSE_CURL],[15,A.STOMP],[20,A.HEAL_BELL],[25,A.HEADBUTT],[30,A.ZEN_HEADBUTT],[35,A.MILK_DRINK],[40,A.BODY_SLAM],[45,A.PLAY_ROUGH],[50,A.CHARM],[55,A.HIGH_HORSEPOWER]],[e.BLISSEY]:[[1,A.POUND],[1,A.DEFENSE_CURL],[1,A.SWEET_KISS],[1,A.CHARM],[1,A.COVET],[1,A.COPYCAT],[1,A.DISARMING_VOICE],[4,A.TAIL_WHIP],[8,A.ECHOED_VOICE],[12,A.LIFE_DEW],[16,A.SING],[20,A.FLING],[24,A.TAKE_DOWN],[28,A.HEAL_PULSE],[32,A.HELPING_HAND],[36,A.LIGHT_SCREEN],[40,A.DOUBLE_EDGE],[44,A.SOFT_BOILED],[48,A.LAST_RESORT],[52,A.HEALING_WISH]],[e.RAIKOU]:[[1,A.LEER],[1,A.THUNDER_SHOCK],[1,A.QUICK_ATTACK],[1,A.EXTREME_SPEED],[1,A.CHARGE],[6,A.SPARK],[12,A.BITE],[18,A.CALM_MIND],[24,A.ROAR],[30,A.THUNDER_FANG],[36,A.HOWL],[42,A.CRUNCH],[48,A.EXTRASENSORY],[54,A.DISCHARGE],[60,A.REFLECT],[66,A.RAIN_DANCE],[72,A.THUNDER],[78,A.ZAP_CANNON]],[e.ENTEI]:[[V,A.SACRED_FIRE],[V,A.EXTREME_SPEED],[1,A.STOMP],[1,A.LEER],[1,A.EMBER],[1,A.SMOKESCREEN],[6,A.FLAME_WHEEL],[12,A.BITE],[18,A.CALM_MIND],[24,A.ROAR],[30,A.FIRE_FANG],[36,A.SCARY_FACE],[42,A.CRUNCH],[48,A.EXTRASENSORY],[54,A.LAVA_PLUME],[60,A.SWAGGER],[66,A.SUNNY_DAY],[72,A.FIRE_BLAST],[78,A.ERUPTION]],[e.SUICUNE]:[[V,A.EXTREME_SPEED],[V,A.SHEER_COLD],[1,A.GUST],[1,A.LEER],[1,A.MIST],[1,A.WATER_GUN],[6,A.WATER_PULSE],[12,A.BITE],[18,A.CALM_MIND],[24,A.ROAR],[30,A.ICE_FANG],[36,A.TAILWIND],[42,A.CRUNCH],[48,A.EXTRASENSORY],[54,A.SURF],[60,A.MIRROR_COAT],[66,A.RAIN_DANCE],[72,A.HYDRO_PUMP],[78,A.BLIZZARD]],[e.LARVITAR]:[[1,A.TACKLE],[1,A.LEER],[3,A.ROCK_THROW],[6,A.PAYBACK],[9,A.BITE],[12,A.SCARY_FACE],[15,A.ROCK_SLIDE],[18,A.STOMPING_TANTRUM],[21,A.SCREECH],[24,A.SMACK_DOWN],[27,A.CRUNCH],[31,A.EARTHQUAKE],[33,A.STONE_EDGE],[36,A.THRASH],[39,A.SANDSTORM],[42,A.HYPER_BEAM]],[e.PUPITAR]:[[k,A.IRON_DEFENSE],[1,A.TACKLE],[1,A.LEER],[1,A.ROCK_THROW],[1,A.PAYBACK],[9,A.BITE],[12,A.SCARY_FACE],[15,A.ROCK_SLIDE],[18,A.STOMPING_TANTRUM],[21,A.SCREECH],[24,A.SMACK_DOWN],[27,A.CRUNCH],[33,A.EARTHQUAKE],[37,A.STONE_EDGE],[42,A.THRASH],[47,A.SANDSTORM],[52,A.HYPER_BEAM]],[e.TYRANITAR]:[[1,A.TACKLE],[1,A.LEER],[1,A.ROCK_THROW],[1,A.IRON_DEFENSE],[1,A.PAYBACK],[1,A.DARK_PULSE],[1,A.THUNDER_FANG],[1,A.ICE_FANG],[1,A.FIRE_FANG],[9,A.BITE],[12,A.SCARY_FACE],[15,A.ROCK_SLIDE],[18,A.STOMPING_TANTRUM],[21,A.SCREECH],[24,A.SMACK_DOWN],[27,A.CRUNCH],[33,A.EARTHQUAKE],[37,A.STONE_EDGE],[42,A.THRASH],[47,A.SANDSTORM],[52,A.HYPER_BEAM],[59,A.GIGA_IMPACT]],[e.LUGIA]:[[V,A.DRAGON_RUSH],[1,A.GUST],[1,A.WHIRLWIND],[1,A.ANCIENT_POWER],[1,A.WEATHER_BALL],[9,A.MIST],[18,A.SAFEGUARD],[27,A.CALM_MIND],[36,A.EXTRASENSORY],[45,A.RECOVER],[54,A.AEROBLAST],[63,A.RAIN_DANCE],[72,A.HYDRO_PUMP],[81,A.FUTURE_SIGHT],[90,A.SKY_ATTACK]],[e.HO_OH]:[[1,A.GUST],[1,A.WHIRLWIND],[1,A.ANCIENT_POWER],[1,A.WEATHER_BALL],[9,A.LIFE_DEW],[18,A.SAFEGUARD],[27,A.CALM_MIND],[36,A.EXTRASENSORY],[45,A.RECOVER],[54,A.SACRED_FIRE],[63,A.SUNNY_DAY],[72,A.FIRE_BLAST],[81,A.FUTURE_SIGHT],[90,A.SKY_ATTACK],[99,A.OVERHEAT]],[e.CELEBI]:[[1,A.CONFUSION],[1,A.HEAL_BELL],[10,A.MAGICAL_LEAF],[20,A.BATON_PASS],[30,A.ANCIENT_POWER],[40,A.LIFE_DEW],[50,A.LEECH_SEED],[55,A.HEAL_BLOCK],[60,A.RECOVER],[70,A.FUTURE_SIGHT],[80,A.HEALING_WISH],[90,A.LEAF_STORM],[100,A.PERISH_SONG]],[e.TREECKO]:[[1,A.POUND],[1,A.LEER],[3,A.LEAFAGE],[6,A.QUICK_ATTACK],[9,A.MEGA_DRAIN],[12,A.DETECT],[15,A.QUICK_GUARD],[18,A.ASSURANCE],[21,A.GIGA_DRAIN],[24,A.SLAM],[27,A.DOUBLE_TEAM],[30,A.ENERGY_BALL],[33,A.SCREECH],[36,A.ENDEAVOR],[39,A.LEAF_STORM]],[e.GROVYLE]:[[V,A.FALSE_SWIPE],[V,A.FURY_CUTTER],[V,A.X_SCISSOR],[V,A.ENERGY_BALL],[1,A.POUND],[1,A.LEER],[1,A.LEAFAGE],[1,A.QUICK_ATTACK],[9,A.MEGA_DRAIN],[12,A.DETECT],[15,A.QUICK_GUARD],[20,A.ASSURANCE],[25,A.GIGA_DRAIN],[30,A.SLAM],[35,A.DOUBLE_TEAM],[40,A.LEAF_BLADE],[45,A.SCREECH],[50,A.ENDEAVOR],[55,A.LEAF_STORM]],[e.SCEPTILE]:[[k,A.LEAF_BLADE],[V,A.FALSE_SWIPE],[V,A.FURY_CUTTER],[V,A.X_SCISSOR],[V,A.ENERGY_BALL],[V,A.SHED_TAIL],[1,A.POUND],[1,A.LEER],[1,A.LEAFAGE],[1,A.QUICK_ATTACK],[1,A.DUAL_CHOP],[5,A.MEGA_DRAIN],[12,A.DETECT],[15,A.QUICK_GUARD],[20,A.ASSURANCE],[25,A.GIGA_DRAIN],[30,A.SLAM],[35,A.DOUBLE_TEAM],[42,A.SCREECH],[49,A.ENDEAVOR],[56,A.LEAF_STORM]],[e.TORCHIC]:[[1,A.SCRATCH],[1,A.GROWL],[3,A.EMBER],[6,A.QUICK_ATTACK],[9,A.FLAME_CHARGE],[12,A.DETECT],[15,A.SAND_ATTACK],[18,A.AERIAL_ACE],[21,A.SLASH],[24,A.BOUNCE],[27,A.FOCUS_ENERGY],[30,A.FLAMETHROWER],[33,A.FEATHER_DANCE],[36,A.REVERSAL],[39,A.FLARE_BLITZ]],[e.COMBUSKEN]:[[k,A.DOUBLE_KICK],[V,A.FLAMETHROWER],[V,A.FEATHER_DANCE],[1,A.SCRATCH],[1,A.GROWL],[1,A.EMBER],[1,A.QUICK_ATTACK],[9,A.FLAME_CHARGE],[12,A.DETECT],[15,A.SAND_ATTACK],[20,A.AERIAL_ACE],[25,A.SLASH],[30,A.BOUNCE],[35,A.FOCUS_ENERGY],[40,A.BLAZE_KICK],[45,A.BULK_UP],[50,A.REVERSAL],[55,A.FLARE_BLITZ]],[e.BLAZIKEN]:[[k,A.BLAZE_KICK],[V,A.FIRE_PUNCH],[V,A.EMBER],[V,A.FLAMETHROWER],[V,A.FEATHER_DANCE],[1,A.DOUBLE_KICK],[1,A.SCRATCH],[1,A.GROWL],[1,A.QUICK_ATTACK],[9,A.FLAME_CHARGE],[12,A.DETECT],[15,A.SAND_ATTACK],[20,A.AERIAL_ACE],[25,A.SLASH],[30,A.BOUNCE],[35,A.FOCUS_ENERGY],[42,A.BULK_UP],[49,A.REVERSAL],[56,A.FLARE_BLITZ],[63,A.BRAVE_BIRD]],[e.MUDKIP]:[[1,A.TACKLE],[1,A.GROWL],[3,A.WATER_GUN],[6,A.ROCK_SMASH],[9,A.ROCK_THROW],[12,A.PROTECT],[15,A.SUPERSONIC],[18,A.WATER_PULSE],[21,A.ROCK_SLIDE],[24,A.TAKE_DOWN],[27,A.AMNESIA],[30,A.SURF],[33,A.SCREECH],[36,A.ENDEAVOR],[39,A.HYDRO_PUMP]],[e.MARSHTOMP]:[[k,A.MUD_SHOT],[V,A.SURF],[V,A.ROCK_SMASH],[1,A.TACKLE],[1,A.GROWL],[1,A.WATER_GUN],[9,A.ROCK_THROW],[12,A.PROTECT],[15,A.SUPERSONIC],[20,A.WATER_PULSE],[25,A.ROCK_SLIDE],[30,A.TAKE_DOWN],[35,A.AMNESIA],[40,A.MUDDY_WATER],[45,A.SCREECH],[50,A.ENDEAVOR],[55,A.HYDRO_PUMP]],[e.SWAMPERT]:[[V,A.SURF],[V,A.EARTHQUAKE],[V,A.ROCK_SMASH],[V,A.HAMMER_ARM],[1,A.MUD_SHOT],[1,A.TACKLE],[1,A.GROWL],[1,A.WATER_GUN],[9,A.ROCK_THROW],[12,A.PROTECT],[15,A.SUPERSONIC],[20,A.WATER_PULSE],[25,A.ROCK_SLIDE],[30,A.TAKE_DOWN],[35,A.AMNESIA],[42,A.MUDDY_WATER],[49,A.SCREECH],[56,A.ENDEAVOR],[63,A.HYDRO_PUMP]],[e.POOCHYENA]:[[1,A.TACKLE],[4,A.HOWL],[7,A.SAND_ATTACK],[10,A.BITE],[13,A.LEER],[16,A.ROAR],[19,A.SWAGGER],[22,A.ASSURANCE],[25,A.SCARY_FACE],[28,A.TAUNT],[31,A.CRUNCH],[34,A.YAWN],[36,A.TAKE_DOWN],[40,A.SUCKER_PUNCH],[44,A.PLAY_ROUGH]],[e.MIGHTYENA]:[[k,A.SNARL],[1,A.SAND_ATTACK],[1,A.TACKLE],[1,A.BITE],[1,A.THIEF],[1,A.CRUNCH],[1,A.THUNDER_FANG],[1,A.ICE_FANG],[1,A.FIRE_FANG],[13,A.LEER],[13,A.HOWL],[16,A.ROAR],[20,A.SWAGGER],[24,A.ASSURANCE],[28,A.SCARY_FACE],[36,A.TAUNT],[44,A.YAWN],[48,A.TAKE_DOWN],[52,A.SUCKER_PUNCH],[56,A.PLAY_ROUGH]],[e.ZIGZAGOON]:[[1,A.TACKLE],[1,A.GROWL],[3,A.SAND_ATTACK],[6,A.TAIL_WHIP],[9,A.COVET],[12,A.HEADBUTT],[15,A.BABY_DOLL_EYES],[18,A.PIN_MISSILE],[21,A.REST],[24,A.TAKE_DOWN],[27,A.FLING],[30,A.FLAIL],[33,A.BELLY_DRUM],[36,A.DOUBLE_EDGE]],[e.LINOONE]:[[k,A.SLASH],[1,A.SAND_ATTACK],[1,A.TACKLE],[1,A.TAIL_WHIP],[1,A.PIN_MISSILE],[1,A.GROWL],[1,A.SWITCHEROO],[1,A.BABY_DOLL_EYES],[1,A.ROTOTILLER],[9,A.COVET],[12,A.HEADBUTT],[15,A.HONE_CLAWS],[18,A.FURY_SWIPES],[23,A.REST],[28,A.TAKE_DOWN],[33,A.FLING],[38,A.FLAIL],[43,A.BELLY_DRUM],[48,A.DOUBLE_EDGE]],[e.WURMPLE]:[[1,A.TACKLE],[1,A.STRING_SHOT],[5,A.POISON_STING],[15,A.BUG_BITE]],[e.SILCOON]:[[k,A.HARDEN],[V,A.TACKLE],[V,A.STRING_SHOT],[V,A.POISON_STING],[V,A.BUG_BITE],[1,A.HARDEN]],[e.BEAUTIFLY]:[[k,A.GUST],[1,A.TACKLE],[1,A.BUG_BITE],[1,A.GUST],[1,A.HARDEN],[1,A.STRING_SHOT],[1,A.POISON_STING],[12,A.ABSORB],[15,A.STUN_SPORE],[17,A.MORNING_SUN],[20,A.AIR_CUTTER],[22,A.MEGA_DRAIN],[25,A.LEECH_LIFE],[27,A.ATTRACT],[30,A.WHIRLWIND],[32,A.GIGA_DRAIN],[35,A.BUG_BUZZ],[37,A.PROTECT],[40,A.QUIVER_DANCE]],[e.CASCOON]:[[k,A.HARDEN],[V,A.TACKLE],[V,A.STRING_SHOT],[V,A.POISON_STING],[V,A.BUG_BITE],[1,A.HARDEN]],[e.DUSTOX]:[[k,A.GUST],[1,A.TACKLE],[1,A.BUG_BITE],[1,A.GUST],[1,A.HARDEN],[1,A.STRING_SHOT],[1,A.POISON_STING],[12,A.CONFUSION],[15,A.POISON_POWDER],[17,A.MOONLIGHT],[20,A.VENOSHOCK],[22,A.PSYBEAM],[25,A.LEECH_LIFE],[27,A.LIGHT_SCREEN],[30,A.WHIRLWIND],[32,A.TOXIC],[35,A.BUG_BUZZ],[37,A.PROTECT],[40,A.QUIVER_DANCE]],[e.LOTAD]:[[1,A.GROWL],[1,A.ASTONISH],[3,A.ABSORB],[6,A.WATER_GUN],[9,A.MIST],[12,A.MEGA_DRAIN],[16,A.FLAIL],[20,A.BUBBLE_BEAM],[24,A.LEECH_SEED],[28,A.GIGA_DRAIN],[33,A.RAIN_DANCE],[38,A.ZEN_HEADBUTT],[43,A.ENERGY_BALL]],[e.LOMBRE]:[[1,A.GROWL],[1,A.WATER_GUN],[1,A.ABSORB],[1,A.FLAIL],[1,A.FAKE_OUT],[1,A.RAIN_DANCE],[1,A.KNOCK_OFF],[1,A.TEETER_DANCE],[1,A.ASTONISH],[9,A.MIST],[12,A.MEGA_DRAIN],[18,A.FURY_SWIPES],[24,A.BUBBLE_BEAM],[30,A.LEECH_SEED],[36,A.GIGA_DRAIN],[50,A.ZEN_HEADBUTT],[57,A.ENERGY_BALL],[64,A.HYDRO_PUMP]],[e.LUDICOLO]:[[V,A.GROWL],[V,A.MIST],[V,A.WATER_GUN],[V,A.HYDRO_PUMP],[V,A.ABSORB],[V,A.MEGA_DRAIN],[V,A.FURY_SWIPES],[V,A.FLAIL],[V,A.KNOCK_OFF],[V,A.TEETER_DANCE],[V,A.ASTONISH],[V,A.ENERGY_BALL],[V,A.ZEN_HEADBUTT],[V,A.LEECH_SEED],[V,A.GIGA_DRAIN],[1,A.FAKE_OUT],[1,A.BUBBLE_BEAM],[1,A.RAIN_DANCE]],[e.SEEDOT]:[[1,A.TACKLE],[1,A.HARDEN],[1,A.BIDE],[3,A.ABSORB],[6,A.ASTONISH],[9,A.GROWTH],[12,A.ROLLOUT],[15,A.MEGA_DRAIN],[18,A.PAYBACK],[21,A.HEADBUTT],[24,A.SUNNY_DAY],[27,A.SYNTHESIS],[30,A.SUCKER_PUNCH],[33,A.EXPLOSION]],[e.NUZLEAF]:[[k,A.RAZOR_LEAF],[1,A.AIR_CUTTER],[1,A.TORMENT],[1,A.FAKE_OUT],[1,A.SWAGGER],[1,A.EXPLOSION],[1,A.TACKLE],[1,A.HARDEN],[1,A.BIDE],[1,A.ABSORB],[1,A.ASTONISH],[1,A.HEADBUTT],[9,A.GROWTH],[12,A.ROLLOUT],[18,A.MEGA_DRAIN],[24,A.PAYBACK],[30,A.SYNTHESIS],[36,A.SUNNY_DAY],[43,A.EXTRASENSORY],[50,A.SUCKER_PUNCH],[57,A.LEAF_BLADE]],[e.SHIFTRY]:[[k,A.LEAF_BLADE],[V,A.WHIRLWIND],[V,A.TACKLE],[V,A.BIDE],[V,A.ABSORB],[V,A.MEGA_DRAIN],[V,A.GROWTH],[V,A.RAZOR_LEAF],[V,A.HARDEN],[V,A.HEADBUTT],[V,A.EXPLOSION],[V,A.ROLLOUT],[V,A.SWAGGER],[V,A.SYNTHESIS],[V,A.BEAT_UP],[V,A.FAKE_OUT],[V,A.TORMENT],[V,A.ASTONISH],[V,A.EXTRASENSORY],[V,A.SUCKER_PUNCH],[1,A.AIR_CUTTER],[1,A.HURRICANE],[1,A.PAYBACK],[1,A.SUNNY_DAY]],[e.TAILLOW]:[[1,A.PECK],[1,A.GROWL],[5,A.FOCUS_ENERGY],[9,A.QUICK_ATTACK],[13,A.WING_ATTACK],[17,A.DOUBLE_TEAM],[21,A.AERIAL_ACE],[25,A.QUICK_GUARD],[29,A.AGILITY],[33,A.AIR_SLASH],[37,A.ENDEAVOR],[41,A.BRAVE_BIRD],[45,A.REVERSAL]],[e.SWELLOW]:[[1,A.BRAVE_BIRD],[1,A.AIR_SLASH],[1,A.PLUCK],[1,A.PECK],[1,A.GROWL],[1,A.FOCUS_ENERGY],[1,A.QUICK_ATTACK],[13,A.WING_ATTACK],[17,A.DOUBLE_TEAM],[21,A.AERIAL_ACE],[27,A.QUICK_GUARD],[33,A.AGILITY],[45,A.ENDEAVOR],[51,A.BRAVE_BIRD],[57,A.REVERSAL]],[e.WINGULL]:[[1,A.GROWL],[1,A.WATER_GUN],[5,A.QUICK_ATTACK],[10,A.SUPERSONIC],[15,A.WING_ATTACK],[20,A.WATER_PULSE],[26,A.AGILITY],[30,A.AIR_SLASH],[35,A.MIST],[40,A.ROOST],[45,A.HURRICANE]],[e.PELIPPER]:[[1,A.PROTECT],[1,A.SOAK],[1,A.QUICK_ATTACK],[1,A.AGILITY],[1,A.AIR_SLASH],[1,A.GROWL],[1,A.WATER_GUN],[1,A.TAILWIND],[1,A.SUPERSONIC],[1,A.WATER_SPORT],[15,A.WING_ATTACK],[20,A.WATER_PULSE],[28,A.STOCKPILE],[28,A.SPIT_UP],[28,A.SWALLOW],[34,A.FLING],[41,A.MIST],[48,A.ROOST],[55,A.HURRICANE],[62,A.HYDRO_PUMP]],[e.RALTS]:[[1,A.GROWL],[1,A.DISARMING_VOICE],[3,A.DOUBLE_TEAM],[6,A.CONFUSION],[9,A.HYPNOSIS],[12,A.DRAINING_KISS],[15,A.TELEPORT],[18,A.PSYBEAM],[21,A.LIFE_DEW],[24,A.CHARM],[27,A.CALM_MIND],[30,A.PSYCHIC],[33,A.HEAL_PULSE],[36,A.DREAM_EATER],[39,A.FUTURE_SIGHT]],[e.KIRLIA]:[[1,A.GROWL],[1,A.DISARMING_VOICE],[1,A.DOUBLE_TEAM],[1,A.CONFUSION],[9,A.HYPNOSIS],[12,A.DRAINING_KISS],[15,A.TELEPORT],[18,A.PSYBEAM],[23,A.LIFE_DEW],[28,A.CHARM],[33,A.CALM_MIND],[38,A.PSYCHIC],[43,A.HEAL_PULSE],[48,A.DREAM_EATER],[53,A.FUTURE_SIGHT]],[e.GARDEVOIR]:[[k,A.DAZZLING_GLEAM],[1,A.MISTY_TERRAIN],[1,A.HEALING_WISH],[1,A.CHARM],[1,A.MYSTICAL_FIRE],[1,A.HEAL_PULSE],[1,A.GROWL],[1,A.DISARMING_VOICE],[1,A.DOUBLE_TEAM],[1,A.CONFUSION],[9,A.HYPNOSIS],[12,A.DRAINING_KISS],[15,A.TELEPORT],[18,A.PSYBEAM],[23,A.LIFE_DEW],[28,A.WISH],[35,A.CALM_MIND],[42,A.PSYCHIC],[49,A.MOONBLAST],[56,A.DREAM_EATER],[63,A.FUTURE_SIGHT]],[e.SURSKIT]:[[1,A.WATER_GUN],[6,A.QUICK_ATTACK],[9,A.SWEET_SCENT],[14,A.SOAK],[17,A.BUBBLE_BEAM],[22,A.AGILITY],[25,A.MIST],[25,A.HAZE],[35,A.BATON_PASS],[38,A.STICKY_WEB]],[e.MASQUERAIN]:[[V,A.BATON_PASS],[V,A.STICKY_WEB],[1,A.WHIRLWIND],[1,A.WATER_GUN],[1,A.QUICK_ATTACK],[1,A.SWEET_SCENT],[1,A.SOAK],[1,A.BUBBLE_BEAM],[1,A.AGILITY],[1,A.MIST],[1,A.HAZE],[1,A.OMINOUS_WIND],[17,A.GUST],[22,A.SCARY_FACE],[22,A.AIR_CUTTER],[26,A.STUN_SPORE],[32,A.AIR_SLASH],[38,A.GIGA_DRAIN],[44,A.BUG_BUZZ],[52,A.QUIVER_DANCE]],[e.SHROOMISH]:[[1,A.ABSORB],[1,A.TACKLE],[5,A.STUN_SPORE],[8,A.LEECH_SEED],[12,A.MEGA_DRAIN],[15,A.HEADBUTT],[19,A.POISON_POWDER],[26,A.GIGA_DRAIN],[29,A.GROWTH],[33,A.TOXIC],[36,A.SEED_BOMB],[40,A.SPORE]],[e.BRELOOM]:[[k,A.MACH_PUNCH],[V,A.SPORE],[1,A.POISON_POWDER],[1,A.GIGA_DRAIN],[1,A.GROWTH],[1,A.TOXIC],[1,A.ABSORB],[1,A.TACKLE],[1,A.STUN_SPORE],[1,A.LEECH_SEED],[12,A.MEGA_DRAIN],[15,A.HEADBUTT],[19,A.FEINT],[22,A.COUNTER],[28,A.FORCE_PALM],[33,A.WORRY_SEED],[39,A.BRICK_BREAK],[44,A.SEED_BOMB],[50,A.DYNAMIC_PUNCH],[55,A.FOCUS_PUNCH]],[e.SLAKOTH]:[[1,A.SCRATCH],[1,A.YAWN],[6,A.ENCORE],[9,A.SLACK_OFF],[14,A.HEADBUTT],[17,A.AMNESIA],[22,A.COVET],[25,A.THROAT_CHOP],[30,A.COUNTER],[33,A.FLAIL],[38,A.PLAY_ROUGH]],[e.VIGOROTH]:[[V,A.PLAY_ROUGH],[1,A.SCRATCH],[1,A.YAWN],[1,A.FOCUS_ENERGY],[1,A.SLACK_OFF],[1,A.ENCORE],[1,A.HEADBUTT],[1,A.AMNESIA],[1,A.COVET],[1,A.FLAIL],[1,A.UPROAR],[14,A.FURY_SWIPES],[17,A.ENDURE],[23,A.SLASH],[27,A.THROAT_CHOP],[33,A.COUNTER],[37,A.FOCUS_PUNCH],[43,A.REVERSAL]],[e.SLAKING]:[[k,A.SWAGGER],[V,A.PLAY_ROUGH],[V,A.FOCUS_PUNCH],[1,A.SUCKER_PUNCH],[1,A.SCRATCH],[1,A.YAWN],[1,A.FOCUS_ENERGY],[1,A.ENCORE],[1,A.SLACK_OFF],[1,A.UPROAR],[1,A.FURY_SWIPES],[1,A.ENDURE],[1,A.HEADBUTT],[1,A.SLASH],[1,A.REVERSAL],[17,A.AMNESIA],[23,A.COVET],[27,A.THROAT_CHOP],[33,A.COUNTER],[39,A.FLAIL],[45,A.FLING],[52,A.MEGA_KICK],[63,A.HAMMER_ARM]],[e.NINCADA]:[[1,A.SCRATCH],[1,A.SAND_ATTACK],[5,A.HARDEN],[10,A.FALSE_SWIPE],[15,A.MUD_SLAP],[21,A.ABSORB],[25,A.METAL_CLAW],[30,A.FURY_SWIPES],[35,A.MIND_READER],[40,A.DIG]],[e.NINJASK]:[[k,A.DOUBLE_TEAM],[k,A.SCREECH],[k,A.FURY_CUTTER],[1,A.BATON_PASS],[1,A.AERIAL_ACE],[1,A.MUD_SLAP],[1,A.METAL_CLAW],[1,A.DIG],[1,A.SAND_ATTACK],[1,A.SCRATCH],[1,A.HARDEN],[1,A.FALSE_SWIPE],[15,A.AGILITY],[23,A.ABSORB],[29,A.BUG_BITE],[36,A.FURY_SWIPES],[43,A.MIND_READER],[50,A.SLASH],[57,A.SWORDS_DANCE],[64,A.X_SCISSOR]],[e.SHEDINJA]:[[1,A.SHADOW_CLAW],[1,A.GRUDGE],[1,A.MUD_SLAP],[1,A.METAL_CLAW],[1,A.DIG],[1,A.SCRATCH],[1,A.SAND_ATTACK],[1,A.HARDEN],[1,A.FALSE_SWIPE],[15,A.CONFUSE_RAY],[23,A.ABSORB],[29,A.SHADOW_SNEAK],[36,A.FURY_SWIPES],[43,A.MIND_READER],[50,A.SHADOW_BALL],[57,A.SPITE],[64,A.PHANTOM_FORCE]],[e.WHISMUR]:[[1,A.ASTONISH],[1,A.POUND],[5,A.ECHOED_VOICE],[10,A.HOWL],[15,A.REST],[15,A.SLEEP_TALK],[21,A.STOMP],[25,A.ROAR],[30,A.SUPERSONIC],[35,A.UPROAR],[40,A.SCREECH],[45,A.HYPER_VOICE]],[e.LOUDRED]:[[k,A.BITE],[1,A.ASTONISH],[1,A.POUND],[1,A.ECHOED_VOICE],[1,A.HOWL],[15,A.REST],[15,A.SLEEP_TALK],[23,A.STOMP],[29,A.ROAR],[36,A.SUPERSONIC],[43,A.UPROAR],[50,A.SCREECH],[57,A.HYPER_VOICE]],[e.EXPLOUD]:[[k,A.CRUNCH],[1,A.BITE],[1,A.ICE_FANG],[1,A.FIRE_FANG],[1,A.THUNDER_FANG],[1,A.ASTONISH],[1,A.POUND],[1,A.ECHOED_VOICE],[1,A.HOWL],[15,A.REST],[15,A.SLEEP_TALK],[23,A.STOMP],[29,A.ROAR],[36,A.SUPERSONIC],[45,A.UPROAR],[54,A.SCREECH],[63,A.HYPER_VOICE],[72,A.BOOMBURST],[81,A.HYPER_BEAM]],[e.MAKUHITA]:[[1,A.TACKLE],[1,A.FOCUS_ENERGY],[4,A.SAND_ATTACK],[7,A.ARM_THRUST],[10,A.FAKE_OUT],[13,A.FORCE_PALM],[16,A.WHIRLWIND],[19,A.KNOCK_OFF],[22,A.BULK_UP],[25,A.BELLY_DRUM],[28,A.DETECT],[31,A.SEISMIC_TOSS],[34,A.FOCUS_PUNCH],[37,A.ENDURE],[40,A.CLOSE_COMBAT],[43,A.REVERSAL],[46,A.HEAVY_SLAM]],[e.HARIYAMA]:[[1,A.BRINE],[1,A.TACKLE],[1,A.FOCUS_ENERGY],[1,A.SAND_ATTACK],[1,A.ARM_THRUST],[10,A.FAKE_OUT],[13,A.FORCE_PALM],[16,A.WHIRLWIND],[19,A.KNOCK_OFF],[22,A.BULK_UP],[26,A.BELLY_DRUM],[30,A.DETECT],[34,A.SEISMIC_TOSS],[38,A.FOCUS_PUNCH],[42,A.ENDURE],[46,A.CLOSE_COMBAT],[50,A.REVERSAL],[54,A.HEAVY_SLAM],[60,A.HEADLONG_RUSH]],[e.AZURILL]:[[1,A.SPLASH],[1,A.WATER_GUN],[1,A.TAIL_WHIP],[3,A.HELPING_HAND],[6,A.BUBBLE_BEAM],[9,A.CHARM],[12,A.SLAM],[15,A.BOUNCE]],[e.NOSEPASS]:[[1,A.TACKLE],[4,A.HARDEN],[7,A.BLOCK],[10,A.ROCK_THROW],[13,A.THUNDER_WAVE],[16,A.REST],[19,A.SPARK],[22,A.ROCK_SLIDE],[25,A.POWER_GEM],[28,A.ROCK_BLAST],[31,A.DISCHARGE],[34,A.SANDSTORM],[37,A.EARTH_POWER],[40,A.STONE_EDGE],[43,A.LOCK_ON],[43,A.ZAP_CANNON]],[e.SKITTY]:[[1,A.FAKE_OUT],[1,A.GROWL],[1,A.TAIL_WHIP],[4,A.TACKLE],[7,A.SING],[10,A.ATTRACT],[13,A.DISARMING_VOICE],[16,A.FURY_SWIPES],[19,A.COPYCAT],[22,A.PAYBACK],[25,A.CHARM],[31,A.FACADE],[34,A.COVET],[37,A.HEAL_BELL],[40,A.DOUBLE_EDGE],[43,A.BABY_DOLL_EYES],[46,A.PLAY_ROUGH]],[e.DELCATTY]:[[1,A.TAIL_WHIP],[1,A.GROWL],[1,A.FAKE_OUT],[1,A.TACKLE],[1,A.SING],[1,A.ATTRACT],[1,A.DISARMING_VOICE],[1,A.FURY_SWIPES],[1,A.COPYCAT],[1,A.PAYBACK],[1,A.CHARM],[1,A.FACADE],[1,A.COVET],[1,A.HEAL_BELL],[1,A.DOUBLE_EDGE],[1,A.BABY_DOLL_EYES],[1,A.PLAY_ROUGH]],[e.SABLEYE]:[[1,A.LEER],[1,A.SCRATCH],[3,A.ASTONISH],[9,A.SHADOW_SNEAK],[12,A.FAKE_OUT],[15,A.DISABLE],[18,A.DETECT],[21,A.NIGHT_SHADE],[24,A.FURY_SWIPES],[27,A.KNOCK_OFF],[30,A.QUASH],[33,A.SHADOW_CLAW],[36,A.MEAN_LOOK],[39,A.POWER_GEM],[42,A.ZEN_HEADBUTT],[45,A.SHADOW_BALL],[48,A.FOUL_PLAY]],[e.MAWILE]:[[1,A.ASTONISH],[1,A.GROWL],[4,A.FAIRY_WIND],[8,A.BATON_PASS],[12,A.BITE],[16,A.STOCKPILE],[16,A.SPIT_UP],[16,A.SWALLOW],[20,A.SUCKER_PUNCH],[24,A.IRON_DEFENSE],[28,A.CRUNCH],[32,A.SWEET_SCENT],[36,A.IRON_HEAD],[40,A.TAUNT],[44,A.FAKE_TEARS],[48,A.PLAY_ROUGH]],[e.ARON]:[[1,A.TACKLE],[1,A.HARDEN],[4,A.METAL_CLAW],[8,A.ROCK_TOMB],[12,A.ROAR],[16,A.HEADBUTT],[20,A.PROTECT],[24,A.ROCK_SLIDE],[28,A.IRON_HEAD],[33,A.METAL_SOUND],[36,A.TAKE_DOWN],[40,A.AUTOTOMIZE],[44,A.IRON_TAIL],[48,A.IRON_DEFENSE],[52,A.HEAVY_SLAM],[56,A.DOUBLE_EDGE],[60,A.METAL_BURST]],[e.LAIRON]:[[1,A.TACKLE],[1,A.HARDEN],[1,A.METAL_CLAW],[1,A.ROCK_TOMB],[12,A.ROAR],[16,A.HEADBUTT],[20,A.PROTECT],[24,A.ROCK_SLIDE],[28,A.IRON_HEAD],[35,A.METAL_SOUND],[40,A.TAKE_DOWN],[46,A.AUTOTOMIZE],[52,A.IRON_TAIL],[58,A.IRON_DEFENSE],[64,A.HEAVY_SLAM],[70,A.DOUBLE_EDGE],[76,A.METAL_BURST]],[e.AGGRON]:[[1,A.TACKLE],[1,A.HARDEN],[1,A.METAL_CLAW],[1,A.ROCK_TOMB],[12,A.ROAR],[16,A.HEADBUTT],[20,A.PROTECT],[24,A.ROCK_SLIDE],[28,A.IRON_HEAD],[35,A.METAL_SOUND],[40,A.TAKE_DOWN],[48,A.AUTOTOMIZE],[56,A.IRON_TAIL],[64,A.IRON_DEFENSE],[72,A.HEAVY_SLAM],[80,A.DOUBLE_EDGE],[88,A.METAL_BURST]],[e.MEDITITE]:[[1,A.CONFUSION],[1,A.WORK_UP],[1,A.BIDE],[9,A.DETECT],[12,A.ENDURE],[15,A.FEINT],[17,A.FORCE_PALM],[20,A.PSYBEAM],[23,A.CALM_MIND],[25,A.ZEN_HEADBUTT],[28,A.HIGH_JUMP_KICK],[31,A.PSYCH_UP],[33,A.ACUPRESSURE],[36,A.POWER_TRICK],[39,A.REVERSAL],[41,A.RECOVER],[44,A.COUNTER]],[e.MEDICHAM]:[[1,A.FIRE_PUNCH],[1,A.ICE_PUNCH],[1,A.THUNDER_PUNCH],[1,A.CONFUSION],[1,A.DETECT],[1,A.WORK_UP],[1,A.BIDE],[1,A.REVERSAL],[12,A.ENDURE],[15,A.FEINT],[17,A.FORCE_PALM],[20,A.PSYBEAM],[23,A.CALM_MIND],[25,A.ZEN_HEADBUTT],[28,A.HIGH_JUMP_KICK],[31,A.PSYCH_UP],[33,A.ACUPRESSURE],[36,A.POWER_TRICK],[47,A.RECOVER],[53,A.COUNTER],[53,A.AXE_KICK]],[e.ELECTRIKE]:[[1,A.TACKLE],[1,A.THUNDER_WAVE],[4,A.LEER],[8,A.HOWL],[12,A.QUICK_ATTACK],[16,A.SHOCK_WAVE],[20,A.BITE],[24,A.THUNDER_FANG],[28,A.ROAR],[32,A.DISCHARGE],[36,A.CHARGE],[40,A.WILD_CHARGE],[44,A.THUNDER]],[e.MANECTRIC]:[[1,A.FIRE_FANG],[1,A.TACKLE],[1,A.THUNDER_WAVE],[1,A.LEER],[1,A.HOWL],[12,A.QUICK_ATTACK],[16,A.SHOCK_WAVE],[20,A.BITE],[24,A.THUNDER_FANG],[30,A.ROAR],[36,A.DISCHARGE],[42,A.CHARGE],[48,A.WILD_CHARGE],[54,A.THUNDER],[60,A.ELECTRIC_TERRAIN]],[e.PLUSLE]:[[V,A.NUZZLE],[1,A.PLAY_NICE],[1,A.GROWL],[1,A.THUNDER_WAVE],[1,A.QUICK_ATTACK],[4,A.HELPING_HAND],[7,A.SPARK],[10,A.ENCORE],[13,A.SWITCHEROO],[16,A.SWIFT],[19,A.ELECTRO_BALL],[22,A.COPYCAT],[26,A.CHARGE],[31,A.DISCHARGE],[34,A.BATON_PASS],[37,A.AGILITY],[40,A.LAST_RESORT],[43,A.THUNDER],[46,A.NASTY_PLOT],[49,A.ENTRAINMENT]],[e.MINUN]:[[V,A.NUZZLE],[1,A.PLAY_NICE],[1,A.GROWL],[1,A.THUNDER_WAVE],[1,A.QUICK_ATTACK],[4,A.HELPING_HAND],[7,A.SPARK],[10,A.ENCORE],[13,A.SWITCHEROO],[16,A.SWIFT],[19,A.ELECTRO_BALL],[22,A.COPYCAT],[26,A.CHARGE],[31,A.DISCHARGE],[34,A.BATON_PASS],[37,A.AGILITY],[40,A.LAST_RESORT],[43,A.THUNDER],[46,A.NASTY_PLOT],[49,A.ENTRAINMENT]],[e.VOLBEAT]:[[1,A.FLASH],[1,A.TACKLE],[5,A.DOUBLE_TEAM],[8,A.CONFUSE_RAY],[12,A.QUICK_ATTACK],[15,A.STRUGGLE_BUG],[19,A.MOONLIGHT],[22,A.TAIL_GLOW],[26,A.PROTECT],[29,A.ZEN_HEADBUTT],[33,A.HELPING_HAND],[36,A.BUG_BUZZ],[40,A.PLAY_ROUGH],[43,A.DOUBLE_EDGE],[47,A.INFESTATION]],[e.ILLUMISE]:[[1,A.TACKLE],[1,A.PLAY_NICE],[5,A.SWEET_SCENT],[9,A.CHARM],[12,A.QUICK_ATTACK],[15,A.STRUGGLE_BUG],[19,A.MOONLIGHT],[22,A.WISH],[26,A.ENCORE],[29,A.FLATTER],[33,A.ZEN_HEADBUTT],[36,A.HELPING_HAND],[40,A.BUG_BUZZ],[43,A.PLAY_ROUGH],[47,A.INFESTATION]],[e.ROSELIA]:[[k,A.POISON_STING],[1,A.ABSORB],[1,A.GROWTH],[1,A.STUN_SPORE],[1,A.WORRY_SEED],[5,A.MEGA_DRAIN],[10,A.LEECH_SEED],[15,A.MAGICAL_LEAF],[20,A.TOXIC_SPIKES],[25,A.SWEET_SCENT],[30,A.GIGA_DRAIN],[35,A.SYNTHESIS],[40,A.TOXIC],[45,A.PETAL_BLIZZARD],[50,A.AROMATHERAPY],[55,A.INGRAIN],[60,A.PETAL_DANCE]],[e.GULPIN]:[[1,A.POUND],[5,A.YAWN],[8,A.POISON_GAS],[10,A.SLUDGE],[12,A.AMNESIA],[17,A.ACID_SPRAY],[20,A.ENCORE],[25,A.TOXIC],[28,A.STOCKPILE],[28,A.SPIT_UP],[28,A.SWALLOW],[33,A.SLUDGE_BOMB],[36,A.GASTRO_ACID],[41,A.BELCH],[44,A.PAIN_SPLIT],[49,A.GUNK_SHOT]],[e.SWALOT]:[[k,A.BODY_SLAM],[1,A.GUNK_SHOT],[1,A.POUND],[1,A.YAWN],[1,A.POISON_GAS],[1,A.WRING_OUT],[1,A.SLUDGE],[1,A.PAIN_SPLIT],[12,A.AMNESIA],[17,A.ACID_SPRAY],[20,A.ENCORE],[25,A.TOXIC],[30,A.STOCKPILE],[30,A.SPIT_UP],[30,A.SWALLOW],[37,A.SLUDGE_BOMB],[42,A.GASTRO_ACID],[49,A.BELCH]],[e.CARVANHA]:[[1,A.AQUA_JET],[1,A.LEER],[4,A.POISON_FANG],[8,A.FOCUS_ENERGY],[12,A.SCARY_FACE],[16,A.BITE],[20,A.ICE_FANG],[24,A.SCREECH],[28,A.SWAGGER],[32,A.CRUNCH],[36,A.AGILITY],[40,A.LIQUIDATION],[44,A.TAKE_DOWN]],[e.SHARPEDO]:[[k,A.SLASH],[1,A.NIGHT_SLASH],[1,A.AQUA_JET],[1,A.LEER],[1,A.POISON_FANG],[1,A.FOCUS_ENERGY],[12,A.SCARY_FACE],[16,A.BITE],[20,A.ICE_FANG],[24,A.SCREECH],[28,A.SWAGGER],[34,A.CRUNCH],[40,A.AGILITY],[46,A.LIQUIDATION],[52,A.TAKE_DOWN]],[e.WAILMER]:[[1,A.SPLASH],[1,A.TACKLE],[3,A.GROWL],[6,A.ASTONISH],[12,A.WATER_GUN],[15,A.MIST],[18,A.WATER_PULSE],[21,A.HEAVY_SLAM],[24,A.BRINE],[27,A.WHIRLPOOL],[30,A.DIVE],[33,A.BOUNCE],[36,A.BODY_SLAM],[39,A.REST],[42,A.AMNESIA],[45,A.HYDRO_PUMP],[48,A.WATER_SPOUT]],[e.WAILORD]:[[1,A.SOAK],[1,A.NOBLE_ROAR],[1,A.SPLASH],[1,A.TACKLE],[1,A.GROWL],[1,A.ASTONISH],[1,A.WATER_GUN],[15,A.MIST],[18,A.WATER_PULSE],[21,A.HEAVY_SLAM],[24,A.BRINE],[27,A.WHIRLPOOL],[30,A.DIVE],[33,A.BOUNCE],[36,A.BODY_SLAM],[39,A.REST],[44,A.AMNESIA],[49,A.HYDRO_PUMP],[54,A.WATER_SPOUT]],[e.NUMEL]:[[1,A.GROWL],[1,A.TACKLE],[5,A.EMBER],[8,A.FOCUS_ENERGY],[12,A.BULLDOZE],[15,A.INCINERATE],[19,A.AMNESIA],[22,A.LAVA_PLUME],[26,A.EARTH_POWER],[29,A.CURSE],[31,A.TAKE_DOWN],[40,A.EARTHQUAKE],[43,A.FLAMETHROWER],[47,A.DOUBLE_EDGE]],[e.CAMERUPT]:[[k,A.ROCK_SLIDE],[V,A.FLAMETHROWER],[V,A.DOUBLE_EDGE],[1,A.FISSURE],[1,A.ERUPTION],[1,A.GROWL],[1,A.TACKLE],[1,A.EMBER],[1,A.FOCUS_ENERGY],[12,A.BULLDOZE],[15,A.INCINERATE],[19,A.AMNESIA],[22,A.LAVA_PLUME],[26,A.EARTH_POWER],[29,A.CURSE],[31,A.TAKE_DOWN],[39,A.YAWN],[46,A.EARTHQUAKE]],[e.TORKOAL]:[[1,A.SMOG],[1,A.EMBER],[4,A.WITHDRAW],[8,A.RAPID_SPIN],[12,A.SMOKESCREEN],[16,A.CLEAR_SMOG],[20,A.FLAME_WHEEL],[24,A.PROTECT],[28,A.LAVA_PLUME],[32,A.BODY_SLAM],[36,A.IRON_DEFENSE],[40,A.FLAMETHROWER],[44,A.CURSE],[48,A.HEAT_WAVE],[52,A.AMNESIA],[56,A.INFERNO],[60,A.SHELL_SMASH],[64,A.ERUPTION]],[e.SPOINK]:[[1,A.SPLASH],[5,A.CONFUSION],[10,A.GROWL],[14,A.PSYBEAM],[18,A.PSYCH_UP],[22,A.CONFUSE_RAY],[29,A.REST],[29,A.POWER_GEM],[33,A.SNORE],[38,A.PSYSHOCK],[40,A.PAYBACK],[44,A.PSYCHIC],[50,A.BOUNCE]],[e.GRUMPIG]:[[k,A.TEETER_DANCE],[1,A.BELCH],[1,A.SPLASH],[1,A.CONFUSION],[1,A.GROWL],[1,A.PSYBEAM],[18,A.PSYCH_UP],[22,A.CONFUSE_RAY],[26,A.ZEN_HEADBUTT],[29,A.POWER_GEM],[35,A.REST],[35,A.SNORE],[42,A.PSYSHOCK],[46,A.PAYBACK],[52,A.PSYCHIC],[60,A.BOUNCE]],[e.SPINDA]:[[1,A.TACKLE],[5,A.COPYCAT],[10,A.DIZZY_PUNCH],[14,A.PSYBEAM],[19,A.HYPNOSIS],[23,A.BODY_SLAM],[28,A.SUCKER_PUNCH],[32,A.TEETER_DANCE],[37,A.UPROAR],[41,A.PSYCH_UP],[46,A.DOUBLE_EDGE],[50,A.FLAIL],[55,A.THRASH]],[e.TRAPINCH]:[[1,A.SAND_ATTACK],[1,A.ASTONISH],[1,A.BIDE],[1,A.FEINT_ATTACK],[8,A.BITE],[12,A.MUD_SLAP],[16,A.SAND_TOMB],[20,A.BULLDOZE],[24,A.DIG],[28,A.CRUNCH],[32,A.SANDSTORM],[36,A.EARTH_POWER],[40,A.EARTHQUAKE],[44,A.SUPERPOWER],[48,A.FISSURE]],[e.VIBRAVA]:[[k,A.DRAGON_BREATH],[V,A.SUPERSONIC],[V,A.FISSURE],[V,A.CRUNCH],[V,A.SUPERPOWER],[V,A.ASTONISH],[V,A.BULLDOZE],[1,A.DIG],[1,A.SAND_ATTACK],[1,A.BITE],[1,A.BIDE],[1,A.FEINT_ATTACK],[12,A.MUD_SLAP],[16,A.SAND_TOMB],[20,A.DRAGON_TAIL],[24,A.SCREECH],[28,A.BUG_BUZZ],[32,A.SANDSTORM],[38,A.EARTH_POWER],[44,A.EARTHQUAKE],[50,A.UPROAR],[56,A.DRAGON_RUSH],[62,A.BOOMBURST]],[e.FLYGON]:[[k,A.DRAGON_CLAW],[V,A.BITE],[V,A.FISSURE],[V,A.DIG],[V,A.CRUNCH],[V,A.SUPERPOWER],[V,A.ASTONISH],[V,A.DRAGON_DANCE],[V,A.FEINT],[1,A.DRAGON_BREATH],[1,A.BULLDOZE],[1,A.SAND_ATTACK],[1,A.SUPERSONIC],[1,A.BIDE],[1,A.FEINT_ATTACK],[12,A.MUD_SLAP],[16,A.SAND_TOMB],[20,A.DRAGON_TAIL],[24,A.SCREECH],[28,A.BUG_BUZZ],[32,A.SANDSTORM],[38,A.EARTH_POWER],[44,A.EARTHQUAKE],[52,A.UPROAR],[60,A.DRAGON_RUSH],[68,A.BOOMBURST]],[e.CACNEA]:[[1,A.POISON_STING],[1,A.LEER],[4,A.ABSORB],[7,A.GROWTH],[10,A.LEECH_SEED],[13,A.SAND_ATTACK],[16,A.BULLET_SEED],[19,A.POWER_TRIP],[22,A.INGRAIN],[26,A.PAYBACK],[30,A.SPIKES],[34,A.SUCKER_PUNCH],[38,A.PIN_MISSILE],[42,A.ENERGY_BALL],[46,A.COTTON_SPORE],[50,A.SANDSTORM],[54,A.DESTINY_BOND]],[e.CACTURNE]:[[k,A.SPIKY_SHIELD],[1,A.DESTINY_BOND],[1,A.POISON_STING],[1,A.LEER],[1,A.ABSORB],[1,A.GROWTH],[10,A.LEECH_SEED],[13,A.SAND_ATTACK],[16,A.BULLET_SEED],[19,A.POWER_TRIP],[22,A.INGRAIN],[26,A.PAYBACK],[30,A.SPIKES],[35,A.SUCKER_PUNCH],[38,A.PIN_MISSILE],[44,A.ENERGY_BALL],[49,A.COTTON_SPORE],[54,A.SANDSTORM]],[e.SWABLU]:[[1,A.PECK],[1,A.GROWL],[4,A.DISARMING_VOICE],[8,A.MIST],[12,A.FURY_ATTACK],[16,A.ROUND],[20,A.DRAGON_BREATH],[24,A.SAFEGUARD],[28,A.SING],[32,A.COTTON_GUARD],[36,A.TAKE_DOWN],[40,A.MOONBLAST],[44,A.PERISH_SONG]],[e.ALTARIA]:[[k,A.DRAGON_PULSE],[1,A.PLUCK],[1,A.PECK],[1,A.GROWL],[1,A.DISARMING_VOICE],[1,A.MIST],[12,A.FURY_ATTACK],[16,A.ROUND],[20,A.DRAGON_BREATH],[24,A.SAFEGUARD],[28,A.SING],[32,A.COTTON_GUARD],[38,A.TAKE_DOWN],[44,A.MOONBLAST],[50,A.PERISH_SONG],[56,A.SKY_ATTACK]],[e.ZANGOOSE]:[[V,A.DOUBLE_KICK],[V,A.DISABLE],[V,A.COUNTER],[V,A.FURY_SWIPES],[V,A.CURSE],[V,A.FLAIL],[V,A.BELLY_DRUM],[V,A.FEINT],[V,A.NIGHT_SLASH],[V,A.DOUBLE_HIT],[V,A.QUICK_GUARD],[V,A.FINAL_GAMBIT],[1,A.SCRATCH],[1,A.LEER],[5,A.QUICK_ATTACK],[8,A.FURY_CUTTER],[12,A.METAL_CLAW],[15,A.HONE_CLAWS],[19,A.SLASH],[22,A.POWER_TRIP],[26,A.CRUSH_CLAW],[29,A.FALSE_SWIPE],[33,A.SWITCHEROO],[36,A.DETECT],[40,A.X_SCISSOR],[43,A.TAUNT],[47,A.SWORDS_DANCE],[50,A.CLOSE_COMBAT]],[e.SEVIPER]:[[1,A.WRAP],[1,A.SWAGGER],[4,A.BITE],[6,A.LICK],[9,A.POISON_TAIL],[11,A.FEINT],[14,A.SCREECH],[19,A.GLARE],[21,A.POISON_FANG],[24,A.VENOSHOCK],[29,A.GASTRO_ACID],[31,A.POISON_JAB],[34,A.HAZE],[39,A.CRUNCH],[41,A.BELCH],[44,A.COIL],[46,A.SLUDGE_BOMB]],[e.LUNATONE]:[[1,A.MOONBLAST],[1,A.MOONLIGHT],[1,A.TACKLE],[1,A.HARDEN],[1,A.CONFUSION],[1,A.ROCK_THROW],[5,A.HYPNOSIS],[10,A.ROCK_POLISH],[15,A.ROCK_SLIDE],[20,A.PSYSHOCK],[25,A.COSMIC_POWER],[30,A.PSYCHIC],[35,A.STONE_EDGE],[40,A.FUTURE_SIGHT],[45,A.MAGIC_ROOM],[50,A.EXPLOSION]],[e.SOLROCK]:[[1,A.FLARE_BLITZ],[1,A.MORNING_SUN],[1,A.TACKLE],[1,A.HARDEN],[1,A.CONFUSION],[1,A.ROCK_THROW],[5,A.HYPNOSIS],[10,A.ROCK_POLISH],[15,A.ROCK_SLIDE],[20,A.ZEN_HEADBUTT],[25,A.COSMIC_POWER],[30,A.PSYCHIC],[35,A.STONE_EDGE],[40,A.SOLAR_BEAM],[45,A.WONDER_ROOM],[50,A.EXPLOSION]],[e.BARBOACH]:[[1,A.MUD_SLAP],[1,A.WATER_GUN],[6,A.REST],[6,A.SNORE],[12,A.WATER_PULSE],[18,A.AMNESIA],[24,A.AQUA_TAIL],[31,A.MUDDY_WATER],[36,A.EARTHQUAKE],[42,A.FUTURE_SIGHT],[48,A.FISSURE]],[e.WHISCASH]:[[k,A.THRASH],[1,A.BELCH],[1,A.ZEN_HEADBUTT],[1,A.TICKLE],[1,A.MUD_SLAP],[1,A.WATER_GUN],[1,A.REST],[1,A.SNORE],[12,A.WATER_PULSE],[18,A.AMNESIA],[24,A.AQUA_TAIL],[33,A.MUDDY_WATER],[40,A.EARTHQUAKE],[48,A.FUTURE_SIGHT],[56,A.FISSURE]],[e.CORPHISH]:[[1,A.WATER_GUN],[1,A.HARDEN],[4,A.LEER],[8,A.TAUNT],[12,A.BUBBLE_BEAM],[16,A.KNOCK_OFF],[20,A.DOUBLE_HIT],[24,A.PROTECT],[28,A.NIGHT_SLASH],[32,A.RAZOR_SHELL],[36,A.SWORDS_DANCE],[40,A.CRUNCH],[44,A.CRABHAMMER],[48,A.ENDEAVOR],[52,A.GUILLOTINE]],[e.CRAWDAUNT]:[[k,A.SWIFT],[1,A.WATER_GUN],[1,A.HARDEN],[1,A.LEER],[1,A.TAUNT],[12,A.BUBBLE_BEAM],[16,A.KNOCK_OFF],[20,A.DOUBLE_HIT],[24,A.PROTECT],[28,A.NIGHT_SLASH],[34,A.RAZOR_SHELL],[40,A.SWORDS_DANCE],[46,A.CRUNCH],[52,A.CRABHAMMER],[58,A.ENDEAVOR],[64,A.GUILLOTINE]],[e.BALTOY]:[[1,A.HARDEN],[1,A.MUD_SLAP],[3,A.RAPID_SPIN],[6,A.CONFUSION],[9,A.ROCK_TOMB],[12,A.POWER_TRICK],[15,A.PSYBEAM],[18,A.ANCIENT_POWER],[21,A.IMPRISON],[24,A.COSMIC_POWER],[27,A.EXTRASENSORY],[30,A.EARTH_POWER],[33,A.SELF_DESTRUCT],[36,A.GUARD_SPLIT],[36,A.POWER_SPLIT],[39,A.SANDSTORM],[42,A.EXPLOSION]],[e.CLAYDOL]:[[k,A.HYPER_BEAM],[1,A.TELEPORT],[1,A.HARDEN],[1,A.MUD_SLAP],[1,A.RAPID_SPIN],[1,A.CONFUSION],[9,A.ROCK_TOMB],[12,A.POWER_TRICK],[15,A.PSYBEAM],[18,A.ANCIENT_POWER],[21,A.IMPRISON],[24,A.COSMIC_POWER],[27,A.EXTRASENSORY],[30,A.EARTH_POWER],[33,A.SELF_DESTRUCT],[38,A.GUARD_SPLIT],[38,A.POWER_SPLIT],[43,A.SANDSTORM],[48,A.EXPLOSION]],[e.LILEEP]:[[1,A.WRAP],[1,A.ASTONISH],[1,A.CONSTRICT],[4,A.ACID],[8,A.CONFUSE_RAY],[12,A.INGRAIN],[16,A.ANCIENT_POWER],[20,A.MEGA_DRAIN],[24,A.BRINE],[28,A.AMNESIA],[32,A.GASTRO_ACID],[36,A.GIGA_DRAIN],[41,A.STOCKPILE],[41,A.SPIT_UP],[41,A.SWALLOW],[44,A.ENERGY_BALL]],[e.CRADILY]:[[1,A.LEECH_SEED],[1,A.WRAP],[1,A.ASTONISH],[1,A.CONSTRICT],[1,A.ACID],[1,A.CONFUSE_RAY],[12,A.INGRAIN],[16,A.ANCIENT_POWER],[20,A.MEGA_DRAIN],[24,A.BRINE],[28,A.AMNESIA],[32,A.GASTRO_ACID],[36,A.GIGA_DRAIN],[43,A.STOCKPILE],[43,A.SPIT_UP],[43,A.SWALLOW],[48,A.ENERGY_BALL]],[e.ANORITH]:[[1,A.FURY_CUTTER],[1,A.HARDEN],[4,A.WATER_GUN],[8,A.SMACK_DOWN],[12,A.METAL_CLAW],[16,A.ANCIENT_POWER],[20,A.BUG_BITE],[24,A.BRINE],[28,A.SLASH],[32,A.CRUSH_CLAW],[36,A.ROCK_BLAST],[41,A.PROTECT],[44,A.X_SCISSOR]],[e.ARMALDO]:[[1,A.FURY_CUTTER],[1,A.HARDEN],[1,A.WATER_GUN],[1,A.SMACK_DOWN],[12,A.METAL_CLAW],[16,A.ANCIENT_POWER],[20,A.BUG_BITE],[24,A.BRINE],[28,A.SLASH],[32,A.CRUSH_CLAW],[36,A.ROCK_BLAST],[43,A.PROTECT],[48,A.X_SCISSOR]],[e.FEEBAS]:[[1,A.SPLASH],[15,A.TACKLE],[25,A.FLAIL]],[e.MILOTIC]:[[k,A.WATER_PULSE],[1,A.FLAIL],[1,A.SPLASH],[1,A.TACKLE],[1,A.WRAP],[1,A.WATER_GUN],[1,A.WATER_SPORT],[4,A.DISARMING_VOICE],[8,A.TWISTER],[12,A.AQUA_RING],[16,A.ATTRACT],[20,A.LIFE_DEW],[24,A.DRAGON_TAIL],[28,A.RECOVER],[32,A.AQUA_TAIL],[36,A.SAFEGUARD],[40,A.SURF],[44,A.RAIN_DANCE],[48,A.COIL],[52,A.HYDRO_PUMP]],[e.CASTFORM]:[[1,A.TACKLE],[10,A.WATER_GUN],[10,A.EMBER],[10,A.POWDER_SNOW],[15,A.HEADBUTT],[20,A.RAIN_DANCE],[20,A.SUNNY_DAY],[20,A.HAIL],[25,A.WEATHER_BALL],[35,A.HYDRO_PUMP],[35,A.FIRE_BLAST],[35,A.BLIZZARD],[45,A.HURRICANE]],[e.KECLEON]:[[1,A.THIEF],[1,A.TAIL_WHIP],[1,A.ASTONISH],[1,A.LICK],[1,A.SCRATCH],[4,A.BIND],[7,A.SHADOW_SNEAK],[10,A.FEINT],[13,A.FURY_SWIPES],[16,A.DISABLE],[18,A.PSYBEAM],[21,A.ANCIENT_POWER],[25,A.SLASH],[30,A.DETECT],[33,A.SHADOW_CLAW],[38,A.SCREECH],[42,A.SUBSTITUTE],[46,A.SUCKER_PUNCH],[50,A.FOUL_PLAY]],[e.SHUPPET]:[[1,A.ASTONISH],[1,A.PURSUIT],[4,A.SCREECH],[7,A.NIGHT_SHADE],[10,A.SPITE],[16,A.WILL_O_WISP],[19,A.SHADOW_SNEAK],[22,A.HEX],[26,A.CURSE],[30,A.SHADOW_BALL],[34,A.ROLE_PLAY],[38,A.SUCKER_PUNCH],[42,A.TRICK],[48,A.PHANTOM_FORCE]],[e.BANETTE]:[[k,A.KNOCK_OFF],[1,A.ASTONISH],[1,A.PURSUIT],[1,A.SCREECH],[1,A.NIGHT_SHADE],[1,A.SPITE],[16,A.WILL_O_WISP],[19,A.SHADOW_SNEAK],[22,A.HEX],[26,A.CURSE],[30,A.SHADOW_BALL],[34,A.ROLE_PLAY],[40,A.SUCKER_PUNCH],[46,A.TRICK],[53,A.PHANTOM_FORCE]],[e.DUSKULL]:[[1,A.ASTONISH],[1,A.LEER],[1,A.PURSUIT],[4,A.DISABLE],[8,A.SHADOW_SNEAK],[12,A.CONFUSE_RAY],[16,A.NIGHT_SHADE],[20,A.PAYBACK],[24,A.WILL_O_WISP],[28,A.MEAN_LOOK],[32,A.HEX],[36,A.CURSE],[40,A.SHADOW_BALL],[44,A.FUTURE_SIGHT]],[e.DUSCLOPS]:[[k,A.SHADOW_PUNCH],[1,A.FIRE_PUNCH],[1,A.ICE_PUNCH],[1,A.THUNDER_PUNCH],[1,A.GRAVITY],[1,A.BIND],[1,A.ASTONISH],[1,A.LEER],[1,A.PURSUIT],[1,A.DISABLE],[1,A.SHADOW_SNEAK],[12,A.CONFUSE_RAY],[16,A.NIGHT_SHADE],[20,A.PAYBACK],[24,A.WILL_O_WISP],[28,A.MEAN_LOOK],[32,A.HEX],[36,A.CURSE],[42,A.SHADOW_BALL],[48,A.FUTURE_SIGHT]],[e.TROPIUS]:[[1,A.LEAF_STORM],[1,A.GUST],[1,A.LEER],[1,A.GROWTH],[1,A.RAZOR_LEAF],[6,A.SWEET_SCENT],[10,A.STOMP],[16,A.MAGICAL_LEAF],[21,A.WHIRLWIND],[30,A.WIDE_GUARD],[36,A.AIR_SLASH],[41,A.BODY_SLAM],[46,A.OUTRAGE],[50,A.SYNTHESIS],[56,A.SOLAR_BEAM]],[e.CHIMECHO]:[[1,A.HEALING_WISH],[1,A.LAST_RESORT],[1,A.ENTRAINMENT],[1,A.WRAP],[1,A.PSYWAVE],[1,A.GROWL],[1,A.ASTONISH],[1,A.CONFUSION],[1,A.SYNCHRONOISE],[13,A.YAWN],[16,A.STORED_POWER],[19,A.TAKE_DOWN],[22,A.EXTRASENSORY],[27,A.HEAL_BELL],[32,A.UPROAR],[37,A.SAFEGUARD],[42,A.DOUBLE_EDGE],[47,A.HEAL_PULSE]],[e.ABSOL]:[[1,A.QUICK_ATTACK],[1,A.LEER],[5,A.DOUBLE_TEAM],[10,A.KNOCK_OFF],[15,A.DETECT],[20,A.TAUNT],[25,A.SLASH],[30,A.NIGHT_SLASH],[35,A.FOCUS_ENERGY],[40,A.SUCKER_PUNCH],[45,A.SWORDS_DANCE],[50,A.FUTURE_SIGHT],[55,A.PERISH_SONG]],[e.WYNAUT]:[[1,A.COUNTER],[1,A.MIRROR_COAT],[1,A.SAFEGUARD],[1,A.DESTINY_BOND],[1,A.SPLASH],[1,A.CHARM],[1,A.ENCORE],[1,A.AMNESIA]],[e.SNORUNT]:[[1,A.POWDER_SNOW],[1,A.ASTONISH],[1,A.HEADBUTT],[5,A.LEER],[10,A.DOUBLE_TEAM],[15,A.ICE_SHARD],[20,A.PROTECT],[25,A.ICY_WIND],[30,A.FROST_BREATH],[35,A.BITE],[40,A.ICE_FANG],[45,A.SNOWSCAPE],[50,A.WEATHER_BALL],[55,A.CRUNCH],[60,A.BLIZZARD]],[e.GLALIE]:[[k,A.FREEZE_DRY],[1,A.SHEER_COLD],[1,A.POWDER_SNOW],[1,A.HEADBUTT],[1,A.ASTONISH],[1,A.LEER],[1,A.DOUBLE_TEAM],[1,A.ICE_BALL],[15,A.ICE_SHARD],[20,A.PROTECT],[25,A.ICY_WIND],[30,A.FROST_BREATH],[35,A.BITE],[40,A.ICE_FANG],[47,A.SNOWSCAPE],[54,A.WEATHER_BALL],[61,A.CRUNCH],[68,A.BLIZZARD]],[e.SPHEAL]:[[1,A.ROLLOUT],[1,A.DEFENSE_CURL],[4,A.GROWL],[8,A.WATER_GUN],[12,A.POWDER_SNOW],[16,A.REST],[20,A.SNORE],[24,A.BRINE],[28,A.AURORA_BEAM],[33,A.ENCORE],[36,A.BODY_SLAM],[40,A.SURF],[44,A.BLIZZARD],[48,A.HAIL],[52,A.SHEER_COLD]],[e.SEALEO]:[[k,A.SWAGGER],[1,A.ROLLOUT],[1,A.DEFENSE_CURL],[1,A.GROWL],[1,A.WATER_GUN],[12,A.POWDER_SNOW],[16,A.REST],[20,A.SNORE],[24,A.BRINE],[28,A.AURORA_BEAM],[35,A.ENCORE],[40,A.BODY_SLAM],[46,A.SURF],[52,A.BLIZZARD],[58,A.HAIL],[64,A.SHEER_COLD]],[e.WALREIN]:[[1,A.SWAGGER],[1,A.CRUNCH],[1,A.ICE_FANG],[1,A.ROLLOUT],[1,A.DEFENSE_CURL],[1,A.GROWL],[1,A.WATER_GUN],[12,A.POWDER_SNOW],[16,A.REST],[20,A.SNORE],[24,A.BRINE],[28,A.AURORA_BEAM],[35,A.ENCORE],[40,A.BODY_SLAM],[48,A.SURF],[56,A.BLIZZARD],[64,A.HAIL],[72,A.SHEER_COLD]],[e.CLAMPERL]:[[1,A.CLAMP],[1,A.WATER_GUN],[1,A.WHIRLPOOL],[1,A.IRON_DEFENSE],[50,A.SHELL_SMASH]],[e.HUNTAIL]:[[1,A.CLAMP],[1,A.WATER_GUN],[1,A.IRON_DEFENSE],[1,A.SHELL_SMASH],[1,A.WHIRLPOOL],[1,A.BITE],[5,A.SCREECH],[9,A.SCARY_FACE],[11,A.RAIN_DANCE],[14,A.WATER_PULSE],[16,A.ICE_FANG],[19,A.BRINE],[23,A.SUCKER_PUNCH],[26,A.DIVE],[29,A.BATON_PASS],[34,A.CRUNCH],[39,A.AQUA_TAIL],[45,A.COIL],[50,A.HYDRO_PUMP]],[e.GOREBYSS]:[[1,A.CLAMP],[1,A.WATER_GUN],[1,A.IRON_DEFENSE],[1,A.SHELL_SMASH],[1,A.WHIRLPOOL],[1,A.CONFUSION],[5,A.RAIN_DANCE],[9,A.AGILITY],[11,A.DRAINING_KISS],[14,A.WATER_PULSE],[16,A.AMNESIA],[19,A.AQUA_RING],[23,A.SAFEGUARD],[26,A.DIVE],[29,A.BATON_PASS],[34,A.PSYCHIC],[39,A.AQUA_TAIL],[45,A.COIL],[50,A.HYDRO_PUMP]],[e.RELICANTH]:[[1,A.TACKLE],[1,A.HARDEN],[5,A.WATER_GUN],[10,A.ANCIENT_POWER],[15,A.YAWN],[20,A.DIVE],[25,A.TAKE_DOWN],[30,A.AQUA_TAIL],[35,A.REST],[40,A.FLAIL],[45,A.HYDRO_PUMP],[50,A.DOUBLE_EDGE],[55,A.HEAD_SMASH]],[e.LUVDISC]:[[1,A.TACKLE],[1,A.CHARM],[4,A.WATER_GUN],[7,A.AGILITY],[13,A.WISH],[17,A.WATER_PULSE],[20,A.ATTRACT],[22,A.DRAINING_KISS],[26,A.FLAIL],[31,A.SWEET_KISS],[34,A.TAKE_DOWN],[37,A.BABY_DOLL_EYES],[40,A.AQUA_RING],[42,A.SOAK],[46,A.HYDRO_PUMP],[49,A.SAFEGUARD]],[e.BAGON]:[[1,A.EMBER],[1,A.LEER],[5,A.BITE],[10,A.DRAGON_BREATH],[15,A.HEADBUTT],[20,A.SCARY_FACE],[25,A.CRUNCH],[31,A.DRAGON_CLAW],[35,A.ZEN_HEADBUTT],[40,A.FOCUS_ENERGY],[45,A.FLAMETHROWER],[50,A.OUTRAGE],[55,A.DOUBLE_EDGE]],[e.SHELGON]:[[k,A.PROTECT],[1,A.EMBER],[1,A.LEER],[1,A.BITE],[1,A.DRAGON_BREATH],[15,A.HEADBUTT],[20,A.SCARY_FACE],[25,A.CRUNCH],[33,A.DRAGON_CLAW],[39,A.ZEN_HEADBUTT],[46,A.FOCUS_ENERGY],[53,A.FLAMETHROWER],[60,A.OUTRAGE],[67,A.DOUBLE_EDGE]],[e.SALAMENCE]:[[k,A.FLY],[V,A.OUTRAGE],[1,A.PROTECT],[1,A.DRAGON_TAIL],[1,A.DUAL_WINGBEAT],[1,A.ROOST],[1,A.EMBER],[1,A.LEER],[1,A.BITE],[1,A.DRAGON_BREATH],[15,A.HEADBUTT],[20,A.SCARY_FACE],[25,A.CRUNCH],[33,A.DRAGON_CLAW],[39,A.ZEN_HEADBUTT],[46,A.FOCUS_ENERGY],[55,A.FLAMETHROWER],[73,A.DOUBLE_EDGE]],[e.BELDUM]:[[1,A.TACKLE]],[e.METANG]:[[k,A.CONFUSION],[k,A.METAL_CLAW],[1,A.TACKLE],[1,A.BULLET_PUNCH],[1,A.HONE_CLAWS],[6,A.ZEN_HEADBUTT],[12,A.MAGNET_RISE],[18,A.FLASH_CANNON],[26,A.TAKE_DOWN],[34,A.PSYCHIC],[42,A.SCARY_FACE],[50,A.METEOR_MASH],[58,A.IRON_DEFENSE],[66,A.AGILITY],[74,A.HYPER_BEAM]],[e.METAGROSS]:[[k,A.HAMMER_ARM],[V,A.EXPLOSION],[V,A.HONE_CLAWS],[1,A.CONFUSION],[1,A.METAL_CLAW],[1,A.BULLET_PUNCH],[1,A.TACKLE],[6,A.ZEN_HEADBUTT],[12,A.MAGNET_RISE],[16,A.FLASH_CANNON],[26,A.TAKE_DOWN],[34,A.PSYCHIC],[42,A.SCARY_FACE],[52,A.METEOR_MASH],[62,A.IRON_DEFENSE],[72,A.AGILITY],[82,A.HYPER_BEAM]],[e.REGIROCK]:[[1,A.CHARGE_BEAM],[1,A.ROCK_THROW],[6,A.BULLDOZE],[12,A.ANCIENT_POWER],[18,A.STOMP],[24,A.ROCK_SLIDE],[30,A.CURSE],[36,A.IRON_DEFENSE],[42,A.HAMMER_ARM],[48,A.STONE_EDGE],[54,A.SUPERPOWER],[60,A.LOCK_ON],[66,A.ZAP_CANNON],[72,A.HYPER_BEAM],[78,A.EXPLOSION]],[e.REGICE]:[[1,A.CHARGE_BEAM],[1,A.ICY_WIND],[6,A.BULLDOZE],[12,A.ANCIENT_POWER],[18,A.STOMP],[24,A.ICE_BEAM],[30,A.CURSE],[36,A.AMNESIA],[42,A.HAMMER_ARM],[48,A.BLIZZARD],[54,A.SUPERPOWER],[60,A.LOCK_ON],[66,A.ZAP_CANNON],[72,A.HYPER_BEAM],[78,A.EXPLOSION]],[e.REGISTEEL]:[[1,A.CHARGE_BEAM],[1,A.METAL_CLAW],[6,A.BULLDOZE],[12,A.ANCIENT_POWER],[18,A.STOMP],[24,A.IRON_HEAD],[24,A.FLASH_CANNON],[30,A.CURSE],[36,A.AMNESIA],[36,A.IRON_DEFENSE],[42,A.HAMMER_ARM],[48,A.HEAVY_SLAM],[54,A.SUPERPOWER],[60,A.LOCK_ON],[66,A.ZAP_CANNON],[72,A.HYPER_BEAM],[78,A.EXPLOSION]],[e.LATIAS]:[[1,A.STORED_POWER],[1,A.CHARM],[1,A.PSYWAVE],[5,A.HELPING_HAND],[10,A.RECOVER],[15,A.CONFUSION],[20,A.TAILWIND],[25,A.DRAGON_BREATH],[30,A.WISH],[35,A.MIST_BALL],[40,A.ZEN_HEADBUTT],[45,A.DRAGON_PULSE],[50,A.HEAL_PULSE],[55,A.REFLECT_TYPE],[60,A.PSYCHIC],[65,A.GUARD_SPLIT],[70,A.HEALING_WISH]],[e.LATIOS]:[[1,A.STORED_POWER],[1,A.DRAGON_DANCE],[1,A.HEAL_BLOCK],[1,A.PSYWAVE],[5,A.HELPING_HAND],[10,A.RECOVER],[15,A.CONFUSION],[20,A.TAILWIND],[25,A.DRAGON_BREATH],[30,A.ALLY_SWITCH],[35,A.LUSTER_PURGE],[40,A.ZEN_HEADBUTT],[45,A.DRAGON_PULSE],[50,A.HEAL_PULSE],[55,A.SIMPLE_BEAM],[60,A.PSYCHIC],[65,A.POWER_SPLIT],[70,A.MEMENTO]],[e.KYOGRE]:[[1,A.ORIGIN_PULSE],[1,A.WATER_PULSE],[1,A.ANCIENT_POWER],[1,A.BODY_SLAM],[1,A.SCARY_FACE],[9,A.AQUA_TAIL],[18,A.CALM_MIND],[27,A.MUDDY_WATER],[36,A.ICE_BEAM],[45,A.SHEER_COLD],[54,A.AQUA_RING],[72,A.HYDRO_PUMP],[81,A.DOUBLE_EDGE],[90,A.WATER_SPOUT]],[e.GROUDON]:[[1,A.PRECIPICE_BLADES],[1,A.MUD_SHOT],[1,A.ANCIENT_POWER],[1,A.LAVA_PLUME],[1,A.SCARY_FACE],[9,A.EARTH_POWER],[18,A.BULK_UP],[27,A.EARTHQUAKE],[36,A.HAMMER_ARM],[45,A.FISSURE],[54,A.REST],[72,A.FIRE_BLAST],[81,A.SOLAR_BEAM],[90,A.ERUPTION]],[e.RAYQUAZA]:[[1,A.DRAGON_ASCENT],[1,A.TWISTER],[1,A.ANCIENT_POWER],[1,A.AIR_SLASH],[1,A.SCARY_FACE],[9,A.CRUNCH],[18,A.DRAGON_DANCE],[27,A.EXTREME_SPEED],[36,A.DRAGON_PULSE],[45,A.HYPER_VOICE],[54,A.REST],[63,A.FLY],[72,A.HURRICANE],[81,A.OUTRAGE],[90,A.HYPER_BEAM]],[e.JIRACHI]:[[1,A.CONFUSION],[1,A.WISH],[7,A.SWIFT],[21,A.LIFE_DEW],[28,A.ZEN_HEADBUTT],[35,A.GRAVITY],[42,A.PSYCHIC],[49,A.METEOR_MASH],[56,A.HEALING_WISH],[63,A.REST],[70,A.FUTURE_SIGHT],[77,A.DOUBLE_EDGE],[84,A.COSMIC_POWER],[91,A.LAST_RESORT],[98,A.DOOM_DESIRE]],[e.DEOXYS]:[[1,A.CONFUSION],[1,A.LEER],[1,A.WRAP],[7,A.NIGHT_SHADE],[13,A.TELEPORT],[19,A.KNOCK_OFF],[25,A.PSYSHOCK],[31,A.PSYCHIC],[37,A.GRAVITY],[43,A.SKILL_SWAP],[49,A.ZEN_HEADBUTT],[55,A.COSMIC_POWER],[61,A.RECOVER],[67,A.PSYCHO_BOOST],[73,A.HYPER_BEAM]],[e.TURTWIG]:[[1,A.TACKLE],[5,A.WITHDRAW],[5,A.LEAFAGE],[9,A.GROWTH],[13,A.RAZOR_LEAF],[17,A.CURSE],[21,A.BITE],[25,A.MEGA_DRAIN],[29,A.LEECH_SEED],[33,A.SYNTHESIS],[37,A.CRUNCH],[41,A.GIGA_DRAIN],[45,A.LEAF_STORM]],[e.GROTLE]:[[1,A.TACKLE],[1,A.ABSORB],[1,A.WITHDRAW],[1,A.LEAFAGE],[1,A.GROWTH],[13,A.RAZOR_LEAF],[17,A.CURSE],[22,A.BITE],[27,A.MEGA_DRAIN],[32,A.LEECH_SEED],[37,A.SYNTHESIS],[42,A.CRUNCH],[47,A.GIGA_DRAIN],[52,A.LEAF_STORM]],[e.TORTERRA]:[[k,A.EARTHQUAKE],[1,A.TACKLE],[1,A.ABSORB],[1,A.LEAFAGE],[1,A.GROWTH],[1,A.RAZOR_LEAF],[1,A.WITHDRAW],[1,A.WOOD_HAMMER],[17,A.CURSE],[22,A.BITE],[27,A.MEGA_DRAIN],[33,A.LEECH_SEED],[39,A.SYNTHESIS],[45,A.CRUNCH],[51,A.GIGA_DRAIN],[57,A.LEAF_STORM],[63,A.HEADLONG_RUSH]],[e.CHIMCHAR]:[[1,A.SCRATCH],[1,A.LEER],[5,A.EMBER],[9,A.TAUNT],[15,A.FURY_SWIPES],[17,A.FLAME_WHEEL],[23,A.NASTY_PLOT],[25,A.TORMENT],[31,A.FACADE],[33,A.FIRE_SPIN],[39,A.ACROBATICS],[41,A.SLACK_OFF],[47,A.FLAMETHROWER]],[e.MONFERNO]:[[k,A.MACH_PUNCH],[V,A.NASTY_PLOT],[V,A.FACADE],[V,A.FLAMETHROWER],[1,A.SCRATCH],[1,A.LEER],[1,A.EMBER],[9,A.TAUNT],[16,A.FURY_SWIPES],[19,A.FLAME_WHEEL],[26,A.FEINT],[29,A.TORMENT],[36,A.CLOSE_COMBAT],[39,A.FIRE_SPIN],[46,A.ACROBATICS],[49,A.SLACK_OFF],[56,A.FLARE_BLITZ]],[e.INFERNAPE]:[[k,A.CLOSE_COMBAT],[V,A.TAUNT],[V,A.NASTY_PLOT],[V,A.FACADE],[V,A.SLACK_OFF],[V,A.FLAMETHROWER],[1,A.SCRATCH],[1,A.LEER],[1,A.EMBER],[1,A.MACH_PUNCH],[16,A.FURY_SWIPES],[19,A.FLAME_WHEEL],[26,A.FEINT],[29,A.TORMENT],[42,A.FIRE_SPIN],[47,A.FLARE_BLITZ],[52,A.ACROBATICS],[58,A.CALM_MIND],[65,A.RAGING_FURY]],[e.PIPLUP]:[[1,A.POUND],[4,A.GROWL],[5,A.WATER_GUN],[11,A.CHARM],[15,A.PECK],[18,A.BUBBLE_BEAM],[22,A.SWAGGER],[25,A.FURY_ATTACK],[29,A.BRINE],[32,A.WHIRLPOOL],[36,A.MIST],[39,A.DRILL_PECK],[43,A.HYDRO_PUMP]],[e.PRINPLUP]:[[k,A.METAL_CLAW],[1,A.TACKLE],[1,A.GROWL],[1,A.WATER_GUN],[1,A.CHARM],[15,A.PECK],[19,A.BUBBLE_BEAM],[24,A.SWAGGER],[28,A.FURY_ATTACK],[33,A.BRINE],[37,A.WHIRLPOOL],[42,A.MIST],[46,A.DRILL_PECK],[50,A.HYDRO_PUMP]],[e.EMPOLEON]:[[k,A.AQUA_JET],[1,A.TACKLE],[1,A.GROWL],[1,A.WATER_GUN],[1,A.CHARM],[1,A.METAL_CLAW],[11,A.SWORDS_DANCE],[15,A.PECK],[19,A.BUBBLE_BEAM],[24,A.SWAGGER],[28,A.FURY_ATTACK],[33,A.BRINE],[39,A.WHIRLPOOL],[46,A.MIST],[52,A.DRILL_PECK],[59,A.HYDRO_PUMP],[66,A.WAVE_CRASH]],[e.STARLY]:[[1,A.TACKLE],[1,A.GROWL],[5,A.QUICK_ATTACK],[9,A.WING_ATTACK],[13,A.DOUBLE_TEAM],[17,A.ENDEAVOR],[21,A.WHIRLWIND],[25,A.AERIAL_ACE],[29,A.TAKE_DOWN],[33,A.AGILITY],[37,A.BRAVE_BIRD],[41,A.FINAL_GAMBIT]],[e.STARAVIA]:[[1,A.TACKLE],[1,A.GROWL],[1,A.QUICK_ATTACK],[9,A.WING_ATTACK],[13,A.DOUBLE_TEAM],[18,A.ENDEAVOR],[23,A.WHIRLWIND],[28,A.AERIAL_ACE],[33,A.TAKE_DOWN],[38,A.AGILITY],[43,A.BRAVE_BIRD],[48,A.FINAL_GAMBIT]],[e.STARAPTOR]:[[k,A.CLOSE_COMBAT],[1,A.WING_ATTACK],[1,A.TACKLE],[1,A.GROWL],[1,A.QUICK_ATTACK],[13,A.DOUBLE_TEAM],[18,A.ENDEAVOR],[23,A.WHIRLWIND],[28,A.AERIAL_ACE],[33,A.TAKE_DOWN],[41,A.AGILITY],[49,A.BRAVE_BIRD],[57,A.FINAL_GAMBIT]],[e.BIDOOF]:[[1,A.TACKLE],[1,A.GROWL],[5,A.DEFENSE_CURL],[9,A.ROLLOUT],[13,A.HEADBUTT],[17,A.HYPER_FANG],[21,A.YAWN],[25,A.CRUNCH],[29,A.TAKE_DOWN],[33,A.SUPER_FANG],[37,A.SWORDS_DANCE],[41,A.AMNESIA],[45,A.SUPERPOWER],[49,A.CURSE]],[e.BIBAREL]:[[k,A.WATER_GUN],[1,A.TACKLE],[1,A.GROWL],[1,A.AQUA_JET],[1,A.ROTOTILLER],[5,A.DEFENSE_CURL],[9,A.ROLLOUT],[13,A.HEADBUTT],[18,A.HYPER_FANG],[23,A.YAWN],[28,A.CRUNCH],[33,A.TAKE_DOWN],[38,A.SUPER_FANG],[43,A.SWORDS_DANCE],[48,A.AMNESIA],[53,A.SUPERPOWER],[58,A.CURSE]],[e.KRICKETOT]:[[1,A.TACKLE],[1,A.GROWL],[1,A.BIDE],[6,A.STRUGGLE_BUG],[16,A.BUG_BITE]],[e.KRICKETUNE]:[[k,A.FURY_CUTTER],[1,A.TACKLE],[1,A.GROWL],[1,A.BIDE],[1,A.STRUGGLE_BUG],[1,A.BUG_BITE],[14,A.ABSORB],[18,A.SING],[22,A.FOCUS_ENERGY],[26,A.SLASH],[30,A.X_SCISSOR],[34,A.SCREECH],[36,A.FELL_STINGER],[38,A.TAUNT],[42,A.NIGHT_SLASH],[44,A.STICKY_WEB],[46,A.BUG_BUZZ],[50,A.PERISH_SONG]],[e.SHINX]:[[1,A.TACKLE],[1,A.LEER],[4,A.THUNDER_SHOCK],[8,A.CHARGE],[12,A.BITE],[16,A.SPARK],[20,A.ROAR],[24,A.VOLT_SWITCH],[28,A.SCARY_FACE],[32,A.THUNDER_WAVE],[36,A.CRUNCH],[40,A.DISCHARGE],[44,A.SWAGGER],[48,A.WILD_CHARGE]],[e.LUXIO]:[[1,A.TACKLE],[1,A.LEER],[1,A.THUNDER_SHOCK],[1,A.CHARGE],[12,A.BITE],[18,A.SPARK],[24,A.ROAR],[31,A.VOLT_SWITCH],[36,A.SCARY_FACE],[42,A.THUNDER_WAVE],[48,A.CRUNCH],[54,A.DISCHARGE],[60,A.SWAGGER],[68,A.WILD_CHARGE]],[e.LUXRAY]:[[1,A.TACKLE],[1,A.LEER],[1,A.THUNDER_SHOCK],[1,A.CHARGE],[1,A.ELECTRIC_TERRAIN],[12,A.BITE],[18,A.SPARK],[24,A.ROAR],[33,A.VOLT_SWITCH],[40,A.SCARY_FACE],[48,A.THUNDER_WAVE],[56,A.CRUNCH],[64,A.DISCHARGE],[72,A.SWAGGER],[80,A.WILD_CHARGE]],[e.BUDEW]:[[1,A.ABSORB],[1,A.GROWTH],[1,A.STUN_SPORE],[1,A.WORRY_SEED]],[e.ROSERADE]:[[1,A.POISON_STING],[1,A.ABSORB],[1,A.MEGA_DRAIN],[1,A.LEECH_SEED],[1,A.GROWTH],[1,A.STUN_SPORE],[1,A.PETAL_DANCE],[1,A.TOXIC],[1,A.GIGA_DRAIN],[1,A.SWEET_SCENT],[1,A.SYNTHESIS],[1,A.INGRAIN],[1,A.AROMATHERAPY],[1,A.MAGICAL_LEAF],[1,A.WORRY_SEED],[1,A.TOXIC_SPIKES],[1,A.PETAL_BLIZZARD],[1,A.GRASSY_TERRAIN],[1,A.VENOM_DRENCH]],[e.CRANIDOS]:[[1,A.HEADBUTT],[1,A.LEER],[6,A.FOCUS_ENERGY],[10,A.PURSUIT],[15,A.TAKE_DOWN],[19,A.SCARY_FACE],[24,A.ASSURANCE],[28,A.CHIP_AWAY],[33,A.ANCIENT_POWER],[37,A.ZEN_HEADBUTT],[42,A.SCREECH],[46,A.HEAD_SMASH]],[e.RAMPARDOS]:[[k,A.ENDEAVOR],[1,A.HEADBUTT],[1,A.LEER],[1,A.FOCUS_ENERGY],[1,A.PURSUIT],[15,A.TAKE_DOWN],[19,A.SCARY_FACE],[24,A.ASSURANCE],[28,A.CHIP_AWAY],[36,A.ANCIENT_POWER],[43,A.ZEN_HEADBUTT],[51,A.SCREECH],[58,A.HEAD_SMASH]],[e.SHIELDON]:[[1,A.TACKLE],[1,A.PROTECT],[6,A.TAUNT],[10,A.METAL_SOUND],[15,A.TAKE_DOWN],[19,A.IRON_DEFENSE],[24,A.SWAGGER],[28,A.ANCIENT_POWER],[33,A.ENDURE],[37,A.METAL_BURST],[42,A.IRON_HEAD],[46,A.HEAVY_SLAM]],[e.BASTIODON]:[[k,A.BLOCK],[V,A.WIDE_GUARD],[1,A.TACKLE],[1,A.PROTECT],[1,A.TAUNT],[1,A.METAL_SOUND],[15,A.TAKE_DOWN],[19,A.IRON_DEFENSE],[24,A.SWAGGER],[28,A.ANCIENT_POWER],[36,A.ENDURE],[43,A.METAL_BURST],[51,A.IRON_HEAD],[58,A.HEAVY_SLAM]],[e.BURMY]:[[1,A.PROTECT],[1,A.STRUGGLE_BUG],[10,A.TACKLE],[15,A.BUG_BITE],[20,A.STRING_SHOT]],[e.WORMADAM]:[[k,A.QUIVER_DANCE],[1,A.STRUGGLE_BUG],[1,A.TACKLE],[1,A.PROTECT],[1,A.SUCKER_PUNCH],[1,A.BUG_BITE],[1,A.PROTECT],[10,A.TACKLE],[20,A.STRING_SHOT],[23,A.CONFUSION],[26,A.RAZOR_LEAF],[29,A.GROWTH],[32,A.PSYBEAM],[35,A.INFESTATION],[38,A.FLAIL],[41,A.ATTRACT],[44,A.PSYCHIC],[47,A.LEAF_STORM],[50,A.BUG_BUZZ]],[e.MOTHIM]:[[k,A.QUIVER_DANCE],[1,A.STRUGGLE_BUG],[1,A.TACKLE],[1,A.PROTECT],[1,A.BUG_BITE],[10,A.PROTECT],[15,A.BUG_BITE],[20,A.STRING_SHOT],[23,A.CONFUSION],[26,A.GUST],[29,A.POISON_POWDER],[32,A.PSYBEAM],[35,A.ROOST],[38,A.STRUGGLE_BUG],[41,A.AIR_SLASH],[44,A.PSYCHIC],[47,A.LUNGE],[50,A.BUG_BUZZ]],[e.COMBEE]:[[1,A.GUST],[1,A.SWEET_SCENT],[1,A.BUG_BITE],[1,A.STRUGGLE_BUG]],[e.VESPIQUEN]:[[k,A.SLASH],[1,A.GUST],[1,A.POISON_STING],[1,A.CONFUSE_RAY],[1,A.SWEET_SCENT],[1,A.BUG_BITE],[1,A.STRUGGLE_BUG],[4,A.FURY_CUTTER],[8,A.AROMATIC_MIST],[12,A.FELL_STINGER],[16,A.FURY_SWIPES],[20,A.SWAGGER],[24,A.ROOST],[28,A.AIR_SLASH],[32,A.POWER_GEM],[36,A.TOXIC],[40,A.ATTACK_ORDER],[40,A.DEFEND_ORDER],[40,A.HEAL_ORDER],[44,A.DESTINY_BOND]],[e.PACHIRISU]:[[1,A.GROWL],[1,A.THUNDER_SHOCK],[1,A.BIDE],[5,A.QUICK_ATTACK],[9,A.CHARM],[13,A.SPARK],[17,A.ENDURE],[19,A.NUZZLE],[21,A.SWIFT],[25,A.ELECTRO_BALL],[29,A.SWEET_KISS],[33,A.THUNDER_WAVE],[37,A.SUPER_FANG],[41,A.DISCHARGE],[45,A.LAST_RESORT],[49,A.THUNDER]],[e.BUIZEL]:[[1,A.TACKLE],[4,A.GROWL],[7,A.SOAK],[11,A.QUICK_ATTACK],[15,A.WATER_GUN],[18,A.BITE],[21,A.SWIFT],[24,A.AQUA_JET],[27,A.DOUBLE_HIT],[31,A.WHIRLPOOL],[35,A.LIQUIDATION],[38,A.AQUA_TAIL],[41,A.AGILITY],[45,A.HYDRO_PUMP],[49,A.WAVE_CRASH]],[e.FLOATZEL]:[[1,A.TACKLE],[1,A.GROWL],[1,A.QUICK_ATTACK],[1,A.CRUNCH],[1,A.ICE_FANG],[1,A.SOAK],[15,A.WATER_GUN],[18,A.BITE],[21,A.SWIFT],[24,A.AQUA_JET],[29,A.DOUBLE_HIT],[35,A.WHIRLPOOL],[41,A.LIQUIDATION],[46,A.AQUA_TAIL],[51,A.AGILITY],[57,A.HYDRO_PUMP],[62,A.WAVE_CRASH]],[e.CHERUBI]:[[1,A.TACKLE],[1,A.MORNING_SUN],[5,A.LEAFAGE],[10,A.GROWTH],[15,A.HELPING_HAND],[20,A.MAGICAL_LEAF],[26,A.LEECH_SEED],[30,A.TAKE_DOWN],[35,A.PETAL_BLIZZARD],[40,A.WORRY_SEED],[45,A.SOLAR_BEAM]],[e.CHERRIM]:[[k,A.SUNNY_DAY],[1,A.TACKLE],[1,A.GROWTH],[1,A.MORNING_SUN],[1,A.FLOWER_SHIELD],[1,A.LEAFAGE],[15,A.HELPING_HAND],[20,A.MAGICAL_LEAF],[28,A.LEECH_SEED],[34,A.TAKE_DOWN],[41,A.PETAL_BLIZZARD],[48,A.WORRY_SEED],[55,A.SOLAR_BEAM],[62,A.PETAL_DANCE]],[e.SHELLOS]:[[1,A.WATER_GUN],[1,A.MUD_SLAP],[5,A.HARDEN],[10,A.RECOVER],[15,A.WATER_PULSE],[20,A.ANCIENT_POWER],[25,A.BODY_SLAM],[31,A.MUDDY_WATER],[35,A.EARTH_POWER],[40,A.RAIN_DANCE],[45,A.MEMENTO]],[e.GASTRODON]:[[1,A.WATER_GUN],[1,A.RECOVER],[1,A.HARDEN],[1,A.MUD_SLAP],[1,A.MUD_SPORT],[15,A.WATER_PULSE],[20,A.ANCIENT_POWER],[25,A.BODY_SLAM],[33,A.MUDDY_WATER],[39,A.EARTH_POWER],[46,A.RAIN_DANCE],[53,A.MEMENTO]],[e.AMBIPOM]:[[1,A.SCRATCH],[1,A.SAND_ATTACK],[1,A.TAIL_WHIP],[1,A.ASTONISH],[11,A.BATON_PASS],[15,A.TICKLE],[18,A.FURY_SWIPES],[22,A.SWIFT],[25,A.SCREECH],[29,A.AGILITY],[32,A.DOUBLE_HIT],[36,A.FLING],[39,A.NASTY_PLOT],[43,A.LAST_RESORT]],[e.DRIFLOON]:[[1,A.MINIMIZE],[1,A.ASTONISH],[1,A.CONSTRICT],[4,A.GUST],[8,A.FOCUS_ENERGY],[12,A.PAYBACK],[16,A.HEX],[20,A.SHADOW_BALL],[24,A.STOCKPILE],[24,A.SPIT_UP],[24,A.SWALLOW],[29,A.SELF_DESTRUCT],[32,A.DESTINY_BOND],[36,A.BATON_PASS],[40,A.TAILWIND],[44,A.EXPLOSION]],[e.DRIFBLIM]:[[k,A.PHANTOM_FORCE],[1,A.GUST],[1,A.MINIMIZE],[1,A.FOCUS_ENERGY],[1,A.ASTONISH],[1,A.CONSTRICT],[1,A.STRENGTH_SAP],[12,A.PAYBACK],[16,A.HEX],[20,A.SHADOW_BALL],[24,A.STOCKPILE],[24,A.SPIT_UP],[24,A.SWALLOW],[31,A.SELF_DESTRUCT],[36,A.DESTINY_BOND],[42,A.BATON_PASS],[48,A.TAILWIND],[54,A.EXPLOSION]],[e.BUNEARY]:[[1,A.FRUSTRATION],[1,A.POUND],[1,A.SPLASH],[4,A.DEFENSE_CURL],[8,A.BABY_DOLL_EYES],[12,A.AFTER_YOU],[16,A.QUICK_ATTACK],[20,A.DOUBLE_KICK],[24,A.CHARM],[28,A.BATON_PASS],[32,A.HEADBUTT],[36,A.AGILITY],[40,A.ENTRAINMENT],[44,A.FLATTER],[48,A.BOUNCE],[52,A.HEALING_WISH]],[e.LOPUNNY]:[[k,A.RETURN],[1,A.FRUSTRATION],[1,A.POUND],[1,A.DEFENSE_CURL],[1,A.SPLASH],[1,A.MIRROR_COAT],[1,A.MAGIC_COAT],[1,A.BABY_DOLL_EYES],[1,A.ROTOTILLER],[12,A.AFTER_YOU],[16,A.QUICK_ATTACK],[20,A.DOUBLE_KICK],[24,A.CHARM],[28,A.BATON_PASS],[32,A.HEADBUTT],[36,A.AGILITY],[40,A.ENTRAINMENT],[44,A.FLATTER],[48,A.BOUNCE],[52,A.HEALING_WISH],[56,A.HIGH_JUMP_KICK]],[e.MISMAGIUS]:[[V,A.CONFUSION],[V,A.CONFUSE_RAY],[V,A.MEAN_LOOK],[V,A.HEX],[V,A.PSYBEAM],[V,A.PAIN_SPLIT],[V,A.PAYBACK],[V,A.SHADOW_BALL],[V,A.PERISH_SONG],[1,A.GROWL],[1,A.SPITE],[1,A.PSYWAVE],[1,A.LUCKY_CHANT],[1,A.ASTONISH],[1,A.MAGICAL_LEAF],[1,A.POWER_GEM],[1,A.PHANTOM_FORCE],[1,A.MYSTICAL_FIRE]],[e.HONCHKROW]:[[1,A.PECK],[1,A.ASTONISH],[1,A.GUST],[1,A.HAZE],[1,A.WING_ATTACK],[1,A.NIGHT_SHADE],[1,A.ASSURANCE],[1,A.TAUNT],[1,A.MEAN_LOOK],[1,A.SUCKER_PUNCH],[1,A.NIGHT_SLASH],[1,A.TORMENT],[1,A.QUASH],[1,A.PURSUIT],[25,A.SWAGGER],[35,A.NASTY_PLOT],[45,A.FOUL_PLAY],[55,A.DARK_PULSE],[65,A.COMEUPPANCE]],[e.GLAMEOW]:[[1,A.FAKE_OUT],[5,A.SCRATCH],[8,A.GROWL],[13,A.HYPNOSIS],[17,A.AERIAL_ACE],[20,A.FURY_SWIPES],[25,A.CHARM],[29,A.TAUNT],[32,A.RETALIATE],[37,A.SLASH],[41,A.SUCKER_PUNCH],[44,A.ATTRACT],[48,A.HONE_CLAWS],[50,A.PLAY_ROUGH]],[e.PURUGLY]:[[k,A.SWAGGER],[1,A.SCRATCH],[1,A.PLAY_ROUGH],[1,A.SUCKER_PUNCH],[1,A.GROWL],[1,A.FAKE_OUT],[13,A.HYPNOSIS],[17,A.AERIAL_ACE],[20,A.FURY_SWIPES],[25,A.CHARM],[29,A.TAUNT],[32,A.RETALIATE],[37,A.SLASH],[45,A.BODY_SLAM],[52,A.ATTRACT],[60,A.HONE_CLAWS]],[e.CHINGLING]:[[1,A.WRAP],[1,A.PSYWAVE],[4,A.GROWL],[7,A.ASTONISH],[10,A.CONFUSION],[13,A.YAWN],[16,A.LAST_RESORT],[19,A.ENTRAINMENT],[32,A.UPROAR]],[e.STUNKY]:[[1,A.SCRATCH],[1,A.POISON_GAS],[3,A.FEINT],[6,A.SMOKESCREEN],[9,A.ACID_SPRAY],[12,A.FURY_SWIPES],[15,A.FOCUS_ENERGY],[18,A.BITE],[21,A.VENOSHOCK],[24,A.SCREECH],[27,A.TOXIC],[30,A.SUCKER_PUNCH],[33,A.MEMENTO],[36,A.NIGHT_SLASH],[39,A.BELCH],[42,A.EXPLOSION]],[e.SKUNTANK]:[[k,A.FLAMETHROWER],[1,A.SCRATCH],[1,A.SMOKESCREEN],[1,A.POISON_GAS],[1,A.FEINT],[1,A.ACID_SPRAY],[12,A.FURY_SWIPES],[15,A.FOCUS_ENERGY],[18,A.BITE],[21,A.VENOSHOCK],[24,A.SCREECH],[27,A.TOXIC],[30,A.SUCKER_PUNCH],[33,A.MEMENTO],[38,A.NIGHT_SLASH],[43,A.BELCH],[48,A.EXPLOSION]],[e.BRONZOR]:[[1,A.TACKLE],[1,A.CONFUSION],[4,A.CONFUSE_RAY],[8,A.PAYBACK],[12,A.IMPRISON],[16,A.GYRO_BALL],[20,A.HYPNOSIS],[24,A.SAFEGUARD],[28,A.EXTRASENSORY],[32,A.HEAVY_SLAM],[36,A.IRON_DEFENSE],[40,A.METAL_SOUND],[44,A.FUTURE_SIGHT],[45,A.HEAL_BLOCK]],[e.BRONZONG]:[[k,A.BLOCK],[1,A.TACKLE],[1,A.CONFUSION],[1,A.CONFUSE_RAY],[1,A.SUNNY_DAY],[1,A.WEATHER_BALL],[1,A.PAYBACK],[12,A.IMPRISON],[16,A.GYRO_BALL],[20,A.HYPNOSIS],[24,A.SAFEGUARD],[28,A.EXTRASENSORY],[32,A.HEAVY_SLAM],[38,A.IRON_DEFENSE],[44,A.METAL_SOUND],[50,A.FUTURE_SIGHT],[52,A.HEAL_BLOCK],[56,A.RAIN_DANCE]],[e.BONSLY]:[[1,A.FAKE_TEARS],[1,A.COPYCAT],[1,A.TACKLE],[4,A.FLAIL],[8,A.ROCK_THROW],[12,A.BLOCK],[16,A.MIMIC],[20,A.ROCK_TOMB],[24,A.TEARFUL_LOOK],[28,A.SUCKER_PUNCH],[32,A.ROCK_SLIDE],[36,A.LOW_KICK],[40,A.COUNTER],[44,A.DOUBLE_EDGE]],[e.MIME_JR]:[[1,A.POUND],[1,A.COPYCAT],[1,A.BARRIER],[1,A.TICKLE],[4,A.BATON_PASS],[8,A.ENCORE],[12,A.CONFUSION],[16,A.MIMIC],[20,A.PROTECT],[24,A.RECYCLE],[28,A.PSYBEAM],[32,A.ROLE_PLAY],[36,A.LIGHT_SCREEN],[36,A.REFLECT],[36,A.SAFEGUARD],[40,A.SUCKER_PUNCH],[44,A.DAZZLING_GLEAM],[48,A.PSYCHIC],[52,A.TEETER_DANCE]],[e.HAPPINY]:[[1,A.POUND],[1,A.COPYCAT],[4,A.DEFENSE_CURL],[8,A.SWEET_KISS],[12,A.DISARMING_VOICE],[16,A.COVET],[20,A.CHARM]],[e.CHATOT]:[[1,A.PECK],[1,A.TAUNT],[1,A.HYPER_VOICE],[1,A.CHATTER],[1,A.CONFIDE],[5,A.GROWL],[9,A.MIRROR_MOVE],[13,A.SING],[17,A.FURY_ATTACK],[29,A.ROUND],[33,A.MIMIC],[37,A.ECHOED_VOICE],[41,A.ROOST],[45,A.UPROAR],[49,A.SYNCHRONOISE],[50,A.FEATHER_DANCE]],[e.SPIRITOMB]:[[1,A.NIGHT_SHADE],[1,A.CONFUSE_RAY],[1,A.PURSUIT],[5,A.SHADOW_SNEAK],[10,A.SPITE],[15,A.PAYBACK],[20,A.NASTY_PLOT],[25,A.HEX],[30,A.MEMENTO],[35,A.SUCKER_PUNCH],[40,A.CURSE],[45,A.SHADOW_BALL],[50,A.DARK_PULSE],[55,A.HYPNOSIS],[60,A.DREAM_EATER]],[e.GIBLE]:[[1,A.TACKLE],[1,A.SAND_TOMB],[6,A.SAND_ATTACK],[12,A.DRAGON_BREATH],[18,A.BULLDOZE],[25,A.BITE],[30,A.SLASH],[36,A.DRAGON_CLAW],[42,A.DIG],[48,A.SANDSTORM],[54,A.TAKE_DOWN],[60,A.DRAGON_RUSH]],[e.GABITE]:[[1,A.SAND_ATTACK],[1,A.TACKLE],[1,A.DRAGON_BREATH],[1,A.SAND_TOMB],[1,A.DUAL_CHOP],[18,A.BULLDOZE],[27,A.BITE],[34,A.SLASH],[42,A.DRAGON_CLAW],[50,A.DIG],[58,A.SANDSTORM],[66,A.TAKE_DOWN],[74,A.DRAGON_RUSH]],[e.GARCHOMP]:[[k,A.CRUNCH],[1,A.SAND_ATTACK],[1,A.TACKLE],[1,A.DRAGON_BREATH],[1,A.SAND_TOMB],[1,A.DUAL_CHOP],[18,A.BULLDOZE],[27,A.BITE],[34,A.SLASH],[42,A.DRAGON_CLAW],[52,A.DIG],[62,A.SANDSTORM],[72,A.TAKE_DOWN],[82,A.DRAGON_RUSH]],[e.MUNCHLAX]:[[1,A.TACKLE],[1,A.LICK],[1,A.ODOR_SLEUTH],[4,A.DEFENSE_CURL],[8,A.RECYCLE],[12,A.COVET],[16,A.BITE],[20,A.STOCKPILE],[20,A.SWALLOW],[24,A.SCREECH],[28,A.BODY_SLAM],[32,A.FLING],[36,A.AMNESIA],[40,A.METRONOME],[44,A.FLAIL],[48,A.BELLY_DRUM],[52,A.LAST_RESORT]],[e.RIOLU]:[[1,A.QUICK_ATTACK],[1,A.ENDURE],[4,A.FEINT],[8,A.METAL_CLAW],[12,A.COUNTER],[16,A.WORK_UP],[20,A.ROCK_SMASH],[24,A.VACUUM_WAVE],[28,A.SCREECH],[32,A.QUICK_GUARD],[36,A.FORCE_PALM],[40,A.SWORDS_DANCE],[44,A.HELPING_HAND],[48,A.COPYCAT],[52,A.FINAL_GAMBIT],[56,A.REVERSAL]],[e.LUCARIO]:[[k,A.AURA_SPHERE],[1,A.QUICK_ATTACK],[1,A.ENDURE],[1,A.SCREECH],[1,A.REVERSAL],[1,A.DETECT],[1,A.METAL_CLAW],[1,A.ROCK_SMASH],[1,A.HELPING_HAND],[1,A.FEINT],[1,A.COPYCAT],[1,A.VACUUM_WAVE],[1,A.FINAL_GAMBIT],[1,A.LIFE_DEW],[12,A.COUNTER],[16,A.WORK_UP],[20,A.FORCE_PALM],[24,A.CALM_MIND],[28,A.METAL_SOUND],[32,A.QUICK_GUARD],[36,A.BONE_RUSH],[40,A.SWORDS_DANCE],[44,A.HEAL_PULSE],[48,A.METEOR_MASH],[52,A.DRAGON_PULSE],[56,A.EXTREME_SPEED],[60,A.CLOSE_COMBAT]],[e.HIPPOPOTAS]:[[1,A.SAND_ATTACK],[1,A.TACKLE],[4,A.BITE],[8,A.YAWN],[12,A.SAND_TOMB],[16,A.DIG],[20,A.CRUNCH],[24,A.SANDSTORM],[28,A.TAKE_DOWN],[32,A.ROAR],[36,A.REST],[40,A.EARTHQUAKE],[44,A.DOUBLE_EDGE],[48,A.FISSURE],[52,A.SLACK_OFF]],[e.HIPPOWDON]:[[1,A.SAND_ATTACK],[1,A.TACKLE],[1,A.BITE],[1,A.YAWN],[1,A.THUNDER_FANG],[1,A.ICE_FANG],[1,A.FIRE_FANG],[12,A.SAND_TOMB],[16,A.DIG],[20,A.CRUNCH],[24,A.SANDSTORM],[28,A.TAKE_DOWN],[32,A.ROAR],[38,A.REST],[44,A.EARTHQUAKE],[50,A.DOUBLE_EDGE],[56,A.FISSURE],[62,A.SLACK_OFF]],[e.SKORUPI]:[[1,A.POISON_STING],[1,A.LEER],[3,A.HONE_CLAWS],[6,A.FELL_STINGER],[9,A.POISON_FANG],[12,A.BITE],[15,A.TOXIC_SPIKES],[18,A.BUG_BITE],[21,A.VENOSHOCK],[24,A.KNOCK_OFF],[27,A.SCARY_FACE],[30,A.PIN_MISSILE],[33,A.TOXIC],[36,A.NIGHT_SLASH],[39,A.CROSS_POISON],[42,A.X_SCISSOR],[45,A.ACUPRESSURE],[48,A.CRUNCH]],[e.DRAPION]:[[1,A.POISON_STING],[1,A.LEER],[1,A.THUNDER_FANG],[1,A.ICE_FANG],[1,A.FIRE_FANG],[1,A.HONE_CLAWS],[1,A.FELL_STINGER],[9,A.POISON_FANG],[12,A.BITE],[15,A.TOXIC_SPIKES],[18,A.BUG_BITE],[21,A.VENOSHOCK],[24,A.KNOCK_OFF],[27,A.SCARY_FACE],[30,A.PIN_MISSILE],[33,A.TOXIC],[36,A.NIGHT_SLASH],[39,A.CROSS_POISON],[44,A.X_SCISSOR],[49,A.ACUPRESSURE],[54,A.CRUNCH]],[e.CROAGUNK]:[[1,A.POISON_STING],[1,A.MUD_SLAP],[4,A.ASTONISH],[8,A.TAUNT],[12,A.FLATTER],[16,A.LOW_KICK],[20,A.VENOSHOCK],[24,A.SUCKER_PUNCH],[28,A.SWAGGER],[32,A.POISON_JAB],[36,A.TOXIC],[40,A.NASTY_PLOT],[44,A.SLUDGE_BOMB],[48,A.BELCH]],[e.TOXICROAK]:[[1,A.POISON_STING],[1,A.MUD_SLAP],[1,A.TAUNT],[1,A.ASTONISH],[12,A.FLATTER],[16,A.LOW_KICK],[20,A.VENOSHOCK],[24,A.SUCKER_PUNCH],[28,A.SWAGGER],[32,A.POISON_JAB],[36,A.TOXIC],[42,A.NASTY_PLOT],[48,A.SLUDGE_BOMB],[54,A.BELCH]],[e.CARNIVINE]:[[1,A.BIND],[1,A.GROWTH],[1,A.LEAFAGE],[7,A.BITE],[11,A.VINE_WHIP],[17,A.SWEET_SCENT],[21,A.INGRAIN],[27,A.GRASS_KNOT],[31,A.LEAF_TORNADO],[37,A.STOCKPILE],[37,A.SPIT_UP],[37,A.SWALLOW],[41,A.CRUNCH],[47,A.SEED_BOMB],[50,A.POWER_WHIP]],[e.FINNEON]:[[1,A.POUND],[6,A.WATER_GUN],[13,A.RAIN_DANCE],[17,A.GUST],[22,A.WATER_PULSE],[26,A.ATTRACT],[29,A.SAFEGUARD],[33,A.AQUA_RING],[38,A.WHIRLPOOL],[42,A.U_TURN],[45,A.BOUNCE],[49,A.TAILWIND],[54,A.SOAK]],[e.LUMINEON]:[[1,A.POUND],[1,A.GUST],[1,A.WATER_GUN],[1,A.SOAK],[13,A.RAIN_DANCE],[22,A.WATER_PULSE],[26,A.ATTRACT],[29,A.SAFEGUARD],[35,A.AQUA_RING],[42,A.WHIRLPOOL],[48,A.U_TURN],[53,A.BOUNCE],[59,A.TAILWIND]],[e.MANTYKE]:[[1,A.TACKLE],[1,A.WATER_GUN],[4,A.SUPERSONIC],[8,A.WING_ATTACK],[12,A.WATER_PULSE],[16,A.WIDE_GUARD],[20,A.AGILITY],[24,A.BUBBLE_BEAM],[28,A.HEADBUTT],[32,A.AIR_SLASH],[36,A.AQUA_RING],[40,A.BOUNCE],[44,A.TAKE_DOWN],[48,A.HYDRO_PUMP]],[e.SNOVER]:[[1,A.LEER],[1,A.POWDER_SNOW],[5,A.LEAFAGE],[10,A.MIST],[15,A.ICE_SHARD],[20,A.RAZOR_LEAF],[25,A.ICY_WIND],[30,A.SWAGGER],[35,A.INGRAIN],[41,A.WOOD_HAMMER],[45,A.BLIZZARD],[50,A.SHEER_COLD]],[e.ABOMASNOW]:[[k,A.ICE_PUNCH],[1,A.LEER],[1,A.MIST],[1,A.POWDER_SNOW],[1,A.LEAFAGE],[1,A.AURORA_VEIL],[15,A.ICE_SHARD],[20,A.RAZOR_LEAF],[25,A.ICY_WIND],[30,A.SWAGGER],[35,A.INGRAIN],[43,A.WOOD_HAMMER],[49,A.BLIZZARD],[56,A.SHEER_COLD]],[e.WEAVILE]:[[1,A.SCRATCH],[1,A.LEER],[1,A.AGILITY],[1,A.QUICK_ATTACK],[1,A.SLASH],[1,A.BEAT_UP],[1,A.TAUNT],[1,A.ASSURANCE],[1,A.ICE_SHARD],[1,A.EMBARGO],[18,A.METAL_CLAW],[24,A.ICY_WIND],[30,A.FURY_SWIPES],[36,A.HONE_CLAWS],[42,A.FLING],[48,A.NASTY_PLOT],[54,A.SCREECH],[60,A.NIGHT_SLASH],[66,A.DARK_PULSE]],[e.MAGNEZONE]:[[1,A.TACKLE],[1,A.SUPERSONIC],[1,A.THUNDER_SHOCK],[1,A.THUNDER_WAVE],[1,A.BARRIER],[1,A.TRI_ATTACK],[1,A.MIRROR_COAT],[1,A.MAGNETIC_FLUX],[1,A.ELECTRIC_TERRAIN],[12,A.ELECTRO_BALL],[16,A.GYRO_BALL],[20,A.SPARK],[24,A.SCREECH],[28,A.MAGNET_RISE],[34,A.FLASH_CANNON],[40,A.DISCHARGE],[46,A.METAL_SOUND],[52,A.LIGHT_SCREEN],[58,A.LOCK_ON],[64,A.ZAP_CANNON]],[e.LICKILICKY]:[[1,A.SUPERSONIC],[1,A.DEFENSE_CURL],[1,A.LICK],[1,A.TACKLE],[1,A.ROLLOUT],[1,A.WRING_OUT],[6,A.REST],[18,A.WRAP],[24,A.DISABLE],[30,A.STOMP],[36,A.KNOCK_OFF],[42,A.SCREECH],[48,A.SLAM],[54,A.POWER_WHIP],[60,A.BELLY_DRUM]],[e.RHYPERIOR]:[[1,A.TACKLE],[1,A.TAIL_WHIP],[1,A.HAMMER_ARM],[1,A.SMACK_DOWN],[1,A.BULLDOZE],[15,A.HORN_ATTACK],[20,A.SCARY_FACE],[25,A.STOMP],[30,A.ROCK_BLAST],[35,A.DRILL_RUN],[40,A.TAKE_DOWN],[47,A.EARTHQUAKE],[54,A.STONE_EDGE],[61,A.MEGAHORN],[68,A.HORN_DRILL],[75,A.ROCK_WRECKER]],[e.TANGROWTH]:[[1,A.BIND],[1,A.ABSORB],[1,A.GROWTH],[1,A.STUN_SPORE],[1,A.BLOCK],[1,A.CONSTRICT],[12,A.MEGA_DRAIN],[16,A.VINE_WHIP],[20,A.POISON_POWDER],[24,A.DOUBLE_HIT],[28,A.KNOCK_OFF],[32,A.GIGA_DRAIN],[34,A.ANCIENT_POWER],[36,A.SLEEP_POWDER],[40,A.SLAM],[44,A.TICKLE],[48,A.POWER_WHIP],[52,A.INGRAIN],[56,A.GRASSY_TERRAIN]],[e.ELECTIVIRE]:[[1,A.LEER],[1,A.THUNDER_SHOCK],[1,A.QUICK_ATTACK],[1,A.CHARGE],[1,A.ION_DELUGE],[12,A.SWIFT],[16,A.SHOCK_WAVE],[20,A.THUNDER_WAVE],[24,A.SCREECH],[28,A.THUNDER_PUNCH],[34,A.DISCHARGE],[40,A.LOW_KICK],[46,A.THUNDERBOLT],[52,A.LIGHT_SCREEN],[58,A.THUNDER],[64,A.GIGA_IMPACT]],[e.MAGMORTAR]:[[1,A.LEER],[1,A.EMBER],[1,A.SMOKESCREEN],[1,A.SMOG],[12,A.CLEAR_SMOG],[16,A.FLAME_WHEEL],[20,A.CONFUSE_RAY],[24,A.SCARY_FACE],[28,A.FIRE_PUNCH],[34,A.LAVA_PLUME],[40,A.LOW_KICK],[46,A.FLAMETHROWER],[52,A.SUNNY_DAY],[58,A.FIRE_BLAST],[64,A.HYPER_BEAM]],[e.TOGEKISS]:[[k,A.AIR_SLASH],[1,A.POUND],[1,A.DOUBLE_EDGE],[1,A.GROWL],[1,A.METRONOME],[1,A.SKY_ATTACK],[1,A.TRI_ATTACK],[1,A.SWEET_KISS],[1,A.CHARM],[1,A.SAFEGUARD],[1,A.BATON_PASS],[1,A.EXTREME_SPEED],[1,A.ANCIENT_POWER],[1,A.FOLLOW_ME],[1,A.WISH],[1,A.YAWN],[1,A.LAST_RESORT],[1,A.AURA_SPHERE],[1,A.AFTER_YOU],[1,A.FAIRY_WIND],[1,A.LIFE_DEW]],[e.YANMEGA]:[[V,A.HYPNOSIS],[1,A.TACKLE],[1,A.DOUBLE_TEAM],[1,A.AIR_CUTTER],[1,A.NIGHT_SLASH],[1,A.WING_ATTACK],[1,A.AIR_SLASH],[1,A.BUG_BUZZ],[14,A.QUICK_ATTACK],[17,A.DETECT],[22,A.SUPERSONIC],[27,A.UPROAR],[30,A.BUG_BITE],[33,A.ANCIENT_POWER],[38,A.FEINT],[43,A.SLASH],[46,A.SCREECH],[49,A.U_TURN]],[e.LEAFEON]:[[k,A.SAPPY_SEED],[V,A.VEEVEE_VOLLEY],[1,A.TACKLE],[1,A.TAKE_DOWN],[1,A.DOUBLE_EDGE],[1,A.TAIL_WHIP],[1,A.BITE],[1,A.GROWL],[1,A.SWIFT],[1,A.CHARM],[1,A.BATON_PASS],[1,A.HELPING_HAND],[1,A.COVET],[1,A.COPYCAT],[5,A.SAND_ATTACK],[10,A.RAZOR_LEAF],[15,A.QUICK_ATTACK],[20,A.BABY_DOLL_EYES],[25,A.LEECH_SEED],[30,A.MAGICAL_LEAF],[35,A.SYNTHESIS],[40,A.SUNNY_DAY],[45,A.GIGA_DRAIN],[50,A.SWORDS_DANCE],[55,A.LEAF_BLADE],[60,A.LAST_RESORT]],[e.GLACEON]:[[k,A.FREEZY_FROST],[V,A.VEEVEE_VOLLEY],[1,A.TACKLE],[1,A.TAKE_DOWN],[1,A.DOUBLE_EDGE],[1,A.TAIL_WHIP],[1,A.GROWL],[1,A.SWIFT],[1,A.CHARM],[1,A.BATON_PASS],[1,A.HELPING_HAND],[1,A.COVET],[1,A.COPYCAT],[5,A.SAND_ATTACK],[10,A.ICY_WIND],[15,A.QUICK_ATTACK],[20,A.BABY_DOLL_EYES],[25,A.ICE_SHARD],[30,A.BITE],[35,A.ICE_FANG],[40,A.SNOWSCAPE],[45,A.FREEZE_DRY],[50,A.MIRROR_COAT],[55,A.BLIZZARD],[60,A.LAST_RESORT]],[e.GLISCOR]:[[1,A.POISON_STING],[1,A.SAND_ATTACK],[1,A.HARDEN],[1,A.POISON_TAIL],[1,A.SLASH],[1,A.POISON_JAB],[1,A.THUNDER_FANG],[1,A.ICE_FANG],[1,A.FIRE_FANG],[13,A.QUICK_ATTACK],[16,A.FURY_CUTTER],[19,A.KNOCK_OFF],[22,A.ACROBATICS],[27,A.NIGHT_SLASH],[30,A.U_TURN],[35,A.SCREECH],[40,A.X_SCISSOR],[45,A.CRABHAMMER],[50,A.SWORDS_DANCE]],[e.MAMOSWINE]:[[k,A.DOUBLE_HIT],[1,A.TACKLE],[1,A.FLAIL],[1,A.POWDER_SNOW],[1,A.MUD_SLAP],[1,A.ODOR_SLEUTH],[1,A.ANCIENT_POWER],[1,A.ICE_FANG],[15,A.ICE_SHARD],[20,A.MIST],[25,A.ENDURE],[30,A.ICY_WIND],[37,A.AMNESIA],[44,A.TAKE_DOWN],[51,A.EARTHQUAKE],[58,A.BLIZZARD],[65,A.THRASH]],[e.PORYGON_Z]:[[1,A.TACKLE],[1,A.DEFENSE_CURL],[1,A.CONVERSION],[1,A.RECYCLE],[1,A.MAGNET_RISE],[1,A.NASTY_PLOT],[1,A.TRICK_ROOM],[15,A.THUNDER_SHOCK],[20,A.PSYBEAM],[25,A.CONVERSION_2],[30,A.AGILITY],[35,A.RECOVER],[40,A.DISCHARGE],[45,A.TRI_ATTACK],[50,A.MAGIC_COAT],[55,A.LOCK_ON],[60,A.ZAP_CANNON],[65,A.HYPER_BEAM]],[e.GALLADE]:[[k,A.SLASH],[1,A.LEER],[1,A.GROWL],[1,A.PSYBEAM],[1,A.CONFUSION],[1,A.PSYCHIC],[1,A.HYPNOSIS],[1,A.DOUBLE_TEAM],[1,A.DREAM_EATER],[1,A.CHARM],[1,A.FURY_CUTTER],[1,A.FUTURE_SIGHT],[1,A.IMPRISON],[1,A.CALM_MIND],[1,A.LEAF_BLADE],[1,A.NIGHT_SLASH],[1,A.SACRED_SWORD],[1,A.DISARMING_VOICE],[1,A.DRAINING_KISS],[1,A.LIFE_DEW],[1,A.AQUA_CUTTER],[9,A.HELPING_HAND],[12,A.FEINT],[15,A.TELEPORT],[18,A.AERIAL_ACE],[23,A.FALSE_SWIPE],[28,A.PROTECT],[35,A.SWORDS_DANCE],[42,A.PSYCHO_CUT],[49,A.HEAL_PULSE],[56,A.WIDE_GUARD],[56,A.QUICK_GUARD],[63,A.CLOSE_COMBAT]],[e.PROBOPASS]:[[k,A.TRI_ATTACK],[1,A.TACKLE],[1,A.HARDEN],[1,A.IRON_DEFENSE],[1,A.BLOCK],[1,A.ROCK_THROW],[1,A.GRAVITY],[1,A.MAGNET_RISE],[1,A.WIDE_GUARD],[1,A.MAGNETIC_FLUX],[13,A.THUNDER_WAVE],[16,A.REST],[19,A.SPARK],[22,A.ROCK_SLIDE],[25,A.POWER_GEM],[28,A.ROCK_BLAST],[31,A.DISCHARGE],[34,A.SANDSTORM],[37,A.EARTH_POWER],[40,A.STONE_EDGE],[43,A.ZAP_CANNON],[43,A.LOCK_ON]],[e.DUSKNOIR]:[[1,A.FIRE_PUNCH],[1,A.ICE_PUNCH],[1,A.THUNDER_PUNCH],[1,A.BIND],[1,A.LEER],[1,A.DISABLE],[1,A.ASTONISH],[1,A.PURSUIT],[1,A.SHADOW_PUNCH],[1,A.GRAVITY],[1,A.SHADOW_SNEAK],[12,A.CONFUSE_RAY],[16,A.NIGHT_SHADE],[20,A.PAYBACK],[24,A.WILL_O_WISP],[28,A.MEAN_LOOK],[32,A.HEX],[36,A.CURSE],[42,A.SHADOW_BALL],[48,A.FUTURE_SIGHT],[54,A.DESTINY_BOND]],[e.FROSLASS]:[[k,A.HEX],[1,A.HEADBUTT],[1,A.LEER],[1,A.BITE],[1,A.DOUBLE_TEAM],[1,A.POWDER_SNOW],[1,A.PROTECT],[1,A.DESTINY_BOND],[1,A.WEATHER_BALL],[1,A.CRUNCH],[1,A.ASTONISH],[1,A.ICE_FANG],[1,A.OMINOUS_WIND],[15,A.ICE_SHARD],[20,A.DRAINING_KISS],[25,A.ICY_WIND],[30,A.FROST_BREATH],[35,A.CONFUSE_RAY],[40,A.SNOWSCAPE],[47,A.WILL_O_WISP],[54,A.AURORA_VEIL],[61,A.SHADOW_BALL],[68,A.BLIZZARD]],[e.ROTOM]:[[1,A.DOUBLE_TEAM],[1,A.ASTONISH],[5,A.THUNDER_SHOCK],[10,A.CONFUSE_RAY],[15,A.CHARGE],[20,A.ELECTRO_BALL],[25,A.THUNDER_WAVE],[30,A.SHOCK_WAVE],[35,A.HEX],[40,A.SUBSTITUTE],[45,A.TRICK],[50,A.DISCHARGE],[55,A.UPROAR]],[e.UXIE]:[[V,A.TRI_ATTACK],[V,A.SNORE],[V,A.SAFEGUARD],[V,A.IRON_TAIL],[V,A.PSYCHO_CUT],[V,A.WONDER_ROOM],[V,A.MAGIC_ROOM],[V,A.ROUND],[V,A.ALLY_SWITCH],[V,A.EXPANDING_FORCE],[1,A.CONFUSION],[1,A.REST],[7,A.SWIFT],[14,A.ENDURE],[21,A.PSYBEAM],[28,A.IMPRISON],[35,A.EXTRASENSORY],[42,A.AMNESIA],[49,A.PSYCHIC],[56,A.YAWN],[63,A.FUTURE_SIGHT],[70,A.FLAIL],[77,A.MEMENTO],[84,A.MYSTICAL_POWER]],[e.MESPRIT]:[[V,A.TRI_ATTACK],[V,A.SNORE],[V,A.SAFEGUARD],[V,A.IRON_TAIL],[V,A.PSYCHO_CUT],[V,A.WONDER_ROOM],[V,A.MAGIC_ROOM],[V,A.ROUND],[V,A.ALLY_SWITCH],[V,A.EXPANDING_FORCE],[1,A.CONFUSION],[1,A.REST],[7,A.SWIFT],[14,A.PROTECT],[21,A.PSYBEAM],[28,A.IMPRISON],[35,A.EXTRASENSORY],[42,A.CHARM],[49,A.PSYCHIC],[56,A.FLATTER],[63,A.FUTURE_SIGHT],[70,A.COPYCAT],[77,A.HEALING_WISH],[84,A.MYSTICAL_POWER]],[e.AZELF]:[[V,A.SELF_DESTRUCT],[V,A.TRI_ATTACK],[V,A.SNORE],[V,A.SAFEGUARD],[V,A.IRON_TAIL],[V,A.PAYBACK],[V,A.ASSURANCE],[V,A.PSYCHO_CUT],[V,A.WONDER_ROOM],[V,A.MAGIC_ROOM],[V,A.ROUND],[V,A.ALLY_SWITCH],[V,A.EXPANDING_FORCE],[1,A.CONFUSION],[1,A.REST],[7,A.SWIFT],[14,A.DETECT],[21,A.PSYBEAM],[28,A.IMPRISON],[35,A.EXTRASENSORY],[42,A.NASTY_PLOT],[49,A.PSYCHIC],[56,A.UPROAR],[63,A.FUTURE_SIGHT],[70,A.LAST_RESORT],[77,A.EXPLOSION],[84,A.MYSTICAL_POWER]],[e.DIALGA]:[[1,A.SCARY_FACE],[1,A.METAL_CLAW],[8,A.DRAGON_BREATH],[16,A.ANCIENT_POWER],[24,A.SLASH],[32,A.FLASH_CANNON],[40,A.DRAGON_CLAW],[48,A.AURA_SPHERE],[56,A.POWER_GEM],[64,A.METAL_BURST],[72,A.EARTH_POWER],[80,A.IRON_TAIL],[88,A.ROAR_OF_TIME]],[e.PALKIA]:[[1,A.SCARY_FACE],[1,A.WATER_PULSE],[8,A.DRAGON_BREATH],[16,A.ANCIENT_POWER],[24,A.SLASH],[32,A.AQUA_RING],[48,A.AURA_SPHERE],[56,A.POWER_GEM],[64,A.AQUA_TAIL],[72,A.EARTH_POWER],[80,A.SPACIAL_REND],[88,A.HYDRO_PUMP]],[e.HEATRAN]:[[1,A.LEER],[1,A.FIRE_SPIN],[6,A.METAL_CLAW],[12,A.ANCIENT_POWER],[18,A.FIRE_FANG],[24,A.SCARY_FACE],[30,A.IRON_HEAD],[36,A.CRUNCH],[42,A.LAVA_PLUME],[48,A.METAL_SOUND],[54,A.EARTH_POWER],[60,A.HEAT_WAVE],[66,A.STONE_EDGE],[72,A.MAGMA_STORM]],[e.REGIGIGAS]:[[1,A.POUND],[1,A.CONFUSE_RAY],[1,A.DIZZY_PUNCH],[1,A.FORESIGHT],[6,A.PAYBACK],[12,A.REVENGE],[18,A.STOMP],[24,A.PROTECT],[30,A.KNOCK_OFF],[36,A.MEGA_PUNCH],[42,A.BODY_PRESS],[48,A.WIDE_GUARD],[54,A.ZEN_HEADBUTT],[60,A.HEAVY_SLAM],[66,A.HAMMER_ARM],[72,A.GIGA_IMPACT],[78,A.CRUSH_GRIP]],[e.GIRATINA]:[[1,A.SHADOW_SNEAK],[1,A.DEFOG],[1,A.DRAGON_BREATH],[7,A.OMINOUS_WIND],[14,A.ANCIENT_POWER],[21,A.HEX],[28,A.SLASH],[35,A.SCARY_FACE],[42,A.SHADOW_CLAW],[49,A.PAIN_SPLIT],[56,A.AURA_SPHERE],[63,A.DRAGON_CLAW],[70,A.EARTH_POWER],[77,A.SHADOW_FORCE],[84,A.DESTINY_BOND]],[e.CRESSELIA]:[[1,A.CONFUSION],[1,A.DOUBLE_TEAM],[6,A.MIST],[12,A.AURORA_BEAM],[18,A.PSYBEAM],[24,A.ALLY_SWITCH],[30,A.SLASH],[36,A.PSYCHO_CUT],[42,A.MOONLIGHT],[48,A.SAFEGUARD],[54,A.PSYCHIC],[60,A.MOONBLAST],[66,A.FUTURE_SIGHT],[72,A.LUNAR_DANCE],[72,A.LUNAR_BLESSING]],[e.PHIONE]:[[1,A.WATER_GUN],[9,A.CHARM],[16,A.SUPERSONIC],[24,A.BUBBLE_BEAM],[31,A.ACID_ARMOR],[39,A.WHIRLPOOL],[46,A.WATER_PULSE],[54,A.AQUA_RING],[61,A.DIVE],[69,A.RAIN_DANCE],[75,A.TAKE_HEART]],[e.MANAPHY]:[[1,A.HEART_SWAP],[1,A.TAIL_GLOW],[1,A.WATER_GUN],[9,A.CHARM],[16,A.SUPERSONIC],[24,A.BUBBLE_BEAM],[31,A.ACID_ARMOR],[39,A.WHIRLPOOL],[46,A.WATER_PULSE],[54,A.AQUA_RING],[61,A.DIVE],[69,A.RAIN_DANCE],[76,A.TAKE_HEART]],[e.DARKRAI]:[[1,A.DISABLE],[1,A.OMINOUS_WIND],[1,A.PURSUIT],[11,A.QUICK_ATTACK],[20,A.HYPNOSIS],[29,A.SUCKER_PUNCH],[38,A.NIGHT_SHADE],[47,A.DOUBLE_TEAM],[57,A.HAZE],[66,A.DARK_VOID],[75,A.NASTY_PLOT],[84,A.DREAM_EATER],[93,A.DARK_PULSE]],[e.SHAYMIN]:[[1,A.LEAFAGE],[1,A.GROWTH],[10,A.MAGICAL_LEAF],[19,A.LEECH_SEED],[28,A.SYNTHESIS],[37,A.SWEET_SCENT],[46,A.NATURAL_GIFT],[55,A.WORRY_SEED],[64,A.AROMATHERAPY],[73,A.ENERGY_BALL],[82,A.SWEET_KISS],[91,A.HEALING_WISH],[100,A.SEED_FLARE]],[e.ARCEUS]:[[1,A.SEISMIC_TOSS],[1,A.COSMIC_POWER],[1,A.PUNISHMENT],[10,A.GRAVITY],[20,A.EARTH_POWER],[30,A.HYPER_VOICE],[40,A.EXTREME_SPEED],[50,A.HEALING_WISH],[60,A.FUTURE_SIGHT],[70,A.RECOVER],[80,A.HYPER_BEAM],[90,A.PERISH_SONG],[100,A.JUDGMENT]],[e.VICTINI]:[[1,A.CONFUSION],[1,A.QUICK_ATTACK],[1,A.FOCUS_ENERGY],[1,A.FLAME_CHARGE],[1,A.V_CREATE],[7,A.WORK_UP],[14,A.INCINERATE],[21,A.STORED_POWER],[28,A.HEADBUTT],[35,A.ENDURE],[42,A.ZEN_HEADBUTT],[49,A.INFERNO],[56,A.REVERSAL],[63,A.SEARING_SHOT],[70,A.DOUBLE_EDGE],[77,A.FLARE_BLITZ],[84,A.OVERHEAT],[91,A.FINAL_GAMBIT]],[e.SNIVY]:[[1,A.TACKLE],[4,A.LEER],[5,A.VINE_WHIP],[10,A.WRAP],[13,A.GROWTH],[16,A.MAGICAL_LEAF],[19,A.LEECH_SEED],[22,A.MEGA_DRAIN],[25,A.SLAM],[28,A.LEAF_BLADE],[31,A.COIL],[34,A.GIGA_DRAIN],[37,A.GASTRO_ACID],[40,A.LEAF_STORM]],[e.SERVINE]:[[1,A.VINE_WHIP],[1,A.TACKLE],[1,A.WRAP],[1,A.LEER],[13,A.GROWTH],[16,A.MAGICAL_LEAF],[20,A.LEECH_SEED],[24,A.MEGA_DRAIN],[28,A.SLAM],[32,A.LEAF_BLADE],[36,A.COIL],[40,A.GIGA_DRAIN],[44,A.GASTRO_ACID],[48,A.LEAF_STORM]],[e.SERPERIOR]:[[1,A.VINE_WHIP],[1,A.TACKLE],[1,A.WRAP],[1,A.LEER],[13,A.GROWTH],[16,A.MAGICAL_LEAF],[20,A.LEECH_SEED],[24,A.MEGA_DRAIN],[28,A.SLAM],[32,A.LEAF_BLADE],[38,A.COIL],[44,A.GIGA_DRAIN],[50,A.GASTRO_ACID],[56,A.LEAF_STORM]],[e.TEPIG]:[[1,A.TACKLE],[3,A.TAIL_WHIP],[5,A.EMBER],[9,A.ENDURE],[13,A.DEFENSE_CURL],[15,A.FLAME_CHARGE],[19,A.SMOG],[21,A.ROLLOUT],[25,A.TAKE_DOWN],[27,A.HEAT_CRASH],[31,A.ASSURANCE],[33,A.FLAMETHROWER],[37,A.HEAD_SMASH],[39,A.ROAR],[43,A.FLARE_BLITZ]],[e.PIGNITE]:[[k,A.ARM_THRUST],[1,A.TACKLE],[1,A.TAIL_WHIP],[1,A.EMBER],[1,A.ENDURE],[13,A.DEFENSE_CURL],[15,A.FLAME_CHARGE],[20,A.SMOG],[23,A.ROLLOUT],[28,A.TAKE_DOWN],[31,A.HEAT_CRASH],[36,A.ASSURANCE],[39,A.FLAMETHROWER],[44,A.HEAD_SMASH],[47,A.ROAR],[52,A.FLARE_BLITZ]],[e.EMBOAR]:[[V,A.ENDURE],[V,A.HAMMER_ARM],[1,A.TACKLE],[1,A.TAIL_WHIP],[1,A.EMBER],[1,A.ARM_THRUST],[13,A.DEFENSE_CURL],[15,A.FLAME_CHARGE],[20,A.SMOG],[23,A.ROLLOUT],[28,A.TAKE_DOWN],[31,A.HEAT_CRASH],[38,A.ASSURANCE],[43,A.FLAMETHROWER],[50,A.HEAD_SMASH],[55,A.ROAR],[62,A.FLARE_BLITZ]],[e.OSHAWOTT]:[[1,A.TACKLE],[5,A.TAIL_WHIP],[5,A.WATER_GUN],[11,A.SOAK],[13,A.FOCUS_ENERGY],[17,A.RAZOR_SHELL],[19,A.FURY_CUTTER],[23,A.WATER_PULSE],[25,A.AERIAL_ACE],[29,A.AQUA_JET],[31,A.ENCORE],[35,A.AQUA_TAIL],[37,A.RETALIATE],[41,A.SWORDS_DANCE],[43,A.HYDRO_PUMP]],[e.DEWOTT]:[[1,A.TACKLE],[1,A.TAIL_WHIP],[1,A.WATER_GUN],[1,A.SOAK],[13,A.FOCUS_ENERGY],[18,A.RAZOR_SHELL],[21,A.FURY_CUTTER],[26,A.WATER_PULSE],[29,A.AERIAL_ACE],[34,A.AQUA_JET],[37,A.ENCORE],[42,A.AQUA_TAIL],[45,A.RETALIATE],[50,A.SWORDS_DANCE],[53,A.HYDRO_PUMP]],[e.SAMUROTT]:[[k,A.SLASH],[1,A.TACKLE],[1,A.TAIL_WHIP],[1,A.WATER_GUN],[1,A.MEGAHORN],[1,A.SOAK],[13,A.FOCUS_ENERGY],[18,A.RAZOR_SHELL],[21,A.FURY_CUTTER],[25,A.WATER_PULSE],[29,A.AERIAL_ACE],[34,A.AQUA_JET],[39,A.ENCORE],[46,A.AQUA_TAIL],[51,A.RETALIATE],[58,A.SWORDS_DANCE],[63,A.HYDRO_PUMP]],[e.PATRAT]:[[1,A.TACKLE],[3,A.LEER],[6,A.BITE],[8,A.BIDE],[11,A.DETECT],[13,A.SAND_ATTACK],[16,A.CRUNCH],[18,A.HYPNOSIS],[21,A.SUPER_FANG],[23,A.AFTER_YOU],[26,A.FOCUS_ENERGY],[28,A.WORK_UP],[31,A.HYPER_FANG],[33,A.NASTY_PLOT],[36,A.MEAN_LOOK],[38,A.BATON_PASS],[41,A.SLAM]],[e.WATCHOG]:[[k,A.CONFUSE_RAY],[V,A.WORK_UP],[1,A.TACKLE],[1,A.LEER],[1,A.BITE],[1,A.LOW_KICK],[1,A.ROTOTILLER],[8,A.BIDE],[11,A.DETECT],[13,A.SAND_ATTACK],[16,A.CRUNCH],[18,A.HYPNOSIS],[22,A.SUPER_FANG],[25,A.AFTER_YOU],[29,A.FOCUS_ENERGY],[32,A.PSYCH_UP],[36,A.HYPER_FANG],[39,A.NASTY_PLOT],[43,A.MEAN_LOOK],[46,A.BATON_PASS],[50,A.SLAM]],[e.LILLIPUP]:[[1,A.TACKLE],[1,A.LEER],[4,A.WORK_UP],[8,A.BITE],[12,A.RETALIATE],[17,A.BABY_DOLL_EYES],[20,A.PLAY_ROUGH],[24,A.CRUNCH],[28,A.TAKE_DOWN],[32,A.HELPING_HAND],[36,A.REVERSAL],[40,A.ROAR],[44,A.LAST_RESORT],[48,A.GIGA_IMPACT]],[e.HERDIER]:[[1,A.TACKLE],[1,A.LEER],[1,A.BITE],[1,A.WORK_UP],[12,A.RETALIATE],[19,A.BABY_DOLL_EYES],[24,A.PLAY_ROUGH],[30,A.CRUNCH],[36,A.TAKE_DOWN],[42,A.HELPING_HAND],[48,A.REVERSAL],[54,A.ROAR],[60,A.LAST_RESORT],[66,A.GIGA_IMPACT]],[e.STOUTLAND]:[[1,A.TACKLE],[1,A.LEER],[1,A.BITE],[1,A.THUNDER_FANG],[1,A.ICE_FANG],[1,A.FIRE_FANG],[1,A.WORK_UP],[12,A.RETALIATE],[19,A.BABY_DOLL_EYES],[24,A.PLAY_ROUGH],[30,A.CRUNCH],[38,A.TAKE_DOWN],[46,A.HELPING_HAND],[54,A.REVERSAL],[62,A.ROAR],[70,A.LAST_RESORT],[78,A.GIGA_IMPACT]],[e.PURRLOIN]:[[1,A.SCRATCH],[1,A.GROWL],[4,A.SAND_ATTACK],[5,A.FAKE_OUT],[12,A.FURY_SWIPES],[16,A.TORMENT],[21,A.ASSURANCE],[24,A.HONE_CLAWS],[28,A.SUCKER_PUNCH],[32,A.NASTY_PLOT],[36,A.NIGHT_SLASH],[40,A.PLAY_ROUGH]],[e.LIEPARD]:[[1,A.ASSIST],[1,A.SCRATCH],[1,A.SAND_ATTACK],[1,A.GROWL],[1,A.FAKE_OUT],[12,A.FURY_SWIPES],[16,A.TORMENT],[23,A.ASSURANCE],[28,A.HONE_CLAWS],[34,A.SUCKER_PUNCH],[40,A.NASTY_PLOT],[46,A.NIGHT_SLASH],[52,A.PLAY_ROUGH]],[e.PANSAGE]:[[1,A.SCRATCH],[1,A.PLAY_NICE],[4,A.LEER],[7,A.LICK],[10,A.VINE_WHIP],[13,A.FURY_SWIPES],[16,A.LEECH_SEED],[19,A.BITE],[22,A.SEED_BOMB],[25,A.TORMENT],[28,A.FLING],[31,A.ACROBATICS],[34,A.GRASS_KNOT],[37,A.RECYCLE],[40,A.NATURAL_GIFT],[43,A.CRUNCH]],[e.SIMISAGE]:[[V,A.SCRATCH],[V,A.PLAY_NICE],[V,A.VINE_WHIP],[V,A.LEECH_SEED],[V,A.BITE],[V,A.TORMENT],[V,A.FLING],[V,A.ACROBATICS],[V,A.GRASS_KNOT],[V,A.RECYCLE],[V,A.NATURAL_GIFT],[V,A.CRUNCH],[1,A.LEER],[1,A.LICK],[1,A.FURY_SWIPES],[1,A.SEED_BOMB]],[e.PANSEAR]:[[1,A.SCRATCH],[1,A.PLAY_NICE],[4,A.LEER],[7,A.LICK],[10,A.INCINERATE],[13,A.FURY_SWIPES],[16,A.YAWN],[19,A.BITE],[22,A.FLAME_BURST],[25,A.AMNESIA],[28,A.FLING],[31,A.ACROBATICS],[34,A.FIRE_BLAST],[37,A.RECYCLE],[40,A.NATURAL_GIFT],[43,A.CRUNCH]],[e.SIMISEAR]:[[V,A.SCRATCH],[V,A.PLAY_NICE],[V,A.INCINERATE],[V,A.YAWN],[V,A.BITE],[V,A.AMNESIA],[V,A.FLING],[V,A.ACROBATICS],[V,A.FIRE_BLAST],[V,A.RECYCLE],[V,A.NATURAL_GIFT],[V,A.CRUNCH],[1,A.LEER],[1,A.LICK],[1,A.FURY_SWIPES],[1,A.FLAME_BURST]],[e.PANPOUR]:[[1,A.SCRATCH],[1,A.PLAY_NICE],[4,A.LEER],[7,A.LICK],[10,A.WATER_GUN],[13,A.FURY_SWIPES],[16,A.WATER_SPORT],[19,A.BITE],[22,A.SCALD],[25,A.TAUNT],[28,A.FLING],[31,A.ACROBATICS],[34,A.BRINE],[37,A.RECYCLE],[40,A.NATURAL_GIFT],[43,A.CRUNCH]],[e.SIMIPOUR]:[[V,A.SCRATCH],[V,A.PLAY_NICE],[V,A.WATER_GUN],[V,A.WATER_SPORT],[V,A.BITE],[V,A.TAUNT],[V,A.FLING],[V,A.ACROBATICS],[V,A.BRINE],[V,A.RECYCLE],[V,A.NATURAL_GIFT],[V,A.CRUNCH],[1,A.LEER],[1,A.LICK],[1,A.FURY_SWIPES],[1,A.SCALD]],[e.MUNNA]:[[1,A.DEFENSE_CURL],[1,A.STORED_POWER],[1,A.PSYWAVE],[4,A.HYPNOSIS],[8,A.PSYBEAM],[12,A.IMPRISON],[16,A.MOONLIGHT],[20,A.MAGIC_COAT],[24,A.ZEN_HEADBUTT],[28,A.CALM_MIND],[32,A.YAWN],[36,A.PSYCHIC],[40,A.MOONBLAST],[44,A.DREAM_EATER],[48,A.FUTURE_SIGHT],[52,A.WONDER_ROOM]],[e.MUSHARNA]:[[1,A.PSYWAVE],[1,A.PSYBEAM],[1,A.PSYCHIC],[1,A.HYPNOSIS],[1,A.DEFENSE_CURL],[1,A.LUCKY_CHANT],[1,A.DREAM_EATER],[1,A.MOONLIGHT],[1,A.FUTURE_SIGHT],[1,A.MAGIC_COAT],[1,A.YAWN],[1,A.IMPRISON],[1,A.CALM_MIND],[1,A.ZEN_HEADBUTT],[1,A.WONDER_ROOM],[1,A.STORED_POWER],[1,A.MOONBLAST],[1,A.PSYCHIC_TERRAIN]],[e.PIDOVE]:[[1,A.GUST],[1,A.GROWL],[4,A.LEER],[8,A.QUICK_ATTACK],[12,A.TAUNT],[16,A.AIR_CUTTER],[20,A.SWAGGER],[24,A.FEATHER_DANCE],[28,A.DETECT],[32,A.AIR_SLASH],[36,A.ROOST],[40,A.TAILWIND],[44,A.SKY_ATTACK]],[e.TRANQUILL]:[[1,A.GUST],[1,A.LEER],[1,A.GROWL],[1,A.QUICK_ATTACK],[12,A.TAUNT],[16,A.AIR_CUTTER],[20,A.SWAGGER],[26,A.FEATHER_DANCE],[34,A.DETECT],[38,A.AIR_SLASH],[44,A.ROOST],[50,A.TAILWIND],[56,A.SKY_ATTACK]],[e.UNFEZANT]:[[1,A.GUST],[1,A.LEER],[1,A.GROWL],[1,A.QUICK_ATTACK],[12,A.TAUNT],[16,A.AIR_CUTTER],[20,A.SWAGGER],[26,A.FEATHER_DANCE],[36,A.DETECT],[42,A.AIR_SLASH],[50,A.ROOST],[58,A.TAILWIND],[66,A.SKY_ATTACK]],[e.BLITZLE]:[[1,A.QUICK_ATTACK],[4,A.TAIL_WHIP],[8,A.CHARGE],[11,A.SHOCK_WAVE],[15,A.THUNDER_WAVE],[18,A.FLAME_CHARGE],[22,A.SPARK],[25,A.STOMP],[29,A.DISCHARGE],[33,A.AGILITY],[35,A.WILD_CHARGE],[40,A.THRASH]],[e.ZEBSTRIKA]:[[1,A.TAIL_WHIP],[1,A.THUNDER_WAVE],[1,A.QUICK_ATTACK],[1,A.CHARGE],[1,A.ION_DELUGE],[11,A.SHOCK_WAVE],[18,A.FLAME_CHARGE],[25,A.SPARK],[31,A.STOMP],[36,A.DISCHARGE],[42,A.AGILITY],[47,A.WILD_CHARGE],[53,A.THRASH]],[e.ROGGENROLA]:[[1,A.SAND_ATTACK],[1,A.TACKLE],[4,A.HARDEN],[8,A.STEALTH_ROCK],[12,A.MUD_SLAP],[16,A.SMACK_DOWN],[20,A.IRON_DEFENSE],[24,A.HEADBUTT],[28,A.ROCK_SLIDE],[32,A.ROCK_BLAST],[36,A.SANDSTORM],[40,A.STONE_EDGE],[44,A.EXPLOSION]],[e.BOLDORE]:[[k,A.POWER_GEM],[1,A.SAND_ATTACK],[1,A.TACKLE],[1,A.HARDEN],[1,A.STEALTH_ROCK],[12,A.MUD_SLAP],[16,A.SMACK_DOWN],[20,A.IRON_DEFENSE],[24,A.HEADBUTT],[30,A.ROCK_SLIDE],[36,A.ROCK_BLAST],[42,A.SANDSTORM],[48,A.STONE_EDGE],[54,A.EXPLOSION]],[e.GIGALITH]:[[1,A.SAND_ATTACK],[1,A.TACKLE],[1,A.HARDEN],[1,A.POWER_GEM],[1,A.STEALTH_ROCK],[12,A.MUD_SLAP],[16,A.SMACK_DOWN],[20,A.IRON_DEFENSE],[24,A.HEADBUTT],[30,A.ROCK_SLIDE],[36,A.ROCK_BLAST],[42,A.SANDSTORM],[48,A.STONE_EDGE],[54,A.EXPLOSION]],[e.WOOBAT]:[[1,A.GUST],[1,A.ATTRACT],[5,A.CONFUSION],[10,A.ENDEAVOR],[15,A.AIR_CUTTER],[20,A.IMPRISON],[25,A.ASSURANCE],[30,A.AMNESIA],[35,A.AIR_SLASH],[40,A.PSYCHIC],[45,A.CALM_MIND],[50,A.FUTURE_SIGHT],[55,A.SIMPLE_BEAM]],[e.SWOOBAT]:[[1,A.GUST],[1,A.CONFUSION],[1,A.ATTRACT],[1,A.ENDEAVOR],[15,A.AIR_CUTTER],[20,A.IMPRISON],[25,A.ASSURANCE],[30,A.AMNESIA],[35,A.AIR_SLASH],[40,A.PSYCHIC],[45,A.CALM_MIND],[50,A.FUTURE_SIGHT],[55,A.SIMPLE_BEAM]],[e.DRILBUR]:[[1,A.MUD_SLAP],[1,A.RAPID_SPIN],[1,A.MUD_SPORT],[4,A.SCRATCH],[8,A.HONE_CLAWS],[12,A.FURY_SWIPES],[16,A.METAL_CLAW],[20,A.SANDSTORM],[24,A.CRUSH_CLAW],[28,A.ROCK_SLIDE],[32,A.DIG],[36,A.SWORDS_DANCE],[40,A.DRILL_RUN],[44,A.EARTHQUAKE],[48,A.FISSURE]],[e.EXCADRILL]:[[k,A.HORN_DRILL],[1,A.SCRATCH],[1,A.MUD_SLAP],[1,A.RAPID_SPIN],[1,A.MUD_SPORT],[1,A.ROTOTILLER],[1,A.HONE_CLAWS],[12,A.FURY_SWIPES],[16,A.METAL_CLAW],[20,A.SANDSTORM],[24,A.CRUSH_CLAW],[28,A.ROCK_SLIDE],[34,A.DIG],[40,A.SWORDS_DANCE],[46,A.DRILL_RUN],[52,A.EARTHQUAKE],[58,A.FISSURE]],[e.AUDINO]:[[1,A.POUND],[1,A.PLAY_NICE],[4,A.DISARMING_VOICE],[9,A.BABY_DOLL_EYES],[12,A.HELPING_HAND],[16,A.GROWL],[20,A.ZEN_HEADBUTT],[24,A.LIFE_DEW],[28,A.AFTER_YOU],[32,A.TAKE_DOWN],[36,A.SIMPLE_BEAM],[40,A.HYPER_VOICE],[44,A.HEAL_PULSE],[48,A.DOUBLE_EDGE],[52,A.ENTRAINMENT],[56,A.MISTY_TERRAIN],[60,A.LAST_RESORT]],[e.TIMBURR]:[[1,A.POUND],[1,A.LEER],[4,A.LOW_KICK],[8,A.ROCK_THROW],[12,A.FOCUS_ENERGY],[16,A.BULK_UP],[20,A.ROCK_SLIDE],[24,A.SLAM],[28,A.SCARY_FACE],[32,A.DYNAMIC_PUNCH],[36,A.HAMMER_ARM],[40,A.STONE_EDGE],[44,A.SUPERPOWER],[48,A.FOCUS_PUNCH]],[e.GURDURR]:[[1,A.POUND],[1,A.LEER],[1,A.LOW_KICK],[1,A.ROCK_THROW],[1,A.BIDE],[12,A.FOCUS_ENERGY],[16,A.BULK_UP],[20,A.ROCK_SLIDE],[24,A.SLAM],[30,A.SCARY_FACE],[36,A.DYNAMIC_PUNCH],[42,A.HAMMER_ARM],[48,A.STONE_EDGE],[54,A.SUPERPOWER],[60,A.FOCUS_PUNCH]],[e.CONKELDURR]:[[1,A.POUND],[1,A.LEER],[1,A.LOW_KICK],[1,A.ROCK_THROW],[1,A.BIDE],[12,A.FOCUS_ENERGY],[16,A.BULK_UP],[20,A.ROCK_SLIDE],[24,A.SLAM],[30,A.SCARY_FACE],[36,A.DYNAMIC_PUNCH],[42,A.HAMMER_ARM],[48,A.STONE_EDGE],[54,A.SUPERPOWER],[60,A.FOCUS_PUNCH]],[e.TYMPOLE]:[[1,A.BUBBLE],[1,A.GROWL],[1,A.ECHOED_VOICE],[4,A.ACID],[8,A.SUPERSONIC],[12,A.MUD_SHOT],[16,A.ROUND],[20,A.BUBBLE_BEAM],[24,A.FLAIL],[28,A.UPROAR],[32,A.AQUA_RING],[36,A.HYPER_VOICE],[40,A.MUDDY_WATER],[44,A.RAIN_DANCE],[48,A.HYDRO_PUMP]],[e.PALPITOAD]:[[1,A.BUBBLE],[1,A.GROWL],[1,A.SUPERSONIC],[1,A.ACID],[1,A.ECHOED_VOICE],[12,A.MUD_SHOT],[16,A.ROUND],[20,A.BUBBLE_BEAM],[24,A.FLAIL],[30,A.UPROAR],[37,A.AQUA_RING],[42,A.HYPER_VOICE],[48,A.MUDDY_WATER],[54,A.RAIN_DANCE],[60,A.HYDRO_PUMP]],[e.SEISMITOAD]:[[k,A.DRAIN_PUNCH],[1,A.BUBBLE],[1,A.GROWL],[1,A.SUPERSONIC],[1,A.ACID],[1,A.GASTRO_ACID],[1,A.ECHOED_VOICE],[12,A.MUD_SHOT],[16,A.ROUND],[20,A.BUBBLE_BEAM],[24,A.FLAIL],[30,A.UPROAR],[39,A.AQUA_RING],[46,A.HYPER_VOICE],[54,A.MUDDY_WATER],[62,A.RAIN_DANCE],[70,A.HYDRO_PUMP]],[e.THROH]:[[1,A.ROCK_SMASH],[1,A.LEER],[1,A.BIDE],[1,A.MAT_BLOCK],[1,A.BIND],[5,A.FOCUS_ENERGY],[10,A.CIRCLE_THROW],[15,A.WIDE_GUARD],[20,A.REVENGE],[25,A.BULK_UP],[30,A.STORM_THROW],[35,A.VITAL_THROW],[40,A.SEISMIC_TOSS],[45,A.ENDURE],[50,A.REVERSAL],[55,A.SUPERPOWER]],[e.SAWK]:[[1,A.LEER],[1,A.ROCK_SMASH],[1,A.BIDE],[5,A.FOCUS_ENERGY],[10,A.DOUBLE_KICK],[15,A.QUICK_GUARD],[20,A.LOW_SWEEP],[25,A.BULK_UP],[30,A.RETALIATE],[35,A.BRICK_BREAK],[40,A.COUNTER],[45,A.ENDURE],[50,A.REVERSAL],[55,A.CLOSE_COMBAT]],[e.SEWADDLE]:[[1,A.TACKLE],[1,A.STRING_SHOT],[8,A.BUG_BITE],[15,A.RAZOR_LEAF],[22,A.STRUGGLE_BUG],[29,A.ENDURE],[31,A.STICKY_WEB],[36,A.BUG_BUZZ],[43,A.FLAIL]],[e.SWADLOON]:[[k,A.PROTECT],[1,A.TACKLE],[1,A.RAZOR_LEAF],[1,A.STRING_SHOT],[1,A.BUG_BITE],[1,A.GRASS_WHISTLE],[22,A.STRUGGLE_BUG],[29,A.ENDURE],[31,A.STICKY_WEB],[36,A.BUG_BUZZ],[43,A.FLAIL]],[e.LEAVANNY]:[[k,A.SLASH],[V,A.BUG_BITE],[V,A.STICKY_WEB],[V,A.BUG_BUZZ],[1,A.PROTECT],[1,A.TACKLE],[1,A.RAZOR_LEAF],[1,A.STRING_SHOT],[1,A.GRASS_WHISTLE],[1,A.ENDURE],[1,A.FLAIL],[1,A.FALSE_SWIPE],[22,A.STRUGGLE_BUG],[29,A.FELL_STINGER],[32,A.HELPING_HAND],[36,A.LEAF_BLADE],[39,A.X_SCISSOR],[43,A.ENTRAINMENT],[46,A.SWORDS_DANCE],[50,A.LEAF_STORM]],[e.VENIPEDE]:[[1,A.POISON_STING],[1,A.DEFENSE_CURL],[4,A.ROLLOUT],[8,A.PROTECT],[12,A.POISON_TAIL],[16,A.SCREECH],[20,A.BUG_BITE],[24,A.VENOSHOCK],[28,A.TAKE_DOWN],[32,A.AGILITY],[36,A.TOXIC],[40,A.VENOM_DRENCH],[44,A.DOUBLE_EDGE]],[e.WHIRLIPEDE]:[[k,A.IRON_DEFENSE],[1,A.POISON_STING],[1,A.DEFENSE_CURL],[1,A.PROTECT],[1,A.ROLLOUT],[12,A.POISON_TAIL],[16,A.SCREECH],[20,A.BUG_BITE],[26,A.VENOSHOCK],[32,A.TAKE_DOWN],[38,A.AGILITY],[44,A.TOXIC],[50,A.VENOM_DRENCH],[56,A.DOUBLE_EDGE]],[e.SCOLIPEDE]:[[1,A.POISON_STING],[1,A.DEFENSE_CURL],[1,A.PROTECT],[1,A.ROLLOUT],[1,A.BATON_PASS],[1,A.IRON_DEFENSE],[12,A.POISON_TAIL],[16,A.SCREECH],[20,A.BUG_BITE],[26,A.VENOSHOCK],[34,A.TAKE_DOWN],[42,A.AGILITY],[50,A.TOXIC],[58,A.VENOM_DRENCH],[66,A.DOUBLE_EDGE],[74,A.MEGAHORN]],[e.COTTONEE]:[[1,A.ABSORB],[1,A.HELPING_HAND],[3,A.FAIRY_WIND],[6,A.STUN_SPORE],[12,A.MEGA_DRAIN],[15,A.RAZOR_LEAF],[18,A.GROWTH],[21,A.POISON_POWDER],[24,A.GIGA_DRAIN],[27,A.CHARM],[30,A.LEECH_SEED],[33,A.COTTON_SPORE],[36,A.ENERGY_BALL],[39,A.SUNNY_DAY],[42,A.ENDEAVOR],[45,A.COTTON_GUARD],[48,A.SOLAR_BEAM]],[e.WHIMSICOTT]:[[1,A.GUST],[1,A.ABSORB],[1,A.MEGA_DRAIN],[1,A.LEECH_SEED],[1,A.GROWTH],[1,A.RAZOR_LEAF],[1,A.SOLAR_BEAM],[1,A.POISON_POWDER],[1,A.STUN_SPORE],[1,A.COTTON_SPORE],[1,A.GIGA_DRAIN],[1,A.CHARM],[1,A.SUNNY_DAY],[1,A.MEMENTO],[1,A.HELPING_HAND],[1,A.ENDEAVOR],[1,A.TAILWIND],[1,A.ENERGY_BALL],[1,A.COTTON_GUARD],[1,A.HURRICANE],[1,A.FAIRY_WIND],[1,A.MOONBLAST]],[e.PETILIL]:[[1,A.ABSORB],[1,A.GROWTH],[3,A.HELPING_HAND],[6,A.STUN_SPORE],[9,A.MEGA_DRAIN],[12,A.CHARM],[15,A.MAGICAL_LEAF],[18,A.SLEEP_POWDER],[21,A.GIGA_DRAIN],[24,A.LEECH_SEED],[27,A.AFTER_YOU],[30,A.ENERGY_BALL],[33,A.SYNTHESIS],[36,A.SUNNY_DAY],[39,A.ENTRAINMENT],[42,A.LEAF_STORM]],[e.LILLIGANT]:[[k,A.PETAL_DANCE],[1,A.ABSORB],[1,A.MEGA_DRAIN],[1,A.LEECH_SEED],[1,A.GROWTH],[1,A.STUN_SPORE],[1,A.SLEEP_POWDER],[1,A.GIGA_DRAIN],[1,A.CHARM],[1,A.SYNTHESIS],[1,A.SUNNY_DAY],[1,A.HELPING_HAND],[1,A.TEETER_DANCE],[1,A.ENERGY_BALL],[1,A.LEAF_STORM],[1,A.QUIVER_DANCE],[1,A.ENTRAINMENT],[1,A.AFTER_YOU],[1,A.PETAL_BLIZZARD],[5,A.MAGICAL_LEAF]],[e.BASCULIN]:[[1,A.TAIL_WHIP],[1,A.WATER_GUN],[4,A.TACKLE],[8,A.FLAIL],[12,A.AQUA_JET],[16,A.BITE],[20,A.SCARY_FACE],[24,A.HEADBUTT],[28,A.SOAK],[32,A.CRUNCH],[36,A.TAKE_DOWN],[40,A.FINAL_GAMBIT],[44,A.WAVE_CRASH],[48,A.THRASH],[52,A.DOUBLE_EDGE],[56,A.HEAD_SMASH]],[e.SANDILE]:[[1,A.LEER],[1,A.POWER_TRIP],[3,A.SAND_ATTACK],[6,A.HONE_CLAWS],[9,A.SAND_TOMB],[12,A.SCARY_FACE],[15,A.BITE],[18,A.TORMENT],[21,A.DIG],[24,A.SWAGGER],[27,A.CRUNCH],[30,A.SANDSTORM],[33,A.FOUL_PLAY],[36,A.EARTHQUAKE],[39,A.THRASH]],[e.KROKOROK]:[[1,A.SAND_ATTACK],[1,A.LEER],[1,A.HONE_CLAWS],[1,A.POWER_TRIP],[9,A.SAND_TOMB],[12,A.SCARY_FACE],[15,A.BITE],[18,A.TORMENT],[21,A.DIG],[24,A.SWAGGER],[27,A.CRUNCH],[32,A.SANDSTORM],[35,A.FOUL_PLAY],[42,A.EARTHQUAKE],[47,A.THRASH]],[e.KROOKODILE]:[[1,A.SAND_ATTACK],[1,A.LEER],[1,A.HONE_CLAWS],[1,A.POWER_TRIP],[9,A.SAND_TOMB],[12,A.SCARY_FACE],[15,A.BITE],[18,A.TORMENT],[21,A.DIG],[24,A.SWAGGER],[27,A.CRUNCH],[32,A.SANDSTORM],[35,A.FOUL_PLAY],[44,A.EARTHQUAKE],[51,A.THRASH],[58,A.OUTRAGE]],[e.DARUMAKA]:[[1,A.TACKLE],[1,A.EMBER],[4,A.TAUNT],[8,A.BITE],[12,A.INCINERATE],[16,A.WORK_UP],[20,A.FIRE_FANG],[24,A.HEADBUTT],[28,A.FIRE_PUNCH],[32,A.UPROAR],[36,A.BELLY_DRUM],[40,A.FLARE_BLITZ],[44,A.THRASH],[48,A.SUPERPOWER]],[e.DARMANITAN]:[[k,A.HAMMER_ARM],[1,A.TACKLE],[1,A.BITE],[1,A.EMBER],[1,A.TAUNT],[12,A.INCINERATE],[16,A.WORK_UP],[20,A.FIRE_FANG],[24,A.HEADBUTT],[28,A.FIRE_PUNCH],[32,A.UPROAR],[38,A.BELLY_DRUM],[44,A.FLARE_BLITZ],[50,A.THRASH],[56,A.SUPERPOWER]],[e.MARACTUS]:[[1,A.PECK],[1,A.ABSORB],[1,A.INGRAIN],[1,A.AFTER_YOU],[1,A.SPIKY_SHIELD],[4,A.GROWTH],[8,A.MEGA_DRAIN],[12,A.LEECH_SEED],[16,A.SUCKER_PUNCH],[20,A.PIN_MISSILE],[24,A.GIGA_DRAIN],[28,A.SWEET_SCENT],[32,A.SYNTHESIS],[36,A.PETAL_BLIZZARD],[40,A.COTTON_SPORE],[44,A.SUNNY_DAY],[48,A.SOLAR_BEAM],[52,A.ACUPRESSURE],[56,A.PETAL_DANCE],[60,A.COTTON_GUARD]],[e.DWEBBLE]:[[1,A.SAND_ATTACK],[1,A.FURY_CUTTER],[4,A.WITHDRAW],[8,A.SMACK_DOWN],[12,A.BUG_BITE],[16,A.FLAIL],[20,A.SLASH],[24,A.ROCK_SLIDE],[28,A.STEALTH_ROCK],[32,A.ROCK_BLAST],[36,A.X_SCISSOR],[40,A.ROCK_POLISH],[44,A.SHELL_SMASH],[48,A.ROCK_WRECKER]],[e.CRUSTLE]:[[1,A.SAND_ATTACK],[1,A.WITHDRAW],[1,A.FURY_CUTTER],[1,A.SMACK_DOWN],[12,A.BUG_BITE],[16,A.FLAIL],[20,A.SLASH],[24,A.ROCK_SLIDE],[28,A.STEALTH_ROCK],[32,A.ROCK_BLAST],[38,A.X_SCISSOR],[44,A.ROCK_POLISH],[50,A.SHELL_SMASH],[56,A.ROCK_WRECKER]],[e.SCRAGGY]:[[1,A.LEER],[1,A.LOW_KICK],[4,A.PAYBACK],[8,A.HEADBUTT],[12,A.SAND_ATTACK],[16,A.FACADE],[20,A.PROTECT],[24,A.BEAT_UP],[28,A.SCARY_FACE],[32,A.BRICK_BREAK],[36,A.SWAGGER],[40,A.CRUNCH],[44,A.HIGH_JUMP_KICK],[48,A.FOCUS_PUNCH],[52,A.HEAD_SMASH]],[e.SCRAFTY]:[[1,A.HEADBUTT],[1,A.LEER],[1,A.LOW_KICK],[1,A.PAYBACK],[1,A.FEINT_ATTACK],[12,A.SAND_ATTACK],[16,A.FACADE],[20,A.PROTECT],[24,A.BEAT_UP],[28,A.SCARY_FACE],[32,A.BRICK_BREAK],[36,A.SWAGGER],[42,A.CRUNCH],[48,A.HIGH_JUMP_KICK],[54,A.FOCUS_PUNCH],[60,A.HEAD_SMASH]],[e.SIGILYPH]:[[1,A.GUST],[1,A.CONFUSION],[5,A.GRAVITY],[10,A.HYPNOSIS],[15,A.AIR_CUTTER],[20,A.PSYBEAM],[25,A.WHIRLWIND],[30,A.COSMIC_POWER],[35,A.AIR_SLASH],[40,A.PSYCHIC],[45,A.TAILWIND],[50,A.LIGHT_SCREEN],[50,A.REFLECT],[55,A.SKY_ATTACK],[60,A.SKILL_SWAP]],[e.YAMASK]:[[1,A.PROTECT],[1,A.ASTONISH],[1,A.HEAL_BLOCK],[4,A.HAZE],[8,A.NIGHT_SHADE],[12,A.DISABLE],[16,A.WILL_O_WISP],[20,A.CRAFTY_SHIELD],[24,A.HEX],[28,A.MEAN_LOOK],[32,A.GRUDGE],[36,A.CURSE],[40,A.SHADOW_BALL],[44,A.DARK_PULSE],[48,A.GUARD_SPLIT],[48,A.POWER_SPLIT],[52,A.DESTINY_BOND]],[e.COFAGRIGUS]:[[k,A.SHADOW_CLAW],[1,A.NIGHT_SHADE],[1,A.HAZE],[1,A.PROTECT],[1,A.SCARY_FACE],[1,A.ASTONISH],[1,A.HEAL_BLOCK],[12,A.DISABLE],[16,A.WILL_O_WISP],[20,A.CRAFTY_SHIELD],[24,A.HEX],[28,A.MEAN_LOOK],[32,A.GRUDGE],[38,A.CURSE],[44,A.SHADOW_BALL],[50,A.DARK_PULSE],[56,A.GUARD_SPLIT],[56,A.POWER_SPLIT],[62,A.DESTINY_BOND]],[e.TIRTOUGA]:[[1,A.WATER_GUN],[1,A.WITHDRAW],[1,A.BIDE],[3,A.PROTECT],[6,A.AQUA_JET],[9,A.SMACK_DOWN],[12,A.ANCIENT_POWER],[15,A.BITE],[18,A.WIDE_GUARD],[21,A.BRINE],[24,A.ROCK_SLIDE],[27,A.CRUNCH],[30,A.CURSE],[33,A.IRON_DEFENSE],[36,A.AQUA_TAIL],[39,A.RAIN_DANCE],[42,A.HYDRO_PUMP],[45,A.SHELL_SMASH]],[e.CARRACOSTA]:[[1,A.WATER_GUN],[1,A.WITHDRAW],[1,A.PROTECT],[1,A.AQUA_JET],[1,A.BIDE],[9,A.SMACK_DOWN],[12,A.ANCIENT_POWER],[15,A.BITE],[18,A.WIDE_GUARD],[21,A.BRINE],[24,A.ROCK_SLIDE],[27,A.CRUNCH],[30,A.CURSE],[33,A.IRON_DEFENSE],[36,A.AQUA_TAIL],[41,A.RAIN_DANCE],[46,A.HYDRO_PUMP],[51,A.SHELL_SMASH]],[e.ARCHEN]:[[1,A.LEER],[1,A.QUICK_ATTACK],[3,A.ROCK_THROW],[6,A.WING_ATTACK],[9,A.DRAGON_BREATH],[12,A.ANCIENT_POWER],[15,A.PLUCK],[18,A.QUICK_GUARD],[21,A.U_TURN],[24,A.ROCK_SLIDE],[27,A.SCARY_FACE],[30,A.CRUNCH],[33,A.AGILITY],[36,A.TAILWIND],[39,A.DRAGON_CLAW],[42,A.THRASH],[45,A.ENDEAVOR]],[e.ARCHEOPS]:[[1,A.WING_ATTACK],[1,A.LEER],[1,A.ROCK_THROW],[1,A.QUICK_ATTACK],[9,A.DRAGON_BREATH],[12,A.ANCIENT_POWER],[15,A.PLUCK],[18,A.QUICK_GUARD],[21,A.U_TURN],[24,A.ROCK_SLIDE],[27,A.SCARY_FACE],[30,A.CRUNCH],[33,A.AGILITY],[36,A.TAILWIND],[41,A.DRAGON_CLAW],[46,A.THRASH],[51,A.ENDEAVOR]],[e.TRUBBISH]:[[1,A.POUND],[1,A.POISON_GAS],[3,A.RECYCLE],[6,A.ACID_SPRAY],[9,A.AMNESIA],[12,A.CLEAR_SMOG],[15,A.TOXIC_SPIKES],[18,A.SLUDGE],[21,A.STOCKPILE],[21,A.SWALLOW],[24,A.TAKE_DOWN],[27,A.SLUDGE_BOMB],[30,A.TOXIC],[33,A.BELCH],[37,A.PAIN_SPLIT],[39,A.GUNK_SHOT],[42,A.EXPLOSION]],[e.GARBODOR]:[[1,A.POUND],[1,A.TAKE_DOWN],[1,A.POISON_GAS],[1,A.METAL_CLAW],[1,A.RECYCLE],[1,A.ACID_SPRAY],[9,A.AMNESIA],[12,A.CLEAR_SMOG],[15,A.TOXIC_SPIKES],[18,A.SLUDGE],[21,A.STOCKPILE],[21,A.SWALLOW],[24,A.BODY_SLAM],[27,A.SLUDGE_BOMB],[30,A.TOXIC],[33,A.BELCH],[39,A.PAIN_SPLIT],[43,A.GUNK_SHOT],[48,A.EXPLOSION]],[e.ZORUA]:[[1,A.SCRATCH],[1,A.LEER],[4,A.TORMENT],[8,A.HONE_CLAWS],[12,A.FURY_SWIPES],[16,A.SCARY_FACE],[20,A.TAUNT],[24,A.KNOCK_OFF],[28,A.FAKE_TEARS],[32,A.AGILITY],[36,A.IMPRISON],[40,A.NIGHT_DAZE],[44,A.NASTY_PLOT],[48,A.FOUL_PLAY]],[e.ZOROARK]:[[k,A.NIGHT_SLASH],[1,A.SCRATCH],[1,A.LEER],[1,A.TORMENT],[1,A.U_TURN],[1,A.HONE_CLAWS],[1,A.SCARY_FACE],[1,A.PURSUIT],[12,A.FURY_SWIPES],[20,A.TAUNT],[24,A.KNOCK_OFF],[28,A.FAKE_TEARS],[34,A.AGILITY],[40,A.IMPRISON],[46,A.NIGHT_DAZE],[52,A.NASTY_PLOT],[58,A.FOUL_PLAY]],[e.MINCCINO]:[[1,A.POUND],[1,A.BABY_DOLL_EYES],[4,A.HELPING_HAND],[8,A.ECHOED_VOICE],[12,A.SING],[16,A.CHARM],[20,A.SWIFT],[24,A.ENCORE],[28,A.AFTER_YOU],[32,A.TAIL_SLAP],[36,A.TICKLE],[40,A.SLAM],[44,A.HYPER_VOICE],[48,A.LAST_RESORT]],[e.CINCCINO]:[[k,A.TAIL_SLAP],[V,A.SLAM],[V,A.SWIFT],[V,A.ENCORE],[V,A.HELPING_HAND],[V,A.HYPER_VOICE],[V,A.TICKLE],[V,A.ROCK_BLAST],[V,A.LAST_RESORT],[V,A.AFTER_YOU],[V,A.ECHOED_VOICE],[V,A.BABY_DOLL_EYES],[1,A.BULLET_SEED],[1,A.SING],[1,A.CHARM],[1,A.POUND]],[e.GOTHITA]:[[1,A.POUND],[1,A.CONFUSION],[4,A.PLAY_NICE],[8,A.TICKLE],[12,A.PSYBEAM],[16,A.CHARM],[20,A.PSYSHOCK],[24,A.HYPNOSIS],[28,A.FAKE_TEARS],[33,A.PSYCH_UP],[34,A.HEAL_BLOCK],[36,A.PSYCHIC],[40,A.FLATTER],[44,A.FUTURE_SIGHT],[48,A.MAGIC_ROOM]],[e.GOTHORITA]:[[1,A.POUND],[1,A.CONFUSION],[1,A.TICKLE],[1,A.PLAY_NICE],[12,A.PSYBEAM],[16,A.CHARM],[20,A.PSYSHOCK],[24,A.HYPNOSIS],[28,A.FAKE_TEARS],[34,A.HEAL_BLOCK],[35,A.PSYCH_UP],[40,A.PSYCHIC],[46,A.FLATTER],[52,A.FUTURE_SIGHT],[58,A.MAGIC_ROOM]],[e.GOTHITELLE]:[[1,A.POUND],[1,A.CONFUSION],[1,A.TICKLE],[1,A.PLAY_NICE],[12,A.PSYBEAM],[16,A.CHARM],[20,A.PSYSHOCK],[24,A.HYPNOSIS],[28,A.FAKE_TEARS],[34,A.HEAL_BLOCK],[35,A.PSYCH_UP],[40,A.PSYCHIC],[48,A.FLATTER],[56,A.FUTURE_SIGHT],[64,A.MAGIC_ROOM]],[e.SOLOSIS]:[[1,A.CONFUSION],[1,A.PROTECT],[1,A.PSYWAVE],[4,A.RECOVER],[8,A.ENDEAVOR],[12,A.PSYBEAM],[16,A.CHARM],[20,A.PSYSHOCK],[24,A.LIGHT_SCREEN],[24,A.REFLECT],[28,A.ALLY_SWITCH],[33,A.PAIN_SPLIT],[36,A.PSYCHIC],[40,A.SKILL_SWAP],[44,A.FUTURE_SIGHT],[46,A.HEAL_BLOCK],[48,A.WONDER_ROOM]],[e.DUOSION]:[[1,A.CONFUSION],[1,A.RECOVER],[1,A.PSYWAVE],[1,A.PROTECT],[1,A.ENDEAVOR],[1,A.SNATCH],[12,A.PSYBEAM],[16,A.CHARM],[20,A.PSYSHOCK],[24,A.LIGHT_SCREEN],[24,A.REFLECT],[28,A.ALLY_SWITCH],[35,A.PAIN_SPLIT],[40,A.PSYCHIC],[46,A.SKILL_SWAP],[50,A.HEAL_BLOCK],[52,A.FUTURE_SIGHT],[58,A.WONDER_ROOM]],[e.REUNICLUS]:[[k,A.HAMMER_ARM],[1,A.CONFUSION],[1,A.RECOVER],[1,A.PROTECT],[1,A.ENDEAVOR],[1,A.DIZZY_PUNCH],[1,A.PSYWAVE],[1,A.SNATCH],[12,A.PSYBEAM],[16,A.CHARM],[20,A.PSYSHOCK],[24,A.LIGHT_SCREEN],[24,A.REFLECT],[28,A.ALLY_SWITCH],[35,A.PAIN_SPLIT],[40,A.PSYCHIC],[48,A.SKILL_SWAP],[54,A.HEAL_BLOCK],[56,A.FUTURE_SIGHT],[64,A.WONDER_ROOM]],[e.DUCKLETT]:[[1,A.WATER_GUN],[6,A.DEFOG],[9,A.WING_ATTACK],[13,A.WATER_PULSE],[15,A.AERIAL_ACE],[19,A.BUBBLE_BEAM],[21,A.FEATHER_DANCE],[24,A.AQUA_RING],[27,A.AIR_SLASH],[30,A.ROOST],[34,A.RAIN_DANCE],[37,A.TAILWIND],[41,A.BRAVE_BIRD],[46,A.HURRICANE]],[e.SWANNA]:[[1,A.WING_ATTACK],[1,A.WATER_GUN],[1,A.DEFOG],[13,A.WATER_PULSE],[15,A.AERIAL_ACE],[19,A.BUBBLE_BEAM],[21,A.FEATHER_DANCE],[24,A.AQUA_RING],[27,A.AIR_SLASH],[30,A.ROOST],[34,A.RAIN_DANCE],[40,A.TAILWIND],[47,A.BRAVE_BIRD],[55,A.HURRICANE]],[e.VANILLITE]:[[1,A.HARDEN],[1,A.ASTONISH],[1,A.POWDER_SNOW],[4,A.TAUNT],[8,A.MIST],[12,A.ICY_WIND],[16,A.AVALANCHE],[20,A.HAIL],[24,A.ICICLE_SPEAR],[28,A.UPROAR],[32,A.ACID_ARMOR],[36,A.MIRROR_COAT],[40,A.ICE_BEAM],[44,A.BLIZZARD],[48,A.SHEER_COLD]],[e.VANILLISH]:[[1,A.MIST],[1,A.HARDEN],[1,A.TAUNT],[1,A.ASTONISH],[1,A.POWDER_SNOW],[12,A.ICY_WIND],[16,A.AVALANCHE],[20,A.HAIL],[24,A.ICICLE_SPEAR],[28,A.UPROAR],[32,A.ACID_ARMOR],[38,A.MIRROR_COAT],[44,A.ICE_BEAM],[50,A.BLIZZARD],[56,A.SHEER_COLD]],[e.VANILLUXE]:[[1,A.MIST],[1,A.HARDEN],[1,A.TAUNT],[1,A.ASTONISH],[1,A.POWDER_SNOW],[1,A.WEATHER_BALL],[1,A.ICICLE_CRASH],[1,A.FREEZE_DRY],[12,A.ICY_WIND],[16,A.AVALANCHE],[20,A.HAIL],[24,A.ICICLE_SPEAR],[28,A.UPROAR],[32,A.ACID_ARMOR],[38,A.MIRROR_COAT],[44,A.ICE_BEAM],[52,A.BLIZZARD],[60,A.SHEER_COLD]],[e.DEERLING]:[[1,A.TACKLE],[1,A.CAMOUFLAGE],[4,A.GROWL],[7,A.SAND_ATTACK],[10,A.DOUBLE_KICK],[13,A.LEECH_SEED],[16,A.BULLET_SEED],[20,A.TAKE_DOWN],[24,A.ZEN_HEADBUTT],[28,A.ENERGY_BALL],[32,A.CHARM],[37,A.DOUBLE_EDGE],[42,A.SOLAR_BEAM]],[e.SAWSBUCK]:[[k,A.HORN_LEECH],[1,A.SAND_ATTACK],[1,A.TACKLE],[1,A.GROWL],[1,A.CAMOUFLAGE],[1,A.MEGAHORN],[10,A.DOUBLE_KICK],[13,A.LEECH_SEED],[16,A.BULLET_SEED],[20,A.TAKE_DOWN],[24,A.ZEN_HEADBUTT],[28,A.ENERGY_BALL],[36,A.CHARM],[44,A.DOUBLE_EDGE],[52,A.SOLAR_BEAM]],[e.EMOLGA]:[[1,A.TAIL_WHIP],[1,A.NUZZLE],[5,A.DOUBLE_TEAM],[10,A.QUICK_ATTACK],[15,A.THUNDER_SHOCK],[20,A.CHARGE],[25,A.ACROBATICS],[30,A.SPARK],[35,A.ENCORE],[40,A.VOLT_SWITCH],[45,A.LIGHT_SCREEN],[50,A.DISCHARGE],[55,A.AGILITY]],[e.KARRABLAST]:[[1,A.LEER],[1,A.PECK],[4,A.FURY_CUTTER],[8,A.ENDURE],[12,A.FALSE_SWIPE],[16,A.ACID_SPRAY],[20,A.HEADBUTT],[24,A.FLAIL],[28,A.SCARY_FACE],[32,A.X_SCISSOR],[36,A.SWORDS_DANCE],[40,A.TAKE_DOWN],[44,A.BUG_BUZZ],[48,A.DOUBLE_EDGE]],[e.ESCAVALIER]:[[1,A.TAKE_DOWN],[1,A.DOUBLE_EDGE],[1,A.LEER],[1,A.PECK],[1,A.FLAIL],[1,A.SCARY_FACE],[1,A.ENDURE],[1,A.FURY_CUTTER],[1,A.QUICK_GUARD],[1,A.FELL_STINGER],[1,A.TWINEEDLE],[12,A.FALSE_SWIPE],[16,A.ACID_SPRAY],[20,A.HEADBUTT],[24,A.REVERSAL],[28,A.IRON_DEFENSE],[32,A.X_SCISSOR],[36,A.SWORDS_DANCE],[40,A.IRON_HEAD],[44,A.BUG_BUZZ],[48,A.GIGA_IMPACT],[52,A.METAL_BURST]],[e.FOONGUS]:[[1,A.ABSORB],[1,A.ASTONISH],[4,A.GROWTH],[8,A.STUN_SPORE],[12,A.MEGA_DRAIN],[16,A.SYNTHESIS],[20,A.CLEAR_SMOG],[24,A.SWEET_SCENT],[28,A.GIGA_DRAIN],[32,A.INGRAIN],[36,A.TOXIC],[40,A.RAGE_POWDER],[44,A.SOLAR_BEAM],[48,A.SPORE]],[e.AMOONGUSS]:[[1,A.ABSORB],[1,A.GROWTH],[1,A.STUN_SPORE],[1,A.ASTONISH],[1,A.BIDE],[12,A.MEGA_DRAIN],[16,A.SYNTHESIS],[20,A.CLEAR_SMOG],[24,A.SWEET_SCENT],[28,A.GIGA_DRAIN],[32,A.INGRAIN],[36,A.TOXIC],[42,A.RAGE_POWDER],[48,A.SOLAR_BEAM],[54,A.SPORE]],[e.FRILLISH]:[[1,A.WATER_GUN],[1,A.ABSORB],[1,A.WATER_SPORT],[4,A.POISON_STING],[8,A.NIGHT_SHADE],[12,A.WATER_PULSE],[16,A.RAIN_DANCE],[20,A.HEX],[24,A.BRINE],[28,A.RECOVER],[32,A.SHADOW_BALL],[36,A.WHIRLPOOL],[41,A.HYDRO_PUMP],[44,A.DESTINY_BOND],[48,A.WATER_SPOUT]],[e.JELLICENT]:[[1,A.POISON_STING],[1,A.WATER_GUN],[1,A.WATER_SPORT],[1,A.WRING_OUT],[1,A.ABSORB],[1,A.NIGHT_SHADE],[1,A.ACID_ARMOR],[12,A.WATER_PULSE],[16,A.RAIN_DANCE],[20,A.HEX],[24,A.BRINE],[28,A.RECOVER],[32,A.SHADOW_BALL],[36,A.WHIRLPOOL],[43,A.HYDRO_PUMP],[48,A.DESTINY_BOND],[54,A.WATER_SPOUT]],[e.ALOMOMOLA]:[[1,A.POUND],[1,A.PLAY_NICE],[1,A.WATER_SPORT],[5,A.AQUA_RING],[9,A.AQUA_JET],[13,A.HELPING_HAND],[13,A.WIDE_GUARD],[21,A.PROTECT],[25,A.WATER_PULSE],[29,A.HEALING_WISH],[33,A.SOAK],[37,A.WISH],[41,A.BRINE],[45,A.SAFEGUARD],[49,A.WHIRLPOOL],[55,A.HYDRO_PUMP]],[e.JOLTIK]:[[1,A.ABSORB],[1,A.FURY_CUTTER],[1,A.SPIDER_WEB],[4,A.ELECTROWEB],[8,A.BUG_BITE],[12,A.STRING_SHOT],[16,A.THUNDER_WAVE],[20,A.ELECTRO_BALL],[24,A.AGILITY],[28,A.SUCKER_PUNCH],[32,A.SLASH],[37,A.DISCHARGE],[40,A.SCREECH],[44,A.GASTRO_ACID],[48,A.BUG_BUZZ]],[e.GALVANTULA]:[[k,A.STICKY_WEB],[1,A.ABSORB],[1,A.FURY_CUTTER],[1,A.BUG_BITE],[1,A.ELECTROWEB],[1,A.SPIDER_WEB],[12,A.STRING_SHOT],[16,A.THUNDER_WAVE],[20,A.ELECTRO_BALL],[24,A.AGILITY],[28,A.SUCKER_PUNCH],[32,A.SLASH],[39,A.DISCHARGE],[44,A.SCREECH],[50,A.GASTRO_ACID],[56,A.BUG_BUZZ]],[e.FERROSEED]:[[1,A.TACKLE],[1,A.HARDEN],[5,A.METAL_CLAW],[10,A.PIN_MISSILE],[15,A.INGRAIN],[20,A.FLASH_CANNON],[25,A.IRON_HEAD],[30,A.SELF_DESTRUCT],[35,A.IRON_DEFENSE],[41,A.CURSE],[45,A.GYRO_BALL],[50,A.EXPLOSION]],[e.FERROTHORN]:[[k,A.POWER_WHIP],[1,A.TACKLE],[1,A.PIN_MISSILE],[1,A.HARDEN],[1,A.METAL_CLAW],[1,A.ROCK_CLIMB],[15,A.INGRAIN],[20,A.FLASH_CANNON],[25,A.IRON_HEAD],[30,A.SELF_DESTRUCT],[35,A.IRON_DEFENSE],[43,A.CURSE],[49,A.GYRO_BALL],[56,A.EXPLOSION]],[e.KLINK]:[[1,A.VISE_GRIP],[1,A.THUNDER_SHOCK],[4,A.BIND],[8,A.CHARGE],[12,A.CHARGE_BEAM],[16,A.METAL_SOUND],[20,A.AUTOTOMIZE],[24,A.DISCHARGE],[28,A.SCREECH],[32,A.GEAR_GRIND],[36,A.LOCK_ON],[40,A.SHIFT_GEAR],[44,A.ZAP_CANNON],[48,A.HYPER_BEAM]],[e.KLANG]:[[1,A.VISE_GRIP],[1,A.BIND],[1,A.THUNDER_SHOCK],[1,A.CHARGE],[12,A.CHARGE_BEAM],[16,A.METAL_SOUND],[20,A.AUTOTOMIZE],[24,A.DISCHARGE],[28,A.SCREECH],[32,A.GEAR_GRIND],[36,A.LOCK_ON],[42,A.SHIFT_GEAR],[48,A.ZAP_CANNON],[54,A.HYPER_BEAM]],[e.KLINKLANG]:[[1,A.VISE_GRIP],[1,A.BIND],[1,A.THUNDER_SHOCK],[1,A.CHARGE],[1,A.MAGNETIC_FLUX],[1,A.GEAR_UP],[12,A.CHARGE_BEAM],[16,A.METAL_SOUND],[20,A.AUTOTOMIZE],[24,A.DISCHARGE],[28,A.SCREECH],[32,A.GEAR_GRIND],[36,A.LOCK_ON],[42,A.SHIFT_GEAR],[48,A.ZAP_CANNON],[56,A.HYPER_BEAM],[64,A.ELECTRIC_TERRAIN]],[e.TYNAMO]:[[1,A.TACKLE],[1,A.THUNDER_WAVE],[1,A.SPARK],[1,A.CHARGE_BEAM]],[e.EELEKTRIK]:[[k,A.CRUNCH],[1,A.TACKLE],[1,A.HEADBUTT],[1,A.THUNDER_WAVE],[1,A.SPARK],[1,A.CHARGE_BEAM],[1,A.ION_DELUGE],[9,A.BIND],[19,A.ACID],[29,A.DISCHARGE],[44,A.THUNDERBOLT],[49,A.ACID_SPRAY],[54,A.COIL],[59,A.WILD_CHARGE],[64,A.GASTRO_ACID],[69,A.ZAP_CANNON],[74,A.THRASH]],[e.EELEKTROSS]:[[V,A.THUNDERBOLT],[V,A.ACID_SPRAY],[1,A.TACKLE],[1,A.HEADBUTT],[1,A.THUNDER_WAVE],[1,A.SPARK],[1,A.CHARGE_BEAM],[1,A.ION_DELUGE],[1,A.BIND],[1,A.THRASH],[1,A.ACID],[1,A.ZAP_CANNON],[1,A.CRUNCH],[1,A.CRUSH_CLAW],[1,A.GASTRO_ACID],[1,A.DISCHARGE],[1,A.COIL],[5,A.WILD_CHARGE]],[e.ELGYEM]:[[1,A.GROWL],[1,A.CONFUSION],[6,A.IMPRISON],[8,A.HEAL_BLOCK],[12,A.TELEPORT],[18,A.PSYBEAM],[24,A.GUARD_SPLIT],[24,A.POWER_SPLIT],[30,A.HEADBUTT],[36,A.ZEN_HEADBUTT],[43,A.RECOVER],[48,A.CALM_MIND],[54,A.WONDER_ROOM],[60,A.PSYCHIC]],[e.BEHEEYEM]:[[1,A.GROWL],[1,A.CONFUSION],[1,A.SYNCHRONOISE],[1,A.TELEPORT],[1,A.IMPRISON],[1,A.PSYCHIC_TERRAIN],[8,A.HEAL_BLOCK],[18,A.PSYBEAM],[24,A.GUARD_SPLIT],[24,A.POWER_SPLIT],[30,A.HEADBUTT],[36,A.ZEN_HEADBUTT],[45,A.RECOVER],[52,A.CALM_MIND],[60,A.WONDER_ROOM],[68,A.PSYCHIC]],[e.LITWICK]:[[1,A.SMOG],[1,A.ASTONISH],[4,A.EMBER],[8,A.MINIMIZE],[12,A.CONFUSE_RAY],[16,A.HEX],[20,A.WILL_O_WISP],[24,A.FIRE_SPIN],[28,A.NIGHT_SHADE],[32,A.CURSE],[36,A.SHADOW_BALL],[40,A.INFERNO],[44,A.IMPRISON],[48,A.PAIN_SPLIT],[52,A.OVERHEAT],[56,A.MEMENTO]],[e.LAMPENT]:[[1,A.EMBER],[1,A.MINIMIZE],[1,A.SMOG],[1,A.ASTONISH],[12,A.CONFUSE_RAY],[16,A.HEX],[20,A.WILL_O_WISP],[24,A.FIRE_SPIN],[28,A.NIGHT_SHADE],[32,A.CURSE],[36,A.SHADOW_BALL],[40,A.INFERNO],[46,A.IMPRISON],[52,A.PAIN_SPLIT],[58,A.OVERHEAT],[64,A.MEMENTO]],[e.CHANDELURE]:[[1,A.EMBER],[1,A.FIRE_SPIN],[1,A.NIGHT_SHADE],[1,A.MINIMIZE],[1,A.CONFUSE_RAY],[1,A.SMOG],[1,A.CURSE],[1,A.PAIN_SPLIT],[1,A.SHADOW_BALL],[1,A.WILL_O_WISP],[1,A.MEMENTO],[1,A.IMPRISON],[1,A.ASTONISH],[1,A.OVERHEAT],[1,A.HEX],[1,A.INFERNO]],[e.AXEW]:[[1,A.SCRATCH],[1,A.LEER],[3,A.BITE],[6,A.FALSE_SWIPE],[9,A.ASSURANCE],[12,A.TAUNT],[15,A.SLASH],[18,A.DRAGON_CLAW],[21,A.SCARY_FACE],[24,A.CRUNCH],[27,A.DRAGON_DANCE],[30,A.DUAL_CHOP],[33,A.FOCUS_ENERGY],[36,A.DRAGON_PULSE],[39,A.SWORDS_DANCE],[42,A.OUTRAGE],[45,A.GUILLOTINE],[48,A.GIGA_IMPACT]],[e.FRAXURE]:[[1,A.SCRATCH],[1,A.LEER],[1,A.BITE],[1,A.FALSE_SWIPE],[1,A.DUAL_CHOP],[9,A.ASSURANCE],[12,A.TAUNT],[15,A.SLASH],[18,A.DRAGON_CLAW],[21,A.SCARY_FACE],[24,A.CRUNCH],[27,A.DRAGON_DANCE],[30,A.BREAKING_SWIPE],[33,A.FOCUS_ENERGY],[36,A.DRAGON_PULSE],[41,A.SWORDS_DANCE],[46,A.OUTRAGE],[51,A.GUILLOTINE],[56,A.GIGA_IMPACT]],[e.HAXORUS]:[[1,A.SCRATCH],[1,A.LEER],[1,A.BITE],[1,A.FALSE_SWIPE],[1,A.DUAL_CHOP],[9,A.ASSURANCE],[12,A.TAUNT],[15,A.SLASH],[18,A.DRAGON_CLAW],[21,A.SCARY_FACE],[24,A.CRUNCH],[27,A.DRAGON_DANCE],[30,A.BREAKING_SWIPE],[33,A.FOCUS_ENERGY],[36,A.DRAGON_PULSE],[41,A.SWORDS_DANCE],[46,A.OUTRAGE],[53,A.GUILLOTINE],[60,A.GIGA_IMPACT]],[e.CUBCHOO]:[[1,A.GROWL],[1,A.POWDER_SNOW],[3,A.ENDURE],[6,A.FURY_SWIPES],[9,A.ICY_WIND],[12,A.PLAY_NICE],[15,A.BRINE],[18,A.FROST_BREATH],[21,A.SLASH],[24,A.FLAIL],[27,A.CHARM],[30,A.SNOWSCAPE],[33,A.THRASH],[36,A.REST],[39,A.BLIZZARD],[42,A.SHEER_COLD]],[e.BEARTIC]:[[k,A.ICICLE_CRASH],[1,A.GROWL],[1,A.FURY_SWIPES],[1,A.POWDER_SNOW],[1,A.ENDURE],[1,A.CHARM],[1,A.AQUA_JET],[1,A.BIDE],[9,A.ICY_WIND],[12,A.PLAY_NICE],[15,A.BRINE],[18,A.FROST_BREATH],[21,A.SLASH],[24,A.FLAIL],[27,A.SWAGGER],[30,A.SNOWSCAPE],[33,A.THRASH],[36,A.REST],[41,A.BLIZZARD],[46,A.SHEER_COLD],[51,A.SUPERPOWER]],[e.CRYOGONAL]:[[1,A.BIND],[1,A.ICE_SHARD],[4,A.CONFUSE_RAY],[8,A.RAPID_SPIN],[12,A.ICY_WIND],[16,A.MIST],[16,A.HAZE],[20,A.ANCIENT_POWER],[24,A.AURORA_BEAM],[28,A.SLASH],[32,A.NIGHT_SLASH],[36,A.FREEZE_DRY],[40,A.LIGHT_SCREEN],[40,A.REFLECT],[44,A.RECOVER],[48,A.ICE_BEAM],[52,A.ACID_ARMOR],[56,A.SOLAR_BEAM],[60,A.SHEER_COLD]],[e.SHELMET]:[[1,A.ABSORB],[1,A.PROTECT],[4,A.ACID],[8,A.CURSE],[12,A.MEGA_DRAIN],[16,A.STRUGGLE_BUG],[20,A.YAWN],[24,A.ACID_ARMOR],[28,A.GIGA_DRAIN],[32,A.GUARD_SWAP],[36,A.BODY_SLAM],[40,A.RECOVER],[44,A.BUG_BUZZ],[48,A.FINAL_GAMBIT]],[e.ACCELGOR]:[[1,A.BODY_SLAM],[1,A.ACID],[1,A.ABSORB],[1,A.PROTECT],[1,A.QUICK_ATTACK],[1,A.DOUBLE_TEAM],[1,A.ACID_ARMOR],[1,A.CURSE],[1,A.YAWN],[1,A.GUARD_SWAP],[1,A.ACID_SPRAY],[1,A.WATER_SHURIKEN],[12,A.MEGA_DRAIN],[16,A.STRUGGLE_BUG],[20,A.SWIFT],[24,A.AGILITY],[28,A.GIGA_DRAIN],[32,A.POWER_SWAP],[36,A.U_TURN],[40,A.RECOVER],[44,A.BUG_BUZZ],[48,A.FINAL_GAMBIT],[52,A.TOXIC]],[e.STUNFISK]:[[1,A.TACKLE],[1,A.WATER_GUN],[1,A.THUNDER_SHOCK],[1,A.MUD_SLAP],[1,A.MUD_SPORT],[5,A.ENDURE],[10,A.MUD_SHOT],[15,A.REVENGE],[20,A.CHARGE],[25,A.SUCKER_PUNCH],[30,A.ELECTRIC_TERRAIN],[35,A.BOUNCE],[40,A.MUDDY_WATER],[45,A.DISCHARGE],[50,A.FLAIL],[55,A.FISSURE]],[e.MIENFOO]:[[1,A.POUND],[1,A.DETECT],[5,A.FAKE_OUT],[10,A.REVERSAL],[15,A.FURY_SWIPES],[20,A.QUICK_GUARD],[25,A.FORCE_PALM],[30,A.U_TURN],[35,A.DRAIN_PUNCH],[40,A.HONE_CLAWS],[45,A.AURA_SPHERE],[51,A.BOUNCE],[55,A.CALM_MIND],[60,A.HIGH_JUMP_KICK]],[e.MIENSHAO]:[[1,A.POUND],[1,A.REVERSAL],[1,A.DETECT],[1,A.FAKE_OUT],[1,A.QUICK_GUARD],[15,A.FURY_SWIPES],[20,A.WIDE_GUARD],[25,A.FORCE_PALM],[30,A.U_TURN],[35,A.DRAIN_PUNCH],[40,A.HONE_CLAWS],[45,A.AURA_SPHERE],[53,A.BOUNCE],[59,A.CALM_MIND],[66,A.HIGH_JUMP_KICK]],[e.DRUDDIGON]:[[1,A.SCRATCH],[1,A.LEER],[5,A.BITE],[10,A.DRAGON_TAIL],[15,A.METAL_CLAW],[20,A.SCARY_FACE],[25,A.SLASH],[30,A.DRAGON_CLAW],[35,A.HONE_CLAWS],[40,A.CRUNCH],[45,A.IRON_HEAD],[50,A.OUTRAGE],[55,A.SUPERPOWER]],[e.GOLETT]:[[1,A.MUD_SLAP],[1,A.ASTONISH],[4,A.DEFENSE_CURL],[8,A.POUND],[12,A.SHADOW_PUNCH],[16,A.CURSE],[20,A.NIGHT_SHADE],[24,A.STOMPING_TANTRUM],[28,A.IRON_DEFENSE],[32,A.MEGA_PUNCH],[36,A.SHADOW_BALL],[40,A.HEAVY_SLAM],[44,A.PHANTOM_FORCE],[48,A.HAMMER_ARM],[52,A.EARTHQUAKE],[56,A.DYNAMIC_PUNCH]],[e.GOLURK]:[[V,A.MUD_SLAP],[V,A.FOCUS_PUNCH],[1,A.POUND],[1,A.DEFENSE_CURL],[1,A.ASTONISH],[1,A.HIGH_HORSEPOWER],[12,A.SHADOW_PUNCH],[16,A.CURSE],[20,A.NIGHT_SHADE],[24,A.STOMPING_TANTRUM],[28,A.IRON_DEFENSE],[32,A.MEGA_PUNCH],[36,A.SHADOW_BALL],[40,A.HEAVY_SLAM],[46,A.PHANTOM_FORCE],[52,A.HAMMER_ARM],[58,A.EARTHQUAKE],[64,A.DYNAMIC_PUNCH]],[e.PAWNIARD]:[[1,A.SCRATCH],[1,A.LEER],[5,A.FURY_CUTTER],[10,A.METAL_CLAW],[15,A.TORMENT],[20,A.SCARY_FACE],[25,A.ASSURANCE],[30,A.METAL_SOUND],[35,A.SLASH],[40,A.NIGHT_SLASH],[45,A.IRON_DEFENSE],[50,A.RETALIATE],[55,A.IRON_HEAD],[60,A.SWORDS_DANCE],[65,A.GUILLOTINE]],[e.BISHARP]:[[1,A.SCRATCH],[1,A.LEER],[1,A.FURY_CUTTER],[1,A.METAL_CLAW],[1,A.METAL_BURST],[15,A.TORMENT],[20,A.SCARY_FACE],[25,A.ASSURANCE],[30,A.METAL_SOUND],[35,A.SLASH],[40,A.NIGHT_SLASH],[45,A.IRON_DEFENSE],[50,A.RETALIATE],[57,A.IRON_HEAD],[64,A.SWORDS_DANCE],[71,A.GUILLOTINE]],[e.BOUFFALANT]:[[1,A.TACKLE],[1,A.LEER],[1,A.PURSUIT],[5,A.FOCUS_ENERGY],[10,A.FURY_ATTACK],[15,A.REVENGE],[20,A.SCARY_FACE],[25,A.HORN_ATTACK],[30,A.REVERSAL],[35,A.THROAT_CHOP],[40,A.HEAD_CHARGE],[45,A.SWORDS_DANCE],[50,A.MEGAHORN],[55,A.GIGA_IMPACT]],[e.RUFFLET]:[[1,A.LEER],[1,A.PECK],[6,A.HONE_CLAWS],[12,A.WING_ATTACK],[18,A.TAILWIND],[24,A.SCARY_FACE],[30,A.AERIAL_ACE],[36,A.SLASH],[42,A.WHIRLWIND],[48,A.CRUSH_CLAW],[55,A.AIR_SLASH],[60,A.DEFOG],[66,A.THRASH],[72,A.BRAVE_BIRD]],[e.BRAVIARY]:[[k,A.SUPERPOWER],[V,A.BRAVE_BIRD],[1,A.WING_ATTACK],[1,A.LEER],[1,A.PECK],[1,A.SKY_ATTACK],[1,A.HONE_CLAWS],[18,A.TAILWIND],[24,A.SCARY_FACE],[30,A.AERIAL_ACE],[36,A.SLASH],[42,A.WHIRLWIND],[48,A.CRUSH_CLAW],[57,A.AIR_SLASH],[64,A.DEFOG],[72,A.THRASH]],[e.VULLABY]:[[1,A.GUST],[1,A.LEER],[6,A.FLATTER],[12,A.PLUCK],[18,A.TAILWIND],[24,A.KNOCK_OFF],[30,A.IRON_DEFENSE],[36,A.WHIRLWIND],[42,A.AIR_SLASH],[48,A.DARK_PULSE],[54,A.NASTY_PLOT],[60,A.DEFOG],[66,A.ATTRACT],[72,A.BRAVE_BIRD]],[e.MANDIBUZZ]:[[k,A.BONE_RUSH],[1,A.GUST],[1,A.LEER],[1,A.TOXIC],[1,A.SKY_ATTACK],[1,A.FLATTER],[1,A.PLUCK],[18,A.TAILWIND],[24,A.KNOCK_OFF],[30,A.IRON_DEFENSE],[36,A.WHIRLWIND],[42,A.AIR_SLASH],[48,A.DARK_PULSE],[57,A.NASTY_PLOT],[64,A.DEFOG],[72,A.ATTRACT],[80,A.BRAVE_BIRD]],[e.HEATMOR]:[[1,A.TACKLE],[1,A.LICK],[5,A.FURY_SWIPES],[10,A.INCINERATE],[15,A.BUG_BITE],[20,A.STOCKPILE],[20,A.SPIT_UP],[20,A.SWALLOW],[25,A.SLASH],[30,A.BIND],[35,A.FIRE_LASH],[40,A.HONE_CLAWS],[45,A.AMNESIA],[50,A.FIRE_SPIN],[55,A.INFERNO],[60,A.FLARE_BLITZ]],[e.DURANT]:[[1,A.SAND_ATTACK],[1,A.FURY_CUTTER],[4,A.VISE_GRIP],[8,A.METAL_CLAW],[12,A.BEAT_UP],[16,A.BUG_BITE],[20,A.BITE],[24,A.AGILITY],[28,A.DIG],[32,A.X_SCISSOR],[36,A.CRUNCH],[40,A.METAL_SOUND],[44,A.IRON_HEAD],[48,A.ENTRAINMENT],[52,A.IRON_DEFENSE],[56,A.GUILLOTINE]],[e.DEINO]:[[1,A.TACKLE],[1,A.FOCUS_ENERGY],[4,A.DRAGON_BREATH],[8,A.BITE],[12,A.ROAR],[16,A.ASSURANCE],[20,A.HEADBUTT],[24,A.WORK_UP],[28,A.SLAM],[32,A.CRUNCH],[36,A.SCARY_FACE],[40,A.DRAGON_PULSE],[44,A.BODY_SLAM],[48,A.HYPER_VOICE],[52,A.DRAGON_RUSH],[56,A.NASTY_PLOT],[60,A.OUTRAGE]],[e.ZWEILOUS]:[[1,A.TACKLE],[1,A.BITE],[1,A.FOCUS_ENERGY],[1,A.DRAGON_BREATH],[1,A.DOUBLE_HIT],[12,A.ROAR],[16,A.ASSURANCE],[20,A.HEADBUTT],[24,A.WORK_UP],[28,A.SLAM],[32,A.CRUNCH],[36,A.SCARY_FACE],[40,A.DRAGON_PULSE],[44,A.BODY_SLAM],[48,A.HYPER_VOICE],[54,A.DRAGON_RUSH],[60,A.NASTY_PLOT],[66,A.OUTRAGE]],[e.HYDREIGON]:[[1,A.TACKLE],[1,A.BITE],[1,A.FOCUS_ENERGY],[1,A.TRI_ATTACK],[1,A.DRAGON_BREATH],[1,A.DOUBLE_HIT],[12,A.ROAR],[16,A.ASSURANCE],[20,A.HEADBUTT],[24,A.WORK_UP],[28,A.SLAM],[32,A.CRUNCH],[36,A.SCARY_FACE],[40,A.DRAGON_PULSE],[44,A.BODY_SLAM],[48,A.HYPER_VOICE],[54,A.DRAGON_RUSH],[60,A.NASTY_PLOT],[68,A.OUTRAGE],[76,A.HYPER_BEAM]],[e.LARVESTA]:[[1,A.EMBER],[1,A.STRING_SHOT],[6,A.FLAME_CHARGE],[12,A.STRUGGLE_BUG],[18,A.FLAME_WHEEL],[24,A.BUG_BITE],[30,A.SCREECH],[36,A.LEECH_LIFE],[42,A.BUG_BUZZ],[48,A.TAKE_DOWN],[54,A.AMNESIA],[60,A.DOUBLE_EDGE],[66,A.FLARE_BLITZ]],[e.VOLCARONA]:[[k,A.QUIVER_DANCE],[1,A.GUST],[1,A.WHIRLWIND],[1,A.TAKE_DOWN],[1,A.DOUBLE_EDGE],[1,A.EMBER],[1,A.STRING_SHOT],[1,A.FIRE_SPIN],[1,A.FLARE_BLITZ],[1,A.FLAME_CHARGE],[1,A.STRUGGLE_BUG],[1,A.FIERY_DANCE],[18,A.FLAME_WHEEL],[24,A.BUG_BITE],[30,A.SCREECH],[36,A.LEECH_LIFE],[42,A.BUG_BUZZ],[48,A.HEAT_WAVE],[54,A.AMNESIA],[62,A.HURRICANE],[70,A.FIRE_BLAST],[78,A.RAGE_POWDER]],[e.COBALION]:[[1,A.LEER],[1,A.QUICK_ATTACK],[1,A.HELPING_HAND],[1,A.WORK_UP],[7,A.METAL_CLAW],[14,A.QUICK_GUARD],[21,A.DOUBLE_KICK],[28,A.RETALIATE],[35,A.METAL_BURST],[42,A.TAKE_DOWN],[49,A.SACRED_SWORD],[56,A.SWORDS_DANCE],[63,A.IRON_HEAD],[70,A.CLOSE_COMBAT]],[e.TERRAKION]:[[1,A.LEER],[1,A.QUICK_ATTACK],[1,A.HELPING_HAND],[1,A.WORK_UP],[7,A.SMACK_DOWN],[14,A.QUICK_GUARD],[21,A.DOUBLE_KICK],[28,A.RETALIATE],[35,A.ROCK_SLIDE],[42,A.TAKE_DOWN],[49,A.SACRED_SWORD],[56,A.SWORDS_DANCE],[63,A.STONE_EDGE],[70,A.CLOSE_COMBAT]],[e.VIRIZION]:[[V,A.TAKE_DOWN],[1,A.LEER],[1,A.QUICK_ATTACK],[1,A.HELPING_HAND],[1,A.WORK_UP],[7,A.MAGICAL_LEAF],[14,A.QUICK_GUARD],[21,A.DOUBLE_KICK],[28,A.RETALIATE],[35,A.GIGA_DRAIN],[42,A.TAKE_DOWN],[49,A.SACRED_SWORD],[56,A.SWORDS_DANCE],[63,A.LEAF_BLADE],[70,A.CLOSE_COMBAT]],[e.TORNADUS]:[[1,A.GUST],[1,A.ASTONISH],[5,A.LEER],[10,A.SWAGGER],[15,A.BITE],[20,A.AIR_CUTTER],[25,A.AGILITY],[30,A.TAILWIND],[35,A.AIR_SLASH],[40,A.CRUNCH],[45,A.EXTRASENSORY],[50,A.UPROAR],[55,A.HAMMER_ARM],[60,A.RAIN_DANCE],[65,A.HURRICANE],[70,A.THRASH],[77,A.BLEAKWIND_STORM]],[e.THUNDURUS]:[[1,A.THUNDER_SHOCK],[1,A.ASTONISH],[5,A.LEER],[10,A.SWAGGER],[15,A.BITE],[20,A.SHOCK_WAVE],[25,A.AGILITY],[30,A.CHARGE],[31,A.HEAL_BLOCK],[35,A.VOLT_SWITCH],[40,A.CRUNCH],[45,A.DISCHARGE],[50,A.UPROAR],[55,A.HAMMER_ARM],[60,A.RAIN_DANCE],[65,A.THUNDER],[70,A.THRASH],[75,A.WILDBOLT_STORM]],[e.RESHIRAM]:[[1,A.DRAGON_BREATH],[1,A.ANCIENT_POWER],[1,A.FIRE_FANG],[1,A.NOBLE_ROAR],[8,A.SLASH],[16,A.CRUNCH],[24,A.EXTRASENSORY],[32,A.DRAGON_PULSE],[40,A.FLAMETHROWER],[48,A.FUSION_FLARE],[56,A.HYPER_VOICE],[64,A.FIRE_BLAST],[72,A.IMPRISON],[80,A.OUTRAGE],[88,A.BLUE_FLARE]],[e.ZEKROM]:[[1,A.DRAGON_BREATH],[1,A.ANCIENT_POWER],[1,A.THUNDER_FANG],[1,A.NOBLE_ROAR],[8,A.SLASH],[16,A.CRUNCH],[24,A.ZEN_HEADBUTT],[32,A.DRAGON_CLAW],[40,A.THUNDERBOLT],[48,A.FUSION_BOLT],[56,A.HYPER_VOICE],[64,A.THUNDER],[72,A.IMPRISON],[80,A.OUTRAGE],[88,A.BOLT_STRIKE]],[e.LANDORUS]:[[1,A.SAND_TOMB],[1,A.SMACK_DOWN],[5,A.LEER],[10,A.BLOCK],[15,A.BULLDOZE],[20,A.ROCK_TOMB],[30,A.IMPRISON],[35,A.ROCK_SLIDE],[40,A.EARTH_POWER],[45,A.EXTRASENSORY],[50,A.STONE_EDGE],[55,A.HAMMER_ARM],[60,A.SANDSTORM],[65,A.EARTHQUAKE],[70,A.OUTRAGE],[75,A.FISSURE],[80,A.SANDSEAR_STORM]],[e.KYUREM]:[[1,A.DRAGON_BREATH],[1,A.ANCIENT_POWER],[1,A.NOBLE_ROAR],[1,A.FREEZE_DRY],[8,A.SLASH],[16,A.ENDEAVOR],[24,A.DRAGON_PULSE],[32,A.ICE_BEAM],[40,A.HYPER_VOICE],[48,A.SCARY_FACE],[56,A.BLIZZARD],[64,A.IMPRISON],[72,A.OUTRAGE],[80,A.GLACIATE],[88,A.SHEER_COLD]],[e.KELDEO]:[[1,A.LEER],[1,A.HELPING_HAND],[1,A.AQUA_JET],[1,A.WORK_UP],[1,A.SECRET_SWORD],[7,A.BUBBLE_BEAM],[14,A.QUICK_GUARD],[21,A.DOUBLE_KICK],[28,A.RETALIATE],[35,A.AQUA_TAIL],[42,A.TAKE_DOWN],[49,A.SACRED_SWORD],[56,A.SWORDS_DANCE],[63,A.HYDRO_PUMP],[70,A.CLOSE_COMBAT]],[e.MELOETTA]:[[1,A.SING],[1,A.CONFUSION],[1,A.QUICK_ATTACK],[1,A.ROUND],[21,A.TEETER_DANCE],[26,A.ACROBATICS],[31,A.PSYBEAM],[36,A.ECHOED_VOICE],[43,A.U_TURN],[50,A.RELIC_SONG],[57,A.PSYCHIC],[64,A.HYPER_VOICE],[71,A.ROLE_PLAY],[78,A.CLOSE_COMBAT],[85,A.PERISH_SONG]],[e.GENESECT]:[[1,A.QUICK_ATTACK],[1,A.FURY_CUTTER],[7,A.SCREECH],[14,A.METAL_CLAW],[21,A.FELL_STINGER],[28,A.FLAME_CHARGE],[35,A.METAL_SOUND],[42,A.X_SCISSOR],[49,A.MAGNET_RISE],[56,A.BUG_BUZZ],[63,A.SIMPLE_BEAM],[70,A.ZAP_CANNON],[77,A.LOCK_ON],[84,A.TECHNO_BLAST],[91,A.SELF_DESTRUCT]],[e.CHESPIN]:[[1,A.TACKLE],[1,A.GROWL],[1,A.VINE_WHIP],[8,A.ROLLOUT],[11,A.BITE],[15,A.LEECH_SEED],[18,A.PIN_MISSILE],[27,A.TAKE_DOWN],[32,A.SEED_BOMB],[35,A.MUD_SHOT],[42,A.BODY_SLAM],[45,A.PAIN_SPLIT],[48,A.WOOD_HAMMER]],[e.QUILLADIN]:[[k,A.NEEDLE_ARM],[1,A.TACKLE],[1,A.GROWL],[1,A.VINE_WHIP],[8,A.ROLLOUT],[11,A.BITE],[15,A.LEECH_SEED],[20,A.SEED_BOMB],[24,A.PIN_MISSILE],[29,A.TAKE_DOWN],[34,A.MUD_SHOT],[38,A.BULK_UP],[43,A.BODY_SLAM],[47,A.PAIN_SPLIT],[53,A.WOOD_HAMMER]],[e.CHESNAUGHT]:[[k,A.SPIKY_SHIELD],[1,A.VINE_WHIP],[1,A.TACKLE],[1,A.GROWL],[1,A.ROLLOUT],[1,A.HAMMER_ARM],[1,A.FEINT],[1,A.NEEDLE_ARM],[11,A.BITE],[15,A.LEECH_SEED],[19,A.PIN_MISSILE],[29,A.TAKE_DOWN],[35,A.SEED_BOMB],[41,A.MUD_SHOT],[48,A.BULK_UP],[54,A.BODY_SLAM],[60,A.PAIN_SPLIT],[66,A.WOOD_HAMMER],[78,A.GIGA_IMPACT]],[e.FENNEKIN]:[[1,A.SCRATCH],[1,A.TAIL_WHIP],[5,A.EMBER],[11,A.HOWL],[14,A.FLAME_CHARGE],[17,A.PSYBEAM],[20,A.FIRE_SPIN],[25,A.LIGHT_SCREEN],[31,A.PSYSHOCK],[35,A.FLAMETHROWER],[38,A.WILL_O_WISP],[41,A.PSYCHIC],[43,A.SUNNY_DAY],[48,A.FIRE_BLAST]],[e.BRAIXEN]:[[1,A.SCRATCH],[1,A.TAIL_WHIP],[1,A.EMBER],[11,A.HOWL],[14,A.FLAME_CHARGE],[18,A.PSYBEAM],[22,A.FIRE_SPIN],[28,A.LIGHT_SCREEN],[36,A.PSYSHOCK],[41,A.FLAMETHROWER],[45,A.WILL_O_WISP],[49,A.PSYCHIC],[52,A.SUNNY_DAY],[56,A.MAGIC_ROOM],[59,A.FIRE_BLAST]],[e.DELPHOX]:[[k,A.MYSTICAL_FIRE],[1,A.SCRATCH],[1,A.TAIL_WHIP],[1,A.EMBER],[1,A.SHADOW_BALL],[1,A.FUTURE_SIGHT],[1,A.ROLE_PLAY],[1,A.HOWL],[1,A.SWITCHEROO],[14,A.FLAME_CHARGE],[18,A.PSYBEAM],[22,A.FIRE_SPIN],[28,A.LIGHT_SCREEN],[38,A.PSYSHOCK],[45,A.FLAMETHROWER],[51,A.WILL_O_WISP],[57,A.PSYCHIC],[62,A.SUNNY_DAY],[68,A.MAGIC_ROOM],[74,A.FIRE_BLAST]],[e.FROAKIE]:[[1,A.POUND],[1,A.GROWL],[5,A.WATER_GUN],[8,A.QUICK_ATTACK],[10,A.LICK],[14,A.WATER_PULSE],[18,A.SMOKESCREEN],[21,A.ROUND],[25,A.FLING],[29,A.SMACK_DOWN],[35,A.SUBSTITUTE],[39,A.BOUNCE],[43,A.DOUBLE_TEAM],[48,A.HYDRO_PUMP]],[e.FROGADIER]:[[1,A.POUND],[1,A.GROWL],[1,A.WATER_GUN],[8,A.QUICK_ATTACK],[10,A.LICK],[14,A.WATER_PULSE],[19,A.SMOKESCREEN],[23,A.ROUND],[28,A.FLING],[33,A.SMACK_DOWN],[40,A.SUBSTITUTE],[45,A.BOUNCE],[50,A.DOUBLE_TEAM],[56,A.HYDRO_PUMP]],[e.GRENINJA]:[[k,A.WATER_SHURIKEN],[1,A.POUND],[1,A.GROWL],[1,A.WATER_GUN],[1,A.QUICK_ATTACK],[1,A.ROUND],[1,A.FLING],[1,A.SMACK_DOWN],[1,A.BOUNCE],[1,A.HAZE],[1,A.MAT_BLOCK],[1,A.ROLE_PLAY],[1,A.NIGHT_SLASH],[10,A.LICK],[14,A.WATER_PULSE],[19,A.SMOKESCREEN],[23,A.SHADOW_SNEAK],[28,A.SPIKES],[33,A.AERIAL_ACE],[42,A.SUBSTITUTE],[49,A.EXTRASENSORY],[56,A.DOUBLE_TEAM],[68,A.HYDRO_PUMP]],[e.BUNNELBY]:[[1,A.LEER],[1,A.MUD_SLAP],[3,A.TACKLE],[6,A.LASER_FOCUS],[9,A.QUICK_ATTACK],[12,A.MUD_SHOT],[15,A.FLAIL],[18,A.DOUBLE_KICK],[21,A.BULLDOZE],[24,A.DIG],[27,A.BOUNCE],[30,A.TAKE_DOWN],[33,A.SWORDS_DANCE],[36,A.EARTHQUAKE],[39,A.SUPER_FANG]],[e.DIGGERSBY]:[[1,A.TACKLE],[1,A.LEER],[1,A.MUD_SLAP],[1,A.LASER_FOCUS],[1,A.ROTOTILLER],[9,A.QUICK_ATTACK],[12,A.MUD_SHOT],[15,A.FLAIL],[18,A.DOUBLE_KICK],[23,A.BULLDOZE],[28,A.DIG],[33,A.BOUNCE],[38,A.TAKE_DOWN],[43,A.SWORDS_DANCE],[48,A.EARTHQUAKE],[53,A.SUPER_FANG],[58,A.HAMMER_ARM]],[e.FLETCHLING]:[[1,A.GROWL],[1,A.PECK],[5,A.QUICK_ATTACK],[10,A.EMBER],[15,A.FLAIL],[20,A.ACROBATICS],[25,A.AGILITY],[30,A.AERIAL_ACE],[35,A.TAILWIND],[40,A.STEEL_WING],[45,A.ROOST],[50,A.FLY]],[e.FLETCHINDER]:[[k,A.FLAME_CHARGE],[1,A.GROWL],[1,A.EMBER],[1,A.PECK],[1,A.QUICK_ATTACK],[1,A.FEINT],[15,A.FLAIL],[22,A.ACROBATICS],[29,A.AGILITY],[36,A.AERIAL_ACE],[43,A.TAILWIND],[50,A.STEEL_WING],[57,A.ROOST],[64,A.FLY]],[e.TALONFLAME]:[[1,A.GROWL],[1,A.EMBER],[1,A.PECK],[1,A.QUICK_ATTACK],[1,A.FEINT],[1,A.FLARE_BLITZ],[1,A.FLAME_CHARGE],[15,A.FLAIL],[22,A.ACROBATICS],[29,A.AGILITY],[38,A.AERIAL_ACE],[47,A.TAILWIND],[56,A.STEEL_WING],[65,A.ROOST],[74,A.FLY],[83,A.BRAVE_BIRD]],[e.SCATTERBUG]:[[1,A.TACKLE],[1,A.STRING_SHOT],[6,A.STUN_SPORE],[15,A.BUG_BITE]],[e.SPEWPA]:[[k,A.PROTECT],[V,A.TACKLE],[V,A.STRING_SHOT],[V,A.STUN_SPORE],[V,A.BUG_BITE],[1,A.HARDEN]],[e.VIVILLON]:[[k,A.GUST],[1,A.PROTECT],[1,A.TACKLE],[1,A.STRING_SHOT],[1,A.HARDEN],[1,A.BUG_BITE],[1,A.POISON_POWDER],[1,A.STUN_SPORE],[1,A.SLEEP_POWDER],[1,A.STRUGGLE_BUG],[1,A.POWDER],[12,A.LIGHT_SCREEN],[17,A.PSYBEAM],[21,A.SUPERSONIC],[25,A.DRAINING_KISS],[31,A.SAFEGUARD],[35,A.BUG_BUZZ],[45,A.QUIVER_DANCE],[50,A.HURRICANE]],[e.LITLEO]:[[1,A.TACKLE],[1,A.LEER],[5,A.EMBER],[8,A.WORK_UP],[11,A.HEADBUTT],[15,A.NOBLE_ROAR],[20,A.TAKE_DOWN],[23,A.FIRE_FANG],[28,A.ENDEAVOR],[33,A.ECHOED_VOICE],[36,A.FLAMETHROWER],[39,A.CRUNCH],[43,A.HYPER_VOICE],[46,A.INCINERATE],[50,A.OVERHEAT]],[e.PYROAR]:[[1,A.TACKLE],[1,A.LEER],[1,A.EMBER],[1,A.HYPER_BEAM],[1,A.WORK_UP],[11,A.HEADBUTT],[15,A.NOBLE_ROAR],[20,A.TAKE_DOWN],[23,A.FIRE_FANG],[28,A.ENDEAVOR],[33,A.ECHOED_VOICE],[38,A.FLAMETHROWER],[42,A.CRUNCH],[48,A.HYPER_VOICE],[51,A.INCINERATE],[57,A.OVERHEAT]],[e.FLABEBE]:[[1,A.VINE_WHIP],[1,A.TACKLE],[6,A.FAIRY_WIND],[10,A.SAFEGUARD],[15,A.RAZOR_LEAF],[20,A.WISH],[22,A.MAGICAL_LEAF],[24,A.GRASSY_TERRAIN],[28,A.PETAL_BLIZZARD],[33,A.SYNTHESIS],[37,A.MISTY_TERRAIN],[41,A.MOONBLAST],[45,A.PETAL_DANCE],[48,A.SOLAR_BEAM]],[e.FLOETTE]:[[1,A.VINE_WHIP],[1,A.TACKLE],[1,A.FAIRY_WIND],[10,A.SAFEGUARD],[15,A.RAZOR_LEAF],[20,A.WISH],[25,A.MAGICAL_LEAF],[27,A.GRASSY_TERRAIN],[33,A.PETAL_BLIZZARD],[38,A.SYNTHESIS],[43,A.MISTY_TERRAIN],[46,A.MOONBLAST],[51,A.PETAL_DANCE],[58,A.SOLAR_BEAM]],[e.FLORGES]:[[1,A.VINE_WHIP],[1,A.TACKLE],[1,A.FAIRY_WIND],[1,A.RAZOR_LEAF],[1,A.SOLAR_BEAM],[1,A.PETAL_DANCE],[1,A.SAFEGUARD],[1,A.SYNTHESIS],[1,A.WISH],[1,A.LUCKY_CHANT],[1,A.MAGICAL_LEAF],[1,A.GRASS_KNOT],[1,A.PETAL_BLIZZARD],[1,A.DISARMING_VOICE],[1,A.GRASSY_TERRAIN],[1,A.MISTY_TERRAIN],[5,A.MOONBLAST]],[e.SKIDDO]:[[1,A.TACKLE],[1,A.GROWTH],[7,A.VINE_WHIP],[9,A.TAIL_WHIP],[12,A.LEECH_SEED],[13,A.RAZOR_LEAF],[16,A.WORRY_SEED],[20,A.SYNTHESIS],[22,A.TAKE_DOWN],[26,A.BULLDOZE],[30,A.SEED_BOMB],[34,A.BULK_UP],[38,A.DOUBLE_EDGE],[42,A.HORN_LEECH],[45,A.LEAF_BLADE]],[e.GOGOAT]:[[k,A.AERIAL_ACE],[1,A.VINE_WHIP],[1,A.TACKLE],[1,A.TAIL_WHIP],[1,A.GROWTH],[1,A.EARTHQUAKE],[12,A.LEECH_SEED],[13,A.RAZOR_LEAF],[16,A.WORRY_SEED],[20,A.SYNTHESIS],[22,A.TAKE_DOWN],[26,A.BULLDOZE],[30,A.SEED_BOMB],[34,A.BULK_UP],[40,A.DOUBLE_EDGE],[47,A.HORN_LEECH],[55,A.LEAF_BLADE],[58,A.MILK_DRINK]],[e.PANCHAM]:[[1,A.TACKLE],[1,A.LEER],[4,A.ARM_THRUST],[8,A.TAUNT],[12,A.CIRCLE_THROW],[16,A.LOW_SWEEP],[20,A.WORK_UP],[24,A.SLASH],[28,A.VITAL_THROW],[33,A.CRUNCH],[36,A.BODY_SLAM],[40,A.PARTING_SHOT],[44,A.ENTRAINMENT]],[e.PANGORO]:[[k,A.NIGHT_SLASH],[1,A.TACKLE],[1,A.LEER],[1,A.TAUNT],[1,A.ARM_THRUST],[1,A.BULLET_PUNCH],[12,A.CIRCLE_THROW],[16,A.LOW_SWEEP],[20,A.WORK_UP],[24,A.SLASH],[28,A.VITAL_THROW],[35,A.CRUNCH],[40,A.BODY_SLAM],[46,A.PARTING_SHOT],[52,A.ENTRAINMENT],[58,A.HAMMER_ARM]],[e.FURFROU]:[[1,A.TACKLE],[1,A.GROWL],[5,A.SAND_ATTACK],[9,A.BABY_DOLL_EYES],[12,A.HEADBUTT],[15,A.TAIL_WHIP],[22,A.BITE],[27,A.ODOR_SLEUTH],[33,A.RETALIATE],[35,A.TAKE_DOWN],[38,A.CHARM],[42,A.SUCKER_PUNCH],[48,A.COTTON_GUARD]],[e.ESPURR]:[[1,A.SCRATCH],[1,A.LEER],[3,A.FAKE_OUT],[6,A.DISARMING_VOICE],[9,A.CONFUSION],[18,A.COVET],[21,A.PSYBEAM],[30,A.LIGHT_SCREEN],[30,A.REFLECT],[33,A.PSYSHOCK]],[e.MEOWSTIC]:[[1,A.SCRATCH],[1,A.LEER],[1,A.MEAN_LOOK],[1,A.FAKE_OUT],[1,A.DISARMING_VOICE],[9,A.CONFUSION],[12,A.HELPING_HAND],[15,A.CHARM],[18,A.COVET],[21,A.PSYBEAM],[24,A.SUCKER_PUNCH],[29,A.ROLE_PLAY],[34,A.LIGHT_SCREEN],[34,A.REFLECT],[39,A.PSYSHOCK],[44,A.IMPRISON],[49,A.QUICK_GUARD],[54,A.PSYCHIC],[59,A.MISTY_TERRAIN]],[e.HONEDGE]:[[1,A.TACKLE],[1,A.FURY_CUTTER],[4,A.SHADOW_SNEAK],[8,A.AUTOTOMIZE],[12,A.AERIAL_ACE],[16,A.METAL_SOUND],[20,A.SLASH],[24,A.NIGHT_SLASH],[28,A.RETALIATE],[32,A.IRON_DEFENSE],[36,A.IRON_HEAD],[40,A.POWER_TRICK],[44,A.SWORDS_DANCE],[48,A.SACRED_SWORD]],[e.DOUBLADE]:[[1,A.TACKLE],[1,A.FURY_CUTTER],[1,A.SHADOW_SNEAK],[1,A.AUTOTOMIZE],[12,A.AERIAL_ACE],[16,A.METAL_SOUND],[20,A.SLASH],[24,A.NIGHT_SLASH],[28,A.RETALIATE],[32,A.IRON_DEFENSE],[38,A.IRON_HEAD],[44,A.POWER_TRICK],[50,A.SWORDS_DANCE],[56,A.SACRED_SWORD]],[e.AEGISLASH]:[[k,A.KINGS_SHIELD],[1,A.SWORDS_DANCE],[1,A.PURSUIT],[1,A.TACKLE],[1,A.SLASH],[1,A.FURY_CUTTER],[1,A.METAL_SOUND],[1,A.AERIAL_ACE],[1,A.IRON_DEFENSE],[1,A.POWER_TRICK],[1,A.NIGHT_SLASH],[1,A.SHADOW_SNEAK],[1,A.IRON_HEAD],[1,A.HEAD_SMASH],[1,A.AUTOTOMIZE],[1,A.RETALIATE],[1,A.SACRED_SWORD]],[e.SPRITZEE]:[[1,A.SWEET_SCENT],[1,A.FAIRY_WIND],[3,A.SWEET_KISS],[6,A.ECHOED_VOICE],[9,A.DRAINING_KISS],[12,A.AROMATHERAPY],[18,A.ATTRACT],[21,A.FLAIL],[24,A.MISTY_TERRAIN],[27,A.PSYCHIC],[30,A.CHARM],[33,A.CALM_MIND],[36,A.MOONBLAST],[39,A.SKILL_SWAP]],[e.AROMATISSE]:[[1,A.SWEET_KISS],[1,A.SWEET_SCENT],[1,A.ECHOED_VOICE],[1,A.HEAL_PULSE],[1,A.FAIRY_WIND],[1,A.AROMATIC_MIST],[9,A.DISARMING_VOICE],[12,A.AROMATHERAPY],[15,A.DRAINING_KISS],[18,A.ATTRACT],[21,A.FLAIL],[24,A.MISTY_TERRAIN],[27,A.PSYCHIC],[30,A.CHARM],[33,A.CALM_MIND],[36,A.MOONBLAST],[39,A.SKILL_SWAP],[42,A.PSYCH_UP]],[e.SWIRLIX]:[[1,A.TACKLE],[1,A.SWEET_SCENT],[3,A.PLAY_NICE],[6,A.FAIRY_WIND],[9,A.AROMATHERAPY],[12,A.DRAINING_KISS],[15,A.FAKE_TEARS],[18,A.ROUND],[21,A.STRING_SHOT],[24,A.COTTON_SPORE],[27,A.ENERGY_BALL],[30,A.WISH],[33,A.PLAY_ROUGH],[36,A.COTTON_GUARD],[39,A.ENDEAVOR]],[e.SLURPUFF]:[[1,A.TACKLE],[1,A.SWEET_SCENT],[1,A.FAIRY_WIND],[1,A.PLAY_NICE],[9,A.AROMATHERAPY],[12,A.DRAINING_KISS],[15,A.FAKE_TEARS],[18,A.ROUND],[21,A.STRING_SHOT],[24,A.COTTON_SPORE],[27,A.ENERGY_BALL],[30,A.WISH],[33,A.PLAY_ROUGH],[36,A.COTTON_GUARD],[39,A.ENDEAVOR],[42,A.STICKY_WEB]],[e.INKAY]:[[1,A.TACKLE],[1,A.PECK],[1,A.CONSTRICT],[3,A.HYPNOSIS],[6,A.WRAP],[9,A.PAYBACK],[12,A.PLUCK],[15,A.PSYBEAM],[18,A.SWAGGER],[21,A.SLASH],[24,A.NIGHT_SLASH],[27,A.PSYCHO_CUT],[31,A.SWITCHEROO],[33,A.FOUL_PLAY],[36,A.TOPSY_TURVY],[39,A.SUPERPOWER]],[e.MALAMAR]:[[1,A.TACKLE],[1,A.WRAP],[1,A.PECK],[1,A.CONSTRICT],[1,A.HYPNOSIS],[1,A.REVERSAL],[9,A.PAYBACK],[12,A.PLUCK],[15,A.PSYBEAM],[18,A.SWAGGER],[21,A.SLASH],[24,A.NIGHT_SLASH],[27,A.PSYCHO_CUT],[33,A.SWITCHEROO],[37,A.FOUL_PLAY],[42,A.TOPSY_TURVY],[47,A.SUPERPOWER]],[e.BINACLE]:[[1,A.SCRATCH],[1,A.MUD_SLAP],[4,A.WITHDRAW],[8,A.WATER_GUN],[12,A.FURY_CUTTER],[16,A.FURY_SWIPES],[20,A.ANCIENT_POWER],[24,A.ROCK_POLISH],[28,A.SLASH],[32,A.HONE_CLAWS],[36,A.RAZOR_SHELL],[40,A.SHELL_SMASH],[44,A.CROSS_CHOP]],[e.BARBARACLE]:[[1,A.SCRATCH],[1,A.WATER_GUN],[1,A.WITHDRAW],[1,A.SKULL_BASH],[1,A.MUD_SLAP],[12,A.FURY_CUTTER],[16,A.FURY_SWIPES],[20,A.ANCIENT_POWER],[24,A.ROCK_POLISH],[28,A.SLASH],[32,A.HONE_CLAWS],[36,A.RAZOR_SHELL],[42,A.SHELL_SMASH],[48,A.CROSS_CHOP],[54,A.STONE_EDGE]],[e.SKRELP]:[[1,A.TACKLE],[1,A.SMOKESCREEN],[5,A.ACID],[10,A.WATER_GUN],[15,A.TAIL_WHIP],[20,A.DOUBLE_TEAM],[25,A.POISON_TAIL],[30,A.WATER_PULSE],[35,A.TOXIC],[40,A.DRAGON_PULSE],[45,A.AQUA_TAIL],[50,A.SLUDGE_BOMB],[55,A.HYDRO_PUMP]],[e.DRAGALGE]:[[1,A.TACKLE],[1,A.ACID],[1,A.WATER_GUN],[1,A.SMOKESCREEN],[1,A.FEINT_ATTACK],[15,A.TAIL_WHIP],[20,A.DOUBLE_TEAM],[25,A.POISON_TAIL],[30,A.WATER_PULSE],[35,A.TOXIC],[40,A.DRAGON_PULSE],[45,A.AQUA_TAIL],[52,A.SLUDGE_BOMB],[59,A.HYDRO_PUMP],[66,A.OUTRAGE]],[e.CLAUNCHER]:[[1,A.WATER_GUN],[1,A.SPLASH],[10,A.FLAIL],[15,A.AQUA_JET],[20,A.SMACK_DOWN],[25,A.HONE_CLAWS],[30,A.WATER_PULSE],[35,A.SWORDS_DANCE],[40,A.AURA_SPHERE],[45,A.BOUNCE],[50,A.MUDDY_WATER],[55,A.CRABHAMMER]],[e.CLAWITZER]:[[1,A.WATER_GUN],[1,A.SPLASH],[1,A.FLAIL],[1,A.DARK_PULSE],[1,A.DRAGON_PULSE],[1,A.HEAL_PULSE],[15,A.AQUA_JET],[20,A.SMACK_DOWN],[25,A.HONE_CLAWS],[30,A.WATER_PULSE],[35,A.SWORDS_DANCE],[42,A.AURA_SPHERE],[49,A.BOUNCE],[56,A.MUDDY_WATER],[63,A.CRABHAMMER]],[e.HELIOPTILE]:[[1,A.TAIL_WHIP],[1,A.MUD_SLAP],[4,A.POUND],[8,A.THUNDER_SHOCK],[12,A.QUICK_ATTACK],[16,A.CHARGE],[20,A.BULLDOZE],[24,A.VOLT_SWITCH],[28,A.PARABOLIC_CHARGE],[32,A.THUNDER_WAVE],[36,A.THUNDERBOLT],[40,A.ELECTRIFY],[44,A.THUNDER]],[e.HELIOLISK]:[[1,A.POUND],[1,A.TAIL_WHIP],[1,A.RAZOR_WIND],[1,A.THUNDER_SHOCK],[1,A.THUNDERBOLT],[1,A.THUNDER_WAVE],[1,A.THUNDER],[1,A.QUICK_ATTACK],[1,A.MUD_SLAP],[1,A.CHARGE],[1,A.DISCHARGE],[1,A.VOLT_SWITCH],[1,A.BULLDOZE],[1,A.PARABOLIC_CHARGE],[1,A.ELECTRIFY],[1,A.EERIE_IMPULSE]],[e.TYRUNT]:[[1,A.TACKLE],[1,A.TAIL_WHIP],[4,A.ROAR],[8,A.ANCIENT_POWER],[12,A.CHARM],[16,A.BITE],[20,A.DRAGON_TAIL],[24,A.STOMP],[28,A.ROCK_SLIDE],[32,A.CRUNCH],[36,A.DRAGON_CLAW],[40,A.THRASH],[44,A.EARTHQUAKE],[48,A.HORN_DRILL]],[e.TYRANTRUM]:[[1,A.TACKLE],[1,A.TAIL_WHIP],[1,A.ROAR],[1,A.ANCIENT_POWER],[12,A.CHARM],[16,A.BITE],[20,A.DRAGON_TAIL],[24,A.STOMP],[28,A.ROCK_SLIDE],[32,A.CRUNCH],[36,A.DRAGON_CLAW],[42,A.THRASH],[48,A.EARTHQUAKE],[54,A.HORN_DRILL],[60,A.GIGA_IMPACT],[66,A.HEAD_SMASH]],[e.AMAURA]:[[1,A.GROWL],[1,A.POWDER_SNOW],[4,A.ENCORE],[8,A.ANCIENT_POWER],[12,A.ICY_WIND],[16,A.ROUND],[20,A.MIST],[24,A.AURORA_BEAM],[28,A.THUNDER_WAVE],[32,A.NATURE_POWER],[36,A.FREEZE_DRY],[40,A.ICE_BEAM],[44,A.LIGHT_SCREEN],[48,A.HAIL],[52,A.BLIZZARD],[56,A.HYPER_BEAM]],[e.AURORUS]:[[1,A.GROWL],[1,A.POWDER_SNOW],[1,A.ENCORE],[1,A.ANCIENT_POWER],[12,A.ICY_WIND],[16,A.ROUND],[20,A.MIST],[24,A.AURORA_BEAM],[28,A.THUNDER_WAVE],[32,A.NATURE_POWER],[36,A.FREEZE_DRY],[42,A.ICE_BEAM],[48,A.LIGHT_SCREEN],[54,A.HAIL],[60,A.BLIZZARD],[66,A.HYPER_BEAM]],[e.SYLVEON]:[[k,A.SPARKLY_SWIRL],[V,A.VEEVEE_VOLLEY],[1,A.TACKLE],[1,A.TAKE_DOWN],[1,A.DOUBLE_EDGE],[1,A.TAIL_WHIP],[1,A.BITE],[1,A.GROWL],[1,A.CHARM],[1,A.BATON_PASS],[1,A.HELPING_HAND],[1,A.COVET],[1,A.COPYCAT],[5,A.SAND_ATTACK],[10,A.DISARMING_VOICE],[15,A.QUICK_ATTACK],[20,A.BABY_DOLL_EYES],[25,A.SWIFT],[30,A.LIGHT_SCREEN],[35,A.DRAINING_KISS],[40,A.MISTY_TERRAIN],[45,A.SKILL_SWAP],[50,A.PSYCH_UP],[55,A.MOONBLAST],[60,A.LAST_RESORT]],[e.HAWLUCHA]:[[1,A.TACKLE],[1,A.HONE_CLAWS],[4,A.WING_ATTACK],[8,A.DETECT],[12,A.AERIAL_ACE],[16,A.ENCORE],[20,A.FEATHER_DANCE],[24,A.BRICK_BREAK],[28,A.BOUNCE],[32,A.TAUNT],[36,A.ROOST],[40,A.SWORDS_DANCE],[44,A.FLYING_PRESS],[48,A.HIGH_JUMP_KICK],[52,A.ENDEAVOR],[56,A.SKY_ATTACK]],[e.DEDENNE]:[[1,A.TAIL_WHIP],[1,A.NUZZLE],[5,A.TACKLE],[10,A.CHARGE],[15,A.THUNDER_SHOCK],[20,A.CHARM],[25,A.PARABOLIC_CHARGE],[30,A.VOLT_SWITCH],[35,A.REST],[35,A.SNORE],[40,A.DISCHARGE],[45,A.PLAY_ROUGH],[50,A.SUPER_FANG],[55,A.ENTRAINMENT],[60,A.THUNDER]],[e.CARBINK]:[[1,A.TACKLE],[1,A.HARDEN],[5,A.GUARD_SPLIT],[10,A.SMACK_DOWN],[15,A.FLAIL],[20,A.ANCIENT_POWER],[25,A.ROCK_POLISH],[30,A.LIGHT_SCREEN],[35,A.ROCK_SLIDE],[40,A.SKILL_SWAP],[45,A.POWER_GEM],[50,A.STEALTH_ROCK],[55,A.MOONBLAST],[60,A.STONE_EDGE]],[e.GOOMY]:[[1,A.TACKLE],[1,A.ABSORB],[5,A.WATER_GUN],[10,A.DRAGON_BREATH],[15,A.PROTECT],[20,A.FLAIL],[25,A.WATER_PULSE],[30,A.RAIN_DANCE],[35,A.DRAGON_PULSE],[41,A.CURSE],[45,A.BODY_SLAM],[50,A.MUDDY_WATER]],[e.SLIGGOO]:[[k,A.ACID_SPRAY],[1,A.TACKLE],[1,A.WATER_GUN],[1,A.ABSORB],[1,A.ACID_ARMOR],[1,A.DRAGON_BREATH],[15,A.PROTECT],[20,A.FLAIL],[25,A.WATER_PULSE],[30,A.RAIN_DANCE],[35,A.DRAGON_PULSE],[43,A.CURSE],[49,A.BODY_SLAM],[56,A.MUDDY_WATER]],[e.GOODRA]:[[k,A.AQUA_TAIL],[1,A.TACKLE],[1,A.WATER_GUN],[1,A.ABSORB],[1,A.ACID_ARMOR],[1,A.DRAGON_BREATH],[1,A.POISON_TAIL],[1,A.FEINT],[1,A.ACID_SPRAY],[1,A.TEARFUL_LOOK],[15,A.PROTECT],[20,A.FLAIL],[25,A.WATER_PULSE],[30,A.RAIN_DANCE],[35,A.DRAGON_PULSE],[43,A.CURSE],[49,A.BODY_SLAM],[58,A.MUDDY_WATER],[67,A.POWER_WHIP]],[e.KLEFKI]:[[1,A.ASTONISH],[4,A.TACKLE],[8,A.FAIRY_WIND],[12,A.TORMENT],[16,A.FAIRY_LOCK],[20,A.METAL_SOUND],[24,A.DRAINING_KISS],[28,A.RECYCLE],[32,A.IMPRISON],[36,A.FLASH_CANNON],[40,A.PLAY_ROUGH],[44,A.MAGIC_ROOM],[48,A.FOUL_PLAY],[50,A.HEAL_BLOCK],[52,A.LAST_RESORT]],[e.PHANTUMP]:[[1,A.TACKLE],[1,A.ASTONISH],[4,A.BRANCH_POKE],[8,A.LEECH_SEED],[12,A.CONFUSE_RAY],[16,A.WILL_O_WISP],[20,A.HEX],[24,A.GROWTH],[28,A.HORN_LEECH],[32,A.CURSE],[36,A.PHANTOM_FORCE],[40,A.INGRAIN],[44,A.WOOD_HAMMER],[48,A.DESTINY_BOND],[52,A.FORESTS_CURSE]],[e.TREVENANT]:[[k,A.SHADOW_CLAW],[1,A.TACKLE],[1,A.LEECH_SEED],[1,A.ASTONISH],[1,A.BRANCH_POKE],[12,A.CONFUSE_RAY],[16,A.WILL_O_WISP],[20,A.HEX],[24,A.GROWTH],[28,A.HORN_LEECH],[32,A.CURSE],[36,A.PHANTOM_FORCE],[40,A.INGRAIN],[44,A.WOOD_HAMMER],[48,A.DESTINY_BOND],[52,A.FORESTS_CURSE]],[e.PUMPKABOO]:[[1,A.ASTONISH],[1,A.TRICK_OR_TREAT],[1,A.LEAFAGE],[4,A.SHADOW_SNEAK],[8,A.CONFUSE_RAY],[12,A.RAZOR_LEAF],[16,A.LEECH_SEED],[20,A.BULLET_SEED],[24,A.SCARY_FACE],[28,A.WORRY_SEED],[32,A.SEED_BOMB],[36,A.SHADOW_BALL],[40,A.TRICK],[44,A.PAIN_SPLIT]],[e.GOURGEIST]:[[1,A.CONFUSE_RAY],[1,A.EXPLOSION],[1,A.ASTONISH],[1,A.LEAFAGE],[1,A.SHADOW_SNEAK],[1,A.TRICK_OR_TREAT],[1,A.MOONBLAST],[12,A.RAZOR_LEAF],[16,A.LEECH_SEED],[20,A.BULLET_SEED],[24,A.SCARY_FACE],[28,A.WORRY_SEED],[32,A.SEED_BOMB],[36,A.SHADOW_BALL],[40,A.TRICK],[44,A.PAIN_SPLIT],[48,A.PHANTOM_FORCE]],[e.BERGMITE]:[[1,A.HARDEN],[1,A.RAPID_SPIN],[3,A.TACKLE],[6,A.POWDER_SNOW],[9,A.CURSE],[12,A.ICY_WIND],[15,A.PROTECT],[18,A.AVALANCHE],[21,A.BITE],[24,A.ICE_FANG],[27,A.IRON_DEFENSE],[30,A.RECOVER],[33,A.CRUNCH],[36,A.TAKE_DOWN],[39,A.BLIZZARD],[42,A.DOUBLE_EDGE]],[e.AVALUGG]:[[k,A.BODY_SLAM],[1,A.TACKLE],[1,A.HARDEN],[1,A.POWDER_SNOW],[1,A.RAPID_SPIN],[1,A.WIDE_GUARD],[9,A.CURSE],[12,A.ICY_WIND],[15,A.PROTECT],[18,A.AVALANCHE],[21,A.BITE],[24,A.ICE_FANG],[27,A.IRON_DEFENSE],[30,A.RECOVER],[33,A.CRUNCH],[36,A.TAKE_DOWN],[41,A.BLIZZARD],[46,A.DOUBLE_EDGE],[51,A.ICICLE_CRASH]],[e.NOIBAT]:[[1,A.TACKLE],[1,A.ABSORB],[4,A.GUST],[8,A.SUPERSONIC],[12,A.DOUBLE_TEAM],[16,A.WING_ATTACK],[20,A.BITE],[24,A.AIR_CUTTER],[28,A.WHIRLWIND],[32,A.SUPER_FANG],[36,A.AIR_SLASH],[40,A.SCREECH],[44,A.ROOST],[49,A.TAILWIND],[52,A.HURRICANE]],[e.NOIVERN]:[[k,A.DRAGON_PULSE],[1,A.GUST],[1,A.TACKLE],[1,A.SUPERSONIC],[1,A.ABSORB],[1,A.MOONLIGHT],[12,A.DOUBLE_TEAM],[16,A.WING_ATTACK],[20,A.BITE],[24,A.AIR_CUTTER],[28,A.WHIRLWIND],[32,A.SUPER_FANG],[36,A.AIR_SLASH],[40,A.SCREECH],[44,A.ROOST],[51,A.TAILWIND],[56,A.HURRICANE],[62,A.BOOMBURST]],[e.XERNEAS]:[[1,A.TACKLE],[1,A.GRAVITY],[5,A.LIGHT_SCREEN],[10,A.AURORA_BEAM],[15,A.NATURE_POWER],[20,A.NIGHT_SLASH],[25,A.AROMATHERAPY],[30,A.PSYCH_UP],[35,A.HORN_LEECH],[40,A.MISTY_TERRAIN],[45,A.INGRAIN],[50,A.TAKE_DOWN],[55,A.GEOMANCY],[60,A.MOONBLAST],[65,A.HEAL_PULSE],[70,A.MEGAHORN],[75,A.CLOSE_COMBAT],[80,A.OUTRAGE],[85,A.GIGA_IMPACT]],[e.YVELTAL]:[[1,A.GUST],[1,A.DOUBLE_TEAM],[1,A.RAZOR_WIND],[5,A.TAUNT],[10,A.SNARL],[15,A.DISABLE],[20,A.SUCKER_PUNCH],[25,A.TAILWIND],[30,A.ROOST],[35,A.AIR_SLASH],[40,A.DARK_PULSE],[45,A.PSYCHIC],[50,A.OBLIVION_WING],[55,A.PHANTOM_FORCE],[60,A.FOUL_PLAY],[65,A.DRAGON_RUSH],[70,A.HURRICANE],[75,A.FOCUS_BLAST],[80,A.SKY_ATTACK],[85,A.HYPER_BEAM]],[e.ZYGARDE]:[[1,A.BIND],[1,A.BITE],[1,A.DRAGON_BREATH],[1,A.BULLDOZE],[1,A.THOUSAND_ARROWS],[1,A.THOUSAND_WAVES],[1,A.CORE_ENFORCER],[8,A.HAZE],[16,A.DIG],[24,A.SAFEGUARD],[32,A.CRUNCH],[40,A.DRAGON_PULSE],[48,A.LANDS_WRATH],[56,A.GLARE],[64,A.SANDSTORM],[72,A.COIL],[80,A.EARTHQUAKE],[88,A.OUTRAGE]],[e.DIANCIE]:[[1,A.TACKLE],[1,A.HARDEN],[1,A.DIAMOND_STORM],[7,A.GUARD_SPLIT],[14,A.SMACK_DOWN],[21,A.FLAIL],[28,A.ANCIENT_POWER],[35,A.ROCK_POLISH],[42,A.LIGHT_SCREEN],[49,A.ROCK_SLIDE],[56,A.SKILL_SWAP],[63,A.POWER_GEM],[70,A.STEALTH_ROCK],[77,A.MOONBLAST],[84,A.STONE_EDGE]],[e.HOOPA]:[[1,A.CONFUSION],[1,A.DESTINY_BOND],[1,A.ALLY_SWITCH],[6,A.ASTONISH],[10,A.TRICK],[15,A.LIGHT_SCREEN],[19,A.PSYBEAM],[25,A.SKILL_SWAP],[29,A.GUARD_SPLIT],[29,A.POWER_SPLIT],[35,A.PHANTOM_FORCE],[46,A.ZEN_HEADBUTT],[50,A.TRICK_ROOM],[50,A.WONDER_ROOM],[55,A.SHADOW_BALL],[68,A.NASTY_PLOT],[75,A.PSYCHIC],[85,A.HYPERSPACE_HOLE]],[e.VOLCANION]:[[1,A.WATER_GUN],[1,A.FIRE_SPIN],[1,A.STEAM_ERUPTION],[6,A.LEER],[12,A.WEATHER_BALL],[18,A.FLAME_CHARGE],[24,A.WATER_PULSE],[30,A.SCARY_FACE],[36,A.INCINERATE],[42,A.STOMP],[48,A.SCALD],[54,A.TAKE_DOWN],[60,A.MIST],[60,A.HAZE],[66,A.HYDRO_PUMP],[78,A.FLARE_BLITZ],[84,A.OVERHEAT],[90,A.EXPLOSION]],[e.ROWLET]:[[1,A.TACKLE],[1,A.GROWL],[3,A.LEAFAGE],[6,A.ASTONISH],[9,A.PECK],[12,A.SHADOW_SNEAK],[15,A.RAZOR_LEAF],[18,A.SYNTHESIS],[21,A.PLUCK],[24,A.NASTY_PLOT],[27,A.SUCKER_PUNCH],[30,A.LEAF_BLADE],[33,A.FEATHER_DANCE],[36,A.BRAVE_BIRD]],[e.DARTRIX]:[[1,A.TACKLE],[1,A.GROWL],[1,A.ASTONISH],[1,A.LEAFAGE],[9,A.PECK],[12,A.SHADOW_SNEAK],[15,A.RAZOR_LEAF],[20,A.SYNTHESIS],[25,A.PLUCK],[30,A.NASTY_PLOT],[35,A.SUCKER_PUNCH],[40,A.LEAF_BLADE],[45,A.FEATHER_DANCE],[50,A.BRAVE_BIRD]],[e.DECIDUEYE]:[[k,A.SPIRIT_SHACKLE],[1,A.TACKLE],[1,A.GROWL],[1,A.SPITE],[1,A.ASTONISH],[1,A.U_TURN],[1,A.LEAF_STORM],[1,A.PHANTOM_FORCE],[1,A.LEAFAGE],[9,A.PECK],[12,A.SHADOW_SNEAK],[15,A.RAZOR_LEAF],[20,A.SYNTHESIS],[25,A.PLUCK],[30,A.NASTY_PLOT],[37,A.SUCKER_PUNCH],[44,A.LEAF_BLADE],[51,A.FEATHER_DANCE],[58,A.BRAVE_BIRD]],[e.LITTEN]:[[1,A.SCRATCH],[1,A.GROWL],[3,A.EMBER],[6,A.LICK],[9,A.ROAR],[12,A.FURY_SWIPES],[15,A.BITE],[18,A.DOUBLE_KICK],[21,A.FIRE_FANG],[24,A.SCARY_FACE],[27,A.SWAGGER],[30,A.FLAMETHROWER],[33,A.THRASH],[36,A.FLARE_BLITZ]],[e.TORRACAT]:[[1,A.SCRATCH],[1,A.GROWL],[1,A.EMBER],[1,A.LICK],[9,A.ROAR],[12,A.FURY_SWIPES],[15,A.BITE],[20,A.DOUBLE_KICK],[25,A.FIRE_FANG],[30,A.SCARY_FACE],[35,A.SWAGGER],[40,A.FLAMETHROWER],[45,A.THRASH],[50,A.FLARE_BLITZ]],[e.INCINEROAR]:[[k,A.DARKEST_LARIAT],[V,A.SCRATCH],[V,A.GROWL],[V,A.THROAT_CHOP],[1,A.EMBER],[1,A.LICK],[1,A.CROSS_CHOP],[1,A.BULK_UP],[9,A.ROAR],[12,A.FURY_SWIPES],[15,A.BITE],[20,A.DOUBLE_KICK],[25,A.FIRE_FANG],[30,A.SCARY_FACE],[32,A.SWAGGER],[44,A.FLAMETHROWER],[51,A.THRASH],[58,A.FLARE_BLITZ]],[e.POPPLIO]:[[1,A.POUND],[1,A.GROWL],[3,A.WATER_GUN],[6,A.DISARMING_VOICE],[9,A.AQUA_JET],[12,A.BABY_DOLL_EYES],[15,A.ICY_WIND],[18,A.SING],[21,A.BUBBLE_BEAM],[24,A.ENCORE],[27,A.MISTY_TERRAIN],[30,A.HYPER_VOICE],[33,A.MOONBLAST],[36,A.HYDRO_PUMP]],[e.BRIONNE]:[[1,A.POUND],[1,A.GROWL],[1,A.WATER_GUN],[1,A.DISARMING_VOICE],[9,A.AQUA_JET],[12,A.BABY_DOLL_EYES],[15,A.ICY_WIND],[20,A.SING],[25,A.BUBBLE_BEAM],[30,A.ENCORE],[35,A.MISTY_TERRAIN],[40,A.HYPER_VOICE],[45,A.MOONBLAST],[50,A.HYDRO_PUMP]],[e.PRIMARINA]:[[k,A.SPARKLING_ARIA],[1,A.POUND],[1,A.GROWL],[1,A.WATER_GUN],[1,A.DISARMING_VOICE],[9,A.AQUA_JET],[12,A.BABY_DOLL_EYES],[15,A.ICY_WIND],[20,A.SING],[25,A.BUBBLE_BEAM],[30,A.ENCORE],[37,A.MISTY_TERRAIN],[44,A.HYPER_VOICE],[51,A.MOONBLAST],[58,A.HYDRO_PUMP]],[e.PIKIPEK]:[[1,A.PECK],[3,A.GROWL],[7,A.ECHOED_VOICE],[9,A.ROCK_SMASH],[13,A.SUPERSONIC],[15,A.PLUCK],[19,A.ROOST],[21,A.FURY_ATTACK],[25,A.SCREECH],[27,A.DRILL_PECK],[31,A.BULLET_SEED],[33,A.FEATHER_DANCE],[37,A.HYPER_VOICE]],[e.TRUMBEAK]:[[V,A.ECHOED_VOICE],[1,A.GROWL],[1,A.PECK],[1,A.ROCK_SMASH],[1,A.ROCK_BLAST],[13,A.SUPERSONIC],[16,A.PLUCK],[21,A.ROOST],[24,A.FURY_ATTACK],[29,A.SCREECH],[32,A.DRILL_PECK],[37,A.BULLET_SEED],[40,A.FEATHER_DANCE],[45,A.HYPER_VOICE]],[e.TOUCANNON]:[[k,A.BEAK_BLAST],[1,A.GROWL],[1,A.PECK],[1,A.ROCK_SMASH],[1,A.ROCK_BLAST],[1,A.ECHOED_VOICE],[13,A.SUPERSONIC],[16,A.PLUCK],[21,A.ROOST],[24,A.FURY_ATTACK],[30,A.SCREECH],[34,A.DRILL_PECK],[40,A.BULLET_SEED],[44,A.FEATHER_DANCE],[50,A.HYPER_VOICE]],[e.YUNGOOS]:[[1,A.TACKLE],[3,A.LEER],[7,A.PAYBACK],[10,A.SAND_ATTACK],[13,A.WORK_UP],[19,A.BITE],[22,A.MUD_SLAP],[25,A.SUPER_FANG],[28,A.TAKE_DOWN],[31,A.SCARY_FACE],[34,A.CRUNCH],[37,A.YAWN],[40,A.THRASH],[43,A.REST]],[e.GUMSHOOS]:[[1,A.SAND_ATTACK],[1,A.TACKLE],[1,A.LEER],[1,A.PAYBACK],[1,A.PURSUIT],[13,A.WORK_UP],[19,A.BITE],[23,A.MUD_SLAP],[27,A.SUPER_FANG],[31,A.TAKE_DOWN],[35,A.SCARY_FACE],[39,A.CRUNCH],[43,A.YAWN],[47,A.THRASH],[52,A.REST]],[e.GRUBBIN]:[[1,A.VISE_GRIP],[1,A.MUD_SLAP],[5,A.STRING_SHOT],[10,A.BUG_BITE],[15,A.BITE],[21,A.SPARK],[25,A.STICKY_WEB],[30,A.X_SCISSOR],[35,A.CRUNCH],[40,A.DIG]],[e.CHARJABUG]:[[k,A.CHARGE],[1,A.VISE_GRIP],[1,A.STRING_SHOT],[1,A.MUD_SLAP],[1,A.BUG_BITE],[15,A.BITE],[23,A.SPARK],[29,A.STICKY_WEB],[36,A.X_SCISSOR],[43,A.CRUNCH],[50,A.DIG],[57,A.IRON_DEFENSE],[64,A.DISCHARGE]],[e.VIKAVOLT]:[[k,A.THUNDERBOLT],[V,A.VISE_GRIP],[V,A.DIG],[V,A.MUD_SLAP],[V,A.IRON_DEFENSE],[V,A.X_SCISSOR],[V,A.BUG_BITE],[1,A.CHARGE],[1,A.CRUNCH],[1,A.DISCHARGE],[1,A.STRING_SHOT],[15,A.BITE],[23,A.SPARK],[29,A.STICKY_WEB],[36,A.BUG_BUZZ],[43,A.GUILLOTINE],[50,A.FLY],[57,A.AGILITY],[64,A.ZAP_CANNON]],[e.CRABRAWLER]:[[1,A.BUBBLE],[1,A.VISE_GRIP],[5,A.ROCK_SMASH],[9,A.LEER],[13,A.BUBBLE_BEAM],[17,A.PROTECT],[22,A.BRICK_BREAK],[25,A.SLAM],[29,A.PAYBACK],[33,A.REVERSAL],[37,A.CRABHAMMER],[42,A.IRON_DEFENSE],[45,A.DYNAMIC_PUNCH],[49,A.CLOSE_COMBAT]],[e.CRABOMINABLE]:[[k,A.ICE_PUNCH],[V,A.CRABHAMMER],[1,A.VISE_GRIP],[1,A.LEER],[1,A.PROTECT],[1,A.ROCK_SMASH],[1,A.BUBBLE],[1,A.PURSUIT],[1,A.PAYBACK],[17,A.BUBBLE_BEAM],[22,A.BRICK_BREAK],[25,A.SLAM],[29,A.AVALANCHE],[33,A.REVERSAL],[37,A.ICE_HAMMER],[42,A.IRON_DEFENSE],[45,A.DYNAMIC_PUNCH],[49,A.CLOSE_COMBAT]],[e.ORICORIO]:[[1,A.POUND],[4,A.GROWL],[6,A.PECK],[10,A.HELPING_HAND],[13,A.AIR_CUTTER],[16,A.BATON_PASS],[20,A.FEATHER_DANCE],[23,A.ACROBATICS],[26,A.TEETER_DANCE],[30,A.ROOST],[33,A.FLATTER],[36,A.AIR_SLASH],[40,A.REVELATION_DANCE],[43,A.AGILITY],[47,A.HURRICANE]],[e.CUTIEFLY]:[[1,A.ABSORB],[1,A.FAIRY_WIND],[6,A.STUN_SPORE],[12,A.SWEET_SCENT],[18,A.DRAINING_KISS],[24,A.STRUGGLE_BUG],[30,A.COVET],[36,A.SWITCHEROO],[42,A.DAZZLING_GLEAM],[48,A.BUG_BUZZ],[54,A.QUIVER_DANCE]],[e.RIBOMBEE]:[[k,A.POLLEN_PUFF],[1,A.ABSORB],[1,A.STUN_SPORE],[1,A.SWEET_SCENT],[1,A.FAIRY_WIND],[18,A.DRAINING_KISS],[24,A.STRUGGLE_BUG],[32,A.COVET],[40,A.SWITCHEROO],[48,A.DAZZLING_GLEAM],[56,A.BUG_BUZZ],[64,A.QUIVER_DANCE]],[e.ROCKRUFF]:[[1,A.TACKLE],[1,A.LEER],[4,A.SAND_ATTACK],[8,A.DOUBLE_TEAM],[12,A.ROCK_THROW],[16,A.HOWL],[20,A.BITE],[24,A.ROCK_TOMB],[28,A.ROAR],[32,A.ROCK_SLIDE],[36,A.CRUNCH],[40,A.SCARY_FACE],[44,A.STEALTH_ROCK],[48,A.STONE_EDGE]],[e.LYCANROC]:[[k,A.SUCKER_PUNCH],[1,A.SAND_ATTACK],[1,A.TACKLE],[1,A.LEER],[1,A.QUICK_ATTACK],[1,A.DOUBLE_TEAM],[1,A.QUICK_GUARD],[1,A.ACCELEROCK],[12,A.ROCK_THROW],[16,A.HOWL],[20,A.BITE],[24,A.ROCK_TOMB],[30,A.ROAR],[36,A.ROCK_SLIDE],[42,A.CRUNCH],[48,A.SCARY_FACE],[54,A.STEALTH_ROCK],[60,A.STONE_EDGE]],[e.WISHIWASHI]:[[1,A.GROWL],[1,A.WATER_GUN],[4,A.HELPING_HAND],[8,A.BEAT_UP],[12,A.BRINE],[16,A.TEARFUL_LOOK],[20,A.DIVE],[24,A.SOAK],[28,A.UPROAR],[32,A.AQUA_TAIL],[36,A.AQUA_RING],[40,A.ENDEAVOR],[44,A.HYDRO_PUMP],[48,A.DOUBLE_EDGE]],[e.MAREANIE]:[[1,A.POISON_STING],[1,A.PECK],[5,A.WIDE_GUARD],[10,A.BITE],[15,A.VENOSHOCK],[20,A.RECOVER],[25,A.PIN_MISSILE],[30,A.TOXIC_SPIKES],[35,A.LIQUIDATION],[40,A.ACID_SPRAY],[45,A.POISON_JAB],[50,A.TOXIC]],[e.TOXAPEX]:[[k,A.BANEFUL_BUNKER],[1,A.POISON_STING],[1,A.BITE],[1,A.PECK],[1,A.WIDE_GUARD],[15,A.VENOSHOCK],[20,A.RECOVER],[25,A.PIN_MISSILE],[30,A.TOXIC_SPIKES],[35,A.LIQUIDATION],[42,A.ACID_SPRAY],[49,A.POISON_JAB],[56,A.TOXIC]],[e.MUDBRAY]:[[1,A.MUD_SLAP],[1,A.ROCK_SMASH],[4,A.IRON_DEFENSE],[8,A.DOUBLE_KICK],[12,A.BULLDOZE],[16,A.STOMP],[20,A.STRENGTH],[24,A.COUNTER],[28,A.HIGH_HORSEPOWER],[32,A.HEAVY_SLAM],[36,A.EARTHQUAKE],[40,A.MEGA_KICK],[44,A.SUPERPOWER]],[e.MUDSDALE]:[[1,A.DOUBLE_KICK],[1,A.MUD_SLAP],[1,A.ROCK_SMASH],[1,A.IRON_DEFENSE],[12,A.BULLDOZE],[16,A.STOMP],[20,A.STRENGTH],[24,A.COUNTER],[28,A.HIGH_HORSEPOWER],[34,A.HEAVY_SLAM],[40,A.EARTHQUAKE],[46,A.MEGA_KICK],[52,A.SUPERPOWER]],[e.DEWPIDER]:[[1,A.WATER_GUN],[1,A.INFESTATION],[1,A.WATER_SPORT],[4,A.BUG_BITE],[8,A.BITE],[12,A.BUBBLE_BEAM],[16,A.AQUA_RING],[20,A.HEADBUTT],[24,A.CRUNCH],[28,A.SOAK],[32,A.ENTRAINMENT],[36,A.LUNGE],[40,A.LIQUIDATION],[44,A.LEECH_LIFE],[48,A.MIRROR_COAT]],[e.ARAQUANID]:[[1,A.BITE],[1,A.WATER_GUN],[1,A.BUG_BITE],[1,A.WIDE_GUARD],[1,A.INFESTATION],[1,A.WATER_SPORT],[1,A.SPIDER_WEB],[12,A.BUBBLE_BEAM],[16,A.AQUA_RING],[20,A.HEADBUTT],[26,A.CRUNCH],[32,A.SOAK],[38,A.ENTRAINMENT],[44,A.LUNGE],[50,A.LIQUIDATION],[56,A.LEECH_LIFE],[62,A.MIRROR_COAT]],[e.FOMANTIS]:[[1,A.FURY_CUTTER],[1,A.LEAFAGE],[5,A.GROWTH],[10,A.INGRAIN],[15,A.RAZOR_LEAF],[20,A.SWEET_SCENT],[25,A.SLASH],[30,A.X_SCISSOR],[35,A.SYNTHESIS],[40,A.LEAF_BLADE],[45,A.SUNNY_DAY],[50,A.SOLAR_BEAM]],[e.LURANTIS]:[[k,A.PETAL_BLIZZARD],[1,A.GROWTH],[1,A.SOLAR_BEAM],[1,A.FURY_CUTTER],[1,A.INGRAIN],[1,A.NIGHT_SLASH],[1,A.LEAFAGE],[1,A.DUAL_CHOP],[15,A.RAZOR_LEAF],[20,A.SWEET_SCENT],[25,A.SLASH],[30,A.X_SCISSOR],[37,A.SYNTHESIS],[44,A.LEAF_BLADE],[51,A.SUNNY_DAY],[63,A.SOLAR_BLADE]],[e.MORELULL]:[[1,A.ABSORB],[1,A.ASTONISH],[4,A.CONFUSE_RAY],[8,A.INGRAIN],[12,A.MEGA_DRAIN],[16,A.SLEEP_POWDER],[20,A.MOONLIGHT],[25,A.STRENGTH_SAP],[28,A.GIGA_DRAIN],[32,A.DAZZLING_GLEAM],[36,A.SPORE],[40,A.MOONBLAST],[44,A.DREAM_EATER]],[e.SHIINOTIC]:[[1,A.ABSORB],[1,A.CONFUSE_RAY],[1,A.INGRAIN],[1,A.ASTONISH],[1,A.FLASH],[12,A.MEGA_DRAIN],[16,A.SLEEP_POWDER],[20,A.MOONLIGHT],[27,A.STRENGTH_SAP],[32,A.GIGA_DRAIN],[38,A.DAZZLING_GLEAM],[44,A.SPORE],[50,A.MOONBLAST],[56,A.DREAM_EATER]],[e.SALANDIT]:[[1,A.SCRATCH],[1,A.POISON_GAS],[5,A.SMOG],[10,A.EMBER],[15,A.POISON_FANG],[20,A.SWEET_SCENT],[25,A.NASTY_PLOT],[30,A.INCINERATE],[35,A.VENOSHOCK],[40,A.DRAGON_PULSE],[45,A.FLAMETHROWER],[50,A.TOXIC],[55,A.ENDEAVOR]],[e.SALAZZLE]:[[k,A.FIRE_LASH],[1,A.POUND],[1,A.SCRATCH],[1,A.DISABLE],[1,A.EMBER],[1,A.SMOG],[1,A.POISON_GAS],[1,A.SWAGGER],[1,A.ENCORE],[1,A.TORMENT],[1,A.KNOCK_OFF],[1,A.ENDEAVOR],[1,A.CAPTIVATE],[15,A.POISON_FANG],[20,A.SWEET_SCENT],[25,A.NASTY_PLOT],[30,A.INCINERATE],[37,A.VENOSHOCK],[44,A.DRAGON_PULSE],[51,A.FLAMETHROWER],[58,A.TOXIC]],[e.STUFFUL]:[[1,A.TACKLE],[1,A.LEER],[4,A.BABY_DOLL_EYES],[8,A.PAYBACK],[12,A.BRUTAL_SWING],[16,A.ENDURE],[20,A.STRENGTH],[24,A.TAKE_DOWN],[28,A.FLAIL],[32,A.HAMMER_ARM],[36,A.THRASH],[40,A.PAIN_SPLIT],[44,A.DOUBLE_EDGE],[48,A.SUPERPOWER]],[e.BEWEAR]:[[k,A.BIND],[1,A.TACKLE],[1,A.LEER],[1,A.PAYBACK],[1,A.BABY_DOLL_EYES],[12,A.BRUTAL_SWING],[16,A.ENDURE],[20,A.STRENGTH],[24,A.TAKE_DOWN],[30,A.FLAIL],[36,A.HAMMER_ARM],[42,A.THRASH],[48,A.PAIN_SPLIT],[54,A.DOUBLE_EDGE],[60,A.SUPERPOWER]],[e.BOUNSWEET]:[[1,A.SPLASH],[1,A.LEAFAGE],[4,A.PLAY_NICE],[8,A.RAPID_SPIN],[12,A.RAZOR_LEAF],[16,A.SWEET_SCENT],[20,A.MAGICAL_LEAF],[24,A.FLAIL],[28,A.TEETER_DANCE],[32,A.AROMATIC_MIST]],[e.STEENEE]:[[1,A.LEAFAGE],[1,A.RAZOR_LEAF],[1,A.SPLASH],[1,A.FLAIL],[1,A.RAPID_SPIN],[1,A.PLAY_NICE],[16,A.SWEET_SCENT],[22,A.MAGICAL_LEAF],[28,A.STOMP],[34,A.TEETER_DANCE],[40,A.AROMATIC_MIST],[46,A.LEAF_STORM]],[e.TSAREENA]:[[k,A.TROP_KICK],[1,A.LEAFAGE],[1,A.RAZOR_LEAF],[1,A.SPLASH],[1,A.FLAIL],[1,A.SWAGGER],[1,A.RAPID_SPIN],[1,A.POWER_WHIP],[1,A.PLAY_NICE],[1,A.PUNISHMENT],[16,A.SWEET_SCENT],[22,A.MAGICAL_LEAF],[28,A.STOMP],[34,A.TEETER_DANCE],[40,A.AROMATIC_MIST],[46,A.LEAF_STORM],[58,A.HIGH_JUMP_KICK]],[e.COMFEY]:[[1,A.WRAP],[1,A.GROWTH],[3,A.VINE_WHIP],[6,A.HELPING_HAND],[9,A.DRAINING_KISS],[12,A.FLOWER_SHIELD],[15,A.MAGICAL_LEAF],[18,A.SYNTHESIS],[21,A.LEECH_SEED],[24,A.GRASS_KNOT],[27,A.SWEET_KISS],[30,A.FLORAL_HEALING],[33,A.PETAL_BLIZZARD],[36,A.AROMATHERAPY],[39,A.PLAY_ROUGH],[42,A.SWEET_SCENT],[45,A.PETAL_DANCE],[48,A.GRASSY_TERRAIN]],[e.ORANGURU]:[[1,A.CONFUSION],[1,A.TAUNT],[5,A.AFTER_YOU],[10,A.CALM_MIND],[15,A.STORED_POWER],[20,A.PSYCH_UP],[25,A.QUASH],[30,A.NASTY_PLOT],[35,A.ZEN_HEADBUTT],[40,A.TRICK_ROOM],[45,A.PSYCHIC],[50,A.INSTRUCT],[55,A.FOUL_PLAY],[60,A.FUTURE_SIGHT]],[e.PASSIMIAN]:[[1,A.TACKLE],[1,A.LEER],[5,A.ROCK_SMASH],[10,A.FOCUS_ENERGY],[15,A.BEAT_UP],[20,A.SCARY_FACE],[25,A.TAKE_DOWN],[30,A.FLING],[35,A.BULK_UP],[40,A.THRASH],[45,A.DOUBLE_EDGE],[50,A.CLOSE_COMBAT],[55,A.REVERSAL],[60,A.GIGA_IMPACT]],[e.WIMPOD]:[[1,A.SAND_ATTACK],[1,A.DEFENSE_CURL],[1,A.STRUGGLE_BUG]],[e.GOLISOPOD]:[[k,A.FIRST_IMPRESSION],[1,A.SAND_ATTACK],[1,A.DEFENSE_CURL],[1,A.SPITE],[1,A.STRUGGLE_BUG],[4,A.ROCK_SMASH],[8,A.FURY_CUTTER],[12,A.MUD_SHOT],[16,A.BUG_BITE],[20,A.IRON_DEFENSE],[24,A.SUCKER_PUNCH],[28,A.SLASH],[32,A.RAZOR_SHELL],[36,A.PIN_MISSILE],[40,A.SWORDS_DANCE],[44,A.LIQUIDATION]],[e.SANDYGAST]:[[1,A.ABSORB],[1,A.HARDEN],[5,A.ASTONISH],[10,A.SAND_TOMB],[15,A.MEGA_DRAIN],[20,A.SAND_ATTACK],[25,A.BULLDOZE],[30,A.HYPNOSIS],[35,A.GIGA_DRAIN],[40,A.IRON_DEFENSE],[45,A.SHADOW_BALL],[50,A.EARTH_POWER],[55,A.SHORE_UP],[60,A.SANDSTORM]],[e.PALOSSAND]:[[1,A.ABSORB],[1,A.HARDEN],[1,A.ASTONISH],[1,A.SAND_TOMB],[15,A.MEGA_DRAIN],[20,A.SAND_ATTACK],[25,A.BULLDOZE],[30,A.HYPNOSIS],[35,A.GIGA_DRAIN],[40,A.IRON_DEFENSE],[47,A.SHADOW_BALL],[54,A.EARTH_POWER],[61,A.SHORE_UP],[68,A.SANDSTORM]],[e.PYUKUMUKU]:[[1,A.COUNTER],[1,A.HARDEN],[1,A.BATON_PASS],[1,A.BIDE],[1,A.MUD_SPORT],[1,A.WATER_SPORT],[5,A.HELPING_HAND],[10,A.TAUNT],[15,A.SAFEGUARD],[20,A.MIRROR_COAT],[25,A.PURIFY],[30,A.CURSE],[35,A.GASTRO_ACID],[40,A.PAIN_SPLIT],[45,A.RECOVER],[50,A.SOAK],[55,A.TOXIC],[60,A.MEMENTO]],[e.TYPE_NULL]:[[1,A.TACKLE],[1,A.IMPRISON],[5,A.AERIAL_ACE],[10,A.SCARY_FACE],[15,A.DOUBLE_HIT],[20,A.METAL_SOUND],[25,A.CRUSH_CLAW],[30,A.AIR_SLASH],[35,A.TRI_ATTACK],[40,A.X_SCISSOR],[45,A.IRON_HEAD],[50,A.TAKE_DOWN],[55,A.DOUBLE_EDGE],[60,A.HEAL_BLOCK]],[e.SILVALLY]:[[k,A.MULTI_ATTACK],[1,A.TACKLE],[1,A.BITE],[1,A.EXPLOSION],[1,A.SCARY_FACE],[1,A.IMPRISON],[1,A.POISON_FANG],[1,A.AERIAL_ACE],[1,A.THUNDER_FANG],[1,A.ICE_FANG],[1,A.FIRE_FANG],[1,A.IRON_HEAD],[1,A.HEAL_BLOCK],[15,A.DOUBLE_HIT],[20,A.METAL_SOUND],[25,A.CRUSH_CLAW],[30,A.AIR_SLASH],[35,A.TRI_ATTACK],[40,A.X_SCISSOR],[45,A.CRUNCH],[50,A.TAKE_DOWN],[55,A.DOUBLE_EDGE],[60,A.PARTING_SHOT]],[e.MINIOR]:[[1,A.TACKLE],[3,A.DEFENSE_CURL],[8,A.ROLLOUT],[10,A.CONFUSE_RAY],[15,A.SWIFT],[17,A.ANCIENT_POWER],[22,A.SELF_DESTRUCT],[24,A.STEALTH_ROCK],[29,A.TAKE_DOWN],[31,A.AUTOTOMIZE],[36,A.COSMIC_POWER],[38,A.POWER_GEM],[43,A.DOUBLE_EDGE],[45,A.SHELL_SMASH],[50,A.EXPLOSION]],[e.KOMALA]:[[1,A.DEFENSE_CURL],[1,A.ROLLOUT],[6,A.STOCKPILE],[6,A.SPIT_UP],[6,A.SWALLOW],[11,A.RAPID_SPIN],[16,A.YAWN],[21,A.SLAM],[26,A.FLAIL],[31,A.SUCKER_PUNCH],[36,A.PSYCH_UP],[41,A.WOOD_HAMMER],[46,A.THRASH]],[e.TURTONATOR]:[[1,A.TACKLE],[1,A.SMOG],[4,A.EMBER],[8,A.PROTECT],[12,A.ENDURE],[16,A.FLAIL],[20,A.INCINERATE],[24,A.IRON_DEFENSE],[28,A.DRAGON_PULSE],[32,A.BODY_SLAM],[36,A.FLAMETHROWER],[40,A.SHELL_TRAP],[44,A.SHELL_SMASH],[48,A.OVERHEAT],[52,A.EXPLOSION]],[e.TOGEDEMARU]:[[1,A.TACKLE],[1,A.NUZZLE],[5,A.DEFENSE_CURL],[10,A.CHARGE],[15,A.THUNDER_SHOCK],[20,A.FELL_STINGER],[25,A.SPARK],[30,A.PIN_MISSILE],[35,A.MAGNET_RISE],[40,A.ZING_ZAP],[45,A.DISCHARGE],[50,A.ELECTRIC_TERRAIN],[55,A.WILD_CHARGE],[60,A.SPIKY_SHIELD]],[e.MIMIKYU]:[[1,A.SCRATCH],[1,A.SPLASH],[1,A.ASTONISH],[1,A.COPYCAT],[1,A.WOOD_HAMMER],[6,A.SHADOW_SNEAK],[12,A.DOUBLE_TEAM],[18,A.BABY_DOLL_EYES],[24,A.MIMIC],[30,A.HONE_CLAWS],[36,A.SLASH],[42,A.SHADOW_CLAW],[48,A.CHARM],[54,A.PLAY_ROUGH],[60,A.PAIN_SPLIT]],[e.BRUXISH]:[[1,A.WATER_GUN],[4,A.ASTONISH],[9,A.CONFUSION],[12,A.BITE],[17,A.AQUA_JET],[20,A.DISABLE],[25,A.PSYSHOCK],[28,A.CRUNCH],[33,A.AQUA_TAIL],[36,A.SCREECH],[41,A.PSYCHIC_FANGS],[44,A.WAVE_CRASH]],[e.DRAMPA]:[[1,A.ECHOED_VOICE],[1,A.PLAY_NICE],[5,A.TWISTER],[10,A.PROTECT],[15,A.GLARE],[20,A.SAFEGUARD],[25,A.DRAGON_BREATH],[30,A.EXTRASENSORY],[35,A.DRAGON_PULSE],[40,A.LIGHT_SCREEN],[45,A.FLY],[50,A.HYPER_VOICE],[55,A.OUTRAGE]],[e.DHELMISE]:[[1,A.ABSORB],[1,A.RAPID_SPIN],[4,A.ASTONISH],[8,A.WRAP],[12,A.MEGA_DRAIN],[16,A.GROWTH],[20,A.GYRO_BALL],[24,A.SWITCHEROO],[28,A.GIGA_DRAIN],[32,A.WHIRLPOOL],[36,A.HEAVY_SLAM],[40,A.SLAM],[44,A.SHADOW_BALL],[48,A.METAL_SOUND],[52,A.ANCHOR_SHOT],[56,A.ENERGY_BALL],[60,A.PHANTOM_FORCE],[64,A.POWER_WHIP]],[e.JANGMO_O]:[[1,A.TACKLE],[1,A.LEER],[4,A.PROTECT],[8,A.DRAGON_TAIL],[12,A.SCARY_FACE],[16,A.HEADBUTT],[20,A.WORK_UP],[24,A.SCREECH],[28,A.IRON_DEFENSE],[32,A.DRAGON_CLAW],[36,A.NOBLE_ROAR],[40,A.DRAGON_DANCE],[44,A.OUTRAGE]],[e.HAKAMO_O]:[[k,A.SKY_UPPERCUT],[1,A.TACKLE],[1,A.LEER],[1,A.PROTECT],[1,A.DRAGON_TAIL],[1,A.BIDE],[12,A.SCARY_FACE],[16,A.HEADBUTT],[20,A.WORK_UP],[24,A.SCREECH],[28,A.IRON_DEFENSE],[32,A.DRAGON_CLAW],[38,A.NOBLE_ROAR],[44,A.DRAGON_DANCE],[50,A.OUTRAGE],[56,A.CLOSE_COMBAT]],[e.KOMMO_O]:[[k,A.CLANGING_SCALES],[V,A.BELLY_DRUM],[1,A.TACKLE],[1,A.LEER],[1,A.PROTECT],[1,A.DRAGON_TAIL],[1,A.BIDE],[1,A.SKY_UPPERCUT],[12,A.SCARY_FACE],[16,A.HEADBUTT],[20,A.WORK_UP],[24,A.SCREECH],[28,A.IRON_DEFENSE],[32,A.DRAGON_CLAW],[38,A.NOBLE_ROAR],[44,A.DRAGON_DANCE],[52,A.OUTRAGE],[60,A.CLOSE_COMBAT],[68,A.CLANGOROUS_SOUL],[76,A.BOOMBURST]],[e.TAPU_KOKO]:[[1,A.THUNDER_SHOCK],[1,A.QUICK_ATTACK],[5,A.WITHDRAW],[10,A.FAIRY_WIND],[15,A.FALSE_SWIPE],[20,A.SPARK],[25,A.SHOCK_WAVE],[30,A.CHARGE],[35,A.AGILITY],[40,A.SCREECH],[45,A.DISCHARGE],[50,A.MEAN_LOOK],[55,A.NATURES_MADNESS],[60,A.WILD_CHARGE],[65,A.BRAVE_BIRD],[70,A.POWER_SWAP],[75,A.ELECTRIC_TERRAIN]],[e.TAPU_LELE]:[[1,A.CONFUSION],[1,A.ASTONISH],[5,A.WITHDRAW],[10,A.AROMATHERAPY],[15,A.DRAINING_KISS],[20,A.PSYBEAM],[25,A.FLATTER],[30,A.AROMATIC_MIST],[35,A.SWEET_SCENT],[40,A.EXTRASENSORY],[45,A.PSYSHOCK],[50,A.MEAN_LOOK],[55,A.NATURES_MADNESS],[60,A.MOONBLAST],[65,A.TICKLE],[70,A.SKILL_SWAP],[75,A.PSYCHIC_TERRAIN]],[e.TAPU_BULU]:[[1,A.ROCK_SMASH],[1,A.LEAFAGE],[5,A.WITHDRAW],[10,A.DISABLE],[15,A.LEECH_SEED],[20,A.MEGA_DRAIN],[25,A.WHIRLWIND],[30,A.HORN_ATTACK],[35,A.SCARY_FACE],[40,A.HORN_LEECH],[45,A.ZEN_HEADBUTT],[50,A.MEAN_LOOK],[55,A.NATURES_MADNESS],[60,A.WOOD_HAMMER],[65,A.MEGAHORN],[70,A.SKULL_BASH],[75,A.GRASSY_TERRAIN]],[e.TAPU_FINI]:[[1,A.WATER_GUN],[1,A.DISARMING_VOICE],[5,A.WITHDRAW],[10,A.MIST],[10,A.HAZE],[15,A.AQUA_RING],[20,A.WATER_PULSE],[25,A.BRINE],[30,A.DEFOG],[35,A.HEAL_PULSE],[40,A.SURF],[45,A.MUDDY_WATER],[50,A.MEAN_LOOK],[55,A.NATURES_MADNESS],[60,A.MOONBLAST],[65,A.HYDRO_PUMP],[70,A.SOAK],[75,A.MISTY_TERRAIN]],[e.COSMOG]:[[1,A.TELEPORT],[1,A.SPLASH],[1,A.STORED_POWER]],[e.COSMOEM]:[[k,A.COSMIC_POWER],[1,A.TELEPORT],[1,A.SPLASH],[1,A.STORED_POWER]],[e.SOLGALEO]:[[k,A.SUNSTEEL_STRIKE],[1,A.TELEPORT],[1,A.SPLASH],[1,A.STORED_POWER],[1,A.METAL_CLAW],[1,A.COSMIC_POWER],[1,A.NOBLE_ROAR],[1,A.WAKE_UP_SLAP],[7,A.IRON_HEAD],[14,A.METAL_SOUND],[21,A.ZEN_HEADBUTT],[28,A.FLASH_CANNON],[35,A.MORNING_SUN],[42,A.CRUNCH],[49,A.METAL_BURST],[56,A.WILD_CHARGE],[63,A.SOLAR_BEAM],[70,A.FLARE_BLITZ],[77,A.WIDE_GUARD],[84,A.GIGA_IMPACT]],[e.LUNALA]:[[k,A.MOONGEIST_BEAM],[1,A.CONFUSION],[1,A.HYPNOSIS],[1,A.TELEPORT],[1,A.SPLASH],[1,A.STORED_POWER],[1,A.COSMIC_POWER],[7,A.NIGHT_SHADE],[14,A.CONFUSE_RAY],[21,A.AIR_SLASH],[28,A.SHADOW_BALL],[35,A.MOONLIGHT],[42,A.NIGHT_DAZE],[49,A.MAGIC_COAT],[56,A.MOONBLAST],[63,A.PHANTOM_FORCE],[70,A.DREAM_EATER],[77,A.WIDE_GUARD],[84,A.HYPER_BEAM]],[e.NIHILEGO]:[[1,A.POUND],[1,A.WRAP],[1,A.CONSTRICT],[5,A.ACID],[10,A.TICKLE],[15,A.ACID_SPRAY],[20,A.CLEAR_SMOG],[25,A.GUARD_SPLIT],[25,A.POWER_SPLIT],[30,A.VENOSHOCK],[35,A.HEADBUTT],[40,A.TOXIC_SPIKES],[45,A.VENOM_DRENCH],[50,A.POWER_GEM],[55,A.STEALTH_ROCK],[60,A.MIRROR_COAT],[65,A.WONDER_ROOM],[70,A.HEAD_SMASH]],[e.BUZZWOLE]:[[1,A.HARDEN],[1,A.POWER_UP_PUNCH],[5,A.TAUNT],[10,A.FELL_STINGER],[15,A.VITAL_THROW],[20,A.BULK_UP],[25,A.ENDURE],[30,A.REVERSAL],[35,A.MEGA_PUNCH],[40,A.LUNGE],[45,A.FOCUS_ENERGY],[50,A.DYNAMIC_PUNCH],[55,A.COUNTER],[60,A.HAMMER_ARM],[65,A.SUPERPOWER],[70,A.FOCUS_PUNCH]],[e.PHEROMOSA]:[[1,A.RAPID_SPIN],[1,A.FEINT],[5,A.LEER],[10,A.QUICK_GUARD],[15,A.BUG_BITE],[20,A.LOW_KICK],[25,A.DOUBLE_KICK],[30,A.TRIPLE_KICK],[35,A.STOMP],[40,A.AGILITY],[45,A.LUNGE],[50,A.BOUNCE],[55,A.SPEED_SWAP],[60,A.BUG_BUZZ],[65,A.QUIVER_DANCE],[70,A.HIGH_JUMP_KICK]],[e.XURKITREE]:[[1,A.WRAP],[1,A.THUNDER_SHOCK],[5,A.CHARGE],[10,A.THUNDER_WAVE],[15,A.INGRAIN],[20,A.SPARK],[25,A.SHOCK_WAVE],[30,A.HYPNOSIS],[35,A.EERIE_IMPULSE],[40,A.THUNDER_PUNCH],[45,A.DISCHARGE],[50,A.MAGNET_RISE],[55,A.THUNDERBOLT],[60,A.ELECTRIC_TERRAIN],[65,A.POWER_WHIP],[70,A.ZAP_CANNON]],[e.CELESTEELA]:[[1,A.TACKLE],[1,A.ABSORB],[5,A.HARDEN],[10,A.WIDE_GUARD],[15,A.MEGA_DRAIN],[20,A.SMACK_DOWN],[25,A.INGRAIN],[30,A.AUTOTOMIZE],[35,A.GIGA_DRAIN],[40,A.FLASH_CANNON],[45,A.METAL_SOUND],[50,A.IRON_DEFENSE],[55,A.LEECH_SEED],[60,A.HEAVY_SLAM],[65,A.DOUBLE_EDGE],[70,A.SKULL_BASH]],[e.KARTANA]:[[1,A.FURY_CUTTER],[1,A.VACUUM_WAVE],[5,A.RAZOR_LEAF],[10,A.FALSE_SWIPE],[15,A.CUT],[20,A.AIR_CUTTER],[25,A.AERIAL_ACE],[30,A.DETECT],[35,A.NIGHT_SLASH],[40,A.SYNTHESIS],[45,A.LASER_FOCUS],[50,A.DEFOG],[55,A.LEAF_BLADE],[60,A.SACRED_SWORD],[65,A.SWORDS_DANCE],[70,A.GUILLOTINE]],[e.GUZZLORD]:[[1,A.BITE],[1,A.DRAGON_TAIL],[5,A.STOCKPILE],[5,A.SWALLOW],[10,A.KNOCK_OFF],[15,A.STOMP],[20,A.STOMPING_TANTRUM],[25,A.WIDE_GUARD],[30,A.CRUNCH],[35,A.BODY_SLAM],[40,A.GASTRO_ACID],[45,A.HAMMER_ARM],[50,A.HEAVY_SLAM],[55,A.DRAGON_RUSH],[60,A.BELCH],[65,A.THRASH],[70,A.GIGA_IMPACT]],[e.NECROZMA]:[[1,A.CONFUSION],[1,A.METAL_CLAW],[1,A.MORNING_SUN],[1,A.MOONLIGHT],[1,A.GRAVITY],[1,A.CHARGE_BEAM],[1,A.MIRROR_SHOT],[8,A.STEALTH_ROCK],[16,A.SLASH],[24,A.NIGHT_SLASH],[32,A.PSYCHO_CUT],[40,A.STORED_POWER],[48,A.ROCK_BLAST],[56,A.IRON_DEFENSE],[64,A.POWER_GEM],[72,A.PHOTON_GEYSER],[80,A.AUTOTOMIZE],[88,A.PRISMATIC_LASER]],[e.MAGEARNA]:[[1,A.HELPING_HAND],[1,A.GYRO_BALL],[1,A.DISARMING_VOICE],[1,A.CRAFTY_SHIELD],[1,A.GEAR_UP],[6,A.DEFENSE_CURL],[12,A.ROLLOUT],[18,A.IRON_DEFENSE],[24,A.MAGNETIC_FLUX],[30,A.PSYBEAM],[36,A.AURORA_BEAM],[42,A.LOCK_ON],[48,A.SHIFT_GEAR],[54,A.TRICK],[60,A.IRON_HEAD],[66,A.AURA_SPHERE],[72,A.FLASH_CANNON],[78,A.PAIN_SPLIT],[84,A.ZAP_CANNON],[90,A.FLEUR_CANNON]],[e.MARSHADOW]:[[1,A.FIRE_PUNCH],[1,A.ICE_PUNCH],[1,A.THUNDER_PUNCH],[1,A.COUNTER],[1,A.FEINT],[1,A.COPYCAT],[1,A.SHADOW_SNEAK],[1,A.PURSUIT],[9,A.ROLE_PLAY],[18,A.SHADOW_PUNCH],[27,A.FORCE_PALM],[36,A.ASSURANCE],[45,A.SUCKER_PUNCH],[54,A.DRAIN_PUNCH],[63,A.PSYCH_UP],[72,A.SPECTRAL_THIEF],[81,A.LASER_FOCUS],[90,A.ENDEAVOR],[99,A.CLOSE_COMBAT]],[e.POIPOLE]:[[V,A.DRAGON_PULSE],[1,A.GROWL],[1,A.ACID],[1,A.PECK],[1,A.HELPING_HAND],[7,A.FURY_ATTACK],[14,A.FELL_STINGER],[21,A.CHARM],[28,A.VENOSHOCK],[35,A.VENOM_DRENCH],[42,A.NASTY_PLOT],[49,A.POISON_JAB],[56,A.GASTRO_ACID],[63,A.TOXIC]],[e.NAGANADEL]:[[k,A.AIR_CUTTER],[1,A.GROWL],[1,A.ACID],[1,A.PECK],[1,A.HELPING_HAND],[1,A.AIR_SLASH],[1,A.DRAGON_PULSE],[7,A.FURY_ATTACK],[14,A.FELL_STINGER],[21,A.CHARM],[28,A.VENOSHOCK],[35,A.VENOM_DRENCH],[42,A.NASTY_PLOT],[49,A.POISON_JAB],[56,A.GASTRO_ACID],[63,A.TOXIC],[70,A.DRAGON_RUSH]],[e.STAKATAKA]:[[1,A.TACKLE],[1,A.HARDEN],[5,A.ROCK_THROW],[10,A.PROTECT],[15,A.STOMP],[20,A.BLOCK],[25,A.ROCK_SLIDE],[30,A.WIDE_GUARD],[35,A.AUTOTOMIZE],[40,A.ROCK_BLAST],[45,A.MAGNET_RISE],[50,A.IRON_DEFENSE],[55,A.IRON_HEAD],[60,A.TAKE_DOWN],[65,A.STEALTH_ROCK],[70,A.DOUBLE_EDGE]],[e.BLACEPHALON]:[[1,A.FIRE_SPIN],[1,A.ASTONISH],[5,A.LIGHT_SCREEN],[10,A.EMBER],[15,A.NIGHT_SHADE],[20,A.CONFUSE_RAY],[25,A.MAGIC_COAT],[30,A.INCINERATE],[35,A.HYPNOSIS],[40,A.MYSTICAL_FIRE],[45,A.SHADOW_BALL],[50,A.CALM_MIND],[55,A.WILL_O_WISP],[60,A.TRICK],[65,A.FIRE_BLAST],[70,A.MIND_BLOWN]],[e.ZERAORA]:[[1,A.SCRATCH],[1,A.QUICK_ATTACK],[1,A.SPARK],[1,A.FAKE_OUT],[1,A.SNARL],[1,A.POWER_UP_PUNCH],[8,A.FURY_SWIPES],[16,A.QUICK_GUARD],[24,A.SLASH],[32,A.VOLT_SWITCH],[40,A.CHARGE],[48,A.THUNDER_PUNCH],[56,A.HONE_CLAWS],[64,A.DISCHARGE],[72,A.WILD_CHARGE],[80,A.AGILITY],[88,A.PLASMA_FISTS],[96,A.CLOSE_COMBAT]],[e.MELTAN]:[[1,A.THUNDER_SHOCK],[1,A.HARDEN],[8,A.TAIL_WHIP],[16,A.HEADBUTT],[24,A.THUNDER_WAVE],[32,A.ACID_ARMOR],[40,A.FLASH_CANNON]],[e.MELMETAL]:[[k,A.THUNDER_PUNCH],[1,A.HEADBUTT],[1,A.TAIL_WHIP],[1,A.THUNDER_SHOCK],[1,A.HARDEN],[24,A.THUNDER_WAVE],[32,A.ACID_ARMOR],[40,A.FLASH_CANNON],[48,A.MEGA_PUNCH],[56,A.PROTECT],[64,A.DISCHARGE],[72,A.DYNAMIC_PUNCH],[80,A.SUPERPOWER],[88,A.DOUBLE_IRON_BASH],[96,A.HYPER_BEAM]],[e.GROOKEY]:[[1,A.SCRATCH],[1,A.GROWL],[5,A.BRANCH_POKE],[8,A.TAUNT],[12,A.RAZOR_LEAF],[17,A.SCREECH],[20,A.KNOCK_OFF],[24,A.SLAM],[28,A.UPROAR],[32,A.WOOD_HAMMER],[36,A.ENDEAVOR]],[e.THWACKEY]:[[k,A.DOUBLE_HIT],[1,A.SCRATCH],[1,A.GROWL],[1,A.TAUNT],[1,A.BRANCH_POKE],[12,A.RAZOR_LEAF],[19,A.SCREECH],[24,A.KNOCK_OFF],[30,A.SLAM],[36,A.UPROAR],[42,A.WOOD_HAMMER],[48,A.ENDEAVOR]],[e.RILLABOOM]:[[k,A.DRUM_BEATING],[1,A.SCRATCH],[1,A.GROWL],[1,A.TAUNT],[1,A.DOUBLE_HIT],[1,A.NOBLE_ROAR],[1,A.GRASSY_TERRAIN],[1,A.BRANCH_POKE],[12,A.RAZOR_LEAF],[19,A.SCREECH],[24,A.KNOCK_OFF],[30,A.SLAM],[38,A.UPROAR],[46,A.WOOD_HAMMER],[54,A.ENDEAVOR],[62,A.BOOMBURST]],[e.SCORBUNNY]:[[1,A.TACKLE],[1,A.GROWL],[5,A.EMBER],[8,A.QUICK_ATTACK],[12,A.DOUBLE_KICK],[17,A.FLAME_CHARGE],[20,A.AGILITY],[24,A.HEADBUTT],[28,A.COUNTER],[32,A.BOUNCE],[36,A.DOUBLE_EDGE]],[e.RABOOT]:[[1,A.TACKLE],[1,A.GROWL],[1,A.EMBER],[1,A.QUICK_ATTACK],[12,A.DOUBLE_KICK],[19,A.FLAME_CHARGE],[24,A.AGILITY],[30,A.HEADBUTT],[36,A.COUNTER],[42,A.BOUNCE],[48,A.DOUBLE_EDGE]],[e.CINDERACE]:[[k,A.PYRO_BALL],[1,A.TACKLE],[1,A.GROWL],[1,A.EMBER],[1,A.QUICK_ATTACK],[1,A.FEINT],[12,A.DOUBLE_KICK],[19,A.FLAME_CHARGE],[24,A.AGILITY],[30,A.HEADBUTT],[38,A.COUNTER],[46,A.BOUNCE],[54,A.DOUBLE_EDGE],[62,A.COURT_CHANGE]],[e.SOBBLE]:[[1,A.POUND],[1,A.GROWL],[5,A.WATER_GUN],[8,A.BIND],[12,A.WATER_PULSE],[17,A.TEARFUL_LOOK],[20,A.SUCKER_PUNCH],[24,A.U_TURN],[28,A.LIQUIDATION],[32,A.SOAK],[36,A.RAIN_DANCE]],[e.DRIZZILE]:[[1,A.POUND],[1,A.BIND],[1,A.GROWL],[1,A.WATER_GUN],[12,A.WATER_PULSE],[19,A.TEARFUL_LOOK],[24,A.SUCKER_PUNCH],[30,A.U_TURN],[36,A.LIQUIDATION],[42,A.SOAK],[48,A.RAIN_DANCE]],[e.INTELEON]:[[k,A.SNIPE_SHOT],[1,A.POUND],[1,A.BIND],[1,A.GROWL],[1,A.WATER_GUN],[1,A.ACROBATICS],[12,A.WATER_PULSE],[19,A.TEARFUL_LOOK],[24,A.SUCKER_PUNCH],[30,A.U_TURN],[38,A.LIQUIDATION],[46,A.SOAK],[54,A.RAIN_DANCE],[62,A.HYDRO_PUMP]],[e.SKWOVET]:[[1,A.TACKLE],[1,A.TAIL_WHIP],[5,A.BITE],[10,A.STUFF_CHEEKS],[15,A.STOCKPILE],[15,A.SPIT_UP],[15,A.SWALLOW],[20,A.BODY_SLAM],[25,A.REST],[30,A.COUNTER],[35,A.BULLET_SEED],[40,A.SUPER_FANG],[45,A.BELCH]],[e.GREEDENT]:[[k,A.COVET],[1,A.TACKLE],[1,A.TAIL_WHIP],[1,A.BITE],[1,A.STUFF_CHEEKS],[15,A.STOCKPILE],[15,A.SPIT_UP],[15,A.SWALLOW],[20,A.BODY_SLAM],[27,A.REST],[34,A.COUNTER],[41,A.BULLET_SEED],[48,A.SUPER_FANG],[55,A.BELCH]],[e.ROOKIDEE]:[[1,A.LEER],[1,A.PECK],[4,A.POWER_TRIP],[8,A.HONE_CLAWS],[12,A.FURY_ATTACK],[16,A.PLUCK],[20,A.TAUNT],[24,A.SCARY_FACE],[28,A.DRILL_PECK],[32,A.SWAGGER],[36,A.BRAVE_BIRD]],[e.CORVISQUIRE]:[[1,A.LEER],[1,A.PECK],[1,A.HONE_CLAWS],[1,A.POWER_TRIP],[12,A.FURY_ATTACK],[16,A.PLUCK],[22,A.TAUNT],[28,A.SCARY_FACE],[34,A.DRILL_PECK],[40,A.SWAGGER],[46,A.BRAVE_BIRD]],[e.CORVIKNIGHT]:[[k,A.STEEL_WING],[1,A.LEER],[1,A.PECK],[1,A.SCREECH],[1,A.METAL_SOUND],[1,A.IRON_DEFENSE],[1,A.HONE_CLAWS],[1,A.POWER_TRIP],[12,A.FURY_ATTACK],[16,A.PLUCK],[22,A.TAUNT],[28,A.SCARY_FACE],[34,A.DRILL_PECK],[42,A.SWAGGER],[50,A.BRAVE_BIRD]],[e.BLIPBUG]:[[1,A.STRUGGLE_BUG]],[e.DOTTLER]:[[k,A.CONFUSION],[k,A.LIGHT_SCREEN],[k,A.REFLECT],[1,A.CONFUSION],[1,A.LIGHT_SCREEN],[1,A.REFLECT],[1,A.STRUGGLE_BUG]],[e.ORBEETLE]:[[1,A.CONFUSION],[1,A.LIGHT_SCREEN],[1,A.REFLECT],[1,A.STRUGGLE_BUG],[4,A.CONFUSE_RAY],[8,A.MAGIC_COAT],[12,A.AGILITY],[16,A.PSYBEAM],[20,A.HYPNOSIS],[24,A.ALLY_SWITCH],[28,A.BUG_BUZZ],[32,A.MIRROR_COAT],[36,A.PSYCHIC],[40,A.AFTER_YOU],[44,A.CALM_MIND],[48,A.PSYCHIC_TERRAIN]],[e.NICKIT]:[[1,A.TAIL_WHIP],[1,A.QUICK_ATTACK],[4,A.BEAT_UP],[8,A.HONE_CLAWS],[12,A.SNARL],[16,A.ASSURANCE],[20,A.NASTY_PLOT],[24,A.SUCKER_PUNCH],[28,A.NIGHT_SLASH],[32,A.TAIL_SLAP],[36,A.FOUL_PLAY]],[e.THIEVUL]:[[k,A.THIEF],[1,A.TAIL_WHIP],[1,A.QUICK_ATTACK],[1,A.BEAT_UP],[1,A.HONE_CLAWS],[12,A.SNARL],[16,A.ASSURANCE],[22,A.NASTY_PLOT],[28,A.SUCKER_PUNCH],[34,A.NIGHT_SLASH],[40,A.TAIL_SLAP],[46,A.FOUL_PLAY],[52,A.PARTING_SHOT]],[e.GOSSIFLEUR]:[[1,A.SING],[1,A.LEAFAGE],[4,A.RAPID_SPIN],[8,A.SWEET_SCENT],[12,A.RAZOR_LEAF],[16,A.ROUND],[21,A.LEAF_TORNADO],[24,A.SYNTHESIS],[28,A.HYPER_VOICE],[32,A.AROMATHERAPY],[36,A.LEAF_STORM]],[e.ELDEGOSS]:[[k,A.COTTON_SPORE],[1,A.SING],[1,A.RAPID_SPIN],[1,A.SWEET_SCENT],[1,A.LEAFAGE],[12,A.RAZOR_LEAF],[16,A.ROUND],[23,A.LEAF_TORNADO],[28,A.SYNTHESIS],[34,A.HYPER_VOICE],[40,A.AROMATHERAPY],[46,A.LEAF_STORM],[52,A.COTTON_GUARD]],[e.WOOLOO]:[[1,A.TACKLE],[1,A.GROWL],[4,A.DEFENSE_CURL],[8,A.COPYCAT],[12,A.GUARD_SPLIT],[16,A.DOUBLE_KICK],[21,A.HEADBUTT],[25,A.TAKE_DOWN],[28,A.GUARD_SWAP],[32,A.REVERSAL],[36,A.COTTON_GUARD],[40,A.DOUBLE_EDGE]],[e.DUBWOOL]:[[1,A.TACKLE],[1,A.GROWL],[1,A.DEFENSE_CURL],[1,A.COPYCAT],[12,A.GUARD_SPLIT],[16,A.DOUBLE_KICK],[21,A.HEADBUTT],[27,A.TAKE_DOWN],[32,A.GUARD_SWAP],[38,A.REVERSAL],[44,A.COTTON_GUARD],[50,A.DOUBLE_EDGE],[56,A.LAST_RESORT]],[e.CHEWTLE]:[[1,A.TACKLE],[1,A.WATER_GUN],[7,A.BITE],[14,A.PROTECT],[21,A.HEADBUTT],[28,A.COUNTER],[35,A.JAW_LOCK],[42,A.LIQUIDATION],[49,A.BODY_SLAM]],[e.DREDNAW]:[[k,A.ROCK_TOMB],[1,A.TACKLE],[1,A.BITE],[1,A.WATER_GUN],[1,A.PROTECT],[1,A.CRUNCH],[1,A.ROCK_POLISH],[1,A.RAZOR_SHELL],[21,A.HEADBUTT],[30,A.COUNTER],[39,A.JAW_LOCK],[48,A.LIQUIDATION],[57,A.BODY_SLAM],[66,A.HEAD_SMASH]],[e.YAMPER]:[[1,A.TACKLE],[1,A.TAIL_WHIP],[5,A.NUZZLE],[10,A.BITE],[15,A.ROAR],[20,A.SPARK],[26,A.CHARM],[30,A.CRUNCH],[35,A.CHARGE],[40,A.WILD_CHARGE],[45,A.PLAY_ROUGH]],[e.BOLTUND]:[[1,A.TACKLE],[1,A.TAIL_WHIP],[1,A.BITE],[1,A.ELECTRIFY],[1,A.NUZZLE],[15,A.ROAR],[20,A.SPARK],[28,A.CHARM],[34,A.CRUNCH],[41,A.CHARGE],[48,A.WILD_CHARGE],[55,A.PLAY_ROUGH],[62,A.ELECTRIC_TERRAIN]],[e.ROLYCOLY]:[[1,A.TACKLE],[1,A.SMOKESCREEN],[5,A.RAPID_SPIN],[10,A.SMACK_DOWN],[15,A.ROCK_POLISH],[20,A.ANCIENT_POWER],[25,A.INCINERATE],[30,A.STEALTH_ROCK],[35,A.HEAT_CRASH],[40,A.ROCK_BLAST]],[e.CARKOL]:[[k,A.FLAME_CHARGE],[1,A.TACKLE],[1,A.SMOKESCREEN],[1,A.RAPID_SPIN],[1,A.SMACK_DOWN],[15,A.ROCK_POLISH],[20,A.ANCIENT_POWER],[27,A.INCINERATE],[35,A.STEALTH_ROCK],[41,A.HEAT_CRASH],[48,A.ROCK_BLAST],[55,A.STONE_EDGE]],[e.COALOSSAL]:[[k,A.TAR_SHOT],[1,A.TACKLE],[1,A.SMOKESCREEN],[1,A.RAPID_SPIN],[1,A.SMACK_DOWN],[1,A.FLAME_CHARGE],[15,A.ROCK_POLISH],[20,A.ANCIENT_POWER],[27,A.INCINERATE],[37,A.STEALTH_ROCK],[45,A.HEAT_CRASH],[54,A.ROCK_BLAST],[63,A.STONE_EDGE]],[e.APPLIN]:[[1,A.WITHDRAW],[1,A.ASTONISH],[1,A.LEAFAGE]],[e.FLAPPLE]:[[k,A.WING_ATTACK],[1,A.LEAFAGE],[1,A.GROWTH],[1,A.WITHDRAW],[1,A.TWISTER],[1,A.RECYCLE],[1,A.ASTONISH],[4,A.ACID_SPRAY],[8,A.ACROBATICS],[12,A.LEECH_SEED],[16,A.PROTECT],[20,A.DRAGON_BREATH],[24,A.DRAGON_DANCE],[28,A.DRAGON_PULSE],[32,A.GRAV_APPLE],[36,A.IRON_DEFENSE],[40,A.FLY],[44,A.DRAGON_RUSH]],[e.APPLETUN]:[[k,A.HEADBUTT],[1,A.LEAFAGE],[1,A.GROWTH],[1,A.WITHDRAW],[1,A.SWEET_SCENT],[1,A.RECYCLE],[1,A.ASTONISH],[4,A.CURSE],[8,A.STOMP],[12,A.LEECH_SEED],[16,A.PROTECT],[20,A.BULLET_SEED],[24,A.RECOVER],[28,A.APPLE_ACID],[32,A.BODY_SLAM],[36,A.IRON_DEFENSE],[40,A.DRAGON_PULSE],[44,A.ENERGY_BALL]],[e.SILICOBRA]:[[1,A.SAND_ATTACK],[1,A.WRAP],[1,A.MUD_SLAP],[5,A.MINIMIZE],[10,A.BRUTAL_SWING],[15,A.BULLDOZE],[20,A.HEADBUTT],[25,A.GLARE],[30,A.DIG],[35,A.SANDSTORM],[40,A.SLAM],[45,A.COIL],[50,A.SAND_TOMB]],[e.SANDACONDA]:[[1,A.SAND_ATTACK],[1,A.WRAP],[1,A.MUD_SLAP],[1,A.MINIMIZE],[1,A.BRUTAL_SWING],[15,A.BULLDOZE],[20,A.HEADBUTT],[25,A.GLARE],[30,A.DIG],[35,A.SANDSTORM],[42,A.SLAM],[49,A.COIL],[51,A.SAND_TOMB]],[e.CRAMORANT]:[[V,A.BELCH],[1,A.PECK],[1,A.STOCKPILE],[1,A.SPIT_UP],[1,A.SWALLOW],[7,A.WATER_GUN],[14,A.FURY_ATTACK],[21,A.PLUCK],[28,A.DIVE],[35,A.DRILL_PECK],[42,A.AMNESIA],[49,A.THRASH],[56,A.HYDRO_PUMP]],[e.ARROKUDA]:[[1,A.PECK],[1,A.AQUA_JET],[6,A.FURY_ATTACK],[12,A.BITE],[18,A.AGILITY],[24,A.DIVE],[30,A.FOCUS_ENERGY],[36,A.CRUNCH],[42,A.LIQUIDATION],[48,A.DOUBLE_EDGE]],[e.BARRASKEWDA]:[[1,A.FURY_ATTACK],[1,A.BITE],[1,A.PECK],[1,A.AQUA_JET],[1,A.THROAT_CHOP],[18,A.AGILITY],[24,A.DIVE],[32,A.FOCUS_ENERGY],[40,A.CRUNCH],[48,A.LIQUIDATION],[56,A.DOUBLE_EDGE]],[e.TOXEL]:[[1,A.GROWL],[1,A.ACID],[1,A.FLAIL],[1,A.BELCH],[1,A.NUZZLE],[1,A.TEARFUL_LOOK]],[e.TOXTRICITY]:[[k,A.SPARK],[1,A.LEER],[1,A.GROWL],[1,A.ACID],[1,A.THUNDER_SHOCK],[1,A.FLAIL],[1,A.ACID_SPRAY],[1,A.BELCH],[1,A.NOBLE_ROAR],[1,A.NUZZLE],[1,A.TEARFUL_LOOK],[4,A.CHARGE],[8,A.SHOCK_WAVE],[12,A.SCARY_FACE],[16,A.TAUNT],[24,A.SCREECH],[28,A.SWAGGER],[32,A.TOXIC],[36,A.DISCHARGE],[40,A.POISON_JAB],[44,A.OVERDRIVE],[48,A.BOOMBURST],[52,A.SHIFT_GEAR]],[e.SIZZLIPEDE]:[[1,A.EMBER],[1,A.SMOKESCREEN],[5,A.WRAP],[10,A.BITE],[15,A.FLAME_WHEEL],[20,A.BUG_BITE],[25,A.COIL],[30,A.SLAM],[35,A.FIRE_SPIN],[40,A.CRUNCH],[45,A.FIRE_LASH],[50,A.LUNGE],[55,A.BURN_UP]],[e.CENTISKORCH]:[[1,A.WRAP],[1,A.BITE],[1,A.EMBER],[1,A.SMOKESCREEN],[1,A.INFERNO],[15,A.FLAME_WHEEL],[20,A.BUG_BITE],[25,A.COIL],[32,A.SLAM],[39,A.FIRE_SPIN],[46,A.CRUNCH],[53,A.FIRE_LASH],[60,A.LUNGE],[67,A.BURN_UP]],[e.CLOBBOPUS]:[[1,A.LEER],[1,A.ROCK_SMASH],[5,A.FEINT],[10,A.BIND],[15,A.DETECT],[20,A.BRICK_BREAK],[25,A.BULK_UP],[30,A.SUBMISSION],[35,A.TAUNT],[40,A.REVERSAL],[45,A.SUPERPOWER]],[e.GRAPPLOCT]:[[k,A.OCTOLOCK],[1,A.BIND],[1,A.LEER],[1,A.OCTAZOOKA],[1,A.ROCK_SMASH],[1,A.FEINT],[15,A.DETECT],[20,A.BRICK_BREAK],[25,A.BULK_UP],[30,A.SUBMISSION],[35,A.TAUNT],[40,A.REVERSAL],[45,A.SUPERPOWER],[50,A.TOPSY_TURVY]],[e.SINISTEA]:[[1,A.WITHDRAW],[1,A.ASTONISH],[1,A.ABSORB],[6,A.AROMATIC_MIST],[12,A.MEGA_DRAIN],[24,A.SUCKER_PUNCH],[30,A.SWEET_SCENT],[36,A.GIGA_DRAIN],[42,A.NASTY_PLOT],[48,A.SHADOW_BALL],[54,A.MEMENTO],[60,A.SHELL_SMASH]],[e.POLTEAGEIST]:[[k,A.TEATIME],[1,A.ABSORB],[1,A.MEGA_DRAIN],[1,A.WITHDRAW],[1,A.ASTONISH],[1,A.AROMATIC_MIST],[1,A.STRENGTH_SAP],[18,A.PROTECT],[24,A.SUCKER_PUNCH],[30,A.SWEET_SCENT],[36,A.GIGA_DRAIN],[42,A.NASTY_PLOT],[48,A.SHADOW_BALL],[54,A.MEMENTO],[60,A.SHELL_SMASH],[66,A.CURSE]],[e.HATENNA]:[[1,A.CONFUSION],[1,A.PLAY_NICE],[5,A.LIFE_DEW],[10,A.DISARMING_VOICE],[15,A.AROMATIC_MIST],[20,A.PSYBEAM],[25,A.HEAL_PULSE],[30,A.DAZZLING_GLEAM],[35,A.CALM_MIND],[40,A.PSYCHIC],[45,A.HEALING_WISH]],[e.HATTREM]:[[k,A.BRUTAL_SWING],[1,A.CONFUSION],[1,A.DISARMING_VOICE],[1,A.PLAY_NICE],[1,A.LIFE_DEW],[15,A.AROMATIC_MIST],[20,A.PSYBEAM],[25,A.HEAL_PULSE],[30,A.DAZZLING_GLEAM],[37,A.CALM_MIND],[44,A.PSYCHIC],[51,A.HEALING_WISH]],[e.HATTERENE]:[[k,A.PSYCHO_CUT],[1,A.CONFUSION],[1,A.DISARMING_VOICE],[1,A.PLAY_NICE],[1,A.BRUTAL_SWING],[1,A.LIFE_DEW],[15,A.AROMATIC_MIST],[20,A.PSYBEAM],[25,A.HEAL_PULSE],[30,A.DAZZLING_GLEAM],[37,A.CALM_MIND],[46,A.PSYCHIC],[55,A.HEALING_WISH],[64,A.MAGIC_POWDER]],[e.IMPIDIMP]:[[1,A.FAKE_OUT],[1,A.CONFIDE],[4,A.BITE],[8,A.FLATTER],[12,A.FAKE_TEARS],[16,A.ASSURANCE],[20,A.SWAGGER],[24,A.SUCKER_PUNCH],[28,A.TORMENT],[33,A.DARK_PULSE],[36,A.NASTY_PLOT],[40,A.PLAY_ROUGH],[44,A.FOUL_PLAY]],[e.MORGREM]:[[k,A.FALSE_SURRENDER],[1,A.BITE],[1,A.FAKE_OUT],[1,A.FLATTER],[1,A.CONFIDE],[12,A.FAKE_TEARS],[16,A.ASSURANCE],[20,A.SWAGGER],[24,A.SUCKER_PUNCH],[28,A.TORMENT],[35,A.DARK_PULSE],[40,A.NASTY_PLOT],[46,A.PLAY_ROUGH],[52,A.FOUL_PLAY]],[e.GRIMMSNARL]:[[k,A.SPIRIT_BREAK],[1,A.BITE],[1,A.FAKE_OUT],[1,A.FLATTER],[1,A.BULK_UP],[1,A.CONFIDE],[1,A.FALSE_SURRENDER],[12,A.FAKE_TEARS],[16,A.ASSURANCE],[20,A.SWAGGER],[24,A.SUCKER_PUNCH],[28,A.TORMENT],[35,A.DARK_PULSE],[40,A.NASTY_PLOT],[48,A.PLAY_ROUGH],[56,A.FOUL_PLAY],[64,A.HAMMER_ARM]],[e.OBSTAGOON]:[[k,A.OBSTRUCT],[1,A.SAND_ATTACK],[1,A.TACKLE],[1,A.PIN_MISSILE],[1,A.LEER],[1,A.SUBMISSION],[1,A.LICK],[1,A.CROSS_CHOP],[1,A.NIGHT_SLASH],[1,A.SWITCHEROO],[1,A.BABY_DOLL_EYES],[9,A.SNARL],[12,A.HEADBUTT],[15,A.HONE_CLAWS],[18,A.FURY_SWIPES],[23,A.REST],[28,A.TAKE_DOWN],[35,A.SCARY_FACE],[42,A.COUNTER],[49,A.TAUNT],[56,A.DOUBLE_EDGE]],[e.PERRSERKER]:[[k,A.IRON_HEAD],[1,A.SCRATCH],[1,A.GROWL],[1,A.FAKE_OUT],[1,A.IRON_DEFENSE],[1,A.METAL_BURST],[1,A.HONE_CLAWS],[12,A.PAY_DAY],[16,A.METAL_CLAW],[20,A.TAUNT],[24,A.SWAGGER],[31,A.FURY_SWIPES],[36,A.SCREECH],[42,A.SLASH],[48,A.METAL_SOUND],[54,A.THRASH]],[e.CURSOLA]:[[1,A.TACKLE],[1,A.DISABLE],[1,A.HARDEN],[1,A.PERISH_SONG],[1,A.ASTONISH],[15,A.SPITE],[20,A.ANCIENT_POWER],[25,A.HEX],[30,A.CURSE],[35,A.STRENGTH_SAP],[40,A.POWER_GEM],[45,A.NIGHT_SHADE],[50,A.GRUDGE],[55,A.MIRROR_COAT]],[e.SIRFETCHD]:[[k,A.IRON_DEFENSE],[1,A.SAND_ATTACK],[1,A.LEER],[1,A.PECK],[1,A.FURY_CUTTER],[1,A.FIRST_IMPRESSION],[15,A.ROCK_SMASH],[20,A.BRUTAL_SWING],[25,A.DETECT],[30,A.KNOCK_OFF],[35,A.DEFOG],[40,A.BRICK_BREAK],[45,A.SWORDS_DANCE],[50,A.SLAM],[55,A.LEAF_BLADE],[60,A.FINAL_GAMBIT],[65,A.BRAVE_BIRD],[70,A.METEOR_ASSAULT]],[e.MR_RIME]:[[1,A.POUND],[1,A.BARRIER],[1,A.TICKLE],[1,A.MIMIC],[1,A.LIGHT_SCREEN],[1,A.REFLECT],[1,A.PROTECT],[1,A.SAFEGUARD],[1,A.BATON_PASS],[1,A.ENCORE],[1,A.RAPID_SPIN],[1,A.ROLE_PLAY],[1,A.RECYCLE],[1,A.SLACK_OFF],[1,A.FAKE_TEARS],[1,A.BLOCK],[1,A.COPYCAT],[1,A.ICE_SHARD],[1,A.AFTER_YOU],[1,A.MISTY_TERRAIN],[1,A.DAZZLING_GLEAM],[12,A.CONFUSION],[16,A.ALLY_SWITCH],[20,A.ICY_WIND],[24,A.DOUBLE_KICK],[28,A.PSYBEAM],[32,A.HYPNOSIS],[36,A.MIRROR_COAT],[40,A.SUCKER_PUNCH],[44,A.FREEZE_DRY],[48,A.PSYCHIC],[52,A.TEETER_DANCE]],[e.RUNERIGUS]:[[k,A.SHADOW_CLAW],[1,A.NIGHT_SHADE],[1,A.HAZE],[1,A.PROTECT],[1,A.SCARY_FACE],[1,A.ASTONISH],[12,A.DISABLE],[16,A.BRUTAL_SWING],[20,A.CRAFTY_SHIELD],[24,A.HEX],[28,A.MEAN_LOOK],[32,A.SLAM],[38,A.CURSE],[44,A.SHADOW_BALL],[50,A.EARTHQUAKE],[56,A.GUARD_SPLIT],[56,A.POWER_SPLIT],[62,A.DESTINY_BOND]],[e.MILCERY]:[[1,A.TACKLE],[1,A.AROMATIC_MIST],[5,A.SWEET_KISS],[10,A.SWEET_SCENT],[15,A.DRAINING_KISS],[20,A.AROMATHERAPY],[25,A.ATTRACT],[30,A.ACID_ARMOR],[35,A.DAZZLING_GLEAM],[40,A.RECOVER],[45,A.MISTY_TERRAIN],[50,A.ENTRAINMENT]],[e.ALCREMIE]:[[k,A.DECORATE],[1,A.TACKLE],[1,A.SWEET_KISS],[1,A.SWEET_SCENT],[1,A.AROMATIC_MIST],[15,A.DRAINING_KISS],[20,A.AROMATHERAPY],[25,A.ATTRACT],[30,A.ACID_ARMOR],[35,A.DAZZLING_GLEAM],[40,A.RECOVER],[45,A.MISTY_TERRAIN],[50,A.ENTRAINMENT]],[e.FALINKS]:[[1,A.TACKLE],[1,A.PROTECT],[5,A.ROCK_SMASH],[10,A.FOCUS_ENERGY],[15,A.HEADBUTT],[20,A.BULK_UP],[25,A.ENDURE],[30,A.REVERSAL],[35,A.FIRST_IMPRESSION],[40,A.NO_RETREAT],[45,A.IRON_DEFENSE],[50,A.CLOSE_COMBAT],[55,A.MEGAHORN],[60,A.COUNTER]],[e.PINCURCHIN]:[[1,A.PECK],[1,A.THUNDER_SHOCK],[5,A.WATER_GUN],[10,A.CHARGE],[15,A.FURY_ATTACK],[20,A.SPARK],[25,A.BUBBLE_BEAM],[30,A.RECOVER],[35,A.CURSE],[40,A.ELECTRIC_TERRAIN],[45,A.POISON_JAB],[50,A.ZING_ZAP],[55,A.ACUPRESSURE],[60,A.DISCHARGE]],[e.SNOM]:[[1,A.POWDER_SNOW],[1,A.STRUGGLE_BUG]],[e.FROSMOTH]:[[k,A.ICY_WIND],[1,A.POWDER_SNOW],[1,A.ATTRACT],[1,A.HELPING_HAND],[1,A.STRUGGLE_BUG],[4,A.STUN_SPORE],[8,A.INFESTATION],[12,A.MIST],[16,A.DEFOG],[21,A.FEATHER_DANCE],[24,A.AURORA_BEAM],[28,A.SNOWSCAPE],[32,A.BUG_BUZZ],[36,A.AURORA_VEIL],[40,A.BLIZZARD],[44,A.TAILWIND],[48,A.WIDE_GUARD],[52,A.QUIVER_DANCE]],[e.STONJOURNER]:[[1,A.ROCK_THROW],[1,A.BLOCK],[6,A.ROCK_POLISH],[12,A.ROCK_TOMB],[18,A.GRAVITY],[24,A.STOMP],[30,A.STEALTH_ROCK],[36,A.ROCK_SLIDE],[42,A.BODY_SLAM],[48,A.WIDE_GUARD],[54,A.HEAVY_SLAM],[60,A.STONE_EDGE],[66,A.MEGA_KICK]],[e.EISCUE]:[[1,A.TACKLE],[1,A.POWDER_SNOW],[6,A.MIST],[12,A.WEATHER_BALL],[18,A.ICY_WIND],[24,A.HEADBUTT],[30,A.AMNESIA],[36,A.FREEZE_DRY],[42,A.SNOWSCAPE],[48,A.AURORA_VEIL],[54,A.SURF],[60,A.BLIZZARD]],[e.INDEEDEE]:[[1,A.STORED_POWER],[1,A.PLAY_NICE],[5,A.ENCORE],[10,A.DISARMING_VOICE],[15,A.PSYBEAM],[20,A.HELPING_HAND],[25,A.AFTER_YOU],[30,A.HEALING_WISH],[35,A.PSYCHIC],[40,A.CALM_MIND],[45,A.POWER_SPLIT],[50,A.PSYCHIC_TERRAIN],[55,A.LAST_RESORT]],[e.MORPEKO]:[[1,A.TAIL_WHIP],[1,A.THUNDER_SHOCK],[5,A.LEER],[10,A.POWER_TRIP],[15,A.QUICK_ATTACK],[20,A.FLATTER],[25,A.BITE],[30,A.SPARK],[35,A.TORMENT],[40,A.AGILITY],[45,A.BULLET_SEED],[50,A.CRUNCH],[55,A.AURA_WHEEL],[60,A.THRASH]],[e.CUFANT]:[[1,A.TACKLE],[1,A.GROWL],[5,A.ROLLOUT],[10,A.ROCK_SMASH],[15,A.BULLDOZE],[20,A.STOMP],[25,A.IRON_DEFENSE],[30,A.DIG],[35,A.STRENGTH],[40,A.IRON_HEAD],[45,A.PLAY_ROUGH],[50,A.HIGH_HORSEPOWER],[55,A.SUPERPOWER]],[e.COPPERAJAH]:[[k,A.HEAVY_SLAM],[1,A.TACKLE],[1,A.GROWL],[1,A.ROLLOUT],[1,A.ROCK_SMASH],[15,A.BULLDOZE],[20,A.STOMP],[25,A.IRON_DEFENSE],[30,A.DIG],[37,A.STRENGTH],[44,A.IRON_HEAD],[51,A.PLAY_ROUGH],[58,A.HIGH_HORSEPOWER],[65,A.SUPERPOWER]],[e.DRACOZOLT]:[[1,A.TACKLE],[1,A.THUNDER_SHOCK],[7,A.CHARGE],[14,A.AERIAL_ACE],[21,A.ANCIENT_POWER],[28,A.PLUCK],[35,A.DRAGON_TAIL],[42,A.STOMP],[49,A.SLAM],[56,A.DISCHARGE],[63,A.BOLT_BEAK],[70,A.DRAGON_PULSE],[77,A.DRAGON_RUSH]],[e.ARCTOZOLT]:[[1,A.THUNDER_SHOCK],[1,A.POWDER_SNOW],[7,A.CHARGE],[14,A.ECHOED_VOICE],[21,A.ANCIENT_POWER],[28,A.PLUCK],[35,A.AVALANCHE],[42,A.FREEZE_DRY],[49,A.SLAM],[56,A.DISCHARGE],[63,A.BOLT_BEAK],[70,A.ICICLE_CRASH],[77,A.BLIZZARD]],[e.DRACOVISH]:[[1,A.TACKLE],[1,A.WATER_GUN],[7,A.PROTECT],[14,A.BRUTAL_SWING],[21,A.ANCIENT_POWER],[28,A.BITE],[35,A.DRAGON_BREATH],[42,A.STOMP],[49,A.SUPER_FANG],[56,A.CRUNCH],[63,A.FISHIOUS_REND],[70,A.DRAGON_PULSE],[77,A.DRAGON_RUSH]],[e.ARCTOVISH]:[[1,A.WATER_GUN],[1,A.POWDER_SNOW],[7,A.PROTECT],[14,A.ICY_WIND],[21,A.ANCIENT_POWER],[28,A.BITE],[35,A.AURORA_VEIL],[42,A.FREEZE_DRY],[49,A.SUPER_FANG],[56,A.CRUNCH],[63,A.FISHIOUS_REND],[70,A.ICICLE_CRASH],[77,A.BLIZZARD]],[e.DURALUDON]:[[1,A.LEER],[1,A.METAL_CLAW],[6,A.ROCK_SMASH],[12,A.HONE_CLAWS],[18,A.METAL_SOUND],[24,A.BREAKING_SWIPE],[30,A.DRAGON_TAIL],[36,A.IRON_DEFENSE],[42,A.LASER_FOCUS],[48,A.DRAGON_CLAW],[54,A.FLASH_CANNON],[60,A.METAL_BURST],[66,A.HYPER_BEAM]],[e.DREEPY]:[[1,A.BITE],[1,A.QUICK_ATTACK],[1,A.ASTONISH],[1,A.INFESTATION]],[e.DRAKLOAK]:[[k,A.DRAGON_PULSE],[1,A.BITE],[1,A.QUICK_ATTACK],[1,A.ASTONISH],[1,A.INFESTATION],[6,A.LOCK_ON],[12,A.ASSURANCE],[18,A.HEX],[24,A.AGILITY],[30,A.DOUBLE_HIT],[36,A.U_TURN],[42,A.DRAGON_DANCE],[48,A.PHANTOM_FORCE],[54,A.TAKE_DOWN],[61,A.DRAGON_RUSH],[66,A.DOUBLE_EDGE],[72,A.LAST_RESORT]],[e.DRAGAPULT]:[[k,A.DRAGON_DARTS],[V,A.DRAGON_PULSE],[1,A.BITE],[1,A.QUICK_ATTACK],[1,A.DRAGON_BREATH],[1,A.ASTONISH],[1,A.INFESTATION],[6,A.LOCK_ON],[12,A.ASSURANCE],[18,A.HEX],[24,A.AGILITY],[30,A.DOUBLE_HIT],[36,A.U_TURN],[42,A.DRAGON_DANCE],[48,A.PHANTOM_FORCE],[54,A.TAKE_DOWN],[63,A.DRAGON_RUSH],[70,A.DOUBLE_EDGE],[78,A.LAST_RESORT]],[e.ZACIAN]:[[1,A.BITE],[1,A.QUICK_ATTACK],[1,A.METAL_CLAW],[1,A.HOWL],[1,A.QUICK_GUARD],[1,A.SACRED_SWORD],[11,A.SLASH],[22,A.SWORDS_DANCE],[33,A.IRON_HEAD],[44,A.NOBLE_ROAR],[55,A.CRUNCH],[66,A.MOONBLAST],[77,A.CLOSE_COMBAT],[88,A.GIGA_IMPACT]],[e.ZAMAZENTA]:[[1,A.BITE],[1,A.QUICK_ATTACK],[1,A.METAL_CLAW],[1,A.HOWL],[1,A.WIDE_GUARD],[11,A.SLASH],[22,A.IRON_DEFENSE],[33,A.IRON_HEAD],[44,A.METAL_BURST],[55,A.CRUNCH],[66,A.MOONBLAST],[77,A.CLOSE_COMBAT],[88,A.GIGA_IMPACT]],[e.ETERNATUS]:[[1,A.AGILITY],[1,A.CONFUSE_RAY],[1,A.POISON_TAIL],[1,A.DRAGON_TAIL],[8,A.TOXIC],[16,A.VENOSHOCK],[24,A.DRAGON_DANCE],[32,A.CROSS_POISON],[40,A.DRAGON_PULSE],[48,A.FLAMETHROWER],[56,A.DYNAMAX_CANNON],[64,A.COSMIC_POWER],[72,A.RECOVER],[80,A.HYPER_BEAM],[88,A.OUTRAGE]],[e.KUBFU]:[[1,A.LEER],[1,A.ROCK_SMASH],[4,A.ENDURE],[8,A.FOCUS_ENERGY],[12,A.AERIAL_ACE],[16,A.SCARY_FACE],[20,A.HEADBUTT],[24,A.BRICK_BREAK],[28,A.DETECT],[32,A.BULK_UP],[36,A.IRON_HEAD],[40,A.DYNAMIC_PUNCH],[44,A.COUNTER],[48,A.CLOSE_COMBAT],[52,A.FOCUS_PUNCH]],[e.URSHIFU]:[[k,A.WICKED_BLOW],[1,A.LEER],[1,A.FOCUS_ENERGY],[1,A.ENDURE],[1,A.ROCK_SMASH],[1,A.SUCKER_PUNCH],[12,A.AERIAL_ACE],[16,A.SCARY_FACE],[20,A.HEADBUTT],[24,A.BRICK_BREAK],[28,A.DETECT],[32,A.BULK_UP],[36,A.IRON_HEAD],[40,A.DYNAMIC_PUNCH],[44,A.COUNTER],[48,A.CLOSE_COMBAT],[52,A.FOCUS_PUNCH]],[e.ZARUDE]:[[1,A.SCRATCH],[1,A.BIND],[6,A.LEER],[12,A.VINE_WHIP],[18,A.GROWTH],[24,A.FURY_SWIPES],[30,A.SCARY_FACE],[36,A.GRASS_KNOT],[42,A.BITE],[48,A.U_TURN],[54,A.SWAGGER],[60,A.ENERGY_BALL],[66,A.SYNTHESIS],[72,A.HAMMER_ARM],[78,A.THRASH],[84,A.POWER_WHIP],[90,A.JUNGLE_HEALING]],[e.REGIELEKI]:[[1,A.THUNDER_SHOCK],[1,A.RAPID_SPIN],[6,A.ELECTROWEB],[12,A.ANCIENT_POWER],[18,A.SHOCK_WAVE],[24,A.THUNDER_WAVE],[30,A.EXTREME_SPEED],[36,A.THUNDER_CAGE],[42,A.THUNDERBOLT],[48,A.MAGNET_RISE],[54,A.THRASH],[60,A.LOCK_ON],[66,A.ZAP_CANNON],[72,A.HYPER_BEAM],[78,A.EXPLOSION]],[e.REGIDRAGO]:[[1,A.TWISTER],[6,A.BITE],[12,A.ANCIENT_POWER],[18,A.DRAGON_BREATH],[30,A.CRUNCH],[36,A.DRAGON_CLAW],[42,A.HAMMER_ARM],[48,A.DRAGON_DANCE],[54,A.THRASH],[60,A.FOCUS_ENERGY],[66,A.DRAGON_ENERGY],[72,A.HYPER_BEAM],[78,A.EXPLOSION]],[e.GLASTRIER]:[[1,A.TACKLE],[1,A.TAIL_WHIP],[6,A.DOUBLE_KICK],[12,A.AVALANCHE],[18,A.STOMP],[24,A.TORMENT],[30,A.MIST],[36,A.ICICLE_CRASH],[42,A.TAKE_DOWN],[48,A.IRON_DEFENSE],[54,A.THRASH],[60,A.TAUNT],[66,A.DOUBLE_EDGE],[72,A.SWORDS_DANCE]],[e.SPECTRIER]:[[1,A.TACKLE],[1,A.TAIL_WHIP],[6,A.DOUBLE_KICK],[12,A.HEX],[18,A.STOMP],[24,A.CONFUSE_RAY],[30,A.HAZE],[36,A.SHADOW_BALL],[42,A.TAKE_DOWN],[48,A.AGILITY],[54,A.THRASH],[60,A.DISABLE],[66,A.DOUBLE_EDGE],[72,A.NASTY_PLOT]],[e.CALYREX]:[[1,A.POUND],[1,A.MEGA_DRAIN],[1,A.GROWTH],[1,A.CONFUSION],[8,A.LIFE_DEW],[16,A.GIGA_DRAIN],[24,A.PSYSHOCK],[32,A.HELPING_HAND],[40,A.GRASSY_TERRAIN],[40,A.PSYCHIC_TERRAIN],[48,A.ENERGY_BALL],[56,A.PSYCHIC],[64,A.LEECH_SEED],[72,A.HEAL_PULSE],[80,A.SOLAR_BEAM],[88,A.FUTURE_SIGHT]],[e.WYRDEER]:[[k,A.PSYSHIELD_BASH],[1,A.TACKLE],[1,A.ME_FIRST],[3,A.LEER],[7,A.ASTONISH],[10,A.HYPNOSIS],[13,A.STOMP],[16,A.SAND_ATTACK],[21,A.TAKE_DOWN],[23,A.CONFUSE_RAY],[27,A.CALM_MIND],[32,A.ROLE_PLAY],[37,A.ZEN_HEADBUTT],[49,A.IMPRISON],[55,A.DOUBLE_EDGE],[62,A.MEGAHORN]],[e.KLEAVOR]:[[k,A.STONE_AXE],[1,A.WING_ATTACK],[1,A.AIR_SLASH],[1,A.LEER],[1,A.QUICK_ATTACK],[4,A.FURY_CUTTER],[8,A.FALSE_SWIPE],[12,A.SMACK_DOWN],[16,A.DOUBLE_TEAM],[20,A.DOUBLE_HIT],[24,A.SLASH],[28,A.FOCUS_ENERGY],[30,A.STEEL_WING],[32,A.AGILITY],[36,A.ROCK_SLIDE],[40,A.X_SCISSOR],[44,A.SWORDS_DANCE]],[e.URSALUNA]:[[k,A.HEADLONG_RUSH],[1,A.SCRATCH],[1,A.LEER],[1,A.LICK],[1,A.COVET],[1,A.FLING],[1,A.BABY_DOLL_EYES],[1,A.FAKE_TEARS],[1,A.CHARM],[8,A.FURY_SWIPES],[13,A.PAYBACK],[17,A.SWEET_SCENT],[22,A.SLASH],[25,A.PLAY_NICE],[29,A.PLAY_ROUGH],[35,A.SCARY_FACE],[41,A.REST],[41,A.SNORE],[48,A.HIGH_HORSEPOWER],[56,A.THRASH],[64,A.HAMMER_ARM]],[e.BASCULEGION]:[[V,A.FINAL_GAMBIT],[1,A.TAIL_WHIP],[1,A.WATER_GUN],[1,A.SHADOW_BALL],[1,A.PHANTOM_FORCE],[4,A.TACKLE],[8,A.FLAIL],[12,A.AQUA_JET],[16,A.BITE],[20,A.SCARY_FACE],[24,A.HEADBUTT],[28,A.SOAK],[32,A.CRUNCH],[36,A.TAKE_DOWN],[40,A.UPROAR],[44,A.WAVE_CRASH],[48,A.THRASH],[52,A.DOUBLE_EDGE],[56,A.HEAD_SMASH]],[e.SNEASLER]:[[k,A.DIRE_CLAW],[1,A.SCRATCH],[1,A.LEER],[1,A.ROCK_SMASH],[1,A.FLING],[6,A.TAUNT],[12,A.QUICK_ATTACK],[18,A.METAL_CLAW],[24,A.POISON_JAB],[30,A.BRICK_BREAK],[36,A.HONE_CLAWS],[42,A.SLASH],[48,A.AGILITY],[54,A.SCREECH],[60,A.CLOSE_COMBAT]],[e.OVERQWIL]:[[1,A.TACKLE],[1,A.POISON_STING],[4,A.HARDEN],[8,A.BITE],[12,A.FELL_STINGER],[16,A.MINIMIZE],[20,A.SPIKES],[24,A.BRINE],[28,A.BARB_BARRAGE],[32,A.PIN_MISSILE],[36,A.TOXIC_SPIKES],[40,A.STOCKPILE],[40,A.SPIT_UP],[44,A.TOXIC],[48,A.CRUNCH],[52,A.ACUPRESSURE],[56,A.DESTINY_BOND]],[e.ENAMORUS]:[[1,A.ASTONISH],[1,A.FAIRY_WIND],[5,A.TORMENT],[10,A.FLATTER],[15,A.TWISTER],[20,A.DRAINING_KISS],[25,A.IRON_DEFENSE],[30,A.IMPRISON],[35,A.MYSTICAL_FIRE],[40,A.DAZZLING_GLEAM],[45,A.EXTRASENSORY],[50,A.UPROAR],[55,A.SUPERPOWER],[60,A.HEALING_WISH],[65,A.MOONBLAST],[70,A.OUTRAGE],[75,A.SPRINGTIDE_STORM]],[e.SPRIGATITO]:[[1,A.SCRATCH],[1,A.TAIL_WHIP],[1,A.LEAFAGE],[7,A.BITE],[10,A.HONE_CLAWS],[13,A.MAGICAL_LEAF],[15,A.QUICK_ATTACK],[17,A.SEED_BOMB],[21,A.U_TURN],[25,A.WORRY_SEED],[28,A.SLASH],[32,A.ENERGY_BALL],[36,A.PLAY_ROUGH]],[e.FLORAGATO]:[[1,A.SCRATCH],[1,A.TAIL_WHIP],[1,A.LEAFAGE],[7,A.BITE],[10,A.HONE_CLAWS],[13,A.MAGICAL_LEAF],[15,A.QUICK_ATTACK],[20,A.SEED_BOMB],[24,A.U_TURN],[28,A.WORRY_SEED],[33,A.SLASH],[38,A.ENERGY_BALL],[42,A.PLAY_ROUGH],[46,A.LEAF_STORM]],[e.MEOWSCARADA]:[[k,A.FLOWER_TRICK],[V,A.DOUBLE_TEAM],[V,A.TRICK],[1,A.SCRATCH],[1,A.TAIL_WHIP],[1,A.LEAFAGE],[7,A.BITE],[10,A.HONE_CLAWS],[13,A.MAGICAL_LEAF],[15,A.QUICK_ATTACK],[20,A.SEED_BOMB],[24,A.U_TURN],[29,A.WORRY_SEED],[33,A.SLASH],[38,A.NIGHT_SLASH],[42,A.ENERGY_BALL],[47,A.PLAY_ROUGH],[52,A.KNOCK_OFF],[58,A.GRASSY_TERRAIN],[64,A.LEAF_STORM]],[e.FUECOCO]:[[1,A.TACKLE],[1,A.LEER],[1,A.EMBER],[7,A.ROUND],[12,A.BITE],[15,A.INCINERATE],[17,A.YAWN],[21,A.SNARL],[25,A.ROAR],[28,A.FLAMETHROWER],[32,A.HYPER_VOICE],[36,A.FIRE_BLAST]],[e.CROCALOR]:[[1,A.TACKLE],[1,A.LEER],[1,A.EMBER],[7,A.LICK],[10,A.ROUND],[12,A.BITE],[15,A.YAWN],[17,A.INCINERATE],[24,A.SNARL],[28,A.ROAR],[32,A.FLAMETHROWER],[38,A.HYPER_VOICE],[42,A.WILL_O_WISP],[47,A.FIRE_BLAST]],[e.SKELEDIRGE]:[[k,A.TORCH_SONG],[V,A.SING],[V,A.YAWN],[1,A.TACKLE],[1,A.LEER],[1,A.EMBER],[7,A.LICK],[10,A.ROUND],[12,A.SCARY_FACE],[15,A.BITE],[17,A.INCINERATE],[24,A.SNARL],[28,A.ROAR],[32,A.FLAMETHROWER],[38,A.SHADOW_BALL],[42,A.HYPER_VOICE],[47,A.WILL_O_WISP],[47,A.HEX],[58,A.FIRE_BLAST],[64,A.OVERHEAT]],[e.QUAXLY]:[[1,A.POUND],[1,A.GROWL],[1,A.WATER_GUN],[7,A.WORK_UP],[10,A.WING_ATTACK],[13,A.AQUA_JET],[17,A.DOUBLE_HIT],[21,A.AQUA_CUTTER],[24,A.AIR_SLASH],[28,A.FOCUS_ENERGY],[31,A.ACROBATICS],[35,A.LIQUIDATION]],[e.QUAXWELL]:[[1,A.POUND],[1,A.GROWL],[1,A.WATER_GUN],[1,A.DOUBLE_HIT],[7,A.WORK_UP],[10,A.WING_ATTACK],[13,A.AQUA_JET],[17,A.WATER_PULSE],[19,A.LOW_SWEEP],[23,A.AQUA_CUTTER],[27,A.AIR_SLASH],[32,A.FOCUS_ENERGY],[38,A.ACROBATICS],[43,A.LIQUIDATION],[48,A.FEATHER_DANCE]],[e.QUAQUAVAL]:[[k,A.AQUA_STEP],[V,A.COUNTER],[1,A.POUND],[1,A.GROWL],[1,A.WATER_GUN],[1,A.DOUBLE_HIT],[7,A.WORK_UP],[10,A.WING_ATTACK],[13,A.AQUA_JET],[17,A.WATER_PULSE],[17,A.LOW_SWEEP],[21,A.AQUA_CUTTER],[27,A.AIR_SLASH],[32,A.FOCUS_ENERGY],[38,A.MEGA_KICK],[43,A.ACROBATICS],[47,A.LIQUIDATION],[52,A.FEATHER_DANCE],[58,A.CLOSE_COMBAT],[64,A.WAVE_CRASH]],[e.LECHONK]:[[1,A.TACKLE],[1,A.TAIL_WHIP],[5,A.DISARMING_VOICE],[8,A.ECHOED_VOICE],[12,A.MUD_SHOT],[15,A.COVET],[17,A.DIG],[21,A.HEADBUTT],[24,A.YAWN],[27,A.TAKE_DOWN],[30,A.WORK_UP],[32,A.UPROAR],[35,A.DOUBLE_EDGE]],[e.OINKOLOGNE]:[[1,A.TACKLE],[1,A.TAIL_WHIP],[5,A.DISARMING_VOICE],[8,A.ECHOED_VOICE],[12,A.MUD_SHOT],[15,A.COVET],[17,A.DIG],[23,A.HEADBUTT],[26,A.TAKE_DOWN],[27,A.YAWN],[34,A.WORK_UP],[38,A.UPROAR],[42,A.DOUBLE_EDGE],[48,A.EARTH_POWER],[54,A.BELCH]],[e.TAROUNTULA]:[[1,A.TACKLE],[1,A.STRING_SHOT],[5,A.STRUGGLE_BUG],[8,A.ASSURANCE],[11,A.FEINT],[14,A.BUG_BITE],[18,A.BLOCK],[22,A.COUNTER],[25,A.HEADBUTT],[29,A.STICKY_WEB],[33,A.GASTRO_ACID],[36,A.CIRCLE_THROW],[40,A.THROAT_CHOP],[44,A.SKITTER_SMACK]],[e.SPIDOPS]:[[k,A.SILK_TRAP],[1,A.TACKLE],[1,A.STRING_SHOT],[5,A.STRUGGLE_BUG],[8,A.ASSURANCE],[11,A.FEINT],[14,A.BUG_BITE],[19,A.BLOCK],[24,A.COUNTER],[28,A.HEADBUTT],[33,A.STICKY_WEB],[37,A.GASTRO_ACID],[41,A.CIRCLE_THROW],[45,A.THROAT_CHOP],[49,A.SKITTER_SMACK]],[e.NYMBLE]:[[1,A.TACKLE],[1,A.LEER],[4,A.STRUGGLE_BUG],[6,A.ASTONISH],[9,A.ASSURANCE],[11,A.DOUBLE_KICK],[14,A.SCREECH],[18,A.ENDURE],[22,A.BUG_BITE],[26,A.FEINT],[30,A.AGILITY],[38,A.SUCKER_PUNCH],[41,A.FIRST_IMPRESSION]],[e.LOKIX]:[[k,A.LUNGE],[1,A.TACKLE],[1,A.LEER],[1,A.LOW_KICK],[1,A.DETECT],[4,A.STRUGGLE_BUG],[6,A.ASTONISH],[9,A.ASSURANCE],[11,A.DOUBLE_KICK],[14,A.SCREECH],[18,A.ENDURE],[22,A.BUG_BITE],[28,A.FEINT],[32,A.AGILITY],[36,A.THROAT_CHOP],[40,A.SUCKER_PUNCH],[44,A.FIRST_IMPRESSION],[48,A.BOUNCE],[53,A.AXE_KICK]],[e.PAWMI]:[[1,A.SCRATCH],[1,A.GROWL],[3,A.THUNDER_SHOCK],[6,A.QUICK_ATTACK],[8,A.CHARGE],[12,A.NUZZLE],[15,A.DIG],[19,A.BITE],[23,A.SPARK],[27,A.THUNDER_WAVE],[31,A.ENTRAINMENT],[35,A.SLAM],[38,A.DISCHARGE],[40,A.AGILITY],[44,A.WILD_CHARGE]],[e.PAWMO]:[[k,A.ARM_THRUST],[1,A.SCRATCH],[1,A.GROWL],[3,A.THUNDER_SHOCK],[6,A.QUICK_ATTACK],[8,A.CHARGE],[12,A.NUZZLE],[15,A.DIG],[19,A.BITE],[23,A.SPARK],[27,A.THUNDER_WAVE],[32,A.SLAM],[38,A.ENTRAINMENT],[42,A.DISCHARGE],[46,A.AGILITY],[52,A.WILD_CHARGE]],[e.PAWMOT]:[[k,A.REVIVAL_BLESSING],[1,A.SCRATCH],[1,A.GROWL],[1,A.WILD_CHARGE],[3,A.THUNDER_SHOCK],[6,A.QUICK_ATTACK],[8,A.CHARGE],[12,A.NUZZLE],[15,A.DIG],[19,A.BITE],[23,A.SPARK],[25,A.ARM_THRUST],[29,A.THUNDER_WAVE],[33,A.SLAM],[39,A.ENTRAINMENT],[44,A.CLOSE_COMBAT],[49,A.DISCHARGE],[54,A.AGILITY],[60,A.DOUBLE_SHOCK]],[e.TANDEMAUS]:[[1,A.POUND],[1,A.BABY_DOLL_EYES],[5,A.ECHOED_VOICE],[8,A.HELPING_HAND],[11,A.SUPER_FANG],[14,A.DOUBLE_HIT],[18,A.BULLET_SEED],[22,A.ENCORE],[26,A.PLAY_ROUGH],[30,A.HYPER_VOICE],[33,A.CHARM],[37,A.BEAT_UP],[41,A.COPYCAT],[46,A.POPULATION_BOMB]],[e.MAUSHOLD]:[[1,A.POUND],[1,A.FOLLOW_ME],[1,A.BABY_DOLL_EYES],[1,A.TIDY_UP],[5,A.ECHOED_VOICE],[8,A.HELPING_HAND],[11,A.SUPER_FANG],[14,A.DOUBLE_HIT],[18,A.BULLET_SEED],[22,A.ENCORE],[29,A.PLAY_ROUGH],[33,A.HYPER_VOICE],[37,A.CHARM],[41,A.BEAT_UP],[46,A.COPYCAT],[53,A.POPULATION_BOMB]],[e.FIDOUGH]:[[1,A.TACKLE],[1,A.GROWL],[3,A.LICK],[6,A.TAIL_WHIP],[8,A.COVET],[11,A.BITE],[15,A.BABY_DOLL_EYES],[18,A.PLAY_ROUGH],[22,A.WORK_UP],[26,A.BATON_PASS],[30,A.ROAR],[33,A.DOUBLE_EDGE],[36,A.CHARM],[40,A.CRUNCH],[45,A.LAST_RESORT]],[e.DACHSBUN]:[[1,A.TACKLE],[1,A.GROWL],[3,A.LICK],[6,A.TAIL_WHIP],[8,A.COVET],[11,A.BITE],[15,A.BABY_DOLL_EYES],[18,A.PLAY_ROUGH],[22,A.WORK_UP],[29,A.BATON_PASS],[33,A.ROAR],[38,A.DOUBLE_EDGE],[42,A.CHARM],[47,A.CRUNCH],[53,A.LAST_RESORT]],[e.SMOLIV]:[[1,A.TACKLE],[1,A.SWEET_SCENT],[5,A.ABSORB],[7,A.GROWTH],[10,A.RAZOR_LEAF],[13,A.HELPING_HAND],[16,A.FLAIL],[20,A.MEGA_DRAIN],[23,A.GRASSY_TERRAIN],[27,A.SEED_BOMB],[30,A.ENERGY_BALL],[34,A.LEECH_SEED],[38,A.TERRAIN_PULSE]],[e.DOLLIV]:[[1,A.TACKLE],[1,A.SWEET_SCENT],[5,A.ABSORB],[7,A.GROWTH],[10,A.RAZOR_LEAF],[13,A.HELPING_HAND],[16,A.FLAIL],[20,A.MEGA_DRAIN],[23,A.GRASSY_TERRAIN],[29,A.SEED_BOMB],[34,A.ENERGY_BALL],[37,A.LEECH_SEED],[42,A.TERRAIN_PULSE]],[e.ARBOLIVA]:[[1,A.TACKLE],[1,A.SAFEGUARD],[1,A.SWEET_SCENT],[1,A.MIRROR_COAT],[5,A.ABSORB],[7,A.GROWTH],[10,A.RAZOR_LEAF],[13,A.HELPING_HAND],[16,A.FLAIL],[20,A.MEGA_DRAIN],[23,A.GRASSY_TERRAIN],[29,A.SEED_BOMB],[34,A.ENERGY_BALL],[39,A.LEECH_SEED],[46,A.TERRAIN_PULSE],[52,A.PETAL_BLIZZARD],[58,A.PETAL_DANCE]],[e.SQUAWKABILLY]:[[1,A.GROWL],[1,A.PECK],[1,A.MIMIC],[6,A.QUICK_ATTACK],[10,A.TORMENT],[13,A.AERIAL_ACE],[17,A.FURY_ATTACK],[20,A.TAUNT],[24,A.UPROAR],[27,A.COPYCAT],[30,A.FLY],[34,A.FACADE],[38,A.SWAGGER],[42,A.BRAVE_BIRD],[47,A.ROOST],[52,A.REVERSAL]],[e.NACLI]:[[1,A.TACKLE],[1,A.HARDEN],[5,A.ROCK_THROW],[7,A.MUD_SHOT],[10,A.SMACK_DOWN],[13,A.ROCK_POLISH],[16,A.HEADBUTT],[20,A.IRON_DEFENSE],[25,A.RECOVER],[30,A.ROCK_SLIDE],[33,A.STEALTH_ROCK],[35,A.HEAVY_SLAM],[40,A.EARTHQUAKE],[45,A.STONE_EDGE]],[e.NACLSTACK]:[[k,A.SALT_CURE],[1,A.TACKLE],[1,A.HARDEN],[5,A.ROCK_THROW],[7,A.MUD_SHOT],[10,A.SMACK_DOWN],[13,A.ROCK_POLISH],[16,A.HEADBUTT],[20,A.IRON_DEFENSE],[30,A.RECOVER],[34,A.ROCK_SLIDE],[38,A.STEALTH_ROCK],[41,A.HEAVY_SLAM],[45,A.EARTHQUAKE],[51,A.STONE_EDGE]],[e.GARGANACL]:[[k,A.HAMMER_ARM],[V,A.IRON_DEFENSE],[1,A.TACKLE],[1,A.HARDEN],[1,A.BLOCK],[1,A.ROCK_BLAST],[1,A.SMACK_DOWN],[1,A.WIDE_GUARD],[5,A.ROCK_THROW],[7,A.MUD_SHOT],[10,A.ROCK_TOMB],[13,A.ROCK_POLISH],[16,A.HEADBUTT],[24,A.SALT_CURE],[30,A.RECOVER],[34,A.ROCK_SLIDE],[40,A.STEALTH_ROCK],[44,A.HEAVY_SLAM],[49,A.EARTHQUAKE],[54,A.STONE_EDGE],[60,A.EXPLOSION]],[e.CHARCADET]:[[1,A.LEER],[1,A.EMBER],[1,A.ASTONISH],[8,A.CLEAR_SMOG],[12,A.FIRE_SPIN],[16,A.WILL_O_WISP],[20,A.NIGHT_SHADE],[24,A.FLAME_CHARGE],[28,A.INCINERATE],[32,A.LAVA_PLUME]],[e.ARMAROUGE]:[[k,A.PSYSHOCK],[1,A.LEER],[1,A.EMBER],[1,A.ASTONISH],[1,A.WIDE_GUARD],[1,A.MYSTICAL_FIRE],[8,A.CLEAR_SMOG],[12,A.FIRE_SPIN],[16,A.WILL_O_WISP],[20,A.NIGHT_SHADE],[24,A.FLAME_CHARGE],[28,A.INCINERATE],[32,A.LAVA_PLUME],[37,A.CALM_MIND],[42,A.ALLY_SWITCH],[48,A.FLAMETHROWER],[56,A.EXPANDING_FORCE],[62,A.ARMOR_CANNON]],[e.CERULEDGE]:[[k,A.SHADOW_CLAW],[V,A.NIGHT_SLASH],[V,A.SHADOW_SNEAK],[V,A.QUICK_GUARD],[V,A.SOLAR_BLADE],[1,A.EMBER],[1,A.LEER],[1,A.ASTONISH],[8,A.CLEAR_SMOG],[12,A.FIRE_SPIN],[16,A.WILL_O_WISP],[20,A.NIGHT_SHADE],[24,A.FLAME_CHARGE],[28,A.INCINERATE],[32,A.LAVA_PLUME],[37,A.SWORDS_DANCE],[42,A.ALLY_SWITCH],[48,A.BITTER_BLADE],[56,A.PSYCHO_CUT],[62,A.FLARE_BLITZ]],[e.TADBULB]:[[1,A.TACKLE],[1,A.MUD_SLAP],[7,A.THUNDER_SHOCK],[11,A.WATER_GUN],[17,A.CHARGE],[21,A.SPARK],[24,A.MUD_SHOT],[25,A.FLAIL],[32,A.DISCHARGE],[36,A.WEATHER_BALL],[40,A.ELECTRIC_TERRAIN],[45,A.SUCKER_PUNCH],[50,A.ZAP_CANNON]],[e.BELLIBOLT]:[[1,A.TACKLE],[1,A.MUD_SLAP],[1,A.SLACK_OFF],[7,A.THUNDER_SHOCK],[11,A.WATER_GUN],[17,A.CHARGE],[21,A.SPARK],[24,A.MUD_SHOT],[25,A.FLAIL],[32,A.DISCHARGE],[36,A.WEATHER_BALL],[40,A.ELECTRIC_TERRAIN],[45,A.SUCKER_PUNCH],[50,A.ZAP_CANNON]],[e.WATTREL]:[[1,A.GROWL],[1,A.PECK],[4,A.THUNDER_SHOCK],[7,A.QUICK_ATTACK],[11,A.PLUCK],[15,A.SPARK],[19,A.UPROAR],[23,A.ROOST],[27,A.DUAL_WINGBEAT],[32,A.AGILITY],[37,A.VOLT_SWITCH],[43,A.DISCHARGE]],[e.KILOWATTREL]:[[k,A.ELECTRO_BALL],[1,A.GROWL],[1,A.PECK],[4,A.THUNDER_SHOCK],[7,A.QUICK_ATTACK],[11,A.PLUCK],[15,A.SPARK],[19,A.UPROAR],[24,A.ROOST],[30,A.DUAL_WINGBEAT],[36,A.AGILITY],[43,A.VOLT_SWITCH],[48,A.DISCHARGE],[55,A.HURRICANE]],[e.MASCHIFF]:[[1,A.TACKLE],[1,A.LEER],[1,A.SCARY_FACE],[4,A.LICK],[7,A.SNARL],[10,A.HONE_CLAWS],[14,A.BITE],[18,A.ROAR],[22,A.HEADBUTT],[26,A.PAYBACK],[31,A.CRUNCH],[35,A.SWAGGER],[39,A.REVERSAL],[43,A.JAW_LOCK],[49,A.DOUBLE_EDGE]],[e.MABOSSTIFF]:[[k,A.COMEUPPANCE],[1,A.TACKLE],[1,A.LEER],[1,A.SCARY_FACE],[4,A.LICK],[7,A.SNARL],[10,A.HONE_CLAWS],[14,A.BITE],[18,A.ROAR],[22,A.HEADBUTT],[26,A.PAYBACK],[34,A.CRUNCH],[39,A.SWAGGER],[43,A.REVERSAL],[48,A.JAW_LOCK],[55,A.DOUBLE_EDGE],[60,A.OUTRAGE]],[e.SHROODLE]:[[1,A.SCRATCH],[1,A.LEER],[5,A.ACID_SPRAY],[8,A.BITE],[8,A.FURY_SWIPES],[11,A.SWITCHEROO],[14,A.POISON_FANG],[18,A.FLATTER],[21,A.SLASH],[25,A.U_TURN],[29,A.POISON_JAB],[33,A.TAUNT],[36,A.SUBSTITUTE],[40,A.KNOCK_OFF],[45,A.GUNK_SHOT]],[e.GRAFAIAI]:[[k,A.DOODLE],[1,A.SCRATCH],[1,A.LEER],[1,A.BITE],[5,A.ACID_SPRAY],[8,A.FURY_SWIPES],[11,A.SWITCHEROO],[14,A.POISON_FANG],[18,A.FLATTER],[21,A.SLASH],[25,A.U_TURN],[33,A.POISON_JAB],[37,A.TAUNT],[40,A.SUBSTITUTE],[45,A.KNOCK_OFF],[51,A.GUNK_SHOT]],[e.BRAMBLIN]:[[1,A.DEFENSE_CURL],[1,A.ROLLOUT],[1,A.ASTONISH],[5,A.ABSORB],[9,A.RAPID_SPIN],[13,A.BULLET_SEED],[17,A.INFESTATION],[21,A.HEX],[25,A.MEGA_DRAIN],[29,A.DISABLE],[35,A.PHANTOM_FORCE],[40,A.GIGA_DRAIN],[45,A.CURSE],[50,A.PAIN_SPLIT],[55,A.POWER_WHIP]],[e.BRAMBLEGHAST]:[[1,A.DEFENSE_CURL],[1,A.ROLLOUT],[1,A.ASTONISH],[5,A.ABSORB],[9,A.RAPID_SPIN],[13,A.BULLET_SEED],[17,A.INFESTATION],[21,A.HEX],[25,A.MEGA_DRAIN],[29,A.DISABLE],[35,A.PHANTOM_FORCE],[40,A.GIGA_DRAIN],[45,A.CURSE],[50,A.PAIN_SPLIT],[55,A.POWER_WHIP]],[e.TOEDSCOOL]:[[1,A.WRAP],[1,A.MUD_SLAP],[4,A.ABSORB],[8,A.POISON_POWDER],[8,A.STUN_SPORE],[12,A.SUPERSONIC],[15,A.TACKLE],[16,A.MEGA_DRAIN],[20,A.SCREECH],[24,A.MUD_SHOT],[28,A.HEX],[32,A.SEED_BOMB],[36,A.SPORE],[40,A.GROWTH],[44,A.GIGA_DRAIN],[48,A.EARTH_POWER],[52,A.POWER_WHIP]],[e.TOEDSCRUEL]:[[1,A.WRAP],[1,A.MUD_SLAP],[1,A.REFLECT_TYPE],[4,A.ABSORB],[8,A.POISON_POWDER],[8,A.STUN_SPORE],[12,A.SUPERSONIC],[15,A.TACKLE],[16,A.MEGA_DRAIN],[20,A.SCREECH],[24,A.MUD_SHOT],[28,A.HEX],[34,A.SEED_BOMB],[40,A.SPORE],[44,A.GROWTH],[48,A.GIGA_DRAIN],[54,A.EARTH_POWER],[58,A.POWER_WHIP]],[e.KLAWF]:[[1,A.ROCK_THROW],[6,A.HARDEN],[9,A.ROCK_SMASH],[13,A.ROCK_TOMB],[17,A.METAL_CLAW],[21,A.PROTECT],[24,A.ROCK_BLAST],[29,A.X_SCISSOR],[33,A.SWORDS_DANCE],[37,A.FLAIL],[42,A.ROCK_SLIDE],[47,A.HIGH_HORSEPOWER],[51,A.IRON_DEFENSE],[56,A.GUILLOTINE]],[e.CAPSAKID]:[[1,A.LEER],[1,A.LEAFAGE],[4,A.BITE],[10,A.GROWTH],[13,A.RAZOR_LEAF],[17,A.SUNNY_DAY],[21,A.BULLET_SEED],[24,A.HEADBUTT],[28,A.ZEN_HEADBUTT],[38,A.CRUNCH],[44,A.SEED_BOMB],[48,A.SOLAR_BEAM]],[e.SCOVILLAIN]:[[k,A.FLAMETHROWER],[k,A.SPICY_EXTRACT],[1,A.LEER],[1,A.FIRE_FANG],[1,A.LEAFAGE],[4,A.BITE],[10,A.GROWTH],[13,A.RAZOR_LEAF],[17,A.SUNNY_DAY],[21,A.BULLET_SEED],[24,A.HEADBUTT],[28,A.ZEN_HEADBUTT],[33,A.WORRY_SEED],[38,A.CRUNCH],[44,A.SEED_BOMB],[48,A.SOLAR_BEAM],[48,A.OVERHEAT]],[e.RELLOR]:[[1,A.TACKLE],[1,A.DEFENSE_CURL],[4,A.SAND_ATTACK],[7,A.STRUGGLE_BUG],[11,A.ROLLOUT],[15,A.MUD_SHOT],[20,A.BUG_BITE],[24,A.TAKE_DOWN],[29,A.DIG],[35,A.LUNGE]],[e.RABSCA]:[[k,A.REVIVAL_BLESSING],[V,A.SAFEGUARD],[V,A.PSYCH_UP],[1,A.TACKLE],[1,A.CONFUSION],[1,A.DEFENSE_CURL],[1,A.MUD_SHOT],[1,A.DIG],[4,A.SAND_ATTACK],[7,A.STRUGGLE_BUG],[11,A.ROLLOUT],[15,A.PSYBEAM],[20,A.BUG_BITE],[24,A.TAKE_DOWN],[29,A.EXTRASENSORY],[35,A.LUNGE],[40,A.POWER_SWAP],[40,A.GUARD_SWAP],[40,A.SPEED_SWAP],[45,A.BUG_BUZZ],[50,A.PSYCHIC]],[e.FLITTLE]:[[1,A.GROWL],[1,A.PECK],[5,A.CONFUSION],[8,A.BABY_DOLL_EYES],[11,A.DISARMING_VOICE],[15,A.QUICK_ATTACK],[19,A.PSYBEAM],[24,A.PLUCK],[29,A.AGILITY],[34,A.UPROAR]],[e.ESPATHRA]:[[k,A.LUMINA_CRASH],[1,A.GROWL],[1,A.PECK],[1,A.DRILL_PECK],[1,A.FEATHER_DANCE],[5,A.CONFUSION],[8,A.BABY_DOLL_EYES],[11,A.DISARMING_VOICE],[15,A.QUICK_ATTACK],[19,A.PSYBEAM],[24,A.PLUCK],[29,A.AGILITY],[34,A.UPROAR],[43,A.DAZZLING_GLEAM],[49,A.PSYCHIC],[54,A.LAST_RESORT]],[e.TINKATINK]:[[1,A.ASTONISH],[1,A.FAIRY_WIND],[5,A.BABY_DOLL_EYES],[8,A.METAL_CLAW],[11,A.COVET],[14,A.ROCK_SMASH],[17,A.DRAINING_KISS],[21,A.SWEET_KISS],[24,A.BRUTAL_SWING],[27,A.SLAM],[31,A.FLASH_CANNON],[35,A.PLAY_ROUGH],[39,A.FAKE_OUT],[43,A.FLATTER],[47,A.SKITTER_SMACK],[52,A.KNOCK_OFF]],[e.TINKATUFF]:[[1,A.ASTONISH],[1,A.FAIRY_WIND],[5,A.BABY_DOLL_EYES],[8,A.METAL_CLAW],[11,A.COVET],[14,A.ROCK_SMASH],[17,A.DRAINING_KISS],[21,A.SWEET_KISS],[24,A.BRUTAL_SWING],[27,A.SLAM],[31,A.FLASH_CANNON],[35,A.PLAY_ROUGH],[39,A.FAKE_OUT],[43,A.FLATTER],[47,A.SKITTER_SMACK],[52,A.KNOCK_OFF]],[e.TINKATON]:[[k,A.GIGATON_HAMMER],[1,A.ASTONISH],[1,A.FAIRY_WIND],[5,A.BABY_DOLL_EYES],[8,A.METAL_CLAW],[11,A.COVET],[14,A.ROCK_SMASH],[17,A.DRAINING_KISS],[21,A.SWEET_KISS],[24,A.BRUTAL_SWING],[27,A.SLAM],[31,A.FLASH_CANNON],[35,A.PLAY_ROUGH],[39,A.FAKE_OUT],[43,A.FLATTER],[47,A.SKITTER_SMACK],[52,A.KNOCK_OFF]],[e.WIGLETT]:[[1,A.SAND_ATTACK],[1,A.WATER_GUN],[4,A.MUD_SLAP],[8,A.WRAP],[12,A.AQUA_JET],[20,A.SLAM],[20,A.WATER_PULSE],[24,A.HEADBUTT],[28,A.DIG],[32,A.SUCKER_PUNCH],[36,A.THROAT_CHOP],[40,A.LIQUIDATION]],[e.WUGTRIO]:[[1,A.SAND_ATTACK],[1,A.WRAP],[1,A.WATER_GUN],[1,A.MUD_SLAP],[12,A.AQUA_JET],[16,A.SLAM],[20,A.WATER_PULSE],[24,A.HEADBUTT],[30,A.TRIPLE_DIVE],[36,A.DIG],[42,A.SUCKER_PUNCH],[48,A.THROAT_CHOP],[54,A.LIQUIDATION]],[e.BOMBIRDIER]:[[1,A.WING_ATTACK],[1,A.LEER],[1,A.PECK],[1,A.MEMENTO],[1,A.HONE_CLAWS],[7,A.THIEF],[11,A.ROCK_THROW],[16,A.WHIRLWIND],[20,A.PLUCK],[24,A.TORMENT],[29,A.ROCK_TOMB],[36,A.PAYBACK],[42,A.DUAL_WINGBEAT],[47,A.ROCK_SLIDE],[53,A.KNOCK_OFF],[60,A.PARTING_SHOT]],[e.FINIZEN]:[[1,A.SUPERSONIC],[1,A.WATER_GUN],[7,A.ASTONISH],[10,A.FOCUS_ENERGY],[13,A.AQUA_JET],[17,A.DOUBLE_HIT],[21,A.DIVE],[25,A.CHARM],[29,A.ACROBATICS],[34,A.ENCORE],[39,A.AQUA_TAIL],[44,A.MIST],[50,A.HYDRO_PUMP]],[e.PALAFIN]:[[k,A.FLIP_TURN],[1,A.SUPERSONIC],[1,A.WATER_GUN],[1,A.JET_PUNCH],[7,A.ASTONISH],[10,A.FOCUS_ENERGY],[13,A.AQUA_JET],[17,A.DOUBLE_HIT],[21,A.DIVE],[25,A.CHARM],[29,A.ACROBATICS],[34,A.ENCORE],[39,A.AQUA_TAIL],[44,A.MIST],[50,A.HYDRO_PUMP],[55,A.FOCUS_PUNCH],[61,A.WAVE_CRASH]],[e.VAROOM]:[[1,A.LICK],[1,A.POISON_GAS],[4,A.SMOG],[7,A.TAUNT],[10,A.ASSURANCE],[13,A.SLUDGE],[17,A.GYRO_BALL],[21,A.HEADBUTT],[25,A.SCREECH],[28,A.IRON_HEAD],[32,A.SWAGGER],[36,A.POISON_JAB],[41,A.UPROAR],[46,A.SPIN_OUT],[50,A.GUNK_SHOT]],[e.REVAVROOM]:[[k,A.SHIFT_GEAR],[1,A.LICK],[1,A.POISON_GAS],[1,A.MAGNET_RISE],[4,A.SMOG],[7,A.TAUNT],[10,A.ASSURANCE],[13,A.SLUDGE],[17,A.GYRO_BALL],[21,A.HEADBUTT],[25,A.SCREECH],[28,A.IRON_HEAD],[32,A.SWAGGER],[36,A.POISON_JAB],[46,A.UPROAR],[52,A.SPIN_OUT],[58,A.GUNK_SHOT]],[e.CYCLIZAR]:[[1,A.TACKLE],[1,A.GROWL],[7,A.RAPID_SPIN],[11,A.TAUNT],[14,A.BREAKING_SWIPE],[18,A.QUICK_ATTACK],[23,A.BITE],[27,A.U_TURN],[31,A.SHED_TAIL],[36,A.DRAGON_CLAW],[40,A.SHIFT_GEAR],[45,A.DRAGON_PULSE],[51,A.DOUBLE_EDGE],[57,A.DRAGON_RUSH]],[e.ORTHWORM]:[[1,A.TACKLE],[1,A.WRAP],[1,A.HARDEN],[7,A.MUD_SLAP],[12,A.SMACK_DOWN],[16,A.BULLDOZE],[21,A.IRON_HEAD],[26,A.TAKE_DOWN],[30,A.DIG],[34,A.SANDSTORM],[38,A.IRON_DEFENSE],[43,A.IRON_TAIL],[47,A.EARTHQUAKE],[52,A.SHED_TAIL]],[e.GLIMMET]:[[1,A.ROCK_THROW],[1,A.HARDEN],[1,A.SMACK_DOWN],[7,A.ACID_SPRAY],[11,A.ANCIENT_POWER],[15,A.ROCK_POLISH],[18,A.STEALTH_ROCK],[22,A.VENOSHOCK],[26,A.SANDSTORM],[29,A.SELF_DESTRUCT],[33,A.ROCK_SLIDE],[37,A.POWER_GEM],[41,A.ACID_ARMOR],[46,A.SLUDGE_WAVE]],[e.GLIMMORA]:[[k,A.MORTAL_SPIN],[1,A.ROCK_THROW],[1,A.HARDEN],[1,A.TOXIC_SPIKES],[1,A.SMACK_DOWN],[1,A.SPIKY_SHIELD],[7,A.ACID_SPRAY],[11,A.ANCIENT_POWER],[15,A.ROCK_POLISH],[18,A.STEALTH_ROCK],[22,A.VENOSHOCK],[26,A.SANDSTORM],[29,A.SELF_DESTRUCT],[33,A.ROCK_SLIDE],[39,A.POWER_GEM],[44,A.ACID_ARMOR],[50,A.SLUDGE_WAVE]],[e.GREAVARD]:[[1,A.TACKLE],[1,A.GROWL],[3,A.LICK],[6,A.TAIL_WHIP],[6,A.BITE],[9,A.ROAR],[12,A.HEADBUTT],[16,A.DIG],[24,A.REST],[28,A.CRUNCH],[32,A.PLAY_ROUGH],[37,A.HELPING_HAND],[41,A.PHANTOM_FORCE],[46,A.CHARM],[52,A.DOUBLE_EDGE]],[e.HOUNDSTONE]:[[k,A.LAST_RESPECTS],[1,A.TACKLE],[1,A.GROWL],[3,A.LICK],[6,A.TAIL_WHIP],[6,A.BITE],[9,A.ROAR],[12,A.HEADBUTT],[16,A.DIG],[24,A.REST],[28,A.CRUNCH],[36,A.PLAY_ROUGH],[41,A.HELPING_HAND],[46,A.PHANTOM_FORCE],[51,A.CHARM],[58,A.DOUBLE_EDGE]],[e.FLAMIGO]:[[1,A.PECK],[1,A.COPYCAT],[5,A.DOUBLE_KICK],[9,A.DETECT],[12,A.WING_ATTACK],[15,A.FOCUS_ENERGY],[18,A.LOW_KICK],[21,A.FEINT],[27,A.PAYBACK],[31,A.ROOST],[35,A.AIR_SLASH],[39,A.MEGA_KICK],[44,A.WIDE_GUARD],[48,A.THROAT_CHOP],[54,A.BRAVE_BIRD]],[e.CETODDLE]:[[1,A.TACKLE],[1,A.POWDER_SNOW],[6,A.GROWL],[9,A.ECHOED_VOICE],[12,A.ICE_SHARD],[15,A.REST],[19,A.TAKE_DOWN],[25,A.FLAIL],[27,A.AVALANCHE],[31,A.BOUNCE],[36,A.BODY_SLAM],[40,A.AMNESIA],[44,A.ICE_SPINNER],[49,A.DOUBLE_EDGE],[53,A.BLIZZARD]],[e.CETITAN]:[[1,A.TACKLE],[1,A.POWDER_SNOW],[6,A.GROWL],[9,A.ECHOED_VOICE],[12,A.ICE_SHARD],[15,A.REST],[19,A.TAKE_DOWN],[25,A.FLAIL],[27,A.AVALANCHE],[31,A.BOUNCE],[36,A.BODY_SLAM],[40,A.AMNESIA],[44,A.ICE_SPINNER],[49,A.DOUBLE_EDGE],[53,A.BLIZZARD]],[e.VELUZA]:[[1,A.TACKLE],[1,A.AQUA_JET],[7,A.PLUCK],[11,A.WATER_PULSE],[15,A.FOCUS_ENERGY],[20,A.SLASH],[25,A.AQUA_CUTTER],[30,A.FILLET_AWAY],[35,A.NIGHT_SLASH],[40,A.PSYCHO_CUT],[45,A.LIQUIDATION],[50,A.CRUNCH],[55,A.FINAL_GAMBIT]],[e.DONDOZO]:[[1,A.TACKLE],[1,A.SUPERSONIC],[1,A.WATER_GUN],[5,A.TICKLE],[10,A.FLAIL],[15,A.REST],[15,A.SLEEP_TALK],[20,A.DIVE],[25,A.NOBLE_ROAR],[30,A.SOAK],[35,A.BODY_SLAM],[40,A.AQUA_TAIL],[45,A.RAIN_DANCE],[50,A.ORDER_UP],[55,A.HEAVY_SLAM],[60,A.DOUBLE_EDGE],[65,A.WAVE_CRASH]],[e.TATSUGIRI]:[[1,A.WATER_GUN],[1,A.SPLASH],[6,A.HARDEN],[12,A.HELPING_HAND],[17,A.WATER_PULSE],[23,A.SOAK],[28,A.TAUNT],[34,A.MEMENTO],[39,A.MUDDY_WATER],[43,A.NASTY_PLOT],[47,A.MIRROR_COAT],[52,A.DRAGON_PULSE]],[e.ANNIHILAPE]:[[k,A.SHADOW_PUNCH],[1,A.SCRATCH],[1,A.LEER],[1,A.COUNTER],[1,A.FOCUS_ENERGY],[1,A.COVET],[1,A.FLING],[5,A.FURY_SWIPES],[8,A.LOW_KICK],[12,A.SEISMIC_TOSS],[17,A.SWAGGER],[22,A.CROSS_CHOP],[26,A.ASSURANCE],[30,A.THRASH],[35,A.RAGE_FIST],[39,A.CLOSE_COMBAT],[44,A.SCREECH],[48,A.STOMPING_TANTRUM],[53,A.OUTRAGE],[57,A.FINAL_GAMBIT]],[e.CLODSIRE]:[[k,A.AMNESIA],[1,A.TACKLE],[1,A.TAIL_WHIP],[1,A.POISON_STING],[4,A.TOXIC_SPIKES],[8,A.MUD_SHOT],[12,A.POISON_TAIL],[16,A.SLAM],[21,A.YAWN],[24,A.POISON_JAB],[30,A.SLUDGE_WAVE],[36,A.MEGAHORN],[40,A.TOXIC],[48,A.EARTHQUAKE]],[e.FARIGIRAF]:[[1,A.TACKLE],[1,A.GROWL],[1,A.ASTONISH],[1,A.POWER_SWAP],[1,A.GUARD_SWAP],[5,A.CONFUSION],[10,A.ASSURANCE],[14,A.STOMP],[19,A.PSYBEAM],[23,A.AGILITY],[28,A.DOUBLE_HIT],[32,A.TWIN_BEAM],[37,A.CRUNCH],[41,A.BATON_PASS],[46,A.NASTY_PLOT],[50,A.PSYCHIC]],[e.DUDUNSPARCE]:[[1,A.DEFENSE_CURL],[1,A.FLAIL],[1,A.TACKLE],[4,A.MUD_SLAP],[8,A.ROLLOUT],[12,A.GLARE],[16,A.SCREECH],[20,A.ANCIENT_POWER],[24,A.DRILL_RUN],[28,A.YAWN],[32,A.HYPER_DRILL],[36,A.ROOST],[40,A.DRAGON_RUSH],[44,A.COIL],[48,A.DOUBLE_EDGE],[52,A.ENDEAVOR],[56,A.HURRICANE],[62,A.BOOMBURST]],[e.KINGAMBIT]:[[k,A.KOWTOW_CLEAVE],[1,A.SCRATCH],[1,A.LEER],[1,A.FURY_CUTTER],[1,A.METAL_CLAW],[1,A.METAL_BURST],[15,A.TORMENT],[20,A.SCARY_FACE],[25,A.ASSURANCE],[30,A.METAL_SOUND],[35,A.SLASH],[40,A.NIGHT_SLASH],[45,A.IRON_DEFENSE],[50,A.RETALIATE],[57,A.IRON_HEAD],[64,A.SWORDS_DANCE],[71,A.GUILLOTINE]],[e.GREAT_TUSK]:[[1,A.HORN_ATTACK],[1,A.DEFENSE_CURL],[1,A.ROLLOUT],[1,A.SUNNY_DAY],[7,A.BULLDOZE],[14,A.TAUNT],[21,A.RAPID_SPIN],[28,A.BRICK_BREAK],[35,A.STOMPING_TANTRUM],[42,A.KNOCK_OFF],[49,A.EARTHQUAKE],[56,A.GIGA_IMPACT],[63,A.CLOSE_COMBAT],[70,A.ENDEAVOR],[77,A.MEGAHORN],[84,A.HEAD_SMASH],[91,A.HEADLONG_RUSH]],[e.SCREAM_TAIL]:[[V,A.SUNNY_DAY],[1,A.POUND],[1,A.SING],[1,A.DISABLE],[7,A.HOWL],[14,A.NOBLE_ROAR],[21,A.BITE],[28,A.BODY_SLAM],[35,A.REST],[42,A.PLAY_ROUGH],[49,A.HYPER_VOICE],[56,A.PSYCHIC_FANGS],[63,A.CRUNCH],[70,A.WISH],[77,A.GYRO_BALL],[84,A.PERISH_SONG],[91,A.BOOMBURST]],[e.BRUTE_BONNET]:[[V,A.SUNNY_DAY],[1,A.ABSORB],[1,A.GROWTH],[1,A.ASTONISH],[7,A.STUN_SPORE],[14,A.MEGA_DRAIN],[21,A.SYNTHESIS],[28,A.CLEAR_SMOG],[35,A.PAYBACK],[42,A.THRASH],[49,A.GIGA_DRAIN],[56,A.SUCKER_PUNCH],[63,A.SPORE],[70,A.INGRAIN],[77,A.RAGE_POWDER],[91,A.SOLAR_BEAM]],[e.FLUTTER_MANE]:[[V,A.SUNNY_DAY],[1,A.CONFUSE_RAY],[1,A.SPITE],[1,A.ASTONISH],[1,A.PSYBEAM],[14,A.MEAN_LOOK],[21,A.MEMENTO],[28,A.WISH],[35,A.DAZZLING_GLEAM],[42,A.SHADOW_BALL],[49,A.MYSTICAL_FIRE],[56,A.POWER_GEM],[63,A.PSYSHOCK],[70,A.PHANTOM_FORCE],[77,A.PAIN_SPLIT],[84,A.MOONBLAST],[91,A.PERISH_SONG]],[e.SLITHER_WING]:[[V,A.SUNNY_DAY],[1,A.GUST],[1,A.EMBER],[1,A.BUG_BITE],[7,A.POISON_POWDER],[7,A.STUN_SPORE],[14,A.FLAME_CHARGE],[21,A.STOMP],[28,A.LOW_SWEEP],[35,A.MORNING_SUN],[42,A.LUNGE],[49,A.SUPERPOWER],[56,A.BULK_UP],[63,A.DUAL_WINGBEAT],[70,A.FIRST_IMPRESSION],[77,A.WHIRLWIND],[84,A.LEECH_LIFE],[91,A.THRASH]],[e.SANDY_SHOCKS]:[[V,A.SUNNY_DAY],[1,A.SUPERSONIC],[1,A.THUNDER_SHOCK],[1,A.THUNDER_WAVE],[1,A.ELECTRIC_TERRAIN],[7,A.SPARK],[14,A.BULLDOZE],[21,A.CHARGE_BEAM],[28,A.TRI_ATTACK],[35,A.SCREECH],[42,A.HEAVY_SLAM],[49,A.METAL_SOUND],[56,A.DISCHARGE],[63,A.EARTH_POWER],[70,A.MIRROR_COAT],[77,A.GRAVITY],[84,A.ZAP_CANNON],[91,A.MAGNETIC_FLUX]],[e.IRON_TREADS]:[[1,A.HORN_ATTACK],[1,A.DEFENSE_CURL],[1,A.ROLLOUT],[1,A.ELECTRIC_TERRAIN],[7,A.BULLDOZE],[21,A.RAPID_SPIN],[28,A.IRON_HEAD],[35,A.STOMPING_TANTRUM],[42,A.KNOCK_OFF],[49,A.EARTHQUAKE],[56,A.HEAVY_SLAM],[63,A.WILD_CHARGE],[70,A.ENDEAVOR],[77,A.MEGAHORN],[84,A.GIGA_IMPACT],[91,A.STEEL_ROLLER]],[e.IRON_BUNDLE]:[[V,A.ELECTRIC_TERRAIN],[1,A.PRESENT],[1,A.WATER_GUN],[7,A.POWDER_SNOW],[14,A.WHIRLPOOL],[21,A.TAKE_DOWN],[28,A.DRILL_PECK],[35,A.HELPING_HAND],[42,A.FREEZE_DRY],[49,A.FLIP_TURN],[56,A.ICE_BEAM],[63,A.AGILITY],[70,A.SNOWSCAPE],[77,A.HYDRO_PUMP],[84,A.AURORA_VEIL],[91,A.BLIZZARD]],[e.IRON_HANDS]:[[V,A.ELECTRIC_TERRAIN],[1,A.SAND_ATTACK],[1,A.TACKLE],[1,A.FOCUS_ENERGY],[1,A.ARM_THRUST],[7,A.FAKE_OUT],[14,A.WHIRLWIND],[21,A.THUNDER_PUNCH],[28,A.SLAM],[35,A.FORCE_PALM],[42,A.SEISMIC_TOSS],[49,A.CHARGE],[56,A.WILD_CHARGE],[63,A.CLOSE_COMBAT],[70,A.DETECT],[77,A.HEAVY_SLAM],[84,A.BELLY_DRUM],[91,A.FOCUS_PUNCH]],[e.IRON_JUGULIS]:[[V,A.ELECTRIC_TERRAIN],[1,A.FOCUS_ENERGY],[1,A.TRI_ATTACK],[1,A.AIR_CUTTER],[1,A.WORK_UP],[1,A.ELECTRIC_TERRAIN],[7,A.ROAR],[14,A.ASSURANCE],[21,A.DRAGON_BREATH],[28,A.SNARL],[35,A.CRUNCH],[42,A.HYPER_VOICE],[56,A.AIR_SLASH],[63,A.KNOCK_OFF],[70,A.DARK_PULSE],[77,A.OUTRAGE],[84,A.DRAGON_PULSE],[91,A.HYPER_BEAM]],[e.IRON_MOTH]:[[V,A.ELECTRIC_TERRAIN],[1,A.GUST],[1,A.WHIRLWIND],[1,A.EMBER],[1,A.ACID_SPRAY],[7,A.STRUGGLE_BUG],[14,A.FIRE_SPIN],[21,A.TAKE_DOWN],[28,A.LUNGE],[35,A.SCREECH],[42,A.DISCHARGE],[49,A.SLUDGE_WAVE],[56,A.FIERY_DANCE],[63,A.METAL_SOUND],[70,A.MORNING_SUN],[77,A.HURRICANE],[84,A.BUG_BUZZ],[91,A.OVERHEAT]],[e.IRON_THORNS]:[[V,A.ELECTRIC_TERRAIN],[1,A.ROCK_THROW],[1,A.IRON_DEFENSE],[1,A.THUNDER_FANG],[1,A.ICE_FANG],[1,A.FIRE_FANG],[7,A.SCREECH],[21,A.ROCK_TOMB],[28,A.BITE],[35,A.CHARGE],[42,A.ROCK_SLIDE],[49,A.SANDSTORM],[56,A.WILD_CHARGE],[63,A.PIN_MISSILE],[70,A.EARTHQUAKE],[77,A.STEALTH_ROCK],[84,A.STONE_EDGE],[91,A.GIGA_IMPACT]],[e.FRIGIBAX]:[[1,A.TACKLE],[1,A.LEER],[1,A.DRAGON_TAIL],[6,A.ICY_WIND],[12,A.DRAGON_BREATH],[18,A.FOCUS_ENERGY],[24,A.BITE],[29,A.ICE_FANG],[32,A.DRAGON_CLAW],[36,A.TAKE_DOWN],[40,A.ICE_BEAM],[44,A.CRUNCH],[48,A.ICICLE_CRASH]],[e.ARCTIBAX]:[[1,A.TACKLE],[1,A.LEER],[1,A.DRAGON_TAIL],[6,A.ICY_WIND],[12,A.DRAGON_BREATH],[18,A.FOCUS_ENERGY],[24,A.BITE],[29,A.ICE_FANG],[32,A.DRAGON_CLAW],[40,A.TAKE_DOWN],[45,A.ICE_BEAM],[50,A.CRUNCH],[55,A.ICICLE_CRASH]],[e.BAXCALIBUR]:[[k,A.GLAIVE_RUSH],[1,A.TACKLE],[1,A.LEER],[1,A.ICE_SHARD],[1,A.DRAGON_TAIL],[1,A.BREAKING_SWIPE],[1,A.SNOWSCAPE],[6,A.ICY_WIND],[12,A.DRAGON_BREATH],[18,A.FOCUS_ENERGY],[24,A.BITE],[29,A.ICE_FANG],[35,A.DRAGON_CLAW],[42,A.TAKE_DOWN],[48,A.ICE_BEAM],[55,A.CRUNCH],[62,A.ICICLE_CRASH]],[e.GIMMIGHOUL]:[[1,A.TACKLE],[1,A.ASTONISH]],[e.GHOLDENGO]:[[1,A.TACKLE],[1,A.ASTONISH],[7,A.NIGHT_SHADE],[14,A.CONFUSE_RAY],[21,A.SUBSTITUTE],[28,A.METAL_SOUND],[35,A.SHADOW_BALL],[42,A.RECOVER],[49,A.POWER_GEM],[56,A.MAKE_IT_RAIN],[63,A.NASTY_PLOT],[70,A.MEMENTO]],[e.WO_CHIEN]:[[1,A.ABSORB],[1,A.SPITE],[1,A.MEAN_LOOK],[5,A.TICKLE],[10,A.PAYBACK],[15,A.POISON_POWDER],[15,A.STUN_SPORE],[20,A.MEGA_DRAIN],[25,A.LEECH_SEED],[30,A.GROWTH],[35,A.INGRAIN],[40,A.DARK_PULSE],[45,A.GIGA_DRAIN],[50,A.RUINATION],[55,A.FOUL_PLAY],[60,A.POWER_WHIP],[65,A.GRASSY_TERRAIN],[70,A.KNOCK_OFF],[75,A.LEAF_STORM]],[e.CHIEN_PAO]:[[1,A.SPITE],[1,A.POWDER_SNOW],[1,A.MEAN_LOOK],[5,A.ICY_WIND],[10,A.PAYBACK],[15,A.MIST],[15,A.HAZE],[20,A.ICE_SHARD],[25,A.SWORDS_DANCE],[30,A.SNOWSCAPE],[35,A.NIGHT_SLASH],[40,A.DARK_PULSE],[45,A.ICICLE_CRASH],[50,A.RUINATION],[55,A.SUCKER_PUNCH],[60,A.SACRED_SWORD],[65,A.RECOVER],[70,A.THROAT_CHOP],[75,A.SHEER_COLD]],[e.TING_LU]:[[1,A.SPITE],[1,A.MEAN_LOOK],[1,A.SAND_TOMB],[5,A.SPIKES],[10,A.PAYBACK],[15,A.STOMP],[20,A.BULLDOZE],[25,A.WHIRLWIND],[30,A.TAUNT],[35,A.THRASH],[40,A.DARK_PULSE],[45,A.STOMPING_TANTRUM],[50,A.RUINATION],[55,A.THROAT_CHOP],[60,A.ROCK_SLIDE],[65,A.MEMENTO],[70,A.EARTHQUAKE],[75,A.FISSURE]],[e.CHI_YU]:[[1,A.EMBER],[1,A.SPITE],[1,A.MEAN_LOOK],[5,A.FLAME_WHEEL],[10,A.PAYBACK],[15,A.WILL_O_WISP],[20,A.FLAME_CHARGE],[25,A.INCINERATE],[30,A.CONFUSE_RAY],[35,A.NASTY_PLOT],[40,A.DARK_PULSE],[45,A.LAVA_PLUME],[50,A.RUINATION],[55,A.BOUNCE],[60,A.SWAGGER],[65,A.INFERNO],[70,A.MEMENTO],[75,A.OVERHEAT]],[e.ROARING_MOON]:[[V,A.SUNNY_DAY],[V,A.JAW_LOCK],[V,A.BREAKING_SWIPE],[V,A.SCALE_SHOT],[1,A.LEER],[1,A.BITE],[1,A.FOCUS_ENERGY],[1,A.DRAGON_BREATH],[7,A.INCINERATE],[14,A.HEADBUTT],[21,A.SCARY_FACE],[28,A.DRAGON_CLAW],[35,A.ZEN_HEADBUTT],[42,A.FLAMETHROWER],[49,A.NIGHT_SLASH],[56,A.DRAGON_DANCE],[63,A.DRAGON_RUSH],[70,A.FLY],[77,A.THROAT_CHOP],[84,A.ROOST],[91,A.DOUBLE_EDGE]],[e.IRON_VALIANT]:[[V,A.ELECTRIC_TERRAIN],[1,A.DISABLE],[1,A.DOUBLE_TEAM],[1,A.FURY_CUTTER],[1,A.SHADOW_SNEAK],[7,A.HYPNOSIS],[14,A.FEINT],[21,A.FUTURE_SIGHT],[28,A.DAZZLING_GLEAM],[35,A.PSYCHO_CUT],[42,A.NIGHT_SLASH],[49,A.LEAF_BLADE],[56,A.MOONBLAST],[63,A.CLOSE_COMBAT],[70,A.KNOCK_OFF],[77,A.DESTINY_BOND],[84,A.WIDE_GUARD],[84,A.QUICK_GUARD],[91,A.SPIRIT_BREAK]],[e.KORAIDON]:[[1,A.SUNNY_DAY],[1,A.BREAKING_SWIPE],[7,A.ROCK_SMASH],[14,A.ANCIENT_POWER],[21,A.DRAIN_PUNCH],[28,A.BRICK_BREAK],[35,A.AGILITY],[42,A.DRAGON_CLAW],[49,A.FLAMETHROWER],[56,A.COLLISION_COURSE],[63,A.SCREECH],[70,A.COUNTER],[77,A.OUTRAGE],[84,A.CLOSE_COMBAT],[91,A.FLARE_BLITZ],[98,A.GIGA_IMPACT]],[e.MIRAIDON]:[[1,A.THUNDER_SHOCK],[1,A.DRAGON_BREATH],[1,A.ELECTRIC_TERRAIN],[7,A.SHOCK_WAVE],[14,A.CHARGE],[21,A.PARABOLIC_CHARGE],[28,A.DISCHARGE],[35,A.AGILITY],[42,A.DRAGON_PULSE],[56,A.ELECTRO_DRIFT],[63,A.METAL_SOUND],[70,A.MIRROR_COAT],[77,A.OUTRAGE],[84,A.THUNDER],[91,A.OVERHEAT],[98,A.HYPER_BEAM]],[e.WALKING_WAKE]:[[V,A.SUNNY_DAY],[V,A.HONE_CLAWS],[1,A.LEER],[1,A.ROAR],[1,A.TWISTER],[1,A.AQUA_JET],[7,A.BITE],[14,A.WATER_PULSE],[21,A.NOBLE_ROAR],[28,A.DRAGON_BREATH],[35,A.BREAKING_SWIPE],[42,A.DRAGON_RUSH],[56,A.HYDRO_STEAM],[63,A.DRAGON_PULSE],[70,A.OUTRAGE],[77,A.FLAMETHROWER],[84,A.HYDRO_PUMP]],[e.IRON_LEAVES]:[[V,A.ELECTRIC_TERRAIN],[V,A.QUASH],[1,A.LEER],[1,A.QUICK_ATTACK],[1,A.HELPING_HAND],[1,A.WORK_UP],[7,A.MAGICAL_LEAF],[14,A.RETALIATE],[21,A.QUICK_GUARD],[28,A.NIGHT_SLASH],[35,A.SWORDS_DANCE],[42,A.SACRED_SWORD],[49,A.LEAF_BLADE],[56,A.PSYBLADE],[63,A.CLOSE_COMBAT],[70,A.IMPRISON],[77,A.MEGAHORN],[84,A.ALLY_SWITCH],[91,A.SOLAR_BLADE]],[e.DIPPLIN]:[[k,A.DOUBLE_HIT],[V,A.DRAGON_CHEER],[1,A.LEAFAGE],[1,A.WITHDRAW],[1,A.SWEET_SCENT],[1,A.RECYCLE],[1,A.ASTONISH],[4,A.DRAGON_TAIL],[8,A.GROWTH],[12,A.DRAGON_BREATH],[16,A.PROTECT],[20,A.BULLET_SEED],[28,A.SYRUP_BOMB],[32,A.DRAGON_PULSE],[36,A.RECOVER],[40,A.ENERGY_BALL],[44,A.SUBSTITUTE]],[e.POLTCHAGEIST]:[[1,A.STUN_SPORE],[1,A.WITHDRAW],[1,A.ASTONISH],[5,A.ABSORB],[12,A.LIFE_DEW],[18,A.FOUL_PLAY],[24,A.MEGA_DRAIN],[30,A.HEX],[36,A.RAGE_POWDER],[42,A.GIGA_DRAIN],[48,A.SHADOW_BALL],[54,A.MEMENTO],[60,A.LEAF_STORM]],[e.SINISTCHA]:[[k,A.MATCHA_GOTCHA],[V,A.GIGA_DRAIN],[1,A.STUN_SPORE],[1,A.WITHDRAW],[1,A.ASTONISH],[6,A.ABSORB],[12,A.LIFE_DEW],[18,A.FOUL_PLAY],[24,A.MEGA_DRAIN],[30,A.HEX],[36,A.RAGE_POWDER],[42,A.STRENGTH_SAP],[48,A.SHADOW_BALL],[54,A.MEMENTO],[60,A.LEAF_STORM]],[e.OKIDOGI]:[[1,A.BITE],[1,A.LOW_KICK],[1,A.BULK_UP],[8,A.HOWL],[16,A.POISON_FANG],[24,A.FORCE_PALM],[32,A.COUNTER],[40,A.POISON_JAB],[48,A.BRUTAL_SWING],[56,A.CRUNCH],[64,A.SUPERPOWER],[72,A.GIGA_IMPACT]],[e.MUNKIDORI]:[[1,A.SCRATCH],[1,A.CONFUSION],[1,A.FAKE_OUT],[1,A.FLATTER],[8,A.HELPING_HAND],[16,A.PSYBEAM],[24,A.CLEAR_SMOG],[32,A.POISON_JAB],[40,A.PSYCHIC],[48,A.SLUDGE_WAVE],[56,A.NASTY_PLOT],[64,A.FUTURE_SIGHT],[72,A.PARTING_SHOT]],[e.FEZANDIPITI]:[[1,A.DOUBLE_KICK],[1,A.PECK],[1,A.POISON_GAS],[1,A.DISARMING_VOICE],[8,A.QUICK_ATTACK],[16,A.ATTRACT],[24,A.WING_ATTACK],[32,A.CROSS_POISON],[40,A.TAIL_SLAP],[48,A.BEAT_UP],[56,A.SWAGGER],[56,A.FLATTER],[64,A.ROOST],[72,A.MOONBLAST]],[e.OGERPON]:[[V,A.DOUBLE_KICK],[V,A.COUNTER],[V,A.RETALIATE],[V,A.HORN_LEECH],[1,A.VINE_WHIP],[1,A.LEECH_SEED],[1,A.QUICK_ATTACK],[1,A.FOLLOW_ME],[6,A.FOCUS_ENERGY],[12,A.GROWTH],[18,A.SLAM],[24,A.LOW_SWEEP],[30,A.IVY_CUDGEL],[36,A.THROAT_CHOP],[42,A.SYNTHESIS],[48,A.SPIKY_SHIELD],[54,A.POWER_WHIP],[60,A.SUPERPOWER],[66,A.WOOD_HAMMER]],[e.ARCHALUDON]:[[k,A.ELECTRO_SHOT],[V,A.LASER_FOCUS],[1,A.LEER],[1,A.METAL_CLAW],[6,A.ROCK_SMASH],[12,A.HONE_CLAWS],[18,A.METAL_SOUND],[24,A.BREAKING_SWIPE],[30,A.DRAGON_TAIL],[36,A.IRON_DEFENSE],[42,A.FOCUS_ENERGY],[48,A.DRAGON_CLAW],[54,A.FLASH_CANNON],[60,A.METAL_BURST],[66,A.HYPER_BEAM]],[e.HYDRAPPLE]:[[k,A.FICKLE_BEAM],[V,A.YAWN],[V,A.DOUBLE_HIT],[V,A.INFESTATION],[V,A.DRAGON_CHEER],[1,A.LEAFAGE],[1,A.WITHDRAW],[1,A.SWEET_SCENT],[1,A.RECYCLE],[1,A.ASTONISH],[4,A.DRAGON_TAIL],[8,A.GROWTH],[12,A.DRAGON_BREATH],[16,A.PROTECT],[20,A.BULLET_SEED],[28,A.SYRUP_BOMB],[32,A.DRAGON_PULSE],[36,A.RECOVER],[40,A.ENERGY_BALL],[44,A.SUBSTITUTE],[54,A.POWER_WHIP]],[e.GOUGING_FIRE]:[[V,A.DOUBLE_KICK],[V,A.ANCIENT_POWER],[V,A.NOBLE_ROAR],[1,A.STOMP],[1,A.LEER],[1,A.INCINERATE],[1,A.SUNNY_DAY],[7,A.FIRE_FANG],[14,A.HOWL],[21,A.BITE],[28,A.DRAGON_CLAW],[35,A.CRUSH_CLAW],[42,A.MORNING_SUN],[49,A.BURNING_BULWARK],[56,A.DRAGON_RUSH],[63,A.FIRE_BLAST],[70,A.LAVA_PLUME],[77,A.OUTRAGE],[84,A.FLARE_BLITZ],[91,A.RAGING_FURY]],[e.RAGING_BOLT]:[[V,A.ANCIENT_POWER],[1,A.TWISTER],[1,A.SUNNY_DAY],[1,A.SHOCK_WAVE],[1,A.STOMP],[7,A.CHARGE],[14,A.DRAGON_BREATH],[21,A.ELECTRIC_TERRAIN],[28,A.DISCHARGE],[35,A.DRAGON_TAIL],[42,A.CALM_MIND],[49,A.THUNDERCLAP],[56,A.DRAGON_HAMMER],[63,A.RISING_VOLTAGE],[70,A.DRAGON_PULSE],[77,A.ZAP_CANNON],[84,A.BODY_PRESS],[91,A.THUNDER]],[e.IRON_BOULDER]:[[1,A.HORN_ATTACK],[1,A.LEER],[1,A.ROCK_THROW],[1,A.ELECTRIC_TERRAIN],[7,A.QUICK_ATTACK],[14,A.SLASH],[21,A.AGILITY],[28,A.PSYCHO_CUT],[35,A.COUNTER],[42,A.ROCK_TOMB],[49,A.SACRED_SWORD],[56,A.MIGHTY_CLEAVE],[63,A.SWORDS_DANCE],[70,A.MEGAHORN],[77,A.QUICK_GUARD],[84,A.STONE_EDGE],[91,A.GIGA_IMPACT]],[e.IRON_CROWN]:[[1,A.LEER],[1,A.ELECTRIC_TERRAIN],[1,A.CONFUSION],[1,A.METAL_CLAW],[7,A.SMART_STRIKE],[14,A.SLASH],[21,A.IRON_DEFENSE],[28,A.PSYSHOCK],[35,A.PSYCHO_CUT],[42,A.FLASH_CANNON],[49,A.SACRED_SWORD],[56,A.TACHYON_CUTTER],[63,A.FUTURE_SIGHT],[70,A.VOLT_SWITCH],[77,A.QUICK_GUARD],[84,A.METAL_BURST],[91,A.HYPER_BEAM]],[e.TERAPAGOS]:[[1,A.WITHDRAW],[1,A.TRI_ATTACK],[1,A.RAPID_SPIN],[10,A.ANCIENT_POWER],[20,A.HEADBUTT],[30,A.PROTECT],[40,A.EARTH_POWER],[50,A.HEAVY_SLAM],[60,A.TERA_STARSTORM],[70,A.DOUBLE_EDGE],[80,A.ROCK_POLISH],[90,A.GYRO_BALL]],[e.PECHARUNT]:[[V,A.DEFENSE_CURL],[V,A.ROLLOUT],[V,A.MEAN_LOOK],[1,A.SMOG],[1,A.POISON_GAS],[1,A.MEMENTO],[1,A.ASTONISH],[8,A.WITHDRAW],[16,A.DESTINY_BOND],[24,A.FAKE_TEARS],[32,A.PARTING_SHOT],[40,A.SHADOW_BALL],[48,A.MALIGNANT_CHAIN],[56,A.TOXIC],[64,A.NASTY_PLOT],[72,A.RECOVER]],[e.ALOLA_RATTATA]:[[1,A.TACKLE],[1,A.TAIL_WHIP],[4,A.QUICK_ATTACK],[7,A.FOCUS_ENERGY],[10,A.BITE],[13,A.PURSUIT],[16,A.HYPER_FANG],[19,A.ASSURANCE],[22,A.CRUNCH],[25,A.SUCKER_PUNCH],[28,A.SUPER_FANG],[31,A.DOUBLE_EDGE],[34,A.ENDEAVOR]],[e.ALOLA_RATICATE]:[[k,A.SCARY_FACE],[1,A.SWORDS_DANCE],[1,A.TACKLE],[1,A.TAIL_WHIP],[1,A.QUICK_ATTACK],[1,A.FOCUS_ENERGY],[10,A.BITE],[13,A.PURSUIT],[16,A.HYPER_FANG],[19,A.ASSURANCE],[24,A.CRUNCH],[29,A.SUCKER_PUNCH],[34,A.SUPER_FANG],[39,A.DOUBLE_EDGE],[44,A.ENDEAVOR]],[e.ALOLA_RAICHU]:[[k,A.PSYCHIC],[k,A.ZIPPY_ZAP],[1,A.TAIL_WHIP],[1,A.GROWL],[1,A.THUNDER_SHOCK],[1,A.THUNDER_WAVE],[1,A.THUNDER],[1,A.AGILITY],[1,A.QUICK_ATTACK],[1,A.DOUBLE_TEAM],[1,A.LIGHT_SCREEN],[1,A.SWEET_KISS],[1,A.CHARM],[1,A.SPARK],[1,A.IRON_TAIL],[1,A.FEINT],[1,A.NASTY_PLOT],[1,A.DISCHARGE],[1,A.ELECTRO_BALL],[1,A.PLAY_NICE],[1,A.NUZZLE],[5,A.THUNDERBOLT],[50,A.PIKA_PAPOW]],[e.ALOLA_SANDSHREW]:[[1,A.SCRATCH],[1,A.DEFENSE_CURL],[3,A.MIST],[6,A.POWDER_SNOW],[9,A.ROLLOUT],[12,A.FURY_CUTTER],[15,A.RAPID_SPIN],[18,A.METAL_CLAW],[21,A.SWIFT],[24,A.FURY_SWIPES],[27,A.IRON_DEFENSE],[30,A.SLASH],[33,A.IRON_HEAD],[36,A.GYRO_BALL],[39,A.SWORDS_DANCE],[42,A.SNOWSCAPE],[45,A.BLIZZARD]],[e.ALOLA_SANDSLASH]:[[k,A.ICICLE_SPEAR],[V,A.SCRATCH],[V,A.MIST],[V,A.BLIZZARD],[V,A.DEFENSE_CURL],[V,A.SWIFT],[V,A.FURY_SWIPES],[V,A.POWDER_SNOW],[V,A.ROLLOUT],[V,A.FURY_CUTTER],[V,A.RAPID_SPIN],[V,A.IRON_DEFENSE],[V,A.GYRO_BALL],[V,A.METAL_BURST],[V,A.IRON_HEAD],[V,A.SNOWSCAPE],[1,A.ICICLE_CRASH],[1,A.METAL_CLAW],[1,A.SLASH],[1,A.SWORDS_DANCE],[1,A.ICE_BALL]],[e.ALOLA_VULPIX]:[[1,A.TAIL_WHIP],[1,A.POWDER_SNOW],[4,A.DISABLE],[8,A.ICE_SHARD],[12,A.SPITE],[16,A.ICY_WIND],[20,A.CONFUSE_RAY],[24,A.AURORA_BEAM],[28,A.EXTRASENSORY],[32,A.ICE_BEAM],[36,A.IMPRISON],[40,A.MIST],[44,A.AURORA_VEIL],[48,A.FREEZE_DRY],[52,A.BLIZZARD]],[e.ALOLA_NINETALES]:[[k,A.DAZZLING_GLEAM],[V,A.DISABLE],[V,A.MIST],[V,A.ICE_BEAM],[V,A.AURORA_BEAM],[V,A.CONFUSE_RAY],[V,A.SPITE],[V,A.POWDER_SNOW],[V,A.EXTRASENSORY],[V,A.NASTY_PLOT],[V,A.ICE_SHARD],[V,A.FREEZE_DRY],[V,A.AURORA_VEIL],[1,A.ICY_WIND],[1,A.IMPRISON],[1,A.BLIZZARD],[1,A.TAIL_WHIP]],[e.ALOLA_DIGLETT]:[[1,A.SAND_ATTACK],[1,A.METAL_CLAW],[4,A.GROWL],[8,A.ASTONISH],[12,A.MUD_SLAP],[16,A.BULLDOZE],[20,A.SUCKER_PUNCH],[24,A.IRON_HEAD],[28,A.SANDSTORM],[32,A.DIG],[36,A.EARTH_POWER],[40,A.EARTHQUAKE],[44,A.FISSURE]],[e.ALOLA_DUGTRIO]:[[k,A.SAND_TOMB],[1,A.SAND_ATTACK],[1,A.GROWL],[1,A.TRI_ATTACK],[1,A.METAL_CLAW],[1,A.ASTONISH],[1,A.NIGHT_SLASH],[1,A.ROTOTILLER],[12,A.MUD_SLAP],[16,A.BULLDOZE],[20,A.SUCKER_PUNCH],[24,A.IRON_HEAD],[30,A.SANDSTORM],[36,A.DIG],[42,A.EARTH_POWER],[48,A.EARTHQUAKE],[54,A.FISSURE]],[e.ALOLA_MEOWTH]:[[1,A.GROWL],[1,A.FAKE_OUT],[4,A.FEINT],[8,A.SCRATCH],[12,A.PAY_DAY],[16,A.BITE],[20,A.TAUNT],[24,A.ASSURANCE],[29,A.FURY_SWIPES],[32,A.SCREECH],[36,A.NIGHT_SLASH],[40,A.NASTY_PLOT],[44,A.PLAY_ROUGH]],[e.ALOLA_PERSIAN]:[[k,A.POWER_GEM],[1,A.SCRATCH],[1,A.GROWL],[1,A.FAKE_OUT],[1,A.FEINT],[1,A.SWITCHEROO],[1,A.QUASH],[12,A.PAY_DAY],[16,A.BITE],[20,A.TAUNT],[24,A.ASSURANCE],[31,A.FURY_SWIPES],[36,A.SCREECH],[42,A.NIGHT_SLASH],[48,A.NASTY_PLOT],[54,A.PLAY_ROUGH]],[e.ALOLA_GEODUDE]:[[1,A.TACKLE],[1,A.DEFENSE_CURL],[4,A.CHARGE],[6,A.ROCK_POLISH],[10,A.ROLLOUT],[12,A.SPARK],[16,A.ROCK_THROW],[18,A.SMACK_DOWN],[22,A.THUNDER_PUNCH],[24,A.SELF_DESTRUCT],[28,A.STEALTH_ROCK],[30,A.ROCK_BLAST],[34,A.DISCHARGE],[36,A.EXPLOSION],[40,A.DOUBLE_EDGE],[42,A.STONE_EDGE]],[e.ALOLA_GRAVELER]:[[1,A.TACKLE],[1,A.DEFENSE_CURL],[1,A.CHARGE],[1,A.ROCK_POLISH],[10,A.ROLLOUT],[12,A.SPARK],[16,A.ROCK_THROW],[18,A.SMACK_DOWN],[22,A.THUNDER_PUNCH],[24,A.SELF_DESTRUCT],[30,A.STEALTH_ROCK],[34,A.ROCK_BLAST],[40,A.DISCHARGE],[44,A.EXPLOSION],[50,A.DOUBLE_EDGE],[54,A.STONE_EDGE]],[e.ALOLA_GOLEM]:[[1,A.TACKLE],[1,A.DEFENSE_CURL],[1,A.CHARGE],[1,A.ROCK_POLISH],[1,A.ROLLOUT],[1,A.HEAVY_SLAM],[12,A.SPARK],[16,A.ROCK_THROW],[18,A.SMACK_DOWN],[22,A.THUNDER_PUNCH],[24,A.SELF_DESTRUCT],[30,A.STEALTH_ROCK],[34,A.ROCK_BLAST],[40,A.DISCHARGE],[44,A.EXPLOSION],[50,A.DOUBLE_EDGE],[54,A.STONE_EDGE]],[e.ALOLA_GRIMER]:[[1,A.POUND],[1,A.POISON_GAS],[4,A.HARDEN],[7,A.BITE],[12,A.DISABLE],[15,A.ACID_SPRAY],[18,A.POISON_FANG],[21,A.MINIMIZE],[26,A.TOXIC],[29,A.KNOCK_OFF],[32,A.CRUNCH],[37,A.SCREECH],[40,A.GUNK_SHOT],[43,A.ACID_ARMOR],[46,A.BELCH],[48,A.MEMENTO]],[e.ALOLA_MUK]:[[1,A.POUND],[1,A.BITE],[1,A.HARDEN],[1,A.POISON_GAS],[12,A.DISABLE],[15,A.ACID_SPRAY],[18,A.POISON_FANG],[21,A.MINIMIZE],[26,A.TOXIC],[29,A.KNOCK_OFF],[32,A.CRUNCH],[37,A.SCREECH],[40,A.GUNK_SHOT],[46,A.ACID_ARMOR],[52,A.BELCH],[57,A.MEMENTO]],[e.ALOLA_EXEGGUTOR]:[[k,A.DRAGON_HAMMER],[V,A.GROWTH],[1,A.BARRAGE],[1,A.SEED_BOMB],[1,A.PSYSHOCK],[1,A.WOOD_HAMMER],[1,A.LEAF_STORM],[1,A.MEGA_DRAIN],[1,A.CONFUSION],[1,A.SYNTHESIS],[1,A.BULLET_SEED],[1,A.GIGA_DRAIN],[1,A.EXTRASENSORY],[1,A.UPROAR],[1,A.WORRY_SEED],[1,A.SOLAR_BEAM],[1,A.ABSORB],[1,A.HYPNOSIS],[1,A.REFLECT],[1,A.LEECH_SEED]],[e.ALOLA_MAROWAK]:[[k,A.SHADOW_BONE],[1,A.BONE_CLUB],[1,A.HEADBUTT],[1,A.DOUBLE_EDGE],[1,A.TAIL_WHIP],[1,A.GROWL],[1,A.FIRE_SPIN],[1,A.FOCUS_ENERGY],[1,A.MUD_SLAP],[1,A.FALSE_SWIPE],[1,A.RETALIATE],[12,A.FLAME_WHEEL],[16,A.HEX],[20,A.FLING],[24,A.STOMPING_TANTRUM],[31,A.BONE_RUSH],[36,A.WILL_O_WISP],[42,A.ENDEAVOR],[48,A.BONEMERANG],[54,A.THRASH],[60,A.FLARE_BLITZ]],[e.ETERNAL_FLOETTE]:[[1,A.VINE_WHIP],[1,A.TACKLE],[1,A.FAIRY_WIND],[10,A.LUCKY_CHANT],[15,A.RAZOR_LEAF],[20,A.WISH],[25,A.MAGICAL_LEAF],[27,A.GRASSY_TERRAIN],[33,A.PETAL_BLIZZARD],[38,A.AROMATHERAPY],[43,A.MISTY_TERRAIN],[46,A.MOONBLAST],[50,A.LIGHT_OF_RUIN],[51,A.PETAL_DANCE],[58,A.SOLAR_BEAM]],[e.GALAR_MEOWTH]:[[1,A.GROWL],[1,A.FAKE_OUT],[4,A.HONE_CLAWS],[8,A.SCRATCH],[12,A.PAY_DAY],[16,A.METAL_CLAW],[20,A.TAUNT],[24,A.SWAGGER],[29,A.FURY_SWIPES],[32,A.SCREECH],[36,A.SLASH],[40,A.METAL_SOUND],[44,A.THRASH]],[e.GALAR_PONYTA]:[[1,A.TACKLE],[1,A.GROWL],[5,A.TAIL_WHIP],[10,A.CONFUSION],[15,A.FAIRY_WIND],[20,A.AGILITY],[25,A.PSYBEAM],[30,A.STOMP],[35,A.HEAL_PULSE],[41,A.TAKE_DOWN],[45,A.DAZZLING_GLEAM],[50,A.PSYCHIC],[55,A.HEALING_WISH]],[e.GALAR_RAPIDASH]:[[k,A.PSYCHO_CUT],[1,A.TACKLE],[1,A.TAIL_WHIP],[1,A.GROWL],[1,A.CONFUSION],[1,A.QUICK_ATTACK],[1,A.MEGAHORN],[15,A.FAIRY_WIND],[20,A.AGILITY],[25,A.PSYBEAM],[30,A.STOMP],[35,A.HEAL_PULSE],[43,A.TAKE_DOWN],[49,A.DAZZLING_GLEAM],[56,A.PSYCHIC],[63,A.HEALING_WISH]],[e.GALAR_SLOWPOKE]:[[1,A.TACKLE],[1,A.CURSE],[3,A.GROWL],[6,A.ACID],[9,A.YAWN],[12,A.CONFUSION],[15,A.DISABLE],[18,A.WATER_PULSE],[21,A.HEADBUTT],[24,A.ZEN_HEADBUTT],[27,A.AMNESIA],[30,A.SURF],[33,A.SLACK_OFF],[36,A.PSYCHIC],[39,A.PSYCH_UP],[42,A.RAIN_DANCE],[45,A.HEAL_PULSE]],[e.GALAR_SLOWBRO]:[[k,A.SHELL_SIDE_ARM],[1,A.TACKLE],[1,A.GROWL],[1,A.ACID],[1,A.WITHDRAW],[1,A.CURSE],[9,A.YAWN],[12,A.CONFUSION],[15,A.DISABLE],[18,A.WATER_PULSE],[21,A.HEADBUTT],[24,A.ZEN_HEADBUTT],[27,A.AMNESIA],[30,A.SURF],[33,A.SLACK_OFF],[36,A.PSYCHIC],[39,A.PSYCH_UP],[42,A.RAIN_DANCE],[45,A.HEAL_PULSE]],[e.GALAR_FARFETCHD]:[[1,A.SAND_ATTACK],[1,A.PECK],[5,A.LEER],[10,A.FURY_CUTTER],[15,A.ROCK_SMASH],[20,A.BRUTAL_SWING],[25,A.DETECT],[30,A.KNOCK_OFF],[35,A.DEFOG],[40,A.BRICK_BREAK],[45,A.SWORDS_DANCE],[50,A.SLAM],[55,A.LEAF_BLADE],[60,A.FINAL_GAMBIT],[65,A.BRAVE_BIRD]],[e.GALAR_WEEZING]:[[k,A.DOUBLE_HIT],[1,A.TACKLE],[1,A.SMOKESCREEN],[1,A.HAZE],[1,A.SMOG],[1,A.POISON_GAS],[1,A.HEAT_WAVE],[1,A.DEFOG],[1,A.AROMATIC_MIST],[1,A.STRANGE_STEAM],[12,A.CLEAR_SMOG],[16,A.ASSURANCE],[20,A.SLUDGE],[24,A.FAIRY_WIND],[28,A.SELF_DESTRUCT],[32,A.SLUDGE_BOMB],[38,A.TOXIC],[44,A.BELCH],[50,A.EXPLOSION],[56,A.MEMENTO],[62,A.DESTINY_BOND],[68,A.MISTY_TERRAIN]],[e.GALAR_MR_MIME]:[[1,A.POUND],[1,A.BARRIER],[1,A.TICKLE],[1,A.MIMIC],[1,A.LIGHT_SCREEN],[1,A.REFLECT],[1,A.PROTECT],[1,A.SAFEGUARD],[1,A.BATON_PASS],[1,A.ENCORE],[1,A.RAPID_SPIN],[1,A.ROLE_PLAY],[1,A.RECYCLE],[1,A.COPYCAT],[1,A.ICE_SHARD],[1,A.MISTY_TERRAIN],[1,A.DAZZLING_GLEAM],[12,A.CONFUSION],[16,A.ALLY_SWITCH],[20,A.ICY_WIND],[24,A.DOUBLE_KICK],[28,A.PSYBEAM],[32,A.HYPNOSIS],[36,A.MIRROR_COAT],[40,A.SUCKER_PUNCH],[44,A.FREEZE_DRY],[48,A.PSYCHIC],[52,A.TEETER_DANCE]],[e.GALAR_ARTICUNO]:[[1,A.GUST],[5,A.CONFUSION],[10,A.REFLECT],[15,A.HYPNOSIS],[20,A.AGILITY],[25,A.ANCIENT_POWER],[30,A.TAILWIND],[35,A.PSYCHO_CUT],[40,A.RECOVER],[45,A.FREEZING_GLARE],[50,A.DREAM_EATER],[55,A.HURRICANE],[60,A.DOUBLE_TEAM],[65,A.FUTURE_SIGHT],[70,A.TRICK_ROOM]],[e.GALAR_ZAPDOS]:[[1,A.PECK],[1,A.FOCUS_ENERGY],[5,A.ROCK_SMASH],[10,A.LIGHT_SCREEN],[15,A.PLUCK],[20,A.AGILITY],[25,A.ANCIENT_POWER],[30,A.BRICK_BREAK],[35,A.DRILL_PECK],[40,A.QUICK_GUARD],[45,A.THUNDEROUS_KICK],[50,A.BULK_UP],[55,A.COUNTER],[60,A.DETECT],[65,A.CLOSE_COMBAT],[70,A.REVERSAL]],[e.GALAR_MOLTRES]:[[1,A.GUST],[1,A.LEER],[5,A.PAYBACK],[10,A.SAFEGUARD],[15,A.WING_ATTACK],[20,A.AGILITY],[25,A.ANCIENT_POWER],[30,A.SUCKER_PUNCH],[35,A.AIR_SLASH],[40,A.AFTER_YOU],[45,A.FIERY_WRATH],[50,A.NASTY_PLOT],[55,A.HURRICANE],[60,A.ENDURE],[65,A.MEMENTO],[70,A.SKY_ATTACK]],[e.GALAR_SLOWKING]:[[k,A.EERIE_SPELL],[V,A.FUTURE_SIGHT],[V,A.CHILLY_RECEPTION],[V,A.TOXIC],[1,A.POWER_GEM],[1,A.NASTY_PLOT],[1,A.SWAGGER],[1,A.TACKLE],[1,A.CURSE],[1,A.GROWL],[1,A.ACID],[9,A.YAWN],[12,A.CONFUSION],[15,A.DISABLE],[18,A.WATER_PULSE],[21,A.HEADBUTT],[24,A.ZEN_HEADBUTT],[27,A.AMNESIA],[30,A.SURF],[33,A.SLACK_OFF],[36,A.PSYCHIC],[39,A.PSYCH_UP],[42,A.RAIN_DANCE],[45,A.HEAL_PULSE]],[e.GALAR_CORSOLA]:[[1,A.TACKLE],[1,A.HARDEN],[5,A.ASTONISH],[10,A.DISABLE],[15,A.SPITE],[20,A.ANCIENT_POWER],[25,A.HEX],[30,A.CURSE],[35,A.STRENGTH_SAP],[40,A.POWER_GEM],[45,A.NIGHT_SHADE],[50,A.GRUDGE],[55,A.MIRROR_COAT]],[e.GALAR_ZIGZAGOON]:[[1,A.TACKLE],[1,A.LEER],[3,A.SAND_ATTACK],[6,A.LICK],[9,A.SNARL],[12,A.HEADBUTT],[15,A.BABY_DOLL_EYES],[18,A.PIN_MISSILE],[21,A.REST],[24,A.TAKE_DOWN],[27,A.SCARY_FACE],[30,A.COUNTER],[33,A.TAUNT],[36,A.DOUBLE_EDGE]],[e.GALAR_LINOONE]:[[k,A.NIGHT_SLASH],[1,A.SAND_ATTACK],[1,A.TACKLE],[1,A.PIN_MISSILE],[1,A.LEER],[1,A.LICK],[1,A.SWITCHEROO],[1,A.BABY_DOLL_EYES],[9,A.SNARL],[12,A.HEADBUTT],[15,A.HONE_CLAWS],[18,A.FURY_SWIPES],[23,A.REST],[28,A.TAKE_DOWN],[33,A.SCARY_FACE],[38,A.COUNTER],[43,A.TAUNT],[48,A.DOUBLE_EDGE]],[e.GALAR_DARUMAKA]:[[1,A.TACKLE],[1,A.POWDER_SNOW],[4,A.TAUNT],[8,A.BITE],[12,A.AVALANCHE],[16,A.WORK_UP],[20,A.ICE_FANG],[24,A.HEADBUTT],[28,A.ICE_PUNCH],[32,A.UPROAR],[36,A.BELLY_DRUM],[40,A.BLIZZARD],[44,A.THRASH],[48,A.SUPERPOWER]],[e.GALAR_DARMANITAN]:[[k,A.ICICLE_CRASH],[1,A.TACKLE],[1,A.BITE],[1,A.POWDER_SNOW],[1,A.TAUNT],[12,A.AVALANCHE],[16,A.WORK_UP],[20,A.ICE_FANG],[24,A.HEADBUTT],[28,A.ICE_PUNCH],[32,A.UPROAR],[38,A.BELLY_DRUM],[44,A.BLIZZARD],[50,A.THRASH],[56,A.SUPERPOWER]],[e.GALAR_YAMASK]:[[1,A.PROTECT],[1,A.ASTONISH],[4,A.HAZE],[8,A.NIGHT_SHADE],[12,A.DISABLE],[16,A.BRUTAL_SWING],[20,A.CRAFTY_SHIELD],[24,A.HEX],[28,A.MEAN_LOOK],[32,A.SLAM],[36,A.CURSE],[40,A.SHADOW_BALL],[44,A.EARTHQUAKE],[48,A.GUARD_SPLIT],[48,A.POWER_SPLIT],[52,A.DESTINY_BOND]],[e.GALAR_STUNFISK]:[[1,A.TACKLE],[1,A.WATER_GUN],[1,A.MUD_SLAP],[1,A.METAL_CLAW],[5,A.ENDURE],[10,A.MUD_SHOT],[15,A.REVENGE],[20,A.METAL_SOUND],[25,A.SUCKER_PUNCH],[30,A.IRON_DEFENSE],[35,A.BOUNCE],[40,A.MUDDY_WATER],[45,A.SNAP_TRAP],[50,A.FLAIL],[55,A.FISSURE]],[e.HISUI_GROWLITHE]:[[1,A.LEER],[1,A.EMBER],[4,A.HOWL],[8,A.BITE],[12,A.FLAME_WHEEL],[16,A.HELPING_HAND],[24,A.FIRE_FANG],[28,A.RETALIATE],[32,A.CRUNCH],[36,A.TAKE_DOWN],[40,A.FLAMETHROWER],[44,A.ROAR],[48,A.ROCK_SLIDE],[52,A.REVERSAL],[56,A.FLARE_BLITZ]],[e.HISUI_ARCANINE]:[[k,A.EXTREME_SPEED],[1,A.TAKE_DOWN],[1,A.LEER],[1,A.BITE],[1,A.ROAR],[1,A.EMBER],[1,A.ROCK_THROW],[1,A.AGILITY],[1,A.ROCK_SLIDE],[1,A.FLAME_WHEEL],[1,A.REVERSAL],[1,A.CRUNCH],[1,A.HELPING_HAND],[1,A.HOWL],[1,A.FLARE_BLITZ],[1,A.FIRE_FANG],[1,A.RETALIATE],[5,A.FLAMETHROWER],[64,A.RAGING_FURY]],[e.HISUI_VOLTORB]:[[1,A.TACKLE],[1,A.CHARGE],[4,A.THUNDER_SHOCK],[6,A.STUN_SPORE],[9,A.BULLET_SEED],[11,A.ROLLOUT],[13,A.SCREECH],[16,A.CHARGE_BEAM],[20,A.SWIFT],[22,A.ELECTRO_BALL],[26,A.SELF_DESTRUCT],[29,A.ENERGY_BALL],[34,A.SEED_BOMB],[34,A.DISCHARGE],[41,A.EXPLOSION],[46,A.GYRO_BALL],[50,A.GRASSY_TERRAIN]],[e.HISUI_ELECTRODE]:[[k,A.CHLOROBLAST],[1,A.TACKLE],[1,A.CHARGE],[4,A.THUNDER_SHOCK],[6,A.STUN_SPORE],[9,A.BULLET_SEED],[11,A.ROLLOUT],[13,A.SCREECH],[16,A.CHARGE_BEAM],[20,A.SWIFT],[22,A.ELECTRO_BALL],[26,A.SELF_DESTRUCT],[29,A.ENERGY_BALL],[34,A.SEED_BOMB],[34,A.DISCHARGE],[41,A.EXPLOSION],[46,A.GYRO_BALL],[50,A.GRASSY_TERRAIN]],[e.HISUI_TYPHLOSION]:[[k,A.INFERNAL_PARADE],[1,A.TACKLE],[1,A.DOUBLE_EDGE],[1,A.LEER],[1,A.EMBER],[1,A.SMOKESCREEN],[1,A.ERUPTION],[1,A.GYRO_BALL],[13,A.QUICK_ATTACK],[20,A.FLAME_WHEEL],[24,A.DEFENSE_CURL],[31,A.SWIFT],[35,A.FLAME_CHARGE],[43,A.LAVA_PLUME],[48,A.FLAMETHROWER],[56,A.INFERNO],[61,A.ROLLOUT],[74,A.OVERHEAT]],[e.HISUI_QWILFISH]:[[1,A.TACKLE],[1,A.POISON_STING],[4,A.HARDEN],[8,A.BITE],[12,A.FELL_STINGER],[16,A.MINIMIZE],[20,A.SPIKES],[24,A.BRINE],[28,A.BARB_BARRAGE],[32,A.PIN_MISSILE],[36,A.TOXIC_SPIKES],[40,A.STOCKPILE],[40,A.SPIT_UP],[44,A.TOXIC],[48,A.CRUNCH],[52,A.ACUPRESSURE],[56,A.DESTINY_BOND]],[e.HISUI_SNEASEL]:[[1,A.SCRATCH],[1,A.LEER],[1,A.ROCK_SMASH],[6,A.TAUNT],[12,A.QUICK_ATTACK],[18,A.METAL_CLAW],[24,A.POISON_JAB],[30,A.BRICK_BREAK],[36,A.HONE_CLAWS],[42,A.SLASH],[48,A.AGILITY],[54,A.SCREECH],[60,A.CLOSE_COMBAT]],[e.HISUI_SAMUROTT]:[[k,A.CEASELESS_EDGE],[1,A.TACKLE],[1,A.TAIL_WHIP],[1,A.WATER_GUN],[1,A.SOAK],[1,A.SLASH],[1,A.MEGAHORN],[1,A.SUCKER_PUNCH],[13,A.FOCUS_ENERGY],[18,A.RAZOR_SHELL],[21,A.FURY_CUTTER],[25,A.WATER_PULSE],[29,A.AERIAL_ACE],[34,A.AQUA_JET],[39,A.ENCORE],[46,A.AQUA_TAIL],[51,A.RETALIATE],[58,A.SWORDS_DANCE],[63,A.HYDRO_PUMP]],[e.HISUI_LILLIGANT]:[[k,A.VICTORY_DANCE],[1,A.MEGA_KICK],[1,A.ABSORB],[1,A.MEGA_DRAIN],[1,A.LEECH_SEED],[1,A.GROWTH],[1,A.STUN_SPORE],[1,A.SLEEP_POWDER],[1,A.GIGA_DRAIN],[1,A.CHARM],[1,A.SYNTHESIS],[1,A.SUNNY_DAY],[1,A.HELPING_HAND],[1,A.TEETER_DANCE],[1,A.MAGICAL_LEAF],[1,A.LEAF_BLADE],[1,A.ENERGY_BALL],[1,A.DEFOG],[1,A.LEAF_STORM],[1,A.ENTRAINMENT],[1,A.AFTER_YOU],[1,A.PETAL_BLIZZARD],[1,A.SOLAR_BLADE],[5,A.AXE_KICK]],[e.HISUI_ZORUA]:[[1,A.SCRATCH],[1,A.LEER],[4,A.TORMENT],[8,A.HONE_CLAWS],[12,A.SHADOW_SNEAK],[16,A.CURSE],[20,A.TAUNT],[24,A.KNOCK_OFF],[28,A.SPITE],[32,A.AGILITY],[36,A.SHADOW_BALL],[40,A.BITTER_MALICE],[44,A.NASTY_PLOT],[48,A.FOUL_PLAY]],[e.HISUI_ZOROARK]:[[k,A.SHADOW_CLAW],[1,A.SCRATCH],[1,A.LEER],[1,A.TORMENT],[1,A.U_TURN],[1,A.HONE_CLAWS],[12,A.SHADOW_SNEAK],[16,A.CURSE],[20,A.TAUNT],[24,A.KNOCK_OFF],[28,A.SPITE],[34,A.AGILITY],[40,A.SHADOW_BALL],[46,A.BITTER_MALICE],[52,A.NASTY_PLOT],[58,A.FOUL_PLAY]],[e.HISUI_BRAVIARY]:[[k,A.ESPER_WING],[V,A.BRAVE_BIRD],[1,A.WING_ATTACK],[1,A.LEER],[1,A.PECK],[1,A.SKY_ATTACK],[1,A.SUPERPOWER],[1,A.HONE_CLAWS],[18,A.TAILWIND],[24,A.SCARY_FACE],[30,A.AERIAL_ACE],[36,A.SLASH],[42,A.WHIRLWIND],[48,A.CRUSH_CLAW],[57,A.AIR_SLASH],[64,A.DEFOG],[72,A.THRASH],[80,A.HURRICANE]],[e.HISUI_SLIGGOO]:[[k,A.SHELTER],[1,A.TACKLE],[1,A.WATER_GUN],[1,A.ABSORB],[1,A.ACID_ARMOR],[1,A.DRAGON_BREATH],[1,A.BODY_SLAM],[15,A.PROTECT],[20,A.FLAIL],[25,A.WATER_PULSE],[30,A.RAIN_DANCE],[35,A.DRAGON_PULSE],[43,A.CURSE],[49,A.IRON_HEAD],[56,A.MUDDY_WATER]],[e.HISUI_GOODRA]:[[k,A.IRON_TAIL],[1,A.TACKLE],[1,A.WATER_GUN],[1,A.ABSORB],[1,A.ACID_ARMOR],[1,A.DRAGON_BREATH],[1,A.FEINT],[1,A.ACID_SPRAY],[1,A.TEARFUL_LOOK],[1,A.SHELTER],[15,A.PROTECT],[20,A.FLAIL],[25,A.WATER_PULSE],[30,A.RAIN_DANCE],[35,A.DRAGON_PULSE],[43,A.CURSE],[49,A.BODY_SLAM],[49,A.IRON_HEAD],[58,A.MUDDY_WATER],[67,A.HEAVY_SLAM]],[e.HISUI_AVALUGG]:[[k,A.ROCK_SLIDE],[1,A.TACKLE],[1,A.HARDEN],[1,A.POWDER_SNOW],[1,A.RAPID_SPIN],[1,A.WIDE_GUARD],[9,A.CURSE],[12,A.ICY_WIND],[15,A.PROTECT],[18,A.AVALANCHE],[21,A.BITE],[24,A.ICE_FANG],[27,A.IRON_DEFENSE],[30,A.RECOVER],[33,A.CRUNCH],[36,A.TAKE_DOWN],[41,A.BLIZZARD],[46,A.DOUBLE_EDGE],[51,A.STONE_EDGE],[61,A.MOUNTAIN_GALE]],[e.HISUI_DECIDUEYE]:[[k,A.TRIPLE_ARROWS],[V,A.NASTY_PLOT],[1,A.TACKLE],[1,A.GROWL],[1,A.U_TURN],[1,A.ASTONISH],[1,A.LEAF_STORM],[1,A.LEAFAGE],[9,A.PECK],[12,A.SHADOW_SNEAK],[15,A.RAZOR_LEAF],[20,A.SYNTHESIS],[25,A.PLUCK],[30,A.BULK_UP],[37,A.SUCKER_PUNCH],[44,A.LEAF_BLADE],[51,A.FEATHER_DANCE],[58,A.BRAVE_BIRD]],[e.PALDEA_TAUROS]:[[1,A.TACKLE],[1,A.TAIL_WHIP],[5,A.WORK_UP],[10,A.DOUBLE_KICK],[15,A.ASSURANCE],[20,A.HEADBUTT],[25,A.SCARY_FACE],[30,A.ZEN_HEADBUTT],[35,A.RAGING_BULL],[40,A.REST],[45,A.SWAGGER],[50,A.THRASH],[55,A.DOUBLE_EDGE],[60,A.CLOSE_COMBAT]],[e.PALDEA_WOOPER]:[[1,A.TAIL_WHIP],[1,A.MUD_SHOT],[4,A.TACKLE],[8,A.POISON_TAIL],[12,A.TOXIC_SPIKES],[16,A.SLAM],[21,A.YAWN],[24,A.POISON_JAB],[28,A.SLUDGE_WAVE],[32,A.AMNESIA],[36,A.TOXIC],[40,A.EARTHQUAKE]],[e.BLOODMOON_URSALUNA]:[[V,A.MOONLIGHT],[1,A.HEADLONG_RUSH],[1,A.SCRATCH],[1,A.LEER],[1,A.LICK],[8,A.FURY_SWIPES],[13,A.PAYBACK],[17,A.HARDEN],[22,A.SLASH],[25,A.PLAY_NICE],[35,A.SCARY_FACE],[41,A.REST],[41,A.SNORE],[48,A.EARTH_POWER],[56,A.MOONBLAST],[64,A.HAMMER_ARM],[70,A.BLOOD_MOON]]},Bs={[e.PIKACHU]:{1:[[1,A.TAIL_WHIP],[1,A.GROWL],[1,A.THUNDER_SHOCK],[1,A.QUICK_ATTACK],[1,A.SWEET_KISS],[1,A.CHARM],[1,A.NASTY_PLOT],[1,A.PLAY_NICE],[1,A.NUZZLE],[4,A.THUNDER_WAVE],[8,A.DOUBLE_TEAM],[12,A.ELECTRO_BALL],[16,A.FEINT],[20,A.ZIPPY_ZAP],[24,A.AGILITY],[28,A.IRON_TAIL],[32,A.DISCHARGE],[34,A.FLOATY_FALL],[36,A.THUNDERBOLT],[40,A.LIGHT_SCREEN],[42,A.SPLISHY_SPLASH],[44,A.THUNDER],[48,A.PIKA_PAPOW]],2:[[1,A.TAIL_WHIP],[1,A.GROWL],[1,A.THUNDER_SHOCK],[1,A.QUICK_ATTACK],[1,A.SWEET_KISS],[1,A.CHARM],[1,A.NASTY_PLOT],[1,A.PLAY_NICE],[1,A.NUZZLE],[4,A.THUNDER_WAVE],[8,A.DOUBLE_TEAM],[12,A.ELECTRO_BALL],[16,A.FEINT],[20,A.SPARK],[24,A.AGILITY],[28,A.IRON_TAIL],[32,A.DISCHARGE],[36,A.THUNDERBOLT],[40,A.LIGHT_SCREEN],[44,A.THUNDER],[48,A.PIKA_PAPOW]],3:[[1,A.METEOR_MASH],[1,A.TAIL_WHIP],[1,A.GROWL],[1,A.THUNDER_SHOCK],[1,A.QUICK_ATTACK],[1,A.SWEET_KISS],[1,A.CHARM],[1,A.NASTY_PLOT],[1,A.PLAY_NICE],[1,A.NUZZLE],[4,A.THUNDER_WAVE],[8,A.DOUBLE_TEAM],[12,A.ELECTRO_BALL],[16,A.FEINT],[20,A.SPARK],[24,A.AGILITY],[28,A.IRON_TAIL],[32,A.DISCHARGE],[36,A.THUNDERBOLT],[40,A.LIGHT_SCREEN],[44,A.THUNDER],[48,A.PIKA_PAPOW]],4:[[1,A.ICICLE_CRASH],[1,A.TAIL_WHIP],[1,A.GROWL],[1,A.THUNDER_SHOCK],[1,A.QUICK_ATTACK],[1,A.SWEET_KISS],[1,A.CHARM],[1,A.NASTY_PLOT],[1,A.PLAY_NICE],[1,A.NUZZLE],[4,A.THUNDER_WAVE],[8,A.DOUBLE_TEAM],[12,A.ELECTRO_BALL],[16,A.FEINT],[20,A.SPARK],[24,A.AGILITY],[28,A.IRON_TAIL],[32,A.DISCHARGE],[36,A.THUNDERBOLT],[40,A.LIGHT_SCREEN],[44,A.THUNDER],[48,A.PIKA_PAPOW]],5:[[1,A.DRAINING_KISS],[1,A.TAIL_WHIP],[1,A.GROWL],[1,A.THUNDER_SHOCK],[1,A.QUICK_ATTACK],[1,A.SWEET_KISS],[1,A.CHARM],[1,A.NASTY_PLOT],[1,A.PLAY_NICE],[1,A.NUZZLE],[4,A.THUNDER_WAVE],[8,A.DOUBLE_TEAM],[12,A.ELECTRO_BALL],[16,A.FEINT],[20,A.SPARK],[24,A.AGILITY],[28,A.IRON_TAIL],[32,A.DISCHARGE],[36,A.THUNDERBOLT],[40,A.LIGHT_SCREEN],[44,A.THUNDER],[48,A.PIKA_PAPOW]],6:[[1,A.ELECTRIC_TERRAIN],[1,A.TAIL_WHIP],[1,A.GROWL],[1,A.THUNDER_SHOCK],[1,A.QUICK_ATTACK],[1,A.SWEET_KISS],[1,A.CHARM],[1,A.NASTY_PLOT],[1,A.PLAY_NICE],[1,A.NUZZLE],[4,A.THUNDER_WAVE],[8,A.DOUBLE_TEAM],[12,A.ELECTRO_BALL],[16,A.FEINT],[20,A.SPARK],[24,A.AGILITY],[28,A.IRON_TAIL],[32,A.DISCHARGE],[36,A.THUNDERBOLT],[40,A.LIGHT_SCREEN],[44,A.THUNDER],[48,A.PIKA_PAPOW]],7:[[1,A.FLYING_PRESS],[1,A.TAIL_WHIP],[1,A.GROWL],[1,A.THUNDER_SHOCK],[1,A.QUICK_ATTACK],[1,A.SWEET_KISS],[1,A.CHARM],[1,A.NASTY_PLOT],[1,A.PLAY_NICE],[1,A.NUZZLE],[4,A.THUNDER_WAVE],[8,A.DOUBLE_TEAM],[12,A.ELECTRO_BALL],[16,A.FEINT],[20,A.SPARK],[24,A.AGILITY],[28,A.IRON_TAIL],[32,A.DISCHARGE],[36,A.THUNDERBOLT],[40,A.LIGHT_SCREEN],[44,A.THUNDER],[48,A.PIKA_PAPOW]],8:[[1,A.TAIL_WHIP],[1,A.GROWL],[1,A.THUNDER_SHOCK],[1,A.QUICK_ATTACK],[1,A.SWEET_KISS],[1,A.CHARM],[1,A.NASTY_PLOT],[1,A.PLAY_NICE],[1,A.NUZZLE],[4,A.THUNDER_WAVE],[8,A.DOUBLE_TEAM],[12,A.ELECTRO_BALL],[16,A.FEINT],[20,A.ZIPPY_ZAP],[24,A.AGILITY],[28,A.IRON_TAIL],[32,A.DISCHARGE],[34,A.FLOATY_FALL],[36,A.THUNDERBOLT],[40,A.LIGHT_SCREEN],[42,A.SPLISHY_SPLASH],[44,A.THUNDER],[48,A.PIKA_PAPOW]]},[e.EEVEE]:{1:[[1,A.TACKLE],[1,A.TAIL_WHIP],[1,A.GROWL],[1,A.HELPING_HAND],[1,A.COVET],[5,A.SAND_ATTACK],[10,A.QUICK_ATTACK],[15,A.BABY_DOLL_EYES],[18,A.BOUNCY_BUBBLE],[18,A.SIZZLY_SLIDE],[18,A.BUZZY_BUZZ],[20,A.SWIFT],[25,A.BITE],[30,A.COPYCAT],[33,A.BADDY_BAD],[33,A.GLITZY_GLOW],[35,A.BATON_PASS],[40,A.VEEVEE_VOLLEY],[43,A.FREEZY_FROST],[43,A.SAPPY_SEED],[45,A.CHARM],[50,A.DOUBLE_EDGE],[53,A.SPARKLY_SWIRL],[55,A.LAST_RESORT]],2:[[1,A.TACKLE],[1,A.TAIL_WHIP],[1,A.GROWL],[1,A.HELPING_HAND],[1,A.COVET],[5,A.SAND_ATTACK],[10,A.QUICK_ATTACK],[15,A.BABY_DOLL_EYES],[18,A.BOUNCY_BUBBLE],[18,A.SIZZLY_SLIDE],[18,A.BUZZY_BUZZ],[20,A.SWIFT],[25,A.BITE],[30,A.COPYCAT],[33,A.BADDY_BAD],[33,A.GLITZY_GLOW],[35,A.BATON_PASS],[40,A.VEEVEE_VOLLEY],[43,A.FREEZY_FROST],[43,A.SAPPY_SEED],[45,A.CHARM],[50,A.DOUBLE_EDGE],[53,A.SPARKLY_SWIRL],[55,A.LAST_RESORT]]},[e.DEOXYS]:{1:[[1,A.CONFUSION],[1,A.WRAP],[1,A.LEER],[7,A.NIGHT_SHADE],[13,A.TELEPORT],[19,A.TAUNT],[25,A.PURSUIT],[31,A.PSYCHIC],[37,A.SUPERPOWER],[43,A.PSYCHO_SHIFT],[49,A.ZEN_HEADBUTT],[55,A.COSMIC_POWER],[61,A.ZAP_CANNON],[67,A.PSYCHO_BOOST],[73,A.HYPER_BEAM]],2:[[1,A.CONFUSION],[1,A.WRAP],[1,A.LEER],[7,A.NIGHT_SHADE],[13,A.TELEPORT],[19,A.KNOCK_OFF],[25,A.SPIKES],[31,A.PSYCHIC],[37,A.SNATCH],[43,A.PSYCHO_SHIFT],[49,A.ZEN_HEADBUTT],[55,A.AMNESIA],[55,A.IRON_DEFENSE],[61,A.RECOVER],[67,A.PSYCHO_BOOST],[73,A.COUNTER],[73,A.MIRROR_COAT]],3:[[1,A.CONFUSION],[1,A.WRAP],[1,A.LEER],[7,A.NIGHT_SHADE],[13,A.DOUBLE_TEAM],[19,A.KNOCK_OFF],[25,A.PURSUIT],[31,A.PSYCHIC],[37,A.SWIFT],[43,A.PSYCHO_SHIFT],[49,A.ZEN_HEADBUTT],[55,A.AGILITY],[61,A.RECOVER],[67,A.PSYCHO_BOOST],[73,A.EXTREME_SPEED]]},[e.WORMADAM]:{1:[[k,A.QUIVER_DANCE],[1,A.STRUGGLE_BUG],[1,A.TACKLE],[1,A.PROTECT],[1,A.SUCKER_PUNCH],[1,A.BUG_BITE],[1,A.PROTECT],[10,A.TACKLE],[20,A.STRING_SHOT],[23,A.CONFUSION],[26,A.ROCK_BLAST],[29,A.HARDEN],[32,A.PSYBEAM],[35,A.INFESTATION],[38,A.FLAIL],[41,A.ATTRACT],[44,A.PSYCHIC],[47,A.FISSURE],[50,A.BUG_BUZZ]],2:[[k,A.QUIVER_DANCE],[1,A.STRUGGLE_BUG],[1,A.METAL_BURST],[1,A.TACKLE],[1,A.PROTECT],[1,A.SUCKER_PUNCH],[1,A.BUG_BITE],[1,A.PROTECT],[10,A.TACKLE],[20,A.STRING_SHOT],[23,A.CONFUSION],[26,A.METAL_BURST],[29,A.METAL_SOUND],[32,A.PSYBEAM],[35,A.INFESTATION],[38,A.FLAIL],[41,A.ATTRACT],[44,A.PSYCHIC],[47,A.IRON_HEAD],[50,A.BUG_BUZZ]]},[e.ROTOM]:{1:[[1,A.OVERHEAT],[1,A.DOUBLE_TEAM],[1,A.ASTONISH],[5,A.THUNDER_SHOCK],[10,A.CONFUSE_RAY],[15,A.CHARGE],[20,A.ELECTRO_BALL],[25,A.THUNDER_WAVE],[30,A.SHOCK_WAVE],[35,A.HEX],[40,A.SUBSTITUTE],[45,A.TRICK],[50,A.DISCHARGE],[55,A.UPROAR]],2:[[1,A.HYDRO_PUMP],[1,A.DOUBLE_TEAM],[1,A.ASTONISH],[5,A.THUNDER_SHOCK],[10,A.CONFUSE_RAY],[15,A.CHARGE],[20,A.ELECTRO_BALL],[25,A.THUNDER_WAVE],[30,A.SHOCK_WAVE],[35,A.HEX],[40,A.SUBSTITUTE],[45,A.TRICK],[50,A.DISCHARGE],[55,A.UPROAR]],3:[[1,A.BLIZZARD],[1,A.DOUBLE_TEAM],[1,A.ASTONISH],[5,A.THUNDER_SHOCK],[10,A.CONFUSE_RAY],[15,A.CHARGE],[20,A.ELECTRO_BALL],[25,A.THUNDER_WAVE],[30,A.SHOCK_WAVE],[35,A.HEX],[40,A.SUBSTITUTE],[45,A.TRICK],[50,A.DISCHARGE],[55,A.UPROAR]],4:[[1,A.AIR_SLASH],[1,A.DOUBLE_TEAM],[1,A.ASTONISH],[5,A.THUNDER_SHOCK],[10,A.CONFUSE_RAY],[15,A.CHARGE],[20,A.ELECTRO_BALL],[25,A.THUNDER_WAVE],[30,A.SHOCK_WAVE],[35,A.HEX],[40,A.SUBSTITUTE],[45,A.TRICK],[50,A.DISCHARGE],[55,A.UPROAR]],5:[[1,A.LEAF_STORM],[1,A.DOUBLE_TEAM],[1,A.ASTONISH],[5,A.THUNDER_SHOCK],[10,A.CONFUSE_RAY],[15,A.CHARGE],[20,A.ELECTRO_BALL],[25,A.THUNDER_WAVE],[30,A.SHOCK_WAVE],[35,A.HEX],[40,A.SUBSTITUTE],[45,A.TRICK],[50,A.DISCHARGE],[55,A.UPROAR]]},[e.SHAYMIN]:{1:[[1,A.LEAFAGE],[1,A.GROWTH],[10,A.MAGICAL_LEAF],[19,A.LEECH_SEED],[28,A.QUICK_ATTACK],[37,A.SWEET_SCENT],[46,A.NATURAL_GIFT],[55,A.WORRY_SEED],[64,A.AIR_SLASH],[73,A.ENERGY_BALL],[82,A.SWEET_KISS],[91,A.LEAF_STORM],[100,A.SEED_FLARE]]},[e.BASCULIN]:{1:[[1,A.TAIL_WHIP],[1,A.WATER_GUN],[4,A.TACKLE],[8,A.FLAIL],[12,A.AQUA_JET],[16,A.BITE],[20,A.SCARY_FACE],[24,A.HEADBUTT],[28,A.SOAK],[32,A.CRUNCH],[36,A.TAKE_DOWN],[40,A.FINAL_GAMBIT],[44,A.WAVE_CRASH],[48,A.THRASH],[52,A.DOUBLE_EDGE],[56,A.HEAD_SMASH]],2:[[1,A.TAIL_WHIP],[1,A.WATER_GUN],[4,A.TACKLE],[8,A.FLAIL],[12,A.AQUA_JET],[16,A.BITE],[20,A.SCARY_FACE],[24,A.HEADBUTT],[28,A.SOAK],[32,A.CRUNCH],[36,A.TAKE_DOWN],[40,A.UPROAR],[44,A.WAVE_CRASH],[48,A.THRASH],[52,A.DOUBLE_EDGE],[56,A.HEAD_SMASH]]},[e.KYUREM]:{1:[[1,A.DRAGON_BREATH],[1,A.ANCIENT_POWER],[1,A.NOBLE_ROAR],[1,A.FREEZE_DRY],[8,A.SLASH],[16,A.ENDEAVOR],[24,A.DRAGON_PULSE],[32,A.ICE_BEAM],[40,A.HYPER_VOICE],[48,A.FUSION_BOLT],[56,A.BLIZZARD],[64,A.IMPRISON],[72,A.OUTRAGE],[80,A.FREEZE_SHOCK],[88,A.SHEER_COLD]],2:[[1,A.DRAGON_BREATH],[1,A.ANCIENT_POWER],[1,A.NOBLE_ROAR],[1,A.FREEZE_DRY],[8,A.SLASH],[16,A.ENDEAVOR],[24,A.DRAGON_PULSE],[32,A.ICE_BEAM],[40,A.HYPER_VOICE],[48,A.FUSION_FLARE],[56,A.BLIZZARD],[64,A.IMPRISON],[72,A.OUTRAGE],[80,A.ICE_BURN],[88,A.SHEER_COLD]]},[e.MEOWSTIC]:{1:[[1,A.SCRATCH],[1,A.LEER],[1,A.FAKE_OUT],[1,A.MAGICAL_LEAF],[1,A.DISARMING_VOICE],[9,A.CONFUSION],[12,A.STORED_POWER],[15,A.CHARGE_BEAM],[18,A.COVET],[21,A.PSYBEAM],[24,A.SUCKER_PUNCH],[29,A.ROLE_PLAY],[34,A.LIGHT_SCREEN],[34,A.REFLECT],[39,A.PSYSHOCK],[44,A.EXTRASENSORY],[49,A.SHADOW_BALL],[54,A.PSYCHIC],[59,A.FUTURE_SIGHT]]},[e.HOOPA]:{1:[[1,A.CONFUSION],[1,A.DESTINY_BOND],[1,A.ALLY_SWITCH],[6,A.ASTONISH],[10,A.TRICK],[15,A.LIGHT_SCREEN],[19,A.PSYBEAM],[25,A.SKILL_SWAP],[29,A.GUARD_SPLIT],[29,A.POWER_SPLIT],[46,A.KNOCK_OFF],[50,A.TRICK_ROOM],[50,A.WONDER_ROOM],[55,A.DARK_PULSE],[75,A.PSYCHIC],[85,A.HYPERSPACE_FURY]]},[e.GRENINJA]:{1:[[k,A.WATER_SHURIKEN],[1,A.POUND],[1,A.GROWL],[1,A.WATER_GUN],[1,A.QUICK_ATTACK],[1,A.ROUND],[1,A.FLING],[1,A.SMACK_DOWN],[1,A.BOUNCE],[1,A.HAZE],[1,A.MAT_BLOCK],[1,A.ROLE_PLAY],[1,A.NIGHT_SLASH],[10,A.LICK],[14,A.WATER_PULSE],[19,A.SMOKESCREEN],[23,A.SHADOW_SNEAK],[28,A.SPIKES],[33,A.AERIAL_ACE],[42,A.SUBSTITUTE],[49,A.EXTRASENSORY],[56,A.DOUBLE_TEAM],[68,A.HYDRO_PUMP]]},[e.LYCANROC]:{1:[[k,A.COUNTER],[1,A.SAND_ATTACK],[1,A.TACKLE],[1,A.LEER],[1,A.DOUBLE_TEAM],[1,A.REVERSAL],[1,A.ENDURE],[1,A.TAUNT],[12,A.ROCK_THROW],[16,A.HOWL],[20,A.BITE],[24,A.ROCK_TOMB],[30,A.ROAR],[36,A.ROCK_SLIDE],[42,A.CRUNCH],[48,A.SCARY_FACE],[54,A.STEALTH_ROCK],[60,A.STONE_EDGE]],2:[[k,A.CRUSH_CLAW],[1,A.SAND_ATTACK],[1,A.TACKLE],[1,A.LEER],[1,A.COUNTER],[1,A.QUICK_ATTACK],[1,A.DOUBLE_TEAM],[1,A.REVERSAL],[1,A.ENDURE],[1,A.TAUNT],[1,A.SUCKER_PUNCH],[1,A.QUICK_GUARD],[1,A.ACCELEROCK],[12,A.ROCK_THROW],[16,A.HOWL],[20,A.BITE],[24,A.ROCK_TOMB],[30,A.ROAR],[36,A.ROCK_SLIDE],[42,A.CRUNCH],[48,A.SCARY_FACE],[54,A.STEALTH_ROCK],[60,A.STONE_EDGE]]},[e.NECROZMA]:{1:[[k,A.SUNSTEEL_STRIKE],[1,A.CONFUSION],[1,A.METAL_CLAW],[1,A.MORNING_SUN],[1,A.MOONLIGHT],[1,A.GRAVITY],[1,A.CHARGE_BEAM],[8,A.STEALTH_ROCK],[16,A.SLASH],[24,A.NIGHT_SLASH],[32,A.PSYCHO_CUT],[40,A.STORED_POWER],[48,A.ROCK_BLAST],[56,A.IRON_DEFENSE],[64,A.POWER_GEM],[72,A.PHOTON_GEYSER],[80,A.AUTOTOMIZE],[88,A.PRISMATIC_LASER]],2:[[k,A.MOONGEIST_BEAM],[1,A.CONFUSION],[1,A.METAL_CLAW],[1,A.MORNING_SUN],[1,A.MOONLIGHT],[1,A.GRAVITY],[1,A.CHARGE_BEAM],[8,A.STEALTH_ROCK],[16,A.SLASH],[24,A.NIGHT_SLASH],[32,A.PSYCHO_CUT],[40,A.STORED_POWER],[48,A.ROCK_BLAST],[56,A.IRON_DEFENSE],[64,A.POWER_GEM],[72,A.PHOTON_GEYSER],[80,A.AUTOTOMIZE],[88,A.PRISMATIC_LASER]],3:[[k,A.SUNSTEEL_STRIKE],[k,A.MOONGEIST_BEAM],[1,A.CONFUSION],[1,A.METAL_CLAW],[1,A.MORNING_SUN],[1,A.MOONLIGHT],[1,A.GRAVITY],[1,A.CHARGE_BEAM],[8,A.STEALTH_ROCK],[16,A.SLASH],[24,A.NIGHT_SLASH],[32,A.PSYCHO_CUT],[40,A.STORED_POWER],[48,A.ROCK_BLAST],[56,A.IRON_DEFENSE],[64,A.POWER_GEM],[72,A.PHOTON_GEYSER],[80,A.AUTOTOMIZE],[88,A.PRISMATIC_LASER]]},[e.TOXTRICITY]:{1:[[k,A.SPARK],[1,A.LEER],[1,A.GROWL],[1,A.ACID],[1,A.THUNDER_SHOCK],[1,A.FLAIL],[1,A.ACID_SPRAY],[1,A.BELCH],[1,A.NOBLE_ROAR],[1,A.NUZZLE],[1,A.TEARFUL_LOOK],[4,A.CHARGE],[8,A.SHOCK_WAVE],[12,A.SCARY_FACE],[16,A.TAUNT],[24,A.SCREECH],[28,A.SWAGGER],[32,A.TOXIC],[36,A.DISCHARGE],[40,A.POISON_JAB],[44,A.OVERDRIVE],[48,A.BOOMBURST],[52,A.MAGNETIC_FLUX]]},[e.INDEEDEE]:{1:[[1,A.STORED_POWER],[1,A.PLAY_NICE],[5,A.BATON_PASS],[10,A.DISARMING_VOICE],[15,A.PSYBEAM],[20,A.HELPING_HAND],[25,A.FOLLOW_ME],[30,A.HEALING_WISH],[35,A.PSYCHIC],[40,A.CALM_MIND],[45,A.GUARD_SPLIT],[50,A.PSYCHIC_TERRAIN]]},[e.ZACIAN]:{1:[[k,A.BEHEMOTH_BLADE],[1,A.BITE],[1,A.QUICK_ATTACK],[1,A.METAL_CLAW],[1,A.HOWL],[1,A.QUICK_GUARD],[1,A.SACRED_SWORD],[11,A.SLASH],[22,A.SWORDS_DANCE],[33,A.IRON_HEAD],[44,A.NOBLE_ROAR],[55,A.CRUNCH],[66,A.MOONBLAST],[77,A.CLOSE_COMBAT],[88,A.GIGA_IMPACT]]},[e.ZAMAZENTA]:{1:[[k,A.BEHEMOTH_BASH],[1,A.BITE],[1,A.QUICK_ATTACK],[1,A.METAL_CLAW],[1,A.HOWL],[1,A.WIDE_GUARD],[11,A.SLASH],[22,A.IRON_DEFENSE],[33,A.IRON_HEAD],[44,A.METAL_BURST],[55,A.CRUNCH],[66,A.MOONBLAST],[77,A.CLOSE_COMBAT],[88,A.GIGA_IMPACT]]},[e.ETERNATUS]:{1:[[1,A.AGILITY],[1,A.CONFUSE_RAY],[1,A.POISON_TAIL],[1,A.DRAGON_TAIL],[8,A.TOXIC],[16,A.VENOSHOCK],[24,A.DRAGON_DANCE],[32,A.CROSS_POISON],[40,A.DRAGON_PULSE],[48,A.FLAMETHROWER],[56,A.DYNAMAX_CANNON],[64,A.COSMIC_POWER],[72,A.RECOVER],[80,A.HYPER_BEAM],[88,A.ETERNABEAM]]},[e.URSHIFU]:{1:[[k,A.SURGING_STRIKES],[1,A.LEER],[1,A.FOCUS_ENERGY],[1,A.ENDURE],[1,A.ROCK_SMASH],[1,A.AQUA_JET],[12,A.AERIAL_ACE],[16,A.SCARY_FACE],[20,A.HEADBUTT],[24,A.BRICK_BREAK],[28,A.DETECT],[32,A.BULK_UP],[36,A.IRON_HEAD],[40,A.DYNAMIC_PUNCH],[44,A.COUNTER],[48,A.CLOSE_COMBAT],[52,A.FOCUS_PUNCH]],2:[[k,A.WICKED_BLOW],[1,A.LEER],[1,A.FOCUS_ENERGY],[1,A.ENDURE],[1,A.ROCK_SMASH],[1,A.SUCKER_PUNCH],[12,A.AERIAL_ACE],[16,A.SCARY_FACE],[20,A.HEADBUTT],[24,A.BRICK_BREAK],[28,A.DETECT],[32,A.BULK_UP],[36,A.IRON_HEAD],[40,A.DYNAMIC_PUNCH],[44,A.COUNTER],[48,A.CLOSE_COMBAT],[52,A.FOCUS_PUNCH]],3:[[k,A.SURGING_STRIKES],[1,A.LEER],[1,A.FOCUS_ENERGY],[1,A.ENDURE],[1,A.ROCK_SMASH],[1,A.AQUA_JET],[12,A.AERIAL_ACE],[16,A.SCARY_FACE],[20,A.HEADBUTT],[24,A.BRICK_BREAK],[28,A.DETECT],[32,A.BULK_UP],[36,A.IRON_HEAD],[40,A.DYNAMIC_PUNCH],[44,A.COUNTER],[48,A.CLOSE_COMBAT],[52,A.FOCUS_PUNCH]]},[e.CALYREX]:{1:[[1,A.POUND],[1,A.SWORDS_DANCE],[1,A.STOMP],[1,A.DOUBLE_KICK],[1,A.TACKLE],[1,A.TAKE_DOWN],[1,A.THRASH],[1,A.DOUBLE_EDGE],[1,A.TAIL_WHIP],[1,A.MIST],[1,A.MEGA_DRAIN],[1,A.GROWTH],[1,A.CONFUSION],[1,A.TORMENT],[1,A.TAUNT],[1,A.IRON_DEFENSE],[1,A.AVALANCHE],[1,A.ICICLE_CRASH],[1,A.GLACIAL_LANCE],[8,A.LIFE_DEW],[16,A.GIGA_DRAIN],[24,A.PSYSHOCK],[32,A.HELPING_HAND],[40,A.AROMATHERAPY],[40,A.GRASSY_TERRAIN],[48,A.ENERGY_BALL],[56,A.PSYCHIC],[64,A.LEECH_SEED],[72,A.HEAL_PULSE],[80,A.SOLAR_BEAM],[88,A.FUTURE_SIGHT]],2:[[1,A.POUND],[1,A.STOMP],[1,A.DOUBLE_KICK],[1,A.TACKLE],[1,A.TAKE_DOWN],[1,A.THRASH],[1,A.DOUBLE_EDGE],[1,A.TAIL_WHIP],[1,A.DISABLE],[1,A.MEGA_DRAIN],[1,A.GROWTH],[1,A.CONFUSION],[1,A.AGILITY],[1,A.CONFUSE_RAY],[1,A.HAZE],[1,A.SHADOW_BALL],[1,A.NASTY_PLOT],[1,A.HEX],[1,A.ASTRAL_BARRAGE],[8,A.LIFE_DEW],[16,A.GIGA_DRAIN],[24,A.PSYSHOCK],[32,A.HELPING_HAND],[40,A.GRASSY_TERRAIN],[40,A.PSYCHIC_TERRAIN],[48,A.ENERGY_BALL],[56,A.PSYCHIC],[64,A.LEECH_SEED],[72,A.HEAL_PULSE],[80,A.SOLAR_BEAM],[88,A.FUTURE_SIGHT]]},[e.OINKOLOGNE]:{1:[[1,A.TACKLE],[1,A.TAIL_WHIP],[3,A.DISARMING_VOICE],[6,A.ECHOED_VOICE],[9,A.MUD_SHOT],[12,A.COVET],[15,A.DIG],[17,A.HEADBUTT],[23,A.YAWN],[28,A.TAKE_DOWN],[30,A.WORK_UP],[34,A.UPROAR],[39,A.DOUBLE_EDGE],[45,A.EARTH_POWER],[51,A.BELCH]]},[e.REVAVROOM]:{1:[[k,A.WICKED_TORQUE],[k,A.SHIFT_GEAR],[1,A.LICK],[1,A.POISON_GAS],[1,A.MAGNET_RISE],[4,A.SMOG],[7,A.TAUNT],[10,A.ASSURANCE],[13,A.SLUDGE],[17,A.GYRO_BALL],[21,A.HEADBUTT],[25,A.SCREECH],[28,A.IRON_HEAD],[32,A.SWAGGER],[36,A.POISON_JAB],[46,A.UPROAR],[52,A.SPIN_OUT],[58,A.GUNK_SHOT]],2:[[k,A.BLAZING_TORQUE],[k,A.SHIFT_GEAR],[1,A.LICK],[1,A.POISON_GAS],[1,A.MAGNET_RISE],[4,A.SMOG],[7,A.TAUNT],[10,A.ASSURANCE],[13,A.SLUDGE],[17,A.GYRO_BALL],[21,A.HEADBUTT],[25,A.SCREECH],[28,A.IRON_HEAD],[32,A.SWAGGER],[36,A.POISON_JAB],[46,A.UPROAR],[52,A.SPIN_OUT],[58,A.GUNK_SHOT]],3:[[k,A.NOXIOUS_TORQUE],[k,A.SHIFT_GEAR],[1,A.LICK],[1,A.POISON_GAS],[1,A.MAGNET_RISE],[4,A.SMOG],[7,A.TAUNT],[10,A.ASSURANCE],[13,A.SLUDGE],[17,A.GYRO_BALL],[21,A.HEADBUTT],[25,A.SCREECH],[28,A.IRON_HEAD],[32,A.SWAGGER],[36,A.POISON_JAB],[46,A.UPROAR],[52,A.SPIN_OUT],[58,A.GUNK_SHOT]],4:[[k,A.MAGICAL_TORQUE],[k,A.SHIFT_GEAR],[1,A.LICK],[1,A.POISON_GAS],[1,A.MAGNET_RISE],[4,A.SMOG],[7,A.TAUNT],[10,A.ASSURANCE],[13,A.SLUDGE],[17,A.GYRO_BALL],[21,A.HEADBUTT],[25,A.SCREECH],[28,A.IRON_HEAD],[32,A.SWAGGER],[36,A.POISON_JAB],[46,A.UPROAR],[52,A.SPIN_OUT],[58,A.GUNK_SHOT]],5:[[k,A.COMBAT_TORQUE],[k,A.SHIFT_GEAR],[1,A.LICK],[1,A.POISON_GAS],[1,A.MAGNET_RISE],[4,A.SMOG],[7,A.TAUNT],[10,A.ASSURANCE],[13,A.SLUDGE],[17,A.GYRO_BALL],[21,A.HEADBUTT],[25,A.SCREECH],[28,A.IRON_HEAD],[32,A.SWAGGER],[36,A.POISON_JAB],[46,A.UPROAR],[52,A.SPIN_OUT],[58,A.GUNK_SHOT]]},[e.PALDEA_TAUROS]:{1:[[1,A.TACKLE],[1,A.TAIL_WHIP],[5,A.WORK_UP],[10,A.DOUBLE_KICK],[15,A.FLAME_CHARGE],[20,A.HEADBUTT],[25,A.SCARY_FACE],[30,A.ZEN_HEADBUTT],[35,A.RAGING_BULL],[40,A.REST],[45,A.SWAGGER],[50,A.THRASH],[55,A.FLARE_BLITZ],[60,A.CLOSE_COMBAT]],2:[[1,A.TACKLE],[1,A.TAIL_WHIP],[5,A.WORK_UP],[10,A.DOUBLE_KICK],[15,A.AQUA_JET],[20,A.HEADBUTT],[25,A.SCARY_FACE],[30,A.ZEN_HEADBUTT],[35,A.RAGING_BULL],[40,A.REST],[45,A.SWAGGER],[50,A.THRASH],[55,A.WAVE_CRASH],[60,A.CLOSE_COMBAT]]}},lT={[e.BULBASAUR]:{0:O.GRASSY_SURGE},[e.IVYSAUR]:{0:O.GRASSY_SURGE},[e.VENUSAUR]:{0:O.GRASSY_SURGE,1:O.SEED_SOWER,2:O.FLOWER_VEIL},[e.CHARMANDER]:{0:O.SHEER_FORCE},[e.CHARMELEON]:{0:O.BEAST_BOOST},[e.CHARIZARD]:{0:O.BEAST_BOOST,1:O.LEVITATE,2:O.TURBOBLAZE,3:O.UNNERVE},[e.SQUIRTLE]:{0:O.DAUNTLESS_SHIELD},[e.WARTORTLE]:{0:O.DAUNTLESS_SHIELD},[e.BLASTOISE]:{0:O.DAUNTLESS_SHIELD,1:O.BULLETPROOF,2:O.BULLETPROOF},[e.CATERPIE]:{0:O.GLUTTONY},[e.METAPOD]:{0:O.STURDY},[e.BUTTERFREE]:{0:O.MAGICIAN,1:O.MAGICIAN},[e.WEEDLE]:{0:O.POISON_TOUCH},[e.KAKUNA]:{0:O.STURDY},[e.BEEDRILL]:{0:O.ADAPTABILITY,1:O.TINTED_LENS},[e.PIDGEY]:{0:O.SHEER_FORCE},[e.PIDGEOTTO]:{0:O.SHEER_FORCE},[e.PIDGEOT]:{0:O.SHEER_FORCE,1:O.SHEER_FORCE},[e.RATTATA]:{0:O.STRONG_JAW},[e.RATICATE]:{0:O.STRONG_JAW},[e.SPEAROW]:{0:O.MOXIE},[e.FEAROW]:{0:O.MOXIE},[e.EKANS]:{0:O.REGENERATOR},[e.ARBOK]:{0:O.REGENERATOR},[e.SANDSHREW]:{0:O.TOUGH_CLAWS},[e.SANDSLASH]:{0:O.TOUGH_CLAWS},[e.NIDORAN_F]:{0:O.FLARE_BOOST},[e.NIDORINA]:{0:O.FLARE_BOOST},[e.NIDOQUEEN]:{0:O.FLARE_BOOST},[e.NIDORAN_M]:{0:O.GUTS},[e.NIDORINO]:{0:O.GUTS},[e.NIDOKING]:{0:O.GUTS},[e.VULPIX]:{0:O.FUR_COAT},[e.NINETALES]:{0:O.FUR_COAT},[e.ZUBAT]:{0:O.INTIMIDATE},[e.GOLBAT]:{0:O.INTIMIDATE},[e.CROBAT]:{0:O.INTIMIDATE},[e.ODDISH]:{0:O.TRIAGE},[e.GLOOM]:{0:O.TRIAGE},[e.VILEPLUME]:{0:O.TRIAGE},[e.BELLOSSOM]:{0:O.TRIAGE},[e.PARAS]:{0:O.TRIAGE},[e.PARASECT]:{0:O.TRIAGE},[e.VENONAT]:{0:O.FLUFFY},[e.VENOMOTH]:{0:O.SIMPLE},[e.DIGLETT]:{0:O.STURDY},[e.DUGTRIO]:{0:O.STURDY},[e.MEOWTH]:{0:O.TOUGH_CLAWS,1:O.TOUGH_CLAWS},[e.PERSIAN]:{0:O.TOUGH_CLAWS},[e.PSYDUCK]:{0:O.SIMPLE},[e.GOLDUCK]:{0:O.SIMPLE},[e.MANKEY]:{0:O.IRON_FIST},[e.PRIMEAPE]:{0:O.IRON_FIST},[e.ANNIHILAPE]:{0:O.IRON_FIST},[e.GROWLITHE]:{0:O.FLUFFY},[e.ARCANINE]:{0:O.FLUFFY},[e.POLIWAG]:{0:O.NO_GUARD},[e.POLIWHIRL]:{0:O.NO_GUARD},[e.POLIWRATH]:{0:O.NO_GUARD},[e.POLITOED]:{0:O.NO_GUARD},[e.ABRA]:{0:O.COMATOSE},[e.KADABRA]:{0:O.MAGICIAN},[e.ALAKAZAM]:{0:O.MAGICIAN,1:O.MAGICIAN},[e.MACHOP]:{0:O.QUICK_FEET},[e.MACHOKE]:{0:O.QUICK_FEET},[e.MACHAMP]:{0:O.QUICK_FEET,1:O.QUICK_FEET},[e.BELLSPROUT]:{0:O.FLOWER_GIFT},[e.WEEPINBELL]:{0:O.FLOWER_GIFT},[e.VICTREEBEL]:{0:O.FLOWER_GIFT},[e.TENTACOOL]:{0:O.TOXIC_CHAIN},[e.TENTACRUEL]:{0:O.TOXIC_CHAIN},[e.GEODUDE]:{0:O.DRY_SKIN},[e.GRAVELER]:{0:O.DRY_SKIN},[e.GOLEM]:{0:O.DRY_SKIN},[e.PONYTA]:{0:O.MAGIC_GUARD},[e.RAPIDASH]:{0:O.MAGIC_GUARD},[e.SLOWPOKE]:{0:O.UNAWARE},[e.SLOWBRO]:{0:O.UNAWARE,1:O.REGENERATOR},[e.SLOWKING]:{0:O.UNAWARE},[e.MAGNEMITE]:{0:O.LEVITATE},[e.MAGNETON]:{0:O.LEVITATE},[e.MAGNEZONE]:{0:O.LEVITATE},[e.FARFETCHD]:{0:O.SNIPER},[e.DODUO]:{0:O.PARENTAL_BOND},[e.DODRIO]:{0:O.PARENTAL_BOND},[e.SEEL]:{0:O.WATER_BUBBLE},[e.DEWGONG]:{0:O.WATER_BUBBLE},[e.GRIMER]:{0:O.WATER_ABSORB},[e.MUK]:{0:O.WATER_ABSORB},[e.SHELLDER]:{0:O.STURDY},[e.CLOYSTER]:{0:O.ICE_SCALES},[e.GASTLY]:{0:O.SHADOW_SHIELD},[e.HAUNTER]:{0:O.SHADOW_SHIELD},[e.GENGAR]:{0:O.SHADOW_SHIELD,1:O.UNNERVE,2:O.GLUTTONY},[e.ONIX]:{0:O.ROCKY_PAYLOAD},[e.STEELIX]:{0:O.ROCKY_PAYLOAD,1:O.SAND_SPIT},[e.DROWZEE]:{0:O.MAGICIAN},[e.HYPNO]:{0:O.MAGICIAN},[e.KRABBY]:{0:O.UNBURDEN},[e.KINGLER]:{0:O.UNBURDEN,1:O.UNBURDEN},[e.VOLTORB]:{0:O.TRANSISTOR},[e.ELECTRODE]:{0:O.TRANSISTOR},[e.EXEGGCUTE]:{0:O.RIPEN},[e.EXEGGUTOR]:{0:O.RIPEN},[e.ALOLA_EXEGGUTOR]:{0:O.UNBURDEN},[e.CUBONE]:{0:O.PARENTAL_BOND},[e.MAROWAK]:{0:O.PARENTAL_BOND},[e.ALOLA_MAROWAK]:{0:O.PARENTAL_BOND},[e.LICKITUNG]:{0:O.CHEEK_POUCH},[e.LICKILICKY]:{0:O.CHEEK_POUCH},[e.KOFFING]:{0:O.WHITE_SMOKE},[e.WEEZING]:{0:O.PARENTAL_BOND},[e.GALAR_WEEZING]:{0:O.PARENTAL_BOND},[e.RHYHORN]:{0:O.SOLID_ROCK},[e.RHYDON]:{0:O.SOLID_ROCK},[e.RHYPERIOR]:{0:O.FILTER},[e.TANGELA]:{0:O.SEED_SOWER},[e.TANGROWTH]:{0:O.SEED_SOWER},[e.KANGASKHAN]:{0:O.TECHNICIAN,1:O.TECHNICIAN},[e.HORSEA]:{0:O.DRAGONS_MAW},[e.SEADRA]:{0:O.DRAGONS_MAW},[e.KINGDRA]:{0:O.MULTISCALE},[e.GOLDEEN]:{0:O.MULTISCALE},[e.SEAKING]:{0:O.MULTISCALE},[e.STARYU]:{0:O.REGENERATOR},[e.STARMIE]:{0:O.REGENERATOR},[e.SCYTHER]:{0:O.TINTED_LENS},[e.SCIZOR]:{0:O.TOUGH_CLAWS,1:O.TOUGH_CLAWS},[e.KLEAVOR]:{0:O.WEAK_ARMOR},[e.PINSIR]:{0:O.TINTED_LENS,1:O.MOLD_BREAKER},[e.TAUROS]:{0:O.STAMINA},[e.MAGIKARP]:{0:O.MULTISCALE},[e.GYARADOS]:{0:O.MULTISCALE,1:O.MULTISCALE},[e.LAPRAS]:{0:O.FILTER,1:O.FILTER},[e.DITTO]:{0:O.ADAPTABILITY},[e.EEVEE]:{0:O.PICKUP,1:O.PICKUP,2:O.FLUFFY},[e.VAPOREON]:{0:O.REGENERATOR},[e.JOLTEON]:{0:O.TRANSISTOR},[e.FLAREON]:{0:O.FUR_COAT},[e.ESPEON]:{0:O.MAGICIAN},[e.UMBREON]:{0:O.TOXIC_CHAIN},[e.LEAFEON]:{0:O.GRASSY_SURGE},[e.GLACEON]:{0:O.SNOW_WARNING},[e.SYLVEON]:{0:O.COMPETITIVE},[e.PORYGON]:{0:O.TRANSISTOR},[e.PORYGON2]:{0:O.TRANSISTOR},[e.PORYGON_Z]:{0:O.PROTEAN},[e.OMANYTE]:{0:O.STURDY},[e.OMASTAR]:{0:O.STURDY},[e.KABUTO]:{0:O.TOUGH_CLAWS},[e.KABUTOPS]:{0:O.TOUGH_CLAWS},[e.AERODACTYL]:{0:O.INTIMIDATE,1:O.ROCKY_PAYLOAD},[e.ARTICUNO]:{0:O.SNOW_WARNING},[e.ZAPDOS]:{0:O.DRIZZLE},[e.MOLTRES]:{0:O.DROUGHT},[e.DRATINI]:{0:O.MULTISCALE},[e.DRAGONAIR]:{0:O.MULTISCALE},[e.DRAGONITE]:{0:O.AERILATE},[e.MEWTWO]:{0:O.NEUROFORCE,1:O.NEUROFORCE,2:O.NEUROFORCE},[e.MEW]:{0:O.PROTEAN},[e.CHIKORITA]:{0:O.CUTE_CHARM},[e.BAYLEEF]:{0:O.THICK_FAT},[e.MEGANIUM]:{0:O.THICK_FAT},[e.CYNDAQUIL]:{0:O.WHITE_SMOKE},[e.QUILAVA]:{0:O.DROUGHT},[e.TYPHLOSION]:{0:O.DROUGHT},[e.HISUI_TYPHLOSION]:{0:O.DROUGHT},[e.TOTODILE]:{0:O.TOUGH_CLAWS},[e.CROCONAW]:{0:O.TOUGH_CLAWS},[e.FERALIGATR]:{0:O.TOUGH_CLAWS},[e.SENTRET]:{0:O.PICKUP},[e.FURRET]:{0:O.PICKUP},[e.HOOTHOOT]:{0:O.AERILATE},[e.NOCTOWL]:{0:O.AERILATE},[e.LEDYBA]:{0:O.PRANKSTER},[e.LEDIAN]:{0:O.PRANKSTER},[e.SPINARAK]:{0:O.PRANKSTER},[e.ARIADOS]:{0:O.PRANKSTER},[e.CHINCHOU]:{0:O.REGENERATOR},[e.LANTURN]:{0:O.REGENERATOR},[e.PICHU]:{0:O.ELECTRIC_SURGE,1:O.STURDY},[e.PIKACHU]:{0:O.ELECTRIC_SURGE,1:O.STURDY,2:O.COSTAR,3:O.IRON_FIST,4:O.QUEENLY_MAJESTY,5:O.MISTY_SURGE,6:O.TINTED_LENS,7:O.LIBERO,8:O.THICK_FAT},[e.RAICHU]:{0:O.ELECTRIC_SURGE},[e.ALOLA_RAICHU]:{0:O.ELECTRIC_SURGE},[e.CLEFFA]:{0:O.PRANKSTER},[e.CLEFAIRY]:{0:O.PRANKSTER},[e.CLEFABLE]:{0:O.ANALYTIC},[e.IGGLYBUFF]:{0:O.HUGE_POWER},[e.JIGGLYPUFF]:{0:O.HUGE_POWER},[e.WIGGLYTUFF]:{0:O.HUGE_POWER},[e.TOGEPI]:{0:O.PIXILATE},[e.TOGETIC]:{0:O.PIXILATE},[e.TOGEKISS]:{0:O.PIXILATE},[e.NATU]:{0:O.TINTED_LENS},[e.XATU]:{0:O.SHEER_FORCE},[e.MAREEP]:{0:O.ELECTROMORPHOSIS},[e.FLAAFFY]:{0:O.ELECTROMORPHOSIS},[e.AMPHAROS]:{0:O.ELECTROMORPHOSIS,1:O.ELECTROMORPHOSIS},[e.HOPPIP]:{0:O.WIND_RIDER},[e.SKIPLOOM]:{0:O.WIND_RIDER},[e.JUMPLUFF]:{0:O.FLUFFY},[e.AIPOM]:{0:O.SCRAPPY},[e.AMBIPOM]:{0:O.SCRAPPY},[e.SUNKERN]:{0:O.DROUGHT},[e.SUNFLORA]:{0:O.DROUGHT},[e.YANMA]:{0:O.TECHNICIAN},[e.YANMEGA]:{0:O.SHEER_FORCE},[e.WOOPER]:{0:O.WATER_VEIL},[e.QUAGSIRE]:{0:O.COMATOSE},[e.MURKROW]:{0:O.DARK_AURA},[e.HONCHKROW]:{0:O.DARK_AURA},[e.MISDREAVUS]:{0:O.BEADS_OF_RUIN},[e.MISMAGIUS]:{0:O.BEADS_OF_RUIN},[e.UNOWN]:{0:O.ADAPTABILITY,1:O.BEAST_BOOST,2:O.CONTRARY,3:O.DAZZLING,4:O.EMERGENCY_EXIT,5:O.FRIEND_GUARD,6:O.GOOD_AS_GOLD,7:O.HONEY_GATHER,8:O.IMPOSTER,9:O.JUSTIFIED,10:O.KLUTZ,11:O.LIBERO,12:O.MOODY,13:O.NEUTRALIZING_GAS,14:O.OPPORTUNIST,15:O.PICKUP,16:O.QUICK_DRAW,17:O.RUN_AWAY,18:O.SIMPLE,19:O.TRACE,20:O.UNNERVE,21:O.VICTORY_STAR,22:O.WANDERING_SPIRIT,23:O.FAIRY_AURA,24:O.DARK_AURA,25:O.AURA_BREAK,26:O.PURE_POWER,27:O.UNAWARE},[e.GIRAFARIG]:{0:O.PARENTAL_BOND},[e.FARIGIRAF]:{0:O.PARENTAL_BOND},[e.PINECO]:{0:O.ROUGH_SKIN},[e.FORRETRESS]:{0:O.IRON_BARBS},[e.DUNSPARCE]:{0:O.UNAWARE},[e.DUDUNSPARCE]:{0:O.UNAWARE,1:O.UNAWARE},[e.GLIGAR]:{0:O.POISON_TOUCH},[e.GLISCOR]:{0:O.TOXIC_BOOST},[e.SNUBBULL]:{0:O.PIXILATE},[e.GRANBULL]:{0:O.PIXILATE},[e.QWILFISH]:{0:O.TOXIC_DEBRIS},[e.SHUCKLE]:{0:O.HARVEST},[e.HERACROSS]:{0:O.TECHNICIAN,1:O.TECHNICIAN},[e.SNEASEL]:{0:O.TOUGH_CLAWS},[e.WEAVILE]:{0:O.TOUGH_CLAWS},[e.TEDDIURSA]:{0:O.RUN_AWAY},[e.URSARING]:{0:O.THICK_FAT},[e.URSALUNA]:{0:O.THICK_FAT},[e.SLUGMA]:{0:O.DROUGHT},[e.MAGCARGO]:{0:O.DESOLATE_LAND},[e.SWINUB]:{0:O.UNAWARE},[e.PILOSWINE]:{0:O.UNAWARE},[e.MAMOSWINE]:{0:O.SLUSH_RUSH},[e.CORSOLA]:{0:O.STORM_DRAIN},[e.REMORAID]:{0:O.SIMPLE},[e.OCTILLERY]:{0:O.SIMPLE},[e.DELIBIRD]:{0:O.HUGE_POWER},[e.SKARMORY]:{0:O.LIGHTNING_ROD},[e.HOUNDOUR]:{0:O.BALL_FETCH},[e.HOUNDOOM]:{0:O.LIGHTNING_ROD,1:O.LIGHTNING_ROD},[e.PHANPY]:{0:O.STURDY},[e.DONPHAN]:{0:O.SPEED_BOOST},[e.STANTLER]:{0:O.SPEED_BOOST},[e.WYRDEER]:{0:O.SPEED_BOOST},[e.SMEARGLE]:{0:O.PRANKSTER},[e.TYROGUE]:{0:O.DEFIANT},[e.HITMONLEE]:{0:O.SHEER_FORCE},[e.HITMONCHAN]:{0:O.MOXIE},[e.HITMONTOP]:{0:O.SPEED_BOOST},[e.SMOOCHUM]:{0:O.PSYCHIC_SURGE},[e.JYNX]:{0:O.PSYCHIC_SURGE},[e.ELEKID]:{0:O.SHEER_FORCE},[e.ELECTABUZZ]:{0:O.SHEER_FORCE},[e.ELECTIVIRE]:{0:O.SHEER_FORCE},[e.MAGBY]:{0:O.SHEER_FORCE},[e.MAGMAR]:{0:O.SHEER_FORCE},[e.MAGMORTAR]:{0:O.SHEER_FORCE},[e.MILTANK]:{0:O.STAMINA},[e.RAIKOU]:{0:O.BEAST_BOOST},[e.ENTEI]:{0:O.BEAST_BOOST},[e.SUICUNE]:{0:O.BEAST_BOOST},[e.LARVITAR]:{0:O.SOLID_ROCK},[e.PUPITAR]:{0:O.SOLID_ROCK},[e.TYRANITAR]:{0:O.SOLID_ROCK,1:O.SOLID_ROCK},[e.LUGIA]:{0:O.DELTA_STREAM},[e.HO_OH]:{0:O.MAGIC_GUARD},[e.CELEBI]:{0:O.PSYCHIC_SURGE},[e.TREECKO]:{0:O.TINTED_LENS},[e.GROVYLE]:{0:O.TINTED_LENS},[e.SCEPTILE]:{0:O.TINTED_LENS,1:O.TINTED_LENS},[e.TORCHIC]:{0:O.DEFIANT},[e.COMBUSKEN]:{0:O.DEFIANT},[e.BLAZIKEN]:{0:O.DEFIANT,1:O.DEFIANT},[e.MUDKIP]:{0:O.REGENERATOR},[e.MARSHTOMP]:{0:O.REGENERATOR},[e.SWAMPERT]:{0:O.REGENERATOR,1:O.DRIZZLE},[e.POOCHYENA]:{0:O.TOUGH_CLAWS},[e.MIGHTYENA]:{0:O.TOUGH_CLAWS},[e.ZIGZAGOON]:{0:O.RUN_AWAY},[e.LINOONE]:{0:O.RUN_AWAY},[e.WURMPLE]:{0:O.GLUTTONY},[e.SILCOON]:{0:O.STURDY},[e.BEAUTIFLY]:{0:O.SIMPLE},[e.CASCOON]:{0:O.STURDY},[e.DUSTOX]:{0:O.SIMPLE},[e.LOTAD]:{0:O.DRIZZLE},[e.LOMBRE]:{0:O.DRIZZLE},[e.LUDICOLO]:{0:O.DRIZZLE},[e.SEEDOT]:{0:O.STURDY},[e.NUZLEAF]:{0:O.SHARPNESS},[e.SHIFTRY]:{0:O.SHARPNESS},[e.TAILLOW]:{0:O.AERILATE},[e.SWELLOW]:{0:O.AERILATE},[e.WINGULL]:{0:O.WATER_ABSORB},[e.PELIPPER]:{0:O.SWIFT_SWIM},[e.RALTS]:{0:O.NEUROFORCE},[e.KIRLIA]:{0:O.NEUROFORCE},[e.GARDEVOIR]:{0:O.NEUROFORCE,1:O.PSYCHIC_SURGE},[e.GALLADE]:{0:O.NEUROFORCE,1:O.SHARPNESS},[e.SURSKIT]:{0:O.WATER_BUBBLE},[e.MASQUERAIN]:{0:O.WATER_BUBBLE},[e.SHROOMISH]:{0:O.GUTS},[e.BRELOOM]:{0:O.GUTS},[e.SLAKOTH]:{0:O.GUTS},[e.VIGOROTH]:{0:O.GUTS},[e.SLAKING]:{0:O.GUTS},[e.NINCADA]:{0:O.TECHNICIAN},[e.NINJASK]:{0:O.TECHNICIAN},[e.SHEDINJA]:{0:O.MAGIC_GUARD},[e.WHISMUR]:{0:O.PUNK_ROCK},[e.LOUDRED]:{0:O.PUNK_ROCK},[e.EXPLOUD]:{0:O.PUNK_ROCK},[e.MAKUHITA]:{0:O.STAMINA},[e.HARIYAMA]:{0:O.STAMINA},[e.AZURILL]:{0:O.MISTY_SURGE},[e.MARILL]:{0:O.MISTY_SURGE},[e.AZUMARILL]:{0:O.MISTY_SURGE},[e.NOSEPASS]:{0:O.SOLID_ROCK},[e.PROBOPASS]:{0:O.LEVITATE},[e.SKITTY]:{0:O.SCRAPPY},[e.DELCATTY]:{0:O.SCRAPPY},[e.SABLEYE]:{0:O.UNNERVE,1:O.UNNERVE},[e.MAWILE]:{0:O.ADAPTABILITY,1:O.INTIMIDATE},[e.ARON]:{0:O.EARTH_EATER},[e.LAIRON]:{0:O.EARTH_EATER},[e.AGGRON]:{0:O.EARTH_EATER,1:O.ROCKY_PAYLOAD},[e.MEDITITE]:{0:O.MINDS_EYE},[e.MEDICHAM]:{0:O.MINDS_EYE,1:O.MINDS_EYE},[e.ELECTRIKE]:{0:O.BALL_FETCH},[e.MANECTRIC]:{0:O.FLASH_FIRE,1:O.FLASH_FIRE},[e.PLUSLE]:{0:O.POWER_SPOT},[e.MINUN]:{0:O.POWER_SPOT},[e.VOLBEAT]:{0:O.HONEY_GATHER},[e.ILLUMISE]:{0:O.HONEY_GATHER},[e.GULPIN]:{0:O.EARTH_EATER},[e.SWALOT]:{0:O.EARTH_EATER},[e.CARVANHA]:{0:O.SHEER_FORCE},[e.SHARPEDO]:{0:O.SHEER_FORCE,1:O.SPEED_BOOST},[e.WAILMER]:{0:O.LEVITATE},[e.WAILORD]:{0:O.LEVITATE},[e.NUMEL]:{0:O.SOLID_ROCK},[e.CAMERUPT]:{0:O.FUR_COAT,1:O.STAMINA},[e.TORKOAL]:{0:O.ANALYTIC},[e.SPOINK]:{0:O.PSYCHIC_SURGE},[e.GRUMPIG]:{0:O.PSYCHIC_SURGE},[e.SPINDA]:{0:O.SIMPLE},[e.TRAPINCH]:{0:O.ADAPTABILITY},[e.VIBRAVA]:{0:O.ADAPTABILITY},[e.FLYGON]:{0:O.ADAPTABILITY},[e.CACNEA]:{0:O.SAND_RUSH},[e.CACTURNE]:{0:O.SAND_RUSH},[e.SWABLU]:{0:O.FLUFFY},[e.ALTARIA]:{0:O.FLUFFY,1:O.FLUFFY},[e.ZANGOOSE]:{0:O.POISON_HEAL},[e.SEVIPER]:{0:O.MULTISCALE},[e.LUNATONE]:{0:O.SHADOW_SHIELD},[e.SOLROCK]:{0:O.DROUGHT},[e.BARBOACH]:{0:O.SIMPLE},[e.WHISCASH]:{0:O.SIMPLE},[e.CORPHISH]:{0:O.TOUGH_CLAWS},[e.CRAWDAUNT]:{0:O.TOUGH_CLAWS},[e.BALTOY]:{0:O.WELL_BAKED_BODY},[e.CLAYDOL]:{0:O.WELL_BAKED_BODY},[e.LILEEP]:{0:O.SEED_SOWER},[e.CRADILY]:{0:O.SEED_SOWER},[e.ANORITH]:{0:O.WATER_ABSORB},[e.ARMALDO]:{0:O.WATER_ABSORB},[e.FEEBAS]:{0:O.MULTISCALE},[e.MILOTIC]:{0:O.MAGIC_GUARD},[e.CASTFORM]:{0:O.ADAPTABILITY,1:O.ADAPTABILITY,2:O.ADAPTABILITY,3:O.ADAPTABILITY},[e.KECLEON]:{0:O.ADAPTABILITY},[e.SHUPPET]:{0:O.SHADOW_SHIELD},[e.BANETTE]:{0:O.SHADOW_SHIELD,1:O.SHADOW_SHIELD},[e.DUSKULL]:{0:O.UNNERVE},[e.DUSCLOPS]:{0:O.UNNERVE},[e.DUSKNOIR]:{0:O.UNNERVE},[e.TROPIUS]:{0:O.RIPEN},[e.ABSOL]:{0:O.SHARPNESS,1:O.SHARPNESS},[e.WYNAUT]:{0:O.STURDY},[e.WOBBUFFET]:{0:O.STURDY},[e.SNORUNT]:{0:O.SNOW_WARNING},[e.GLALIE]:{0:O.SNOW_WARNING,1:O.SNOW_WARNING},[e.FROSLASS]:{0:O.SNOW_WARNING},[e.SPHEAL]:{0:O.UNAWARE},[e.SEALEO]:{0:O.UNAWARE},[e.WALREIN]:{0:O.UNAWARE},[e.CLAMPERL]:{0:O.DAUNTLESS_SHIELD},[e.GOREBYSS]:{0:O.ARENA_TRAP},[e.HUNTAIL]:{0:O.ARENA_TRAP},[e.RELICANTH]:{0:O.PRIMORDIAL_SEA},[e.LUVDISC]:{0:O.MULTISCALE},[e.BAGON]:{0:O.INTIMIDATE},[e.SHELGON]:{0:O.ANGER_SHELL},[e.SALAMENCE]:{0:O.GALE_WINGS,1:O.ROCK_HEAD},[e.BELDUM]:{0:O.LEVITATE},[e.METANG]:{0:O.LEVITATE},[e.METAGROSS]:{0:O.LEVITATE,1:O.FULL_METAL_BODY},[e.REGIROCK]:{0:O.SAND_STREAM},[e.REGICE]:{0:O.SNOW_WARNING},[e.REGISTEEL]:{0:O.STEELY_SPIRIT},[e.LATIAS]:{0:O.SPEED_BOOST,1:O.PRISM_ARMOR},[e.LATIOS]:{0:O.SPEED_BOOST,1:O.TINTED_LENS},[e.KYOGRE]:{0:O.MOLD_BREAKER,1:O.TERAVOLT},[e.GROUDON]:{0:O.MOLD_BREAKER,1:O.TURBOBLAZE},[e.RAYQUAZA]:{0:O.UNNERVE,1:O.UNNERVE},[e.JIRACHI]:{0:O.COMATOSE},[e.DEOXYS]:{0:O.PROTEAN,1:O.ADAPTABILITY,2:O.REGENERATOR,3:O.SHADOW_SHIELD},[e.TURTWIG]:{0:O.SOLID_ROCK},[e.GROTLE]:{0:O.SOLID_ROCK},[e.TORTERRA]:{0:O.THICK_FAT},[e.CHIMCHAR]:{0:O.UNNERVE},[e.MONFERNO]:{0:O.BEAST_BOOST},[e.INFERNAPE]:{0:O.BEAST_BOOST},[e.PIPLUP]:{0:O.CUTE_CHARM},[e.PRINPLUP]:{0:O.DRIZZLE},[e.EMPOLEON]:{0:O.DRIZZLE},[e.STARLY]:{0:O.INTIMIDATE},[e.STARAVIA]:{0:O.ROCK_HEAD},[e.STARAPTOR]:{0:O.ROCK_HEAD},[e.BIDOOF]:{0:O.SAP_SIPPER},[e.BIBAREL]:{0:O.SAP_SIPPER},[e.KRICKETOT]:{0:O.HONEY_GATHER},[e.KRICKETUNE]:{0:O.SHARPNESS},[e.SHINX]:{0:O.SPEED_BOOST},[e.LUXIO]:{0:O.SPEED_BOOST},[e.LUXRAY]:{0:O.SPEED_BOOST},[e.BUDEW]:{0:O.SEED_SOWER},[e.ROSELIA]:{0:O.GRASSY_SURGE},[e.ROSERADE]:{0:O.GRASSY_SURGE},[e.CRANIDOS]:{0:O.ROCK_HEAD},[e.RAMPARDOS]:{0:O.ROCK_HEAD},[e.SHIELDON]:{0:O.EARTH_EATER},[e.BASTIODON]:{0:O.EARTH_EATER},[e.BURMY]:{0:O.STURDY,1:O.STURDY,2:O.STURDY},[e.WORMADAM]:{0:O.STURDY,1:O.STURDY,2:O.STURDY},[e.MOTHIM]:{0:O.SPEED_BOOST},[e.COMBEE]:{0:O.RUN_AWAY},[e.VESPIQUEN]:{0:O.INTIMIDATE},[e.PACHIRISU]:{0:O.HONEY_GATHER},[e.BUIZEL]:{0:O.MOXIE},[e.FLOATZEL]:{0:O.MOXIE},[e.CHERUBI]:{0:O.DROUGHT},[e.CHERRIM]:{0:O.ORICHALCUM_PULSE,1:O.ORICHALCUM_PULSE},[e.SHELLOS]:{0:O.REGENERATOR,1:O.REGENERATOR},[e.GASTRODON]:{0:O.REGENERATOR,1:O.REGENERATOR},[e.DRIFLOON]:{0:O.MAGIC_GUARD},[e.DRIFBLIM]:{0:O.MAGIC_GUARD},[e.BUNEARY]:{0:O.ADAPTABILITY},[e.LOPUNNY]:{0:O.ADAPTABILITY,1:O.ADAPTABILITY},[e.GLAMEOW]:{0:O.INTIMIDATE},[e.PURUGLY]:{0:O.INTIMIDATE},[e.CHINGLING]:{0:O.PUNK_ROCK},[e.CHIMECHO]:{0:O.PUNK_ROCK},[e.STUNKY]:{0:O.NEUTRALIZING_GAS},[e.SKUNTANK]:{0:O.NEUTRALIZING_GAS},[e.BRONZOR]:{0:O.MIRROR_ARMOR},[e.BRONZONG]:{0:O.MIRROR_ARMOR},[e.BONSLY]:{0:O.SAP_SIPPER},[e.SUDOWOODO]:{0:O.SAP_SIPPER},[e.MIME_JR]:{0:O.PRANKSTER},[e.MR_MIME]:{0:O.PRANKSTER},[e.GALAR_MR_MIME]:{0:O.PRANKSTER},[e.MR_RIME]:{0:O.PRANKSTER},[e.HAPPINY]:{0:O.HOSPITALITY},[e.CHANSEY]:{0:O.FRIEND_GUARD},[e.BLISSEY]:{0:O.FUR_COAT},[e.CHATOT]:{0:O.PUNK_ROCK},[e.SPIRITOMB]:{0:O.VESSEL_OF_RUIN},[e.GIBLE]:{0:O.ARENA_TRAP},[e.GABITE]:{0:O.ARENA_TRAP},[e.GARCHOMP]:{0:O.ARENA_TRAP,1:O.SAND_RUSH},[e.MUNCHLAX]:{0:O.CHEEK_POUCH},[e.SNORLAX]:{0:O.CHEEK_POUCH,1:O.RIPEN},[e.RIOLU]:{0:O.MINDS_EYE},[e.LUCARIO]:{0:O.MINDS_EYE,1:O.MINDS_EYE},[e.HIPPOPOTAS]:{0:O.UNAWARE},[e.HIPPOWDON]:{0:O.UNAWARE},[e.SKORUPI]:{0:O.SUPER_LUCK},[e.DRAPION]:{0:O.SUPER_LUCK},[e.CROAGUNK]:{0:O.MOXIE},[e.TOXICROAK]:{0:O.MOXIE},[e.CARNIVINE]:{0:O.ARENA_TRAP},[e.FINNEON]:{0:O.WATER_BUBBLE},[e.LUMINEON]:{0:O.WATER_BUBBLE},[e.MANTYKE]:{0:O.UNAWARE},[e.MANTINE]:{0:O.UNAWARE},[e.SNOVER]:{0:O.SLUSH_RUSH},[e.ABOMASNOW]:{0:O.SLUSH_RUSH,1:O.SEED_SOWER},[e.ROTOM]:{0:O.HADRON_ENGINE,1:O.HADRON_ENGINE,2:O.HADRON_ENGINE,3:O.HADRON_ENGINE,4:O.HADRON_ENGINE,5:O.HADRON_ENGINE},[e.UXIE]:{0:O.ILLUSION},[e.MESPRIT]:{0:O.MOODY},[e.AZELF]:{0:O.NEUROFORCE},[e.DIALGA]:{0:O.BERSERK,1:O.BERSERK},[e.PALKIA]:{0:O.BERSERK,1:O.BERSERK},[e.HEATRAN]:{0:O.EARTH_EATER},[e.REGIGIGAS]:{0:O.SCRAPPY},[e.GIRATINA]:{0:O.SHADOW_SHIELD,1:O.SHADOW_SHIELD},[e.CRESSELIA]:{0:O.SHADOW_SHIELD},[e.PHIONE]:{0:O.SIMPLE},[e.MANAPHY]:{0:O.PRIMORDIAL_SEA},[e.DARKRAI]:{0:O.UNNERVE},[e.SHAYMIN]:{0:O.GRASSY_SURGE,1:O.DELTA_STREAM},[e.ARCEUS]:{0:O.ADAPTABILITY,1:O.ADAPTABILITY,2:O.ADAPTABILITY,3:O.ADAPTABILITY,4:O.ADAPTABILITY,5:O.ADAPTABILITY,6:O.ADAPTABILITY,7:O.ADAPTABILITY,8:O.ADAPTABILITY,9:O.ADAPTABILITY,10:O.ADAPTABILITY,11:O.ADAPTABILITY,12:O.ADAPTABILITY,13:O.ADAPTABILITY,14:O.ADAPTABILITY,15:O.ADAPTABILITY,16:O.ADAPTABILITY,17:O.ADAPTABILITY},[e.VICTINI]:{0:O.SHEER_FORCE},[e.SNIVY]:{0:O.MULTISCALE},[e.SERVINE]:{0:O.MULTISCALE},[e.SERPERIOR]:{0:O.MULTISCALE},[e.TEPIG]:{0:O.GLUTTONY},[e.PIGNITE]:{0:O.ROCK_HEAD},[e.EMBOAR]:{0:O.ROCK_HEAD},[e.OSHAWOTT]:{0:O.MOLD_BREAKER},[e.DEWOTT]:{0:O.MOLD_BREAKER},[e.SAMUROTT]:{0:O.LIGHTNING_ROD},[e.HISUI_SAMUROTT]:{0:O.MOLD_BREAKER},[e.PATRAT]:{0:O.NO_GUARD},[e.WATCHOG]:{0:O.NO_GUARD},[e.LILLIPUP]:{0:O.BALL_FETCH},[e.HERDIER]:{0:O.FUR_COAT},[e.STOUTLAND]:{0:O.FUR_COAT},[e.PURRLOIN]:{0:O.PICKUP},[e.LIEPARD]:{0:O.PICKUP},[e.PANSAGE]:{0:O.WELL_BAKED_BODY},[e.SIMISAGE]:{0:O.WELL_BAKED_BODY},[e.PANSEAR]:{0:O.WATER_ABSORB},[e.SIMISEAR]:{0:O.WATER_ABSORB},[e.PANPOUR]:{0:O.SAP_SIPPER},[e.SIMIPOUR]:{0:O.SAP_SIPPER},[e.MUNNA]:{0:O.NEUTRALIZING_GAS},[e.MUSHARNA]:{0:O.NEUTRALIZING_GAS},[e.PIDOVE]:{0:O.SNIPER},[e.TRANQUILL]:{0:O.SNIPER},[e.UNFEZANT]:{0:O.SNIPER},[e.BLITZLE]:{0:O.ELECTRIC_SURGE},[e.ZEBSTRIKA]:{0:O.ELECTRIC_SURGE},[e.ROGGENROLA]:{0:O.SOLID_ROCK},[e.BOLDORE]:{0:O.SOLID_ROCK},[e.GIGALITH]:{0:O.SOLID_ROCK},[e.WOOBAT]:{0:O.OPPORTUNIST},[e.SWOOBAT]:{0:O.OPPORTUNIST},[e.DRILBUR]:{0:O.STURDY},[e.EXCADRILL]:{0:O.STURDY},[e.AUDINO]:{0:O.FRIEND_GUARD,1:O.FAIRY_AURA},[e.TIMBURR]:{0:O.ROCKY_PAYLOAD},[e.GURDURR]:{0:O.ROCKY_PAYLOAD},[e.CONKELDURR]:{0:O.ROCKY_PAYLOAD},[e.TYMPOLE]:{0:O.POISON_HEAL},[e.PALPITOAD]:{0:O.POISON_HEAL},[e.SEISMITOAD]:{0:O.POISON_HEAL},[e.THROH]:{0:O.STAMINA},[e.SAWK]:{0:O.SCRAPPY},[e.SEWADDLE]:{0:O.SHIELD_DUST},[e.SWADLOON]:{0:O.SHIELD_DUST},[e.LEAVANNY]:{0:O.SHARPNESS},[e.VENIPEDE]:{0:O.STAMINA},[e.WHIRLIPEDE]:{0:O.STAMINA},[e.SCOLIPEDE]:{0:O.STAMINA},[e.COTTONEE]:{0:O.FLUFFY},[e.WHIMSICOTT]:{0:O.FLUFFY},[e.PETILIL]:{0:O.FLOWER_VEIL},[e.LILLIGANT]:{0:O.GRASSY_SURGE},[e.HISUI_LILLIGANT]:{0:O.FLOWER_VEIL},[e.BASCULIN]:{0:O.ROCK_HEAD,1:O.RECKLESS,2:O.SUPREME_OVERLORD},[e.BASCULEGION]:{0:O.SUPREME_OVERLORD,1:O.SUPREME_OVERLORD},[e.SANDILE]:{0:O.TOUGH_CLAWS},[e.KROKOROK]:{0:O.TOUGH_CLAWS},[e.KROOKODILE]:{0:O.TOUGH_CLAWS},[e.DARUMAKA]:{0:O.GORILLA_TACTICS},[e.DARMANITAN]:{0:O.GORILLA_TACTICS,1:O.SOLID_ROCK},[e.MARACTUS]:{0:O.WELL_BAKED_BODY},[e.DWEBBLE]:{0:O.ROCKY_PAYLOAD},[e.CRUSTLE]:{0:O.ROCKY_PAYLOAD},[e.SCRAGGY]:{0:O.PROTEAN},[e.SCRAFTY]:{0:O.PROTEAN},[e.SIGILYPH]:{0:O.FLARE_BOOST},[e.YAMASK]:{0:O.PURIFYING_SALT},[e.COFAGRIGUS]:{0:O.PURIFYING_SALT},[e.TIRTOUGA]:{0:O.WATER_ABSORB},[e.CARRACOSTA]:{0:O.WATER_ABSORB},[e.ARCHEN]:{0:O.MULTISCALE},[e.ARCHEOPS]:{0:O.MULTISCALE},[e.TRUBBISH]:{0:O.NEUTRALIZING_GAS},[e.GARBODOR]:{0:O.NEUTRALIZING_GAS,1:O.NEUTRALIZING_GAS},[e.ZORUA]:{0:O.ADAPTABILITY},[e.ZOROARK]:{0:O.ADAPTABILITY},[e.MINCCINO]:{0:O.FUR_COAT},[e.CINCCINO]:{0:O.FUR_COAT},[e.GOTHITA]:{0:O.UNNERVE},[e.GOTHORITA]:{0:O.UNNERVE},[e.GOTHITELLE]:{0:O.UNNERVE},[e.SOLOSIS]:{0:O.PSYCHIC_SURGE},[e.DUOSION]:{0:O.PSYCHIC_SURGE},[e.REUNICLUS]:{0:O.PSYCHIC_SURGE},[e.DUCKLETT]:{0:O.DRIZZLE},[e.SWANNA]:{0:O.DRIZZLE},[e.VANILLITE]:{0:O.REFRIGERATE},[e.VANILLISH]:{0:O.REFRIGERATE},[e.VANILLUXE]:{0:O.SLUSH_RUSH},[e.DEERLING]:{0:O.FLOWER_VEIL,1:O.CUD_CHEW,2:O.HARVEST,3:O.FUR_COAT},[e.SAWSBUCK]:{0:O.FLOWER_VEIL,1:O.CUD_CHEW,2:O.HARVEST,3:O.FUR_COAT},[e.EMOLGA]:{0:O.SERENE_GRACE},[e.KARRABLAST]:{0:O.QUICK_DRAW},[e.ESCAVALIER]:{0:O.QUICK_DRAW},[e.FOONGUS]:{0:O.MYCELIUM_MIGHT},[e.AMOONGUSS]:{0:O.THICK_FAT},[e.FRILLISH]:{0:O.POISON_HEAL},[e.JELLICENT]:{0:O.POISON_HEAL},[e.ALOMOMOLA]:{0:O.MULTISCALE},[e.JOLTIK]:{0:O.TRANSISTOR},[e.GALVANTULA]:{0:O.TRANSISTOR},[e.FERROSEED]:{0:O.ROUGH_SKIN},[e.FERROTHORN]:{0:O.ROUGH_SKIN},[e.KLINK]:{0:O.STEELY_SPIRIT},[e.KLANG]:{0:O.STEELY_SPIRIT},[e.KLINKLANG]:{0:O.STEELY_SPIRIT},[e.TYNAMO]:{0:O.POISON_HEAL},[e.EELEKTRIK]:{0:O.POISON_HEAL},[e.EELEKTROSS]:{0:O.POISON_HEAL},[e.ELGYEM]:{0:O.BEADS_OF_RUIN},[e.BEHEEYEM]:{0:O.BEADS_OF_RUIN},[e.LITWICK]:{0:O.SHADOW_TAG},[e.LAMPENT]:{0:O.SHADOW_TAG},[e.CHANDELURE]:{0:O.SHADOW_TAG},[e.AXEW]:{0:O.DRAGONS_MAW},[e.FRAXURE]:{0:O.DRAGONS_MAW},[e.HAXORUS]:{0:O.DRAGONS_MAW},[e.CUBCHOO]:{0:O.FUR_COAT},[e.BEARTIC]:{0:O.FUR_COAT},[e.CRYOGONAL]:{0:O.SNOW_WARNING},[e.SHELMET]:{0:O.STAMINA},[e.ACCELGOR]:{0:O.PROTEAN},[e.STUNFISK]:{0:O.STORM_DRAIN},[e.MIENFOO]:{0:O.NO_GUARD},[e.MIENSHAO]:{0:O.NO_GUARD},[e.DRUDDIGON]:{0:O.INTIMIDATE},[e.GOLETT]:{0:O.SHADOW_SHIELD},[e.GOLURK]:{0:O.SHADOW_SHIELD},[e.PAWNIARD]:{0:O.SWORD_OF_RUIN},[e.BISHARP]:{0:O.SWORD_OF_RUIN},[e.KINGAMBIT]:{0:O.SWORD_OF_RUIN},[e.BOUFFALANT]:{0:O.ROCK_HEAD},[e.RUFFLET]:{0:O.SPEED_BOOST},[e.BRAVIARY]:{0:O.SPEED_BOOST},[e.HISUI_BRAVIARY]:{0:O.SPEED_BOOST},[e.VULLABY]:{0:O.THICK_FAT},[e.MANDIBUZZ]:{0:O.THICK_FAT},[e.HEATMOR]:{0:O.CONTRARY},[e.DURANT]:{0:O.COMPOUND_EYES},[e.DEINO]:{0:O.NO_GUARD},[e.ZWEILOUS]:{0:O.NO_GUARD},[e.HYDREIGON]:{0:O.PARENTAL_BOND},[e.LARVESTA]:{0:O.FLASH_FIRE},[e.VOLCARONA]:{0:O.DROUGHT},[e.COBALION]:{0:O.INTREPID_SWORD},[e.TERRAKION]:{0:O.ROCKY_PAYLOAD},[e.VIRIZION]:{0:O.SHARPNESS},[e.TORNADUS]:{0:O.DRIZZLE,1:O.DRIZZLE},[e.THUNDURUS]:{0:O.DRIZZLE,1:O.DRIZZLE},[e.RESHIRAM]:{0:O.ORICHALCUM_PULSE},[e.ZEKROM]:{0:O.HADRON_ENGINE},[e.LANDORUS]:{0:O.STORM_DRAIN,1:O.STORM_DRAIN},[e.KYUREM]:{0:O.SNOW_WARNING,1:O.HADRON_ENGINE,2:O.ORICHALCUM_PULSE},[e.KELDEO]:{0:O.GRIM_NEIGH,1:O.GRIM_NEIGH},[e.MELOETTA]:{0:O.PUNK_ROCK,1:O.SCRAPPY},[e.GENESECT]:{0:O.PROTEAN,1:O.PROTEAN,2:O.PROTEAN,3:O.PROTEAN,4:O.PROTEAN},[e.CHESPIN]:{0:O.ROUGH_SKIN},[e.QUILLADIN]:{0:O.DAUNTLESS_SHIELD},[e.CHESNAUGHT]:{0:O.DAUNTLESS_SHIELD},[e.FENNEKIN]:{0:O.FLUFFY},[e.BRAIXEN]:{0:O.PSYCHIC_SURGE},[e.DELPHOX]:{0:O.PSYCHIC_SURGE},[e.FROAKIE]:{0:O.STAKEOUT,1:O.STAKEOUT},[e.FROGADIER]:{0:O.STAKEOUT,1:O.STAKEOUT},[e.GRENINJA]:{0:O.STAKEOUT,1:O.STAKEOUT,2:O.STAKEOUT},[e.BUNNELBY]:{0:O.INNER_FOCUS},[e.DIGGERSBY]:{0:O.THICK_FAT},[e.FLETCHLING]:{0:O.FLAME_BODY},[e.FLETCHINDER]:{0:O.MAGIC_GUARD},[e.TALONFLAME]:{0:O.MAGIC_GUARD},[e.SCATTERBUG]:{0:O.RUN_AWAY,1:O.RUN_AWAY,2:O.RUN_AWAY,3:O.RUN_AWAY,4:O.RUN_AWAY,5:O.RUN_AWAY,6:O.RUN_AWAY,7:O.RUN_AWAY,8:O.RUN_AWAY,9:O.RUN_AWAY,10:O.RUN_AWAY,11:O.RUN_AWAY,12:O.RUN_AWAY,13:O.RUN_AWAY,14:O.RUN_AWAY,15:O.RUN_AWAY,16:O.RUN_AWAY,17:O.RUN_AWAY,18:O.RUN_AWAY,19:O.RUN_AWAY},[e.SPEWPA]:{0:O.COMPOUND_EYES,1:O.COMPOUND_EYES,2:O.COMPOUND_EYES,3:O.COMPOUND_EYES,4:O.COMPOUND_EYES,5:O.COMPOUND_EYES,6:O.COMPOUND_EYES,7:O.COMPOUND_EYES,8:O.COMPOUND_EYES,9:O.COMPOUND_EYES,10:O.COMPOUND_EYES,11:O.COMPOUND_EYES,12:O.COMPOUND_EYES,13:O.COMPOUND_EYES,14:O.COMPOUND_EYES,15:O.COMPOUND_EYES,16:O.COMPOUND_EYES,17:O.COMPOUND_EYES,18:O.COMPOUND_EYES,19:O.COMPOUND_EYES},[e.VIVILLON]:{0:O.PRANKSTER,1:O.PRANKSTER,2:O.PRANKSTER,3:O.PRANKSTER,4:O.PRANKSTER,5:O.PRANKSTER,6:O.PRANKSTER,7:O.PRANKSTER,8:O.PRANKSTER,9:O.PRANKSTER,10:O.PRANKSTER,11:O.PRANKSTER,12:O.PRANKSTER,13:O.PRANKSTER,14:O.PRANKSTER,15:O.PRANKSTER,16:O.PRANKSTER,17:O.PRANKSTER,18:O.PRANKSTER,19:O.PRANKSTER},[e.LITLEO]:{0:O.BEAST_BOOST},[e.PYROAR]:{0:O.BEAST_BOOST},[e.FLABEBE]:{0:O.GRASSY_SURGE,1:O.GRASSY_SURGE,2:O.GRASSY_SURGE,3:O.GRASSY_SURGE,4:O.GRASSY_SURGE},[e.FLOETTE]:{0:O.GRASSY_SURGE,1:O.GRASSY_SURGE,2:O.GRASSY_SURGE,3:O.GRASSY_SURGE,4:O.GRASSY_SURGE},[e.FLORGES]:{0:O.GRASSY_SURGE,1:O.GRASSY_SURGE,2:O.GRASSY_SURGE,3:O.GRASSY_SURGE,4:O.GRASSY_SURGE},[e.SKIDDO]:{0:O.SEED_SOWER},[e.GOGOAT]:{0:O.SEED_SOWER},[e.PANCHAM]:{0:O.TECHNICIAN},[e.PANGORO]:{0:O.FUR_COAT},[e.FURFROU]:{0:O.FLUFFY,1:O.FLUFFY,2:O.FLUFFY,3:O.FLUFFY,4:O.FLUFFY,5:O.FLUFFY,6:O.FLUFFY,7:O.FLUFFY,8:O.FLUFFY,9:O.FLUFFY},[e.ESPURR]:{0:O.PRANKSTER},[e.MEOWSTIC]:{0:O.FUR_COAT,1:O.NEUROFORCE},[e.HONEDGE]:{0:O.SHARPNESS},[e.DOUBLADE]:{0:O.SHARPNESS},[e.AEGISLASH]:{0:O.SHARPNESS,1:O.SHARPNESS},[e.SPRITZEE]:{0:O.FUR_COAT},[e.AROMATISSE]:{0:O.FUR_COAT},[e.SWIRLIX]:{0:O.RIPEN},[e.SLURPUFF]:{0:O.RIPEN},[e.INKAY]:{0:O.SHADOW_SHIELD},[e.MALAMAR]:{0:O.SHADOW_SHIELD},[e.BINACLE]:{0:O.SAP_SIPPER},[e.BARBARACLE]:{0:O.SAP_SIPPER},[e.SKRELP]:{0:O.WATER_BUBBLE},[e.DRAGALGE]:{0:O.DRAGONS_MAW},[e.CLAUNCHER]:{0:O.PROTEAN},[e.CLAWITZER]:{0:O.PROTEAN},[e.HELIOPTILE]:{0:O.PROTEAN},[e.HELIOLISK]:{0:O.PROTEAN},[e.TYRUNT]:{0:O.SHEER_FORCE},[e.TYRANTRUM]:{0:O.SHEER_FORCE},[e.AMAURA]:{0:O.ICE_SCALES},[e.AURORUS]:{0:O.ICE_SCALES},[e.HAWLUCHA]:{0:O.MOXIE},[e.DEDENNE]:{0:O.PIXILATE},[e.CARBINK]:{0:O.SOLID_ROCK},[e.GOOMY]:{0:O.REGENERATOR},[e.SLIGGOO]:{0:O.POISON_HEAL},[e.GOODRA]:{0:O.POISON_HEAL},[e.HISUI_SLIGGOO]:{0:O.REGENERATOR},[e.HISUI_GOODRA]:{0:O.REGENERATOR},[e.KLEFKI]:{0:O.LEVITATE},[e.PHANTUMP]:{0:O.SHADOW_TAG},[e.TREVENANT]:{0:O.SHADOW_TAG},[e.PUMPKABOO]:{0:O.ILLUMINATE,1:O.ADAPTABILITY,2:O.WELL_BAKED_BODY,3:O.SEED_SOWER},[e.GOURGEIST]:{0:O.ILLUMINATE,1:O.ADAPTABILITY,2:O.WELL_BAKED_BODY,3:O.SEED_SOWER},[e.BERGMITE]:{0:O.ICE_SCALES},[e.AVALUGG]:{0:O.ICE_SCALES},[e.HISUI_AVALUGG]:{0:O.ICE_SCALES},[e.NOIBAT]:{0:O.CHEEK_POUCH},[e.NOIVERN]:{0:O.PUNK_ROCK},[e.XERNEAS]:{0:O.HARVEST,1:O.HARVEST},[e.YVELTAL]:{0:O.SOUL_HEART},[e.ZYGARDE]:{0:O.UNNERVE,1:O.MOXIE,2:O.UNNERVE,3:O.MOXIE,4:O.ADAPTABILITY,5:O.ADAPTABILITY},[e.DIANCIE]:{0:O.SOLID_ROCK,1:O.PRISM_ARMOR},[e.HOOPA]:{0:O.OPPORTUNIST,1:O.OPPORTUNIST},[e.VOLCANION]:{0:O.NEUTRALIZING_GAS},[e.ETERNAL_FLOETTE]:{0:O.MAGIC_GUARD},[e.ROWLET]:{0:O.WIND_RIDER},[e.DARTRIX]:{0:O.WIND_RIDER},[e.DECIDUEYE]:{0:O.SNIPER},[e.HISUI_DECIDUEYE]:{0:O.SNIPER},[e.LITTEN]:{0:O.OPPORTUNIST},[e.TORRACAT]:{0:O.OPPORTUNIST},[e.INCINEROAR]:{0:O.OPPORTUNIST},[e.POPPLIO]:{0:O.PUNK_ROCK},[e.BRIONNE]:{0:O.PUNK_ROCK},[e.PRIMARINA]:{0:O.PUNK_ROCK},[e.PIKIPEK]:{0:O.TECHNICIAN},[e.TRUMBEAK]:{0:O.TECHNICIAN},[e.TOUCANNON]:{0:O.TECHNICIAN},[e.YUNGOOS]:{0:O.TOUGH_CLAWS},[e.GUMSHOOS]:{0:O.TOUGH_CLAWS},[e.GRUBBIN]:{0:O.SHIELD_DUST},[e.CHARJABUG]:{0:O.POWER_SPOT},[e.VIKAVOLT]:{0:O.SPEED_BOOST},[e.CRABRAWLER]:{0:O.WATER_BUBBLE},[e.CRABOMINABLE]:{0:O.WATER_BUBBLE},[e.ORICORIO]:{0:O.ADAPTABILITY,1:O.ADAPTABILITY,2:O.ADAPTABILITY,3:O.ADAPTABILITY},[e.CUTIEFLY]:{0:O.PICKUP},[e.RIBOMBEE]:{0:O.PICKUP},[e.ROCKRUFF]:{0:O.PICKUP,1:O.PICKUP},[e.LYCANROC]:{0:O.STURDY,1:O.INTIMIDATE,2:O.STAKEOUT},[e.WISHIWASHI]:{0:O.REGENERATOR,1:O.REGENERATOR},[e.MAREANIE]:{0:O.TOXIC_DEBRIS},[e.TOXAPEX]:{0:O.TOXIC_DEBRIS},[e.MUDBRAY]:{0:O.SAP_SIPPER},[e.MUDSDALE]:{0:O.SAP_SIPPER},[e.DEWPIDER]:{0:O.TINTED_LENS},[e.ARAQUANID]:{0:O.TINTED_LENS},[e.FOMANTIS]:{0:O.SHARPNESS},[e.LURANTIS]:{0:O.SHARPNESS},[e.MORELULL]:{0:O.TRIAGE},[e.SHIINOTIC]:{0:O.TRIAGE},[e.SALANDIT]:{0:O.PICKUP},[e.SALAZZLE]:{0:O.DRAGONS_MAW},[e.STUFFUL]:{0:O.SCRAPPY},[e.BEWEAR]:{0:O.SCRAPPY},[e.BOUNSWEET]:{0:O.SIMPLE},[e.STEENEE]:{0:O.SIMPLE},[e.TSAREENA]:{0:O.MOXIE},[e.COMFEY]:{0:O.FRIEND_GUARD},[e.ORANGURU]:{0:O.POWER_SPOT},[e.PASSIMIAN]:{0:O.LIBERO},[e.WIMPOD]:{0:O.REGENERATOR},[e.GOLISOPOD]:{0:O.REGENERATOR},[e.SANDYGAST]:{0:O.SAND_SPIT},[e.PALOSSAND]:{0:O.SAND_SPIT},[e.PYUKUMUKU]:{0:O.PURIFYING_SALT},[e.TYPE_NULL]:{0:O.CLEAR_BODY},[e.SILVALLY]:{0:O.ADAPTABILITY,1:O.ADAPTABILITY,2:O.ADAPTABILITY,3:O.ADAPTABILITY,4:O.ADAPTABILITY,5:O.ADAPTABILITY,6:O.ADAPTABILITY,7:O.ADAPTABILITY,8:O.ADAPTABILITY,9:O.ADAPTABILITY,10:O.ADAPTABILITY,11:O.ADAPTABILITY,12:O.ADAPTABILITY,13:O.ADAPTABILITY,14:O.ADAPTABILITY,15:O.ADAPTABILITY,16:O.ADAPTABILITY,17:O.ADAPTABILITY},[e.MINIOR]:{0:O.STURDY,1:O.STURDY,2:O.STURDY,3:O.STURDY,4:O.STURDY,5:O.STURDY,6:O.STURDY,7:O.AERILATE,8:O.AERILATE,9:O.AERILATE,10:O.AERILATE,11:O.AERILATE,12:O.AERILATE,13:O.AERILATE},[e.KOMALA]:{0:O.GUTS},[e.TURTONATOR]:{0:O.DAUNTLESS_SHIELD},[e.TOGEDEMARU]:{0:O.ROUGH_SKIN},[e.MIMIKYU]:{0:O.TOUGH_CLAWS,1:O.TOUGH_CLAWS},[e.BRUXISH]:{0:O.MULTISCALE},[e.DRAMPA]:{0:O.THICK_FAT},[e.DHELMISE]:{0:O.WATER_BUBBLE},[e.JANGMO_O]:{0:O.DAUNTLESS_SHIELD},[e.HAKAMO_O]:{0:O.DAUNTLESS_SHIELD},[e.KOMMO_O]:{0:O.DAUNTLESS_SHIELD},[e.TAPU_KOKO]:{0:O.DAUNTLESS_SHIELD},[e.TAPU_LELE]:{0:O.BERSERK},[e.TAPU_BULU]:{0:O.FLOWER_VEIL},[e.TAPU_FINI]:{0:O.FAIRY_AURA},[e.COSMOG]:{0:O.PICKUP},[e.COSMOEM]:{0:O.POWER_SPOT},[e.SOLGALEO]:{0:O.BEAST_BOOST},[e.LUNALA]:{0:O.BEAST_BOOST},[e.NIHILEGO]:{0:O.LEVITATE},[e.BUZZWOLE]:{0:O.MOXIE},[e.PHEROMOSA]:{0:O.TINTED_LENS},[e.XURKITREE]:{0:O.TRANSISTOR},[e.CELESTEELA]:{0:O.HEATPROOF},[e.KARTANA]:{0:O.TECHNICIAN},[e.GUZZLORD]:{0:O.POISON_HEAL},[e.NECROZMA]:{0:O.BEAST_BOOST,1:O.FULL_METAL_BODY,2:O.SHADOW_SHIELD,3:O.UNNERVE},[e.MAGEARNA]:{0:O.STEELY_SPIRIT,1:O.STEELY_SPIRIT},[e.MARSHADOW]:{0:O.IRON_FIST},[e.POIPOLE]:{0:O.LEVITATE},[e.NAGANADEL]:{0:O.LEVITATE},[e.STAKATAKA]:{0:O.SOLID_ROCK},[e.BLACEPHALON]:{0:O.MAGIC_GUARD},[e.ZERAORA]:{0:O.TOUGH_CLAWS},[e.MELTAN]:{0:O.HEATPROOF},[e.MELMETAL]:{0:O.HEATPROOF,1:O.FULL_METAL_BODY},[e.ALOLA_RATTATA]:{0:O.ADAPTABILITY},[e.ALOLA_RATICATE]:{0:O.ADAPTABILITY},[e.ALOLA_SANDSHREW]:{0:O.ICE_SCALES},[e.ALOLA_SANDSLASH]:{0:O.ICE_SCALES},[e.ALOLA_VULPIX]:{0:O.ICE_BODY},[e.ALOLA_NINETALES]:{0:O.ICE_BODY},[e.ALOLA_DIGLETT]:{0:O.STURDY},[e.ALOLA_DUGTRIO]:{0:O.STURDY},[e.ALOLA_MEOWTH]:{0:O.DARK_AURA},[e.ALOLA_PERSIAN]:{0:O.DARK_AURA},[e.ALOLA_GEODUDE]:{0:O.DRY_SKIN},[e.ALOLA_GRAVELER]:{0:O.DRY_SKIN},[e.ALOLA_GOLEM]:{0:O.DRY_SKIN},[e.ALOLA_GRIMER]:{0:O.TOXIC_DEBRIS},[e.ALOLA_MUK]:{0:O.TOXIC_DEBRIS},[e.GROOKEY]:{0:O.PICKPOCKET},[e.THWACKEY]:{0:O.PICKPOCKET},[e.RILLABOOM]:{0:O.GRASS_PELT,1:O.GRASS_PELT},[e.SCORBUNNY]:{0:O.SHEER_FORCE},[e.RABOOT]:{0:O.SHEER_FORCE},[e.CINDERACE]:{0:O.NO_GUARD,1:O.NO_GUARD},[e.SOBBLE]:{0:O.SUPER_LUCK},[e.DRIZZILE]:{0:O.SUPER_LUCK},[e.INTELEON]:{0:O.SUPER_LUCK,1:O.SUPER_LUCK},[e.SKWOVET]:{0:O.HARVEST},[e.GREEDENT]:{0:O.HARVEST},[e.ROOKIDEE]:{0:O.GALE_WINGS},[e.CORVISQUIRE]:{0:O.GALE_WINGS},[e.CORVIKNIGHT]:{0:O.IRON_BARBS,1:O.IRON_BARBS},[e.BLIPBUG]:{0:O.RUN_AWAY},[e.DOTTLER]:{0:O.PSYCHIC_SURGE},[e.ORBEETLE]:{0:O.PSYCHIC_SURGE,1:O.PSYCHIC_SURGE},[e.NICKIT]:{0:O.MAGICIAN},[e.THIEVUL]:{0:O.MAGICIAN},[e.GOSSIFLEUR]:{0:O.SEED_SOWER},[e.ELDEGOSS]:{0:O.GRASSY_SURGE},[e.WOOLOO]:{0:O.SCRAPPY},[e.DUBWOOL]:{0:O.SCRAPPY},[e.CHEWTLE]:{0:O.SOLID_ROCK},[e.DREDNAW]:{0:O.SOLID_ROCK,1:O.SOLID_ROCK},[e.YAMPER]:{0:O.PICKUP},[e.BOLTUND]:{0:O.SHEER_FORCE},[e.ROLYCOLY]:{0:O.SOLID_ROCK},[e.CARKOL]:{0:O.SOLID_ROCK},[e.COALOSSAL]:{0:O.SOLID_ROCK,1:O.SOLID_ROCK},[e.APPLIN]:{0:O.STURDY},[e.FLAPPLE]:{0:O.NO_GUARD,1:O.NO_GUARD},[e.APPLETUN]:{0:O.WELL_BAKED_BODY,1:O.WELL_BAKED_BODY},[e.DIPPLIN]:{0:O.PARENTAL_BOND},[e.HYDRAPPLE]:{0:O.PARENTAL_BOND},[e.SILICOBRA]:{0:O.SAND_RUSH},[e.SANDACONDA]:{0:O.SAND_RUSH,1:O.SAND_RUSH},[e.CRAMORANT]:{0:O.LIGHTNING_ROD,1:O.LIGHTNING_ROD,2:O.LIGHTNING_ROD},[e.ARROKUDA]:{0:O.SPEED_BOOST},[e.BARRASKEWDA]:{0:O.INTIMIDATE},[e.TOXEL]:{0:O.ELECTRIC_SURGE},[e.TOXTRICITY]:{0:O.ELECTRIC_SURGE,1:O.ELECTRIC_SURGE,2:O.ELECTRIC_SURGE},[e.SIZZLIPEDE]:{0:O.HUSTLE},[e.CENTISKORCH]:{0:O.HUSTLE,1:O.HUSTLE},[e.CLOBBOPUS]:{0:O.WATER_BUBBLE},[e.GRAPPLOCT]:{0:O.WATER_BUBBLE},[e.SINISTEA]:{0:O.SHADOW_SHIELD,1:O.SHADOW_SHIELD},[e.POLTEAGEIST]:{0:O.SHADOW_SHIELD,1:O.SHADOW_SHIELD},[e.HATENNA]:{0:O.FAIRY_AURA},[e.HATTREM]:{0:O.FAIRY_AURA},[e.HATTERENE]:{0:O.FAIRY_AURA,1:O.FAIRY_AURA},[e.IMPIDIMP]:{0:O.INTIMIDATE},[e.MORGREM]:{0:O.INTIMIDATE},[e.GRIMMSNARL]:{0:O.INTIMIDATE,1:O.INTIMIDATE},[e.MILCERY]:{0:O.REGENERATOR},[e.ALCREMIE]:{0:O.REGENERATOR,1:O.REGENERATOR,2:O.REGENERATOR,3:O.REGENERATOR,4:O.REGENERATOR,5:O.REGENERATOR,6:O.REGENERATOR,7:O.REGENERATOR,8:O.REGENERATOR,9:O.REGENERATOR},[e.FALINKS]:{0:O.DAUNTLESS_SHIELD},[e.PINCURCHIN]:{0:O.ELECTROMORPHOSIS},[e.SNOM]:{0:O.SNOW_WARNING},[e.FROSMOTH]:{0:O.SNOW_WARNING},[e.STONJOURNER]:{0:O.STURDY},[e.EISCUE]:{0:O.ICE_SCALES,1:O.ICE_SCALES},[e.INDEEDEE]:{0:O.HOSPITALITY,1:O.FRIEND_GUARD},[e.MORPEKO]:{0:O.MOODY,1:O.MOODY},[e.CUFANT]:{0:O.EARTH_EATER},[e.COPPERAJAH]:{0:O.EARTH_EATER,1:O.EARTH_EATER},[e.DRACOZOLT]:{0:O.NO_GUARD},[e.ARCTOZOLT]:{0:O.WATER_ABSORB},[e.DRACOVISH]:{0:O.THERMAL_EXCHANGE},[e.ARCTOVISH]:{0:O.STRONG_JAW},[e.DURALUDON]:{0:O.FILTER,1:O.UNAWARE},[e.ARCHALUDON]:{0:O.TRANSISTOR},[e.DREEPY]:{0:O.TECHNICIAN},[e.DRAKLOAK]:{0:O.PARENTAL_BOND},[e.DRAGAPULT]:{0:O.PARENTAL_BOND},[e.ZACIAN]:{0:O.UNNERVE,1:O.UNNERVE},[e.ZAMAZENTA]:{0:O.UNNERVE,1:O.UNNERVE},[e.ETERNATUS]:{0:O.NEUTRALIZING_GAS,1:O.NEUTRALIZING_GAS},[e.KUBFU]:{0:O.IRON_FIST},[e.URSHIFU]:{0:O.IRON_FIST,1:O.IRON_FIST,2:O.IRON_FIST,3:O.IRON_FIST},[e.ZARUDE]:{0:O.TOUGH_CLAWS,1:O.TOUGH_CLAWS},[e.REGIELEKI]:{0:O.ELECTRIC_SURGE},[e.REGIDRAGO]:{0:O.MULTISCALE},[e.GLASTRIER]:{0:O.FILTER},[e.SPECTRIER]:{0:O.DAZZLING},[e.CALYREX]:{0:O.HARVEST,1:O.FILTER,2:O.DAZZLING},[e.ENAMORUS]:{0:O.FAIRY_AURA,1:O.FAIRY_AURA},[e.GALAR_MEOWTH]:{0:O.UNBURDEN},[e.PERRSERKER]:{0:O.UNBURDEN},[e.GALAR_PONYTA]:{0:O.CHILLING_NEIGH},[e.GALAR_RAPIDASH]:{0:O.CHILLING_NEIGH},[e.GALAR_SLOWPOKE]:{0:O.OBLIVIOUS},[e.GALAR_SLOWBRO]:{0:O.NEUROFORCE},[e.GALAR_SLOWKING]:{0:O.INTIMIDATE},[e.GALAR_FARFETCHD]:{0:O.STAKEOUT},[e.SIRFETCHD]:{0:O.INTREPID_SWORD},[e.GALAR_ARTICUNO]:{0:O.SERENE_GRACE},[e.GALAR_ZAPDOS]:{0:O.TOUGH_CLAWS},[e.GALAR_MOLTRES]:{0:O.DARK_AURA},[e.GALAR_CORSOLA]:{0:O.SHADOW_SHIELD},[e.CURSOLA]:{0:O.SHADOW_SHIELD},[e.GALAR_ZIGZAGOON]:{0:O.POISON_HEAL},[e.GALAR_LINOONE]:{0:O.POISON_HEAL},[e.OBSTAGOON]:{0:O.POISON_HEAL},[e.GALAR_DARUMAKA]:{0:O.FLASH_FIRE},[e.GALAR_DARMANITAN]:{0:O.FLASH_FIRE,1:O.FLASH_FIRE},[e.GALAR_YAMASK]:{0:O.TABLETS_OF_RUIN},[e.RUNERIGUS]:{0:O.TABLETS_OF_RUIN},[e.GALAR_STUNFISK]:{0:O.ARENA_TRAP},[e.HISUI_GROWLITHE]:{0:O.RECKLESS},[e.HISUI_ARCANINE]:{0:O.RECKLESS},[e.HISUI_VOLTORB]:{0:O.TRANSISTOR},[e.HISUI_ELECTRODE]:{0:O.TRANSISTOR},[e.HISUI_QWILFISH]:{0:O.MERCILESS},[e.OVERQWIL]:{0:O.MERCILESS},[e.HISUI_SNEASEL]:{0:O.SCRAPPY},[e.SNEASLER]:{0:O.SCRAPPY},[e.HISUI_ZORUA]:{0:O.SHADOW_SHIELD},[e.HISUI_ZOROARK]:{0:O.SHADOW_SHIELD},[e.SPRIGATITO]:{0:O.PICKUP},[e.FLORAGATO]:{0:O.MAGICIAN},[e.MEOWSCARADA]:{0:O.MAGICIAN},[e.FUECOCO]:{0:O.GLUTTONY},[e.CROCALOR]:{0:O.PUNK_ROCK},[e.SKELEDIRGE]:{0:O.PUNK_ROCK},[e.QUAXLY]:{0:O.OPPORTUNIST},[e.QUAXWELL]:{0:O.OPPORTUNIST},[e.QUAQUAVAL]:{0:O.OPPORTUNIST},[e.LECHONK]:{0:O.SIMPLE},[e.OINKOLOGNE]:{0:O.SIMPLE,1:O.SIMPLE},[e.TAROUNTULA]:{0:O.HONEY_GATHER},[e.SPIDOPS]:{0:O.HONEY_GATHER},[e.NYMBLE]:{0:O.TECHNICIAN},[e.LOKIX]:{0:O.GUTS},[e.PAWMI]:{0:O.TRANSISTOR},[e.PAWMO]:{0:O.TRANSISTOR},[e.PAWMOT]:{0:O.TRANSISTOR},[e.TANDEMAUS]:{0:O.FRIEND_GUARD},[e.MAUSHOLD]:{0:O.SCRAPPY,1:O.SCRAPPY},[e.FIDOUGH]:{0:O.WATER_ABSORB},[e.DACHSBUN]:{0:O.WATER_ABSORB},[e.SMOLIV]:{0:O.RIPEN},[e.DOLLIV]:{0:O.RIPEN},[e.ARBOLIVA]:{0:O.RIPEN},[e.SQUAWKABILLY]:{0:O.MOXIE,1:O.MOXIE,2:O.MOXIE,3:O.MOXIE},[e.NACLI]:{0:O.SOLID_ROCK},[e.NACLSTACK]:{0:O.SOLID_ROCK},[e.GARGANACL]:{0:O.SOLID_ROCK},[e.CHARCADET]:{0:O.BATTLE_ARMOR},[e.ARMAROUGE]:{0:O.PRISM_ARMOR},[e.CERULEDGE]:{0:O.PRISM_ARMOR},[e.TADBULB]:{0:O.LEVITATE},[e.BELLIBOLT]:{0:O.STAMINA},[e.WATTREL]:{0:O.SHEER_FORCE},[e.KILOWATTREL]:{0:O.SHEER_FORCE},[e.MASCHIFF]:{0:O.STRONG_JAW},[e.MABOSSTIFF]:{0:O.STRONG_JAW},[e.SHROODLE]:{0:O.CORROSION},[e.GRAFAIAI]:{0:O.CORROSION},[e.BRAMBLIN]:{0:O.WANDERING_SPIRIT},[e.BRAMBLEGHAST]:{0:O.SHADOW_SHIELD},[e.TOEDSCOOL]:{0:O.RUN_AWAY},[e.TOEDSCRUEL]:{0:O.PRANKSTER},[e.KLAWF]:{0:O.WATER_ABSORB},[e.CAPSAKID]:{0:O.FLOWER_GIFT},[e.SCOVILLAIN]:{0:O.PARENTAL_BOND},[e.RELLOR]:{0:O.PRANKSTER},[e.RABSCA]:{0:O.PRANKSTER},[e.FLITTLE]:{0:O.DAZZLING},[e.ESPATHRA]:{0:O.DAZZLING},[e.TINKATINK]:{0:O.STEELWORKER},[e.TINKATUFF]:{0:O.STEELWORKER},[e.TINKATON]:{0:O.STEELWORKER},[e.WIGLETT]:{0:O.STURDY},[e.WUGTRIO]:{0:O.STURDY},[e.BOMBIRDIER]:{0:O.UNBURDEN},[e.FINIZEN]:{0:O.SWIFT_SWIM},[e.PALAFIN]:{0:O.EMERGENCY_EXIT,1:O.IRON_FIST},[e.VAROOM]:{0:O.LEVITATE},[e.REVAVROOM]:{0:O.LEVITATE,1:O.DARK_AURA,2:O.FLASH_FIRE,3:O.MERCILESS,4:O.FILTER,5:O.SCRAPPY},[e.CYCLIZAR]:{0:O.PROTEAN},[e.ORTHWORM]:{0:O.REGENERATOR},[e.GLIMMET]:{0:O.STURDY},[e.GLIMMORA]:{0:O.TERA_SHELL},[e.GREAVARD]:{0:O.UNAWARE},[e.HOUNDSTONE]:{0:O.UNAWARE},[e.FLAMIGO]:{0:O.MOXIE},[e.CETODDLE]:{0:O.REFRIGERATE},[e.CETITAN]:{0:O.REFRIGERATE},[e.VELUZA]:{0:O.SUPER_LUCK},[e.DONDOZO]:{0:O.DRAGONS_MAW},[e.TATSUGIRI]:{0:O.FLUFFY,1:O.FLUFFY,2:O.FLUFFY},[e.GREAT_TUSK]:{0:O.INTIMIDATE},[e.SCREAM_TAIL]:{0:O.UNAWARE},[e.BRUTE_BONNET]:{0:O.CHLOROPHYLL},[e.FLUTTER_MANE]:{0:O.DAZZLING},[e.SLITHER_WING]:{0:O.SCRAPPY},[e.SANDY_SHOCKS]:{0:O.ELECTRIC_SURGE},[e.IRON_TREADS]:{0:O.DAUNTLESS_SHIELD},[e.IRON_BUNDLE]:{0:O.SNOW_WARNING},[e.IRON_HANDS]:{0:O.IRON_FIST},[e.IRON_JUGULIS]:{0:O.LIGHTNING_ROD},[e.IRON_MOTH]:{0:O.LEVITATE},[e.IRON_THORNS]:{0:O.SAND_STREAM},[e.FRIGIBAX]:{0:O.INTIMIDATE},[e.ARCTIBAX]:{0:O.INTIMIDATE},[e.BAXCALIBUR]:{0:O.INTIMIDATE},[e.GIMMIGHOUL]:{0:O.HONEY_GATHER,1:O.HONEY_GATHER},[e.GHOLDENGO]:{0:O.HONEY_GATHER},[e.WO_CHIEN]:{0:O.VESSEL_OF_RUIN},[e.CHIEN_PAO]:{0:O.INTIMIDATE},[e.TING_LU]:{0:O.STAMINA},[e.CHI_YU]:{0:O.BERSERK},[e.ROARING_MOON]:{0:O.INTIMIDATE},[e.IRON_VALIANT]:{0:O.NEUROFORCE},[e.KORAIDON]:{0:O.THERMAL_EXCHANGE},[e.MIRAIDON]:{0:O.COMPOUND_EYES},[e.WALKING_WAKE]:{0:O.BEAST_BOOST},[e.IRON_LEAVES]:{0:O.SHARPNESS},[e.POLTCHAGEIST]:{0:O.TRIAGE,1:O.TRIAGE},[e.SINISTCHA]:{0:O.TRIAGE,1:O.TRIAGE},[e.OKIDOGI]:{0:O.DARK_AURA},[e.MUNKIDORI]:{0:O.MAGICIAN},[e.FEZANDIPITI]:{0:O.PIXILATE},[e.OGERPON]:{0:O.OPPORTUNIST,1:O.SUPER_LUCK,2:O.FLASH_FIRE,3:O.MAGIC_GUARD,4:O.OPPORTUNIST,5:O.SUPER_LUCK,6:O.FLASH_FIRE,7:O.MAGIC_GUARD},[e.GOUGING_FIRE]:{0:O.BEAST_BOOST},[e.RAGING_BOLT]:{0:O.BEAST_BOOST},[e.IRON_BOULDER]:{0:O.SHARPNESS},[e.IRON_CROWN]:{0:O.SHARPNESS},[e.TERAPAGOS]:{0:O.SHIELD_DUST,1:O.SHIELD_DUST,2:O.SHIELD_DUST},[e.PECHARUNT]:{0:O.TOXIC_CHAIN},[e.PALDEA_TAUROS]:{0:O.STAMINA,1:O.ADAPTABILITY,2:O.ADAPTABILITY},[e.PALDEA_WOOPER]:{0:O.POISON_TOUCH},[e.CLODSIRE]:{0:O.THICK_FAT},[e.BLOODMOON_URSALUNA]:{0:O.BERSERK}};var T6=(t=>(t[t.NORMAL=0]="NORMAL",t[t.ALOLA=1]="ALOLA",t[t.GALAR=2]="GALAR",t[t.HISUI=3]="HISUI",t[t.PALDEA=4]="PALDEA",t))(T6||{});const TQ=[e.PIKACHU,e.RAICHU,e.EEVEE,e.JOLTEON,e.FLAREON,e.VAPOREON,e.ESPEON,e.UMBREON,e.LEAFEON,e.GLACEON,e.SYLVEON,e.PICHU,e.ROTOM,e.DIALGA,e.PALKIA,e.KYUREM,e.GENESECT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.ROCKRUFF,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.CRAMORANT,e.ZARUDE,e.CALYREX];function de(t){return Array.isArray(t)&&(t=t[Math.floor(Math.random()*t.length)]),t>=2e3?uI.find(E=>E.speciesId===t):uI[t-1]}r(de,"getPokemonSpecies");function XN(t,E){var I;const R=t>=2e3?uI.find(N=>N.speciesId===t):uI[t-1];return E<((I=R.forms)==null?void 0:I.length)?R.forms[E]:R}r(XN,"getPokemonSpeciesForm");function c9(t,E){const R=/([a-z]{2}.*?[aeiou(?:y$)\-\']+)(.*?)$/i,I=/([a-z]{2}.*?[aeiou(?:y$)\-\'])(.*?)$/i,[N,S]=[t,E].map(m=>/^(?:[^ ]+) /.exec(m)),[T,i]=[N,S].map(m=>m?m[0]:"");T&&(t=t.slice(T.length)),i&&(E=E.slice(i.length));const[o,C]=[t,E].map(m=>/ (?:[^ ]+)$/.exec(m)),[U,_]=[o,C].map(m=>m?m[0]:"");U&&(t=t.slice(0,-U.length)),_&&(E=E.slice(0,-_.length));const G=t.split(/ /g),H=E.split(/ /g),c=R.exec(t),f=I.exec(E);let d,w;if(d=G.length===1?c?c[1]:t:G[G.length-1],H.length===1)if(f){const m=d.slice(d.length-1),W=f[1].slice(f.length-1);if(w=(/[\-']/.test(W)?W:"")+f[2]||W,m===w[0])if(/[aiu]/.test(m))w=w.slice(1);else{const v=new RegExp(`[^${m}]`).exec(w);(v==null?void 0:v.index)!==void 0&&v.index>0&&(w=w.slice(v.index))}}else w=E;else w=H[H.length-1];return G.length>1&&(d=`${G.slice(0,G.length-1).join(" ")} ${d}`),w=`${w.slice(0,1).toLowerCase()}${w.slice(1)}`,`${T||i}${d}${w}${_||U}`}r(c9,"getFusedSpeciesName");const Hd=class Hd{constructor(E,R,I,N,S,T,i,o,C,U,_,G,H,c,f,d,w,m,W){this.type1=E,this.type2=R,this.height=I,this.weight=N,this.ability1=S,this.ability2=T===O.NONE?S:T,this.abilityHidden=i,this.baseTotal=o,this.baseStats=[C,U,_,G,H,c],this.catchRate=f,this.baseFriendship=d,this.baseExp=w,this.genderDiffs=m,this.isStarterSelectable=W}getRootSpeciesId(E=!1){let R=this.speciesId;for(;CE.hasOwnProperty(R)&&(!E||!kE.hasOwnProperty(R));)R=CE[R];return R}get generation(){return this._generation}set generation(E){this._generation=E}get formIndex(){return this._formIndex}set formIndex(E){this._formIndex=E}isOfType(E){return this.type1===E||this.type2!==null&&this.type2===E}getAbilityCount(){return this.abilityHidden!==O.NONE?3:2}getAbility(E){let R;return E===0?R=this.ability1:E===1?R=this.ability2:R=this.abilityHidden,R}getPassiveAbility(E){Ne(E)&&(E=this.formIndex);let R=this.speciesId;for(;!(R in lT)||!(E in lT[R]);)if(CE.hasOwnProperty(R))R=CE[R];else return 0 in lT[R]?lT[R][0]:(console.log("No passive ability found for %s, using run away",this.speciesId),O.RUN_AWAY);return lT[R][E]}getLevelMoves(){return Bs.hasOwnProperty(this.speciesId)&&Bs[this.speciesId].hasOwnProperty(this.formIndex)?Bs[this.speciesId][this.formIndex].slice(0):j2[this.speciesId].slice(0)}getRegion(){return Math.floor(this.speciesId/2e3)}isObtainable(){return this.generation<=9||CE.hasOwnProperty(this.speciesId)}isCatchable(){return this.isObtainable()&&_6.indexOf(this.speciesId)===-1}isRegional(){return this.getRegion()>0}isTrainerForbidden(){return[e.ETERNAL_FLOETTE,e.BLOODMOON_URSALUNA].includes(this.speciesId)}isRareRegional(){switch(this.getRegion()){case 3:return!0}return!1}getBaseStatTotal(){return this.baseStats.reduce((E,R)=>R+E)}getBaseStat(E){return this.baseStats[E]}getBaseExp(){let E=this.baseExp;switch(this.getFormSpriteKey()){case te.MEGA:case te.MEGA_X:case te.MEGA_Y:case te.PRIMAL:case te.GIGANTAMAX:case te.ETERNAMAX:E*=1.5;break}return E}getSpriteAtlasPath(E,R,I,N,S){const T=this.getSpriteId(E,R,I,N,S).replace(/\_{2}/g,"/");return`${/_[1-3]$/.test(T)?"variant/":""}${T}`}getBaseSpriteKey(E,R){(R===void 0||this instanceof F)&&(R=this.formIndex);const I=this.getFormSpriteKey(R);return`${this.genderDiffs&&E&&![te.MEGA,te.GIGANTAMAX].includes(I)?"female__":""}${this.speciesId}${I?`-${I}`:""}`}getSpriteId(E,R,I,N=0,S=!1){const T=this.getBaseSpriteKey(E,R);let i=QR;`${S?"back__":""}${T}`.split("__").map(C=>i?i=i[C]:null);const o=i;return`${S?"back__":""}${I&&(!o||!N&&!o[N||0])?"shiny__":""}${T}${I&&o&&o[N]===2?`_${N+1}`:""}`}getSpriteKey(E,R,I,N,S){return`pkmn__${this.getSpriteId(E,R,I,N,S)}`}getVariantDataIndex(E){var S;let R=null,I=this.speciesId;const N=de(this.speciesId);return N.forms.length>0&&E!==void 0&&(R=(S=N.forms[E])==null?void 0:S.getFormSpriteKey(E),R&&(I=`${this.speciesId}-${R}`)),I}getIconAtlasKey(E,R,I){const N=this.getVariantDataIndex(E),S=R&&QR[N]&&I!==void 0&&QR[N][I];return`pokemon_icons_${this.generation}${S?"v":""}`}getIconId(E,R,I,N){R===void 0&&(R=this.formIndex);const S=this.getVariantDataIndex(R);let T=this.speciesId.toString();const i=I&&QR[S]&&N!==void 0&&QR[S][N];switch(I&&!i&&(T+="s"),this.speciesId){case e.DODUO:case e.DODRIO:case e.MEGANIUM:case e.TORCHIC:case e.COMBUSKEN:case e.BLAZIKEN:case e.HIPPOPOTAS:case e.HIPPOWDON:case e.UNFEZANT:case e.FRILLISH:case e.JELLICENT:case e.PYROAR:T+=E?"-f":"";break}let o=this.getFormSpriteKey(R);if(o)switch(this.speciesId){case e.DUDUNSPARCE:break;case e.ZACIAN:case e.ZAMAZENTA:o.startsWith("behemoth")&&(o="crowned");default:T+=`-${o}`;break}return i&&(T+=`_${N+1}`),T}getCryKey(E){let R=this.speciesId;if(this.speciesId>2e3)switch(this.speciesId){case e.GALAR_SLOWPOKE:break;case e.ETERNAL_FLOETTE:break;case e.BLOODMOON_URSALUNA:break;default:R=R%2e3;break}let I=R.toString();const N=de(R).forms;if(N.length){E!==void 0&&E>=N.length&&(console.warn(`Attempted accessing form with index ${E} of species ${de(R).getName()} with only ${N.length||0} forms`),E=Math.min(E,N.length-1));const S=N[E||0].formKey;switch(S){case te.MEGA:case te.MEGA_X:case te.MEGA_Y:case te.GIGANTAMAX:case te.GIGANTAMAX_SINGLE:case te.GIGANTAMAX_RAPID:case"white":case"black":case"therian":case"sky":case"gorging":case"gulping":case"no-ice":case"hangry":case"crowned":case"eternamax":case"four":case"droopy":case"stretchy":case"hero":case"roaming":case"complete":case"10-complete":case"10":case"10-pc":case"super":case"unbound":case"pau":case"pompom":case"sensu":case"dusk":case"midnight":case"school":case"dawn-wings":case"dusk-mane":case"ultra":I+=`-${S}`;break}}return`cry/${I}`}validateStarterMoveset(E,R){const I=this.getRootSpeciesId();for(const N of E){if(NO.hasOwnProperty(I)){const S=NO[I].findIndex(T=>T===N);if(S>-1&&R&1<<S)continue}if(Bs.hasOwnProperty(this.speciesId)&&Bs[this.speciesId].hasOwnProperty(this.formIndex)){if(!Bs[this.speciesId][this.formIndex].find(S=>S[0]<=5&&S[1]===N))return!1}else if(!j2[this.speciesId].find(S=>S[0]<=5&&S[1]===N))return!1}return!0}async loadVariantColors(E,R,I,N=!1,S){let T=this.getBaseSpriteKey(R,S);if(N&&(T="back__"+T),hL.hasOwnProperty(T))return;const i=QR[this.getVariantDataIndex(S)];!i||i[I]!==1||await v1("pkmn__"+T,s.experimentalSprites&&V1(E),T.replace("__","/"))}async loadAssets(E,R,I=!1,N,S=!1,T=!1){const i=this.getSpriteKey(E,R,I,N,T);return s.loadPokemonAtlas(i,this.getSpriteAtlasPath(E,R,I,N,T)),s.load.audio(this.getCryKey(R),`audio/${this.getCryKey(R)}.m4a`),Ne(N)||await this.loadVariantColors(i,E,N,T,R),new Promise(o=>{s.load.once(Phaser.Loader.Events.COMPLETE,()=>{const C=console.warn;console.warn=()=>{};const U=s.anims.generateFrameNames(i,{zeroPad:4,suffix:".png",start:1,end:400});console.warn=C,s.anims.exists(i)?s.anims.get(i).frameRate=10:s.anims.create({key:this.getSpriteKey(E,R,I,N,T),frames:U,frameRate:10,repeat:-1});const _=this.getSpriteAtlasPath(E,R,I,N,T).replace("variant/","").replace(/_[1-3]$/,"");Ne(N)||qv(i,_,N).then(()=>o())}),S?s.load.isLoading()||s.load.start():o()})}cry(E,R){const I=this.getCryKey(this.formIndex);let N=s.sound.get(I);return N!=null&&N.pendingRemove&&(N=null),N=s.playSound(N??I,E),R&&N.stop(),N}generateCandyColors(){const E=s.textures.get(this.getSpriteKey(!1)),R=E.frames[E.firstFrame],I=E.getSourceImage(),N=document.createElement("canvas"),S=[],T=N.getContext("2d"),i=R;N.width=i.width,N.height=i.height,T==null||T.drawImage(I,i.cutX,i.cutY,i.width,i.height,0,0,i.width,i.height);const o=T==null?void 0:T.getImageData(i.cutX,i.cutY,i.width,i.height),C=o==null?void 0:o.data,U=[];if((C==null?void 0:C.length)!==void 0){for(let H=0;H<C.length;H+=4)if(C[H+3]){const c=C.slice(H,H+4),[f,d,w,m]=c;S.find(W=>W[0]===f&&W[1]===d&&W[2]===w)||S.push([f,d,w,m])}for(let H=0;H<C.length;H+=4)C.slice(H,H+3).reduce((f,d)=>f+d,0)&&U.push(fL({r:C[H],g:C[H+1],b:C[H+2],a:C[H+3]}))}let _=new Map;const G=Math.random;return Math.random=Phaser.Math.RND.frac,s.executeWithSeedOffset(()=>{_=ca.quantize(U,2)},0,"This result should not vary"),Math.random=G,Array.from(_.keys()).map(H=>Object.values(uP(H)))}};r(Hd,"PokemonSpeciesForm");let PC=Hd;const cd=class cd extends PC{constructor(E,R,I,N,S,T,i,o,C,U,_,G,H,c,f,d,w,m,W,v,$,Oe,q,Ie,le,Ae,Re,...se){super(i,o,C,U,_,G,H,c,f,d,w,m,W,v,$,Oe,q,Ae,!1),this.speciesId=E,this.formIndex=0,this.generation=R,this.subLegendary=I,this.legendary=N,this.mythical=S,this.species=T,this.growthRate=Ie,this.malePercent=le,this.genderDiffs=Ae,this.canChangeForm=!!Re,this.forms=se,this.localize(),se.forEach((ie,He)=>{ie.speciesId=E,ie.formIndex=He,ie.generation=R})}getName(E){if(E!==void 0&&this.forms.length){const R=this.forms[E];let I;switch(R.formKey){case te.MEGA:case te.PRIMAL:case te.ETERNAMAX:case te.MEGA_X:case te.MEGA_Y:I=R.formKey;break;default:R.formKey.indexOf(te.GIGANTAMAX)>-1?I="gigantamax":I=null}if(I)return D.t(`battlePokemonForm:${I}`,{pokemonName:this.name})}return this.name}generateGender(){return Ne(this.malePercent)?ye.GENDERLESS:Phaser.Math.RND.realInRange(0,1)<=this.malePercent?ye.MALE:ye.FEMALE}getExpandedSpeciesName(){return this.speciesId<2e3?this.name:D.t(`pokemonForm:appendForm.${e[this.speciesId].split("_")[0]}`,{pokemonName:this.name})}getFormNameToDisplay(E=0,R=!1){var o,C;const I=(C=(o=this.forms)==null?void 0:o[E])==null?void 0:C.formKey,N=WM(I,"-",!1,!1)||"",S=WM(e[this.speciesId],"_",!0,!1);let T="";const i=this.getRegion();if(this.speciesId===e.ARCEUS)T=D.t(`pokemonInfo:Type.${N==null?void 0:N.toUpperCase()}`);else{if([te.MEGA,te.MEGA_X,te.MEGA_Y,te.PRIMAL,te.GIGANTAMAX,te.GIGANTAMAX_RAPID,te.GIGANTAMAX_SINGLE,te.ETERNAMAX].includes(I))return R?D.t(`battlePokemonForm:${I}`,{pokemonName:this.name}):D.t(`pokemonForm:battleForm.${I}`);if(i===0||this.speciesId===e.GALAR_DARMANITAN&&E>0||this.speciesId===e.PALDEA_TAUROS){const U=`pokemonForm:${S}${N}`;if(D.exists(U))T=D.t(U);else{const G=`pokemonForm:${WM(e[this.getRootSpeciesId()],"_",!0,!1)}${N}`;T=D.exists(G)?D.t(G):N}}else return R?this.getExpandedSpeciesName():this.speciesId===e.ETERNAL_FLOETTE?D.t("pokemonForm:floetteEternalFlower"):this.speciesId===e.BLOODMOON_URSALUNA?D.t("pokemonForm:ursalunaBloodmoon"):D.t(`pokemonForm:regionalForm.${T6[i]}`)}return R?D.t("pokemonForm:appendForm.GENERIC",{pokemonName:this.name,formName:T}):T}localize(){this.name=D.t(`pokemon:${e[this.speciesId].toLowerCase()}`)}getWildSpeciesForLevel(E,R,I,N){return this.getSpeciesForLevel(E,R,!1,(I?ce.WEAKER:ce.AVERAGE)+(N!=null&&N.isEndless?1:0))}getTrainerSpeciesForLevel(E,R=!1,I,N=0){return this.getSpeciesForLevel(E,R,!0,I,N)}getStrengthLevelDiff(E){switch(Math.min(E,ce.STRONGER)){case ce.WEAKEST:return 60;case ce.WEAKER:return 40;case ce.WEAK:return 20;case ce.AVERAGE:return 8;case ce.STRONG:return 4;default:return 0}}getSpeciesForLevel(E,R=!1,I=!1,N=ce.WEAKER,S=0){var c;const T=this.getPrevolutionLevels();if(T.length)for(let f=T.length-1;f>=0;f--){const d=T[f];if(E<d[1])return d[0]}if(!R||!BA.hasOwnProperty(this.speciesId)||((c=s.currentBattle)==null?void 0:c.waveIndex)===20&&s.gameMode.isClassic&&s.currentBattle.trainer)return this.speciesId;const i=BA[this.speciesId],o=Phaser.Tweens.Builders.GetEaseFunction("Sine.easeIn"),C=Phaser.Tweens.Builders.GetEaseFunction("Sine.easeOut"),U=new Map;let _=0,G=1;for(const f of i){if(f.level>E)continue;let d;const w=de(f.speciesId),m=!this.isRegional()&&w.isRegional();if(!I&&m)d=0;else if(f.wildDelay===G6.NONE)if(N===ce.STRONGER)d=1;else{const W=this.getStrengthLevelDiff(N),v=.875-.125*N;d=Math.min(v+o(Math.min(E-f.level,W)/W)*(1-v),1)}else{const W=Math.max(f.level-1+f.wildDelay*this.getStrengthLevelDiff(N),1);let v=Math.max(f.level>1?f.level:Math.floor(W/2),1);if(f.level<=1&&CE.hasOwnProperty(this.speciesId)){const $=BA[CE[this.speciesId]].find(Oe=>Oe.speciesId===this.speciesId).level;$>1&&(v=$)}d=Math.min(.65*o(Math.min(Math.max(E-v,0),W)/W)+.35*C(Math.min(Math.max(E-v,0),W*2.5)/(W*2.5)),1)}S>=80&&I&&N>ce.WEAKER&&(d=1,G=0),d>0&&(m&&(d/=w.isRareRegional()?16:4),_+=d,U.set(_,f.speciesId),1-d<G&&(G=1-d))}if(G===1||Phaser.Math.RND.realInRange(0,1)<G)return this.speciesId;const H=U.size===1?0:De(_);for(const f of U.keys())if(H<f)return de(U.get(f)).getSpeciesForLevel(E,!0,I,N,S);return this.speciesId}getEvolutionLevels(){const E=[];if(BA.hasOwnProperty(this.speciesId))for(const R of BA[this.speciesId]){const I=R.speciesId,N=R.level;E.push([I,N]);const S=de(I).getEvolutionLevels();for(const T of S)E.push(T)}return E}getPrevolutionLevels(){const E=[],R=Object.keys(BA);for(const I of R)for(const N of BA[I])if(N.speciesId===this.speciesId&&(!this.forms.length||!N.evoFormKey||N.evoFormKey===this.forms[this.formIndex].formKey)&&E.every(S=>S[0]!==Number.parseInt(I))){const S=Number.parseInt(I),T=N.level;E.push([S,T]);const i=de(S).getPrevolutionLevels();for(const o of i)E.push(o)}return E}getSimulatedEvolutionChain(E,R=!1,I=!1,N=!1){const S=[];if(CE.hasOwnProperty(this.speciesId)){const T=this.getPrevolutionLevels().reverse(),i=N?0:R||I?R&&I?2.5:5:10;S.push([T[0][0],1]);for(let U=1;U<T.length;U++){const _=BA[T[U-1][0]].find(G=>G.speciesId===T[U][0]);S.push([T[U][0],Math.min(Math.max((_==null?void 0:_.level)+Math.round(nP(.5,1+i*.2)*Math.max(_==null?void 0:_.wildDelay,.5)*5)-1,2,_==null?void 0:_.level),E-1)])}const o=S[T.length-1][1],C=BA[T[T.length-1][0]].find(U=>U.speciesId===this.speciesId);S.push([this.speciesId,Math.min(Math.max(o+Math.round(nP(.5,1+i*.2)*Math.max(C==null?void 0:C.wildDelay,.5)*5),o+1,C==null?void 0:C.level),E)])}else S.push([this.speciesId,1]);return S}getCompatibleFusionSpeciesFilter(){const E=BA.hasOwnProperty(this.speciesId),R=CE.hasOwnProperty(this.speciesId),I=this.subLegendary,N=this.legendary,S=this.mythical;return T=>(I||N||S||BA.hasOwnProperty(T.speciesId)===E&&CE.hasOwnProperty(T.speciesId)===R)&&T.subLegendary===I&&T.legendary===N&&T.mythical===S&&(this.isTrainerForbidden()||!T.isTrainerForbidden())&&T.speciesId!==e.DITTO}isObtainable(){return super.isObtainable()}hasVariants(){var R;let E=this.speciesId;if(this.forms.length>0){const I=(R=this.forms[this.formIndex])==null?void 0:R.formKey;I&&(E=`${E}-${I}`)}return QR.hasOwnProperty(E)||QR.hasOwnProperty(this.speciesId)}getFormSpriteKey(E){var R;return this.forms.length&&E!==void 0&&E>=this.forms.length&&(console.warn(`Attempted accessing form with index ${E} of species ${this.getName()} with only ${this.forms.length||0} forms`),E=Math.min(E,this.forms.length-1)),(R=this.forms)!=null&&R.length?this.forms[E||0].getFormSpriteKey():""}getFullUnlocksData(){var R;let E=0n;return E+=LA.NON_SHINY,E+=LA.SHINY,this.malePercent!==null&&(this.malePercent>0&&(E+=LA.MALE),this.malePercent<100&&(E+=LA.FEMALE)),E+=LA.DEFAULT_VARIANT,this.hasVariants()&&(E+=LA.VARIANT_2,E+=LA.VARIANT_3),E+=((R=this==null?void 0:this.forms)==null?void 0:R.length)>1?this.forms.map((I,N)=>I.isUnobtainable?0n:128n*2n**BigInt(N)).reduce((I,N)=>I+N,0n):LA.DEFAULT_FORM,E}};r(cd,"PokemonSpecies");let M=cd;const Bd=class Bd extends PC{constructor(E,R,I,N,S,T,i,o,C,U,_,G,H,c,f,d,w,m,W,v=!1,$=null,Oe=!1,q=!1){super(I,N,S,T,i,o,C,U,_,G,H,c,f,d,w,m,W,v,Oe||!R),this.starterSelectableKeys=["10","50","10-pc","50-pc","red","orange","yellow","green","blue","indigo","violet"],this.formName=E,this.formKey=R,this.formSpriteKey=$,this.isUnobtainable=q}getFormSpriteKey(E){return this.formSpriteKey!==null?this.formSpriteKey:this.formKey}};r(Bd,"PokemonForm");let F=Bd;function nQ(){const t=[],E=new Date;return E.setUTCHours(0,0,0,0),s.executeWithSeedOffset(()=>{for(;t.length<B8;){const R=Number.parseInt(SE(Object.keys(kE)),10),I=de(R);t.includes(I)||t.push(I)}},0,E.getTime().toString()),t}r(nQ,"getPokerusStarters");const uI=[];function B9(){uI.push(new M(e.BULBASAUR,1,!1,!1,!1,"Seed Pokémon",L.GRASS,L.POISON,.7,6.9,O.OVERGROW,O.NONE,O.CHLOROPHYLL,318,45,49,49,65,65,45,45,50,64,P.MEDIUM_SLOW,87.5,!1),new M(e.IVYSAUR,1,!1,!1,!1,"Seed Pokémon",L.GRASS,L.POISON,1,13,O.OVERGROW,O.NONE,O.CHLOROPHYLL,405,60,62,63,80,80,60,45,50,142,P.MEDIUM_SLOW,87.5,!1),new M(e.VENUSAUR,1,!1,!1,!1,"Seed Pokémon",L.GRASS,L.POISON,2,100,O.OVERGROW,O.NONE,O.CHLOROPHYLL,525,80,82,83,100,100,80,45,50,263,P.MEDIUM_SLOW,87.5,!0,!0,new F("Normal","",L.GRASS,L.POISON,2,100,O.OVERGROW,O.NONE,O.CHLOROPHYLL,525,80,82,83,100,100,80,45,50,263,!0,null,!0),new F("Mega",te.MEGA,L.GRASS,L.POISON,2.4,155.5,O.THICK_FAT,O.THICK_FAT,O.THICK_FAT,625,80,100,123,122,120,80,45,50,263,!0),new F("G-Max",te.GIGANTAMAX,L.GRASS,L.POISON,24,999.9,O.EFFECT_SPORE,O.NONE,O.EFFECT_SPORE,625,120,122,90,108,105,80,45,50,263,!0)),new M(e.CHARMANDER,1,!1,!1,!1,"Lizard Pokémon",L.FIRE,null,.6,8.5,O.BLAZE,O.NONE,O.SOLAR_POWER,309,39,52,43,60,50,65,45,50,62,P.MEDIUM_SLOW,87.5,!1),new M(e.CHARMELEON,1,!1,!1,!1,"Flame Pokémon",L.FIRE,null,1.1,19,O.BLAZE,O.NONE,O.SOLAR_POWER,405,58,64,58,80,65,80,45,50,142,P.MEDIUM_SLOW,87.5,!1),new M(e.CHARIZARD,1,!1,!1,!1,"Flame Pokémon",L.FIRE,L.FLYING,1.7,90.5,O.BLAZE,O.NONE,O.SOLAR_POWER,534,78,84,78,109,85,100,45,50,267,P.MEDIUM_SLOW,87.5,!1,!0,new F("Normal","",L.FIRE,L.FLYING,1.7,90.5,O.BLAZE,O.NONE,O.SOLAR_POWER,534,78,84,78,109,85,100,45,50,267,!1,null,!0),new F("Mega X",te.MEGA_X,L.FIRE,L.DRAGON,1.7,110.5,O.TOUGH_CLAWS,O.NONE,O.TOUGH_CLAWS,634,78,130,111,130,85,100,45,50,267),new F("Mega Y",te.MEGA_Y,L.FIRE,L.FLYING,1.7,100.5,O.DROUGHT,O.NONE,O.DROUGHT,634,78,104,78,159,115,100,45,50,267),new F("G-Max",te.GIGANTAMAX,L.FIRE,L.FLYING,28,999.9,O.BERSERK,O.NONE,O.BERSERK,634,118,99,88,134,95,100,45,50,267)),new M(e.SQUIRTLE,1,!1,!1,!1,"Tiny Turtle Pokémon",L.WATER,null,.5,9,O.TORRENT,O.NONE,O.RAIN_DISH,314,44,48,65,50,64,43,45,50,63,P.MEDIUM_SLOW,87.5,!1),new M(e.WARTORTLE,1,!1,!1,!1,"Turtle Pokémon",L.WATER,null,1,22.5,O.TORRENT,O.NONE,O.RAIN_DISH,405,59,63,80,65,80,58,45,50,142,P.MEDIUM_SLOW,87.5,!1),new M(e.BLASTOISE,1,!1,!1,!1,"Shellfish Pokémon",L.WATER,null,1.6,85.5,O.TORRENT,O.NONE,O.RAIN_DISH,530,79,83,100,85,105,78,45,50,265,P.MEDIUM_SLOW,87.5,!1,!0,new F("Normal","",L.WATER,null,1.6,85.5,O.TORRENT,O.NONE,O.RAIN_DISH,530,79,83,100,85,105,78,45,50,265,!1,null,!0),new F("Mega",te.MEGA,L.WATER,null,1.6,101.1,O.MEGA_LAUNCHER,O.NONE,O.MEGA_LAUNCHER,630,79,103,120,135,115,78,45,50,265),new F("G-Max",te.GIGANTAMAX,L.WATER,L.STEEL,25,999.9,O.SHELL_ARMOR,O.NONE,O.SHELL_ARMOR,630,119,108,125,105,110,63,45,50,265)),new M(e.CATERPIE,1,!1,!1,!1,"Worm Pokémon",L.BUG,null,.3,2.9,O.SHIELD_DUST,O.NONE,O.RUN_AWAY,195,45,30,35,20,20,45,255,50,39,P.MEDIUM_FAST,50,!1),new M(e.METAPOD,1,!1,!1,!1,"Cocoon Pokémon",L.BUG,null,.7,9.9,O.SHED_SKIN,O.NONE,O.SHED_SKIN,205,50,20,55,25,25,30,120,50,72,P.MEDIUM_FAST,50,!1),new M(e.BUTTERFREE,1,!1,!1,!1,"Butterfly Pokémon",L.BUG,L.FLYING,1.1,32,O.COMPOUND_EYES,O.NONE,O.TINTED_LENS,395,60,45,50,90,80,70,45,50,198,P.MEDIUM_FAST,50,!0,!0,new F("Normal","",L.BUG,L.FLYING,1.1,32,O.COMPOUND_EYES,O.NONE,O.TINTED_LENS,395,60,45,50,90,80,70,45,50,198,!0,null,!0),new F("G-Max",te.GIGANTAMAX,L.BUG,L.FLYING,17,999.9,O.COMPOUND_EYES,O.NONE,O.COMPOUND_EYES,495,80,40,75,120,95,85,45,50,198,!0)),new M(e.WEEDLE,1,!1,!1,!1,"Hairy Bug Pokémon",L.BUG,L.POISON,.3,3.2,O.SHIELD_DUST,O.NONE,O.RUN_AWAY,195,40,35,30,20,20,50,255,70,39,P.MEDIUM_FAST,50,!1),new M(e.KAKUNA,1,!1,!1,!1,"Cocoon Pokémon",L.BUG,L.POISON,.6,10,O.SHED_SKIN,O.NONE,O.SHED_SKIN,205,45,25,50,25,25,35,120,70,72,P.MEDIUM_FAST,50,!1),new M(e.BEEDRILL,1,!1,!1,!1,"Poison Bee Pokémon",L.BUG,L.POISON,1,29.5,O.SWARM,O.NONE,O.SNIPER,395,65,90,40,45,80,75,45,70,198,P.MEDIUM_FAST,50,!1,!0,new F("Normal","",L.BUG,L.POISON,1,29.5,O.SWARM,O.NONE,O.SNIPER,395,65,90,40,45,80,75,45,70,198,!1,null,!0),new F("Mega",te.MEGA,L.BUG,L.POISON,1.4,40.5,O.ADAPTABILITY,O.NONE,O.ADAPTABILITY,495,65,150,40,15,80,145,45,70,198)),new M(e.PIDGEY,1,!1,!1,!1,"Tiny Bird Pokémon",L.NORMAL,L.FLYING,.3,1.8,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,251,40,45,40,35,35,56,255,70,50,P.MEDIUM_SLOW,50,!1),new M(e.PIDGEOTTO,1,!1,!1,!1,"Bird Pokémon",L.NORMAL,L.FLYING,1.1,30,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,349,63,60,55,50,50,71,120,70,122,P.MEDIUM_SLOW,50,!1),new M(e.PIDGEOT,1,!1,!1,!1,"Bird Pokémon",L.NORMAL,L.FLYING,1.5,39.5,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,479,83,80,75,70,70,101,45,70,240,P.MEDIUM_SLOW,50,!1,!0,new F("Normal","",L.NORMAL,L.FLYING,1.5,39.5,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,479,83,80,75,70,70,101,45,70,240,!1,null,!0),new F("Mega",te.MEGA,L.NORMAL,L.FLYING,2.2,50.5,O.NO_GUARD,O.NO_GUARD,O.NO_GUARD,579,83,80,80,135,80,121,45,70,240)),new M(e.RATTATA,1,!1,!1,!1,"Mouse Pokémon",L.NORMAL,null,.3,3.5,O.RUN_AWAY,O.GUTS,O.HUSTLE,253,30,56,35,25,35,72,255,70,51,P.MEDIUM_FAST,50,!0),new M(e.RATICATE,1,!1,!1,!1,"Mouse Pokémon",L.NORMAL,null,.7,18.5,O.RUN_AWAY,O.GUTS,O.HUSTLE,413,55,81,60,50,70,97,127,70,145,P.MEDIUM_FAST,50,!0),new M(e.SPEAROW,1,!1,!1,!1,"Tiny Bird Pokémon",L.NORMAL,L.FLYING,.3,2,O.KEEN_EYE,O.NONE,O.SNIPER,262,40,60,30,31,31,70,255,70,52,P.MEDIUM_FAST,50,!1),new M(e.FEAROW,1,!1,!1,!1,"Beak Pokémon",L.NORMAL,L.FLYING,1.2,38,O.KEEN_EYE,O.NONE,O.SNIPER,442,65,90,65,61,61,100,90,70,155,P.MEDIUM_FAST,50,!1),new M(e.EKANS,1,!1,!1,!1,"Snake Pokémon",L.POISON,null,2,6.9,O.INTIMIDATE,O.SHED_SKIN,O.UNNERVE,288,35,60,44,40,54,55,255,70,58,P.MEDIUM_FAST,50,!1),new M(e.ARBOK,1,!1,!1,!1,"Cobra Pokémon",L.POISON,null,3.5,65,O.INTIMIDATE,O.SHED_SKIN,O.UNNERVE,448,60,95,69,65,79,80,90,70,157,P.MEDIUM_FAST,50,!1),new M(e.PIKACHU,1,!1,!1,!1,"Mouse Pokémon",L.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,320,35,55,40,50,50,90,190,50,112,P.MEDIUM_FAST,50,!0,!0,new F("Normal","",L.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,320,35,55,40,50,50,90,190,50,112,!0,null,!0),new F("Partner","partner",L.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new F("Cosplay","cosplay",L.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new F("Cool Cosplay","cool-cosplay",L.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new F("Beauty Cosplay","beauty-cosplay",L.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new F("Cute Cosplay","cute-cosplay",L.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new F("Smart Cosplay","smart-cosplay",L.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new F("Tough Cosplay","tough-cosplay",L.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new F("G-Max",te.GIGANTAMAX,L.ELECTRIC,null,21,999.9,O.LIGHTNING_ROD,O.NONE,O.LIGHTNING_ROD,530,125,95,60,90,70,90,190,50,112)),new M(e.RAICHU,1,!1,!1,!1,"Mouse Pokémon",L.ELECTRIC,null,.8,30,O.STATIC,O.NONE,O.LIGHTNING_ROD,485,60,90,55,90,80,110,75,50,243,P.MEDIUM_FAST,50,!0),new M(e.SANDSHREW,1,!1,!1,!1,"Mouse Pokémon",L.GROUND,null,.6,12,O.SAND_VEIL,O.NONE,O.SAND_RUSH,300,50,75,85,20,30,40,255,50,60,P.MEDIUM_FAST,50,!1),new M(e.SANDSLASH,1,!1,!1,!1,"Mouse Pokémon",L.GROUND,null,1,29.5,O.SAND_VEIL,O.NONE,O.SAND_RUSH,450,75,100,110,45,55,65,90,50,158,P.MEDIUM_FAST,50,!1),new M(e.NIDORAN_F,1,!1,!1,!1,"Poison Pin Pokémon",L.POISON,null,.4,7,O.POISON_POINT,O.RIVALRY,O.HUSTLE,275,55,47,52,40,40,41,235,50,55,P.MEDIUM_SLOW,0,!1),new M(e.NIDORINA,1,!1,!1,!1,"Poison Pin Pokémon",L.POISON,null,.8,20,O.POISON_POINT,O.RIVALRY,O.HUSTLE,365,70,62,67,55,55,56,120,50,128,P.MEDIUM_SLOW,0,!1),new M(e.NIDOQUEEN,1,!1,!1,!1,"Drill Pokémon",L.POISON,L.GROUND,1.3,60,O.POISON_POINT,O.RIVALRY,O.SHEER_FORCE,505,90,92,87,75,85,76,45,50,253,P.MEDIUM_SLOW,0,!1),new M(e.NIDORAN_M,1,!1,!1,!1,"Poison Pin Pokémon",L.POISON,null,.5,9,O.POISON_POINT,O.RIVALRY,O.HUSTLE,273,46,57,40,40,40,50,235,50,55,P.MEDIUM_SLOW,100,!1),new M(e.NIDORINO,1,!1,!1,!1,"Poison Pin Pokémon",L.POISON,null,.9,19.5,O.POISON_POINT,O.RIVALRY,O.HUSTLE,365,61,72,57,55,55,65,120,50,128,P.MEDIUM_SLOW,100,!1),new M(e.NIDOKING,1,!1,!1,!1,"Drill Pokémon",L.POISON,L.GROUND,1.4,62,O.POISON_POINT,O.RIVALRY,O.SHEER_FORCE,505,81,102,77,85,75,85,45,50,253,P.MEDIUM_SLOW,100,!1),new M(e.CLEFAIRY,1,!1,!1,!1,"Fairy Pokémon",L.FAIRY,null,.6,7.5,O.CUTE_CHARM,O.MAGIC_GUARD,O.FRIEND_GUARD,323,70,45,48,60,65,35,150,140,113,P.FAST,25,!1),new M(e.CLEFABLE,1,!1,!1,!1,"Fairy Pokémon",L.FAIRY,null,1.3,40,O.CUTE_CHARM,O.MAGIC_GUARD,O.UNAWARE,483,95,70,73,95,90,60,25,140,242,P.FAST,25,!1),new M(e.VULPIX,1,!1,!1,!1,"Fox Pokémon",L.FIRE,null,.6,9.9,O.FLASH_FIRE,O.NONE,O.DROUGHT,299,38,41,40,50,65,65,190,50,60,P.MEDIUM_FAST,25,!1),new M(e.NINETALES,1,!1,!1,!1,"Fox Pokémon",L.FIRE,null,1.1,19.9,O.FLASH_FIRE,O.NONE,O.DROUGHT,505,73,76,75,81,100,100,75,50,177,P.MEDIUM_FAST,25,!1),new M(e.JIGGLYPUFF,1,!1,!1,!1,"Balloon Pokémon",L.NORMAL,L.FAIRY,.5,5.5,O.CUTE_CHARM,O.COMPETITIVE,O.FRIEND_GUARD,270,115,45,20,45,25,20,170,50,95,P.FAST,25,!1),new M(e.WIGGLYTUFF,1,!1,!1,!1,"Balloon Pokémon",L.NORMAL,L.FAIRY,1,12,O.CUTE_CHARM,O.COMPETITIVE,O.FRISK,435,140,70,45,85,50,45,50,50,218,P.FAST,25,!1),new M(e.ZUBAT,1,!1,!1,!1,"Bat Pokémon",L.POISON,L.FLYING,.8,7.5,O.INNER_FOCUS,O.NONE,O.INFILTRATOR,245,40,45,35,30,40,55,255,50,49,P.MEDIUM_FAST,50,!0),new M(e.GOLBAT,1,!1,!1,!1,"Bat Pokémon",L.POISON,L.FLYING,1.6,55,O.INNER_FOCUS,O.NONE,O.INFILTRATOR,455,75,80,70,65,75,90,90,50,159,P.MEDIUM_FAST,50,!0),new M(e.ODDISH,1,!1,!1,!1,"Weed Pokémon",L.GRASS,L.POISON,.5,5.4,O.CHLOROPHYLL,O.NONE,O.RUN_AWAY,320,45,50,55,75,65,30,255,50,64,P.MEDIUM_SLOW,50,!1),new M(e.GLOOM,1,!1,!1,!1,"Weed Pokémon",L.GRASS,L.POISON,.8,8.6,O.CHLOROPHYLL,O.NONE,O.STENCH,395,60,65,70,85,75,40,120,50,138,P.MEDIUM_SLOW,50,!0),new M(e.VILEPLUME,1,!1,!1,!1,"Flower Pokémon",L.GRASS,L.POISON,1.2,18.6,O.CHLOROPHYLL,O.NONE,O.EFFECT_SPORE,490,75,80,85,110,90,50,45,50,245,P.MEDIUM_SLOW,50,!0),new M(e.PARAS,1,!1,!1,!1,"Mushroom Pokémon",L.BUG,L.GRASS,.3,5.4,O.EFFECT_SPORE,O.DRY_SKIN,O.DAMP,285,35,70,55,45,55,25,190,70,57,P.MEDIUM_FAST,50,!1),new M(e.PARASECT,1,!1,!1,!1,"Mushroom Pokémon",L.BUG,L.GRASS,1,29.5,O.EFFECT_SPORE,O.DRY_SKIN,O.DAMP,405,60,95,80,60,80,30,75,70,142,P.MEDIUM_FAST,50,!1),new M(e.VENONAT,1,!1,!1,!1,"Insect Pokémon",L.BUG,L.POISON,1,30,O.COMPOUND_EYES,O.TINTED_LENS,O.RUN_AWAY,305,60,55,50,40,55,45,190,70,61,P.MEDIUM_FAST,50,!1),new M(e.VENOMOTH,1,!1,!1,!1,"Poison Moth Pokémon",L.BUG,L.POISON,1.5,12.5,O.SHIELD_DUST,O.TINTED_LENS,O.WONDER_SKIN,450,70,65,60,90,75,90,75,70,158,P.MEDIUM_FAST,50,!1),new M(e.DIGLETT,1,!1,!1,!1,"Mole Pokémon",L.GROUND,null,.2,.8,O.SAND_VEIL,O.ARENA_TRAP,O.SAND_FORCE,265,10,55,25,35,45,95,255,50,53,P.MEDIUM_FAST,50,!1),new M(e.DUGTRIO,1,!1,!1,!1,"Mole Pokémon",L.GROUND,null,.7,33.3,O.SAND_VEIL,O.ARENA_TRAP,O.SAND_FORCE,425,35,100,50,50,70,120,50,50,149,P.MEDIUM_FAST,50,!1),new M(e.MEOWTH,1,!1,!1,!1,"Scratch Cat Pokémon",L.NORMAL,null,.4,4.2,O.PICKUP,O.TECHNICIAN,O.UNNERVE,290,40,45,35,40,40,90,255,50,58,P.MEDIUM_FAST,50,!1,!0,new F("Normal","",L.NORMAL,null,.4,4.2,O.PICKUP,O.TECHNICIAN,O.UNNERVE,290,40,45,35,40,40,90,255,50,58,!1,null,!0),new F("G-Max",te.GIGANTAMAX,L.NORMAL,null,33,999.9,O.TECHNICIAN,O.TECHNICIAN,O.TECHNICIAN,540,115,110,65,65,70,115,255,50,58)),new M(e.PERSIAN,1,!1,!1,!1,"Classy Cat Pokémon",L.NORMAL,null,1,32,O.LIMBER,O.TECHNICIAN,O.UNNERVE,440,65,70,60,65,65,115,90,50,154,P.MEDIUM_FAST,50,!1),new M(e.PSYDUCK,1,!1,!1,!1,"Duck Pokémon",L.WATER,null,.8,19.6,O.DAMP,O.CLOUD_NINE,O.SWIFT_SWIM,320,50,52,48,65,50,55,190,50,64,P.MEDIUM_FAST,50,!1),new M(e.GOLDUCK,1,!1,!1,!1,"Duck Pokémon",L.WATER,null,1.7,76.6,O.DAMP,O.CLOUD_NINE,O.SWIFT_SWIM,500,80,82,78,95,80,85,75,50,175,P.MEDIUM_FAST,50,!1),new M(e.MANKEY,1,!1,!1,!1,"Pig Monkey Pokémon",L.FIGHTING,null,.5,28,O.VITAL_SPIRIT,O.ANGER_POINT,O.DEFIANT,305,40,80,35,35,45,70,190,70,61,P.MEDIUM_FAST,50,!1),new M(e.PRIMEAPE,1,!1,!1,!1,"Pig Monkey Pokémon",L.FIGHTING,null,1,32,O.VITAL_SPIRIT,O.ANGER_POINT,O.DEFIANT,455,65,105,60,60,70,95,75,70,159,P.MEDIUM_FAST,50,!1),new M(e.GROWLITHE,1,!1,!1,!1,"Puppy Pokémon",L.FIRE,null,.7,19,O.INTIMIDATE,O.FLASH_FIRE,O.JUSTIFIED,350,55,70,45,70,50,60,190,50,70,P.SLOW,75,!1),new M(e.ARCANINE,1,!1,!1,!1,"Legendary Pokémon",L.FIRE,null,1.9,155,O.INTIMIDATE,O.FLASH_FIRE,O.JUSTIFIED,555,90,110,80,100,80,95,75,50,194,P.SLOW,75,!1),new M(e.POLIWAG,1,!1,!1,!1,"Tadpole Pokémon",L.WATER,null,.6,12.4,O.WATER_ABSORB,O.DAMP,O.SWIFT_SWIM,300,40,50,40,40,40,90,255,50,60,P.MEDIUM_SLOW,50,!1),new M(e.POLIWHIRL,1,!1,!1,!1,"Tadpole Pokémon",L.WATER,null,1,20,O.WATER_ABSORB,O.DAMP,O.SWIFT_SWIM,385,65,65,65,50,50,90,120,50,135,P.MEDIUM_SLOW,50,!1),new M(e.POLIWRATH,1,!1,!1,!1,"Tadpole Pokémon",L.WATER,L.FIGHTING,1.3,54,O.WATER_ABSORB,O.DAMP,O.SWIFT_SWIM,510,90,95,95,70,90,70,45,50,255,P.MEDIUM_SLOW,50,!1),new M(e.ABRA,1,!1,!1,!1,"Psi Pokémon",L.PSYCHIC,null,.9,19.5,O.SYNCHRONIZE,O.INNER_FOCUS,O.MAGIC_GUARD,310,25,20,15,105,55,90,200,50,62,P.MEDIUM_SLOW,75,!1),new M(e.KADABRA,1,!1,!1,!1,"Psi Pokémon",L.PSYCHIC,null,1.3,56.5,O.SYNCHRONIZE,O.INNER_FOCUS,O.MAGIC_GUARD,400,40,35,30,120,70,105,100,50,140,P.MEDIUM_SLOW,75,!0),new M(e.ALAKAZAM,1,!1,!1,!1,"Psi Pokémon",L.PSYCHIC,null,1.5,48,O.SYNCHRONIZE,O.INNER_FOCUS,O.MAGIC_GUARD,500,55,50,45,135,95,120,50,50,250,P.MEDIUM_SLOW,75,!0,!0,new F("Normal","",L.PSYCHIC,null,1.5,48,O.SYNCHRONIZE,O.INNER_FOCUS,O.MAGIC_GUARD,500,55,50,45,135,95,120,50,50,250,!0,null,!0),new F("Mega",te.MEGA,L.PSYCHIC,null,1.2,48,O.TRACE,O.TRACE,O.TRACE,600,55,50,65,175,105,150,50,50,250,!0)),new M(e.MACHOP,1,!1,!1,!1,"Superpower Pokémon",L.FIGHTING,null,.8,19.5,O.GUTS,O.NO_GUARD,O.STEADFAST,305,70,80,50,35,35,35,180,50,61,P.MEDIUM_SLOW,75,!1),new M(e.MACHOKE,1,!1,!1,!1,"Superpower Pokémon",L.FIGHTING,null,1.5,70.5,O.GUTS,O.NO_GUARD,O.STEADFAST,405,80,100,70,50,60,45,90,50,142,P.MEDIUM_SLOW,75,!1),new M(e.MACHAMP,1,!1,!1,!1,"Superpower Pokémon",L.FIGHTING,null,1.6,130,O.GUTS,O.NO_GUARD,O.STEADFAST,505,90,130,80,65,85,55,45,50,253,P.MEDIUM_SLOW,75,!1,!0,new F("Normal","",L.FIGHTING,null,1.6,130,O.GUTS,O.NO_GUARD,O.STEADFAST,505,90,130,80,65,85,55,45,50,253,!1,null,!0),new F("G-Max",te.GIGANTAMAX,L.FIGHTING,null,25,999.9,O.GUTS,O.GUTS,O.GUTS,605,120,170,85,75,90,65,45,50,253)),new M(e.BELLSPROUT,1,!1,!1,!1,"Flower Pokémon",L.GRASS,L.POISON,.7,4,O.CHLOROPHYLL,O.NONE,O.GLUTTONY,300,50,75,35,70,30,40,255,70,60,P.MEDIUM_SLOW,50,!1),new M(e.WEEPINBELL,1,!1,!1,!1,"Flycatcher Pokémon",L.GRASS,L.POISON,1,6.4,O.CHLOROPHYLL,O.NONE,O.GLUTTONY,390,65,90,50,85,45,55,120,70,137,P.MEDIUM_SLOW,50,!1),new M(e.VICTREEBEL,1,!1,!1,!1,"Flycatcher Pokémon",L.GRASS,L.POISON,1.7,15.5,O.CHLOROPHYLL,O.NONE,O.GLUTTONY,490,80,105,65,100,70,70,45,70,245,P.MEDIUM_SLOW,50,!1),new M(e.TENTACOOL,1,!1,!1,!1,"Jellyfish Pokémon",L.WATER,L.POISON,.9,45.5,O.CLEAR_BODY,O.LIQUID_OOZE,O.RAIN_DISH,335,40,40,35,50,100,70,190,50,67,P.SLOW,50,!1),new M(e.TENTACRUEL,1,!1,!1,!1,"Jellyfish Pokémon",L.WATER,L.POISON,1.6,55,O.CLEAR_BODY,O.LIQUID_OOZE,O.RAIN_DISH,515,80,70,65,80,120,100,60,50,180,P.SLOW,50,!1),new M(e.GEODUDE,1,!1,!1,!1,"Rock Pokémon",L.ROCK,L.GROUND,.4,20,O.ROCK_HEAD,O.STURDY,O.SAND_VEIL,300,40,80,100,30,30,20,255,70,60,P.MEDIUM_SLOW,50,!1),new M(e.GRAVELER,1,!1,!1,!1,"Rock Pokémon",L.ROCK,L.GROUND,1,105,O.ROCK_HEAD,O.STURDY,O.SAND_VEIL,390,55,95,115,45,45,35,120,70,137,P.MEDIUM_SLOW,50,!1),new M(e.GOLEM,1,!1,!1,!1,"Megaton Pokémon",L.ROCK,L.GROUND,1.4,300,O.ROCK_HEAD,O.STURDY,O.SAND_VEIL,495,80,120,130,55,65,45,45,70,248,P.MEDIUM_SLOW,50,!1),new M(e.PONYTA,1,!1,!1,!1,"Fire Horse Pokémon",L.FIRE,null,1,30,O.RUN_AWAY,O.FLASH_FIRE,O.FLAME_BODY,410,50,85,55,65,65,90,190,50,82,P.MEDIUM_FAST,50,!1),new M(e.RAPIDASH,1,!1,!1,!1,"Fire Horse Pokémon",L.FIRE,null,1.7,95,O.RUN_AWAY,O.FLASH_FIRE,O.FLAME_BODY,500,65,100,70,80,80,105,60,50,175,P.MEDIUM_FAST,50,!1),new M(e.SLOWPOKE,1,!1,!1,!1,"Dopey Pokémon",L.WATER,L.PSYCHIC,1.2,36,O.OBLIVIOUS,O.OWN_TEMPO,O.REGENERATOR,315,90,65,65,40,40,15,190,50,63,P.MEDIUM_FAST,50,!1),new M(e.SLOWBRO,1,!1,!1,!1,"Hermit Crab Pokémon",L.WATER,L.PSYCHIC,1.6,78.5,O.OBLIVIOUS,O.OWN_TEMPO,O.REGENERATOR,490,95,75,110,100,80,30,75,50,172,P.MEDIUM_FAST,50,!1,!0,new F("Normal","",L.WATER,L.PSYCHIC,1.6,78.5,O.OBLIVIOUS,O.OWN_TEMPO,O.REGENERATOR,490,95,75,110,100,80,30,75,50,172,!1,null,!0),new F("Mega",te.MEGA,L.WATER,L.PSYCHIC,2,120,O.SHELL_ARMOR,O.SHELL_ARMOR,O.SHELL_ARMOR,590,95,75,180,130,80,30,75,50,172)),new M(e.MAGNEMITE,1,!1,!1,!1,"Magnet Pokémon",L.ELECTRIC,L.STEEL,.3,6,O.MAGNET_PULL,O.STURDY,O.ANALYTIC,325,25,35,70,95,55,45,190,50,65,P.MEDIUM_FAST,null,!1),new M(e.MAGNETON,1,!1,!1,!1,"Magnet Pokémon",L.ELECTRIC,L.STEEL,1,60,O.MAGNET_PULL,O.STURDY,O.ANALYTIC,465,50,60,95,120,70,70,60,50,163,P.MEDIUM_FAST,null,!1),new M(e.FARFETCHD,1,!1,!1,!1,"Wild Duck Pokémon",L.NORMAL,L.FLYING,.8,15,O.KEEN_EYE,O.INNER_FOCUS,O.DEFIANT,377,52,90,55,58,62,60,45,50,132,P.MEDIUM_FAST,50,!1),new M(e.DODUO,1,!1,!1,!1,"Twin Bird Pokémon",L.NORMAL,L.FLYING,1.4,39.2,O.RUN_AWAY,O.EARLY_BIRD,O.TANGLED_FEET,310,35,85,45,35,35,75,190,70,62,P.MEDIUM_FAST,50,!0),new M(e.DODRIO,1,!1,!1,!1,"Triple Bird Pokémon",L.NORMAL,L.FLYING,1.8,85.2,O.RUN_AWAY,O.EARLY_BIRD,O.TANGLED_FEET,470,60,110,70,60,60,110,45,70,165,P.MEDIUM_FAST,50,!0),new M(e.SEEL,1,!1,!1,!1,"Sea Lion Pokémon",L.WATER,null,1.1,90,O.THICK_FAT,O.HYDRATION,O.ICE_BODY,325,65,45,55,45,70,45,190,70,65,P.MEDIUM_FAST,50,!1),new M(e.DEWGONG,1,!1,!1,!1,"Sea Lion Pokémon",L.WATER,L.ICE,1.7,120,O.THICK_FAT,O.HYDRATION,O.ICE_BODY,475,90,70,80,70,95,70,75,70,166,P.MEDIUM_FAST,50,!1),new M(e.GRIMER,1,!1,!1,!1,"Sludge Pokémon",L.POISON,null,.9,30,O.STENCH,O.STICKY_HOLD,O.POISON_TOUCH,325,80,80,50,40,50,25,190,70,65,P.MEDIUM_FAST,50,!1),new M(e.MUK,1,!1,!1,!1,"Sludge Pokémon",L.POISON,null,1.2,30,O.STENCH,O.STICKY_HOLD,O.POISON_TOUCH,500,105,105,75,65,100,50,75,70,175,P.MEDIUM_FAST,50,!1),new M(e.SHELLDER,1,!1,!1,!1,"Bivalve Pokémon",L.WATER,null,.3,4,O.SHELL_ARMOR,O.SKILL_LINK,O.OVERCOAT,305,30,65,100,45,25,40,190,50,61,P.SLOW,50,!1),new M(e.CLOYSTER,1,!1,!1,!1,"Bivalve Pokémon",L.WATER,L.ICE,1.5,132.5,O.SHELL_ARMOR,O.SKILL_LINK,O.OVERCOAT,525,50,95,180,85,45,70,60,50,184,P.SLOW,50,!1),new M(e.GASTLY,1,!1,!1,!1,"Gas Pokémon",L.GHOST,L.POISON,1.3,.1,O.LEVITATE,O.NONE,O.NONE,310,30,35,30,100,35,80,190,50,62,P.MEDIUM_SLOW,50,!1),new M(e.HAUNTER,1,!1,!1,!1,"Gas Pokémon",L.GHOST,L.POISON,1.6,.1,O.LEVITATE,O.NONE,O.NONE,405,45,50,45,115,55,95,90,50,142,P.MEDIUM_SLOW,50,!1),new M(e.GENGAR,1,!1,!1,!1,"Shadow Pokémon",L.GHOST,L.POISON,1.5,40.5,O.CURSED_BODY,O.NONE,O.NONE,500,60,65,60,130,75,110,45,50,250,P.MEDIUM_SLOW,50,!1,!0,new F("Normal","",L.GHOST,L.POISON,1.5,40.5,O.CURSED_BODY,O.NONE,O.NONE,500,60,65,60,130,75,110,45,50,250,!1,null,!0),new F("Mega",te.MEGA,L.GHOST,L.POISON,1.4,40.5,O.SHADOW_TAG,O.NONE,O.NONE,600,60,65,80,170,95,130,45,50,250),new F("G-Max",te.GIGANTAMAX,L.GHOST,L.POISON,20,999.9,O.CURSED_BODY,O.NONE,O.NONE,600,140,65,70,140,85,100,45,50,250)),new M(e.ONIX,1,!1,!1,!1,"Rock Snake Pokémon",L.ROCK,L.GROUND,8.8,210,O.ROCK_HEAD,O.STURDY,O.WEAK_ARMOR,385,35,45,160,30,45,70,45,50,77,P.MEDIUM_FAST,50,!1),new M(e.DROWZEE,1,!1,!1,!1,"Hypnosis Pokémon",L.PSYCHIC,null,1,32.4,O.INSOMNIA,O.FOREWARN,O.INNER_FOCUS,328,60,48,45,43,90,42,190,70,66,P.MEDIUM_FAST,50,!1),new M(e.HYPNO,1,!1,!1,!1,"Hypnosis Pokémon",L.PSYCHIC,null,1.6,75.6,O.INSOMNIA,O.FOREWARN,O.INNER_FOCUS,483,85,73,70,73,115,67,75,70,169,P.MEDIUM_FAST,50,!0),new M(e.KRABBY,1,!1,!1,!1,"River Crab Pokémon",L.WATER,null,.4,6.5,O.HYPER_CUTTER,O.SHELL_ARMOR,O.SHEER_FORCE,325,30,105,90,25,25,50,225,50,65,P.MEDIUM_FAST,50,!1),new M(e.KINGLER,1,!1,!1,!1,"Pincer Pokémon",L.WATER,null,1.3,60,O.HYPER_CUTTER,O.SHELL_ARMOR,O.SHEER_FORCE,475,55,130,115,50,50,75,60,50,166,P.MEDIUM_FAST,50,!1,!0,new F("Normal","",L.WATER,null,1.3,60,O.HYPER_CUTTER,O.SHELL_ARMOR,O.SHEER_FORCE,475,55,130,115,50,50,75,60,50,166,!1,null,!0),new F("G-Max",te.GIGANTAMAX,L.WATER,null,19,999.9,O.TOUGH_CLAWS,O.TOUGH_CLAWS,O.TOUGH_CLAWS,575,92,145,140,60,65,73,60,50,166)),new M(e.VOLTORB,1,!1,!1,!1,"Ball Pokémon",L.ELECTRIC,null,.5,10.4,O.SOUNDPROOF,O.STATIC,O.AFTERMATH,330,40,30,50,55,55,100,190,70,66,P.MEDIUM_FAST,null,!1),new M(e.ELECTRODE,1,!1,!1,!1,"Ball Pokémon",L.ELECTRIC,null,1.2,66.6,O.SOUNDPROOF,O.STATIC,O.AFTERMATH,490,60,50,70,80,80,150,60,70,172,P.MEDIUM_FAST,null,!1),new M(e.EXEGGCUTE,1,!1,!1,!1,"Egg Pokémon",L.GRASS,L.PSYCHIC,.4,2.5,O.CHLOROPHYLL,O.NONE,O.HARVEST,325,60,40,80,60,45,40,90,50,65,P.SLOW,50,!1),new M(e.EXEGGUTOR,1,!1,!1,!1,"Coconut Pokémon",L.GRASS,L.PSYCHIC,2,120,O.CHLOROPHYLL,O.NONE,O.HARVEST,530,95,95,85,125,75,55,45,50,186,P.SLOW,50,!1),new M(e.CUBONE,1,!1,!1,!1,"Lonely Pokémon",L.GROUND,null,.4,6.5,O.ROCK_HEAD,O.LIGHTNING_ROD,O.BATTLE_ARMOR,320,50,50,95,40,50,35,190,50,64,P.MEDIUM_FAST,50,!1),new M(e.MAROWAK,1,!1,!1,!1,"Bone Keeper Pokémon",L.GROUND,null,1,45,O.ROCK_HEAD,O.LIGHTNING_ROD,O.BATTLE_ARMOR,425,60,80,110,50,80,45,75,50,149,P.MEDIUM_FAST,50,!1),new M(e.HITMONLEE,1,!1,!1,!1,"Kicking Pokémon",L.FIGHTING,null,1.5,49.8,O.LIMBER,O.RECKLESS,O.UNBURDEN,455,50,120,53,35,110,87,45,50,159,P.MEDIUM_FAST,100,!1),new M(e.HITMONCHAN,1,!1,!1,!1,"Punching Pokémon",L.FIGHTING,null,1.4,50.2,O.KEEN_EYE,O.IRON_FIST,O.INNER_FOCUS,455,50,105,79,35,110,76,45,50,159,P.MEDIUM_FAST,100,!1),new M(e.LICKITUNG,1,!1,!1,!1,"Licking Pokémon",L.NORMAL,null,1.2,65.5,O.OWN_TEMPO,O.OBLIVIOUS,O.CLOUD_NINE,385,90,55,75,60,75,30,45,50,77,P.MEDIUM_FAST,50,!1),new M(e.KOFFING,1,!1,!1,!1,"Poison Gas Pokémon",L.POISON,null,.6,1,O.LEVITATE,O.NEUTRALIZING_GAS,O.STENCH,340,40,65,95,60,45,35,190,50,68,P.MEDIUM_FAST,50,!1),new M(e.WEEZING,1,!1,!1,!1,"Poison Gas Pokémon",L.POISON,null,1.2,9.5,O.LEVITATE,O.NEUTRALIZING_GAS,O.STENCH,490,65,90,120,85,70,60,60,50,172,P.MEDIUM_FAST,50,!1),new M(e.RHYHORN,1,!1,!1,!1,"Spikes Pokémon",L.GROUND,L.ROCK,1,115,O.LIGHTNING_ROD,O.ROCK_HEAD,O.RECKLESS,345,80,85,95,30,30,25,120,50,69,P.SLOW,50,!0),new M(e.RHYDON,1,!1,!1,!1,"Drill Pokémon",L.GROUND,L.ROCK,1.9,120,O.LIGHTNING_ROD,O.ROCK_HEAD,O.RECKLESS,485,105,130,120,45,45,40,60,50,170,P.SLOW,50,!0),new M(e.CHANSEY,1,!1,!1,!1,"Egg Pokémon",L.NORMAL,null,1.1,34.6,O.NATURAL_CURE,O.SERENE_GRACE,O.HEALER,450,250,5,5,35,105,50,30,140,395,P.FAST,0,!1),new M(e.TANGELA,1,!1,!1,!1,"Vine Pokémon",L.GRASS,null,1,35,O.CHLOROPHYLL,O.LEAF_GUARD,O.REGENERATOR,435,65,55,115,100,40,60,45,50,87,P.MEDIUM_FAST,50,!1),new M(e.KANGASKHAN,1,!1,!1,!1,"Parent Pokémon",L.NORMAL,null,2.2,80,O.EARLY_BIRD,O.SCRAPPY,O.INNER_FOCUS,490,105,95,80,40,80,90,45,50,172,P.MEDIUM_FAST,0,!1,!0,new F("Normal","",L.NORMAL,null,2.2,80,O.EARLY_BIRD,O.SCRAPPY,O.INNER_FOCUS,490,105,95,80,40,80,90,45,50,172,!1,null,!0),new F("Mega",te.MEGA,L.NORMAL,null,2.2,100,O.PARENTAL_BOND,O.PARENTAL_BOND,O.PARENTAL_BOND,590,105,125,100,60,100,100,45,50,172)),new M(e.HORSEA,1,!1,!1,!1,"Dragon Pokémon",L.WATER,null,.4,8,O.SWIFT_SWIM,O.SNIPER,O.DAMP,295,30,40,70,70,25,60,225,50,59,P.MEDIUM_FAST,50,!1),new M(e.SEADRA,1,!1,!1,!1,"Dragon Pokémon",L.WATER,null,1.2,25,O.POISON_POINT,O.SNIPER,O.DAMP,440,55,65,95,95,45,85,75,50,154,P.MEDIUM_FAST,50,!1),new M(e.GOLDEEN,1,!1,!1,!1,"Goldfish Pokémon",L.WATER,null,.6,15,O.SWIFT_SWIM,O.WATER_VEIL,O.LIGHTNING_ROD,320,45,67,60,35,50,63,225,50,64,P.MEDIUM_FAST,50,!0),new M(e.SEAKING,1,!1,!1,!1,"Goldfish Pokémon",L.WATER,null,1.3,39,O.SWIFT_SWIM,O.WATER_VEIL,O.LIGHTNING_ROD,450,80,92,65,65,80,68,60,50,158,P.MEDIUM_FAST,50,!0),new M(e.STARYU,1,!1,!1,!1,"Star Shape Pokémon",L.WATER,null,.8,34.5,O.ILLUMINATE,O.NATURAL_CURE,O.ANALYTIC,340,30,45,55,70,55,85,225,50,68,P.SLOW,null,!1),new M(e.STARMIE,1,!1,!1,!1,"Mysterious Pokémon",L.WATER,L.PSYCHIC,1.1,80,O.ILLUMINATE,O.NATURAL_CURE,O.ANALYTIC,520,60,75,85,100,85,115,60,50,182,P.SLOW,null,!1),new M(e.MR_MIME,1,!1,!1,!1,"Barrier Pokémon",L.PSYCHIC,L.FAIRY,1.3,54.5,O.SOUNDPROOF,O.FILTER,O.TECHNICIAN,460,40,45,65,100,120,90,45,50,161,P.MEDIUM_FAST,50,!1),new M(e.SCYTHER,1,!1,!1,!1,"Mantis Pokémon",L.BUG,L.FLYING,1.5,56,O.SWARM,O.TECHNICIAN,O.STEADFAST,500,70,110,80,55,80,105,45,50,100,P.MEDIUM_FAST,50,!0),new M(e.JYNX,1,!1,!1,!1,"Human Shape Pokémon",L.ICE,L.PSYCHIC,1.4,40.6,O.OBLIVIOUS,O.FOREWARN,O.DRY_SKIN,455,65,50,35,115,95,95,45,50,159,P.MEDIUM_FAST,0,!1),new M(e.ELECTABUZZ,1,!1,!1,!1,"Electric Pokémon",L.ELECTRIC,null,1.1,30,O.STATIC,O.NONE,O.VITAL_SPIRIT,490,65,83,57,95,85,105,45,50,172,P.MEDIUM_FAST,75,!1),new M(e.MAGMAR,1,!1,!1,!1,"Spitfire Pokémon",L.FIRE,null,1.3,44.5,O.FLAME_BODY,O.NONE,O.VITAL_SPIRIT,495,65,95,57,100,85,93,45,50,173,P.MEDIUM_FAST,75,!1),new M(e.PINSIR,1,!1,!1,!1,"Stag Beetle Pokémon",L.BUG,null,1.5,55,O.HYPER_CUTTER,O.MOLD_BREAKER,O.MOXIE,500,65,125,100,55,70,85,45,50,175,P.SLOW,50,!1,!0,new F("Normal","",L.BUG,null,1.5,55,O.HYPER_CUTTER,O.MOLD_BREAKER,O.MOXIE,500,65,125,100,55,70,85,45,50,175,!1,null,!0),new F("Mega",te.MEGA,L.BUG,L.FLYING,1.7,59,O.AERILATE,O.AERILATE,O.AERILATE,600,65,155,120,65,90,105,45,50,175)),new M(e.TAUROS,1,!1,!1,!1,"Wild Bull Pokémon",L.NORMAL,null,1.4,88.4,O.INTIMIDATE,O.ANGER_POINT,O.SHEER_FORCE,490,75,100,95,40,70,110,45,50,172,P.SLOW,100,!1),new M(e.MAGIKARP,1,!1,!1,!1,"Fish Pokémon",L.WATER,null,.9,10,O.SWIFT_SWIM,O.NONE,O.RATTLED,200,20,10,55,15,20,80,255,50,40,P.SLOW,50,!0),new M(e.GYARADOS,1,!1,!1,!1,"Atrocious Pokémon",L.WATER,L.FLYING,6.5,235,O.INTIMIDATE,O.NONE,O.MOXIE,540,95,125,79,60,100,81,45,50,189,P.SLOW,50,!0,!0,new F("Normal","",L.WATER,L.FLYING,6.5,235,O.INTIMIDATE,O.NONE,O.MOXIE,540,95,125,79,60,100,81,45,50,189,!0,null,!0),new F("Mega",te.MEGA,L.WATER,L.DARK,6.5,305,O.MOLD_BREAKER,O.MOLD_BREAKER,O.MOLD_BREAKER,640,95,155,109,70,130,81,45,50,189,!0)),new M(e.LAPRAS,1,!1,!1,!1,"Transport Pokémon",L.WATER,L.ICE,2.5,220,O.WATER_ABSORB,O.SHELL_ARMOR,O.HYDRATION,535,130,85,80,85,95,60,45,50,187,P.SLOW,50,!1,!0,new F("Normal","",L.WATER,L.ICE,2.5,220,O.WATER_ABSORB,O.SHELL_ARMOR,O.HYDRATION,535,130,85,80,85,95,60,45,50,187,!1,null,!0),new F("G-Max",te.GIGANTAMAX,L.WATER,L.ICE,24,999.9,O.SHIELD_DUST,O.SHIELD_DUST,O.SHIELD_DUST,635,170,97,85,107,111,65,45,50,187)),new M(e.DITTO,1,!1,!1,!1,"Transform Pokémon",L.NORMAL,null,.3,4,O.LIMBER,O.NONE,O.IMPOSTER,288,48,48,48,48,48,48,35,50,101,P.MEDIUM_FAST,null,!1),new M(e.EEVEE,1,!1,!1,!1,"Evolution Pokémon",L.NORMAL,null,.3,6.5,O.RUN_AWAY,O.ADAPTABILITY,O.ANTICIPATION,325,55,55,50,45,65,55,45,50,65,P.MEDIUM_FAST,87.5,!1,!0,new F("Normal","",L.NORMAL,null,.3,6.5,O.RUN_AWAY,O.ADAPTABILITY,O.ANTICIPATION,325,55,55,50,45,65,55,45,50,65,!1,null,!0),new F("Partner","partner",L.NORMAL,null,.3,6.5,O.RUN_AWAY,O.ADAPTABILITY,O.ANTICIPATION,435,65,75,70,65,85,75,45,50,65,!1,null,!0),new F("G-Max",te.GIGANTAMAX,L.NORMAL,null,18,999.9,O.PROTEAN,O.PROTEAN,O.PROTEAN,535,110,95,70,90,85,85,45,50,65)),new M(e.VAPOREON,1,!1,!1,!1,"Bubble Jet Pokémon",L.WATER,null,1,29,O.WATER_ABSORB,O.NONE,O.HYDRATION,525,130,65,60,110,95,65,45,50,184,P.MEDIUM_FAST,87.5,!1),new M(e.JOLTEON,1,!1,!1,!1,"Lightning Pokémon",L.ELECTRIC,null,.8,24.5,O.VOLT_ABSORB,O.NONE,O.QUICK_FEET,525,65,65,60,110,95,130,45,50,184,P.MEDIUM_FAST,87.5,!1),new M(e.FLAREON,1,!1,!1,!1,"Flame Pokémon",L.FIRE,null,.9,25,O.FLASH_FIRE,O.NONE,O.GUTS,525,65,130,60,95,110,65,45,50,184,P.MEDIUM_FAST,87.5,!1),new M(e.PORYGON,1,!1,!1,!1,"Virtual Pokémon",L.NORMAL,null,.8,36.5,O.TRACE,O.DOWNLOAD,O.ANALYTIC,395,65,60,70,85,75,40,45,50,79,P.MEDIUM_FAST,null,!1),new M(e.OMANYTE,1,!1,!1,!1,"Spiral Pokémon",L.ROCK,L.WATER,.4,7.5,O.SWIFT_SWIM,O.SHELL_ARMOR,O.WEAK_ARMOR,355,35,40,100,90,55,35,45,50,71,P.MEDIUM_FAST,87.5,!1),new M(e.OMASTAR,1,!1,!1,!1,"Spiral Pokémon",L.ROCK,L.WATER,1,35,O.SWIFT_SWIM,O.SHELL_ARMOR,O.WEAK_ARMOR,495,70,60,125,115,70,55,45,50,173,P.MEDIUM_FAST,87.5,!1),new M(e.KABUTO,1,!1,!1,!1,"Shellfish Pokémon",L.ROCK,L.WATER,.5,11.5,O.SWIFT_SWIM,O.BATTLE_ARMOR,O.WEAK_ARMOR,355,30,80,90,55,45,55,45,50,71,P.MEDIUM_FAST,87.5,!1),new M(e.KABUTOPS,1,!1,!1,!1,"Shellfish Pokémon",L.ROCK,L.WATER,1.3,40.5,O.SWIFT_SWIM,O.BATTLE_ARMOR,O.WEAK_ARMOR,495,60,115,105,65,70,80,45,50,173,P.MEDIUM_FAST,87.5,!1),new M(e.AERODACTYL,1,!1,!1,!1,"Fossil Pokémon",L.ROCK,L.FLYING,1.8,59,O.ROCK_HEAD,O.PRESSURE,O.UNNERVE,515,80,105,65,60,75,130,45,50,180,P.SLOW,87.5,!1,!0,new F("Normal","",L.ROCK,L.FLYING,1.8,59,O.ROCK_HEAD,O.PRESSURE,O.UNNERVE,515,80,105,65,60,75,130,45,50,180,!1,null,!0),new F("Mega",te.MEGA,L.ROCK,L.FLYING,2.1,79,O.TOUGH_CLAWS,O.TOUGH_CLAWS,O.TOUGH_CLAWS,615,80,135,85,70,95,150,45,50,180)),new M(e.SNORLAX,1,!1,!1,!1,"Sleeping Pokémon",L.NORMAL,null,2.1,460,O.IMMUNITY,O.THICK_FAT,O.GLUTTONY,540,160,110,65,65,110,30,25,50,189,P.SLOW,87.5,!1,!0,new F("Normal","",L.NORMAL,null,2.1,460,O.IMMUNITY,O.THICK_FAT,O.GLUTTONY,540,160,110,65,65,110,30,25,50,189,!1,null,!0),new F("G-Max",te.GIGANTAMAX,L.NORMAL,null,35,999.9,O.HARVEST,O.HARVEST,O.HARVEST,640,210,135,70,90,115,20,25,50,189)),new M(e.ARTICUNO,1,!0,!1,!1,"Freeze Pokémon",L.ICE,L.FLYING,1.7,55.4,O.PRESSURE,O.NONE,O.SNOW_CLOAK,580,90,85,100,95,125,85,3,35,290,P.SLOW,null,!1),new M(e.ZAPDOS,1,!0,!1,!1,"Electric Pokémon",L.ELECTRIC,L.FLYING,1.6,52.6,O.PRESSURE,O.NONE,O.STATIC,580,90,90,85,125,90,100,3,35,290,P.SLOW,null,!1),new M(e.MOLTRES,1,!0,!1,!1,"Flame Pokémon",L.FIRE,L.FLYING,2,60,O.PRESSURE,O.NONE,O.FLAME_BODY,580,90,100,90,125,85,90,3,35,290,P.SLOW,null,!1),new M(e.DRATINI,1,!1,!1,!1,"Dragon Pokémon",L.DRAGON,null,1.8,3.3,O.SHED_SKIN,O.NONE,O.MARVEL_SCALE,300,41,64,45,50,50,50,45,35,60,P.SLOW,50,!1),new M(e.DRAGONAIR,1,!1,!1,!1,"Dragon Pokémon",L.DRAGON,null,4,16.5,O.SHED_SKIN,O.NONE,O.MARVEL_SCALE,420,61,84,65,70,70,70,45,35,147,P.SLOW,50,!1),new M(e.DRAGONITE,1,!1,!1,!1,"Dragon Pokémon",L.DRAGON,L.FLYING,2.2,210,O.INNER_FOCUS,O.NONE,O.MULTISCALE,600,91,134,95,100,100,80,45,35,300,P.SLOW,50,!1),new M(e.MEWTWO,1,!1,!0,!1,"Genetic Pokémon",L.PSYCHIC,null,2,122,O.PRESSURE,O.NONE,O.UNNERVE,680,106,110,90,154,90,130,3,0,340,P.SLOW,null,!1,!0,new F("Normal","",L.PSYCHIC,null,2,122,O.PRESSURE,O.NONE,O.UNNERVE,680,106,110,90,154,90,130,3,0,340,!1,null,!0),new F("Mega X",te.MEGA_X,L.PSYCHIC,L.FIGHTING,2.3,127,O.STEADFAST,O.NONE,O.STEADFAST,780,106,190,100,154,100,130,3,0,340),new F("Mega Y",te.MEGA_Y,L.PSYCHIC,null,1.5,33,O.INSOMNIA,O.NONE,O.INSOMNIA,780,106,150,70,194,120,140,3,0,340)),new M(e.MEW,1,!1,!1,!0,"New Species Pokémon",L.PSYCHIC,null,.4,4,O.SYNCHRONIZE,O.NONE,O.NONE,600,100,100,100,100,100,100,45,100,300,P.MEDIUM_SLOW,null,!1),new M(e.CHIKORITA,2,!1,!1,!1,"Leaf Pokémon",L.GRASS,null,.9,6.4,O.OVERGROW,O.NONE,O.LEAF_GUARD,318,45,49,65,49,65,45,45,70,64,P.MEDIUM_SLOW,87.5,!1),new M(e.BAYLEEF,2,!1,!1,!1,"Leaf Pokémon",L.GRASS,null,1.2,15.8,O.OVERGROW,O.NONE,O.LEAF_GUARD,405,60,62,80,63,80,60,45,70,142,P.MEDIUM_SLOW,87.5,!1),new M(e.MEGANIUM,2,!1,!1,!1,"Herb Pokémon",L.GRASS,null,1.8,100.5,O.OVERGROW,O.NONE,O.LEAF_GUARD,525,80,82,100,83,100,80,45,70,263,P.MEDIUM_SLOW,87.5,!0),new M(e.CYNDAQUIL,2,!1,!1,!1,"Fire Mouse Pokémon",L.FIRE,null,.5,7.9,O.BLAZE,O.NONE,O.FLASH_FIRE,309,39,52,43,60,50,65,45,70,62,P.MEDIUM_SLOW,87.5,!1),new M(e.QUILAVA,2,!1,!1,!1,"Volcano Pokémon",L.FIRE,null,.9,19,O.BLAZE,O.NONE,O.FLASH_FIRE,405,58,64,58,80,65,80,45,70,142,P.MEDIUM_SLOW,87.5,!1),new M(e.TYPHLOSION,2,!1,!1,!1,"Volcano Pokémon",L.FIRE,null,1.7,79.5,O.BLAZE,O.NONE,O.FLASH_FIRE,534,78,84,78,109,85,100,45,70,267,P.MEDIUM_SLOW,87.5,!1),new M(e.TOTODILE,2,!1,!1,!1,"Big Jaw Pokémon",L.WATER,null,.6,9.5,O.TORRENT,O.NONE,O.SHEER_FORCE,314,50,65,64,44,48,43,45,70,63,P.MEDIUM_SLOW,87.5,!1),new M(e.CROCONAW,2,!1,!1,!1,"Big Jaw Pokémon",L.WATER,null,1.1,25,O.TORRENT,O.NONE,O.SHEER_FORCE,405,65,80,80,59,63,58,45,70,142,P.MEDIUM_SLOW,87.5,!1),new M(e.FERALIGATR,2,!1,!1,!1,"Big Jaw Pokémon",L.WATER,null,2.3,88.8,O.TORRENT,O.NONE,O.SHEER_FORCE,530,85,105,100,79,83,78,45,70,265,P.MEDIUM_SLOW,87.5,!1),new M(e.SENTRET,2,!1,!1,!1,"Scout Pokémon",L.NORMAL,null,.8,6,O.RUN_AWAY,O.KEEN_EYE,O.FRISK,215,35,46,34,35,45,20,255,70,43,P.MEDIUM_FAST,50,!1),new M(e.FURRET,2,!1,!1,!1,"Long Body Pokémon",L.NORMAL,null,1.8,32.5,O.RUN_AWAY,O.KEEN_EYE,O.FRISK,415,85,76,64,45,55,90,90,70,145,P.MEDIUM_FAST,50,!1),new M(e.HOOTHOOT,2,!1,!1,!1,"Owl Pokémon",L.NORMAL,L.FLYING,.7,21.2,O.INSOMNIA,O.KEEN_EYE,O.TINTED_LENS,262,60,30,30,36,56,50,255,50,52,P.MEDIUM_FAST,50,!1),new M(e.NOCTOWL,2,!1,!1,!1,"Owl Pokémon",L.NORMAL,L.FLYING,1.6,40.8,O.INSOMNIA,O.KEEN_EYE,O.TINTED_LENS,452,100,50,50,86,96,70,90,50,158,P.MEDIUM_FAST,50,!1),new M(e.LEDYBA,2,!1,!1,!1,"Five Star Pokémon",L.BUG,L.FLYING,1,10.8,O.SWARM,O.EARLY_BIRD,O.RATTLED,265,40,20,30,40,80,55,255,70,53,P.FAST,50,!0),new M(e.LEDIAN,2,!1,!1,!1,"Five Star Pokémon",L.BUG,L.FLYING,1.4,35.6,O.SWARM,O.EARLY_BIRD,O.IRON_FIST,390,55,35,50,55,110,85,90,70,137,P.FAST,50,!0),new M(e.SPINARAK,2,!1,!1,!1,"String Spit Pokémon",L.BUG,L.POISON,.5,8.5,O.SWARM,O.INSOMNIA,O.SNIPER,250,40,60,40,40,40,30,255,70,50,P.FAST,50,!1),new M(e.ARIADOS,2,!1,!1,!1,"Long Leg Pokémon",L.BUG,L.POISON,1.1,33.5,O.SWARM,O.INSOMNIA,O.SNIPER,400,70,90,70,60,70,40,90,70,140,P.FAST,50,!1),new M(e.CROBAT,2,!1,!1,!1,"Bat Pokémon",L.POISON,L.FLYING,1.8,75,O.INNER_FOCUS,O.NONE,O.INFILTRATOR,535,85,90,80,70,80,130,90,50,268,P.MEDIUM_FAST,50,!1),new M(e.CHINCHOU,2,!1,!1,!1,"Angler Pokémon",L.WATER,L.ELECTRIC,.5,12,O.VOLT_ABSORB,O.ILLUMINATE,O.WATER_ABSORB,330,75,38,38,56,56,67,190,50,66,P.SLOW,50,!1),new M(e.LANTURN,2,!1,!1,!1,"Light Pokémon",L.WATER,L.ELECTRIC,1.2,22.5,O.VOLT_ABSORB,O.ILLUMINATE,O.WATER_ABSORB,460,125,58,58,76,76,67,75,50,161,P.SLOW,50,!1),new M(e.PICHU,2,!1,!1,!1,"Tiny Mouse Pokémon",L.ELECTRIC,null,.3,2,O.STATIC,O.NONE,O.LIGHTNING_ROD,205,20,40,15,35,35,60,190,70,41,P.MEDIUM_FAST,50,!1,!1,new F("Normal","",L.ELECTRIC,null,1.4,2,O.STATIC,O.NONE,O.LIGHTNING_ROD,205,20,40,15,35,35,60,190,70,41,!1,null,!0),new F("Spiky-Eared","spiky",L.ELECTRIC,null,1.4,2,O.STATIC,O.NONE,O.LIGHTNING_ROD,205,20,40,15,35,35,60,190,70,41,!1,null,!0)),new M(e.CLEFFA,2,!1,!1,!1,"Star Shape Pokémon",L.FAIRY,null,.3,3,O.CUTE_CHARM,O.MAGIC_GUARD,O.FRIEND_GUARD,218,50,25,28,45,55,15,150,140,44,P.FAST,25,!1),new M(e.IGGLYBUFF,2,!1,!1,!1,"Balloon Pokémon",L.NORMAL,L.FAIRY,.3,1,O.CUTE_CHARM,O.COMPETITIVE,O.FRIEND_GUARD,210,90,30,15,40,20,15,170,50,42,P.FAST,25,!1),new M(e.TOGEPI,2,!1,!1,!1,"Spike Ball Pokémon",L.FAIRY,null,.3,1.5,O.HUSTLE,O.SERENE_GRACE,O.SUPER_LUCK,245,35,20,65,40,65,20,190,50,49,P.FAST,87.5,!1),new M(e.TOGETIC,2,!1,!1,!1,"Happiness Pokémon",L.FAIRY,L.FLYING,.6,3.2,O.HUSTLE,O.SERENE_GRACE,O.SUPER_LUCK,405,55,40,85,80,105,40,75,50,142,P.FAST,87.5,!1),new M(e.NATU,2,!1,!1,!1,"Tiny Bird Pokémon",L.PSYCHIC,L.FLYING,.2,2,O.SYNCHRONIZE,O.EARLY_BIRD,O.MAGIC_BOUNCE,320,40,50,45,70,45,70,190,50,64,P.MEDIUM_FAST,50,!1),new M(e.XATU,2,!1,!1,!1,"Mystic Pokémon",L.PSYCHIC,L.FLYING,1.5,15,O.SYNCHRONIZE,O.EARLY_BIRD,O.MAGIC_BOUNCE,470,65,75,70,95,70,95,75,50,165,P.MEDIUM_FAST,50,!0),new M(e.MAREEP,2,!1,!1,!1,"Wool Pokémon",L.ELECTRIC,null,.6,7.8,O.STATIC,O.NONE,O.PLUS,280,55,40,40,65,45,35,235,70,56,P.MEDIUM_SLOW,50,!1),new M(e.FLAAFFY,2,!1,!1,!1,"Wool Pokémon",L.ELECTRIC,null,.8,13.3,O.STATIC,O.NONE,O.PLUS,365,70,55,55,80,60,45,120,70,128,P.MEDIUM_SLOW,50,!1),new M(e.AMPHAROS,2,!1,!1,!1,"Light Pokémon",L.ELECTRIC,null,1.4,61.5,O.STATIC,O.NONE,O.PLUS,510,90,75,85,115,90,55,45,70,255,P.MEDIUM_SLOW,50,!1,!0,new F("Normal","",L.ELECTRIC,null,1.4,61.5,O.STATIC,O.NONE,O.PLUS,510,90,75,85,115,90,55,45,70,255,!1,null,!0),new F("Mega",te.MEGA,L.ELECTRIC,L.DRAGON,1.4,61.5,O.MOLD_BREAKER,O.NONE,O.MOLD_BREAKER,610,90,95,105,165,110,45,45,70,255)),new M(e.BELLOSSOM,2,!1,!1,!1,"Flower Pokémon",L.GRASS,null,.4,5.8,O.CHLOROPHYLL,O.NONE,O.HEALER,490,75,80,95,90,100,50,45,50,245,P.MEDIUM_SLOW,50,!1),new M(e.MARILL,2,!1,!1,!1,"Aqua Mouse Pokémon",L.WATER,L.FAIRY,.4,8.5,O.THICK_FAT,O.HUGE_POWER,O.SAP_SIPPER,250,70,20,50,20,50,40,190,50,88,P.FAST,50,!1),new M(e.AZUMARILL,2,!1,!1,!1,"Aqua Rabbit Pokémon",L.WATER,L.FAIRY,.8,28.5,O.THICK_FAT,O.HUGE_POWER,O.SAP_SIPPER,420,100,50,80,60,80,50,75,50,210,P.FAST,50,!1),new M(e.SUDOWOODO,2,!1,!1,!1,"Imitation Pokémon",L.ROCK,null,1.2,38,O.STURDY,O.ROCK_HEAD,O.RATTLED,410,70,100,115,30,65,30,65,50,144,P.MEDIUM_FAST,50,!0),new M(e.POLITOED,2,!1,!1,!1,"Frog Pokémon",L.WATER,null,1.1,33.9,O.WATER_ABSORB,O.DAMP,O.DRIZZLE,500,90,75,75,90,100,70,45,50,250,P.MEDIUM_SLOW,50,!0),new M(e.HOPPIP,2,!1,!1,!1,"Cottonweed Pokémon",L.GRASS,L.FLYING,.4,.5,O.CHLOROPHYLL,O.LEAF_GUARD,O.INFILTRATOR,250,35,35,40,35,55,50,255,70,50,P.MEDIUM_SLOW,50,!1),new M(e.SKIPLOOM,2,!1,!1,!1,"Cottonweed Pokémon",L.GRASS,L.FLYING,.6,1,O.CHLOROPHYLL,O.LEAF_GUARD,O.INFILTRATOR,340,55,45,50,45,65,80,120,70,119,P.MEDIUM_SLOW,50,!1),new M(e.JUMPLUFF,2,!1,!1,!1,"Cottonweed Pokémon",L.GRASS,L.FLYING,.8,3,O.CHLOROPHYLL,O.LEAF_GUARD,O.INFILTRATOR,460,75,55,70,55,95,110,45,70,230,P.MEDIUM_SLOW,50,!1),new M(e.AIPOM,2,!1,!1,!1,"Long Tail Pokémon",L.NORMAL,null,.8,11.5,O.RUN_AWAY,O.PICKUP,O.SKILL_LINK,360,55,70,55,40,55,85,45,70,72,P.FAST,50,!0),new M(e.SUNKERN,2,!1,!1,!1,"Seed Pokémon",L.GRASS,null,.3,1.8,O.CHLOROPHYLL,O.SOLAR_POWER,O.EARLY_BIRD,180,30,30,30,30,30,30,235,70,36,P.MEDIUM_SLOW,50,!1),new M(e.SUNFLORA,2,!1,!1,!1,"Sun Pokémon",L.GRASS,null,.8,8.5,O.CHLOROPHYLL,O.SOLAR_POWER,O.EARLY_BIRD,425,75,75,55,105,85,30,120,70,149,P.MEDIUM_SLOW,50,!1),new M(e.YANMA,2,!1,!1,!1,"Clear Wing Pokémon",L.BUG,L.FLYING,1.2,38,O.SPEED_BOOST,O.COMPOUND_EYES,O.FRISK,390,65,65,45,75,45,95,75,70,78,P.MEDIUM_FAST,50,!1),new M(e.WOOPER,2,!1,!1,!1,"Water Fish Pokémon",L.WATER,L.GROUND,.4,8.5,O.DAMP,O.WATER_ABSORB,O.UNAWARE,210,55,45,45,25,25,15,255,50,42,P.MEDIUM_FAST,50,!0),new M(e.QUAGSIRE,2,!1,!1,!1,"Water Fish Pokémon",L.WATER,L.GROUND,1.4,75,O.DAMP,O.WATER_ABSORB,O.UNAWARE,430,95,85,85,65,65,35,90,50,151,P.MEDIUM_FAST,50,!0),new M(e.ESPEON,2,!1,!1,!1,"Sun Pokémon",L.PSYCHIC,null,.9,26.5,O.SYNCHRONIZE,O.NONE,O.MAGIC_BOUNCE,525,65,65,60,130,95,110,45,50,184,P.MEDIUM_FAST,87.5,!1),new M(e.UMBREON,2,!1,!1,!1,"Moonlight Pokémon",L.DARK,null,1,27,O.SYNCHRONIZE,O.NONE,O.INNER_FOCUS,525,95,65,110,60,130,65,45,35,184,P.MEDIUM_FAST,87.5,!1),new M(e.MURKROW,2,!1,!1,!1,"Darkness Pokémon",L.DARK,L.FLYING,.5,2.1,O.INSOMNIA,O.SUPER_LUCK,O.PRANKSTER,405,60,85,42,85,42,91,30,35,81,P.MEDIUM_SLOW,50,!0),new M(e.SLOWKING,2,!1,!1,!1,"Royal Pokémon",L.WATER,L.PSYCHIC,2,79.5,O.OBLIVIOUS,O.OWN_TEMPO,O.REGENERATOR,490,95,75,80,100,110,30,70,50,172,P.MEDIUM_FAST,50,!1),new M(e.MISDREAVUS,2,!1,!1,!1,"Screech Pokémon",L.GHOST,null,.7,1,O.LEVITATE,O.NONE,O.NONE,435,60,60,60,85,85,85,45,35,87,P.FAST,50,!1),new M(e.UNOWN,2,!1,!1,!1,"Symbol Pokémon",L.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,P.MEDIUM_FAST,null,!1,!1,new F("A","a",L.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new F("B","b",L.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new F("C","c",L.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new F("D","d",L.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new F("E","e",L.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new F("F","f",L.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new F("G","g",L.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new F("H","h",L.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new F("I","i",L.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new F("J","j",L.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new F("K","k",L.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new F("L","l",L.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new F("M","m",L.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new F("N","n",L.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new F("O","o",L.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new F("P","p",L.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new F("Q","q",L.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new F("R","r",L.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new F("S","s",L.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new F("T","t",L.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new F("U","u",L.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new F("V","v",L.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new F("W","w",L.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new F("X","x",L.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new F("Y","y",L.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new F("Z","z",L.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new F("!","exclamation",L.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new F("?","question",L.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0)),new M(e.WOBBUFFET,2,!1,!1,!1,"Patient Pokémon",L.PSYCHIC,null,1.3,28.5,O.SHADOW_TAG,O.NONE,O.TELEPATHY,405,190,33,58,33,58,33,45,50,142,P.MEDIUM_FAST,50,!0),new M(e.GIRAFARIG,2,!1,!1,!1,"Long Neck Pokémon",L.NORMAL,L.PSYCHIC,1.5,41.5,O.INNER_FOCUS,O.EARLY_BIRD,O.SAP_SIPPER,455,70,80,65,90,65,85,60,70,159,P.MEDIUM_FAST,50,!0),new M(e.PINECO,2,!1,!1,!1,"Bagworm Pokémon",L.BUG,null,.6,7.2,O.STURDY,O.NONE,O.OVERCOAT,290,50,65,90,35,35,15,190,70,58,P.MEDIUM_FAST,50,!1),new M(e.FORRETRESS,2,!1,!1,!1,"Bagworm Pokémon",L.BUG,L.STEEL,1.2,125.8,O.STURDY,O.NONE,O.OVERCOAT,465,75,90,140,60,60,40,75,70,163,P.MEDIUM_FAST,50,!1),new M(e.DUNSPARCE,2,!1,!1,!1,"Land Snake Pokémon",L.NORMAL,null,1.5,14,O.SERENE_GRACE,O.RUN_AWAY,O.RATTLED,415,100,70,70,65,65,45,190,50,145,P.MEDIUM_FAST,50,!1),new M(e.GLIGAR,2,!1,!1,!1,"Fly Scorpion Pokémon",L.GROUND,L.FLYING,1.1,64.8,O.HYPER_CUTTER,O.SAND_VEIL,O.IMMUNITY,430,65,75,105,35,65,85,60,70,86,P.MEDIUM_SLOW,50,!0),new M(e.STEELIX,2,!1,!1,!1,"Iron Snake Pokémon",L.STEEL,L.GROUND,9.2,400,O.ROCK_HEAD,O.STURDY,O.SHEER_FORCE,510,75,85,200,55,65,30,25,50,179,P.MEDIUM_FAST,50,!0,!0,new F("Normal","",L.STEEL,L.GROUND,9.2,400,O.ROCK_HEAD,O.STURDY,O.SHEER_FORCE,510,75,85,200,55,65,30,25,50,179,!0,null,!0),new F("Mega",te.MEGA,L.STEEL,L.GROUND,10.5,740,O.SAND_FORCE,O.SAND_FORCE,O.SAND_FORCE,610,75,125,230,55,95,30,25,50,179,!0)),new M(e.SNUBBULL,2,!1,!1,!1,"Fairy Pokémon",L.FAIRY,null,.6,7.8,O.INTIMIDATE,O.RUN_AWAY,O.RATTLED,300,60,80,50,40,40,30,190,70,60,P.FAST,25,!1),new M(e.GRANBULL,2,!1,!1,!1,"Fairy Pokémon",L.FAIRY,null,1.4,48.7,O.INTIMIDATE,O.QUICK_FEET,O.RATTLED,450,90,120,75,60,60,45,75,70,158,P.FAST,25,!1),new M(e.QWILFISH,2,!1,!1,!1,"Balloon Pokémon",L.WATER,L.POISON,.5,3.9,O.POISON_POINT,O.SWIFT_SWIM,O.INTIMIDATE,440,65,95,85,55,55,85,45,50,88,P.MEDIUM_FAST,50,!1),new M(e.SCIZOR,2,!1,!1,!1,"Pincer Pokémon",L.BUG,L.STEEL,1.8,118,O.SWARM,O.TECHNICIAN,O.LIGHT_METAL,500,70,130,100,55,80,65,25,50,175,P.MEDIUM_FAST,50,!0,!0,new F("Normal","",L.BUG,L.STEEL,1.8,118,O.SWARM,O.TECHNICIAN,O.LIGHT_METAL,500,70,130,100,55,80,65,25,50,175,!0,null,!0),new F("Mega",te.MEGA,L.BUG,L.STEEL,2,125,O.TECHNICIAN,O.TECHNICIAN,O.TECHNICIAN,600,70,150,140,65,100,75,25,50,175,!0)),new M(e.SHUCKLE,2,!1,!1,!1,"Mold Pokémon",L.BUG,L.ROCK,.6,20.5,O.STURDY,O.GLUTTONY,O.CONTRARY,505,20,10,230,10,230,5,190,50,177,P.MEDIUM_SLOW,50,!1),new M(e.HERACROSS,2,!1,!1,!1,"Single Horn Pokémon",L.BUG,L.FIGHTING,1.5,54,O.SWARM,O.GUTS,O.MOXIE,500,80,125,75,40,95,85,45,50,175,P.SLOW,50,!0,!0,new F("Normal","",L.BUG,L.FIGHTING,1.5,54,O.SWARM,O.GUTS,O.MOXIE,500,80,125,75,40,95,85,45,50,175,!0,null,!0),new F("Mega",te.MEGA,L.BUG,L.FIGHTING,1.7,62.5,O.SKILL_LINK,O.SKILL_LINK,O.SKILL_LINK,600,80,185,115,40,105,75,45,50,175,!0)),new M(e.SNEASEL,2,!1,!1,!1,"Sharp Claw Pokémon",L.DARK,L.ICE,.9,28,O.INNER_FOCUS,O.KEEN_EYE,O.PICKPOCKET,430,55,95,55,35,75,115,60,35,86,P.MEDIUM_SLOW,50,!0),new M(e.TEDDIURSA,2,!1,!1,!1,"Little Bear Pokémon",L.NORMAL,null,.6,8.8,O.PICKUP,O.QUICK_FEET,O.HONEY_GATHER,330,60,80,50,50,50,40,120,70,66,P.MEDIUM_FAST,50,!1),new M(e.URSARING,2,!1,!1,!1,"Hibernator Pokémon",L.NORMAL,null,1.8,125.8,O.GUTS,O.QUICK_FEET,O.UNNERVE,500,90,130,75,75,75,55,60,70,175,P.MEDIUM_FAST,50,!0),new M(e.SLUGMA,2,!1,!1,!1,"Lava Pokémon",L.FIRE,null,.7,35,O.MAGMA_ARMOR,O.FLAME_BODY,O.WEAK_ARMOR,250,40,40,40,70,40,20,190,70,50,P.MEDIUM_FAST,50,!1),new M(e.MAGCARGO,2,!1,!1,!1,"Lava Pokémon",L.FIRE,L.ROCK,.8,55,O.MAGMA_ARMOR,O.FLAME_BODY,O.WEAK_ARMOR,430,60,50,120,90,80,30,75,70,151,P.MEDIUM_FAST,50,!1),new M(e.SWINUB,2,!1,!1,!1,"Pig Pokémon",L.ICE,L.GROUND,.4,6.5,O.OBLIVIOUS,O.SNOW_CLOAK,O.THICK_FAT,250,50,50,40,30,30,50,225,50,50,P.SLOW,50,!1),new M(e.PILOSWINE,2,!1,!1,!1,"Swine Pokémon",L.ICE,L.GROUND,1.1,55.8,O.OBLIVIOUS,O.SNOW_CLOAK,O.THICK_FAT,450,100,100,80,60,60,50,75,50,158,P.SLOW,50,!0),new M(e.CORSOLA,2,!1,!1,!1,"Coral Pokémon",L.WATER,L.ROCK,.6,5,O.HUSTLE,O.NATURAL_CURE,O.REGENERATOR,410,65,55,95,65,95,35,60,50,144,P.FAST,25,!1),new M(e.REMORAID,2,!1,!1,!1,"Jet Pokémon",L.WATER,null,.6,12,O.HUSTLE,O.SNIPER,O.MOODY,300,35,65,35,65,35,65,190,50,60,P.MEDIUM_FAST,50,!1),new M(e.OCTILLERY,2,!1,!1,!1,"Jet Pokémon",L.WATER,null,.9,28.5,O.SUCTION_CUPS,O.SNIPER,O.MOODY,480,75,105,75,105,75,45,75,50,168,P.MEDIUM_FAST,50,!0),new M(e.DELIBIRD,2,!1,!1,!1,"Delivery Pokémon",L.ICE,L.FLYING,.9,16,O.VITAL_SPIRIT,O.HUSTLE,O.INSOMNIA,330,45,55,45,65,45,75,45,50,116,P.FAST,50,!1),new M(e.MANTINE,2,!1,!1,!1,"Kite Pokémon",L.WATER,L.FLYING,2.1,220,O.SWIFT_SWIM,O.WATER_ABSORB,O.WATER_VEIL,485,85,40,70,80,140,70,25,50,170,P.SLOW,50,!1),new M(e.SKARMORY,2,!1,!1,!1,"Armor Bird Pokémon",L.STEEL,L.FLYING,1.7,50.5,O.KEEN_EYE,O.STURDY,O.WEAK_ARMOR,465,65,80,140,40,70,70,25,50,163,P.SLOW,50,!1),new M(e.HOUNDOUR,2,!1,!1,!1,"Dark Pokémon",L.DARK,L.FIRE,.6,10.8,O.EARLY_BIRD,O.FLASH_FIRE,O.UNNERVE,330,45,60,30,80,50,65,120,35,66,P.SLOW,50,!1),new M(e.HOUNDOOM,2,!1,!1,!1,"Dark Pokémon",L.DARK,L.FIRE,1.4,35,O.EARLY_BIRD,O.FLASH_FIRE,O.UNNERVE,500,75,90,50,110,80,95,45,35,175,P.SLOW,50,!0,!0,new F("Normal","",L.DARK,L.FIRE,1.4,35,O.EARLY_BIRD,O.FLASH_FIRE,O.UNNERVE,500,75,90,50,110,80,95,45,35,175,!0,null,!0),new F("Mega",te.MEGA,L.DARK,L.FIRE,1.9,49.5,O.SOLAR_POWER,O.SOLAR_POWER,O.SOLAR_POWER,600,75,90,90,140,90,115,45,35,175,!0)),new M(e.KINGDRA,2,!1,!1,!1,"Dragon Pokémon",L.WATER,L.DRAGON,1.8,152,O.SWIFT_SWIM,O.SNIPER,O.DAMP,540,75,95,95,95,95,85,45,50,270,P.MEDIUM_FAST,50,!1),new M(e.PHANPY,2,!1,!1,!1,"Long Nose Pokémon",L.GROUND,null,.5,33.5,O.PICKUP,O.NONE,O.SAND_VEIL,330,90,60,60,40,40,40,120,70,66,P.MEDIUM_FAST,50,!1),new M(e.DONPHAN,2,!1,!1,!1,"Armor Pokémon",L.GROUND,null,1.1,120,O.STURDY,O.NONE,O.SAND_VEIL,500,90,120,120,60,60,50,60,70,175,P.MEDIUM_FAST,50,!0),new M(e.PORYGON2,2,!1,!1,!1,"Virtual Pokémon",L.NORMAL,null,.6,32.5,O.TRACE,O.DOWNLOAD,O.ANALYTIC,515,85,80,90,105,95,60,45,50,180,P.MEDIUM_FAST,null,!1),new M(e.STANTLER,2,!1,!1,!1,"Big Horn Pokémon",L.NORMAL,null,1.4,71.2,O.INTIMIDATE,O.FRISK,O.SAP_SIPPER,465,73,95,62,85,65,85,45,70,163,P.SLOW,50,!1),new M(e.SMEARGLE,2,!1,!1,!1,"Painter Pokémon",L.NORMAL,null,1.2,58,O.OWN_TEMPO,O.TECHNICIAN,O.MOODY,250,55,20,35,20,45,75,45,70,88,P.FAST,50,!1),new M(e.TYROGUE,2,!1,!1,!1,"Scuffle Pokémon",L.FIGHTING,null,.7,21,O.GUTS,O.STEADFAST,O.VITAL_SPIRIT,210,35,35,35,35,35,35,75,50,42,P.MEDIUM_FAST,100,!1),new M(e.HITMONTOP,2,!1,!1,!1,"Handstand Pokémon",L.FIGHTING,null,1.4,48,O.INTIMIDATE,O.TECHNICIAN,O.STEADFAST,455,50,95,95,35,110,70,45,50,159,P.MEDIUM_FAST,100,!1),new M(e.SMOOCHUM,2,!1,!1,!1,"Kiss Pokémon",L.ICE,L.PSYCHIC,.4,6,O.OBLIVIOUS,O.FOREWARN,O.HYDRATION,305,45,30,15,85,65,65,45,50,61,P.MEDIUM_FAST,0,!1),new M(e.ELEKID,2,!1,!1,!1,"Electric Pokémon",L.ELECTRIC,null,.6,23.5,O.STATIC,O.NONE,O.VITAL_SPIRIT,360,45,63,37,65,55,95,45,50,72,P.MEDIUM_FAST,75,!1),new M(e.MAGBY,2,!1,!1,!1,"Live Coal Pokémon",L.FIRE,null,.7,21.4,O.FLAME_BODY,O.NONE,O.VITAL_SPIRIT,365,45,75,37,70,55,83,45,50,73,P.MEDIUM_FAST,75,!1),new M(e.MILTANK,2,!1,!1,!1,"Milk Cow Pokémon",L.NORMAL,null,1.2,75.5,O.THICK_FAT,O.SCRAPPY,O.SAP_SIPPER,490,95,80,105,40,70,100,45,50,172,P.SLOW,0,!1),new M(e.BLISSEY,2,!1,!1,!1,"Happiness Pokémon",L.NORMAL,null,1.5,46.8,O.NATURAL_CURE,O.SERENE_GRACE,O.HEALER,540,255,10,10,75,135,55,30,140,608,P.FAST,0,!1),new M(e.RAIKOU,2,!0,!1,!1,"Thunder Pokémon",L.ELECTRIC,null,1.9,178,O.PRESSURE,O.NONE,O.INNER_FOCUS,580,90,85,75,115,100,115,3,35,290,P.SLOW,null,!1),new M(e.ENTEI,2,!0,!1,!1,"Volcano Pokémon",L.FIRE,null,2.1,198,O.PRESSURE,O.NONE,O.INNER_FOCUS,580,115,115,85,90,75,100,3,35,290,P.SLOW,null,!1),new M(e.SUICUNE,2,!0,!1,!1,"Aurora Pokémon",L.WATER,null,2,187,O.PRESSURE,O.NONE,O.INNER_FOCUS,580,100,75,115,90,115,85,3,35,290,P.SLOW,null,!1),new M(e.LARVITAR,2,!1,!1,!1,"Rock Skin Pokémon",L.ROCK,L.GROUND,.6,72,O.GUTS,O.NONE,O.SAND_VEIL,300,50,64,50,45,50,41,45,35,60,P.SLOW,50,!1),new M(e.PUPITAR,2,!1,!1,!1,"Hard Shell Pokémon",L.ROCK,L.GROUND,1.2,152,O.SHED_SKIN,O.NONE,O.SHED_SKIN,410,70,84,70,65,70,51,45,35,144,P.SLOW,50,!1),new M(e.TYRANITAR,2,!1,!1,!1,"Armor Pokémon",L.ROCK,L.DARK,2,202,O.SAND_STREAM,O.NONE,O.UNNERVE,600,100,134,110,95,100,61,45,35,300,P.SLOW,50,!1,!0,new F("Normal","",L.ROCK,L.DARK,2,202,O.SAND_STREAM,O.NONE,O.UNNERVE,600,100,134,110,95,100,61,45,35,300,!1,null,!0),new F("Mega",te.MEGA,L.ROCK,L.DARK,2.5,255,O.SAND_STREAM,O.NONE,O.SAND_STREAM,700,100,164,150,95,120,71,45,35,300)),new M(e.LUGIA,2,!1,!0,!1,"Diving Pokémon",L.PSYCHIC,L.FLYING,5.2,216,O.PRESSURE,O.NONE,O.MULTISCALE,680,106,90,130,90,154,110,3,0,340,P.SLOW,null,!1),new M(e.HO_OH,2,!1,!0,!1,"Rainbow Pokémon",L.FIRE,L.FLYING,3.8,199,O.PRESSURE,O.NONE,O.REGENERATOR,680,106,130,90,110,154,90,3,0,340,P.SLOW,null,!1),new M(e.CELEBI,2,!1,!1,!0,"Time Travel Pokémon",L.PSYCHIC,L.GRASS,.6,5,O.NATURAL_CURE,O.NONE,O.NONE,600,100,100,100,100,100,100,45,100,300,P.MEDIUM_SLOW,null,!1),new M(e.TREECKO,3,!1,!1,!1,"Wood Gecko Pokémon",L.GRASS,null,.5,5,O.OVERGROW,O.NONE,O.UNBURDEN,310,40,45,35,65,55,70,45,50,62,P.MEDIUM_SLOW,87.5,!1),new M(e.GROVYLE,3,!1,!1,!1,"Wood Gecko Pokémon",L.GRASS,null,.9,21.6,O.OVERGROW,O.NONE,O.UNBURDEN,405,50,65,45,85,65,95,45,50,142,P.MEDIUM_SLOW,87.5,!1),new M(e.SCEPTILE,3,!1,!1,!1,"Forest Pokémon",L.GRASS,null,1.7,52.2,O.OVERGROW,O.NONE,O.UNBURDEN,530,70,85,65,105,85,120,45,50,265,P.MEDIUM_SLOW,87.5,!1,!0,new F("Normal","",L.GRASS,null,1.7,52.2,O.OVERGROW,O.NONE,O.UNBURDEN,530,70,85,65,105,85,120,45,50,265,!1,null,!0),new F("Mega",te.MEGA,L.GRASS,L.DRAGON,1.9,55.2,O.LIGHTNING_ROD,O.NONE,O.LIGHTNING_ROD,630,70,110,75,145,85,145,45,50,265)),new M(e.TORCHIC,3,!1,!1,!1,"Chick Pokémon",L.FIRE,null,.4,2.5,O.BLAZE,O.NONE,O.SPEED_BOOST,310,45,60,40,70,50,45,45,50,62,P.MEDIUM_SLOW,87.5,!0),new M(e.COMBUSKEN,3,!1,!1,!1,"Young Fowl Pokémon",L.FIRE,L.FIGHTING,.9,19.5,O.BLAZE,O.NONE,O.SPEED_BOOST,405,60,85,60,85,60,55,45,50,142,P.MEDIUM_SLOW,87.5,!0),new M(e.BLAZIKEN,3,!1,!1,!1,"Blaze Pokémon",L.FIRE,L.FIGHTING,1.9,52,O.BLAZE,O.NONE,O.SPEED_BOOST,530,80,120,70,110,70,80,45,50,265,P.MEDIUM_SLOW,87.5,!0,!0,new F("Normal","",L.FIRE,L.FIGHTING,1.9,52,O.BLAZE,O.NONE,O.SPEED_BOOST,530,80,120,70,110,70,80,45,50,265,!0,null,!0),new F("Mega",te.MEGA,L.FIRE,L.FIGHTING,1.9,52,O.SPEED_BOOST,O.NONE,O.SPEED_BOOST,630,80,160,80,130,80,100,45,50,265,!0)),new M(e.MUDKIP,3,!1,!1,!1,"Mud Fish Pokémon",L.WATER,null,.4,7.6,O.TORRENT,O.NONE,O.DAMP,310,50,70,50,50,50,40,45,50,62,P.MEDIUM_SLOW,87.5,!1),new M(e.MARSHTOMP,3,!1,!1,!1,"Mud Fish Pokémon",L.WATER,L.GROUND,.7,28,O.TORRENT,O.NONE,O.DAMP,405,70,85,70,60,70,50,45,50,142,P.MEDIUM_SLOW,87.5,!1),new M(e.SWAMPERT,3,!1,!1,!1,"Mud Fish Pokémon",L.WATER,L.GROUND,1.5,81.9,O.TORRENT,O.NONE,O.DAMP,535,100,110,90,85,90,60,45,50,268,P.MEDIUM_SLOW,87.5,!1,!0,new F("Normal","",L.WATER,L.GROUND,1.5,81.9,O.TORRENT,O.NONE,O.DAMP,535,100,110,90,85,90,60,45,50,268,!1,null,!0),new F("Mega",te.MEGA,L.WATER,L.GROUND,1.9,102,O.SWIFT_SWIM,O.NONE,O.SWIFT_SWIM,635,100,150,110,95,110,70,45,50,268)),new M(e.POOCHYENA,3,!1,!1,!1,"Bite Pokémon",L.DARK,null,.5,13.6,O.RUN_AWAY,O.QUICK_FEET,O.RATTLED,220,35,55,35,30,30,35,255,70,56,P.MEDIUM_FAST,50,!1),new M(e.MIGHTYENA,3,!1,!1,!1,"Bite Pokémon",L.DARK,null,1,37,O.INTIMIDATE,O.QUICK_FEET,O.MOXIE,420,70,90,70,60,60,70,127,70,147,P.MEDIUM_FAST,50,!1),new M(e.ZIGZAGOON,3,!1,!1,!1,"Tiny Raccoon Pokémon",L.NORMAL,null,.4,17.5,O.PICKUP,O.GLUTTONY,O.QUICK_FEET,240,38,30,41,30,41,60,255,50,56,P.MEDIUM_FAST,50,!1),new M(e.LINOONE,3,!1,!1,!1,"Rushing Pokémon",L.NORMAL,null,.5,32.5,O.PICKUP,O.GLUTTONY,O.QUICK_FEET,420,78,70,61,50,61,100,90,50,147,P.MEDIUM_FAST,50,!1),new M(e.WURMPLE,3,!1,!1,!1,"Worm Pokémon",L.BUG,null,.3,3.6,O.SHIELD_DUST,O.NONE,O.RUN_AWAY,195,45,45,35,20,30,20,255,70,56,P.MEDIUM_FAST,50,!1),new M(e.SILCOON,3,!1,!1,!1,"Cocoon Pokémon",L.BUG,null,.6,10,O.SHED_SKIN,O.NONE,O.SHED_SKIN,205,50,35,55,25,25,15,120,70,72,P.MEDIUM_FAST,50,!1),new M(e.BEAUTIFLY,3,!1,!1,!1,"Butterfly Pokémon",L.BUG,L.FLYING,1,28.4,O.SWARM,O.NONE,O.RIVALRY,395,60,70,50,100,50,65,45,70,198,P.MEDIUM_FAST,50,!0),new M(e.CASCOON,3,!1,!1,!1,"Cocoon Pokémon",L.BUG,null,.7,11.5,O.SHED_SKIN,O.NONE,O.SHED_SKIN,205,50,35,55,25,25,15,120,70,72,P.MEDIUM_FAST,50,!1),new M(e.DUSTOX,3,!1,!1,!1,"Poison Moth Pokémon",L.BUG,L.POISON,1.2,31.6,O.SHIELD_DUST,O.NONE,O.COMPOUND_EYES,385,60,50,70,50,90,65,45,70,193,P.MEDIUM_FAST,50,!0),new M(e.LOTAD,3,!1,!1,!1,"Water Weed Pokémon",L.WATER,L.GRASS,.5,2.6,O.SWIFT_SWIM,O.RAIN_DISH,O.OWN_TEMPO,220,40,30,30,40,50,30,255,50,44,P.MEDIUM_SLOW,50,!1),new M(e.LOMBRE,3,!1,!1,!1,"Jolly Pokémon",L.WATER,L.GRASS,1.2,32.5,O.SWIFT_SWIM,O.RAIN_DISH,O.OWN_TEMPO,340,60,50,50,60,70,50,120,50,119,P.MEDIUM_SLOW,50,!1),new M(e.LUDICOLO,3,!1,!1,!1,"Carefree Pokémon",L.WATER,L.GRASS,1.5,55,O.SWIFT_SWIM,O.RAIN_DISH,O.OWN_TEMPO,480,80,70,70,90,100,70,45,50,240,P.MEDIUM_SLOW,50,!0),new M(e.SEEDOT,3,!1,!1,!1,"Acorn Pokémon",L.GRASS,null,.5,4,O.CHLOROPHYLL,O.EARLY_BIRD,O.PICKPOCKET,220,40,40,50,30,30,30,255,50,44,P.MEDIUM_SLOW,50,!1),new M(e.NUZLEAF,3,!1,!1,!1,"Wily Pokémon",L.GRASS,L.DARK,1,28,O.CHLOROPHYLL,O.EARLY_BIRD,O.PICKPOCKET,340,70,70,40,60,40,60,120,50,119,P.MEDIUM_SLOW,50,!0),new M(e.SHIFTRY,3,!1,!1,!1,"Wicked Pokémon",L.GRASS,L.DARK,1.3,59.6,O.CHLOROPHYLL,O.WIND_RIDER,O.PICKPOCKET,480,90,100,60,90,60,80,45,50,240,P.MEDIUM_SLOW,50,!0),new M(e.TAILLOW,3,!1,!1,!1,"Tiny Swallow Pokémon",L.NORMAL,L.FLYING,.3,2.3,O.GUTS,O.NONE,O.SCRAPPY,270,40,55,30,30,30,85,200,70,54,P.MEDIUM_SLOW,50,!1),new M(e.SWELLOW,3,!1,!1,!1,"Swallow Pokémon",L.NORMAL,L.FLYING,.7,19.8,O.GUTS,O.NONE,O.SCRAPPY,455,60,85,60,75,50,125,45,70,159,P.MEDIUM_SLOW,50,!1),new M(e.WINGULL,3,!1,!1,!1,"Seagull Pokémon",L.WATER,L.FLYING,.6,9.5,O.KEEN_EYE,O.HYDRATION,O.RAIN_DISH,270,40,30,30,55,30,85,190,50,54,P.MEDIUM_FAST,50,!1),new M(e.PELIPPER,3,!1,!1,!1,"Water Bird Pokémon",L.WATER,L.FLYING,1.2,28,O.KEEN_EYE,O.DRIZZLE,O.RAIN_DISH,440,60,50,100,95,70,65,45,50,154,P.MEDIUM_FAST,50,!1),new M(e.RALTS,3,!1,!1,!1,"Feeling Pokémon",L.PSYCHIC,L.FAIRY,.4,6.6,O.SYNCHRONIZE,O.TRACE,O.TELEPATHY,198,28,25,25,45,35,40,235,35,40,P.SLOW,50,!1),new M(e.KIRLIA,3,!1,!1,!1,"Emotion Pokémon",L.PSYCHIC,L.FAIRY,.8,20.2,O.SYNCHRONIZE,O.TRACE,O.TELEPATHY,278,38,35,35,65,55,50,120,35,97,P.SLOW,50,!1),new M(e.GARDEVOIR,3,!1,!1,!1,"Embrace Pokémon",L.PSYCHIC,L.FAIRY,1.6,48.4,O.SYNCHRONIZE,O.TRACE,O.TELEPATHY,518,68,65,65,125,115,80,45,35,259,P.SLOW,50,!1,!0,new F("Normal","",L.PSYCHIC,L.FAIRY,1.6,48.4,O.SYNCHRONIZE,O.TRACE,O.TELEPATHY,518,68,65,65,125,115,80,45,35,259,!1,null,!0),new F("Mega",te.MEGA,L.PSYCHIC,L.FAIRY,1.6,48.4,O.PIXILATE,O.PIXILATE,O.PIXILATE,618,68,85,65,165,135,100,45,35,259)),new M(e.SURSKIT,3,!1,!1,!1,"Pond Skater Pokémon",L.BUG,L.WATER,.5,1.7,O.SWIFT_SWIM,O.NONE,O.RAIN_DISH,269,40,30,32,50,52,65,200,70,54,P.MEDIUM_FAST,50,!1),new M(e.MASQUERAIN,3,!1,!1,!1,"Eyeball Pokémon",L.BUG,L.FLYING,.8,3.6,O.INTIMIDATE,O.NONE,O.UNNERVE,454,70,60,62,100,82,80,75,70,159,P.MEDIUM_FAST,50,!1),new M(e.SHROOMISH,3,!1,!1,!1,"Mushroom Pokémon",L.GRASS,null,.4,4.5,O.EFFECT_SPORE,O.POISON_HEAL,O.QUICK_FEET,295,60,40,60,40,60,35,255,70,59,P.FLUCTUATING,50,!1),new M(e.BRELOOM,3,!1,!1,!1,"Mushroom Pokémon",L.GRASS,L.FIGHTING,1.2,39.2,O.EFFECT_SPORE,O.POISON_HEAL,O.TECHNICIAN,460,60,130,80,60,60,70,90,70,161,P.FLUCTUATING,50,!1),new M(e.SLAKOTH,3,!1,!1,!1,"Slacker Pokémon",L.NORMAL,null,.8,24,O.TRUANT,O.NONE,O.STALL,280,60,60,60,35,35,30,255,70,56,P.SLOW,50,!1),new M(e.VIGOROTH,3,!1,!1,!1,"Wild Monkey Pokémon",L.NORMAL,null,1.4,46.5,O.VITAL_SPIRIT,O.NONE,O.INSOMNIA,440,80,80,80,55,55,90,120,70,154,P.SLOW,50,!1),new M(e.SLAKING,3,!1,!1,!1,"Lazy Pokémon",L.NORMAL,null,2,130.5,O.TRUANT,O.NONE,O.STALL,670,150,160,100,95,65,100,45,70,285,P.SLOW,50,!1),new M(e.NINCADA,3,!1,!1,!1,"Trainee Pokémon",L.BUG,L.GROUND,.5,5.5,O.COMPOUND_EYES,O.NONE,O.RUN_AWAY,266,31,45,90,30,30,40,255,50,53,P.ERRATIC,50,!1),new M(e.NINJASK,3,!1,!1,!1,"Ninja Pokémon",L.BUG,L.FLYING,.8,12,O.SPEED_BOOST,O.NONE,O.INFILTRATOR,456,61,90,45,50,50,160,120,50,160,P.ERRATIC,50,!1),new M(e.SHEDINJA,3,!1,!1,!1,"Shed Pokémon",L.BUG,L.GHOST,.8,1.2,O.WONDER_GUARD,O.NONE,O.NONE,236,1,90,45,30,30,40,45,50,83,P.ERRATIC,null,!1),new M(e.WHISMUR,3,!1,!1,!1,"Whisper Pokémon",L.NORMAL,null,.6,16.3,O.SOUNDPROOF,O.NONE,O.RATTLED,240,64,51,23,51,23,28,190,50,48,P.MEDIUM_SLOW,50,!1),new M(e.LOUDRED,3,!1,!1,!1,"Big Voice Pokémon",L.NORMAL,null,1,40.5,O.SOUNDPROOF,O.NONE,O.SCRAPPY,360,84,71,43,71,43,48,120,50,126,P.MEDIUM_SLOW,50,!1),new M(e.EXPLOUD,3,!1,!1,!1,"Loud Noise Pokémon",L.NORMAL,null,1.5,84,O.SOUNDPROOF,O.NONE,O.SCRAPPY,490,104,91,63,91,73,68,45,50,245,P.MEDIUM_SLOW,50,!1),new M(e.MAKUHITA,3,!1,!1,!1,"Guts Pokémon",L.FIGHTING,null,1,86.4,O.THICK_FAT,O.GUTS,O.SHEER_FORCE,237,72,60,30,20,30,25,180,70,47,P.FLUCTUATING,75,!1),new M(e.HARIYAMA,3,!1,!1,!1,"Arm Thrust Pokémon",L.FIGHTING,null,2.3,253.8,O.THICK_FAT,O.GUTS,O.SHEER_FORCE,474,144,120,60,40,60,50,200,70,166,P.FLUCTUATING,75,!1),new M(e.AZURILL,3,!1,!1,!1,"Polka Dot Pokémon",L.NORMAL,L.FAIRY,.2,2,O.THICK_FAT,O.HUGE_POWER,O.SAP_SIPPER,190,50,20,40,20,40,20,150,50,38,P.FAST,25,!1),new M(e.NOSEPASS,3,!1,!1,!1,"Compass Pokémon",L.ROCK,null,1,97,O.STURDY,O.MAGNET_PULL,O.SAND_FORCE,375,30,45,135,45,90,30,255,70,75,P.MEDIUM_FAST,50,!1),new M(e.SKITTY,3,!1,!1,!1,"Kitten Pokémon",L.NORMAL,null,.6,11,O.CUTE_CHARM,O.NORMALIZE,O.WONDER_SKIN,260,50,45,45,35,35,50,255,70,52,P.FAST,25,!1),new M(e.DELCATTY,3,!1,!1,!1,"Prim Pokémon",L.NORMAL,null,1.1,32.6,O.CUTE_CHARM,O.NORMALIZE,O.WONDER_SKIN,400,70,65,65,55,55,90,60,70,140,P.FAST,25,!1),new M(e.SABLEYE,3,!1,!1,!1,"Darkness Pokémon",L.DARK,L.GHOST,.5,11,O.KEEN_EYE,O.STALL,O.PRANKSTER,380,50,75,75,65,65,50,45,35,133,P.MEDIUM_SLOW,50,!1,!0,new F("Normal","",L.DARK,L.GHOST,.5,11,O.KEEN_EYE,O.STALL,O.PRANKSTER,380,50,75,75,65,65,50,45,35,133,!1,null,!0),new F("Mega",te.MEGA,L.DARK,L.GHOST,.5,161,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,480,50,85,125,85,115,20,45,35,133)),new M(e.MAWILE,3,!1,!1,!1,"Deceiver Pokémon",L.STEEL,L.FAIRY,.6,11.5,O.HYPER_CUTTER,O.INTIMIDATE,O.SHEER_FORCE,380,50,85,85,55,55,50,45,50,133,P.FAST,50,!1,!0,new F("Normal","",L.STEEL,L.FAIRY,.6,11.5,O.HYPER_CUTTER,O.INTIMIDATE,O.SHEER_FORCE,380,50,85,85,55,55,50,45,50,133,!1,null,!0),new F("Mega",te.MEGA,L.STEEL,L.FAIRY,1,23.5,O.HUGE_POWER,O.HUGE_POWER,O.HUGE_POWER,480,50,105,125,55,95,50,45,50,133)),new M(e.ARON,3,!1,!1,!1,"Iron Armor Pokémon",L.STEEL,L.ROCK,.4,60,O.STURDY,O.ROCK_HEAD,O.HEAVY_METAL,330,50,70,100,40,40,30,180,35,66,P.SLOW,50,!1),new M(e.LAIRON,3,!1,!1,!1,"Iron Armor Pokémon",L.STEEL,L.ROCK,.9,120,O.STURDY,O.ROCK_HEAD,O.HEAVY_METAL,430,60,90,140,50,50,40,90,35,151,P.SLOW,50,!1),new M(e.AGGRON,3,!1,!1,!1,"Iron Armor Pokémon",L.STEEL,L.ROCK,2.1,360,O.STURDY,O.ROCK_HEAD,O.HEAVY_METAL,530,70,110,180,60,60,50,45,35,265,P.SLOW,50,!1,!0,new F("Normal","",L.STEEL,L.ROCK,2.1,360,O.STURDY,O.ROCK_HEAD,O.HEAVY_METAL,530,70,110,180,60,60,50,45,35,265,!1,null,!0),new F("Mega",te.MEGA,L.STEEL,null,2.2,395,O.FILTER,O.FILTER,O.FILTER,630,70,140,230,60,80,50,45,35,265)),new M(e.MEDITITE,3,!1,!1,!1,"Meditate Pokémon",L.FIGHTING,L.PSYCHIC,.6,11.2,O.PURE_POWER,O.NONE,O.TELEPATHY,280,30,40,55,40,55,60,180,70,56,P.MEDIUM_FAST,50,!0),new M(e.MEDICHAM,3,!1,!1,!1,"Meditate Pokémon",L.FIGHTING,L.PSYCHIC,1.3,31.5,O.PURE_POWER,O.NONE,O.TELEPATHY,410,60,60,75,60,75,80,90,70,144,P.MEDIUM_FAST,50,!0,!0,new F("Normal","",L.FIGHTING,L.PSYCHIC,1.3,31.5,O.PURE_POWER,O.NONE,O.TELEPATHY,410,60,60,75,60,75,80,90,70,144,!0,null,!0),new F("Mega",te.MEGA,L.FIGHTING,L.PSYCHIC,1.3,31.5,O.PURE_POWER,O.NONE,O.PURE_POWER,510,60,100,85,80,85,100,90,70,144,!0)),new M(e.ELECTRIKE,3,!1,!1,!1,"Lightning Pokémon",L.ELECTRIC,null,.6,15.2,O.STATIC,O.LIGHTNING_ROD,O.MINUS,295,40,45,40,65,40,65,120,50,59,P.SLOW,50,!1),new M(e.MANECTRIC,3,!1,!1,!1,"Discharge Pokémon",L.ELECTRIC,null,1.5,40.2,O.STATIC,O.LIGHTNING_ROD,O.MINUS,475,70,75,60,105,60,105,45,50,166,P.SLOW,50,!1,!0,new F("Normal","",L.ELECTRIC,null,1.5,40.2,O.STATIC,O.LIGHTNING_ROD,O.MINUS,475,70,75,60,105,60,105,45,50,166,!1,null,!0),new F("Mega",te.MEGA,L.ELECTRIC,null,1.8,44,O.INTIMIDATE,O.INTIMIDATE,O.INTIMIDATE,575,70,75,80,135,80,135,45,50,166)),new M(e.PLUSLE,3,!1,!1,!1,"Cheering Pokémon",L.ELECTRIC,null,.4,4.2,O.PLUS,O.NONE,O.LIGHTNING_ROD,405,60,50,40,85,75,95,200,70,142,P.MEDIUM_FAST,50,!1),new M(e.MINUN,3,!1,!1,!1,"Cheering Pokémon",L.ELECTRIC,null,.4,4.2,O.MINUS,O.NONE,O.VOLT_ABSORB,405,60,40,50,75,85,95,200,70,142,P.MEDIUM_FAST,50,!1),new M(e.VOLBEAT,3,!1,!1,!1,"Firefly Pokémon",L.BUG,null,.7,17.7,O.ILLUMINATE,O.SWARM,O.PRANKSTER,430,65,73,75,47,85,85,150,70,151,P.ERRATIC,100,!1),new M(e.ILLUMISE,3,!1,!1,!1,"Firefly Pokémon",L.BUG,null,.6,17.7,O.OBLIVIOUS,O.TINTED_LENS,O.PRANKSTER,430,65,47,75,73,85,85,150,70,151,P.FLUCTUATING,0,!1),new M(e.ROSELIA,3,!1,!1,!1,"Thorn Pokémon",L.GRASS,L.POISON,.3,2,O.NATURAL_CURE,O.POISON_POINT,O.LEAF_GUARD,400,50,60,45,100,80,65,150,50,140,P.MEDIUM_SLOW,50,!0),new M(e.GULPIN,3,!1,!1,!1,"Stomach Pokémon",L.POISON,null,.4,10.3,O.LIQUID_OOZE,O.STICKY_HOLD,O.GLUTTONY,302,70,43,53,43,53,40,225,70,60,P.FLUCTUATING,50,!0),new M(e.SWALOT,3,!1,!1,!1,"Poison Bag Pokémon",L.POISON,null,1.7,80,O.LIQUID_OOZE,O.STICKY_HOLD,O.GLUTTONY,467,100,73,83,73,83,55,75,70,163,P.FLUCTUATING,50,!0),new M(e.CARVANHA,3,!1,!1,!1,"Savage Pokémon",L.WATER,L.DARK,.8,20.8,O.ROUGH_SKIN,O.NONE,O.SPEED_BOOST,305,45,90,20,65,20,65,225,35,61,P.SLOW,50,!1),new M(e.SHARPEDO,3,!1,!1,!1,"Brutal Pokémon",L.WATER,L.DARK,1.8,88.8,O.ROUGH_SKIN,O.NONE,O.SPEED_BOOST,460,70,120,40,95,40,95,60,35,161,P.SLOW,50,!1,!0,new F("Normal","",L.WATER,L.DARK,1.8,88.8,O.ROUGH_SKIN,O.NONE,O.SPEED_BOOST,460,70,120,40,95,40,95,60,35,161,!1,null,!0),new F("Mega",te.MEGA,L.WATER,L.DARK,2.5,130.3,O.STRONG_JAW,O.NONE,O.STRONG_JAW,560,70,140,70,110,65,105,60,35,161)),new M(e.WAILMER,3,!1,!1,!1,"Ball Whale Pokémon",L.WATER,null,2,130,O.WATER_VEIL,O.OBLIVIOUS,O.PRESSURE,400,130,70,35,70,35,60,125,50,80,P.FLUCTUATING,50,!1),new M(e.WAILORD,3,!1,!1,!1,"Float Whale Pokémon",L.WATER,null,14.5,398,O.WATER_VEIL,O.OBLIVIOUS,O.PRESSURE,500,170,90,45,90,45,60,60,50,175,P.FLUCTUATING,50,!1),new M(e.NUMEL,3,!1,!1,!1,"Numb Pokémon",L.FIRE,L.GROUND,.7,24,O.OBLIVIOUS,O.SIMPLE,O.OWN_TEMPO,305,60,60,40,65,45,35,255,70,61,P.MEDIUM_FAST,50,!0),new M(e.CAMERUPT,3,!1,!1,!1,"Eruption Pokémon",L.FIRE,L.GROUND,1.9,220,O.MAGMA_ARMOR,O.SOLID_ROCK,O.ANGER_POINT,460,70,100,70,105,75,40,150,70,161,P.MEDIUM_FAST,50,!0,!0,new F("Normal","",L.FIRE,L.GROUND,1.9,220,O.MAGMA_ARMOR,O.SOLID_ROCK,O.ANGER_POINT,460,70,100,70,105,75,40,150,70,161,!0,null,!0),new F("Mega",te.MEGA,L.FIRE,L.GROUND,2.5,320.5,O.SHEER_FORCE,O.SHEER_FORCE,O.SHEER_FORCE,560,70,120,100,145,105,20,150,70,161)),new M(e.TORKOAL,3,!1,!1,!1,"Coal Pokémon",L.FIRE,null,.5,80.4,O.WHITE_SMOKE,O.DROUGHT,O.SHELL_ARMOR,470,70,85,140,85,70,20,90,50,165,P.MEDIUM_FAST,50,!1),new M(e.SPOINK,3,!1,!1,!1,"Bounce Pokémon",L.PSYCHIC,null,.7,30.6,O.THICK_FAT,O.OWN_TEMPO,O.GLUTTONY,330,60,25,35,70,80,60,255,70,66,P.FAST,50,!1),new M(e.GRUMPIG,3,!1,!1,!1,"Manipulate Pokémon",L.PSYCHIC,null,.9,71.5,O.THICK_FAT,O.OWN_TEMPO,O.GLUTTONY,470,80,45,65,90,110,80,60,70,165,P.FAST,50,!1),new M(e.SPINDA,3,!1,!1,!1,"Spot Panda Pokémon",L.NORMAL,null,1.1,5,O.OWN_TEMPO,O.TANGLED_FEET,O.CONTRARY,360,60,60,60,60,60,60,255,70,126,P.FAST,50,!1),new M(e.TRAPINCH,3,!1,!1,!1,"Ant Pit Pokémon",L.GROUND,null,.7,15,O.HYPER_CUTTER,O.ARENA_TRAP,O.SHEER_FORCE,290,45,100,45,45,45,10,255,50,58,P.MEDIUM_SLOW,50,!1),new M(e.VIBRAVA,3,!1,!1,!1,"Vibration Pokémon",L.GROUND,L.DRAGON,1.1,15.3,O.LEVITATE,O.NONE,O.NONE,340,50,70,50,50,50,70,120,50,119,P.MEDIUM_SLOW,50,!1),new M(e.FLYGON,3,!1,!1,!1,"Mystic Pokémon",L.GROUND,L.DRAGON,2,82,O.LEVITATE,O.NONE,O.NONE,520,80,100,80,80,80,100,45,50,260,P.MEDIUM_SLOW,50,!1),new M(e.CACNEA,3,!1,!1,!1,"Cactus Pokémon",L.GRASS,null,.4,51.3,O.SAND_VEIL,O.NONE,O.WATER_ABSORB,335,50,85,40,85,40,35,190,35,67,P.MEDIUM_SLOW,50,!1),new M(e.CACTURNE,3,!1,!1,!1,"Scarecrow Pokémon",L.GRASS,L.DARK,1.3,77.4,O.SAND_VEIL,O.NONE,O.WATER_ABSORB,475,70,115,60,115,60,55,60,35,166,P.MEDIUM_SLOW,50,!0),new M(e.SWABLU,3,!1,!1,!1,"Cotton Bird Pokémon",L.NORMAL,L.FLYING,.4,1.2,O.NATURAL_CURE,O.NONE,O.CLOUD_NINE,310,45,40,60,40,75,50,255,50,62,P.ERRATIC,50,!1),new M(e.ALTARIA,3,!1,!1,!1,"Humming Pokémon",L.DRAGON,L.FLYING,1.1,20.6,O.NATURAL_CURE,O.NONE,O.CLOUD_NINE,490,75,70,90,70,105,80,45,50,172,P.ERRATIC,50,!1,!0,new F("Normal","",L.DRAGON,L.FLYING,1.1,20.6,O.NATURAL_CURE,O.NONE,O.CLOUD_NINE,490,75,70,90,70,105,80,45,50,172,!1,null,!0),new F("Mega",te.MEGA,L.DRAGON,L.FAIRY,1.5,20.6,O.PIXILATE,O.NONE,O.PIXILATE,590,75,110,110,110,105,80,45,50,172)),new M(e.ZANGOOSE,3,!1,!1,!1,"Cat Ferret Pokémon",L.NORMAL,null,1.3,40.3,O.IMMUNITY,O.NONE,O.TOXIC_BOOST,458,73,115,60,60,60,90,90,70,160,P.ERRATIC,50,!1),new M(e.SEVIPER,3,!1,!1,!1,"Fang Snake Pokémon",L.POISON,null,2.7,52.5,O.SHED_SKIN,O.NONE,O.INFILTRATOR,458,73,100,60,100,60,65,90,70,160,P.FLUCTUATING,50,!1),new M(e.LUNATONE,3,!1,!1,!1,"Meteorite Pokémon",L.ROCK,L.PSYCHIC,1,168,O.LEVITATE,O.NONE,O.NONE,460,90,55,65,95,85,70,45,50,161,P.FAST,null,!1),new M(e.SOLROCK,3,!1,!1,!1,"Meteorite Pokémon",L.ROCK,L.PSYCHIC,1.2,154,O.LEVITATE,O.NONE,O.NONE,460,90,95,85,55,65,70,45,50,161,P.FAST,null,!1),new M(e.BARBOACH,3,!1,!1,!1,"Whiskers Pokémon",L.WATER,L.GROUND,.4,1.9,O.OBLIVIOUS,O.ANTICIPATION,O.HYDRATION,288,50,48,43,46,41,60,190,50,58,P.MEDIUM_FAST,50,!1),new M(e.WHISCASH,3,!1,!1,!1,"Whiskers Pokémon",L.WATER,L.GROUND,.9,23.6,O.OBLIVIOUS,O.ANTICIPATION,O.HYDRATION,468,110,78,73,76,71,60,75,50,164,P.MEDIUM_FAST,50,!1),new M(e.CORPHISH,3,!1,!1,!1,"Ruffian Pokémon",L.WATER,null,.6,11.5,O.HYPER_CUTTER,O.SHELL_ARMOR,O.ADAPTABILITY,308,43,80,65,50,35,35,205,50,62,P.FLUCTUATING,50,!1),new M(e.CRAWDAUNT,3,!1,!1,!1,"Rogue Pokémon",L.WATER,L.DARK,1.1,32.8,O.HYPER_CUTTER,O.SHELL_ARMOR,O.ADAPTABILITY,468,63,120,85,90,55,55,155,50,164,P.FLUCTUATING,50,!1),new M(e.BALTOY,3,!1,!1,!1,"Clay Doll Pokémon",L.GROUND,L.PSYCHIC,.5,21.5,O.LEVITATE,O.NONE,O.NONE,300,40,40,55,40,70,55,255,50,60,P.MEDIUM_FAST,null,!1),new M(e.CLAYDOL,3,!1,!1,!1,"Clay Doll Pokémon",L.GROUND,L.PSYCHIC,1.5,108,O.LEVITATE,O.NONE,O.NONE,500,60,70,105,70,120,75,90,50,175,P.MEDIUM_FAST,null,!1),new M(e.LILEEP,3,!1,!1,!1,"Sea Lily Pokémon",L.ROCK,L.GRASS,1,23.8,O.SUCTION_CUPS,O.NONE,O.STORM_DRAIN,355,66,41,77,61,87,23,45,50,71,P.ERRATIC,87.5,!1),new M(e.CRADILY,3,!1,!1,!1,"Barnacle Pokémon",L.ROCK,L.GRASS,1.5,60.4,O.SUCTION_CUPS,O.NONE,O.STORM_DRAIN,495,86,81,97,81,107,43,45,50,173,P.ERRATIC,87.5,!1),new M(e.ANORITH,3,!1,!1,!1,"Old Shrimp Pokémon",L.ROCK,L.BUG,.7,12.5,O.BATTLE_ARMOR,O.NONE,O.SWIFT_SWIM,355,45,95,50,40,50,75,45,50,71,P.ERRATIC,87.5,!1),new M(e.ARMALDO,3,!1,!1,!1,"Plate Pokémon",L.ROCK,L.BUG,1.5,68.2,O.BATTLE_ARMOR,O.NONE,O.SWIFT_SWIM,495,75,125,100,70,80,45,45,50,173,P.ERRATIC,87.5,!1),new M(e.FEEBAS,3,!1,!1,!1,"Fish Pokémon",L.WATER,null,.6,7.4,O.SWIFT_SWIM,O.OBLIVIOUS,O.ADAPTABILITY,200,20,15,20,10,55,80,255,50,40,P.ERRATIC,50,!1),new M(e.MILOTIC,3,!1,!1,!1,"Tender Pokémon",L.WATER,null,6.2,162,O.MARVEL_SCALE,O.COMPETITIVE,O.CUTE_CHARM,540,95,60,79,100,125,81,60,50,189,P.ERRATIC,50,!0),new M(e.CASTFORM,3,!1,!1,!1,"Weather Pokémon",L.NORMAL,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147,P.MEDIUM_FAST,50,!1,!0,new F("Normal Form","",L.NORMAL,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147,!1,null,!0),new F("Sunny Form","sunny",L.FIRE,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147),new F("Rainy Form","rainy",L.WATER,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147),new F("Snowy Form","snowy",L.ICE,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147)),new M(e.KECLEON,3,!1,!1,!1,"Color Swap Pokémon",L.NORMAL,null,1,22,O.COLOR_CHANGE,O.NONE,O.PROTEAN,440,60,90,70,60,120,40,200,70,154,P.MEDIUM_SLOW,50,!1),new M(e.SHUPPET,3,!1,!1,!1,"Puppet Pokémon",L.GHOST,null,.6,2.3,O.INSOMNIA,O.FRISK,O.CURSED_BODY,295,44,75,35,63,33,45,225,35,59,P.FAST,50,!1),new M(e.BANETTE,3,!1,!1,!1,"Marionette Pokémon",L.GHOST,null,1.1,12.5,O.INSOMNIA,O.FRISK,O.CURSED_BODY,455,64,115,65,83,63,65,45,35,159,P.FAST,50,!1,!0,new F("Normal","",L.GHOST,null,1.1,12.5,O.INSOMNIA,O.FRISK,O.CURSED_BODY,455,64,115,65,83,63,65,45,35,159,!1,null,!0),new F("Mega",te.MEGA,L.GHOST,null,1.2,13,O.PRANKSTER,O.PRANKSTER,O.PRANKSTER,555,64,165,75,93,83,75,45,35,159)),new M(e.DUSKULL,3,!1,!1,!1,"Requiem Pokémon",L.GHOST,null,.8,15,O.LEVITATE,O.NONE,O.FRISK,295,20,40,90,30,90,25,190,35,59,P.FAST,50,!1),new M(e.DUSCLOPS,3,!1,!1,!1,"Beckon Pokémon",L.GHOST,null,1.6,30.6,O.PRESSURE,O.NONE,O.FRISK,455,40,70,130,60,130,25,90,35,159,P.FAST,50,!1),new M(e.TROPIUS,3,!1,!1,!1,"Fruit Pokémon",L.GRASS,L.FLYING,2,100,O.CHLOROPHYLL,O.SOLAR_POWER,O.HARVEST,460,99,68,83,72,87,51,200,70,161,P.SLOW,50,!1),new M(e.CHIMECHO,3,!1,!1,!1,"Wind Chime Pokémon",L.PSYCHIC,null,.6,1,O.LEVITATE,O.NONE,O.NONE,455,75,50,80,95,90,65,45,70,159,P.FAST,50,!1),new M(e.ABSOL,3,!1,!1,!1,"Disaster Pokémon",L.DARK,null,1.2,47,O.PRESSURE,O.SUPER_LUCK,O.JUSTIFIED,465,65,130,60,75,60,75,30,35,163,P.MEDIUM_SLOW,50,!1,!0,new F("Normal","",L.DARK,null,1.2,47,O.PRESSURE,O.SUPER_LUCK,O.JUSTIFIED,465,65,130,60,75,60,75,30,35,163,!1,null,!0),new F("Mega",te.MEGA,L.DARK,null,1.2,49,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,565,65,150,60,115,60,115,30,35,163)),new M(e.WYNAUT,3,!1,!1,!1,"Bright Pokémon",L.PSYCHIC,null,.6,14,O.SHADOW_TAG,O.NONE,O.TELEPATHY,260,95,23,48,23,48,23,125,50,52,P.MEDIUM_FAST,50,!1),new M(e.SNORUNT,3,!1,!1,!1,"Snow Hat Pokémon",L.ICE,null,.7,16.8,O.INNER_FOCUS,O.ICE_BODY,O.MOODY,300,50,50,50,50,50,50,190,50,60,P.MEDIUM_FAST,50,!1),new M(e.GLALIE,3,!1,!1,!1,"Face Pokémon",L.ICE,null,1.5,256.5,O.INNER_FOCUS,O.ICE_BODY,O.MOODY,480,80,80,80,80,80,80,75,50,168,P.MEDIUM_FAST,50,!1,!0,new F("Normal","",L.ICE,null,1.5,256.5,O.INNER_FOCUS,O.ICE_BODY,O.MOODY,480,80,80,80,80,80,80,75,50,168,!1,null,!0),new F("Mega",te.MEGA,L.ICE,null,2.1,350.2,O.REFRIGERATE,O.REFRIGERATE,O.REFRIGERATE,580,80,120,80,120,80,100,75,50,168)),new M(e.SPHEAL,3,!1,!1,!1,"Clap Pokémon",L.ICE,L.WATER,.8,39.5,O.THICK_FAT,O.ICE_BODY,O.OBLIVIOUS,290,70,40,50,55,50,25,255,50,58,P.MEDIUM_SLOW,50,!1),new M(e.SEALEO,3,!1,!1,!1,"Ball Roll Pokémon",L.ICE,L.WATER,1.1,87.6,O.THICK_FAT,O.ICE_BODY,O.OBLIVIOUS,410,90,60,70,75,70,45,120,50,144,P.MEDIUM_SLOW,50,!1),new M(e.WALREIN,3,!1,!1,!1,"Ice Break Pokémon",L.ICE,L.WATER,1.4,150.6,O.THICK_FAT,O.ICE_BODY,O.OBLIVIOUS,530,110,80,90,95,90,65,45,50,265,P.MEDIUM_SLOW,50,!1),new M(e.CLAMPERL,3,!1,!1,!1,"Bivalve Pokémon",L.WATER,null,.4,52.5,O.SHELL_ARMOR,O.NONE,O.RATTLED,345,35,64,85,74,55,32,255,70,69,P.ERRATIC,50,!1),new M(e.HUNTAIL,3,!1,!1,!1,"Deep Sea Pokémon",L.WATER,null,1.7,27,O.SWIFT_SWIM,O.NONE,O.WATER_VEIL,485,55,104,105,94,75,52,60,70,170,P.ERRATIC,50,!1),new M(e.GOREBYSS,3,!1,!1,!1,"South Sea Pokémon",L.WATER,null,1.8,22.6,O.SWIFT_SWIM,O.NONE,O.HYDRATION,485,55,84,105,114,75,52,60,70,170,P.ERRATIC,50,!1),new M(e.RELICANTH,3,!1,!1,!1,"Longevity Pokémon",L.WATER,L.ROCK,1,23.4,O.SWIFT_SWIM,O.ROCK_HEAD,O.STURDY,485,100,90,130,45,65,55,25,50,170,P.SLOW,87.5,!0),new M(e.LUVDISC,3,!1,!1,!1,"Rendezvous Pokémon",L.WATER,null,.6,8.7,O.SWIFT_SWIM,O.NONE,O.HYDRATION,330,43,30,55,40,65,97,225,70,116,P.FAST,25,!1),new M(e.BAGON,3,!1,!1,!1,"Rock Head Pokémon",L.DRAGON,null,.6,42.1,O.ROCK_HEAD,O.NONE,O.SHEER_FORCE,300,45,75,60,40,30,50,45,35,60,P.SLOW,50,!1),new M(e.SHELGON,3,!1,!1,!1,"Endurance Pokémon",L.DRAGON,null,1.1,110.5,O.ROCK_HEAD,O.NONE,O.OVERCOAT,420,65,95,100,60,50,50,45,35,147,P.SLOW,50,!1),new M(e.SALAMENCE,3,!1,!1,!1,"Dragon Pokémon",L.DRAGON,L.FLYING,1.5,102.6,O.INTIMIDATE,O.NONE,O.MOXIE,600,95,135,80,110,80,100,45,35,300,P.SLOW,50,!1,!0,new F("Normal","",L.DRAGON,L.FLYING,1.5,102.6,O.INTIMIDATE,O.NONE,O.MOXIE,600,95,135,80,110,80,100,45,35,300,!1,null,!0),new F("Mega",te.MEGA,L.DRAGON,L.FLYING,1.8,112.6,O.AERILATE,O.NONE,O.AERILATE,700,95,145,130,120,90,120,45,35,300)),new M(e.BELDUM,3,!1,!1,!1,"Iron Ball Pokémon",L.STEEL,L.PSYCHIC,.6,95.2,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,300,40,55,80,35,60,30,45,35,60,P.SLOW,null,!1),new M(e.METANG,3,!1,!1,!1,"Iron Claw Pokémon",L.STEEL,L.PSYCHIC,1.2,202.5,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,420,60,75,100,55,80,50,25,35,147,P.SLOW,null,!1),new M(e.METAGROSS,3,!1,!1,!1,"Iron Leg Pokémon",L.STEEL,L.PSYCHIC,1.6,550,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,600,80,135,130,95,90,70,10,35,300,P.SLOW,null,!1,!0,new F("Normal","",L.STEEL,L.PSYCHIC,1.6,550,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,600,80,135,130,95,90,70,3,35,300,!1,null,!0),new F("Mega",te.MEGA,L.STEEL,L.PSYCHIC,2.5,942.9,O.TOUGH_CLAWS,O.NONE,O.TOUGH_CLAWS,700,80,145,150,105,110,110,3,35,300)),new M(e.REGIROCK,3,!0,!1,!1,"Rock Peak Pokémon",L.ROCK,null,1.7,230,O.CLEAR_BODY,O.NONE,O.STURDY,580,80,100,200,50,100,50,3,35,290,P.SLOW,null,!1),new M(e.REGICE,3,!0,!1,!1,"Iceberg Pokémon",L.ICE,null,1.8,175,O.CLEAR_BODY,O.NONE,O.ICE_BODY,580,80,50,100,100,200,50,3,35,290,P.SLOW,null,!1),new M(e.REGISTEEL,3,!0,!1,!1,"Iron Pokémon",L.STEEL,null,1.9,205,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,580,80,75,150,75,150,50,3,35,290,P.SLOW,null,!1),new M(e.LATIAS,3,!0,!1,!1,"Eon Pokémon",L.DRAGON,L.PSYCHIC,1.4,40,O.LEVITATE,O.NONE,O.NONE,600,80,80,90,110,130,110,3,90,300,P.SLOW,0,!1,!0,new F("Normal","",L.DRAGON,L.PSYCHIC,1.4,40,O.LEVITATE,O.NONE,O.NONE,600,80,80,90,110,130,110,3,90,300,!1,null,!0),new F("Mega",te.MEGA,L.DRAGON,L.PSYCHIC,1.8,52,O.LEVITATE,O.NONE,O.NONE,700,80,100,120,140,150,110,3,90,300)),new M(e.LATIOS,3,!0,!1,!1,"Eon Pokémon",L.DRAGON,L.PSYCHIC,2,60,O.LEVITATE,O.NONE,O.NONE,600,80,90,80,130,110,110,3,90,300,P.SLOW,100,!1,!0,new F("Normal","",L.DRAGON,L.PSYCHIC,2,60,O.LEVITATE,O.NONE,O.NONE,600,80,90,80,130,110,110,3,90,300,!1,null,!0),new F("Mega",te.MEGA,L.DRAGON,L.PSYCHIC,2.3,70,O.LEVITATE,O.NONE,O.NONE,700,80,130,100,160,120,110,3,90,300)),new M(e.KYOGRE,3,!1,!0,!1,"Sea Basin Pokémon",L.WATER,null,4.5,352,O.DRIZZLE,O.NONE,O.NONE,670,100,100,90,150,140,90,3,0,335,P.SLOW,null,!1,!0,new F("Normal","",L.WATER,null,4.5,352,O.DRIZZLE,O.NONE,O.NONE,670,100,100,90,150,140,90,3,0,335,!1,null,!0),new F("Primal","primal",L.WATER,null,9.8,430,O.PRIMORDIAL_SEA,O.NONE,O.NONE,770,100,150,90,180,160,90,3,0,335)),new M(e.GROUDON,3,!1,!0,!1,"Continent Pokémon",L.GROUND,null,3.5,950,O.DROUGHT,O.NONE,O.NONE,670,100,150,140,100,90,90,3,0,335,P.SLOW,null,!1,!0,new F("Normal","",L.GROUND,null,3.5,950,O.DROUGHT,O.NONE,O.NONE,670,100,150,140,100,90,90,3,0,335,!1,null,!0),new F("Primal","primal",L.GROUND,L.FIRE,5,999.7,O.DESOLATE_LAND,O.NONE,O.NONE,770,100,180,160,150,90,90,3,0,335)),new M(e.RAYQUAZA,3,!1,!0,!1,"Sky High Pokémon",L.DRAGON,L.FLYING,7,206.5,O.AIR_LOCK,O.NONE,O.NONE,680,105,150,90,150,90,95,45,0,340,P.SLOW,null,!1,!0,new F("Normal","",L.DRAGON,L.FLYING,7,206.5,O.AIR_LOCK,O.NONE,O.NONE,680,105,150,90,150,90,95,45,0,340,!1,null,!0),new F("Mega",te.MEGA,L.DRAGON,L.FLYING,10.8,392,O.DELTA_STREAM,O.NONE,O.NONE,780,105,180,100,180,100,115,45,0,340)),new M(e.JIRACHI,3,!1,!1,!0,"Wish Pokémon",L.STEEL,L.PSYCHIC,.3,1.1,O.SERENE_GRACE,O.NONE,O.NONE,600,100,100,100,100,100,100,3,100,300,P.SLOW,null,!1),new M(e.DEOXYS,3,!1,!1,!0,"DNA Pokémon",L.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,150,50,150,50,150,3,0,300,P.SLOW,null,!1,!0,new F("Normal Forme","normal",L.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,150,50,150,50,150,3,0,300,!1,"",!0),new F("Attack Forme","attack",L.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,180,20,180,20,150,3,0,300),new F("Defense Forme","defense",L.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,70,160,70,160,90,3,0,300),new F("Speed Forme","speed",L.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,95,90,95,90,180,3,0,300)),new M(e.TURTWIG,4,!1,!1,!1,"Tiny Leaf Pokémon",L.GRASS,null,.4,10.2,O.OVERGROW,O.NONE,O.SHELL_ARMOR,318,55,68,64,45,55,31,45,70,64,P.MEDIUM_SLOW,87.5,!1),new M(e.GROTLE,4,!1,!1,!1,"Grove Pokémon",L.GRASS,null,1.1,97,O.OVERGROW,O.NONE,O.SHELL_ARMOR,405,75,89,85,55,65,36,45,70,142,P.MEDIUM_SLOW,87.5,!1),new M(e.TORTERRA,4,!1,!1,!1,"Continent Pokémon",L.GRASS,L.GROUND,2.2,310,O.OVERGROW,O.NONE,O.SHELL_ARMOR,525,95,109,105,75,85,56,45,70,263,P.MEDIUM_SLOW,87.5,!1),new M(e.CHIMCHAR,4,!1,!1,!1,"Chimp Pokémon",L.FIRE,null,.5,6.2,O.BLAZE,O.NONE,O.IRON_FIST,309,44,58,44,58,44,61,45,70,62,P.MEDIUM_SLOW,87.5,!1),new M(e.MONFERNO,4,!1,!1,!1,"Playful Pokémon",L.FIRE,L.FIGHTING,.9,22,O.BLAZE,O.NONE,O.IRON_FIST,405,64,78,52,78,52,81,45,70,142,P.MEDIUM_SLOW,87.5,!1),new M(e.INFERNAPE,4,!1,!1,!1,"Flame Pokémon",L.FIRE,L.FIGHTING,1.2,55,O.BLAZE,O.NONE,O.IRON_FIST,534,76,104,71,104,71,108,45,70,267,P.MEDIUM_SLOW,87.5,!1),new M(e.PIPLUP,4,!1,!1,!1,"Penguin Pokémon",L.WATER,null,.4,5.2,O.TORRENT,O.NONE,O.COMPETITIVE,314,53,51,53,61,56,40,45,70,63,P.MEDIUM_SLOW,87.5,!1),new M(e.PRINPLUP,4,!1,!1,!1,"Penguin Pokémon",L.WATER,null,.8,23,O.TORRENT,O.NONE,O.COMPETITIVE,405,64,66,68,81,76,50,45,70,142,P.MEDIUM_SLOW,87.5,!1),new M(e.EMPOLEON,4,!1,!1,!1,"Emperor Pokémon",L.WATER,L.STEEL,1.7,84.5,O.TORRENT,O.NONE,O.COMPETITIVE,530,84,86,88,111,101,60,45,70,265,P.MEDIUM_SLOW,87.5,!1),new M(e.STARLY,4,!1,!1,!1,"Starling Pokémon",L.NORMAL,L.FLYING,.3,2,O.KEEN_EYE,O.NONE,O.RECKLESS,245,40,55,30,30,30,60,255,70,49,P.MEDIUM_SLOW,50,!0),new M(e.STARAVIA,4,!1,!1,!1,"Starling Pokémon",L.NORMAL,L.FLYING,.6,15.5,O.INTIMIDATE,O.NONE,O.RECKLESS,340,55,75,50,40,40,80,120,70,119,P.MEDIUM_SLOW,50,!0),new M(e.STARAPTOR,4,!1,!1,!1,"Predator Pokémon",L.NORMAL,L.FLYING,1.2,24.9,O.INTIMIDATE,O.NONE,O.RECKLESS,485,85,120,70,50,60,100,45,70,243,P.MEDIUM_SLOW,50,!0),new M(e.BIDOOF,4,!1,!1,!1,"Plump Mouse Pokémon",L.NORMAL,null,.5,20,O.SIMPLE,O.UNAWARE,O.MOODY,250,59,45,40,35,40,31,255,70,50,P.MEDIUM_FAST,50,!0),new M(e.BIBAREL,4,!1,!1,!1,"Beaver Pokémon",L.NORMAL,L.WATER,1,31.5,O.SIMPLE,O.UNAWARE,O.MOODY,410,79,85,60,55,60,71,127,70,144,P.MEDIUM_FAST,50,!0),new M(e.KRICKETOT,4,!1,!1,!1,"Cricket Pokémon",L.BUG,null,.3,2.2,O.SHED_SKIN,O.NONE,O.RUN_AWAY,194,37,25,41,25,41,25,255,70,39,P.MEDIUM_SLOW,50,!0),new M(e.KRICKETUNE,4,!1,!1,!1,"Cricket Pokémon",L.BUG,null,1,25.5,O.SWARM,O.NONE,O.TECHNICIAN,384,77,85,51,55,51,65,45,70,134,P.MEDIUM_SLOW,50,!0),new M(e.SHINX,4,!1,!1,!1,"Flash Pokémon",L.ELECTRIC,null,.5,9.5,O.RIVALRY,O.INTIMIDATE,O.GUTS,263,45,65,34,40,34,45,235,50,53,P.MEDIUM_SLOW,50,!0),new M(e.LUXIO,4,!1,!1,!1,"Spark Pokémon",L.ELECTRIC,null,.9,30.5,O.RIVALRY,O.INTIMIDATE,O.GUTS,363,60,85,49,60,49,60,120,100,127,P.MEDIUM_SLOW,50,!0),new M(e.LUXRAY,4,!1,!1,!1,"Gleam Eyes Pokémon",L.ELECTRIC,null,1.4,42,O.RIVALRY,O.INTIMIDATE,O.GUTS,523,80,120,79,95,79,70,45,50,262,P.MEDIUM_SLOW,50,!0),new M(e.BUDEW,4,!1,!1,!1,"Bud Pokémon",L.GRASS,L.POISON,.2,1.2,O.NATURAL_CURE,O.POISON_POINT,O.LEAF_GUARD,280,40,30,35,50,70,55,255,50,56,P.MEDIUM_SLOW,50,!1),new M(e.ROSERADE,4,!1,!1,!1,"Bouquet Pokémon",L.GRASS,L.POISON,.9,14.5,O.NATURAL_CURE,O.POISON_POINT,O.TECHNICIAN,515,60,70,65,125,105,90,75,50,258,P.MEDIUM_SLOW,50,!0),new M(e.CRANIDOS,4,!1,!1,!1,"Head Butt Pokémon",L.ROCK,null,.9,31.5,O.MOLD_BREAKER,O.NONE,O.SHEER_FORCE,350,67,125,40,30,30,58,45,70,70,P.ERRATIC,87.5,!1),new M(e.RAMPARDOS,4,!1,!1,!1,"Head Butt Pokémon",L.ROCK,null,1.6,102.5,O.MOLD_BREAKER,O.NONE,O.SHEER_FORCE,495,97,165,60,65,50,58,45,70,173,P.ERRATIC,87.5,!1),new M(e.SHIELDON,4,!1,!1,!1,"Shield Pokémon",L.ROCK,L.STEEL,.5,57,O.STURDY,O.NONE,O.SOUNDPROOF,350,30,42,118,42,88,30,45,70,70,P.ERRATIC,87.5,!1),new M(e.BASTIODON,4,!1,!1,!1,"Shield Pokémon",L.ROCK,L.STEEL,1.3,149.5,O.STURDY,O.NONE,O.SOUNDPROOF,495,60,52,168,47,138,30,45,70,173,P.ERRATIC,87.5,!1),new M(e.BURMY,4,!1,!1,!1,"Bagworm Pokémon",L.BUG,null,.2,3.4,O.SHED_SKIN,O.NONE,O.OVERCOAT,224,40,29,45,29,45,36,120,70,45,P.MEDIUM_FAST,50,!1,!0,new F("Plant Cloak","plant",L.BUG,null,.2,3.4,O.SHED_SKIN,O.NONE,O.OVERCOAT,224,40,29,45,29,45,36,120,70,45,!1,null,!0),new F("Sandy Cloak","sandy",L.BUG,null,.2,3.4,O.SHED_SKIN,O.NONE,O.OVERCOAT,224,40,29,45,29,45,36,120,70,45,!1,null,!0),new F("Trash Cloak","trash",L.BUG,null,.2,3.4,O.SHED_SKIN,O.NONE,O.OVERCOAT,224,40,29,45,29,45,36,120,70,45,!1,null,!0)),new M(e.WORMADAM,4,!1,!1,!1,"Bagworm Pokémon",L.BUG,L.GRASS,.5,6.5,O.ANTICIPATION,O.NONE,O.OVERCOAT,424,60,59,85,79,105,36,45,70,148,P.MEDIUM_FAST,0,!1,!1,new F("Plant Cloak","plant",L.BUG,L.GRASS,.5,6.5,O.ANTICIPATION,O.NONE,O.OVERCOAT,424,60,59,85,79,105,36,45,70,148,!1,null,!0),new F("Sandy Cloak","sandy",L.BUG,L.GROUND,.5,6.5,O.ANTICIPATION,O.NONE,O.OVERCOAT,424,60,79,105,59,85,36,45,70,148,!1,null,!0),new F("Trash Cloak","trash",L.BUG,L.STEEL,.5,6.5,O.ANTICIPATION,O.NONE,O.OVERCOAT,424,60,69,95,69,95,36,45,70,148,!1,null,!0)),new M(e.MOTHIM,4,!1,!1,!1,"Moth Pokémon",L.BUG,L.FLYING,.9,23.3,O.SWARM,O.NONE,O.TINTED_LENS,424,70,94,50,94,50,66,45,70,148,P.MEDIUM_FAST,100,!1),new M(e.COMBEE,4,!1,!1,!1,"Tiny Bee Pokémon",L.BUG,L.FLYING,.3,5.5,O.HONEY_GATHER,O.NONE,O.HUSTLE,244,30,30,42,30,42,70,120,50,49,P.MEDIUM_SLOW,87.5,!0),new M(e.VESPIQUEN,4,!1,!1,!1,"Beehive Pokémon",L.BUG,L.FLYING,1.2,38.5,O.PRESSURE,O.NONE,O.UNNERVE,474,70,80,102,80,102,40,45,50,166,P.MEDIUM_SLOW,0,!1),new M(e.PACHIRISU,4,!1,!1,!1,"EleSquirrel Pokémon",L.ELECTRIC,null,.4,3.9,O.RUN_AWAY,O.PICKUP,O.VOLT_ABSORB,405,60,45,70,45,90,95,200,100,142,P.MEDIUM_FAST,50,!0),new M(e.BUIZEL,4,!1,!1,!1,"Sea Weasel Pokémon",L.WATER,null,.7,29.5,O.SWIFT_SWIM,O.NONE,O.WATER_VEIL,330,55,65,35,60,30,85,190,70,66,P.MEDIUM_FAST,50,!0),new M(e.FLOATZEL,4,!1,!1,!1,"Sea Weasel Pokémon",L.WATER,null,1.1,33.5,O.SWIFT_SWIM,O.NONE,O.WATER_VEIL,495,85,105,55,85,50,115,75,70,173,P.MEDIUM_FAST,50,!0),new M(e.CHERUBI,4,!1,!1,!1,"Cherry Pokémon",L.GRASS,null,.4,3.3,O.CHLOROPHYLL,O.NONE,O.NONE,275,45,35,45,62,53,35,190,50,55,P.MEDIUM_FAST,50,!1),new M(e.CHERRIM,4,!1,!1,!1,"Blossom Pokémon",L.GRASS,null,.5,9.3,O.FLOWER_GIFT,O.NONE,O.NONE,450,70,60,70,87,78,85,75,50,158,P.MEDIUM_FAST,50,!1,!0,new F("Overcast Form","overcast",L.GRASS,null,.5,9.3,O.FLOWER_GIFT,O.NONE,O.NONE,450,70,60,70,87,78,85,75,50,158,!1,null,!0),new F("Sunshine Form","sunshine",L.GRASS,null,.5,9.3,O.FLOWER_GIFT,O.NONE,O.NONE,450,70,60,70,87,78,85,75,50,158)),new M(e.SHELLOS,4,!1,!1,!1,"Sea Slug Pokémon",L.WATER,null,.3,6.3,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,325,76,48,48,57,62,34,190,50,65,P.MEDIUM_FAST,50,!1,!1,new F("East Sea","east",L.WATER,null,.3,6.3,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,325,76,48,48,57,62,34,190,50,65,!1,null,!0),new F("West Sea","west",L.WATER,null,.3,6.3,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,325,76,48,48,57,62,34,190,50,65,!1,null,!0)),new M(e.GASTRODON,4,!1,!1,!1,"Sea Slug Pokémon",L.WATER,L.GROUND,.9,29.9,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,475,111,83,68,92,82,39,75,50,166,P.MEDIUM_FAST,50,!1,!1,new F("East Sea","east",L.WATER,L.GROUND,.9,29.9,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,475,111,83,68,92,82,39,75,50,166,!1,null,!0),new F("West Sea","west",L.WATER,L.GROUND,.9,29.9,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,475,111,83,68,92,82,39,75,50,166,!1,null,!0)),new M(e.AMBIPOM,4,!1,!1,!1,"Long Tail Pokémon",L.NORMAL,null,1.2,20.3,O.TECHNICIAN,O.PICKUP,O.SKILL_LINK,482,75,100,66,60,66,115,45,100,169,P.FAST,50,!0),new M(e.DRIFLOON,4,!1,!1,!1,"Balloon Pokémon",L.GHOST,L.FLYING,.4,1.2,O.AFTERMATH,O.UNBURDEN,O.FLARE_BOOST,348,90,50,34,60,44,70,125,50,70,P.FLUCTUATING,50,!1),new M(e.DRIFBLIM,4,!1,!1,!1,"Blimp Pokémon",L.GHOST,L.FLYING,1.2,15,O.AFTERMATH,O.UNBURDEN,O.FLARE_BOOST,498,150,80,44,90,54,80,60,50,174,P.FLUCTUATING,50,!1),new M(e.BUNEARY,4,!1,!1,!1,"Rabbit Pokémon",L.NORMAL,null,.4,5.5,O.RUN_AWAY,O.KLUTZ,O.LIMBER,350,55,66,44,44,56,85,190,0,70,P.MEDIUM_FAST,50,!1),new M(e.LOPUNNY,4,!1,!1,!1,"Rabbit Pokémon",L.NORMAL,null,1.2,33.3,O.CUTE_CHARM,O.KLUTZ,O.LIMBER,480,65,76,84,54,96,105,60,140,168,P.MEDIUM_FAST,50,!1,!0,new F("Normal","",L.NORMAL,null,1.2,33.3,O.CUTE_CHARM,O.KLUTZ,O.LIMBER,480,65,76,84,54,96,105,60,140,168,!1,null,!0),new F("Mega",te.MEGA,L.NORMAL,L.FIGHTING,1.3,28.3,O.SCRAPPY,O.SCRAPPY,O.SCRAPPY,580,65,136,94,54,96,135,60,140,168)),new M(e.MISMAGIUS,4,!1,!1,!1,"Magical Pokémon",L.GHOST,null,.9,4.4,O.LEVITATE,O.NONE,O.NONE,495,60,60,60,105,105,105,45,35,173,P.FAST,50,!1),new M(e.HONCHKROW,4,!1,!1,!1,"Big Boss Pokémon",L.DARK,L.FLYING,.9,27.3,O.INSOMNIA,O.SUPER_LUCK,O.MOXIE,505,100,125,52,105,52,71,30,35,177,P.MEDIUM_SLOW,50,!1),new M(e.GLAMEOW,4,!1,!1,!1,"Catty Pokémon",L.NORMAL,null,.5,3.9,O.LIMBER,O.OWN_TEMPO,O.KEEN_EYE,310,49,55,42,42,37,85,190,70,62,P.FAST,25,!1),new M(e.PURUGLY,4,!1,!1,!1,"Tiger Cat Pokémon",L.NORMAL,null,1,43.8,O.THICK_FAT,O.OWN_TEMPO,O.DEFIANT,452,71,82,64,64,59,112,75,70,158,P.FAST,25,!1),new M(e.CHINGLING,4,!1,!1,!1,"Bell Pokémon",L.PSYCHIC,null,.2,.6,O.LEVITATE,O.NONE,O.NONE,285,45,30,50,65,50,45,120,70,57,P.FAST,50,!1),new M(e.STUNKY,4,!1,!1,!1,"Skunk Pokémon",L.POISON,L.DARK,.4,19.2,O.STENCH,O.AFTERMATH,O.KEEN_EYE,329,63,63,47,41,41,74,225,50,66,P.MEDIUM_FAST,50,!1),new M(e.SKUNTANK,4,!1,!1,!1,"Skunk Pokémon",L.POISON,L.DARK,1,38,O.STENCH,O.AFTERMATH,O.KEEN_EYE,479,103,93,67,71,61,84,60,50,168,P.MEDIUM_FAST,50,!1),new M(e.BRONZOR,4,!1,!1,!1,"Bronze Pokémon",L.STEEL,L.PSYCHIC,.5,60.5,O.LEVITATE,O.HEATPROOF,O.HEAVY_METAL,300,57,24,86,24,86,23,255,50,60,P.MEDIUM_FAST,null,!1),new M(e.BRONZONG,4,!1,!1,!1,"Bronze Bell Pokémon",L.STEEL,L.PSYCHIC,1.3,187,O.LEVITATE,O.HEATPROOF,O.HEAVY_METAL,500,67,89,116,79,116,33,90,50,175,P.MEDIUM_FAST,null,!1),new M(e.BONSLY,4,!1,!1,!1,"Bonsai Pokémon",L.ROCK,null,.5,15,O.STURDY,O.ROCK_HEAD,O.RATTLED,290,50,80,95,10,45,10,255,50,58,P.MEDIUM_FAST,50,!1),new M(e.MIME_JR,4,!1,!1,!1,"Mime Pokémon",L.PSYCHIC,L.FAIRY,.6,13,O.SOUNDPROOF,O.FILTER,O.TECHNICIAN,310,20,25,45,70,90,60,145,50,62,P.MEDIUM_FAST,50,!1),new M(e.HAPPINY,4,!1,!1,!1,"Playhouse Pokémon",L.NORMAL,null,.6,24.4,O.NATURAL_CURE,O.SERENE_GRACE,O.FRIEND_GUARD,220,100,5,5,15,65,30,130,140,110,P.FAST,0,!1),new M(e.CHATOT,4,!1,!1,!1,"Music Note Pokémon",L.NORMAL,L.FLYING,.5,1.9,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,411,76,65,45,92,42,91,30,35,144,P.MEDIUM_SLOW,50,!1),new M(e.SPIRITOMB,4,!1,!1,!1,"Forbidden Pokémon",L.GHOST,L.DARK,1,108,O.PRESSURE,O.NONE,O.INFILTRATOR,485,50,92,108,92,108,35,100,50,170,P.MEDIUM_FAST,50,!1),new M(e.GIBLE,4,!1,!1,!1,"Land Shark Pokémon",L.DRAGON,L.GROUND,.7,20.5,O.SAND_VEIL,O.NONE,O.ROUGH_SKIN,300,58,70,45,40,45,42,45,50,60,P.SLOW,50,!0),new M(e.GABITE,4,!1,!1,!1,"Cave Pokémon",L.DRAGON,L.GROUND,1.4,56,O.SAND_VEIL,O.NONE,O.ROUGH_SKIN,410,68,90,65,50,55,82,45,50,144,P.SLOW,50,!0),new M(e.GARCHOMP,4,!1,!1,!1,"Mach Pokémon",L.DRAGON,L.GROUND,1.9,95,O.SAND_VEIL,O.NONE,O.ROUGH_SKIN,600,108,130,95,80,85,102,45,50,300,P.SLOW,50,!0,!0,new F("Normal","",L.DRAGON,L.GROUND,1.9,95,O.SAND_VEIL,O.NONE,O.ROUGH_SKIN,600,108,130,95,80,85,102,45,50,300,!0,null,!0),new F("Mega",te.MEGA,L.DRAGON,L.GROUND,1.9,95,O.SAND_FORCE,O.NONE,O.SAND_FORCE,700,108,170,115,120,95,92,45,50,300,!0)),new M(e.MUNCHLAX,4,!1,!1,!1,"Big Eater Pokémon",L.NORMAL,null,.6,105,O.PICKUP,O.THICK_FAT,O.GLUTTONY,390,135,85,40,40,85,5,50,50,78,P.SLOW,87.5,!1),new M(e.RIOLU,4,!1,!1,!1,"Emanation Pokémon",L.FIGHTING,null,.7,20.2,O.STEADFAST,O.INNER_FOCUS,O.PRANKSTER,285,40,70,40,35,40,60,75,50,57,P.MEDIUM_SLOW,87.5,!1),new M(e.LUCARIO,4,!1,!1,!1,"Aura Pokémon",L.FIGHTING,L.STEEL,1.2,54,O.STEADFAST,O.INNER_FOCUS,O.JUSTIFIED,525,70,110,70,115,70,90,45,50,184,P.MEDIUM_SLOW,87.5,!1,!0,new F("Normal","",L.FIGHTING,L.STEEL,1.2,54,O.STEADFAST,O.INNER_FOCUS,O.JUSTIFIED,525,70,110,70,115,70,90,45,50,184,!1,null,!0),new F("Mega",te.MEGA,L.FIGHTING,L.STEEL,1.3,57.5,O.ADAPTABILITY,O.ADAPTABILITY,O.ADAPTABILITY,625,70,145,88,140,70,112,45,50,184)),new M(e.HIPPOPOTAS,4,!1,!1,!1,"Hippo Pokémon",L.GROUND,null,.8,49.5,O.SAND_STREAM,O.NONE,O.SAND_FORCE,330,68,72,78,38,42,32,140,50,66,P.SLOW,50,!0),new M(e.HIPPOWDON,4,!1,!1,!1,"Heavyweight Pokémon",L.GROUND,null,2,300,O.SAND_STREAM,O.NONE,O.SAND_FORCE,525,108,112,118,68,72,47,60,50,184,P.SLOW,50,!0),new M(e.SKORUPI,4,!1,!1,!1,"Scorpion Pokémon",L.POISON,L.BUG,.8,12,O.BATTLE_ARMOR,O.SNIPER,O.KEEN_EYE,330,40,50,90,30,55,65,120,50,66,P.SLOW,50,!1),new M(e.DRAPION,4,!1,!1,!1,"Ogre Scorpion Pokémon",L.POISON,L.DARK,1.3,61.5,O.BATTLE_ARMOR,O.SNIPER,O.KEEN_EYE,500,70,90,110,60,75,95,45,50,175,P.SLOW,50,!1),new M(e.CROAGUNK,4,!1,!1,!1,"Toxic Mouth Pokémon",L.POISON,L.FIGHTING,.7,23,O.ANTICIPATION,O.DRY_SKIN,O.POISON_TOUCH,300,48,61,40,61,40,50,140,100,60,P.MEDIUM_FAST,50,!0),new M(e.TOXICROAK,4,!1,!1,!1,"Toxic Mouth Pokémon",L.POISON,L.FIGHTING,1.3,44.4,O.ANTICIPATION,O.DRY_SKIN,O.POISON_TOUCH,490,83,106,65,86,65,85,75,50,172,P.MEDIUM_FAST,50,!0),new M(e.CARNIVINE,4,!1,!1,!1,"Bug Catcher Pokémon",L.GRASS,null,1.4,27,O.LEVITATE,O.NONE,O.NONE,454,74,100,72,90,72,46,200,70,159,P.SLOW,50,!1),new M(e.FINNEON,4,!1,!1,!1,"Wing Fish Pokémon",L.WATER,null,.4,7,O.SWIFT_SWIM,O.STORM_DRAIN,O.WATER_VEIL,330,49,49,56,49,61,66,190,70,66,P.ERRATIC,50,!0),new M(e.LUMINEON,4,!1,!1,!1,"Neon Pokémon",L.WATER,null,1.2,24,O.SWIFT_SWIM,O.STORM_DRAIN,O.WATER_VEIL,460,69,69,76,69,86,91,75,70,161,P.ERRATIC,50,!0),new M(e.MANTYKE,4,!1,!1,!1,"Kite Pokémon",L.WATER,L.FLYING,1,65,O.SWIFT_SWIM,O.WATER_ABSORB,O.WATER_VEIL,345,45,20,50,60,120,50,25,50,69,P.SLOW,50,!1),new M(e.SNOVER,4,!1,!1,!1,"Frost Tree Pokémon",L.GRASS,L.ICE,1,50.5,O.SNOW_WARNING,O.NONE,O.SOUNDPROOF,334,60,62,50,62,60,40,120,50,67,P.SLOW,50,!0),new M(e.ABOMASNOW,4,!1,!1,!1,"Frost Tree Pokémon",L.GRASS,L.ICE,2.2,135.5,O.SNOW_WARNING,O.NONE,O.SOUNDPROOF,494,90,92,75,92,85,60,60,50,173,P.SLOW,50,!0,!0,new F("Normal","",L.GRASS,L.ICE,2.2,135.5,O.SNOW_WARNING,O.NONE,O.SOUNDPROOF,494,90,92,75,92,85,60,60,50,173,!0,null,!0),new F("Mega",te.MEGA,L.GRASS,L.ICE,2.7,185,O.SNOW_WARNING,O.NONE,O.SNOW_WARNING,594,90,132,105,132,105,30,60,50,173,!0)),new M(e.WEAVILE,4,!1,!1,!1,"Sharp Claw Pokémon",L.DARK,L.ICE,1.1,34,O.PRESSURE,O.NONE,O.PICKPOCKET,510,70,120,65,45,85,125,45,35,179,P.MEDIUM_SLOW,50,!0),new M(e.MAGNEZONE,4,!1,!1,!1,"Magnet Area Pokémon",L.ELECTRIC,L.STEEL,1.2,180,O.MAGNET_PULL,O.STURDY,O.ANALYTIC,535,70,70,115,130,90,60,30,50,268,P.MEDIUM_FAST,null,!1),new M(e.LICKILICKY,4,!1,!1,!1,"Licking Pokémon",L.NORMAL,null,1.7,140,O.OWN_TEMPO,O.OBLIVIOUS,O.CLOUD_NINE,515,110,85,95,80,95,50,30,50,180,P.MEDIUM_FAST,50,!1),new M(e.RHYPERIOR,4,!1,!1,!1,"Drill Pokémon",L.GROUND,L.ROCK,2.4,282.8,O.LIGHTNING_ROD,O.SOLID_ROCK,O.RECKLESS,535,115,140,130,55,55,40,30,50,268,P.SLOW,50,!0),new M(e.TANGROWTH,4,!1,!1,!1,"Vine Pokémon",L.GRASS,null,2,128.6,O.CHLOROPHYLL,O.LEAF_GUARD,O.REGENERATOR,535,100,100,125,110,50,50,30,50,187,P.MEDIUM_FAST,50,!0),new M(e.ELECTIVIRE,4,!1,!1,!1,"Thunderbolt Pokémon",L.ELECTRIC,null,1.8,138.6,O.MOTOR_DRIVE,O.NONE,O.VITAL_SPIRIT,540,75,123,67,95,85,95,30,50,270,P.MEDIUM_FAST,75,!1),new M(e.MAGMORTAR,4,!1,!1,!1,"Blast Pokémon",L.FIRE,null,1.6,68,O.FLAME_BODY,O.NONE,O.VITAL_SPIRIT,540,75,95,67,125,95,83,30,50,270,P.MEDIUM_FAST,75,!1),new M(e.TOGEKISS,4,!1,!1,!1,"Jubilee Pokémon",L.FAIRY,L.FLYING,1.5,38,O.HUSTLE,O.SERENE_GRACE,O.SUPER_LUCK,545,85,50,95,120,115,80,30,50,273,P.FAST,87.5,!1),new M(e.YANMEGA,4,!1,!1,!1,"Ogre Darner Pokémon",L.BUG,L.FLYING,1.9,51.5,O.SPEED_BOOST,O.TINTED_LENS,O.FRISK,515,86,76,86,116,56,95,30,70,180,P.MEDIUM_FAST,50,!1),new M(e.LEAFEON,4,!1,!1,!1,"Verdant Pokémon",L.GRASS,null,1,25.5,O.LEAF_GUARD,O.NONE,O.CHLOROPHYLL,525,65,110,130,60,65,95,45,35,184,P.MEDIUM_FAST,87.5,!1),new M(e.GLACEON,4,!1,!1,!1,"Fresh Snow Pokémon",L.ICE,null,.8,25.9,O.SNOW_CLOAK,O.NONE,O.ICE_BODY,525,65,60,110,130,95,65,45,35,184,P.MEDIUM_FAST,87.5,!1),new M(e.GLISCOR,4,!1,!1,!1,"Fang Scorpion Pokémon",L.GROUND,L.FLYING,2,42.5,O.HYPER_CUTTER,O.SAND_VEIL,O.POISON_HEAL,510,75,95,125,45,75,95,30,70,179,P.MEDIUM_SLOW,50,!1),new M(e.MAMOSWINE,4,!1,!1,!1,"Twin Tusk Pokémon",L.ICE,L.GROUND,2.5,291,O.OBLIVIOUS,O.SNOW_CLOAK,O.THICK_FAT,530,110,130,80,70,60,80,50,50,265,P.SLOW,50,!0),new M(e.PORYGON_Z,4,!1,!1,!1,"Virtual Pokémon",L.NORMAL,null,.9,34,O.ADAPTABILITY,O.DOWNLOAD,O.ANALYTIC,535,85,80,70,135,75,90,30,50,268,P.MEDIUM_FAST,null,!1),new M(e.GALLADE,4,!1,!1,!1,"Blade Pokémon",L.PSYCHIC,L.FIGHTING,1.6,52,O.STEADFAST,O.SHARPNESS,O.JUSTIFIED,518,68,125,65,65,115,80,45,35,259,P.SLOW,100,!1,!0,new F("Normal","",L.PSYCHIC,L.FIGHTING,1.6,52,O.STEADFAST,O.SHARPNESS,O.JUSTIFIED,518,68,125,65,65,115,80,45,35,259,!1,null,!0),new F("Mega",te.MEGA,L.PSYCHIC,L.FIGHTING,1.6,56.4,O.INNER_FOCUS,O.INNER_FOCUS,O.INNER_FOCUS,618,68,165,95,65,115,110,45,35,259)),new M(e.PROBOPASS,4,!1,!1,!1,"Compass Pokémon",L.ROCK,L.STEEL,1.4,340,O.STURDY,O.MAGNET_PULL,O.SAND_FORCE,525,60,55,145,75,150,40,60,70,184,P.MEDIUM_FAST,50,!1),new M(e.DUSKNOIR,4,!1,!1,!1,"Gripper Pokémon",L.GHOST,null,2.2,106.6,O.PRESSURE,O.NONE,O.FRISK,525,45,100,135,65,135,45,45,35,263,P.FAST,50,!1),new M(e.FROSLASS,4,!1,!1,!1,"Snow Land Pokémon",L.ICE,L.GHOST,1.3,26.6,O.SNOW_CLOAK,O.NONE,O.CURSED_BODY,480,70,80,70,80,70,110,75,50,168,P.MEDIUM_FAST,0,!1),new M(e.ROTOM,4,!1,!1,!1,"Plasma Pokémon",L.ELECTRIC,L.GHOST,.3,.3,O.LEVITATE,O.NONE,O.NONE,440,50,50,77,95,77,91,45,50,154,P.MEDIUM_FAST,null,!1,!1,new F("Normal","",L.ELECTRIC,L.GHOST,.3,.3,O.LEVITATE,O.NONE,O.NONE,440,50,50,77,95,77,91,45,50,154,!1,null,!0),new F("Heat","heat",L.ELECTRIC,L.FIRE,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,182,!1,null,!0),new F("Wash","wash",L.ELECTRIC,L.WATER,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,182,!1,null,!0),new F("Frost","frost",L.ELECTRIC,L.ICE,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,182,!1,null,!0),new F("Fan","fan",L.ELECTRIC,L.FLYING,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,182,!1,null,!0),new F("Mow","mow",L.ELECTRIC,L.GRASS,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,182,!1,null,!0)),new M(e.UXIE,4,!0,!1,!1,"Knowledge Pokémon",L.PSYCHIC,null,.3,.3,O.LEVITATE,O.NONE,O.NONE,580,75,75,130,75,130,95,3,140,290,P.SLOW,null,!1),new M(e.MESPRIT,4,!0,!1,!1,"Emotion Pokémon",L.PSYCHIC,null,.3,.3,O.LEVITATE,O.NONE,O.NONE,580,80,105,105,105,105,80,3,140,290,P.SLOW,null,!1),new M(e.AZELF,4,!0,!1,!1,"Willpower Pokémon",L.PSYCHIC,null,.3,.3,O.LEVITATE,O.NONE,O.NONE,580,75,125,70,125,70,115,3,140,290,P.SLOW,null,!1),new M(e.DIALGA,4,!1,!0,!1,"Temporal Pokémon",L.STEEL,L.DRAGON,5.4,683,O.PRESSURE,O.NONE,O.TELEPATHY,680,100,120,120,150,100,90,3,0,340,P.SLOW,null,!1,!1,new F("Normal","",L.STEEL,L.DRAGON,5.4,683,O.PRESSURE,O.NONE,O.TELEPATHY,680,100,120,120,150,100,90,3,0,340,!1,null,!0),new F("Origin Forme","origin",L.STEEL,L.DRAGON,7,848.7,O.PRESSURE,O.NONE,O.TELEPATHY,680,100,100,120,150,120,90,3,0,340)),new M(e.PALKIA,4,!1,!0,!1,"Spatial Pokémon",L.WATER,L.DRAGON,4.2,336,O.PRESSURE,O.NONE,O.TELEPATHY,680,90,120,100,150,120,100,3,0,340,P.SLOW,null,!1,!1,new F("Normal","",L.WATER,L.DRAGON,4.2,336,O.PRESSURE,O.NONE,O.TELEPATHY,680,90,120,100,150,120,100,3,0,340,!1,null,!0),new F("Origin Forme","origin",L.WATER,L.DRAGON,6.3,659,O.PRESSURE,O.NONE,O.TELEPATHY,680,90,100,100,150,120,120,3,0,340)),new M(e.HEATRAN,4,!0,!1,!1,"Lava Dome Pokémon",L.FIRE,L.STEEL,1.7,430,O.FLASH_FIRE,O.NONE,O.FLAME_BODY,600,91,90,106,130,106,77,3,100,300,P.SLOW,50,!1),new M(e.REGIGIGAS,4,!0,!1,!1,"Colossal Pokémon",L.NORMAL,null,3.7,420,O.SLOW_START,O.NONE,O.NORMALIZE,670,110,160,110,80,110,100,3,0,335,P.SLOW,null,!1),new M(e.GIRATINA,4,!1,!0,!1,"Renegade Pokémon",L.GHOST,L.DRAGON,4.5,750,O.PRESSURE,O.NONE,O.TELEPATHY,680,150,100,120,100,120,90,3,0,340,P.SLOW,null,!1,!0,new F("Altered Forme","altered",L.GHOST,L.DRAGON,4.5,750,O.PRESSURE,O.NONE,O.TELEPATHY,680,150,100,120,100,120,90,3,0,340,!1,null,!0),new F("Origin Forme","origin",L.GHOST,L.DRAGON,6.9,650,O.LEVITATE,O.NONE,O.LEVITATE,680,150,120,100,120,100,90,3,0,340)),new M(e.CRESSELIA,4,!0,!1,!1,"Lunar Pokémon",L.PSYCHIC,null,1.5,85.6,O.LEVITATE,O.NONE,O.NONE,580,120,70,110,75,120,85,3,100,300,P.SLOW,0,!1),new M(e.PHIONE,4,!1,!1,!0,"Sea Drifter Pokémon",L.WATER,null,.4,3.1,O.HYDRATION,O.NONE,O.NONE,480,80,80,80,80,80,80,30,70,240,P.SLOW,null,!1),new M(e.MANAPHY,4,!1,!1,!0,"Seafaring Pokémon",L.WATER,null,.3,1.4,O.HYDRATION,O.NONE,O.NONE,600,100,100,100,100,100,100,3,70,300,P.SLOW,null,!1),new M(e.DARKRAI,4,!1,!1,!0,"Pitch-Black Pokémon",L.DARK,null,1.5,50.5,O.BAD_DREAMS,O.NONE,O.NONE,600,70,90,90,135,90,125,3,0,300,P.SLOW,null,!1),new M(e.SHAYMIN,4,!1,!1,!0,"Gratitude Pokémon",L.GRASS,null,.2,2.1,O.NATURAL_CURE,O.NONE,O.NONE,600,100,100,100,100,100,100,45,100,300,P.MEDIUM_SLOW,null,!1,!0,new F("Land Forme","land",L.GRASS,null,.2,2.1,O.NATURAL_CURE,O.NONE,O.NONE,600,100,100,100,100,100,100,45,100,300,!1,null,!0),new F("Sky Forme","sky",L.GRASS,L.FLYING,.4,5.2,O.SERENE_GRACE,O.NONE,O.NONE,600,100,103,75,120,75,127,45,100,300)),new M(e.ARCEUS,4,!1,!1,!0,"Alpha Pokémon",L.NORMAL,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360,P.SLOW,null,!1,!0,new F("Normal","normal",L.NORMAL,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360,!1,null,!0),new F("Fighting","fighting",L.FIGHTING,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new F("Flying","flying",L.FLYING,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new F("Poison","poison",L.POISON,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new F("Ground","ground",L.GROUND,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new F("Rock","rock",L.ROCK,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new F("Bug","bug",L.BUG,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new F("Ghost","ghost",L.GHOST,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new F("Steel","steel",L.STEEL,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new F("Fire","fire",L.FIRE,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new F("Water","water",L.WATER,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new F("Grass","grass",L.GRASS,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new F("Electric","electric",L.ELECTRIC,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new F("Psychic","psychic",L.PSYCHIC,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new F("Ice","ice",L.ICE,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new F("Dragon","dragon",L.DRAGON,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new F("Dark","dark",L.DARK,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new F("Fairy","fairy",L.FAIRY,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new F("???","unknown",L.UNKNOWN,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360,!1,null,!1,!0)),new M(e.VICTINI,5,!1,!1,!0,"Victory Pokémon",L.PSYCHIC,L.FIRE,.4,4,O.VICTORY_STAR,O.NONE,O.NONE,600,100,100,100,100,100,100,3,100,300,P.SLOW,null,!1),new M(e.SNIVY,5,!1,!1,!1,"Grass Snake Pokémon",L.GRASS,null,.6,8.1,O.OVERGROW,O.NONE,O.CONTRARY,308,45,45,55,45,55,63,45,70,62,P.MEDIUM_SLOW,87.5,!1),new M(e.SERVINE,5,!1,!1,!1,"Grass Snake Pokémon",L.GRASS,null,.8,16,O.OVERGROW,O.NONE,O.CONTRARY,413,60,60,75,60,75,83,45,70,145,P.MEDIUM_SLOW,87.5,!1),new M(e.SERPERIOR,5,!1,!1,!1,"Regal Pokémon",L.GRASS,null,3.3,63,O.OVERGROW,O.NONE,O.CONTRARY,528,75,75,95,75,95,113,45,70,264,P.MEDIUM_SLOW,87.5,!1),new M(e.TEPIG,5,!1,!1,!1,"Fire Pig Pokémon",L.FIRE,null,.5,9.9,O.BLAZE,O.NONE,O.THICK_FAT,308,65,63,45,45,45,45,45,70,62,P.MEDIUM_SLOW,87.5,!1),new M(e.PIGNITE,5,!1,!1,!1,"Fire Pig Pokémon",L.FIRE,L.FIGHTING,1,55.5,O.BLAZE,O.NONE,O.THICK_FAT,418,90,93,55,70,55,55,45,70,146,P.MEDIUM_SLOW,87.5,!1),new M(e.EMBOAR,5,!1,!1,!1,"Mega Fire Pig Pokémon",L.FIRE,L.FIGHTING,1.6,150,O.BLAZE,O.NONE,O.RECKLESS,528,110,123,65,100,65,65,45,70,264,P.MEDIUM_SLOW,87.5,!1),new M(e.OSHAWOTT,5,!1,!1,!1,"Sea Otter Pokémon",L.WATER,null,.5,5.9,O.TORRENT,O.NONE,O.SHELL_ARMOR,308,55,55,45,63,45,45,45,70,62,P.MEDIUM_SLOW,87.5,!1),new M(e.DEWOTT,5,!1,!1,!1,"Discipline Pokémon",L.WATER,null,.8,24.5,O.TORRENT,O.NONE,O.SHELL_ARMOR,413,75,75,60,83,60,60,45,70,145,P.MEDIUM_SLOW,87.5,!1),new M(e.SAMUROTT,5,!1,!1,!1,"Formidable Pokémon",L.WATER,null,1.5,94.6,O.TORRENT,O.NONE,O.SHELL_ARMOR,528,95,100,85,108,70,70,45,70,264,P.MEDIUM_SLOW,87.5,!1),new M(e.PATRAT,5,!1,!1,!1,"Scout Pokémon",L.NORMAL,null,.5,11.6,O.RUN_AWAY,O.KEEN_EYE,O.ANALYTIC,255,45,55,39,35,39,42,255,70,51,P.MEDIUM_FAST,50,!1),new M(e.WATCHOG,5,!1,!1,!1,"Lookout Pokémon",L.NORMAL,null,1.1,27,O.ILLUMINATE,O.KEEN_EYE,O.ANALYTIC,420,60,85,69,60,69,77,255,70,147,P.MEDIUM_FAST,50,!1),new M(e.LILLIPUP,5,!1,!1,!1,"Puppy Pokémon",L.NORMAL,null,.4,4.1,O.VITAL_SPIRIT,O.PICKUP,O.RUN_AWAY,275,45,60,45,25,45,55,255,50,55,P.MEDIUM_SLOW,50,!1),new M(e.HERDIER,5,!1,!1,!1,"Loyal Dog Pokémon",L.NORMAL,null,.9,14.7,O.INTIMIDATE,O.SAND_RUSH,O.SCRAPPY,370,65,80,65,35,65,60,120,50,130,P.MEDIUM_SLOW,50,!1),new M(e.STOUTLAND,5,!1,!1,!1,"Big-Hearted Pokémon",L.NORMAL,null,1.2,61,O.INTIMIDATE,O.SAND_RUSH,O.SCRAPPY,500,85,110,90,45,90,80,45,50,250,P.MEDIUM_SLOW,50,!1),new M(e.PURRLOIN,5,!1,!1,!1,"Devious Pokémon",L.DARK,null,.4,10.1,O.LIMBER,O.UNBURDEN,O.PRANKSTER,281,41,50,37,50,37,66,255,50,56,P.MEDIUM_FAST,50,!1),new M(e.LIEPARD,5,!1,!1,!1,"Cruel Pokémon",L.DARK,null,1.1,37.5,O.LIMBER,O.UNBURDEN,O.PRANKSTER,446,64,88,50,88,50,106,90,50,156,P.MEDIUM_FAST,50,!1),new M(e.PANSAGE,5,!1,!1,!1,"Grass Monkey Pokémon",L.GRASS,null,.6,10.5,O.GLUTTONY,O.NONE,O.OVERGROW,316,50,53,48,53,48,64,190,70,63,P.MEDIUM_FAST,87.5,!1),new M(e.SIMISAGE,5,!1,!1,!1,"Thorn Monkey Pokémon",L.GRASS,null,1.1,30.5,O.GLUTTONY,O.NONE,O.OVERGROW,498,75,98,63,98,63,101,75,70,174,P.MEDIUM_FAST,87.5,!1),new M(e.PANSEAR,5,!1,!1,!1,"High Temp Pokémon",L.FIRE,null,.6,11,O.GLUTTONY,O.NONE,O.BLAZE,316,50,53,48,53,48,64,190,70,63,P.MEDIUM_FAST,87.5,!1),new M(e.SIMISEAR,5,!1,!1,!1,"Ember Pokémon",L.FIRE,null,1,28,O.GLUTTONY,O.NONE,O.BLAZE,498,75,98,63,98,63,101,75,70,174,P.MEDIUM_FAST,87.5,!1),new M(e.PANPOUR,5,!1,!1,!1,"Spray Pokémon",L.WATER,null,.6,13.5,O.GLUTTONY,O.NONE,O.TORRENT,316,50,53,48,53,48,64,190,70,63,P.MEDIUM_FAST,87.5,!1),new M(e.SIMIPOUR,5,!1,!1,!1,"Geyser Pokémon",L.WATER,null,1,29,O.GLUTTONY,O.NONE,O.TORRENT,498,75,98,63,98,63,101,75,70,174,P.MEDIUM_FAST,87.5,!1),new M(e.MUNNA,5,!1,!1,!1,"Dream Eater Pokémon",L.PSYCHIC,null,.6,23.3,O.FOREWARN,O.SYNCHRONIZE,O.TELEPATHY,292,76,25,45,67,55,24,190,50,58,P.FAST,50,!1),new M(e.MUSHARNA,5,!1,!1,!1,"Drowsing Pokémon",L.PSYCHIC,null,1.1,60.5,O.FOREWARN,O.SYNCHRONIZE,O.TELEPATHY,487,116,55,85,107,95,29,75,50,170,P.FAST,50,!1),new M(e.PIDOVE,5,!1,!1,!1,"Tiny Pigeon Pokémon",L.NORMAL,L.FLYING,.3,2.1,O.BIG_PECKS,O.SUPER_LUCK,O.RIVALRY,264,50,55,50,36,30,43,255,50,53,P.MEDIUM_SLOW,50,!1),new M(e.TRANQUILL,5,!1,!1,!1,"Wild Pigeon Pokémon",L.NORMAL,L.FLYING,.6,15,O.BIG_PECKS,O.SUPER_LUCK,O.RIVALRY,358,62,77,62,50,42,65,120,50,125,P.MEDIUM_SLOW,50,!1),new M(e.UNFEZANT,5,!1,!1,!1,"Proud Pokémon",L.NORMAL,L.FLYING,1.2,29,O.BIG_PECKS,O.SUPER_LUCK,O.RIVALRY,488,80,115,80,65,55,93,45,50,244,P.MEDIUM_SLOW,50,!0),new M(e.BLITZLE,5,!1,!1,!1,"Electrified Pokémon",L.ELECTRIC,null,.8,29.8,O.LIGHTNING_ROD,O.MOTOR_DRIVE,O.SAP_SIPPER,295,45,60,32,50,32,76,190,70,59,P.MEDIUM_FAST,50,!1),new M(e.ZEBSTRIKA,5,!1,!1,!1,"Thunderbolt Pokémon",L.ELECTRIC,null,1.6,79.5,O.LIGHTNING_ROD,O.MOTOR_DRIVE,O.SAP_SIPPER,497,75,100,63,80,63,116,75,70,174,P.MEDIUM_FAST,50,!1),new M(e.ROGGENROLA,5,!1,!1,!1,"Mantle Pokémon",L.ROCK,null,.4,18,O.STURDY,O.WEAK_ARMOR,O.SAND_FORCE,280,55,75,85,25,25,15,255,50,56,P.MEDIUM_SLOW,50,!1),new M(e.BOLDORE,5,!1,!1,!1,"Ore Pokémon",L.ROCK,null,.9,102,O.STURDY,O.WEAK_ARMOR,O.SAND_FORCE,390,70,105,105,50,40,20,120,50,137,P.MEDIUM_SLOW,50,!1),new M(e.GIGALITH,5,!1,!1,!1,"Compressed Pokémon",L.ROCK,null,1.7,260,O.STURDY,O.SAND_STREAM,O.SAND_FORCE,515,85,135,130,60,80,25,45,50,258,P.MEDIUM_SLOW,50,!1),new M(e.WOOBAT,5,!1,!1,!1,"Bat Pokémon",L.PSYCHIC,L.FLYING,.4,2.1,O.UNAWARE,O.KLUTZ,O.SIMPLE,323,65,45,43,55,43,72,190,50,65,P.MEDIUM_FAST,50,!1),new M(e.SWOOBAT,5,!1,!1,!1,"Courting Pokémon",L.PSYCHIC,L.FLYING,.9,10.5,O.UNAWARE,O.KLUTZ,O.SIMPLE,425,67,57,55,77,55,114,45,50,149,P.MEDIUM_FAST,50,!1),new M(e.DRILBUR,5,!1,!1,!1,"Mole Pokémon",L.GROUND,null,.3,8.5,O.SAND_RUSH,O.SAND_FORCE,O.MOLD_BREAKER,328,60,85,40,30,45,68,120,50,66,P.MEDIUM_FAST,50,!1),new M(e.EXCADRILL,5,!1,!1,!1,"Subterrene Pokémon",L.GROUND,L.STEEL,.7,40.4,O.SAND_RUSH,O.SAND_FORCE,O.MOLD_BREAKER,508,110,135,60,50,65,88,60,50,178,P.MEDIUM_FAST,50,!1),new M(e.AUDINO,5,!1,!1,!1,"Hearing Pokémon",L.NORMAL,null,1.1,31,O.HEALER,O.REGENERATOR,O.KLUTZ,445,103,60,86,60,86,50,255,50,390,P.FAST,50,!1,!0,new F("Normal","",L.NORMAL,null,1.1,31,O.HEALER,O.REGENERATOR,O.KLUTZ,445,103,60,86,60,86,50,255,50,390,!1,null,!0),new F("Mega",te.MEGA,L.NORMAL,L.FAIRY,1.5,32,O.REGENERATOR,O.REGENERATOR,O.REGENERATOR,545,103,60,126,80,126,50,255,50,390)),new M(e.TIMBURR,5,!1,!1,!1,"Muscular Pokémon",L.FIGHTING,null,.6,12.5,O.GUTS,O.SHEER_FORCE,O.IRON_FIST,305,75,80,55,25,35,35,180,70,61,P.MEDIUM_SLOW,75,!1),new M(e.GURDURR,5,!1,!1,!1,"Muscular Pokémon",L.FIGHTING,null,1.2,40,O.GUTS,O.SHEER_FORCE,O.IRON_FIST,405,85,105,85,40,50,40,90,50,142,P.MEDIUM_SLOW,75,!1),new M(e.CONKELDURR,5,!1,!1,!1,"Muscular Pokémon",L.FIGHTING,null,1.4,87,O.GUTS,O.SHEER_FORCE,O.IRON_FIST,505,105,140,95,55,65,45,45,50,253,P.MEDIUM_SLOW,75,!1),new M(e.TYMPOLE,5,!1,!1,!1,"Tadpole Pokémon",L.WATER,null,.5,4.5,O.SWIFT_SWIM,O.HYDRATION,O.WATER_ABSORB,294,50,50,40,50,40,64,255,50,59,P.MEDIUM_SLOW,50,!1),new M(e.PALPITOAD,5,!1,!1,!1,"Vibration Pokémon",L.WATER,L.GROUND,.8,17,O.SWIFT_SWIM,O.HYDRATION,O.WATER_ABSORB,384,75,65,55,65,55,69,120,50,134,P.MEDIUM_SLOW,50,!1),new M(e.SEISMITOAD,5,!1,!1,!1,"Vibration Pokémon",L.WATER,L.GROUND,1.5,62,O.SWIFT_SWIM,O.POISON_TOUCH,O.WATER_ABSORB,509,105,95,75,85,75,74,45,50,255,P.MEDIUM_SLOW,50,!1),new M(e.THROH,5,!1,!1,!1,"Judo Pokémon",L.FIGHTING,null,1.3,55.5,O.GUTS,O.INNER_FOCUS,O.MOLD_BREAKER,465,120,100,85,30,85,45,45,50,163,P.MEDIUM_FAST,100,!1),new M(e.SAWK,5,!1,!1,!1,"Karate Pokémon",L.FIGHTING,null,1.4,51,O.STURDY,O.INNER_FOCUS,O.MOLD_BREAKER,465,75,125,75,30,75,85,45,50,163,P.MEDIUM_FAST,100,!1),new M(e.SEWADDLE,5,!1,!1,!1,"Sewing Pokémon",L.BUG,L.GRASS,.3,2.5,O.SWARM,O.CHLOROPHYLL,O.OVERCOAT,310,45,53,70,40,60,42,255,70,62,P.MEDIUM_SLOW,50,!1),new M(e.SWADLOON,5,!1,!1,!1,"Leaf-Wrapped Pokémon",L.BUG,L.GRASS,.5,7.3,O.LEAF_GUARD,O.CHLOROPHYLL,O.OVERCOAT,380,55,63,90,50,80,42,120,70,133,P.MEDIUM_SLOW,50,!1),new M(e.LEAVANNY,5,!1,!1,!1,"Nurturing Pokémon",L.BUG,L.GRASS,1.2,20.5,O.SWARM,O.CHLOROPHYLL,O.OVERCOAT,500,75,103,80,70,80,92,45,70,250,P.MEDIUM_SLOW,50,!1),new M(e.VENIPEDE,5,!1,!1,!1,"Centipede Pokémon",L.BUG,L.POISON,.4,5.3,O.POISON_POINT,O.SWARM,O.SPEED_BOOST,260,30,45,59,30,39,57,255,50,52,P.MEDIUM_SLOW,50,!1),new M(e.WHIRLIPEDE,5,!1,!1,!1,"Curlipede Pokémon",L.BUG,L.POISON,1.2,58.5,O.POISON_POINT,O.SWARM,O.SPEED_BOOST,360,40,55,99,40,79,47,120,50,126,P.MEDIUM_SLOW,50,!1),new M(e.SCOLIPEDE,5,!1,!1,!1,"Megapede Pokémon",L.BUG,L.POISON,2.5,200.5,O.POISON_POINT,O.SWARM,O.SPEED_BOOST,485,60,100,89,55,69,112,45,50,243,P.MEDIUM_SLOW,50,!1),new M(e.COTTONEE,5,!1,!1,!1,"Cotton Puff Pokémon",L.GRASS,L.FAIRY,.3,.6,O.PRANKSTER,O.INFILTRATOR,O.CHLOROPHYLL,280,40,27,60,37,50,66,190,50,56,P.MEDIUM_FAST,50,!1),new M(e.WHIMSICOTT,5,!1,!1,!1,"Windveiled Pokémon",L.GRASS,L.FAIRY,.7,6.6,O.PRANKSTER,O.INFILTRATOR,O.CHLOROPHYLL,480,60,67,85,77,75,116,75,50,168,P.MEDIUM_FAST,50,!1),new M(e.PETILIL,5,!1,!1,!1,"Bulb Pokémon",L.GRASS,null,.5,6.6,O.CHLOROPHYLL,O.OWN_TEMPO,O.LEAF_GUARD,280,45,35,50,70,50,30,190,50,56,P.MEDIUM_FAST,0,!1),new M(e.LILLIGANT,5,!1,!1,!1,"Flowering Pokémon",L.GRASS,null,1.1,16.3,O.CHLOROPHYLL,O.OWN_TEMPO,O.LEAF_GUARD,480,70,60,75,110,75,90,75,50,168,P.MEDIUM_FAST,0,!1),new M(e.BASCULIN,5,!1,!1,!1,"Hostile Pokémon",L.WATER,null,1,18,O.RECKLESS,O.ADAPTABILITY,O.MOLD_BREAKER,460,70,92,65,80,55,98,25,50,161,P.MEDIUM_FAST,50,!1,!1,new F("Red-Striped Form","red-striped",L.WATER,null,1,18,O.RECKLESS,O.ADAPTABILITY,O.MOLD_BREAKER,460,70,92,65,80,55,98,25,50,161,!1,null,!0),new F("Blue-Striped Form","blue-striped",L.WATER,null,1,18,O.ROCK_HEAD,O.ADAPTABILITY,O.MOLD_BREAKER,460,70,92,65,80,55,98,25,50,161,!1,null,!0),new F("White-Striped Form","white-striped",L.WATER,null,1,18,O.RATTLED,O.ADAPTABILITY,O.MOLD_BREAKER,460,70,92,65,80,55,98,25,50,161,!1,null,!0)),new M(e.SANDILE,5,!1,!1,!1,"Desert Croc Pokémon",L.GROUND,L.DARK,.7,15.2,O.INTIMIDATE,O.MOXIE,O.ANGER_POINT,292,50,72,35,35,35,65,180,50,58,P.MEDIUM_SLOW,50,!1),new M(e.KROKOROK,5,!1,!1,!1,"Desert Croc Pokémon",L.GROUND,L.DARK,1,33.4,O.INTIMIDATE,O.MOXIE,O.ANGER_POINT,351,60,82,45,45,45,74,90,50,123,P.MEDIUM_SLOW,50,!1),new M(e.KROOKODILE,5,!1,!1,!1,"Intimidation Pokémon",L.GROUND,L.DARK,1.5,96.3,O.INTIMIDATE,O.MOXIE,O.ANGER_POINT,519,95,117,80,65,70,92,45,50,260,P.MEDIUM_SLOW,50,!1),new M(e.DARUMAKA,5,!1,!1,!1,"Zen Charm Pokémon",L.FIRE,null,.6,37.5,O.HUSTLE,O.NONE,O.INNER_FOCUS,315,70,90,45,15,45,50,120,50,63,P.MEDIUM_SLOW,50,!1),new M(e.DARMANITAN,5,!1,!1,!1,"Blazing Pokémon",L.FIRE,null,1.3,92.9,O.SHEER_FORCE,O.NONE,O.ZEN_MODE,480,105,140,55,30,55,95,60,50,168,P.MEDIUM_SLOW,50,!1,!0,new F("Standard Mode","",L.FIRE,null,1.3,92.9,O.SHEER_FORCE,O.NONE,O.ZEN_MODE,480,105,140,55,30,55,95,60,50,168,!1,null,!0),new F("Zen Mode","zen",L.FIRE,L.PSYCHIC,1.3,92.9,O.SHEER_FORCE,O.NONE,O.ZEN_MODE,540,105,30,105,140,105,55,60,50,189)),new M(e.MARACTUS,5,!1,!1,!1,"Cactus Pokémon",L.GRASS,null,1,28,O.WATER_ABSORB,O.CHLOROPHYLL,O.STORM_DRAIN,461,75,86,67,106,67,60,255,50,161,P.MEDIUM_FAST,50,!1),new M(e.DWEBBLE,5,!1,!1,!1,"Rock Inn Pokémon",L.BUG,L.ROCK,.3,14.5,O.STURDY,O.SHELL_ARMOR,O.WEAK_ARMOR,325,50,65,85,35,35,55,190,50,65,P.MEDIUM_FAST,50,!1),new M(e.CRUSTLE,5,!1,!1,!1,"Stone Home Pokémon",L.BUG,L.ROCK,1.4,200,O.STURDY,O.SHELL_ARMOR,O.WEAK_ARMOR,485,70,105,125,65,75,45,75,50,170,P.MEDIUM_FAST,50,!1),new M(e.SCRAGGY,5,!1,!1,!1,"Shedding Pokémon",L.DARK,L.FIGHTING,.6,11.8,O.SHED_SKIN,O.MOXIE,O.INTIMIDATE,348,50,75,70,35,70,48,180,35,70,P.MEDIUM_FAST,50,!1),new M(e.SCRAFTY,5,!1,!1,!1,"Hoodlum Pokémon",L.DARK,L.FIGHTING,1.1,30,O.SHED_SKIN,O.MOXIE,O.INTIMIDATE,488,65,90,115,45,115,58,90,50,171,P.MEDIUM_FAST,50,!1),new M(e.SIGILYPH,5,!1,!1,!1,"Avianoid Pokémon",L.PSYCHIC,L.FLYING,1.4,14,O.WONDER_SKIN,O.MAGIC_GUARD,O.TINTED_LENS,490,72,58,80,103,80,97,45,50,172,P.MEDIUM_FAST,50,!1),new M(e.YAMASK,5,!1,!1,!1,"Spirit Pokémon",L.GHOST,null,.5,1.5,O.MUMMY,O.NONE,O.NONE,303,38,30,85,55,65,30,190,50,61,P.MEDIUM_FAST,50,!1),new M(e.COFAGRIGUS,5,!1,!1,!1,"Coffin Pokémon",L.GHOST,null,1.7,76.5,O.MUMMY,O.NONE,O.NONE,483,58,50,145,95,105,30,90,50,169,P.MEDIUM_FAST,50,!1),new M(e.TIRTOUGA,5,!1,!1,!1,"Prototurtle Pokémon",L.WATER,L.ROCK,.7,16.5,O.SOLID_ROCK,O.STURDY,O.SWIFT_SWIM,355,54,78,103,53,45,22,45,50,71,P.MEDIUM_FAST,87.5,!1),new M(e.CARRACOSTA,5,!1,!1,!1,"Prototurtle Pokémon",L.WATER,L.ROCK,1.2,81,O.SOLID_ROCK,O.STURDY,O.SWIFT_SWIM,495,74,108,133,83,65,32,45,50,173,P.MEDIUM_FAST,87.5,!1),new M(e.ARCHEN,5,!1,!1,!1,"First Bird Pokémon",L.ROCK,L.FLYING,.5,9.5,O.DEFEATIST,O.NONE,O.WIMP_OUT,401,55,112,45,74,45,70,45,50,71,P.MEDIUM_FAST,87.5,!1),new M(e.ARCHEOPS,5,!1,!1,!1,"First Bird Pokémon",L.ROCK,L.FLYING,1.4,32,O.DEFEATIST,O.NONE,O.EMERGENCY_EXIT,567,75,140,65,112,65,110,45,50,177,P.MEDIUM_FAST,87.5,!1),new M(e.TRUBBISH,5,!1,!1,!1,"Trash Bag Pokémon",L.POISON,null,.6,31,O.STENCH,O.STICKY_HOLD,O.AFTERMATH,329,50,50,62,40,62,65,190,50,66,P.MEDIUM_FAST,50,!1),new M(e.GARBODOR,5,!1,!1,!1,"Trash Heap Pokémon",L.POISON,null,1.9,107.3,O.STENCH,O.WEAK_ARMOR,O.AFTERMATH,474,80,95,82,60,82,75,60,50,166,P.MEDIUM_FAST,50,!1,!0,new F("Normal","",L.POISON,null,1.9,107.3,O.STENCH,O.WEAK_ARMOR,O.AFTERMATH,474,80,95,82,60,82,75,60,50,166,!1,null,!0),new F("G-Max",te.GIGANTAMAX,L.POISON,L.STEEL,21,999.9,O.TOXIC_DEBRIS,O.TOXIC_DEBRIS,O.TOXIC_DEBRIS,574,115,121,102,81,102,53,60,50,166)),new M(e.ZORUA,5,!1,!1,!1,"Tricky Fox Pokémon",L.DARK,null,.7,12.5,O.ILLUSION,O.NONE,O.NONE,330,40,65,40,80,40,65,75,50,66,P.MEDIUM_SLOW,87.5,!1),new M(e.ZOROARK,5,!1,!1,!1,"Illusion Fox Pokémon",L.DARK,null,1.6,81.1,O.ILLUSION,O.NONE,O.NONE,510,60,105,60,120,60,105,45,50,179,P.MEDIUM_SLOW,87.5,!1),new M(e.MINCCINO,5,!1,!1,!1,"Chinchilla Pokémon",L.NORMAL,null,.4,5.8,O.CUTE_CHARM,O.TECHNICIAN,O.SKILL_LINK,300,55,50,40,40,40,75,255,50,60,P.FAST,25,!1),new M(e.CINCCINO,5,!1,!1,!1,"Scarf Pokémon",L.NORMAL,null,.5,7.5,O.CUTE_CHARM,O.TECHNICIAN,O.SKILL_LINK,470,75,95,60,65,60,115,60,50,165,P.FAST,25,!1),new M(e.GOTHITA,5,!1,!1,!1,"Fixation Pokémon",L.PSYCHIC,null,.4,5.8,O.FRISK,O.COMPETITIVE,O.SHADOW_TAG,290,45,30,50,55,65,45,200,50,58,P.MEDIUM_SLOW,25,!1),new M(e.GOTHORITA,5,!1,!1,!1,"Manipulate Pokémon",L.PSYCHIC,null,.7,18,O.FRISK,O.COMPETITIVE,O.SHADOW_TAG,390,60,45,70,75,85,55,100,50,137,P.MEDIUM_SLOW,25,!1),new M(e.GOTHITELLE,5,!1,!1,!1,"Astral Body Pokémon",L.PSYCHIC,null,1.5,44,O.FRISK,O.COMPETITIVE,O.SHADOW_TAG,490,70,55,95,95,110,65,50,50,245,P.MEDIUM_SLOW,25,!1),new M(e.SOLOSIS,5,!1,!1,!1,"Cell Pokémon",L.PSYCHIC,null,.3,1,O.OVERCOAT,O.MAGIC_GUARD,O.REGENERATOR,290,45,30,40,105,50,20,200,50,58,P.MEDIUM_SLOW,50,!1),new M(e.DUOSION,5,!1,!1,!1,"Mitosis Pokémon",L.PSYCHIC,null,.6,8,O.OVERCOAT,O.MAGIC_GUARD,O.REGENERATOR,370,65,40,50,125,60,30,100,50,130,P.MEDIUM_SLOW,50,!1),new M(e.REUNICLUS,5,!1,!1,!1,"Multiplying Pokémon",L.PSYCHIC,null,1,20.1,O.OVERCOAT,O.MAGIC_GUARD,O.REGENERATOR,490,110,65,75,125,85,30,50,50,245,P.MEDIUM_SLOW,50,!1),new M(e.DUCKLETT,5,!1,!1,!1,"Water Bird Pokémon",L.WATER,L.FLYING,.5,5.5,O.KEEN_EYE,O.BIG_PECKS,O.HYDRATION,305,62,44,50,44,50,55,190,70,61,P.MEDIUM_FAST,50,!1),new M(e.SWANNA,5,!1,!1,!1,"White Bird Pokémon",L.WATER,L.FLYING,1.3,24.2,O.KEEN_EYE,O.BIG_PECKS,O.HYDRATION,473,75,87,63,87,63,98,45,70,166,P.MEDIUM_FAST,50,!1),new M(e.VANILLITE,5,!1,!1,!1,"Fresh Snow Pokémon",L.ICE,null,.4,5.7,O.ICE_BODY,O.SNOW_CLOAK,O.WEAK_ARMOR,305,36,50,50,65,60,44,255,50,61,P.SLOW,50,!1),new M(e.VANILLISH,5,!1,!1,!1,"Icy Snow Pokémon",L.ICE,null,1.1,41,O.ICE_BODY,O.SNOW_CLOAK,O.WEAK_ARMOR,395,51,65,65,80,75,59,120,50,138,P.SLOW,50,!1),new M(e.VANILLUXE,5,!1,!1,!1,"Snowstorm Pokémon",L.ICE,null,1.3,57.5,O.ICE_BODY,O.SNOW_WARNING,O.WEAK_ARMOR,535,71,95,85,110,95,79,45,50,268,P.SLOW,50,!1),new M(e.DEERLING,5,!1,!1,!1,"Season Pokémon",L.NORMAL,L.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,P.MEDIUM_FAST,50,!1,!0,new F("Spring Form","spring",L.NORMAL,L.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,!1,null,!0),new F("Summer Form","summer",L.NORMAL,L.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,!1,null,!0),new F("Autumn Form","autumn",L.NORMAL,L.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,!1,null,!0),new F("Winter Form","winter",L.NORMAL,L.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,!1,null,!0)),new M(e.SAWSBUCK,5,!1,!1,!1,"Season Pokémon",L.NORMAL,L.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,P.MEDIUM_FAST,50,!1,!0,new F("Spring Form","spring",L.NORMAL,L.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,!1,null,!0),new F("Summer Form","summer",L.NORMAL,L.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,!1,null,!0),new F("Autumn Form","autumn",L.NORMAL,L.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,!1,null,!0),new F("Winter Form","winter",L.NORMAL,L.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,!1,null,!0)),new M(e.EMOLGA,5,!1,!1,!1,"Sky Squirrel Pokémon",L.ELECTRIC,L.FLYING,.4,5,O.STATIC,O.NONE,O.MOTOR_DRIVE,428,55,75,60,75,60,103,200,50,150,P.MEDIUM_FAST,50,!1),new M(e.KARRABLAST,5,!1,!1,!1,"Clamping Pokémon",L.BUG,null,.5,5.9,O.SWARM,O.SHED_SKIN,O.NO_GUARD,315,50,75,45,40,45,60,200,50,63,P.MEDIUM_FAST,50,!1),new M(e.ESCAVALIER,5,!1,!1,!1,"Cavalry Pokémon",L.BUG,L.STEEL,1,33,O.SWARM,O.SHELL_ARMOR,O.OVERCOAT,495,70,135,105,60,105,20,75,50,173,P.MEDIUM_FAST,50,!1),new M(e.FOONGUS,5,!1,!1,!1,"Mushroom Pokémon",L.GRASS,L.POISON,.2,1,O.EFFECT_SPORE,O.NONE,O.REGENERATOR,294,69,55,45,55,55,15,190,50,59,P.MEDIUM_FAST,50,!1),new M(e.AMOONGUSS,5,!1,!1,!1,"Mushroom Pokémon",L.GRASS,L.POISON,.6,10.5,O.EFFECT_SPORE,O.NONE,O.REGENERATOR,464,114,85,70,85,80,30,75,50,162,P.MEDIUM_FAST,50,!1),new M(e.FRILLISH,5,!1,!1,!1,"Floating Pokémon",L.WATER,L.GHOST,1.2,33,O.WATER_ABSORB,O.CURSED_BODY,O.DAMP,335,55,40,50,65,85,40,190,50,67,P.MEDIUM_FAST,50,!0),new M(e.JELLICENT,5,!1,!1,!1,"Floating Pokémon",L.WATER,L.GHOST,2.2,135,O.WATER_ABSORB,O.CURSED_BODY,O.DAMP,480,100,60,70,85,105,60,60,50,168,P.MEDIUM_FAST,50,!0),new M(e.ALOMOMOLA,5,!1,!1,!1,"Caring Pokémon",L.WATER,null,1.2,31.6,O.HEALER,O.HYDRATION,O.REGENERATOR,470,165,75,80,40,45,65,75,70,165,P.FAST,50,!1),new M(e.JOLTIK,5,!1,!1,!1,"Attaching Pokémon",L.BUG,L.ELECTRIC,.1,.6,O.COMPOUND_EYES,O.UNNERVE,O.SWARM,319,50,47,50,57,50,65,190,50,64,P.MEDIUM_FAST,50,!1),new M(e.GALVANTULA,5,!1,!1,!1,"EleSpider Pokémon",L.BUG,L.ELECTRIC,.8,14.3,O.COMPOUND_EYES,O.UNNERVE,O.SWARM,472,70,77,60,97,60,108,75,50,165,P.MEDIUM_FAST,50,!1),new M(e.FERROSEED,5,!1,!1,!1,"Thorn Seed Pokémon",L.GRASS,L.STEEL,.6,18.8,O.IRON_BARBS,O.NONE,O.ANTICIPATION,305,44,50,91,24,86,10,255,50,61,P.MEDIUM_FAST,50,!1),new M(e.FERROTHORN,5,!1,!1,!1,"Thorn Pod Pokémon",L.GRASS,L.STEEL,1,110,O.IRON_BARBS,O.NONE,O.ANTICIPATION,489,74,94,131,54,116,20,90,50,171,P.MEDIUM_FAST,50,!1),new M(e.KLINK,5,!1,!1,!1,"Gear Pokémon",L.STEEL,null,.3,21,O.PLUS,O.MINUS,O.CLEAR_BODY,300,40,55,70,45,60,30,130,50,60,P.MEDIUM_SLOW,null,!1),new M(e.KLANG,5,!1,!1,!1,"Gear Pokémon",L.STEEL,null,.6,51,O.PLUS,O.MINUS,O.CLEAR_BODY,440,60,80,95,70,85,50,60,50,154,P.MEDIUM_SLOW,null,!1),new M(e.KLINKLANG,5,!1,!1,!1,"Gear Pokémon",L.STEEL,null,.6,81,O.PLUS,O.MINUS,O.CLEAR_BODY,520,60,100,115,70,85,90,30,50,260,P.MEDIUM_SLOW,null,!1),new M(e.TYNAMO,5,!1,!1,!1,"EleFish Pokémon",L.ELECTRIC,null,.2,.3,O.LEVITATE,O.NONE,O.NONE,275,35,55,40,45,40,60,190,70,55,P.SLOW,50,!1),new M(e.EELEKTRIK,5,!1,!1,!1,"EleFish Pokémon",L.ELECTRIC,null,1.2,22,O.LEVITATE,O.NONE,O.NONE,405,65,85,70,75,70,40,60,70,142,P.SLOW,50,!1),new M(e.EELEKTROSS,5,!1,!1,!1,"EleFish Pokémon",L.ELECTRIC,null,2.1,80.5,O.LEVITATE,O.NONE,O.NONE,515,85,115,80,105,80,50,30,70,258,P.SLOW,50,!1),new M(e.ELGYEM,5,!1,!1,!1,"Cerebral Pokémon",L.PSYCHIC,null,.5,9,O.TELEPATHY,O.SYNCHRONIZE,O.ANALYTIC,335,55,55,55,85,55,30,255,50,67,P.MEDIUM_FAST,50,!1),new M(e.BEHEEYEM,5,!1,!1,!1,"Cerebral Pokémon",L.PSYCHIC,null,1,34.5,O.TELEPATHY,O.SYNCHRONIZE,O.ANALYTIC,485,75,75,75,125,95,40,90,50,170,P.MEDIUM_FAST,50,!1),new M(e.LITWICK,5,!1,!1,!1,"Candle Pokémon",L.GHOST,L.FIRE,.3,3.1,O.FLASH_FIRE,O.FLAME_BODY,O.INFILTRATOR,275,50,30,55,65,55,20,190,50,55,P.MEDIUM_SLOW,50,!1),new M(e.LAMPENT,5,!1,!1,!1,"Lamp Pokémon",L.GHOST,L.FIRE,.6,13,O.FLASH_FIRE,O.FLAME_BODY,O.INFILTRATOR,370,60,40,60,95,60,55,90,50,130,P.MEDIUM_SLOW,50,!1),new M(e.CHANDELURE,5,!1,!1,!1,"Luring Pokémon",L.GHOST,L.FIRE,1,34.3,O.FLASH_FIRE,O.FLAME_BODY,O.INFILTRATOR,520,60,55,90,145,90,80,45,50,260,P.MEDIUM_SLOW,50,!1),new M(e.AXEW,5,!1,!1,!1,"Tusk Pokémon",L.DRAGON,null,.6,18,O.RIVALRY,O.MOLD_BREAKER,O.UNNERVE,320,46,87,60,30,40,57,75,35,64,P.SLOW,50,!1),new M(e.FRAXURE,5,!1,!1,!1,"Axe Jaw Pokémon",L.DRAGON,null,1,36,O.RIVALRY,O.MOLD_BREAKER,O.UNNERVE,410,66,117,70,40,50,67,60,35,144,P.SLOW,50,!1),new M(e.HAXORUS,5,!1,!1,!1,"Axe Jaw Pokémon",L.DRAGON,null,1.8,105.5,O.RIVALRY,O.MOLD_BREAKER,O.UNNERVE,540,76,147,90,60,70,97,45,35,270,P.SLOW,50,!1),new M(e.CUBCHOO,5,!1,!1,!1,"Chill Pokémon",L.ICE,null,.5,8.5,O.SNOW_CLOAK,O.SLUSH_RUSH,O.RATTLED,305,55,70,40,60,40,40,120,50,61,P.MEDIUM_FAST,50,!1),new M(e.BEARTIC,5,!1,!1,!1,"Freezing Pokémon",L.ICE,null,2.6,260,O.SNOW_CLOAK,O.SLUSH_RUSH,O.SWIFT_SWIM,505,95,130,80,70,80,50,60,50,177,P.MEDIUM_FAST,50,!1),new M(e.CRYOGONAL,5,!1,!1,!1,"Crystallizing Pokémon",L.ICE,null,1.1,148,O.LEVITATE,O.NONE,O.NONE,515,80,50,50,95,135,105,25,50,180,P.MEDIUM_FAST,null,!1),new M(e.SHELMET,5,!1,!1,!1,"Snail Pokémon",L.BUG,null,.4,7.7,O.HYDRATION,O.SHELL_ARMOR,O.OVERCOAT,305,50,40,85,40,65,25,200,50,61,P.MEDIUM_FAST,50,!1),new M(e.ACCELGOR,5,!1,!1,!1,"Shell Out Pokémon",L.BUG,null,.8,25.3,O.HYDRATION,O.STICKY_HOLD,O.UNBURDEN,495,80,70,40,100,60,145,75,50,173,P.MEDIUM_FAST,50,!1),new M(e.STUNFISK,5,!1,!1,!1,"Trap Pokémon",L.GROUND,L.ELECTRIC,.7,11,O.STATIC,O.LIMBER,O.SAND_VEIL,471,109,66,84,81,99,32,75,70,165,P.MEDIUM_FAST,50,!1),new M(e.MIENFOO,5,!1,!1,!1,"Martial Arts Pokémon",L.FIGHTING,null,.9,20,O.INNER_FOCUS,O.REGENERATOR,O.RECKLESS,350,45,85,50,55,50,65,180,50,70,P.MEDIUM_SLOW,50,!1),new M(e.MIENSHAO,5,!1,!1,!1,"Martial Arts Pokémon",L.FIGHTING,null,1.4,35.5,O.INNER_FOCUS,O.REGENERATOR,O.RECKLESS,510,65,125,60,95,60,105,45,50,179,P.MEDIUM_SLOW,50,!1),new M(e.DRUDDIGON,5,!1,!1,!1,"Cave Pokémon",L.DRAGON,null,1.6,139,O.ROUGH_SKIN,O.SHEER_FORCE,O.MOLD_BREAKER,485,77,120,90,60,90,48,45,50,170,P.MEDIUM_FAST,50,!1),new M(e.GOLETT,5,!1,!1,!1,"Automaton Pokémon",L.GROUND,L.GHOST,1,92,O.IRON_FIST,O.KLUTZ,O.NO_GUARD,303,59,74,50,35,50,35,190,50,61,P.MEDIUM_FAST,null,!1),new M(e.GOLURK,5,!1,!1,!1,"Automaton Pokémon",L.GROUND,L.GHOST,2.8,330,O.IRON_FIST,O.KLUTZ,O.NO_GUARD,483,89,124,80,55,80,55,90,50,169,P.MEDIUM_FAST,null,!1),new M(e.PAWNIARD,5,!1,!1,!1,"Sharp Blade Pokémon",L.DARK,L.STEEL,.5,10.2,O.DEFIANT,O.INNER_FOCUS,O.PRESSURE,340,45,85,70,40,40,60,120,35,68,P.MEDIUM_FAST,50,!1),new M(e.BISHARP,5,!1,!1,!1,"Sword Blade Pokémon",L.DARK,L.STEEL,1.6,70,O.DEFIANT,O.INNER_FOCUS,O.PRESSURE,490,65,125,100,60,70,70,45,35,172,P.MEDIUM_FAST,50,!1),new M(e.BOUFFALANT,5,!1,!1,!1,"Bash Buffalo Pokémon",L.NORMAL,null,1.6,94.6,O.RECKLESS,O.SAP_SIPPER,O.SOUNDPROOF,490,95,110,95,40,95,55,45,50,172,P.MEDIUM_FAST,50,!1),new M(e.RUFFLET,5,!1,!1,!1,"Eaglet Pokémon",L.NORMAL,L.FLYING,.5,10.5,O.KEEN_EYE,O.SHEER_FORCE,O.HUSTLE,350,70,83,50,37,50,60,190,50,70,P.SLOW,100,!1),new M(e.BRAVIARY,5,!1,!1,!1,"Valiant Pokémon",L.NORMAL,L.FLYING,1.5,41,O.KEEN_EYE,O.SHEER_FORCE,O.DEFIANT,510,100,123,75,57,75,80,60,50,179,P.SLOW,100,!1),new M(e.VULLABY,5,!1,!1,!1,"Diapered Pokémon",L.DARK,L.FLYING,.5,9,O.BIG_PECKS,O.OVERCOAT,O.WEAK_ARMOR,370,70,55,75,45,65,60,190,35,74,P.SLOW,0,!1),new M(e.MANDIBUZZ,5,!1,!1,!1,"Bone Vulture Pokémon",L.DARK,L.FLYING,1.2,39.5,O.BIG_PECKS,O.OVERCOAT,O.WEAK_ARMOR,510,110,65,105,55,95,80,60,35,179,P.SLOW,0,!1),new M(e.HEATMOR,5,!1,!1,!1,"Anteater Pokémon",L.FIRE,null,1.4,58,O.GLUTTONY,O.FLASH_FIRE,O.WHITE_SMOKE,484,85,97,66,105,66,65,90,50,169,P.MEDIUM_FAST,50,!1),new M(e.DURANT,5,!1,!1,!1,"Iron Ant Pokémon",L.BUG,L.STEEL,.3,33,O.SWARM,O.HUSTLE,O.TRUANT,484,58,109,112,48,48,109,90,50,169,P.MEDIUM_FAST,50,!1),new M(e.DEINO,5,!1,!1,!1,"Irate Pokémon",L.DARK,L.DRAGON,.8,17.3,O.HUSTLE,O.NONE,O.NONE,300,52,65,50,45,50,38,45,35,60,P.SLOW,50,!1),new M(e.ZWEILOUS,5,!1,!1,!1,"Hostile Pokémon",L.DARK,L.DRAGON,1.4,50,O.HUSTLE,O.NONE,O.NONE,420,72,85,70,65,70,58,45,35,147,P.SLOW,50,!1),new M(e.HYDREIGON,5,!1,!1,!1,"Brutal Pokémon",L.DARK,L.DRAGON,1.8,160,O.LEVITATE,O.NONE,O.NONE,600,92,105,90,125,90,98,45,35,300,P.SLOW,50,!1),new M(e.LARVESTA,5,!1,!1,!1,"Torch Pokémon",L.BUG,L.FIRE,1.1,28.8,O.FLAME_BODY,O.NONE,O.SWARM,360,55,85,55,50,55,60,45,50,72,P.SLOW,50,!1),new M(e.VOLCARONA,5,!1,!1,!1,"Sun Pokémon",L.BUG,L.FIRE,1.6,46,O.FLAME_BODY,O.NONE,O.SWARM,550,85,60,65,135,105,100,15,50,275,P.SLOW,50,!1),new M(e.COBALION,5,!0,!1,!1,"Iron Will Pokémon",L.STEEL,L.FIGHTING,2.1,250,O.JUSTIFIED,O.NONE,O.NONE,580,91,90,129,90,72,108,3,35,290,P.SLOW,null,!1),new M(e.TERRAKION,5,!0,!1,!1,"Cavern Pokémon",L.ROCK,L.FIGHTING,1.9,260,O.JUSTIFIED,O.NONE,O.NONE,580,91,129,90,72,90,108,3,35,290,P.SLOW,null,!1),new M(e.VIRIZION,5,!0,!1,!1,"Grassland Pokémon",L.GRASS,L.FIGHTING,2,200,O.JUSTIFIED,O.NONE,O.NONE,580,91,90,72,90,129,108,3,35,290,P.SLOW,null,!1),new M(e.TORNADUS,5,!0,!1,!1,"Cyclone Pokémon",L.FLYING,null,1.5,63,O.PRANKSTER,O.NONE,O.DEFIANT,580,79,115,70,125,80,111,3,90,290,P.SLOW,100,!1,!0,new F("Incarnate Forme","incarnate",L.FLYING,null,1.5,63,O.PRANKSTER,O.NONE,O.DEFIANT,580,79,115,70,125,80,111,3,90,290,!1,null,!0),new F("Therian Forme","therian",L.FLYING,null,1.4,63,O.REGENERATOR,O.NONE,O.REGENERATOR,580,79,100,80,110,90,121,3,90,290)),new M(e.THUNDURUS,5,!0,!1,!1,"Bolt Strike Pokémon",L.ELECTRIC,L.FLYING,1.5,61,O.PRANKSTER,O.NONE,O.DEFIANT,580,79,115,70,125,80,111,3,90,290,P.SLOW,100,!1,!0,new F("Incarnate Forme","incarnate",L.ELECTRIC,L.FLYING,1.5,61,O.PRANKSTER,O.NONE,O.DEFIANT,580,79,115,70,125,80,111,3,90,290,!1,null,!0),new F("Therian Forme","therian",L.ELECTRIC,L.FLYING,3,61,O.VOLT_ABSORB,O.NONE,O.VOLT_ABSORB,580,79,105,70,145,80,101,3,90,290)),new M(e.RESHIRAM,5,!1,!0,!1,"Vast White Pokémon",L.DRAGON,L.FIRE,3.2,330,O.TURBOBLAZE,O.NONE,O.NONE,680,100,120,100,150,120,90,3,0,340,P.SLOW,null,!1),new M(e.ZEKROM,5,!1,!0,!1,"Deep Black Pokémon",L.DRAGON,L.ELECTRIC,2.9,345,O.TERAVOLT,O.NONE,O.NONE,680,100,150,120,120,100,90,3,0,340,P.SLOW,null,!1),new M(e.LANDORUS,5,!0,!1,!1,"Abundance Pokémon",L.GROUND,L.FLYING,1.5,68,O.SAND_FORCE,O.NONE,O.SHEER_FORCE,600,89,125,90,115,80,101,3,90,300,P.SLOW,100,!1,!0,new F("Incarnate Forme","incarnate",L.GROUND,L.FLYING,1.5,68,O.SAND_FORCE,O.NONE,O.SHEER_FORCE,600,89,125,90,115,80,101,3,90,300,!1,null,!0),new F("Therian Forme","therian",L.GROUND,L.FLYING,1.3,68,O.INTIMIDATE,O.NONE,O.INTIMIDATE,600,89,145,90,105,80,91,3,90,300)),new M(e.KYUREM,5,!1,!0,!1,"Boundary Pokémon",L.DRAGON,L.ICE,3,325,O.PRESSURE,O.NONE,O.NONE,660,125,130,90,130,90,95,3,0,330,P.SLOW,null,!1,!0,new F("Normal","",L.DRAGON,L.ICE,3,325,O.PRESSURE,O.NONE,O.NONE,660,125,130,90,130,90,95,3,0,330,!1,null,!0),new F("Black","black",L.DRAGON,L.ICE,3.3,325,O.TERAVOLT,O.NONE,O.NONE,700,125,170,100,120,90,95,3,0,350),new F("White","white",L.DRAGON,L.ICE,3.6,325,O.TURBOBLAZE,O.NONE,O.NONE,700,125,120,90,170,100,95,3,0,350)),new M(e.KELDEO,5,!1,!1,!0,"Colt Pokémon",L.WATER,L.FIGHTING,1.4,48.5,O.JUSTIFIED,O.NONE,O.NONE,580,91,72,90,129,90,108,3,35,290,P.SLOW,null,!1,!0,new F("Ordinary Form","ordinary",L.WATER,L.FIGHTING,1.4,48.5,O.JUSTIFIED,O.NONE,O.NONE,580,91,72,90,129,90,108,3,35,290,!1,null,!0),new F("Resolute","resolute",L.WATER,L.FIGHTING,1.4,48.5,O.JUSTIFIED,O.NONE,O.NONE,580,91,72,90,129,90,108,3,35,290)),new M(e.MELOETTA,5,!1,!1,!0,"Melody Pokémon",L.NORMAL,L.PSYCHIC,.6,6.5,O.SERENE_GRACE,O.NONE,O.NONE,600,100,77,77,128,128,90,3,100,300,P.SLOW,null,!1,!0,new F("Aria Forme","aria",L.NORMAL,L.PSYCHIC,.6,6.5,O.SERENE_GRACE,O.NONE,O.NONE,600,100,77,77,128,128,90,3,100,300,!1,null,!0),new F("Pirouette Forme","pirouette",L.NORMAL,L.FIGHTING,.6,6.5,O.SERENE_GRACE,O.NONE,O.NONE,600,100,128,90,77,77,128,3,100,300,!1,null,!0)),new M(e.GENESECT,5,!1,!1,!0,"Paleozoic Pokémon",L.BUG,L.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300,P.SLOW,null,!1,!0,new F("Normal","",L.BUG,L.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300,!1,null,!0),new F("Shock Drive","shock",L.BUG,L.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300),new F("Burn Drive","burn",L.BUG,L.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300),new F("Chill Drive","chill",L.BUG,L.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300),new F("Douse Drive","douse",L.BUG,L.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300)),new M(e.CHESPIN,6,!1,!1,!1,"Spiny Nut Pokémon",L.GRASS,null,.4,9,O.OVERGROW,O.NONE,O.BULLETPROOF,313,56,61,65,48,45,38,45,70,63,P.MEDIUM_SLOW,87.5,!1),new M(e.QUILLADIN,6,!1,!1,!1,"Spiny Armor Pokémon",L.GRASS,null,.7,29,O.OVERGROW,O.NONE,O.BULLETPROOF,405,61,78,95,56,58,57,45,70,142,P.MEDIUM_SLOW,87.5,!1),new M(e.CHESNAUGHT,6,!1,!1,!1,"Spiny Armor Pokémon",L.GRASS,L.FIGHTING,1.6,90,O.OVERGROW,O.NONE,O.BULLETPROOF,530,88,107,122,74,75,64,45,70,265,P.MEDIUM_SLOW,87.5,!1),new M(e.FENNEKIN,6,!1,!1,!1,"Fox Pokémon",L.FIRE,null,.4,9.4,O.BLAZE,O.NONE,O.MAGICIAN,307,40,45,40,62,60,60,45,70,61,P.MEDIUM_SLOW,87.5,!1),new M(e.BRAIXEN,6,!1,!1,!1,"Fox Pokémon",L.FIRE,null,1,14.5,O.BLAZE,O.NONE,O.MAGICIAN,409,59,59,58,90,70,73,45,70,143,P.MEDIUM_SLOW,87.5,!1),new M(e.DELPHOX,6,!1,!1,!1,"Fox Pokémon",L.FIRE,L.PSYCHIC,1.5,39,O.BLAZE,O.NONE,O.MAGICIAN,534,75,69,72,114,100,104,45,70,267,P.MEDIUM_SLOW,87.5,!1),new M(e.FROAKIE,6,!1,!1,!1,"Bubble Frog Pokémon",L.WATER,null,.3,7,O.TORRENT,O.NONE,O.PROTEAN,314,41,56,40,62,44,71,45,70,63,P.MEDIUM_SLOW,87.5,!1,!1,new F("Normal","",L.WATER,null,.3,7,O.TORRENT,O.NONE,O.PROTEAN,314,41,56,40,62,44,71,45,70,63,!1,null,!0),new F("Battle Bond","battle-bond",L.WATER,null,.3,7,O.TORRENT,O.NONE,O.TORRENT,314,41,56,40,62,44,71,45,70,63,!1,"",!0)),new M(e.FROGADIER,6,!1,!1,!1,"Bubble Frog Pokémon",L.WATER,null,.6,10.9,O.TORRENT,O.NONE,O.PROTEAN,405,54,63,52,83,56,97,45,70,142,P.MEDIUM_SLOW,87.5,!1,!1,new F("Normal","",L.WATER,null,.6,10.9,O.TORRENT,O.NONE,O.PROTEAN,405,54,63,52,83,56,97,45,70,142,!1,null,!0),new F("Battle Bond","battle-bond",L.WATER,null,.6,10.9,O.TORRENT,O.NONE,O.NONE,405,54,63,52,83,56,97,45,70,142,!1,"",!0)),new M(e.GRENINJA,6,!1,!1,!1,"Ninja Pokémon",L.WATER,L.DARK,1.5,40,O.TORRENT,O.NONE,O.PROTEAN,530,72,95,67,103,71,122,45,70,265,P.MEDIUM_SLOW,87.5,!1,!1,new F("Normal","",L.WATER,L.DARK,1.5,40,O.TORRENT,O.NONE,O.PROTEAN,530,72,95,67,103,71,122,45,70,265,!1,null,!0),new F("Battle Bond","battle-bond",L.WATER,L.DARK,1.5,40,O.BATTLE_BOND,O.NONE,O.BATTLE_BOND,530,72,95,67,103,71,122,45,70,265,!1,"",!0),new F("Ash","ash",L.WATER,L.DARK,1.5,40,O.BATTLE_BOND,O.NONE,O.NONE,640,72,145,67,153,71,132,45,70,265)),new M(e.BUNNELBY,6,!1,!1,!1,"Digging Pokémon",L.NORMAL,null,.4,5,O.PICKUP,O.CHEEK_POUCH,O.HUGE_POWER,237,38,36,38,32,36,57,255,50,47,P.MEDIUM_FAST,50,!1),new M(e.DIGGERSBY,6,!1,!1,!1,"Digging Pokémon",L.NORMAL,L.GROUND,1,42.4,O.PICKUP,O.CHEEK_POUCH,O.HUGE_POWER,423,85,56,77,50,77,78,127,50,148,P.MEDIUM_FAST,50,!1),new M(e.FLETCHLING,6,!1,!1,!1,"Tiny Robin Pokémon",L.NORMAL,L.FLYING,.3,1.7,O.BIG_PECKS,O.NONE,O.GALE_WINGS,278,45,50,43,40,38,62,255,50,56,P.MEDIUM_SLOW,50,!1),new M(e.FLETCHINDER,6,!1,!1,!1,"Ember Pokémon",L.FIRE,L.FLYING,.7,16,O.FLAME_BODY,O.NONE,O.GALE_WINGS,382,62,73,55,56,52,84,120,50,134,P.MEDIUM_SLOW,50,!1),new M(e.TALONFLAME,6,!1,!1,!1,"Scorching Pokémon",L.FIRE,L.FLYING,1.2,24.5,O.FLAME_BODY,O.NONE,O.GALE_WINGS,499,78,81,71,74,69,126,45,50,175,P.MEDIUM_SLOW,50,!1),new M(e.SCATTERBUG,6,!1,!1,!1,"Scatterdust Pokémon",L.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,P.MEDIUM_FAST,50,!1,!1,new F("Meadow Pattern","meadow",L.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new F("Icy Snow Pattern","icy-snow",L.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new F("Polar Pattern","polar",L.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new F("Tundra Pattern","tundra",L.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new F("Continental Pattern","continental",L.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new F("Garden Pattern","garden",L.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new F("Elegant Pattern","elegant",L.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new F("Modern Pattern","modern",L.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new F("Marine Pattern","marine",L.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new F("Archipelago Pattern","archipelago",L.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new F("High Plains Pattern","high-plains",L.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new F("Sandstorm Pattern","sandstorm",L.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new F("River Pattern","river",L.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new F("Monsoon Pattern","monsoon",L.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new F("Savanna Pattern","savanna",L.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new F("Sun Pattern","sun",L.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new F("Ocean Pattern","ocean",L.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new F("Jungle Pattern","jungle",L.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new F("Fancy Pattern","fancy",L.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new F("Poké Ball Pattern","poke-ball",L.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0)),new M(e.SPEWPA,6,!1,!1,!1,"Scatterdust Pokémon",L.BUG,null,.3,8.4,O.SHED_SKIN,O.SHED_SKIN,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,P.MEDIUM_FAST,50,!1,!1,new F("Meadow Pattern","meadow",L.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new F("Icy Snow Pattern","icy-snow",L.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new F("Polar Pattern","polar",L.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new F("Tundra Pattern","tundra",L.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new F("Continental Pattern","continental",L.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new F("Garden Pattern","garden",L.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new F("Elegant Pattern","elegant",L.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new F("Modern Pattern","modern",L.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new F("Marine Pattern","marine",L.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new F("Archipelago Pattern","archipelago",L.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new F("High Plains Pattern","high-plains",L.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new F("Sandstorm Pattern","sandstorm",L.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new F("River Pattern","river",L.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new F("Monsoon Pattern","monsoon",L.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new F("Savanna Pattern","savanna",L.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new F("Sun Pattern","sun",L.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new F("Ocean Pattern","ocean",L.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new F("Jungle Pattern","jungle",L.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new F("Fancy Pattern","fancy",L.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new F("Poké Ball Pattern","poke-ball",L.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0)),new M(e.VIVILLON,6,!1,!1,!1,"Scale Pokémon",L.BUG,L.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,P.MEDIUM_FAST,50,!1,!1,new F("Meadow Pattern","meadow",L.BUG,L.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new F("Icy Snow Pattern","icy-snow",L.BUG,L.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new F("Polar Pattern","polar",L.BUG,L.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new F("Tundra Pattern","tundra",L.BUG,L.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new F("Continental Pattern","continental",L.BUG,L.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new F("Garden Pattern","garden",L.BUG,L.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new F("Elegant Pattern","elegant",L.BUG,L.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new F("Modern Pattern","modern",L.BUG,L.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new F("Marine Pattern","marine",L.BUG,L.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new F("Archipelago Pattern","archipelago",L.BUG,L.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new F("High Plains Pattern","high-plains",L.BUG,L.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new F("Sandstorm Pattern","sandstorm",L.BUG,L.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new F("River Pattern","river",L.BUG,L.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new F("Monsoon Pattern","monsoon",L.BUG,L.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new F("Savanna Pattern","savanna",L.BUG,L.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new F("Sun Pattern","sun",L.BUG,L.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new F("Ocean Pattern","ocean",L.BUG,L.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new F("Jungle Pattern","jungle",L.BUG,L.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new F("Fancy Pattern","fancy",L.BUG,L.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new F("Poké Ball Pattern","poke-ball",L.BUG,L.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0)),new M(e.LITLEO,6,!1,!1,!1,"Lion Cub Pokémon",L.FIRE,L.NORMAL,.6,13.5,O.RIVALRY,O.UNNERVE,O.MOXIE,369,62,50,58,73,54,72,220,70,74,P.MEDIUM_SLOW,12.5,!1),new M(e.PYROAR,6,!1,!1,!1,"Royal Pokémon",L.FIRE,L.NORMAL,1.5,81.5,O.RIVALRY,O.UNNERVE,O.MOXIE,507,86,68,72,109,66,106,65,70,177,P.MEDIUM_SLOW,12.5,!0),new M(e.FLABEBE,6,!1,!1,!1,"Single Bloom Pokémon",L.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,P.MEDIUM_FAST,0,!1,!1,new F("Red Flower","red",L.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0),new F("Yellow Flower","yellow",L.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0),new F("Orange Flower","orange",L.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0),new F("Blue Flower","blue",L.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0),new F("White Flower","white",L.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0)),new M(e.FLOETTE,6,!1,!1,!1,"Single Bloom Pokémon",L.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,P.MEDIUM_FAST,0,!1,!1,new F("Red Flower","red",L.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0),new F("Yellow Flower","yellow",L.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0),new F("Orange Flower","orange",L.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0),new F("Blue Flower","blue",L.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0),new F("White Flower","white",L.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0)),new M(e.FLORGES,6,!1,!1,!1,"Garden Pokémon",L.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,276,P.MEDIUM_FAST,0,!1,!1,new F("Red Flower","red",L.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,276,!1,null,!0),new F("Yellow Flower","yellow",L.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,276,!1,null,!0),new F("Orange Flower","orange",L.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,276,!1,null,!0),new F("Blue Flower","blue",L.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,276,!1,null,!0),new F("White Flower","white",L.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,276,!1,null,!0)),new M(e.SKIDDO,6,!1,!1,!1,"Mount Pokémon",L.GRASS,null,.9,31,O.SAP_SIPPER,O.NONE,O.GRASS_PELT,350,66,65,48,62,57,52,200,70,70,P.MEDIUM_FAST,50,!1),new M(e.GOGOAT,6,!1,!1,!1,"Mount Pokémon",L.GRASS,null,1.7,91,O.SAP_SIPPER,O.NONE,O.GRASS_PELT,531,123,100,62,97,81,68,45,70,186,P.MEDIUM_FAST,50,!1),new M(e.PANCHAM,6,!1,!1,!1,"Playful Pokémon",L.FIGHTING,null,.6,8,O.IRON_FIST,O.MOLD_BREAKER,O.SCRAPPY,348,67,82,62,46,48,43,220,50,70,P.MEDIUM_FAST,50,!1),new M(e.PANGORO,6,!1,!1,!1,"Daunting Pokémon",L.FIGHTING,L.DARK,2.1,136,O.IRON_FIST,O.MOLD_BREAKER,O.SCRAPPY,495,95,124,78,69,71,58,65,50,173,P.MEDIUM_FAST,50,!1),new M(e.FURFROU,6,!1,!1,!1,"Poodle Pokémon",L.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,P.MEDIUM_FAST,50,!1,!0,new F("Natural Form","",L.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new F("Heart Trim","heart",L.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new F("Star Trim","star",L.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new F("Diamond Trim","diamond",L.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new F("Debutante Trim","debutante",L.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new F("Matron Trim","matron",L.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new F("Dandy Trim","dandy",L.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new F("La Reine Trim","la-reine",L.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new F("Kabuki Trim","kabuki",L.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new F("Pharaoh Trim","pharaoh",L.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0)),new M(e.ESPURR,6,!1,!1,!1,"Restraint Pokémon",L.PSYCHIC,null,.3,3.5,O.KEEN_EYE,O.INFILTRATOR,O.OWN_TEMPO,355,62,48,54,63,60,68,190,50,71,P.MEDIUM_FAST,50,!1),new M(e.MEOWSTIC,6,!1,!1,!1,"Constraint Pokémon",L.PSYCHIC,null,.6,8.5,O.KEEN_EYE,O.INFILTRATOR,O.PRANKSTER,466,74,48,76,83,81,104,75,50,163,P.MEDIUM_FAST,50,!1,!1,new F("Male","male",L.PSYCHIC,null,.6,8.5,O.KEEN_EYE,O.INFILTRATOR,O.PRANKSTER,466,74,48,76,83,81,104,75,50,163,!1,"",!0),new F("Female","female",L.PSYCHIC,null,.6,8.5,O.KEEN_EYE,O.INFILTRATOR,O.COMPETITIVE,466,74,48,76,83,81,104,75,50,163,!1,null,!0)),new M(e.HONEDGE,6,!1,!1,!1,"Sword Pokémon",L.STEEL,L.GHOST,.8,2,O.NO_GUARD,O.NONE,O.NONE,325,45,80,100,35,37,28,180,50,65,P.MEDIUM_FAST,50,!1),new M(e.DOUBLADE,6,!1,!1,!1,"Sword Pokémon",L.STEEL,L.GHOST,.8,4.5,O.NO_GUARD,O.NONE,O.NONE,448,59,110,150,45,49,35,90,50,157,P.MEDIUM_FAST,50,!1),new M(e.AEGISLASH,6,!1,!1,!1,"Royal Sword Pokémon",L.STEEL,L.GHOST,1.7,53,O.STANCE_CHANGE,O.NONE,O.NONE,500,60,50,140,50,140,60,45,50,250,P.MEDIUM_FAST,50,!1,!0,new F("Shield Forme","shield",L.STEEL,L.GHOST,1.7,53,O.STANCE_CHANGE,O.NONE,O.NONE,500,60,50,140,50,140,60,45,50,250,!1,"",!0),new F("Blade Forme","blade",L.STEEL,L.GHOST,1.7,53,O.STANCE_CHANGE,O.NONE,O.NONE,500,60,140,50,140,50,60,45,50,250)),new M(e.SPRITZEE,6,!1,!1,!1,"Perfume Pokémon",L.FAIRY,null,.2,.5,O.HEALER,O.NONE,O.AROMA_VEIL,341,78,52,60,63,65,23,200,50,68,P.MEDIUM_FAST,50,!1),new M(e.AROMATISSE,6,!1,!1,!1,"Fragrance Pokémon",L.FAIRY,null,.8,15.5,O.HEALER,O.NONE,O.AROMA_VEIL,462,101,72,72,99,89,29,140,50,162,P.MEDIUM_FAST,50,!1),new M(e.SWIRLIX,6,!1,!1,!1,"Cotton Candy Pokémon",L.FAIRY,null,.4,3.5,O.SWEET_VEIL,O.NONE,O.UNBURDEN,341,62,48,66,59,57,49,200,50,68,P.MEDIUM_FAST,50,!1),new M(e.SLURPUFF,6,!1,!1,!1,"Meringue Pokémon",L.FAIRY,null,.8,5,O.SWEET_VEIL,O.NONE,O.UNBURDEN,480,82,80,86,85,75,72,140,50,168,P.MEDIUM_FAST,50,!1),new M(e.INKAY,6,!1,!1,!1,"Revolving Pokémon",L.DARK,L.PSYCHIC,.4,3.5,O.CONTRARY,O.SUCTION_CUPS,O.INFILTRATOR,288,53,54,53,37,46,45,190,50,58,P.MEDIUM_FAST,50,!1),new M(e.MALAMAR,6,!1,!1,!1,"Overturning Pokémon",L.DARK,L.PSYCHIC,1.5,47,O.CONTRARY,O.SUCTION_CUPS,O.INFILTRATOR,482,86,92,88,68,75,73,80,50,169,P.MEDIUM_FAST,50,!1),new M(e.BINACLE,6,!1,!1,!1,"Two-Handed Pokémon",L.ROCK,L.WATER,.5,31,O.TOUGH_CLAWS,O.SNIPER,O.PICKPOCKET,306,42,52,67,39,56,50,120,50,61,P.MEDIUM_FAST,50,!1),new M(e.BARBARACLE,6,!1,!1,!1,"Collective Pokémon",L.ROCK,L.WATER,1.3,96,O.TOUGH_CLAWS,O.SNIPER,O.PICKPOCKET,500,72,105,115,54,86,68,45,50,175,P.MEDIUM_FAST,50,!1),new M(e.SKRELP,6,!1,!1,!1,"Mock Kelp Pokémon",L.POISON,L.WATER,.5,7.3,O.POISON_POINT,O.POISON_TOUCH,O.ADAPTABILITY,320,50,60,60,60,60,30,225,50,64,P.MEDIUM_FAST,50,!1),new M(e.DRAGALGE,6,!1,!1,!1,"Mock Kelp Pokémon",L.POISON,L.DRAGON,1.8,81.5,O.POISON_POINT,O.POISON_TOUCH,O.ADAPTABILITY,494,65,75,90,97,123,44,55,50,173,P.MEDIUM_FAST,50,!1),new M(e.CLAUNCHER,6,!1,!1,!1,"Water Gun Pokémon",L.WATER,null,.5,8.3,O.MEGA_LAUNCHER,O.NONE,O.NONE,330,50,53,62,58,63,44,225,50,66,P.SLOW,50,!1),new M(e.CLAWITZER,6,!1,!1,!1,"Howitzer Pokémon",L.WATER,null,1.3,35.3,O.MEGA_LAUNCHER,O.NONE,O.NONE,500,71,73,88,120,89,59,55,50,100,P.SLOW,50,!1),new M(e.HELIOPTILE,6,!1,!1,!1,"Generator Pokémon",L.ELECTRIC,L.NORMAL,.5,6,O.DRY_SKIN,O.SAND_VEIL,O.SOLAR_POWER,289,44,38,33,61,43,70,190,50,58,P.MEDIUM_FAST,50,!1),new M(e.HELIOLISK,6,!1,!1,!1,"Generator Pokémon",L.ELECTRIC,L.NORMAL,1,21,O.DRY_SKIN,O.SAND_VEIL,O.SOLAR_POWER,481,62,55,52,109,94,109,75,50,168,P.MEDIUM_FAST,50,!1),new M(e.TYRUNT,6,!1,!1,!1,"Royal Heir Pokémon",L.ROCK,L.DRAGON,.8,26,O.STRONG_JAW,O.NONE,O.STURDY,362,58,89,77,45,45,48,45,50,72,P.MEDIUM_FAST,87.5,!1),new M(e.TYRANTRUM,6,!1,!1,!1,"Despot Pokémon",L.ROCK,L.DRAGON,2.5,270,O.STRONG_JAW,O.NONE,O.ROCK_HEAD,521,82,121,119,69,59,71,45,50,182,P.MEDIUM_FAST,87.5,!1),new M(e.AMAURA,6,!1,!1,!1,"Tundra Pokémon",L.ROCK,L.ICE,1.3,25.2,O.REFRIGERATE,O.NONE,O.SNOW_WARNING,362,77,59,50,67,63,46,45,50,72,P.MEDIUM_FAST,87.5,!1),new M(e.AURORUS,6,!1,!1,!1,"Tundra Pokémon",L.ROCK,L.ICE,2.7,225,O.REFRIGERATE,O.NONE,O.SNOW_WARNING,521,123,77,72,99,92,58,45,50,104,P.MEDIUM_FAST,87.5,!1),new M(e.SYLVEON,6,!1,!1,!1,"Intertwining Pokémon",L.FAIRY,null,1,23.5,O.CUTE_CHARM,O.NONE,O.PIXILATE,525,95,65,65,110,130,60,45,50,184,P.MEDIUM_FAST,87.5,!1),new M(e.HAWLUCHA,6,!1,!1,!1,"Wrestling Pokémon",L.FIGHTING,L.FLYING,.8,21.5,O.LIMBER,O.UNBURDEN,O.MOLD_BREAKER,500,78,92,75,74,63,118,100,50,175,P.MEDIUM_FAST,50,!1),new M(e.DEDENNE,6,!1,!1,!1,"Antenna Pokémon",L.ELECTRIC,L.FAIRY,.2,2.2,O.CHEEK_POUCH,O.PICKUP,O.PLUS,431,67,58,57,81,67,101,180,50,151,P.MEDIUM_FAST,50,!1),new M(e.CARBINK,6,!1,!1,!1,"Jewel Pokémon",L.ROCK,L.FAIRY,.3,5.7,O.CLEAR_BODY,O.NONE,O.STURDY,500,50,50,150,50,150,50,60,50,100,P.SLOW,null,!1),new M(e.GOOMY,6,!1,!1,!1,"Soft Tissue Pokémon",L.DRAGON,null,.3,2.8,O.SAP_SIPPER,O.HYDRATION,O.GOOEY,300,45,50,35,55,75,40,45,35,60,P.SLOW,50,!1),new M(e.SLIGGOO,6,!1,!1,!1,"Soft Tissue Pokémon",L.DRAGON,null,.8,17.5,O.SAP_SIPPER,O.HYDRATION,O.GOOEY,452,68,75,53,83,113,60,45,35,158,P.SLOW,50,!1),new M(e.GOODRA,6,!1,!1,!1,"Dragon Pokémon",L.DRAGON,null,2,150.5,O.SAP_SIPPER,O.HYDRATION,O.GOOEY,600,90,100,70,110,150,80,45,35,300,P.SLOW,50,!1),new M(e.KLEFKI,6,!1,!1,!1,"Key Ring Pokémon",L.STEEL,L.FAIRY,.2,3,O.PRANKSTER,O.NONE,O.MAGICIAN,470,57,80,91,80,87,75,75,50,165,P.FAST,50,!1),new M(e.PHANTUMP,6,!1,!1,!1,"Stump Pokémon",L.GHOST,L.GRASS,.4,7,O.NATURAL_CURE,O.FRISK,O.HARVEST,309,43,70,48,50,60,38,120,50,62,P.MEDIUM_FAST,50,!1),new M(e.TREVENANT,6,!1,!1,!1,"Elder Tree Pokémon",L.GHOST,L.GRASS,1.5,71,O.NATURAL_CURE,O.FRISK,O.HARVEST,474,85,110,76,65,82,56,60,50,166,P.MEDIUM_FAST,50,!1),new M(e.PUMPKABOO,6,!1,!1,!1,"Pumpkin Pokémon",L.GHOST,L.GRASS,.4,5,O.PICKUP,O.FRISK,O.INSOMNIA,335,49,66,70,44,55,51,120,50,67,P.MEDIUM_FAST,50,!1,!1,new F("Average Size","",L.GHOST,L.GRASS,.4,5,O.PICKUP,O.FRISK,O.INSOMNIA,335,49,66,70,44,55,51,120,50,67,!1,null,!0),new F("Small Size","small",L.GHOST,L.GRASS,.3,3.5,O.PICKUP,O.FRISK,O.INSOMNIA,335,44,66,70,44,55,56,120,50,67,!1,"",!0),new F("Large Size","large",L.GHOST,L.GRASS,.5,7.5,O.PICKUP,O.FRISK,O.INSOMNIA,335,54,66,70,44,55,46,120,50,67,!1,"",!0),new F("Super Size","super",L.GHOST,L.GRASS,.8,15,O.PICKUP,O.FRISK,O.INSOMNIA,335,59,66,70,44,55,41,120,50,67,!1,"",!0)),new M(e.GOURGEIST,6,!1,!1,!1,"Pumpkin Pokémon",L.GHOST,L.GRASS,.9,12.5,O.PICKUP,O.FRISK,O.INSOMNIA,494,65,90,122,58,75,84,60,50,173,P.MEDIUM_FAST,50,!1,!1,new F("Average Size","",L.GHOST,L.GRASS,.9,12.5,O.PICKUP,O.FRISK,O.INSOMNIA,494,65,90,122,58,75,84,60,50,173,!1,null,!0),new F("Small Size","small",L.GHOST,L.GRASS,.7,9.5,O.PICKUP,O.FRISK,O.INSOMNIA,494,55,85,122,58,75,99,60,50,173,!1,"",!0),new F("Large Size","large",L.GHOST,L.GRASS,1.1,14,O.PICKUP,O.FRISK,O.INSOMNIA,494,75,95,122,58,75,69,60,50,173,!1,"",!0),new F("Super Size","super",L.GHOST,L.GRASS,1.7,39,O.PICKUP,O.FRISK,O.INSOMNIA,494,85,100,122,58,75,54,60,50,173,!1,"",!0)),new M(e.BERGMITE,6,!1,!1,!1,"Ice Chunk Pokémon",L.ICE,null,1,99.5,O.OWN_TEMPO,O.ICE_BODY,O.STURDY,304,55,69,85,32,35,28,190,50,61,P.MEDIUM_FAST,50,!1),new M(e.AVALUGG,6,!1,!1,!1,"Iceberg Pokémon",L.ICE,null,2,505,O.OWN_TEMPO,O.ICE_BODY,O.STURDY,514,95,117,184,44,46,28,55,50,180,P.MEDIUM_FAST,50,!1),new M(e.NOIBAT,6,!1,!1,!1,"Sound Wave Pokémon",L.FLYING,L.DRAGON,.5,8,O.FRISK,O.INFILTRATOR,O.TELEPATHY,245,40,30,35,45,40,55,190,50,49,P.MEDIUM_FAST,50,!1),new M(e.NOIVERN,6,!1,!1,!1,"Sound Wave Pokémon",L.FLYING,L.DRAGON,1.5,85,O.FRISK,O.INFILTRATOR,O.TELEPATHY,535,85,70,80,97,80,123,45,50,187,P.MEDIUM_FAST,50,!1),new M(e.XERNEAS,6,!1,!0,!1,"Life Pokémon",L.FAIRY,null,3,215,O.FAIRY_AURA,O.NONE,O.NONE,680,126,131,95,131,98,99,45,0,340,P.SLOW,null,!1,!0,new F("Neutral Mode","neutral",L.FAIRY,null,3,215,O.FAIRY_AURA,O.NONE,O.NONE,680,126,131,95,131,98,99,45,0,340,!1,null,!0),new F("Active Mode","active",L.FAIRY,null,3,215,O.FAIRY_AURA,O.NONE,O.NONE,680,126,131,95,131,98,99,45,0,340)),new M(e.YVELTAL,6,!1,!0,!1,"Destruction Pokémon",L.DARK,L.FLYING,5.8,203,O.DARK_AURA,O.NONE,O.NONE,680,126,131,95,131,98,99,45,0,340,P.SLOW,null,!1),new M(e.ZYGARDE,6,!1,!0,!1,"Order Pokémon",L.DRAGON,L.GROUND,5,305,O.AURA_BREAK,O.NONE,O.NONE,600,108,100,121,81,95,95,3,0,300,P.SLOW,null,!1,!1,new F("50% Forme","50",L.DRAGON,L.GROUND,5,305,O.AURA_BREAK,O.NONE,O.NONE,600,108,100,121,81,95,95,3,0,300,!1,"",!0),new F("10% Forme","10",L.DRAGON,L.GROUND,1.2,33.5,O.AURA_BREAK,O.NONE,O.NONE,486,54,100,71,61,85,115,3,0,243,!1,null,!0),new F("50% Forme Power Construct","50-pc",L.DRAGON,L.GROUND,5,305,O.POWER_CONSTRUCT,O.NONE,O.NONE,600,108,100,121,81,95,95,3,0,300,!1,"",!0),new F("10% Forme Power Construct","10-pc",L.DRAGON,L.GROUND,1.2,33.5,O.POWER_CONSTRUCT,O.NONE,O.NONE,486,54,100,71,61,85,115,3,0,243,!1,"10",!0),new F("Complete Forme (50% PC)","complete",L.DRAGON,L.GROUND,4.5,610,O.POWER_CONSTRUCT,O.NONE,O.NONE,708,216,100,121,91,95,85,3,0,354),new F("Complete Forme (10% PC)","10-complete",L.DRAGON,L.GROUND,4.5,610,O.POWER_CONSTRUCT,O.NONE,O.NONE,708,216,100,121,91,95,85,3,0,354,!1,"complete")),new M(e.DIANCIE,6,!1,!1,!0,"Jewel Pokémon",L.ROCK,L.FAIRY,.7,8.8,O.CLEAR_BODY,O.NONE,O.NONE,600,50,100,150,100,150,50,3,50,300,P.SLOW,null,!1,!0,new F("Normal","",L.ROCK,L.FAIRY,.7,8.8,O.CLEAR_BODY,O.NONE,O.NONE,600,50,100,150,100,150,50,3,50,300,!1,null,!0),new F("Mega",te.MEGA,L.ROCK,L.FAIRY,1.1,27.8,O.MAGIC_BOUNCE,O.NONE,O.NONE,700,50,160,110,160,110,110,3,50,300)),new M(e.HOOPA,6,!1,!1,!0,"Mischief Pokémon",L.PSYCHIC,L.GHOST,.5,9,O.MAGICIAN,O.NONE,O.NONE,600,80,110,60,150,130,70,3,100,300,P.SLOW,null,!1,!1,new F("Hoopa Confined","",L.PSYCHIC,L.GHOST,.5,9,O.MAGICIAN,O.NONE,O.NONE,600,80,110,60,150,130,70,3,100,300,!1,null,!0),new F("Hoopa Unbound","unbound",L.PSYCHIC,L.DARK,6.5,490,O.MAGICIAN,O.NONE,O.NONE,680,80,160,60,170,130,80,3,100,340)),new M(e.VOLCANION,6,!1,!1,!0,"Steam Pokémon",L.FIRE,L.WATER,1.7,195,O.WATER_ABSORB,O.NONE,O.NONE,600,80,110,120,130,90,70,3,100,300,P.SLOW,null,!1),new M(e.ROWLET,7,!1,!1,!1,"Grass Quill Pokémon",L.GRASS,L.FLYING,.3,1.5,O.OVERGROW,O.NONE,O.LONG_REACH,320,68,55,55,50,50,42,45,50,64,P.MEDIUM_SLOW,87.5,!1),new M(e.DARTRIX,7,!1,!1,!1,"Blade Quill Pokémon",L.GRASS,L.FLYING,.7,16,O.OVERGROW,O.NONE,O.LONG_REACH,420,78,75,75,70,70,52,45,50,147,P.MEDIUM_SLOW,87.5,!1),new M(e.DECIDUEYE,7,!1,!1,!1,"Arrow Quill Pokémon",L.GRASS,L.GHOST,1.6,36.6,O.OVERGROW,O.NONE,O.LONG_REACH,530,78,107,75,100,100,70,45,50,265,P.MEDIUM_SLOW,87.5,!1),new M(e.LITTEN,7,!1,!1,!1,"Fire Cat Pokémon",L.FIRE,null,.4,4.3,O.BLAZE,O.NONE,O.INTIMIDATE,320,45,65,40,60,40,70,45,50,64,P.MEDIUM_SLOW,87.5,!1),new M(e.TORRACAT,7,!1,!1,!1,"Fire Cat Pokémon",L.FIRE,null,.7,25,O.BLAZE,O.NONE,O.INTIMIDATE,420,65,85,50,80,50,90,45,50,147,P.MEDIUM_SLOW,87.5,!1),new M(e.INCINEROAR,7,!1,!1,!1,"Heel Pokémon",L.FIRE,L.DARK,1.8,83,O.BLAZE,O.NONE,O.INTIMIDATE,530,95,115,90,80,90,60,45,50,265,P.MEDIUM_SLOW,87.5,!1),new M(e.POPPLIO,7,!1,!1,!1,"Sea Lion Pokémon",L.WATER,null,.4,7.5,O.TORRENT,O.NONE,O.LIQUID_VOICE,320,50,54,54,66,56,40,45,50,64,P.MEDIUM_SLOW,87.5,!1),new M(e.BRIONNE,7,!1,!1,!1,"Pop Star Pokémon",L.WATER,null,.6,17.5,O.TORRENT,O.NONE,O.LIQUID_VOICE,420,60,69,69,91,81,50,45,50,147,P.MEDIUM_SLOW,87.5,!1),new M(e.PRIMARINA,7,!1,!1,!1,"Soloist Pokémon",L.WATER,L.FAIRY,1.8,44,O.TORRENT,O.NONE,O.LIQUID_VOICE,530,80,74,74,126,116,60,45,50,265,P.MEDIUM_SLOW,87.5,!1),new M(e.PIKIPEK,7,!1,!1,!1,"Woodpecker Pokémon",L.NORMAL,L.FLYING,.3,1.2,O.KEEN_EYE,O.SKILL_LINK,O.PICKUP,265,35,75,30,30,30,65,255,70,53,P.MEDIUM_FAST,50,!1),new M(e.TRUMBEAK,7,!1,!1,!1,"Bugle Beak Pokémon",L.NORMAL,L.FLYING,.6,14.8,O.KEEN_EYE,O.SKILL_LINK,O.PICKUP,355,55,85,50,40,50,75,120,70,124,P.MEDIUM_FAST,50,!1),new M(e.TOUCANNON,7,!1,!1,!1,"Cannon Pokémon",L.NORMAL,L.FLYING,1.1,26,O.KEEN_EYE,O.SKILL_LINK,O.SHEER_FORCE,485,80,120,75,75,75,60,45,70,243,P.MEDIUM_FAST,50,!1),new M(e.YUNGOOS,7,!1,!1,!1,"Loitering Pokémon",L.NORMAL,null,.4,6,O.STAKEOUT,O.STRONG_JAW,O.ADAPTABILITY,253,48,70,30,30,30,45,255,70,51,P.MEDIUM_FAST,50,!1),new M(e.GUMSHOOS,7,!1,!1,!1,"Stakeout Pokémon",L.NORMAL,null,.7,14.2,O.STAKEOUT,O.STRONG_JAW,O.ADAPTABILITY,418,88,110,60,55,60,45,127,70,146,P.MEDIUM_FAST,50,!1),new M(e.GRUBBIN,7,!1,!1,!1,"Larva Pokémon",L.BUG,null,.4,4.4,O.SWARM,O.NONE,O.NONE,300,47,62,45,55,45,46,255,50,60,P.MEDIUM_FAST,50,!1),new M(e.CHARJABUG,7,!1,!1,!1,"Battery Pokémon",L.BUG,L.ELECTRIC,.5,10.5,O.BATTERY,O.NONE,O.NONE,400,57,82,95,55,75,36,120,50,140,P.MEDIUM_FAST,50,!1),new M(e.VIKAVOLT,7,!1,!1,!1,"Stag Beetle Pokémon",L.BUG,L.ELECTRIC,1.5,45,O.LEVITATE,O.NONE,O.NONE,500,77,70,90,145,75,43,45,50,250,P.MEDIUM_FAST,50,!1),new M(e.CRABRAWLER,7,!1,!1,!1,"Boxing Pokémon",L.FIGHTING,null,.6,7,O.HYPER_CUTTER,O.IRON_FIST,O.ANGER_POINT,338,47,82,57,42,47,63,225,70,68,P.MEDIUM_FAST,50,!1),new M(e.CRABOMINABLE,7,!1,!1,!1,"Woolly Crab Pokémon",L.FIGHTING,L.ICE,1.7,180,O.HYPER_CUTTER,O.IRON_FIST,O.ANGER_POINT,478,97,132,77,62,67,43,60,70,167,P.MEDIUM_FAST,50,!1),new M(e.ORICORIO,7,!1,!1,!1,"Dancing Pokémon",L.FIRE,L.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,P.MEDIUM_FAST,25,!1,!1,new F("Baile Style","baile",L.FIRE,L.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,!1,"",!0),new F("Pom-Pom Style","pompom",L.ELECTRIC,L.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,!1,null,!0),new F("Pau Style","pau",L.PSYCHIC,L.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,!1,null,!0),new F("Sensu Style","sensu",L.GHOST,L.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,!1,null,!0)),new M(e.CUTIEFLY,7,!1,!1,!1,"Bee Fly Pokémon",L.BUG,L.FAIRY,.1,.2,O.HONEY_GATHER,O.SHIELD_DUST,O.SWEET_VEIL,304,40,45,40,55,40,84,190,50,61,P.MEDIUM_FAST,50,!1),new M(e.RIBOMBEE,7,!1,!1,!1,"Bee Fly Pokémon",L.BUG,L.FAIRY,.2,.5,O.HONEY_GATHER,O.SHIELD_DUST,O.SWEET_VEIL,464,60,55,60,95,70,124,75,50,162,P.MEDIUM_FAST,50,!1),new M(e.ROCKRUFF,7,!1,!1,!1,"Puppy Pokémon",L.ROCK,null,.5,9.2,O.KEEN_EYE,O.VITAL_SPIRIT,O.STEADFAST,280,45,65,40,30,40,60,190,50,56,P.MEDIUM_FAST,50,!1,!1,new F("Normal","",L.ROCK,null,.5,9.2,O.KEEN_EYE,O.VITAL_SPIRIT,O.STEADFAST,280,45,65,40,30,40,60,190,50,56,!1,null,!0),new F("Own Tempo","own-tempo",L.ROCK,null,.5,9.2,O.OWN_TEMPO,O.NONE,O.OWN_TEMPO,280,45,65,40,30,40,60,190,50,56,!1,"",!0)),new M(e.LYCANROC,7,!1,!1,!1,"Wolf Pokémon",L.ROCK,null,.8,25,O.KEEN_EYE,O.SAND_RUSH,O.STEADFAST,487,75,115,65,55,65,112,90,50,170,P.MEDIUM_FAST,50,!1,!1,new F("Midday Form","midday",L.ROCK,null,.8,25,O.KEEN_EYE,O.SAND_RUSH,O.STEADFAST,487,75,115,65,55,65,112,90,50,170,!1,"",!0),new F("Midnight Form","midnight",L.ROCK,null,1.1,25,O.KEEN_EYE,O.VITAL_SPIRIT,O.NO_GUARD,487,85,115,75,55,75,82,90,50,170,!1,null,!0),new F("Dusk Form","dusk",L.ROCK,null,.8,25,O.TOUGH_CLAWS,O.TOUGH_CLAWS,O.TOUGH_CLAWS,487,75,117,65,55,65,110,90,50,170,!1,null,!0)),new M(e.WISHIWASHI,7,!1,!1,!1,"Small Fry Pokémon",L.WATER,null,.2,.3,O.SCHOOLING,O.NONE,O.NONE,175,45,20,20,25,25,40,60,50,61,P.FAST,50,!1,!1,new F("Solo Form","",L.WATER,null,.2,.3,O.SCHOOLING,O.NONE,O.NONE,175,45,20,20,25,25,40,60,50,61,!1,null,!0),new F("School","school",L.WATER,null,8.2,78.6,O.SCHOOLING,O.NONE,O.NONE,620,45,140,130,140,135,30,60,50,217)),new M(e.MAREANIE,7,!1,!1,!1,"Brutal Star Pokémon",L.POISON,L.WATER,.4,8,O.MERCILESS,O.LIMBER,O.REGENERATOR,305,50,53,62,43,52,45,190,50,61,P.MEDIUM_FAST,50,!1),new M(e.TOXAPEX,7,!1,!1,!1,"Brutal Star Pokémon",L.POISON,L.WATER,.7,14.5,O.MERCILESS,O.LIMBER,O.REGENERATOR,495,50,63,152,53,142,35,75,50,173,P.MEDIUM_FAST,50,!1),new M(e.MUDBRAY,7,!1,!1,!1,"Donkey Pokémon",L.GROUND,null,1,110,O.OWN_TEMPO,O.STAMINA,O.INNER_FOCUS,385,70,100,70,45,55,45,190,50,77,P.MEDIUM_FAST,50,!1),new M(e.MUDSDALE,7,!1,!1,!1,"Draft Horse Pokémon",L.GROUND,null,2.5,920,O.OWN_TEMPO,O.STAMINA,O.INNER_FOCUS,500,100,125,100,55,85,35,60,50,175,P.MEDIUM_FAST,50,!1),new M(e.DEWPIDER,7,!1,!1,!1,"Water Bubble Pokémon",L.WATER,L.BUG,.3,4,O.WATER_BUBBLE,O.NONE,O.WATER_ABSORB,269,38,40,52,40,72,27,200,50,54,P.MEDIUM_FAST,50,!1),new M(e.ARAQUANID,7,!1,!1,!1,"Water Bubble Pokémon",L.WATER,L.BUG,1.8,82,O.WATER_BUBBLE,O.NONE,O.WATER_ABSORB,454,68,70,92,50,132,42,100,50,159,P.MEDIUM_FAST,50,!1),new M(e.FOMANTIS,7,!1,!1,!1,"Sickle Grass Pokémon",L.GRASS,null,.3,1.5,O.LEAF_GUARD,O.NONE,O.CONTRARY,250,40,55,35,50,35,35,190,50,50,P.MEDIUM_FAST,50,!1),new M(e.LURANTIS,7,!1,!1,!1,"Bloom Sickle Pokémon",L.GRASS,null,.9,18.5,O.LEAF_GUARD,O.NONE,O.CONTRARY,480,70,105,90,80,90,45,75,50,168,P.MEDIUM_FAST,50,!1),new M(e.MORELULL,7,!1,!1,!1,"Illuminating Pokémon",L.GRASS,L.FAIRY,.2,1.5,O.ILLUMINATE,O.EFFECT_SPORE,O.RAIN_DISH,285,40,35,55,65,75,15,190,50,57,P.MEDIUM_FAST,50,!1),new M(e.SHIINOTIC,7,!1,!1,!1,"Illuminating Pokémon",L.GRASS,L.FAIRY,1,11.5,O.ILLUMINATE,O.EFFECT_SPORE,O.RAIN_DISH,405,60,45,80,90,100,30,75,50,142,P.MEDIUM_FAST,50,!1),new M(e.SALANDIT,7,!1,!1,!1,"Toxic Lizard Pokémon",L.POISON,L.FIRE,.6,4.8,O.CORROSION,O.NONE,O.OBLIVIOUS,320,48,44,40,71,40,77,120,50,64,P.MEDIUM_FAST,87.5,!1),new M(e.SALAZZLE,7,!1,!1,!1,"Toxic Lizard Pokémon",L.POISON,L.FIRE,1.2,22.2,O.CORROSION,O.NONE,O.OBLIVIOUS,480,68,64,60,111,60,117,45,50,168,P.MEDIUM_FAST,0,!1),new M(e.STUFFUL,7,!1,!1,!1,"Flailing Pokémon",L.NORMAL,L.FIGHTING,.5,6.8,O.FLUFFY,O.KLUTZ,O.CUTE_CHARM,340,70,75,50,45,50,50,140,50,68,P.MEDIUM_FAST,50,!1),new M(e.BEWEAR,7,!1,!1,!1,"Strong Arm Pokémon",L.NORMAL,L.FIGHTING,2.1,135,O.FLUFFY,O.KLUTZ,O.UNNERVE,500,120,125,80,55,60,60,70,50,175,P.MEDIUM_FAST,50,!1),new M(e.BOUNSWEET,7,!1,!1,!1,"Fruit Pokémon",L.GRASS,null,.3,3.2,O.LEAF_GUARD,O.OBLIVIOUS,O.SWEET_VEIL,210,42,30,38,30,38,32,235,50,42,P.MEDIUM_SLOW,0,!1),new M(e.STEENEE,7,!1,!1,!1,"Fruit Pokémon",L.GRASS,null,.7,8.2,O.LEAF_GUARD,O.OBLIVIOUS,O.SWEET_VEIL,290,52,40,48,40,48,62,120,50,102,P.MEDIUM_SLOW,0,!1),new M(e.TSAREENA,7,!1,!1,!1,"Fruit Pokémon",L.GRASS,null,1.2,21.4,O.LEAF_GUARD,O.QUEENLY_MAJESTY,O.SWEET_VEIL,510,72,120,98,50,98,72,45,50,255,P.MEDIUM_SLOW,0,!1),new M(e.COMFEY,7,!1,!1,!1,"Posy Picker Pokémon",L.FAIRY,null,.1,.3,O.FLOWER_VEIL,O.TRIAGE,O.NATURAL_CURE,485,51,52,90,82,110,100,60,50,170,P.FAST,25,!1),new M(e.ORANGURU,7,!1,!1,!1,"Sage Pokémon",L.NORMAL,L.PSYCHIC,1.5,76,O.INNER_FOCUS,O.TELEPATHY,O.SYMBIOSIS,490,90,60,80,90,110,60,45,50,172,P.SLOW,50,!1),new M(e.PASSIMIAN,7,!1,!1,!1,"Teamwork Pokémon",L.FIGHTING,null,2,82.8,O.RECEIVER,O.NONE,O.DEFIANT,490,100,120,90,40,60,80,45,50,172,P.SLOW,50,!1),new M(e.WIMPOD,7,!1,!1,!1,"Turn Tail Pokémon",L.BUG,L.WATER,.5,12,O.WIMP_OUT,O.NONE,O.RUN_AWAY,230,25,35,40,20,30,80,90,50,46,P.MEDIUM_FAST,50,!1),new M(e.GOLISOPOD,7,!1,!1,!1,"Hard Scale Pokémon",L.BUG,L.WATER,2,108,O.EMERGENCY_EXIT,O.NONE,O.ANTICIPATION,530,75,125,140,60,90,40,45,50,186,P.MEDIUM_FAST,50,!1),new M(e.SANDYGAST,7,!1,!1,!1,"Sand Heap Pokémon",L.GHOST,L.GROUND,.5,70,O.WATER_COMPACTION,O.NONE,O.SAND_VEIL,320,55,55,80,70,45,15,140,50,64,P.MEDIUM_FAST,50,!1),new M(e.PALOSSAND,7,!1,!1,!1,"Sand Castle Pokémon",L.GHOST,L.GROUND,1.3,250,O.WATER_COMPACTION,O.NONE,O.SAND_VEIL,480,85,75,110,100,75,35,60,50,168,P.MEDIUM_FAST,50,!1),new M(e.PYUKUMUKU,7,!1,!1,!1,"Sea Cucumber Pokémon",L.WATER,null,.3,1.2,O.INNARDS_OUT,O.NONE,O.UNAWARE,410,55,60,130,30,130,5,60,50,144,P.FAST,50,!1),new M(e.TYPE_NULL,7,!0,!1,!1,"Synthetic Pokémon",L.NORMAL,null,1.9,120.5,O.BATTLE_ARMOR,O.NONE,O.NONE,534,95,95,95,95,95,59,3,0,107,P.SLOW,null,!1),new M(e.SILVALLY,7,!0,!1,!1,"Synthetic Pokémon",L.NORMAL,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285,P.SLOW,null,!1,!1,new F("Type: Normal","normal",L.NORMAL,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285,!1,"",!0),new F("Type: Fighting","fighting",L.FIGHTING,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new F("Type: Flying","flying",L.FLYING,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new F("Type: Poison","poison",L.POISON,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new F("Type: Ground","ground",L.GROUND,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new F("Type: Rock","rock",L.ROCK,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new F("Type: Bug","bug",L.BUG,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new F("Type: Ghost","ghost",L.GHOST,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new F("Type: Steel","steel",L.STEEL,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new F("Type: Fire","fire",L.FIRE,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new F("Type: Water","water",L.WATER,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new F("Type: Grass","grass",L.GRASS,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new F("Type: Electric","electric",L.ELECTRIC,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new F("Type: Psychic","psychic",L.PSYCHIC,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new F("Type: Ice","ice",L.ICE,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new F("Type: Dragon","dragon",L.DRAGON,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new F("Type: Dark","dark",L.DARK,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new F("Type: Fairy","fairy",L.FAIRY,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285)),new M(e.MINIOR,7,!1,!1,!1,"Meteor Pokémon",L.ROCK,L.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,P.MEDIUM_SLOW,null,!1,!1,new F("Red Meteor Form","red-meteor",L.ROCK,L.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new F("Orange Meteor Form","orange-meteor",L.ROCK,L.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new F("Yellow Meteor Form","yellow-meteor",L.ROCK,L.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new F("Green Meteor Form","green-meteor",L.ROCK,L.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new F("Blue Meteor Form","blue-meteor",L.ROCK,L.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new F("Indigo Meteor Form","indigo-meteor",L.ROCK,L.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new F("Violet Meteor Form","violet-meteor",L.ROCK,L.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new F("Red Core Form","red",L.ROCK,L.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,175,!1,null,!0),new F("Orange Core Form","orange",L.ROCK,L.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,175,!1,null,!0),new F("Yellow Core Form","yellow",L.ROCK,L.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,175,!1,null,!0),new F("Green Core Form","green",L.ROCK,L.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,175,!1,null,!0),new F("Blue Core Form","blue",L.ROCK,L.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,175,!1,null,!0),new F("Indigo Core Form","indigo",L.ROCK,L.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,175,!1,null,!0),new F("Violet Core Form","violet",L.ROCK,L.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,175,!1,null,!0)),new M(e.KOMALA,7,!1,!1,!1,"Drowsing Pokémon",L.NORMAL,null,.4,19.9,O.COMATOSE,O.NONE,O.NONE,480,65,115,65,75,95,65,45,70,168,P.SLOW,50,!1),new M(e.TURTONATOR,7,!1,!1,!1,"Blast Turtle Pokémon",L.FIRE,L.DRAGON,2,212,O.SHELL_ARMOR,O.NONE,O.NONE,485,60,78,135,91,85,36,70,50,170,P.MEDIUM_FAST,50,!1),new M(e.TOGEDEMARU,7,!1,!1,!1,"Roly-Poly Pokémon",L.ELECTRIC,L.STEEL,.3,3.3,O.IRON_BARBS,O.LIGHTNING_ROD,O.STURDY,435,65,98,63,40,73,96,180,50,152,P.MEDIUM_FAST,50,!1),new M(e.MIMIKYU,7,!1,!1,!1,"Disguise Pokémon",L.GHOST,L.FAIRY,.2,.7,O.DISGUISE,O.NONE,O.NONE,476,55,90,80,50,105,96,45,50,167,P.MEDIUM_FAST,50,!1,!1,new F("Disguised Form","disguised",L.GHOST,L.FAIRY,.2,.7,O.DISGUISE,O.NONE,O.NONE,476,55,90,80,50,105,96,45,50,167,!1,null,!0),new F("Busted Form","busted",L.GHOST,L.FAIRY,.2,.7,O.DISGUISE,O.NONE,O.NONE,476,55,90,80,50,105,96,45,50,167)),new M(e.BRUXISH,7,!1,!1,!1,"Gnash Teeth Pokémon",L.WATER,L.PSYCHIC,.9,19,O.DAZZLING,O.STRONG_JAW,O.WONDER_SKIN,475,68,105,70,70,70,92,80,70,166,P.MEDIUM_FAST,50,!1),new M(e.DRAMPA,7,!1,!1,!1,"Placid Pokémon",L.NORMAL,L.DRAGON,3,185,O.BERSERK,O.SAP_SIPPER,O.CLOUD_NINE,485,78,60,85,135,91,36,70,50,170,P.MEDIUM_FAST,50,!1),new M(e.DHELMISE,7,!1,!1,!1,"Sea Creeper Pokémon",L.GHOST,L.GRASS,3.9,210,O.STEELWORKER,O.NONE,O.NONE,517,70,131,100,86,90,40,25,50,181,P.MEDIUM_FAST,null,!1),new M(e.JANGMO_O,7,!1,!1,!1,"Scaly Pokémon",L.DRAGON,null,.6,29.7,O.BULLETPROOF,O.SOUNDPROOF,O.OVERCOAT,300,45,55,65,45,45,45,45,50,60,P.SLOW,50,!1),new M(e.HAKAMO_O,7,!1,!1,!1,"Scaly Pokémon",L.DRAGON,L.FIGHTING,1.2,47,O.BULLETPROOF,O.SOUNDPROOF,O.OVERCOAT,420,55,75,90,65,70,65,45,50,147,P.SLOW,50,!1),new M(e.KOMMO_O,7,!1,!1,!1,"Scaly Pokémon",L.DRAGON,L.FIGHTING,1.6,78.2,O.BULLETPROOF,O.SOUNDPROOF,O.OVERCOAT,600,75,110,125,100,105,85,45,50,300,P.SLOW,50,!1),new M(e.TAPU_KOKO,7,!0,!1,!1,"Land Spirit Pokémon",L.ELECTRIC,L.FAIRY,1.8,20.5,O.ELECTRIC_SURGE,O.NONE,O.TELEPATHY,570,70,115,85,95,75,130,3,50,285,P.SLOW,null,!1),new M(e.TAPU_LELE,7,!0,!1,!1,"Land Spirit Pokémon",L.PSYCHIC,L.FAIRY,1.2,18.6,O.PSYCHIC_SURGE,O.NONE,O.TELEPATHY,570,70,85,75,130,115,95,3,50,285,P.SLOW,null,!1),new M(e.TAPU_BULU,7,!0,!1,!1,"Land Spirit Pokémon",L.GRASS,L.FAIRY,1.9,45.5,O.GRASSY_SURGE,O.NONE,O.TELEPATHY,570,70,130,115,85,95,75,3,50,285,P.SLOW,null,!1),new M(e.TAPU_FINI,7,!0,!1,!1,"Land Spirit Pokémon",L.WATER,L.FAIRY,1.3,21.2,O.MISTY_SURGE,O.NONE,O.TELEPATHY,570,70,75,115,95,130,85,3,50,285,P.SLOW,null,!1),new M(e.COSMOG,7,!0,!1,!1,"Nebula Pokémon",L.PSYCHIC,null,.2,.1,O.UNAWARE,O.NONE,O.NONE,200,43,29,31,29,31,37,45,0,40,P.SLOW,null,!1),new M(e.COSMOEM,7,!0,!1,!1,"Protostar Pokémon",L.PSYCHIC,null,.1,999.9,O.STURDY,O.NONE,O.NONE,400,43,29,131,29,131,37,45,0,140,P.SLOW,null,!1),new M(e.SOLGALEO,7,!1,!0,!1,"Sunne Pokémon",L.PSYCHIC,L.STEEL,3.4,230,O.FULL_METAL_BODY,O.NONE,O.NONE,680,137,137,107,113,89,97,45,0,340,P.SLOW,null,!1),new M(e.LUNALA,7,!1,!0,!1,"Moone Pokémon",L.PSYCHIC,L.GHOST,4,120,O.SHADOW_SHIELD,O.NONE,O.NONE,680,137,113,89,137,107,97,45,0,340,P.SLOW,null,!1),new M(e.NIHILEGO,7,!0,!1,!1,"Parasite Pokémon",L.ROCK,L.POISON,1.2,55.5,O.BEAST_BOOST,O.NONE,O.NONE,570,109,53,47,127,131,103,45,0,285,P.SLOW,null,!1),new M(e.BUZZWOLE,7,!0,!1,!1,"Swollen Pokémon",L.BUG,L.FIGHTING,2.4,333.6,O.BEAST_BOOST,O.NONE,O.NONE,570,107,139,139,53,53,79,45,0,285,P.SLOW,null,!1),new M(e.PHEROMOSA,7,!0,!1,!1,"Lissome Pokémon",L.BUG,L.FIGHTING,1.8,25,O.BEAST_BOOST,O.NONE,O.NONE,570,71,137,37,137,37,151,45,0,285,P.SLOW,null,!1),new M(e.XURKITREE,7,!0,!1,!1,"Glowing Pokémon",L.ELECTRIC,null,3.8,100,O.BEAST_BOOST,O.NONE,O.NONE,570,83,89,71,173,71,83,45,0,285,P.SLOW,null,!1),new M(e.CELESTEELA,7,!0,!1,!1,"Launch Pokémon",L.STEEL,L.FLYING,9.2,999.9,O.BEAST_BOOST,O.NONE,O.NONE,570,97,101,103,107,101,61,45,0,285,P.SLOW,null,!1),new M(e.KARTANA,7,!0,!1,!1,"Drawn Sword Pokémon",L.GRASS,L.STEEL,.3,.1,O.BEAST_BOOST,O.NONE,O.NONE,570,59,181,131,59,31,109,45,0,285,P.SLOW,null,!1),new M(e.GUZZLORD,7,!0,!1,!1,"Junkivore Pokémon",L.DARK,L.DRAGON,5.5,888,O.BEAST_BOOST,O.NONE,O.NONE,570,223,101,53,97,53,43,45,0,285,P.SLOW,null,!1),new M(e.NECROZMA,7,!1,!0,!1,"Prism Pokémon",L.PSYCHIC,null,2.4,230,O.PRISM_ARMOR,O.NONE,O.NONE,600,97,107,101,127,89,79,255,0,300,P.SLOW,null,!1,!1,new F("Normal","",L.PSYCHIC,null,2.4,230,O.PRISM_ARMOR,O.NONE,O.NONE,600,97,107,101,127,89,79,255,0,300,!1,null,!0),new F("Dusk Mane","dusk-mane",L.PSYCHIC,L.STEEL,3.8,460,O.PRISM_ARMOR,O.NONE,O.NONE,680,97,157,127,113,109,77,255,0,340),new F("Dawn Wings","dawn-wings",L.PSYCHIC,L.GHOST,4.2,350,O.PRISM_ARMOR,O.NONE,O.NONE,680,97,113,109,157,127,77,255,0,340),new F("Ultra","ultra",L.PSYCHIC,L.DRAGON,7.5,230,O.NEUROFORCE,O.NONE,O.NONE,754,97,167,97,167,97,129,255,0,377)),new M(e.MAGEARNA,7,!1,!1,!0,"Artificial Pokémon",L.STEEL,L.FAIRY,1,80.5,O.SOUL_HEART,O.NONE,O.NONE,600,80,95,115,130,115,65,3,0,300,P.SLOW,null,!1,!1,new F("Normal","",L.STEEL,L.FAIRY,1,80.5,O.SOUL_HEART,O.NONE,O.NONE,600,80,95,115,130,115,65,3,0,300,!1,null,!0),new F("Original","original",L.STEEL,L.FAIRY,1,80.5,O.SOUL_HEART,O.NONE,O.NONE,600,80,95,115,130,115,65,3,0,300,!1,null,!0)),new M(e.MARSHADOW,7,!1,!1,!0,"Gloomdweller Pokémon",L.FIGHTING,L.GHOST,.7,22.2,O.TECHNICIAN,O.NONE,O.NONE,600,90,125,80,90,90,125,3,0,300,P.SLOW,null,!1,!0,new F("Normal","",L.FIGHTING,L.GHOST,.7,22.2,O.TECHNICIAN,O.NONE,O.NONE,600,90,125,80,90,90,125,3,0,300,!1,null,!0),new F("Zenith","zenith",L.FIGHTING,L.GHOST,.7,22.2,O.TECHNICIAN,O.NONE,O.NONE,600,90,125,80,90,90,125,3,0,300,!1,null,!1,!0)),new M(e.POIPOLE,7,!0,!1,!1,"Poison Pin Pokémon",L.POISON,null,.6,1.8,O.BEAST_BOOST,O.NONE,O.NONE,420,67,73,67,73,67,73,45,0,210,P.SLOW,null,!1),new M(e.NAGANADEL,7,!0,!1,!1,"Poison Pin Pokémon",L.POISON,L.DRAGON,3.6,150,O.BEAST_BOOST,O.NONE,O.NONE,540,73,73,73,127,73,121,45,0,270,P.SLOW,null,!1),new M(e.STAKATAKA,7,!0,!1,!1,"Rampart Pokémon",L.ROCK,L.STEEL,5.5,820,O.BEAST_BOOST,O.NONE,O.NONE,570,61,131,211,53,101,13,30,0,285,P.SLOW,null,!1),new M(e.BLACEPHALON,7,!0,!1,!1,"Fireworks Pokémon",L.FIRE,L.GHOST,1.8,13,O.BEAST_BOOST,O.NONE,O.NONE,570,53,127,53,151,79,107,30,0,285,P.SLOW,null,!1),new M(e.ZERAORA,7,!1,!1,!0,"Thunderclap Pokémon",L.ELECTRIC,null,1.5,44.5,O.VOLT_ABSORB,O.NONE,O.NONE,600,88,112,75,102,80,143,3,0,300,P.SLOW,null,!1),new M(e.MELTAN,7,!1,!1,!0,"Hex Nut Pokémon",L.STEEL,null,.2,8,O.MAGNET_PULL,O.NONE,O.NONE,300,46,65,65,55,35,34,3,0,150,P.SLOW,null,!1),new M(e.MELMETAL,7,!1,!1,!0,"Hex Nut Pokémon",L.STEEL,null,2.5,800,O.IRON_FIST,O.NONE,O.NONE,600,135,143,143,80,65,34,3,0,300,P.SLOW,null,!1,!0,new F("Normal","",L.STEEL,null,2.5,800,O.IRON_FIST,O.NONE,O.NONE,600,135,143,143,80,65,34,3,0,300,!1,null,!0),new F("G-Max",te.GIGANTAMAX,L.STEEL,null,25,999.9,O.IRON_FIST,O.NONE,O.NONE,700,170,158,158,95,75,44,3,0,300)),new M(e.GROOKEY,8,!1,!1,!1,"Chimp Pokémon",L.GRASS,null,.3,5,O.OVERGROW,O.NONE,O.GRASSY_SURGE,310,50,65,50,40,40,65,45,50,62,P.MEDIUM_SLOW,87.5,!1),new M(e.THWACKEY,8,!1,!1,!1,"Beat Pokémon",L.GRASS,null,.7,14,O.OVERGROW,O.NONE,O.GRASSY_SURGE,420,70,85,70,55,60,80,45,50,147,P.MEDIUM_SLOW,87.5,!1),new M(e.RILLABOOM,8,!1,!1,!1,"Drummer Pokémon",L.GRASS,null,2.1,90,O.OVERGROW,O.NONE,O.GRASSY_SURGE,530,100,125,90,60,70,85,45,50,265,P.MEDIUM_SLOW,87.5,!1,!0,new F("Normal","",L.GRASS,null,2.1,90,O.OVERGROW,O.NONE,O.GRASSY_SURGE,530,100,125,90,60,70,85,45,50,265,!1,null,!0),new F("G-Max",te.GIGANTAMAX,L.GRASS,null,28,999.9,O.GRASSY_SURGE,O.NONE,O.GRASSY_SURGE,630,125,140,105,90,85,85,45,50,265)),new M(e.SCORBUNNY,8,!1,!1,!1,"Rabbit Pokémon",L.FIRE,null,.3,4.5,O.BLAZE,O.NONE,O.LIBERO,310,50,71,40,40,40,69,45,50,62,P.MEDIUM_SLOW,87.5,!1),new M(e.RABOOT,8,!1,!1,!1,"Rabbit Pokémon",L.FIRE,null,.6,9,O.BLAZE,O.NONE,O.LIBERO,420,65,86,60,55,60,94,45,50,147,P.MEDIUM_SLOW,87.5,!1),new M(e.CINDERACE,8,!1,!1,!1,"Striker Pokémon",L.FIRE,null,1.4,33,O.BLAZE,O.NONE,O.LIBERO,530,80,116,75,65,75,119,45,50,265,P.MEDIUM_SLOW,87.5,!1,!0,new F("Normal","",L.FIRE,null,1.4,33,O.BLAZE,O.NONE,O.LIBERO,530,80,116,75,65,75,119,45,50,265,!1,null,!0),new F("G-Max",te.GIGANTAMAX,L.FIRE,null,27,999.9,O.LIBERO,O.NONE,O.LIBERO,630,100,141,80,95,80,134,45,50,265)),new M(e.SOBBLE,8,!1,!1,!1,"Water Lizard Pokémon",L.WATER,null,.3,4,O.TORRENT,O.NONE,O.SNIPER,310,50,40,40,70,40,70,45,50,62,P.MEDIUM_SLOW,87.5,!1),new M(e.DRIZZILE,8,!1,!1,!1,"Water Lizard Pokémon",L.WATER,null,.7,11.5,O.TORRENT,O.NONE,O.SNIPER,420,65,60,55,95,55,90,45,50,147,P.MEDIUM_SLOW,87.5,!1),new M(e.INTELEON,8,!1,!1,!1,"Secret Agent Pokémon",L.WATER,null,1.9,45.2,O.TORRENT,O.NONE,O.SNIPER,530,70,85,65,125,65,120,45,50,265,P.MEDIUM_SLOW,87.5,!1,!0,new F("Normal","",L.WATER,null,1.9,45.2,O.TORRENT,O.NONE,O.SNIPER,530,70,85,65,125,65,120,45,50,265,!1,null,!0),new F("G-Max",te.GIGANTAMAX,L.WATER,null,40,999.9,O.SNIPER,O.NONE,O.SNIPER,630,95,117,67,147,67,137,45,50,265)),new M(e.SKWOVET,8,!1,!1,!1,"Cheeky Pokémon",L.NORMAL,null,.3,2.5,O.CHEEK_POUCH,O.NONE,O.GLUTTONY,275,70,55,55,35,35,25,255,50,55,P.MEDIUM_FAST,50,!1),new M(e.GREEDENT,8,!1,!1,!1,"Greedy Pokémon",L.NORMAL,null,.6,6,O.CHEEK_POUCH,O.NONE,O.GLUTTONY,460,120,95,95,55,75,20,90,50,161,P.MEDIUM_FAST,50,!1),new M(e.ROOKIDEE,8,!1,!1,!1,"Tiny Bird Pokémon",L.FLYING,null,.2,1.8,O.KEEN_EYE,O.UNNERVE,O.BIG_PECKS,245,38,47,35,33,35,57,255,50,49,P.MEDIUM_SLOW,50,!1),new M(e.CORVISQUIRE,8,!1,!1,!1,"Raven Pokémon",L.FLYING,null,.8,16,O.KEEN_EYE,O.UNNERVE,O.BIG_PECKS,365,68,67,55,43,55,77,120,50,128,P.MEDIUM_SLOW,50,!1),new M(e.CORVIKNIGHT,8,!1,!1,!1,"Raven Pokémon",L.FLYING,L.STEEL,2.2,75,O.PRESSURE,O.UNNERVE,O.MIRROR_ARMOR,495,98,87,105,53,85,67,45,50,248,P.MEDIUM_SLOW,50,!1,!0,new F("Normal","",L.FLYING,L.STEEL,2.2,75,O.PRESSURE,O.UNNERVE,O.MIRROR_ARMOR,495,98,87,105,53,85,67,45,50,248,!1,null,!0),new F("G-Max",te.GIGANTAMAX,L.FLYING,L.STEEL,14,999.9,O.MIRROR_ARMOR,O.MIRROR_ARMOR,O.MIRROR_ARMOR,595,118,112,135,63,90,77,45,50,248)),new M(e.BLIPBUG,8,!1,!1,!1,"Larva Pokémon",L.BUG,null,.4,8,O.SWARM,O.COMPOUND_EYES,O.TELEPATHY,180,25,20,20,25,45,45,255,50,36,P.MEDIUM_FAST,50,!1),new M(e.DOTTLER,8,!1,!1,!1,"Radome Pokémon",L.BUG,L.PSYCHIC,.4,19.5,O.SWARM,O.COMPOUND_EYES,O.TELEPATHY,335,50,35,80,50,90,30,120,50,117,P.MEDIUM_FAST,50,!1),new M(e.ORBEETLE,8,!1,!1,!1,"Seven Spot Pokémon",L.BUG,L.PSYCHIC,.4,40.8,O.SWARM,O.FRISK,O.TELEPATHY,505,60,45,110,80,120,90,45,50,253,P.MEDIUM_FAST,50,!1,!0,new F("Normal","",L.BUG,L.PSYCHIC,.4,40.8,O.SWARM,O.FRISK,O.TELEPATHY,505,60,45,110,80,120,90,45,50,253,!1,null,!0),new F("G-Max",te.GIGANTAMAX,L.BUG,L.PSYCHIC,14,999.9,O.TRACE,O.TRACE,O.TRACE,605,75,50,140,100,150,90,45,50,253)),new M(e.NICKIT,8,!1,!1,!1,"Fox Pokémon",L.DARK,null,.6,8.9,O.RUN_AWAY,O.UNBURDEN,O.STAKEOUT,245,40,28,28,47,52,50,255,50,49,P.FAST,50,!1),new M(e.THIEVUL,8,!1,!1,!1,"Fox Pokémon",L.DARK,null,1.2,19.9,O.RUN_AWAY,O.UNBURDEN,O.STAKEOUT,455,70,58,58,87,92,90,127,50,159,P.FAST,50,!1),new M(e.GOSSIFLEUR,8,!1,!1,!1,"Flowering Pokémon",L.GRASS,null,.4,2.2,O.COTTON_DOWN,O.REGENERATOR,O.EFFECT_SPORE,250,40,40,60,40,60,10,190,50,50,P.MEDIUM_FAST,50,!1),new M(e.ELDEGOSS,8,!1,!1,!1,"Cotton Bloom Pokémon",L.GRASS,null,.5,2.5,O.COTTON_DOWN,O.REGENERATOR,O.EFFECT_SPORE,460,60,50,90,80,120,60,75,50,161,P.MEDIUM_FAST,50,!1),new M(e.WOOLOO,8,!1,!1,!1,"Sheep Pokémon",L.NORMAL,null,.6,6,O.FLUFFY,O.RUN_AWAY,O.BULLETPROOF,270,42,40,55,40,45,48,255,50,122,P.MEDIUM_FAST,50,!1),new M(e.DUBWOOL,8,!1,!1,!1,"Sheep Pokémon",L.NORMAL,null,1.3,43,O.FLUFFY,O.STEADFAST,O.BULLETPROOF,490,72,80,100,60,90,88,127,50,172,P.MEDIUM_FAST,50,!1),new M(e.CHEWTLE,8,!1,!1,!1,"Snapping Pokémon",L.WATER,null,.3,8.5,O.STRONG_JAW,O.SHELL_ARMOR,O.SWIFT_SWIM,284,50,64,50,38,38,44,255,50,57,P.MEDIUM_FAST,50,!1),new M(e.DREDNAW,8,!1,!1,!1,"Bite Pokémon",L.WATER,L.ROCK,1,115.5,O.STRONG_JAW,O.SHELL_ARMOR,O.SWIFT_SWIM,485,90,115,90,48,68,74,75,50,170,P.MEDIUM_FAST,50,!1,!0,new F("Normal","",L.WATER,L.ROCK,1,115.5,O.STRONG_JAW,O.SHELL_ARMOR,O.SWIFT_SWIM,485,90,115,90,48,68,74,75,50,170,!1,null,!0),new F("G-Max",te.GIGANTAMAX,L.WATER,L.ROCK,24,999.9,O.STRONG_JAW,O.STRONG_JAW,O.STRONG_JAW,585,115,137,115,61,83,74,75,50,170)),new M(e.YAMPER,8,!1,!1,!1,"Puppy Pokémon",L.ELECTRIC,null,.3,13.5,O.BALL_FETCH,O.NONE,O.RATTLED,270,59,45,50,40,50,26,255,50,54,P.FAST,50,!1),new M(e.BOLTUND,8,!1,!1,!1,"Dog Pokémon",L.ELECTRIC,null,1,34,O.STRONG_JAW,O.NONE,O.COMPETITIVE,490,69,90,60,90,60,121,45,50,172,P.FAST,50,!1),new M(e.ROLYCOLY,8,!1,!1,!1,"Coal Pokémon",L.ROCK,null,.3,12,O.STEAM_ENGINE,O.HEATPROOF,O.FLASH_FIRE,240,30,40,50,40,50,30,255,50,48,P.MEDIUM_SLOW,50,!1),new M(e.CARKOL,8,!1,!1,!1,"Coal Pokémon",L.ROCK,L.FIRE,1.1,78,O.STEAM_ENGINE,O.FLAME_BODY,O.FLASH_FIRE,410,80,60,90,60,70,50,120,50,144,P.MEDIUM_SLOW,50,!1),new M(e.COALOSSAL,8,!1,!1,!1,"Coal Pokémon",L.ROCK,L.FIRE,2.8,310.5,O.STEAM_ENGINE,O.FLAME_BODY,O.FLASH_FIRE,510,110,80,120,80,90,30,45,50,255,P.MEDIUM_SLOW,50,!1,!0,new F("Normal","",L.ROCK,L.FIRE,2.8,310.5,O.STEAM_ENGINE,O.FLAME_BODY,O.FLASH_FIRE,510,110,80,120,80,90,30,45,50,255,!1,null,!0),new F("G-Max",te.GIGANTAMAX,L.ROCK,L.FIRE,42,999.9,O.STEAM_ENGINE,O.STEAM_ENGINE,O.STEAM_ENGINE,610,140,100,132,95,100,43,45,50,255)),new M(e.APPLIN,8,!1,!1,!1,"Apple Core Pokémon",L.GRASS,L.DRAGON,.2,.5,O.RIPEN,O.GLUTTONY,O.BULLETPROOF,260,40,40,80,40,40,20,255,50,52,P.ERRATIC,50,!1),new M(e.FLAPPLE,8,!1,!1,!1,"Apple Wing Pokémon",L.GRASS,L.DRAGON,.3,1,O.RIPEN,O.GLUTTONY,O.HUSTLE,485,70,110,80,95,60,70,45,50,170,P.ERRATIC,50,!1,!0,new F("Normal","",L.GRASS,L.DRAGON,.3,1,O.RIPEN,O.GLUTTONY,O.HUSTLE,485,70,110,80,95,60,70,45,50,170,!1,null,!0),new F("G-Max",te.GIGANTAMAX,L.GRASS,L.DRAGON,24,999.9,O.HUSTLE,O.HUSTLE,O.HUSTLE,585,100,125,90,105,70,95,45,50,170)),new M(e.APPLETUN,8,!1,!1,!1,"Apple Nectar Pokémon",L.GRASS,L.DRAGON,.4,13,O.RIPEN,O.GLUTTONY,O.THICK_FAT,485,110,85,80,100,80,30,45,50,170,P.ERRATIC,50,!1,!0,new F("Normal","",L.GRASS,L.DRAGON,.4,13,O.RIPEN,O.GLUTTONY,O.THICK_FAT,485,110,85,80,100,80,30,45,50,170,!1,null,!0),new F("G-Max",te.GIGANTAMAX,L.GRASS,L.DRAGON,24,999.9,O.THICK_FAT,O.THICK_FAT,O.THICK_FAT,585,150,100,95,115,95,30,45,50,170)),new M(e.SILICOBRA,8,!1,!1,!1,"Sand Snake Pokémon",L.GROUND,null,2.2,7.6,O.SAND_SPIT,O.SHED_SKIN,O.SAND_VEIL,315,52,57,75,35,50,46,255,50,63,P.MEDIUM_FAST,50,!1),new M(e.SANDACONDA,8,!1,!1,!1,"Sand Snake Pokémon",L.GROUND,null,3.8,65.5,O.SAND_SPIT,O.SHED_SKIN,O.SAND_VEIL,510,72,107,125,65,70,71,120,50,179,P.MEDIUM_FAST,50,!1,!0,new F("Normal","",L.GROUND,null,3.8,65.5,O.SAND_SPIT,O.SHED_SKIN,O.SAND_VEIL,510,72,107,125,65,70,71,120,50,179,!1,null,!0),new F("G-Max",te.GIGANTAMAX,L.GROUND,null,22,999.9,O.SAND_SPIT,O.SAND_SPIT,O.SAND_SPIT,610,102,137,140,70,80,81,120,50,179)),new M(e.CRAMORANT,8,!1,!1,!1,"Gulp Pokémon",L.FLYING,L.WATER,.8,18,O.GULP_MISSILE,O.NONE,O.NONE,475,70,85,55,85,95,85,45,50,166,P.MEDIUM_FAST,50,!1,!1,new F("Normal","",L.FLYING,L.WATER,.8,18,O.GULP_MISSILE,O.NONE,O.NONE,475,70,85,55,85,95,85,45,50,166,!1,null,!0),new F("Gulping Form","gulping",L.FLYING,L.WATER,.8,18,O.GULP_MISSILE,O.NONE,O.NONE,475,70,85,55,85,95,85,45,50,166),new F("Gorging Form","gorging",L.FLYING,L.WATER,.8,18,O.GULP_MISSILE,O.NONE,O.NONE,475,70,85,55,85,95,85,45,50,166)),new M(e.ARROKUDA,8,!1,!1,!1,"Rush Pokémon",L.WATER,null,.5,1,O.SWIFT_SWIM,O.NONE,O.PROPELLER_TAIL,280,41,63,40,40,30,66,255,50,56,P.SLOW,50,!1),new M(e.BARRASKEWDA,8,!1,!1,!1,"Skewer Pokémon",L.WATER,null,1.3,30,O.SWIFT_SWIM,O.NONE,O.PROPELLER_TAIL,490,61,123,60,60,50,136,60,50,172,P.SLOW,50,!1),new M(e.TOXEL,8,!1,!1,!1,"Baby Pokémon",L.ELECTRIC,L.POISON,.4,11,O.RATTLED,O.STATIC,O.KLUTZ,242,40,38,35,54,35,40,75,50,48,P.MEDIUM_SLOW,50,!1),new M(e.TOXTRICITY,8,!1,!1,!1,"Punk Pokémon",L.ELECTRIC,L.POISON,1.6,40,O.PUNK_ROCK,O.PLUS,O.TECHNICIAN,502,75,98,70,114,70,75,45,50,176,P.MEDIUM_SLOW,50,!1,!0,new F("Amped Form","amped",L.ELECTRIC,L.POISON,1.6,40,O.PUNK_ROCK,O.PLUS,O.TECHNICIAN,502,75,98,70,114,70,75,45,50,176,!1,"",!0),new F("Low-Key Form","lowkey",L.ELECTRIC,L.POISON,1.6,40,O.PUNK_ROCK,O.MINUS,O.TECHNICIAN,502,75,98,70,114,70,75,45,50,176,!1,"lowkey",!0),new F("G-Max",te.GIGANTAMAX,L.ELECTRIC,L.POISON,24,999.9,O.PUNK_ROCK,O.PUNK_ROCK,O.PUNK_ROCK,602,114,105,82,137,82,82,45,50,176)),new M(e.SIZZLIPEDE,8,!1,!1,!1,"Radiator Pokémon",L.FIRE,L.BUG,.7,1,O.FLASH_FIRE,O.WHITE_SMOKE,O.FLAME_BODY,305,50,65,45,50,50,45,190,50,61,P.MEDIUM_FAST,50,!1),new M(e.CENTISKORCH,8,!1,!1,!1,"Radiator Pokémon",L.FIRE,L.BUG,3,120,O.FLASH_FIRE,O.WHITE_SMOKE,O.FLAME_BODY,525,100,115,65,90,90,65,75,50,184,P.MEDIUM_FAST,50,!1,!0,new F("Normal","",L.FIRE,L.BUG,3,120,O.FLASH_FIRE,O.WHITE_SMOKE,O.FLAME_BODY,525,100,115,65,90,90,65,75,50,184,!1,null,!0),new F("G-Max",te.GIGANTAMAX,L.FIRE,L.BUG,75,999.9,O.FLASH_FIRE,O.FLASH_FIRE,O.FLASH_FIRE,625,130,125,75,94,100,101,75,50,184)),new M(e.CLOBBOPUS,8,!1,!1,!1,"Tantrum Pokémon",L.FIGHTING,null,.6,4,O.LIMBER,O.NONE,O.TECHNICIAN,310,50,68,60,50,50,32,180,50,62,P.MEDIUM_SLOW,50,!1),new M(e.GRAPPLOCT,8,!1,!1,!1,"Jujitsu Pokémon",L.FIGHTING,null,1.6,39,O.LIMBER,O.NONE,O.TECHNICIAN,480,80,118,90,70,80,42,45,50,168,P.MEDIUM_SLOW,50,!1),new M(e.SINISTEA,8,!1,!1,!1,"Black Tea Pokémon",L.GHOST,null,.1,.2,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,308,40,45,45,74,54,50,120,50,62,P.MEDIUM_FAST,null,!1,!1,new F("Phony Form","phony",L.GHOST,null,.1,.2,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,308,40,45,45,74,54,50,120,50,62,!1,"",!0),new F("Antique Form","antique",L.GHOST,null,.1,.2,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,308,40,45,45,74,54,50,120,50,62,!1,"",!0,!0)),new M(e.POLTEAGEIST,8,!1,!1,!1,"Black Tea Pokémon",L.GHOST,null,.2,.4,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,508,60,65,65,134,114,70,60,50,178,P.MEDIUM_FAST,null,!1,!1,new F("Phony Form","phony",L.GHOST,null,.2,.4,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,508,60,65,65,134,114,70,60,50,178,!1,"",!0),new F("Antique Form","antique",L.GHOST,null,.2,.4,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,508,60,65,65,134,114,70,60,50,178,!1,"",!0,!0)),new M(e.HATENNA,8,!1,!1,!1,"Calm Pokémon",L.PSYCHIC,null,.4,3.4,O.HEALER,O.ANTICIPATION,O.MAGIC_BOUNCE,265,42,30,45,56,53,39,235,50,53,P.SLOW,0,!1),new M(e.HATTREM,8,!1,!1,!1,"Serene Pokémon",L.PSYCHIC,null,.6,4.8,O.HEALER,O.ANTICIPATION,O.MAGIC_BOUNCE,370,57,40,65,86,73,49,120,50,130,P.SLOW,0,!1),new M(e.HATTERENE,8,!1,!1,!1,"Silent Pokémon",L.PSYCHIC,L.FAIRY,2.1,5.1,O.HEALER,O.ANTICIPATION,O.MAGIC_BOUNCE,510,57,90,95,136,103,29,45,50,255,P.SLOW,0,!1,!0,new F("Normal","",L.PSYCHIC,L.FAIRY,2.1,5.1,O.HEALER,O.ANTICIPATION,O.MAGIC_BOUNCE,510,57,90,95,136,103,29,45,50,255,!1,null,!0),new F("G-Max",te.GIGANTAMAX,L.PSYCHIC,L.FAIRY,26,999.9,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,610,87,100,110,146,118,49,45,50,255)),new M(e.IMPIDIMP,8,!1,!1,!1,"Wily Pokémon",L.DARK,L.FAIRY,.4,5.5,O.PRANKSTER,O.FRISK,O.PICKPOCKET,265,45,45,30,55,40,50,255,50,53,P.MEDIUM_FAST,100,!1),new M(e.MORGREM,8,!1,!1,!1,"Devious Pokémon",L.DARK,L.FAIRY,.8,12.5,O.PRANKSTER,O.FRISK,O.PICKPOCKET,370,65,60,45,75,55,70,120,50,130,P.MEDIUM_FAST,100,!1),new M(e.GRIMMSNARL,8,!1,!1,!1,"Bulk Up Pokémon",L.DARK,L.FAIRY,1.5,61,O.PRANKSTER,O.FRISK,O.PICKPOCKET,510,95,120,65,95,75,60,45,50,255,P.MEDIUM_FAST,100,!1,!0,new F("Normal","",L.DARK,L.FAIRY,1.5,61,O.PRANKSTER,O.FRISK,O.PICKPOCKET,510,95,120,65,95,75,60,45,50,255,!1,null,!0),new F("G-Max",te.GIGANTAMAX,L.DARK,L.FAIRY,32,999.9,O.PRANKSTER,O.PRANKSTER,O.PRANKSTER,610,130,138,75,110,92,65,45,50,255)),new M(e.OBSTAGOON,8,!1,!1,!1,"Blocking Pokémon",L.DARK,L.NORMAL,1.6,46,O.RECKLESS,O.GUTS,O.DEFIANT,520,93,90,101,60,81,95,45,50,260,P.MEDIUM_FAST,50,!1),new M(e.PERRSERKER,8,!1,!1,!1,"Viking Pokémon",L.STEEL,null,.8,28,O.BATTLE_ARMOR,O.TOUGH_CLAWS,O.STEELY_SPIRIT,440,70,110,100,50,60,50,90,50,154,P.MEDIUM_FAST,50,!1),new M(e.CURSOLA,8,!1,!1,!1,"Coral Pokémon",L.GHOST,null,1,.4,O.WEAK_ARMOR,O.NONE,O.PERISH_BODY,510,60,95,50,145,130,30,30,50,179,P.FAST,25,!1),new M(e.SIRFETCHD,8,!1,!1,!1,"Wild Duck Pokémon",L.FIGHTING,null,.8,117,O.STEADFAST,O.NONE,O.SCRAPPY,507,62,135,95,68,82,65,45,50,177,P.MEDIUM_FAST,50,!1),new M(e.MR_RIME,8,!1,!1,!1,"Comedian Pokémon",L.ICE,L.PSYCHIC,1.5,58.2,O.TANGLED_FEET,O.SCREEN_CLEANER,O.ICE_BODY,520,80,85,75,110,100,70,45,50,182,P.MEDIUM_FAST,50,!1),new M(e.RUNERIGUS,8,!1,!1,!1,"Grudge Pokémon",L.GROUND,L.GHOST,1.6,66.6,O.WANDERING_SPIRIT,O.NONE,O.NONE,483,58,95,145,50,105,30,90,50,169,P.MEDIUM_FAST,50,!1),new M(e.MILCERY,8,!1,!1,!1,"Cream Pokémon",L.FAIRY,null,.2,.3,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,270,45,40,40,50,61,34,200,50,54,P.MEDIUM_FAST,0,!1),new M(e.ALCREMIE,8,!1,!1,!1,"Cream Pokémon",L.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,P.MEDIUM_FAST,0,!1,!0,new F("Vanilla Cream","vanilla-cream",L.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,"",!0),new F("Ruby Cream","ruby-cream",L.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new F("Matcha Cream","matcha-cream",L.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new F("Mint Cream","mint-cream",L.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new F("Lemon Cream","lemon-cream",L.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new F("Salted Cream","salted-cream",L.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new F("Ruby Swirl","ruby-swirl",L.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new F("Caramel Swirl","caramel-swirl",L.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new F("Rainbow Swirl","rainbow-swirl",L.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new F("G-Max",te.GIGANTAMAX,L.FAIRY,null,30,999.9,O.MISTY_SURGE,O.NONE,O.MISTY_SURGE,595,105,70,85,130,141,64,100,50,173)),new M(e.FALINKS,8,!1,!1,!1,"Formation Pokémon",L.FIGHTING,null,3,62,O.BATTLE_ARMOR,O.NONE,O.DEFIANT,470,65,100,100,70,60,75,45,50,165,P.MEDIUM_FAST,null,!1),new M(e.PINCURCHIN,8,!1,!1,!1,"Sea Urchin Pokémon",L.ELECTRIC,null,.3,1,O.LIGHTNING_ROD,O.NONE,O.ELECTRIC_SURGE,435,48,101,95,91,85,15,75,50,152,P.MEDIUM_FAST,50,!1),new M(e.SNOM,8,!1,!1,!1,"Worm Pokémon",L.ICE,L.BUG,.3,3.8,O.SHIELD_DUST,O.NONE,O.ICE_SCALES,185,30,25,35,45,30,20,190,50,37,P.MEDIUM_FAST,50,!1),new M(e.FROSMOTH,8,!1,!1,!1,"Frost Moth Pokémon",L.ICE,L.BUG,1.3,42,O.SHIELD_DUST,O.NONE,O.ICE_SCALES,475,70,65,60,125,90,65,75,50,166,P.MEDIUM_FAST,50,!1),new M(e.STONJOURNER,8,!1,!1,!1,"Big Rock Pokémon",L.ROCK,null,2.5,520,O.POWER_SPOT,O.NONE,O.NONE,470,100,125,135,20,20,70,60,50,165,P.SLOW,50,!1),new M(e.EISCUE,8,!1,!1,!1,"Penguin Pokémon",L.ICE,null,1.4,89,O.ICE_FACE,O.NONE,O.NONE,470,75,80,110,65,90,50,60,50,165,P.SLOW,50,!1,!1,new F("Ice Face","",L.ICE,null,1.4,89,O.ICE_FACE,O.NONE,O.NONE,470,75,80,110,65,90,50,60,50,165,!1,null,!0),new F("No Ice","no-ice",L.ICE,null,1.4,89,O.ICE_FACE,O.NONE,O.NONE,470,75,80,70,65,50,130,60,50,165)),new M(e.INDEEDEE,8,!1,!1,!1,"Emotion Pokémon",L.PSYCHIC,L.NORMAL,.9,28,O.INNER_FOCUS,O.SYNCHRONIZE,O.PSYCHIC_SURGE,475,60,65,55,105,95,95,30,140,166,P.FAST,50,!1,!1,new F("Male","male",L.PSYCHIC,L.NORMAL,.9,28,O.INNER_FOCUS,O.SYNCHRONIZE,O.PSYCHIC_SURGE,475,60,65,55,105,95,95,30,140,166,!1,"",!0),new F("Female","female",L.PSYCHIC,L.NORMAL,.9,28,O.OWN_TEMPO,O.SYNCHRONIZE,O.PSYCHIC_SURGE,475,70,55,65,95,105,85,30,140,166,!1,null,!0)),new M(e.MORPEKO,8,!1,!1,!1,"Two-Sided Pokémon",L.ELECTRIC,L.DARK,.3,3,O.HUNGER_SWITCH,O.NONE,O.NONE,436,58,95,58,70,58,97,180,50,153,P.MEDIUM_FAST,50,!1,!1,new F("Full Belly Mode","full-belly",L.ELECTRIC,L.DARK,.3,3,O.HUNGER_SWITCH,O.NONE,O.NONE,436,58,95,58,70,58,97,180,50,153,!1,"",!0),new F("Hangry Mode","hangry",L.ELECTRIC,L.DARK,.3,3,O.HUNGER_SWITCH,O.NONE,O.NONE,436,58,95,58,70,58,97,180,50,153)),new M(e.CUFANT,8,!1,!1,!1,"Copperderm Pokémon",L.STEEL,null,1.2,100,O.SHEER_FORCE,O.NONE,O.HEAVY_METAL,330,72,80,49,40,49,40,190,50,66,P.MEDIUM_FAST,50,!1),new M(e.COPPERAJAH,8,!1,!1,!1,"Copperderm Pokémon",L.STEEL,null,3,650,O.SHEER_FORCE,O.NONE,O.HEAVY_METAL,500,122,130,69,80,69,30,90,50,175,P.MEDIUM_FAST,50,!1,!0,new F("Normal","",L.STEEL,null,3,650,O.SHEER_FORCE,O.NONE,O.HEAVY_METAL,500,122,130,69,80,69,30,90,50,175,!1,null,!0),new F("G-Max",te.GIGANTAMAX,L.STEEL,L.GROUND,23,999.9,O.MOLD_BREAKER,O.NONE,O.MOLD_BREAKER,600,177,155,79,90,79,20,90,50,175)),new M(e.DRACOZOLT,8,!1,!1,!1,"Fossil Pokémon",L.ELECTRIC,L.DRAGON,1.8,190,O.VOLT_ABSORB,O.HUSTLE,O.SAND_RUSH,505,90,100,90,80,70,75,45,50,177,P.SLOW,null,!1),new M(e.ARCTOZOLT,8,!1,!1,!1,"Fossil Pokémon",L.ELECTRIC,L.ICE,2.3,150,O.VOLT_ABSORB,O.STATIC,O.SLUSH_RUSH,505,90,100,90,90,80,55,45,50,177,P.SLOW,null,!1),new M(e.DRACOVISH,8,!1,!1,!1,"Fossil Pokémon",L.WATER,L.DRAGON,2.3,215,O.WATER_ABSORB,O.STRONG_JAW,O.SAND_RUSH,505,90,90,100,70,80,75,45,50,177,P.SLOW,null,!1),new M(e.ARCTOVISH,8,!1,!1,!1,"Fossil Pokémon",L.WATER,L.ICE,2,175,O.WATER_ABSORB,O.ICE_BODY,O.SLUSH_RUSH,505,90,90,100,80,90,55,45,50,177,P.SLOW,null,!1),new M(e.DURALUDON,8,!1,!1,!1,"Alloy Pokémon",L.STEEL,L.DRAGON,1.8,40,O.LIGHT_METAL,O.HEAVY_METAL,O.STALWART,535,70,95,115,120,50,85,45,50,187,P.MEDIUM_FAST,50,!1,!0,new F("Normal","",L.STEEL,L.DRAGON,1.8,40,O.LIGHT_METAL,O.HEAVY_METAL,O.STALWART,535,70,95,115,120,50,85,45,50,187,!1,null,!0),new F("G-Max",te.GIGANTAMAX,L.STEEL,L.DRAGON,43,999.9,O.LIGHTNING_ROD,O.LIGHTNING_ROD,O.LIGHTNING_ROD,635,100,110,120,175,60,70,45,50,187)),new M(e.DREEPY,8,!1,!1,!1,"Lingering Pokémon",L.DRAGON,L.GHOST,.5,2,O.CLEAR_BODY,O.INFILTRATOR,O.CURSED_BODY,270,28,60,30,40,30,82,45,50,54,P.SLOW,50,!1),new M(e.DRAKLOAK,8,!1,!1,!1,"Caretaker Pokémon",L.DRAGON,L.GHOST,1.4,11,O.CLEAR_BODY,O.INFILTRATOR,O.CURSED_BODY,410,68,80,50,60,50,102,45,50,144,P.SLOW,50,!1),new M(e.DRAGAPULT,8,!1,!1,!1,"Stealth Pokémon",L.DRAGON,L.GHOST,3,50,O.CLEAR_BODY,O.INFILTRATOR,O.CURSED_BODY,600,88,120,75,100,75,142,45,50,300,P.SLOW,50,!1),new M(e.ZACIAN,8,!1,!0,!1,"Warrior Pokémon",L.FAIRY,null,2.8,110,O.INTREPID_SWORD,O.NONE,O.NONE,660,92,120,115,80,115,138,10,0,335,P.SLOW,null,!1,!1,new F("Hero of Many Battles","hero-of-many-battles",L.FAIRY,null,2.8,110,O.INTREPID_SWORD,O.NONE,O.NONE,660,92,120,115,80,115,138,10,0,335,!1,"",!0),new F("Crowned","crowned",L.FAIRY,L.STEEL,2.8,355,O.INTREPID_SWORD,O.NONE,O.NONE,700,92,150,115,80,115,148,10,0,360)),new M(e.ZAMAZENTA,8,!1,!0,!1,"Warrior Pokémon",L.FIGHTING,null,2.9,210,O.DAUNTLESS_SHIELD,O.NONE,O.NONE,660,92,120,115,80,115,138,10,0,335,P.SLOW,null,!1,!1,new F("Hero of Many Battles","hero-of-many-battles",L.FIGHTING,null,2.9,210,O.DAUNTLESS_SHIELD,O.NONE,O.NONE,660,92,120,115,80,115,138,10,0,335,!1,"",!0),new F("Crowned","crowned",L.FIGHTING,L.STEEL,2.9,785,O.DAUNTLESS_SHIELD,O.NONE,O.NONE,700,92,120,140,80,140,128,10,0,360)),new M(e.ETERNATUS,8,!1,!0,!1,"Gigantic Pokémon",L.POISON,L.DRAGON,20,950,O.PRESSURE,O.NONE,O.NONE,690,140,85,95,145,95,130,255,0,345,P.SLOW,null,!1,!0,new F("Normal","",L.POISON,L.DRAGON,20,950,O.PRESSURE,O.NONE,O.NONE,690,140,85,95,145,95,130,255,0,345,!1,null,!0),new F("E-Max","eternamax",L.POISON,L.DRAGON,100,999.9,O.PRESSURE,O.NONE,O.NONE,1125,255,115,250,125,250,130,255,0,345)),new M(e.KUBFU,8,!0,!1,!1,"Wushu Pokémon",L.FIGHTING,null,.6,12,O.INNER_FOCUS,O.NONE,O.NONE,385,60,90,60,53,50,72,3,50,77,P.SLOW,87.5,!1),new M(e.URSHIFU,8,!0,!1,!1,"Wushu Pokémon",L.FIGHTING,L.DARK,1.9,105,O.UNSEEN_FIST,O.NONE,O.NONE,550,100,130,100,63,60,97,3,50,275,P.SLOW,87.5,!1,!0,new F("Single Strike Style","single-strike",L.FIGHTING,L.DARK,1.9,105,O.UNSEEN_FIST,O.NONE,O.NONE,550,100,130,100,63,60,97,3,50,275,!1,"",!0),new F("Rapid Strike Style","rapid-strike",L.FIGHTING,L.WATER,1.9,105,O.UNSEEN_FIST,O.NONE,O.NONE,550,100,130,100,63,60,97,3,50,275,!1,null,!0),new F("G-Max Single Strike Style",te.GIGANTAMAX_SINGLE,L.FIGHTING,L.DARK,29,999.9,O.UNSEEN_FIST,O.NONE,O.NONE,650,125,145,115,83,70,112,3,50,275),new F("G-Max Rapid Strike Style",te.GIGANTAMAX_RAPID,L.FIGHTING,L.WATER,26,999.9,O.UNSEEN_FIST,O.NONE,O.NONE,650,125,145,115,83,70,112,3,50,275)),new M(e.ZARUDE,8,!1,!1,!0,"Rogue Monkey Pokémon",L.DARK,L.GRASS,1.8,70,O.LEAF_GUARD,O.NONE,O.NONE,600,105,120,105,70,95,105,3,0,300,P.SLOW,null,!1,!1,new F("Normal","",L.DARK,L.GRASS,1.8,70,O.LEAF_GUARD,O.NONE,O.NONE,600,105,120,105,70,95,105,3,0,300,!1,null,!0),new F("Dada","dada",L.DARK,L.GRASS,1.8,70,O.LEAF_GUARD,O.NONE,O.NONE,600,105,120,105,70,95,105,3,0,300,!1,null,!0)),new M(e.REGIELEKI,8,!0,!1,!1,"Electron Pokémon",L.ELECTRIC,null,1.2,145,O.TRANSISTOR,O.NONE,O.NONE,580,80,100,50,100,50,200,3,35,290,P.SLOW,null,!1),new M(e.REGIDRAGO,8,!0,!1,!1,"Dragon Orb Pokémon",L.DRAGON,null,2.1,200,O.DRAGONS_MAW,O.NONE,O.NONE,580,200,100,50,100,50,80,3,35,290,P.SLOW,null,!1),new M(e.GLASTRIER,8,!0,!1,!1,"Wild Horse Pokémon",L.ICE,null,2.2,800,O.CHILLING_NEIGH,O.NONE,O.NONE,580,100,145,130,65,110,30,3,35,290,P.SLOW,null,!1),new M(e.SPECTRIER,8,!0,!1,!1,"Swift Horse Pokémon",L.GHOST,null,2,44.5,O.GRIM_NEIGH,O.NONE,O.NONE,580,100,65,60,145,80,130,3,35,290,P.SLOW,null,!1),new M(e.CALYREX,8,!1,!0,!1,"King Pokémon",L.PSYCHIC,L.GRASS,1.1,7.7,O.UNNERVE,O.NONE,O.NONE,500,100,80,80,80,80,80,3,100,250,P.SLOW,null,!1,!0,new F("Normal","",L.PSYCHIC,L.GRASS,1.1,7.7,O.UNNERVE,O.NONE,O.NONE,500,100,80,80,80,80,80,3,100,250,!1,null,!0),new F("Ice","ice",L.PSYCHIC,L.ICE,2.4,809.1,O.AS_ONE_GLASTRIER,O.NONE,O.NONE,680,100,165,150,85,130,50,3,100,340),new F("Shadow","shadow",L.PSYCHIC,L.GHOST,2.4,53.6,O.AS_ONE_SPECTRIER,O.NONE,O.NONE,680,100,85,80,165,100,150,3,100,340)),new M(e.WYRDEER,8,!1,!1,!1,"Big Horn Pokémon",L.NORMAL,L.PSYCHIC,1.8,95.1,O.INTIMIDATE,O.FRISK,O.SAP_SIPPER,525,103,105,72,105,75,65,135,50,263,P.SLOW,50,!1),new M(e.KLEAVOR,8,!1,!1,!1,"Axe Pokémon",L.BUG,L.ROCK,1.8,89,O.SWARM,O.SHEER_FORCE,O.SHARPNESS,500,70,135,95,45,70,85,115,50,175,P.MEDIUM_FAST,50,!1),new M(e.URSALUNA,8,!1,!1,!1,"Peat Pokémon",L.GROUND,L.NORMAL,2.4,290,O.GUTS,O.BULLETPROOF,O.UNNERVE,550,130,140,105,45,80,50,75,50,275,P.MEDIUM_FAST,50,!1),new M(e.BASCULEGION,8,!1,!1,!1,"Big Fish Pokémon",L.WATER,L.GHOST,3,110,O.SWIFT_SWIM,O.ADAPTABILITY,O.MOLD_BREAKER,530,120,112,65,80,75,78,135,50,265,P.MEDIUM_FAST,50,!1,!1,new F("Male","male",L.WATER,L.GHOST,3,110,O.SWIFT_SWIM,O.ADAPTABILITY,O.MOLD_BREAKER,530,120,112,65,80,75,78,135,50,265,!1,"",!0),new F("Female","female",L.WATER,L.GHOST,3,110,O.SWIFT_SWIM,O.ADAPTABILITY,O.MOLD_BREAKER,530,120,92,65,100,75,78,135,50,265,!1,null,!0)),new M(e.SNEASLER,8,!1,!1,!1,"Free Climb Pokémon",L.FIGHTING,L.POISON,1.3,43,O.PRESSURE,O.UNBURDEN,O.POISON_TOUCH,510,80,130,60,40,80,120,135,50,102,P.MEDIUM_SLOW,50,!1),new M(e.OVERQWIL,8,!1,!1,!1,"Pin Cluster Pokémon",L.DARK,L.POISON,2.5,60.5,O.POISON_POINT,O.SWIFT_SWIM,O.INTIMIDATE,510,85,115,95,65,65,85,135,50,179,P.MEDIUM_FAST,50,!1),new M(e.ENAMORUS,8,!0,!1,!1,"Love-Hate Pokémon",L.FAIRY,L.FLYING,1.6,48,O.CUTE_CHARM,O.NONE,O.CONTRARY,580,74,115,70,135,80,106,3,50,116,P.SLOW,0,!1,!0,new F("Incarnate Forme","incarnate",L.FAIRY,L.FLYING,1.6,48,O.CUTE_CHARM,O.NONE,O.CONTRARY,580,74,115,70,135,80,106,3,50,116,!1,null,!0),new F("Therian Forme","therian",L.FAIRY,L.FLYING,1.6,48,O.OVERCOAT,O.NONE,O.OVERCOAT,580,74,115,110,135,100,46,3,50,116)),new M(e.SPRIGATITO,9,!1,!1,!1,"Grass Cat Pokémon",L.GRASS,null,.4,4.1,O.OVERGROW,O.NONE,O.PROTEAN,310,40,61,54,45,45,65,45,50,62,P.MEDIUM_SLOW,87.5,!1),new M(e.FLORAGATO,9,!1,!1,!1,"Grass Cat Pokémon",L.GRASS,null,.9,12.2,O.OVERGROW,O.NONE,O.PROTEAN,410,61,80,63,60,63,83,45,50,144,P.MEDIUM_SLOW,87.5,!1),new M(e.MEOWSCARADA,9,!1,!1,!1,"Magician Pokémon",L.GRASS,L.DARK,1.5,31.2,O.OVERGROW,O.NONE,O.PROTEAN,530,76,110,70,81,70,123,45,50,265,P.MEDIUM_SLOW,87.5,!1),new M(e.FUECOCO,9,!1,!1,!1,"Fire Croc Pokémon",L.FIRE,null,.4,9.8,O.BLAZE,O.NONE,O.UNAWARE,310,67,45,59,63,40,36,45,50,62,P.MEDIUM_SLOW,87.5,!1),new M(e.CROCALOR,9,!1,!1,!1,"Fire Croc Pokémon",L.FIRE,null,1,30.7,O.BLAZE,O.NONE,O.UNAWARE,411,81,55,78,90,58,49,45,50,144,P.MEDIUM_SLOW,87.5,!1),new M(e.SKELEDIRGE,9,!1,!1,!1,"Singer Pokémon",L.FIRE,L.GHOST,1.6,326.5,O.BLAZE,O.NONE,O.UNAWARE,530,104,75,100,110,75,66,45,50,265,P.MEDIUM_SLOW,87.5,!1),new M(e.QUAXLY,9,!1,!1,!1,"Duckling Pokémon",L.WATER,null,.5,6.1,O.TORRENT,O.NONE,O.MOXIE,310,55,65,45,50,45,50,45,50,62,P.MEDIUM_SLOW,87.5,!1),new M(e.QUAXWELL,9,!1,!1,!1,"Practicing Pokémon",L.WATER,null,1.2,21.5,O.TORRENT,O.NONE,O.MOXIE,410,70,85,65,65,60,65,45,50,144,P.MEDIUM_SLOW,87.5,!1),new M(e.QUAQUAVAL,9,!1,!1,!1,"Dancer Pokémon",L.WATER,L.FIGHTING,1.8,61.9,O.TORRENT,O.NONE,O.MOXIE,530,85,120,80,85,75,85,45,50,265,P.MEDIUM_SLOW,87.5,!1),new M(e.LECHONK,9,!1,!1,!1,"Hog Pokémon",L.NORMAL,null,.5,10.2,O.AROMA_VEIL,O.GLUTTONY,O.THICK_FAT,254,54,45,40,35,45,35,255,50,51,P.MEDIUM_FAST,50,!1),new M(e.OINKOLOGNE,9,!1,!1,!1,"Hog Pokémon",L.NORMAL,null,1,120,O.LINGERING_AROMA,O.GLUTTONY,O.THICK_FAT,489,110,100,75,59,80,65,100,50,171,P.MEDIUM_FAST,50,!1,!1,new F("Male","male",L.NORMAL,null,1,120,O.LINGERING_AROMA,O.GLUTTONY,O.THICK_FAT,489,110,100,75,59,80,65,100,50,171,!1,"",!0),new F("Female","female",L.NORMAL,null,1,120,O.AROMA_VEIL,O.GLUTTONY,O.THICK_FAT,489,115,90,70,59,90,65,100,50,171,!1,null,!0)),new M(e.TAROUNTULA,9,!1,!1,!1,"String Ball Pokémon",L.BUG,null,.3,4,O.INSOMNIA,O.NONE,O.STAKEOUT,210,35,41,45,29,40,20,255,50,42,P.ERRATIC,50,!1),new M(e.SPIDOPS,9,!1,!1,!1,"Trap Pokémon",L.BUG,null,1,16.5,O.INSOMNIA,O.NONE,O.STAKEOUT,404,60,79,92,52,86,35,120,50,141,P.ERRATIC,50,!1),new M(e.NYMBLE,9,!1,!1,!1,"Grasshopper Pokémon",L.BUG,null,.2,1,O.SWARM,O.NONE,O.TINTED_LENS,210,33,46,40,21,25,45,190,20,42,P.MEDIUM_FAST,50,!1),new M(e.LOKIX,9,!1,!1,!1,"Grasshopper Pokémon",L.BUG,L.DARK,1,17.5,O.SWARM,O.NONE,O.TINTED_LENS,450,71,102,78,52,55,92,30,0,158,P.MEDIUM_FAST,50,!1),new M(e.PAWMI,9,!1,!1,!1,"Mouse Pokémon",L.ELECTRIC,null,.3,2.5,O.STATIC,O.NATURAL_CURE,O.IRON_FIST,240,45,50,20,40,25,60,190,50,48,P.MEDIUM_FAST,50,!1),new M(e.PAWMO,9,!1,!1,!1,"Mouse Pokémon",L.ELECTRIC,L.FIGHTING,.4,6.5,O.VOLT_ABSORB,O.NATURAL_CURE,O.IRON_FIST,350,60,75,40,50,40,85,80,50,123,P.MEDIUM_FAST,50,!1),new M(e.PAWMOT,9,!1,!1,!1,"Hands-On Pokémon",L.ELECTRIC,L.FIGHTING,.9,41,O.VOLT_ABSORB,O.NATURAL_CURE,O.IRON_FIST,490,70,115,70,70,60,105,45,50,245,P.MEDIUM_FAST,50,!1),new M(e.TANDEMAUS,9,!1,!1,!1,"Couple Pokémon",L.NORMAL,null,.3,1.8,O.RUN_AWAY,O.PICKUP,O.OWN_TEMPO,305,50,50,45,40,45,75,150,50,61,P.FAST,null,!1),new M(e.MAUSHOLD,9,!1,!1,!1,"Family Pokémon",L.NORMAL,null,.3,2.3,O.FRIEND_GUARD,O.CHEEK_POUCH,O.TECHNICIAN,470,74,75,70,65,75,111,75,50,165,P.FAST,null,!1,!1,new F("Family of Four","four",L.NORMAL,null,.3,2.8,O.FRIEND_GUARD,O.CHEEK_POUCH,O.TECHNICIAN,470,74,75,70,65,75,111,75,50,165),new F("Family of Three","three",L.NORMAL,null,.3,2.3,O.FRIEND_GUARD,O.CHEEK_POUCH,O.TECHNICIAN,470,74,75,70,65,75,111,75,50,165)),new M(e.FIDOUGH,9,!1,!1,!1,"Puppy Pokémon",L.FAIRY,null,.3,10.9,O.OWN_TEMPO,O.NONE,O.KLUTZ,312,37,55,70,30,55,65,190,50,62,P.MEDIUM_SLOW,50,!1),new M(e.DACHSBUN,9,!1,!1,!1,"Dog Pokémon",L.FAIRY,null,.5,14.9,O.WELL_BAKED_BODY,O.NONE,O.AROMA_VEIL,477,57,80,115,50,80,95,90,50,167,P.MEDIUM_SLOW,50,!1),new M(e.SMOLIV,9,!1,!1,!1,"Olive Pokémon",L.GRASS,L.NORMAL,.3,6.5,O.EARLY_BIRD,O.NONE,O.HARVEST,260,41,35,45,58,51,30,255,50,52,P.MEDIUM_SLOW,50,!1),new M(e.DOLLIV,9,!1,!1,!1,"Olive Pokémon",L.GRASS,L.NORMAL,.6,11.9,O.EARLY_BIRD,O.NONE,O.HARVEST,354,52,53,60,78,78,33,120,50,124,P.MEDIUM_SLOW,50,!1),new M(e.ARBOLIVA,9,!1,!1,!1,"Olive Pokémon",L.GRASS,L.NORMAL,1.4,48.2,O.SEED_SOWER,O.NONE,O.HARVEST,510,78,69,90,125,109,39,45,50,255,P.MEDIUM_SLOW,50,!1),new M(e.SQUAWKABILLY,9,!1,!1,!1,"Parrot Pokémon",L.NORMAL,L.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.GUTS,417,82,96,51,45,51,92,190,50,146,P.ERRATIC,50,!1,!1,new F("Green Plumage","green-plumage",L.NORMAL,L.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.GUTS,417,82,96,51,45,51,92,190,50,146,!1,null,!0),new F("Blue Plumage","blue-plumage",L.NORMAL,L.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.GUTS,417,82,96,51,45,51,92,190,50,146,!1,null,!0),new F("Yellow Plumage","yellow-plumage",L.NORMAL,L.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.SHEER_FORCE,417,82,96,51,45,51,92,190,50,146,!1,null,!0),new F("White Plumage","white-plumage",L.NORMAL,L.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.SHEER_FORCE,417,82,96,51,45,51,92,190,50,146,!1,null,!0)),new M(e.NACLI,9,!1,!1,!1,"Rock Salt Pokémon",L.ROCK,null,.4,16,O.PURIFYING_SALT,O.STURDY,O.CLEAR_BODY,280,55,55,75,35,35,25,255,50,56,P.MEDIUM_SLOW,50,!1),new M(e.NACLSTACK,9,!1,!1,!1,"Rock Salt Pokémon",L.ROCK,null,.6,105,O.PURIFYING_SALT,O.STURDY,O.CLEAR_BODY,355,60,60,100,35,65,35,120,50,124,P.MEDIUM_SLOW,50,!1),new M(e.GARGANACL,9,!1,!1,!1,"Rock Salt Pokémon",L.ROCK,null,2.3,240,O.PURIFYING_SALT,O.STURDY,O.CLEAR_BODY,500,100,100,130,45,90,35,45,50,250,P.MEDIUM_SLOW,50,!1),new M(e.CHARCADET,9,!1,!1,!1,"Fire Child Pokémon",L.FIRE,null,.6,10.5,O.FLASH_FIRE,O.NONE,O.FLAME_BODY,255,40,50,40,50,40,35,90,50,51,P.SLOW,50,!1),new M(e.ARMAROUGE,9,!1,!1,!1,"Fire Warrior Pokémon",L.FIRE,L.PSYCHIC,1.5,85,O.FLASH_FIRE,O.NONE,O.WEAK_ARMOR,525,85,60,100,125,80,75,25,20,263,P.SLOW,50,!1),new M(e.CERULEDGE,9,!1,!1,!1,"Fire Blades Pokémon",L.FIRE,L.GHOST,1.6,62,O.FLASH_FIRE,O.NONE,O.WEAK_ARMOR,525,75,125,80,60,100,85,25,20,263,P.SLOW,50,!1),new M(e.TADBULB,9,!1,!1,!1,"EleTadpole Pokémon",L.ELECTRIC,null,.3,.4,O.OWN_TEMPO,O.STATIC,O.DAMP,272,61,31,41,59,35,45,190,50,54,P.MEDIUM_FAST,50,!1),new M(e.BELLIBOLT,9,!1,!1,!1,"EleFrog Pokémon",L.ELECTRIC,null,1.2,113,O.ELECTROMORPHOSIS,O.STATIC,O.DAMP,495,109,64,91,103,83,45,50,50,173,P.MEDIUM_FAST,50,!1),new M(e.WATTREL,9,!1,!1,!1,"Storm Petrel Pokémon",L.ELECTRIC,L.FLYING,.4,3.6,O.WIND_POWER,O.VOLT_ABSORB,O.COMPETITIVE,280,40,40,35,55,40,70,180,50,56,P.MEDIUM_SLOW,50,!1),new M(e.KILOWATTREL,9,!1,!1,!1,"Frigatebird Pokémon",L.ELECTRIC,L.FLYING,1.4,38.6,O.WIND_POWER,O.VOLT_ABSORB,O.COMPETITIVE,490,70,70,60,105,60,125,90,50,172,P.MEDIUM_SLOW,50,!1),new M(e.MASCHIFF,9,!1,!1,!1,"Rascal Pokémon",L.DARK,null,.5,16,O.INTIMIDATE,O.RUN_AWAY,O.STAKEOUT,340,60,78,60,40,51,51,150,50,68,P.MEDIUM_SLOW,50,!1),new M(e.MABOSSTIFF,9,!1,!1,!1,"Boss Pokémon",L.DARK,null,1.1,61,O.INTIMIDATE,O.GUARD_DOG,O.STAKEOUT,505,80,120,90,60,70,85,75,50,177,P.MEDIUM_SLOW,50,!1),new M(e.SHROODLE,9,!1,!1,!1,"Toxic Mouse Pokémon",L.POISON,L.NORMAL,.2,.7,O.UNBURDEN,O.PICKPOCKET,O.PRANKSTER,290,40,65,35,40,35,75,190,50,58,P.MEDIUM_SLOW,50,!1),new M(e.GRAFAIAI,9,!1,!1,!1,"Toxic Monkey Pokémon",L.POISON,L.NORMAL,.7,27.2,O.UNBURDEN,O.POISON_TOUCH,O.PRANKSTER,485,63,95,65,80,72,110,90,50,170,P.MEDIUM_SLOW,50,!1),new M(e.BRAMBLIN,9,!1,!1,!1,"Tumbleweed Pokémon",L.GRASS,L.GHOST,.6,.6,O.WIND_RIDER,O.NONE,O.INFILTRATOR,275,40,65,30,45,35,60,190,50,55,P.MEDIUM_FAST,50,!1),new M(e.BRAMBLEGHAST,9,!1,!1,!1,"Tumbleweed Pokémon",L.GRASS,L.GHOST,1.2,6,O.WIND_RIDER,O.NONE,O.INFILTRATOR,480,55,115,70,80,70,90,45,50,168,P.MEDIUM_FAST,50,!1),new M(e.TOEDSCOOL,9,!1,!1,!1,"Woodear Pokémon",L.GROUND,L.GRASS,.9,33,O.MYCELIUM_MIGHT,O.NONE,O.NONE,335,40,40,35,50,100,70,190,50,67,P.MEDIUM_SLOW,50,!1),new M(e.TOEDSCRUEL,9,!1,!1,!1,"Woodear Pokémon",L.GROUND,L.GRASS,1.9,58,O.MYCELIUM_MIGHT,O.NONE,O.NONE,515,80,70,65,80,120,100,90,50,180,P.MEDIUM_SLOW,50,!1),new M(e.KLAWF,9,!1,!1,!1,"Ambush Pokémon",L.ROCK,null,1.3,79,O.ANGER_SHELL,O.SHELL_ARMOR,O.REGENERATOR,450,70,100,115,35,55,75,120,50,158,P.MEDIUM_FAST,50,!1),new M(e.CAPSAKID,9,!1,!1,!1,"Spicy Pepper Pokémon",L.GRASS,null,.3,3,O.CHLOROPHYLL,O.INSOMNIA,O.KLUTZ,304,50,62,40,62,40,50,190,50,61,P.MEDIUM_FAST,50,!1),new M(e.SCOVILLAIN,9,!1,!1,!1,"Spicy Pepper Pokémon",L.GRASS,L.FIRE,.9,15,O.CHLOROPHYLL,O.INSOMNIA,O.MOODY,486,65,108,65,108,65,75,75,50,170,P.MEDIUM_FAST,50,!1),new M(e.RELLOR,9,!1,!1,!1,"Rolling Pokémon",L.BUG,null,.2,1,O.COMPOUND_EYES,O.NONE,O.SHED_SKIN,270,41,50,60,31,58,30,190,50,54,P.FAST,50,!1),new M(e.RABSCA,9,!1,!1,!1,"Rolling Pokémon",L.BUG,L.PSYCHIC,.3,3.5,O.SYNCHRONIZE,O.NONE,O.TELEPATHY,470,75,50,85,115,100,45,45,50,165,P.FAST,50,!1),new M(e.FLITTLE,9,!1,!1,!1,"Frill Pokémon",L.PSYCHIC,null,.2,1.5,O.ANTICIPATION,O.FRISK,O.SPEED_BOOST,255,30,35,30,55,30,75,120,50,51,P.MEDIUM_SLOW,50,!1),new M(e.ESPATHRA,9,!1,!1,!1,"Ostrich Pokémon",L.PSYCHIC,null,1.9,90,O.OPPORTUNIST,O.FRISK,O.SPEED_BOOST,481,95,60,60,101,60,105,60,50,168,P.MEDIUM_SLOW,50,!1),new M(e.TINKATINK,9,!1,!1,!1,"Metalsmith Pokémon",L.FAIRY,L.STEEL,.4,8.9,O.MOLD_BREAKER,O.OWN_TEMPO,O.PICKPOCKET,297,50,45,45,35,64,58,190,50,59,P.MEDIUM_SLOW,0,!1),new M(e.TINKATUFF,9,!1,!1,!1,"Hammer Pokémon",L.FAIRY,L.STEEL,.7,59.1,O.MOLD_BREAKER,O.OWN_TEMPO,O.PICKPOCKET,380,65,55,55,45,82,78,90,50,133,P.MEDIUM_SLOW,0,!1),new M(e.TINKATON,9,!1,!1,!1,"Hammer Pokémon",L.FAIRY,L.STEEL,.7,112.8,O.MOLD_BREAKER,O.OWN_TEMPO,O.PICKPOCKET,506,85,75,77,70,105,94,45,50,253,P.MEDIUM_SLOW,0,!1),new M(e.WIGLETT,9,!1,!1,!1,"Garden Eel Pokémon",L.WATER,null,1.2,1.8,O.GOOEY,O.RATTLED,O.SAND_VEIL,245,10,55,25,35,25,95,255,50,49,P.MEDIUM_FAST,50,!1),new M(e.WUGTRIO,9,!1,!1,!1,"Garden Eel Pokémon",L.WATER,null,1.2,5.4,O.GOOEY,O.RATTLED,O.SAND_VEIL,425,35,100,50,50,70,120,50,50,149,P.MEDIUM_FAST,50,!1),new M(e.BOMBIRDIER,9,!1,!1,!1,"Item Drop Pokémon",L.FLYING,L.DARK,1.5,42.9,O.BIG_PECKS,O.KEEN_EYE,O.ROCKY_PAYLOAD,485,70,103,85,60,85,82,25,50,243,P.SLOW,50,!1),new M(e.FINIZEN,9,!1,!1,!1,"Dolphin Pokémon",L.WATER,null,1.3,60.2,O.WATER_VEIL,O.NONE,O.NONE,315,70,45,40,45,40,75,200,50,63,P.SLOW,50,!1),new M(e.PALAFIN,9,!1,!1,!1,"Dolphin Pokémon",L.WATER,null,1.3,60.2,O.ZERO_TO_HERO,O.NONE,O.NONE,457,100,70,72,53,62,100,45,50,160,P.SLOW,50,!1,!0,new F("Zero Form","zero",L.WATER,null,1.3,60.2,O.ZERO_TO_HERO,O.NONE,O.ZERO_TO_HERO,457,100,70,72,53,62,100,45,50,160,!1,null,!0),new F("Hero Form","hero",L.WATER,null,1.8,97.4,O.ZERO_TO_HERO,O.NONE,O.ZERO_TO_HERO,650,100,160,97,106,87,100,45,50,160)),new M(e.VAROOM,9,!1,!1,!1,"Single-Cyl Pokémon",L.STEEL,L.POISON,1,35,O.OVERCOAT,O.NONE,O.SLOW_START,300,45,70,63,30,45,47,190,50,60,P.MEDIUM_FAST,50,!1),new M(e.REVAVROOM,9,!1,!1,!1,"Multi-Cyl Pokémon",L.STEEL,L.POISON,1.8,120,O.OVERCOAT,O.NONE,O.FILTER,500,80,119,90,54,67,90,75,50,175,P.MEDIUM_FAST,50,!1,!1,new F("Normal","",L.STEEL,L.POISON,1.8,120,O.OVERCOAT,O.NONE,O.FILTER,500,80,119,90,54,67,90,75,50,175,!1,null,!0),new F("Segin Starmobile","segin-starmobile",L.STEEL,L.DARK,1.8,240,O.INTIMIDATE,O.NONE,O.INTIMIDATE,600,110,129,100,77,79,105,75,50,175,!1,null,!1,!0),new F("Schedar Starmobile","schedar-starmobile",L.STEEL,L.FIRE,1.8,240,O.SPEED_BOOST,O.NONE,O.SPEED_BOOST,600,110,129,100,77,79,105,75,50,175,!1,null,!1,!0),new F("Navi Starmobile","navi-starmobile",L.STEEL,L.POISON,1.8,240,O.TOXIC_DEBRIS,O.NONE,O.TOXIC_DEBRIS,600,110,129,100,77,79,105,75,50,175,!1,null,!1,!0),new F("Ruchbah Starmobile","ruchbah-starmobile",L.STEEL,L.FAIRY,1.8,240,O.MISTY_SURGE,O.NONE,O.MISTY_SURGE,600,110,129,100,77,79,105,75,50,175,!1,null,!1,!0),new F("Caph Starmobile","caph-starmobile",L.STEEL,L.FIGHTING,1.8,240,O.STAMINA,O.NONE,O.STAMINA,600,110,129,100,77,79,105,75,50,175,!1,null,!1,!0)),new M(e.CYCLIZAR,9,!1,!1,!1,"Mount Pokémon",L.DRAGON,L.NORMAL,1.6,63,O.SHED_SKIN,O.NONE,O.REGENERATOR,501,70,95,65,85,65,121,190,50,175,P.MEDIUM_SLOW,50,!1),new M(e.ORTHWORM,9,!1,!1,!1,"Earthworm Pokémon",L.STEEL,null,2.5,310,O.EARTH_EATER,O.NONE,O.SAND_VEIL,480,70,85,145,60,55,65,25,50,240,P.SLOW,50,!1),new M(e.GLIMMET,9,!1,!1,!1,"Ore Pokémon",L.ROCK,L.POISON,.7,8,O.TOXIC_DEBRIS,O.NONE,O.CORROSION,350,48,35,42,105,60,60,70,50,70,P.MEDIUM_SLOW,50,!1),new M(e.GLIMMORA,9,!1,!1,!1,"Ore Pokémon",L.ROCK,L.POISON,1.5,45,O.TOXIC_DEBRIS,O.NONE,O.CORROSION,525,83,55,90,130,81,86,25,50,184,P.MEDIUM_SLOW,50,!1),new M(e.GREAVARD,9,!1,!1,!1,"Ghost Dog Pokémon",L.GHOST,null,.6,35,O.PICKUP,O.NONE,O.FLUFFY,290,50,61,60,30,55,34,120,50,58,P.MEDIUM_SLOW,50,!1),new M(e.HOUNDSTONE,9,!1,!1,!1,"Ghost Dog Pokémon",L.GHOST,null,2,15,O.SAND_RUSH,O.NONE,O.FLUFFY,488,72,101,100,50,97,68,60,50,171,P.MEDIUM_SLOW,50,!1),new M(e.FLAMIGO,9,!1,!1,!1,"Synchronize Pokémon",L.FLYING,L.FIGHTING,1.6,37,O.SCRAPPY,O.TANGLED_FEET,O.COSTAR,500,82,115,74,75,64,90,100,50,175,P.MEDIUM_SLOW,50,!1),new M(e.CETODDLE,9,!1,!1,!1,"Terra Whale Pokémon",L.ICE,null,1.2,45,O.THICK_FAT,O.SNOW_CLOAK,O.SHEER_FORCE,334,108,68,45,30,40,43,150,50,67,P.MEDIUM_SLOW,50,!1),new M(e.CETITAN,9,!1,!1,!1,"Terra Whale Pokémon",L.ICE,null,4.5,700,O.THICK_FAT,O.SLUSH_RUSH,O.SHEER_FORCE,521,170,113,65,45,55,73,50,50,182,P.MEDIUM_SLOW,50,!1),new M(e.VELUZA,9,!1,!1,!1,"Jettison Pokémon",L.WATER,L.PSYCHIC,2.5,90,O.MOLD_BREAKER,O.NONE,O.SHARPNESS,478,90,102,73,78,65,70,100,50,167,P.FAST,50,!1),new M(e.DONDOZO,9,!1,!1,!1,"Big Catfish Pokémon",L.WATER,null,12,220,O.UNAWARE,O.OBLIVIOUS,O.WATER_VEIL,530,150,100,115,65,65,35,25,50,265,P.SLOW,50,!1),new M(e.TATSUGIRI,9,!1,!1,!1,"Mimicry Pokémon",L.DRAGON,L.WATER,.3,8,O.COMMANDER,O.NONE,O.STORM_DRAIN,475,68,50,60,120,95,82,100,50,166,P.MEDIUM_SLOW,50,!1,!1,new F("Curly Form","curly",L.DRAGON,L.WATER,.3,8,O.COMMANDER,O.NONE,O.STORM_DRAIN,475,68,50,60,120,95,82,100,50,166,!1,null,!0),new F("Droopy Form","droopy",L.DRAGON,L.WATER,.3,8,O.COMMANDER,O.NONE,O.STORM_DRAIN,475,68,50,60,120,95,82,100,50,166,!1,null,!0),new F("Stretchy Form","stretchy",L.DRAGON,L.WATER,.3,8,O.COMMANDER,O.NONE,O.STORM_DRAIN,475,68,50,60,120,95,82,100,50,166,!1,null,!0)),new M(e.ANNIHILAPE,9,!1,!1,!1,"Rage Monkey Pokémon",L.FIGHTING,L.GHOST,1.2,56,O.VITAL_SPIRIT,O.INNER_FOCUS,O.DEFIANT,535,110,115,80,50,90,90,45,50,268,P.MEDIUM_FAST,50,!1),new M(e.CLODSIRE,9,!1,!1,!1,"Spiny Fish Pokémon",L.POISON,L.GROUND,1.8,223,O.POISON_POINT,O.WATER_ABSORB,O.UNAWARE,430,130,75,60,45,100,20,90,50,151,P.MEDIUM_FAST,50,!1),new M(e.FARIGIRAF,9,!1,!1,!1,"Long Neck Pokémon",L.NORMAL,L.PSYCHIC,3.2,160,O.CUD_CHEW,O.ARMOR_TAIL,O.SAP_SIPPER,520,120,90,70,110,70,60,45,50,260,P.MEDIUM_FAST,50,!1),new M(e.DUDUNSPARCE,9,!1,!1,!1,"Land Snake Pokémon",L.NORMAL,null,3.6,39.2,O.SERENE_GRACE,O.RUN_AWAY,O.RATTLED,520,125,100,80,85,75,55,45,50,182,P.MEDIUM_FAST,50,!1,!1,new F("Two-Segment Form","two-segment",L.NORMAL,null,3.6,39.2,O.SERENE_GRACE,O.RUN_AWAY,O.RATTLED,520,125,100,80,85,75,55,45,50,182,!1,""),new F("Three-Segment Form","three-segment",L.NORMAL,null,4.5,47.4,O.SERENE_GRACE,O.RUN_AWAY,O.RATTLED,520,125,100,80,85,75,55,45,50,182)),new M(e.KINGAMBIT,9,!1,!1,!1,"Big Blade Pokémon",L.DARK,L.STEEL,2,120,O.DEFIANT,O.SUPREME_OVERLORD,O.PRESSURE,550,100,135,120,60,85,50,25,50,275,P.MEDIUM_FAST,50,!1),new M(e.GREAT_TUSK,9,!1,!1,!1,"Paradox Pokémon",L.GROUND,L.FIGHTING,2.2,320,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,115,131,131,53,53,87,30,0,285,P.SLOW,null,!1),new M(e.SCREAM_TAIL,9,!1,!1,!1,"Paradox Pokémon",L.FAIRY,L.PSYCHIC,1.2,8,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,115,65,99,65,115,111,50,0,285,P.SLOW,null,!1),new M(e.BRUTE_BONNET,9,!1,!1,!1,"Paradox Pokémon",L.GRASS,L.DARK,1.2,21,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,111,127,99,79,99,55,50,0,285,P.SLOW,null,!1),new M(e.FLUTTER_MANE,9,!1,!1,!1,"Paradox Pokémon",L.GHOST,L.FAIRY,1.4,4,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,55,55,55,135,135,135,30,0,285,P.SLOW,null,!1),new M(e.SLITHER_WING,9,!1,!1,!1,"Paradox Pokémon",L.BUG,L.FIGHTING,3.2,92,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,85,135,79,85,105,81,30,0,285,P.SLOW,null,!1),new M(e.SANDY_SHOCKS,9,!1,!1,!1,"Paradox Pokémon",L.ELECTRIC,L.GROUND,2.3,60,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,85,81,97,121,85,101,30,0,285,P.SLOW,null,!1),new M(e.IRON_TREADS,9,!1,!1,!1,"Paradox Pokémon",L.GROUND,L.STEEL,.9,240,O.QUARK_DRIVE,O.NONE,O.NONE,570,90,112,120,72,70,106,30,0,285,P.SLOW,null,!1),new M(e.IRON_BUNDLE,9,!1,!1,!1,"Paradox Pokémon",L.ICE,L.WATER,.6,11,O.QUARK_DRIVE,O.NONE,O.NONE,570,56,80,114,124,60,136,50,0,285,P.SLOW,null,!1),new M(e.IRON_HANDS,9,!1,!1,!1,"Paradox Pokémon",L.FIGHTING,L.ELECTRIC,1.8,380.7,O.QUARK_DRIVE,O.NONE,O.NONE,570,154,140,108,50,68,50,50,0,285,P.SLOW,null,!1),new M(e.IRON_JUGULIS,9,!1,!1,!1,"Paradox Pokémon",L.DARK,L.FLYING,1.3,111,O.QUARK_DRIVE,O.NONE,O.NONE,570,94,80,86,122,80,108,30,0,285,P.SLOW,null,!1),new M(e.IRON_MOTH,9,!1,!1,!1,"Paradox Pokémon",L.FIRE,L.POISON,1.2,36,O.QUARK_DRIVE,O.NONE,O.NONE,570,80,70,60,140,110,110,30,0,285,P.SLOW,null,!1),new M(e.IRON_THORNS,9,!1,!1,!1,"Paradox Pokémon",L.ROCK,L.ELECTRIC,1.6,303,O.QUARK_DRIVE,O.NONE,O.NONE,570,100,134,110,70,84,72,30,0,285,P.SLOW,null,!1),new M(e.FRIGIBAX,9,!1,!1,!1,"Ice Fin Pokémon",L.DRAGON,L.ICE,.5,17,O.THERMAL_EXCHANGE,O.NONE,O.ICE_BODY,320,65,75,45,35,45,55,45,50,64,P.SLOW,50,!1),new M(e.ARCTIBAX,9,!1,!1,!1,"Ice Fin Pokémon",L.DRAGON,L.ICE,.8,30,O.THERMAL_EXCHANGE,O.NONE,O.ICE_BODY,423,90,95,66,45,65,62,25,50,148,P.SLOW,50,!1),new M(e.BAXCALIBUR,9,!1,!1,!1,"Ice Dragon Pokémon",L.DRAGON,L.ICE,2.1,210,O.THERMAL_EXCHANGE,O.NONE,O.ICE_BODY,600,115,145,92,75,86,87,10,50,300,P.SLOW,50,!1),new M(e.GIMMIGHOUL,9,!1,!1,!1,"Coin Chest Pokémon",L.GHOST,null,.3,5,O.RATTLED,O.NONE,O.NONE,300,45,30,70,75,70,10,45,50,60,P.SLOW,null,!1,!1,new F("Chest Form","chest",L.GHOST,null,.3,5,O.RATTLED,O.NONE,O.NONE,300,45,30,70,75,70,10,45,50,60,!1,"",!0),new F("Roaming Form","roaming",L.GHOST,null,.1,1,O.RUN_AWAY,O.NONE,O.NONE,300,45,30,25,75,45,80,45,50,60,!1,null,!0)),new M(e.GHOLDENGO,9,!1,!1,!1,"Coin Entity Pokémon",L.STEEL,L.GHOST,1.2,30,O.GOOD_AS_GOLD,O.NONE,O.NONE,550,87,60,95,133,91,84,45,50,275,P.SLOW,null,!1),new M(e.WO_CHIEN,9,!0,!1,!1,"Ruinous Pokémon",L.DARK,L.GRASS,1.5,74.2,O.TABLETS_OF_RUIN,O.NONE,O.NONE,570,85,85,100,95,135,70,6,0,285,P.SLOW,null,!1),new M(e.CHIEN_PAO,9,!0,!1,!1,"Ruinous Pokémon",L.DARK,L.ICE,1.9,152.2,O.SWORD_OF_RUIN,O.NONE,O.NONE,570,80,120,80,90,65,135,6,0,285,P.SLOW,null,!1),new M(e.TING_LU,9,!0,!1,!1,"Ruinous Pokémon",L.DARK,L.GROUND,2.7,699.7,O.VESSEL_OF_RUIN,O.NONE,O.NONE,570,155,110,125,55,80,45,6,0,285,P.SLOW,null,!1),new M(e.CHI_YU,9,!0,!1,!1,"Ruinous Pokémon",L.DARK,L.FIRE,.4,4.9,O.BEADS_OF_RUIN,O.NONE,O.NONE,570,55,80,80,135,120,100,6,0,285,P.SLOW,null,!1),new M(e.ROARING_MOON,9,!1,!1,!1,"Paradox Pokémon",L.DRAGON,L.DARK,2,380,O.PROTOSYNTHESIS,O.NONE,O.NONE,590,105,139,71,55,101,119,10,0,295,P.SLOW,null,!1),new M(e.IRON_VALIANT,9,!1,!1,!1,"Paradox Pokémon",L.FAIRY,L.FIGHTING,1.4,35,O.QUARK_DRIVE,O.NONE,O.NONE,590,74,130,90,120,60,116,10,0,295,P.SLOW,null,!1),new M(e.KORAIDON,9,!1,!0,!1,"Paradox Pokémon",L.FIGHTING,L.DRAGON,2.5,303,O.ORICHALCUM_PULSE,O.NONE,O.NONE,670,100,135,115,85,100,135,3,0,335,P.SLOW,null,!1,!1,new F("Apex Build","apex-build",L.FIGHTING,L.DRAGON,2.5,303,O.ORICHALCUM_PULSE,O.NONE,O.NONE,670,100,135,115,85,100,135,3,0,335,!1,null,!0)),new M(e.MIRAIDON,9,!1,!0,!1,"Paradox Pokémon",L.ELECTRIC,L.DRAGON,3.5,240,O.HADRON_ENGINE,O.NONE,O.NONE,670,100,85,100,135,115,135,3,0,335,P.SLOW,null,!1,!1,new F("Ultimate Mode","ultimate-mode",L.ELECTRIC,L.DRAGON,3.5,240,O.HADRON_ENGINE,O.NONE,O.NONE,670,100,85,100,135,115,135,3,0,335,!1,null,!0)),new M(e.WALKING_WAKE,9,!1,!1,!1,"Paradox Pokémon",L.WATER,L.DRAGON,3.5,280,O.PROTOSYNTHESIS,O.NONE,O.NONE,590,99,83,91,125,83,109,10,0,295,P.SLOW,null,!1),new M(e.IRON_LEAVES,9,!1,!1,!1,"Paradox Pokémon",L.GRASS,L.PSYCHIC,1.5,125,O.QUARK_DRIVE,O.NONE,O.NONE,590,90,130,88,70,108,104,10,0,295,P.SLOW,null,!1),new M(e.DIPPLIN,9,!1,!1,!1,"Candy Apple Pokémon",L.GRASS,L.DRAGON,.4,4.4,O.SUPERSWEET_SYRUP,O.GLUTTONY,O.STICKY_HOLD,485,80,80,110,95,80,40,45,50,170,P.ERRATIC,50,!1),new M(e.POLTCHAGEIST,9,!1,!1,!1,"Matcha Pokémon",L.GRASS,L.GHOST,.1,1.1,O.HOSPITALITY,O.NONE,O.HEATPROOF,308,40,45,45,74,54,50,120,50,62,P.SLOW,null,!1,!1,new F("Counterfeit Form","counterfeit",L.GRASS,L.GHOST,.1,1.1,O.HOSPITALITY,O.NONE,O.HEATPROOF,308,40,45,45,74,54,50,120,50,62,!1,null,!0),new F("Artisan Form","artisan",L.GRASS,L.GHOST,.1,1.1,O.HOSPITALITY,O.NONE,O.HEATPROOF,308,40,45,45,74,54,50,120,50,62,!1,null,!1,!0)),new M(e.SINISTCHA,9,!1,!1,!1,"Matcha Pokémon",L.GRASS,L.GHOST,.2,2.2,O.HOSPITALITY,O.NONE,O.HEATPROOF,508,71,60,106,121,80,70,60,50,178,P.SLOW,null,!1,!1,new F("Unremarkable Form","unremarkable",L.GRASS,L.GHOST,.2,2.2,O.HOSPITALITY,O.NONE,O.HEATPROOF,508,71,60,106,121,80,70,60,50,178),new F("Masterpiece Form","masterpiece",L.GRASS,L.GHOST,.2,2.2,O.HOSPITALITY,O.NONE,O.HEATPROOF,508,71,60,106,121,80,70,60,50,178,!1,null,!1,!0)),new M(e.OKIDOGI,9,!0,!1,!1,"Retainer Pokémon",L.POISON,L.FIGHTING,1.8,92.2,O.TOXIC_CHAIN,O.NONE,O.GUARD_DOG,555,88,128,115,58,86,80,3,0,276,P.SLOW,100,!1),new M(e.MUNKIDORI,9,!0,!1,!1,"Retainer Pokémon",L.POISON,L.PSYCHIC,1,12.2,O.TOXIC_CHAIN,O.NONE,O.FRISK,555,88,75,66,130,90,106,3,0,276,P.SLOW,100,!1),new M(e.FEZANDIPITI,9,!0,!1,!1,"Retainer Pokémon",L.POISON,L.FAIRY,1.4,30.1,O.TOXIC_CHAIN,O.NONE,O.TECHNICIAN,555,88,91,82,70,125,99,3,0,276,P.SLOW,100,!1),new M(e.OGERPON,9,!0,!1,!1,"Mask Pokémon",L.GRASS,null,1.2,39.8,O.DEFIANT,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275,P.SLOW,0,!1,!1,new F("Teal Mask","teal-mask",L.GRASS,null,1.2,39.8,O.DEFIANT,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275,!1,null,!0),new F("Wellspring Mask","wellspring-mask",L.GRASS,L.WATER,1.2,39.8,O.WATER_ABSORB,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new F("Hearthflame Mask","hearthflame-mask",L.GRASS,L.FIRE,1.2,39.8,O.MOLD_BREAKER,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new F("Cornerstone Mask","cornerstone-mask",L.GRASS,L.ROCK,1.2,39.8,O.STURDY,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new F("Teal Mask Terastallized","teal-mask-tera",L.GRASS,null,1.2,39.8,O.EMBODY_ASPECT_TEAL,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new F("Wellspring Mask Terastallized","wellspring-mask-tera",L.GRASS,L.WATER,1.2,39.8,O.EMBODY_ASPECT_WELLSPRING,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new F("Hearthflame Mask Terastallized","hearthflame-mask-tera",L.GRASS,L.FIRE,1.2,39.8,O.EMBODY_ASPECT_HEARTHFLAME,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new F("Cornerstone Mask Terastallized","cornerstone-mask-tera",L.GRASS,L.ROCK,1.2,39.8,O.EMBODY_ASPECT_CORNERSTONE,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275)),new M(e.ARCHALUDON,9,!1,!1,!1,"Alloy Pokémon",L.STEEL,L.DRAGON,2,60,O.STAMINA,O.STURDY,O.STALWART,600,90,105,130,125,65,85,10,50,300,P.MEDIUM_FAST,50,!1),new M(e.HYDRAPPLE,9,!1,!1,!1,"Apple Hydra Pokémon",L.GRASS,L.DRAGON,1.8,93,O.SUPERSWEET_SYRUP,O.REGENERATOR,O.STICKY_HOLD,540,106,80,110,120,80,44,10,50,270,P.ERRATIC,50,!1),new M(e.GOUGING_FIRE,9,!1,!1,!1,"Paradox Pokémon",L.FIRE,L.DRAGON,3.5,590,O.PROTOSYNTHESIS,O.NONE,O.NONE,590,105,115,121,65,93,91,10,0,295,P.SLOW,null,!1),new M(e.RAGING_BOLT,9,!1,!1,!1,"Paradox Pokémon",L.ELECTRIC,L.DRAGON,5.2,480,O.PROTOSYNTHESIS,O.NONE,O.NONE,590,125,73,91,137,89,75,10,0,295,P.SLOW,null,!1),new M(e.IRON_BOULDER,9,!1,!1,!1,"Paradox Pokémon",L.ROCK,L.PSYCHIC,1.5,162.5,O.QUARK_DRIVE,O.NONE,O.NONE,590,90,120,80,68,108,124,10,0,295,P.SLOW,null,!1),new M(e.IRON_CROWN,9,!1,!1,!1,"Paradox Pokémon",L.STEEL,L.PSYCHIC,1.6,156,O.QUARK_DRIVE,O.NONE,O.NONE,590,90,72,100,122,108,98,10,0,295,P.SLOW,null,!1),new M(e.TERAPAGOS,9,!1,!0,!1,"Tera Pokémon",L.NORMAL,null,.2,6.5,O.TERA_SHIFT,O.NONE,O.NONE,450,90,65,85,65,85,60,5,50,90,P.SLOW,50,!1,!1,new F("Normal Form","",L.NORMAL,null,.2,6.5,O.TERA_SHIFT,O.NONE,O.NONE,450,90,65,85,65,85,60,5,50,90,!1,null,!0),new F("Terastal Form","terastal",L.NORMAL,null,.3,16,O.TERA_SHELL,O.NONE,O.NONE,600,95,95,110,105,110,85,5,50,120),new F("Stellar Form","stellar",L.NORMAL,null,1.7,77,O.TERAFORM_ZERO,O.NONE,O.NONE,700,160,105,110,130,110,85,5,50,140)),new M(e.PECHARUNT,9,!1,!1,!0,"Subjugation Pokémon",L.POISON,L.GHOST,.3,.3,O.POISON_PUPPETEER,O.NONE,O.NONE,600,88,88,160,88,88,88,3,0,300,P.SLOW,null,!1),new M(e.ALOLA_RATTATA,7,!1,!1,!1,"Mouse Pokémon",L.DARK,L.NORMAL,.3,3.8,O.GLUTTONY,O.HUSTLE,O.THICK_FAT,253,30,56,35,25,35,72,255,70,51,P.MEDIUM_FAST,50,!1),new M(e.ALOLA_RATICATE,7,!1,!1,!1,"Mouse Pokémon",L.DARK,L.NORMAL,.7,25.5,O.GLUTTONY,O.HUSTLE,O.THICK_FAT,413,75,71,70,40,80,77,127,70,145,P.MEDIUM_FAST,50,!1),new M(e.ALOLA_RAICHU,7,!1,!1,!1,"Mouse Pokémon",L.ELECTRIC,L.PSYCHIC,.7,21,O.SURGE_SURFER,O.NONE,O.NONE,485,60,85,50,95,85,110,75,50,243,P.MEDIUM_FAST,50,!1),new M(e.ALOLA_SANDSHREW,7,!1,!1,!1,"Mouse Pokémon",L.ICE,L.STEEL,.7,40,O.SNOW_CLOAK,O.NONE,O.SLUSH_RUSH,300,50,75,90,10,35,40,255,50,60,P.MEDIUM_FAST,50,!1),new M(e.ALOLA_SANDSLASH,7,!1,!1,!1,"Mouse Pokémon",L.ICE,L.STEEL,1.2,55,O.SNOW_CLOAK,O.NONE,O.SLUSH_RUSH,450,75,100,120,25,65,65,90,50,158,P.MEDIUM_FAST,50,!1),new M(e.ALOLA_VULPIX,7,!1,!1,!1,"Fox Pokémon",L.ICE,null,.6,9.9,O.SNOW_CLOAK,O.NONE,O.SNOW_WARNING,299,38,41,40,50,65,65,190,50,60,P.MEDIUM_FAST,25,!1),new M(e.ALOLA_NINETALES,7,!1,!1,!1,"Fox Pokémon",L.ICE,L.FAIRY,1.1,19.9,O.SNOW_CLOAK,O.NONE,O.SNOW_WARNING,505,73,67,75,81,100,109,75,50,177,P.MEDIUM_FAST,25,!1),new M(e.ALOLA_DIGLETT,7,!1,!1,!1,"Mole Pokémon",L.GROUND,L.STEEL,.2,1,O.SAND_VEIL,O.TANGLING_HAIR,O.SAND_FORCE,265,10,55,30,35,45,90,255,50,53,P.MEDIUM_FAST,50,!1),new M(e.ALOLA_DUGTRIO,7,!1,!1,!1,"Mole Pokémon",L.GROUND,L.STEEL,.7,66.6,O.SAND_VEIL,O.TANGLING_HAIR,O.SAND_FORCE,425,35,100,60,50,70,110,50,50,149,P.MEDIUM_FAST,50,!1),new M(e.ALOLA_MEOWTH,7,!1,!1,!1,"Scratch Cat Pokémon",L.DARK,null,.4,4.2,O.PICKUP,O.TECHNICIAN,O.RATTLED,290,40,35,35,50,40,90,255,50,58,P.MEDIUM_FAST,50,!1),new M(e.ALOLA_PERSIAN,7,!1,!1,!1,"Classy Cat Pokémon",L.DARK,null,1.1,33,O.FUR_COAT,O.TECHNICIAN,O.RATTLED,440,65,60,60,75,65,115,90,50,154,P.MEDIUM_FAST,50,!1),new M(e.ALOLA_GEODUDE,7,!1,!1,!1,"Rock Pokémon",L.ROCK,L.ELECTRIC,.4,20.3,O.MAGNET_PULL,O.STURDY,O.GALVANIZE,300,40,80,100,30,30,20,255,70,60,P.MEDIUM_SLOW,50,!1),new M(e.ALOLA_GRAVELER,7,!1,!1,!1,"Rock Pokémon",L.ROCK,L.ELECTRIC,1,110,O.MAGNET_PULL,O.STURDY,O.GALVANIZE,390,55,95,115,45,45,35,120,70,137,P.MEDIUM_SLOW,50,!1),new M(e.ALOLA_GOLEM,7,!1,!1,!1,"Megaton Pokémon",L.ROCK,L.ELECTRIC,1.7,316,O.MAGNET_PULL,O.STURDY,O.GALVANIZE,495,80,120,130,55,65,45,45,70,223,P.MEDIUM_SLOW,50,!1),new M(e.ALOLA_GRIMER,7,!1,!1,!1,"Sludge Pokémon",L.POISON,L.DARK,.7,42,O.POISON_TOUCH,O.GLUTTONY,O.POWER_OF_ALCHEMY,325,80,80,50,40,50,25,190,70,65,P.MEDIUM_FAST,50,!1),new M(e.ALOLA_MUK,7,!1,!1,!1,"Sludge Pokémon",L.POISON,L.DARK,1,52,O.POISON_TOUCH,O.GLUTTONY,O.POWER_OF_ALCHEMY,500,105,105,75,65,100,50,75,70,175,P.MEDIUM_FAST,50,!1),new M(e.ALOLA_EXEGGUTOR,7,!1,!1,!1,"Coconut Pokémon",L.GRASS,L.DRAGON,10.9,415.6,O.FRISK,O.NONE,O.HARVEST,530,95,105,85,125,75,45,45,50,186,P.SLOW,50,!1),new M(e.ALOLA_MAROWAK,7,!1,!1,!1,"Bone Keeper Pokémon",L.FIRE,L.GHOST,1,34,O.CURSED_BODY,O.LIGHTNING_ROD,O.ROCK_HEAD,425,60,80,110,50,80,45,75,50,149,P.MEDIUM_FAST,50,!1),new M(e.ETERNAL_FLOETTE,6,!0,!1,!1,"Single Bloom Pokémon",L.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,551,74,65,67,125,128,92,120,70,243,P.MEDIUM_FAST,0,!1),new M(e.GALAR_MEOWTH,8,!1,!1,!1,"Scratch Cat Pokémon",L.STEEL,null,.4,7.5,O.PICKUP,O.TOUGH_CLAWS,O.UNNERVE,290,50,65,55,40,40,40,255,50,58,P.MEDIUM_FAST,50,!1),new M(e.GALAR_PONYTA,8,!1,!1,!1,"Fire Horse Pokémon",L.PSYCHIC,null,.8,24,O.RUN_AWAY,O.PASTEL_VEIL,O.ANTICIPATION,410,50,85,55,65,65,90,190,50,82,P.MEDIUM_FAST,50,!1),new M(e.GALAR_RAPIDASH,8,!1,!1,!1,"Fire Horse Pokémon",L.PSYCHIC,L.FAIRY,1.7,80,O.RUN_AWAY,O.PASTEL_VEIL,O.ANTICIPATION,500,65,100,70,80,80,105,60,50,175,P.MEDIUM_FAST,50,!1),new M(e.GALAR_SLOWPOKE,8,!1,!1,!1,"Dopey Pokémon",L.PSYCHIC,null,1.2,36,O.GLUTTONY,O.OWN_TEMPO,O.REGENERATOR,315,90,65,65,40,40,15,190,50,63,P.MEDIUM_FAST,50,!1),new M(e.GALAR_SLOWBRO,8,!1,!1,!1,"Hermit Crab Pokémon",L.POISON,L.PSYCHIC,1.6,70.5,O.QUICK_DRAW,O.OWN_TEMPO,O.REGENERATOR,490,95,100,95,100,70,30,75,50,172,P.MEDIUM_FAST,50,!1),new M(e.GALAR_FARFETCHD,8,!1,!1,!1,"Wild Duck Pokémon",L.FIGHTING,null,.8,42,O.STEADFAST,O.NONE,O.SCRAPPY,377,52,95,55,58,62,55,45,50,132,P.MEDIUM_FAST,50,!1),new M(e.GALAR_WEEZING,8,!1,!1,!1,"Poison Gas Pokémon",L.POISON,L.FAIRY,3,16,O.LEVITATE,O.NEUTRALIZING_GAS,O.MISTY_SURGE,490,65,90,120,85,70,60,60,50,172,P.MEDIUM_FAST,50,!1),new M(e.GALAR_MR_MIME,8,!1,!1,!1,"Barrier Pokémon",L.ICE,L.PSYCHIC,1.4,56.8,O.VITAL_SPIRIT,O.SCREEN_CLEANER,O.ICE_BODY,460,50,65,65,90,90,100,45,50,161,P.MEDIUM_FAST,50,!1),new M(e.GALAR_ARTICUNO,8,!0,!1,!1,"Freeze Pokémon",L.PSYCHIC,L.FLYING,1.7,50.9,O.COMPETITIVE,O.NONE,O.NONE,580,90,85,85,125,100,95,3,35,290,P.SLOW,null,!1),new M(e.GALAR_ZAPDOS,8,!0,!1,!1,"Electric Pokémon",L.FIGHTING,L.FLYING,1.6,58.2,O.DEFIANT,O.NONE,O.NONE,580,90,125,90,85,90,100,3,35,290,P.SLOW,null,!1),new M(e.GALAR_MOLTRES,8,!0,!1,!1,"Flame Pokémon",L.DARK,L.FLYING,2,66,O.BERSERK,O.NONE,O.NONE,580,90,85,90,100,125,90,3,35,290,P.SLOW,null,!1),new M(e.GALAR_SLOWKING,8,!1,!1,!1,"Royal Pokémon",L.POISON,L.PSYCHIC,1.8,79.5,O.CURIOUS_MEDICINE,O.OWN_TEMPO,O.REGENERATOR,490,95,65,80,110,110,30,70,50,172,P.MEDIUM_FAST,50,!1),new M(e.GALAR_CORSOLA,8,!1,!1,!1,"Coral Pokémon",L.GHOST,null,.6,.5,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,410,60,55,100,65,100,30,60,50,144,P.FAST,25,!1),new M(e.GALAR_ZIGZAGOON,8,!1,!1,!1,"Tiny Raccoon Pokémon",L.DARK,L.NORMAL,.4,17.5,O.PICKUP,O.GLUTTONY,O.QUICK_FEET,240,38,30,41,30,41,60,255,50,56,P.MEDIUM_FAST,50,!1),new M(e.GALAR_LINOONE,8,!1,!1,!1,"Rushing Pokémon",L.DARK,L.NORMAL,.5,32.5,O.PICKUP,O.GLUTTONY,O.QUICK_FEET,420,78,70,61,50,61,100,90,50,147,P.MEDIUM_FAST,50,!1),new M(e.GALAR_DARUMAKA,8,!1,!1,!1,"Zen Charm Pokémon",L.ICE,null,.7,40,O.HUSTLE,O.NONE,O.INNER_FOCUS,315,70,90,45,15,45,50,120,50,63,P.MEDIUM_SLOW,50,!1),new M(e.GALAR_DARMANITAN,8,!1,!1,!1,"Blazing Pokémon",L.ICE,null,1.7,120,O.GORILLA_TACTICS,O.NONE,O.ZEN_MODE,480,105,140,55,30,55,95,60,50,168,P.MEDIUM_SLOW,50,!1,!0,new F("Standard Mode","",L.ICE,null,1.7,120,O.GORILLA_TACTICS,O.NONE,O.ZEN_MODE,480,105,140,55,30,55,95,60,50,168,!1,null,!0),new F("Zen Mode","zen",L.ICE,L.FIRE,1.7,120,O.GORILLA_TACTICS,O.NONE,O.ZEN_MODE,540,105,160,55,30,55,135,60,50,189)),new M(e.GALAR_YAMASK,8,!1,!1,!1,"Spirit Pokémon",L.GROUND,L.GHOST,.5,1.5,O.WANDERING_SPIRIT,O.NONE,O.NONE,303,38,55,85,30,65,30,190,50,61,P.MEDIUM_FAST,50,!1),new M(e.GALAR_STUNFISK,8,!1,!1,!1,"Trap Pokémon",L.GROUND,L.STEEL,.7,20.5,O.MIMICRY,O.NONE,O.NONE,471,109,81,99,66,84,32,75,70,165,P.MEDIUM_FAST,50,!1),new M(e.HISUI_GROWLITHE,8,!1,!1,!1,"Puppy Pokémon",L.FIRE,L.ROCK,.8,22.7,O.INTIMIDATE,O.FLASH_FIRE,O.ROCK_HEAD,350,60,75,45,65,50,55,190,50,70,P.SLOW,75,!1),new M(e.HISUI_ARCANINE,8,!1,!1,!1,"Legendary Pokémon",L.FIRE,L.ROCK,2,168,O.INTIMIDATE,O.FLASH_FIRE,O.ROCK_HEAD,555,95,115,80,95,80,90,85,50,194,P.SLOW,75,!1),new M(e.HISUI_VOLTORB,8,!1,!1,!1,"Ball Pokémon",L.ELECTRIC,L.GRASS,.5,13,O.SOUNDPROOF,O.STATIC,O.AFTERMATH,330,40,30,50,55,55,100,190,80,66,P.MEDIUM_FAST,null,!1),new M(e.HISUI_ELECTRODE,8,!1,!1,!1,"Ball Pokémon",L.ELECTRIC,L.GRASS,1.2,81,O.SOUNDPROOF,O.STATIC,O.AFTERMATH,490,60,50,70,80,80,150,60,70,172,P.MEDIUM_FAST,null,!1),new M(e.HISUI_TYPHLOSION,8,!1,!1,!1,"Volcano Pokémon",L.FIRE,L.GHOST,1.6,69.8,O.BLAZE,O.NONE,O.FRISK,534,73,84,78,119,85,95,45,70,240,P.MEDIUM_SLOW,87.5,!1),new M(e.HISUI_QWILFISH,8,!1,!1,!1,"Balloon Pokémon",L.DARK,L.POISON,.5,3.9,O.POISON_POINT,O.SWIFT_SWIM,O.INTIMIDATE,440,65,95,85,55,55,85,45,50,88,P.MEDIUM_FAST,50,!1),new M(e.HISUI_SNEASEL,8,!1,!1,!1,"Sharp Claw Pokémon",L.FIGHTING,L.POISON,.9,27,O.INNER_FOCUS,O.KEEN_EYE,O.PICKPOCKET,430,55,95,55,35,75,115,60,35,86,P.MEDIUM_SLOW,50,!0),new M(e.HISUI_SAMUROTT,8,!1,!1,!1,"Formidable Pokémon",L.WATER,L.DARK,1.5,58.2,O.TORRENT,O.NONE,O.SHARPNESS,528,90,108,80,100,65,85,45,80,238,P.MEDIUM_SLOW,87.5,!1),new M(e.HISUI_LILLIGANT,8,!1,!1,!1,"Flowering Pokémon",L.GRASS,L.FIGHTING,1.2,19.2,O.CHLOROPHYLL,O.HUSTLE,O.LEAF_GUARD,480,70,105,75,50,75,105,75,50,168,P.MEDIUM_FAST,0,!1),new M(e.HISUI_ZORUA,8,!1,!1,!1,"Tricky Fox Pokémon",L.NORMAL,L.GHOST,.7,12.5,O.ILLUSION,O.NONE,O.NONE,330,35,60,40,85,40,70,75,50,66,P.MEDIUM_SLOW,87.5,!1),new M(e.HISUI_ZOROARK,8,!1,!1,!1,"Illusion Fox Pokémon",L.NORMAL,L.GHOST,1.6,83,O.ILLUSION,O.NONE,O.NONE,510,55,100,60,125,60,110,45,50,179,P.MEDIUM_SLOW,87.5,!1),new M(e.HISUI_BRAVIARY,8,!1,!1,!1,"Valiant Pokémon",L.PSYCHIC,L.FLYING,1.7,43.4,O.KEEN_EYE,O.SHEER_FORCE,O.TINTED_LENS,510,110,83,70,112,70,65,60,50,179,P.SLOW,100,!1),new M(e.HISUI_SLIGGOO,8,!1,!1,!1,"Soft Tissue Pokémon",L.STEEL,L.DRAGON,.7,68.5,O.SAP_SIPPER,O.SHELL_ARMOR,O.GOOEY,452,58,75,83,83,113,40,45,35,158,P.SLOW,50,!1),new M(e.HISUI_GOODRA,8,!1,!1,!1,"Dragon Pokémon",L.STEEL,L.DRAGON,1.7,334.1,O.SAP_SIPPER,O.SHELL_ARMOR,O.GOOEY,600,80,100,100,110,150,60,45,35,270,P.SLOW,50,!1),new M(e.HISUI_AVALUGG,8,!1,!1,!1,"Iceberg Pokémon",L.ICE,L.ROCK,1.4,262.4,O.STRONG_JAW,O.ICE_BODY,O.STURDY,514,95,127,184,34,36,38,55,50,180,P.MEDIUM_FAST,50,!1),new M(e.HISUI_DECIDUEYE,8,!1,!1,!1,"Arrow Quill Pokémon",L.GRASS,L.FIGHTING,1.6,37,O.OVERGROW,O.NONE,O.SCRAPPY,530,88,112,80,95,95,60,45,50,239,P.MEDIUM_SLOW,87.5,!1),new M(e.PALDEA_TAUROS,9,!1,!1,!1,"Wild Bull Pokémon",L.FIGHTING,null,1.4,115,O.INTIMIDATE,O.ANGER_POINT,O.CUD_CHEW,490,75,110,105,30,70,100,45,50,172,P.SLOW,100,!1,!1,new F("Combat Breed","combat",L.FIGHTING,null,1.4,115,O.INTIMIDATE,O.ANGER_POINT,O.CUD_CHEW,490,75,110,105,30,70,100,45,50,172,!1,"",!0),new F("Blaze Breed","blaze",L.FIGHTING,L.FIRE,1.4,85,O.INTIMIDATE,O.ANGER_POINT,O.CUD_CHEW,490,75,110,105,30,70,100,45,50,172,!1,null,!0),new F("Aqua Breed","aqua",L.FIGHTING,L.WATER,1.4,110,O.INTIMIDATE,O.ANGER_POINT,O.CUD_CHEW,490,75,110,105,30,70,100,45,50,172,!1,null,!0)),new M(e.PALDEA_WOOPER,9,!1,!1,!1,"Water Fish Pokémon",L.POISON,L.GROUND,.4,11,O.POISON_POINT,O.WATER_ABSORB,O.UNAWARE,210,55,45,45,25,25,15,255,50,42,P.MEDIUM_FAST,50,!1),new M(e.BLOODMOON_URSALUNA,9,!0,!1,!1,"Peat Pokémon",L.GROUND,L.NORMAL,2.7,333,O.MINDS_EYE,O.NONE,O.NONE,555,113,70,120,135,65,52,75,50,278,P.MEDIUM_FAST,50,!1))}r(B9,"initSpecies");var xA=(t=>(t[t.DEFAULT=0]="DEFAULT",t[t.FEMALE=1]="FEMALE",t[t.DOUBLE=2]="DOUBLE",t))(xA||{});const hd=class hd extends Phaser.GameObjects.Container{constructor(E,R,I,N,S,T){super(s,-72,80),this.originalIndexes={},this.config=yE.hasOwnProperty(E)?yE[E]:yE[l.ACE_TRAINER],T&&(this.config=T),this.variant=R,this.partyTemplateIndex=Math.min(I!==void 0?I:q6(this.config.partyTemplates.map((_,G)=>G)),this.config.partyTemplates.length-1);const i=`trainersCommon:${l[E]}`;if(D.exists(i,{returnObjects:!0})){if(N)this.nameKey=N;else{const _=D.exists(`${i}.MALE`)?R===1?".FEMALE":".MALE":"",G=SE(Object.keys(D.t(`${i}${_}`,{returnObjects:!0})));this.nameKey=`${i}${_}.${G}`}if(this.name=D.t(this.nameKey),R===2)if(this.config.doubleOnly)S?(this.partnerNameKey=S,this.partnerName=D.t(this.partnerNameKey)):[this.name,this.partnerName]=this.name.split(" & ");else{const _=D.exists(`${i}.FEMALE`)?".FEMALE":"",G=SE(Object.keys(D.t(`${i}${_}`,{returnObjects:!0})));this.partnerNameKey=`${i}${_}.${G}`,this.partnerName=D.t(this.partnerNameKey)}}switch(this.variant){case 1:this.config.hasGenders||(R=0);break;case 2:this.config.hasDouble||(R=0);break}console.log(Object.keys(ue)[Object.values(ue).indexOf(this.getPartyTemplate())]);const o=r((_,G)=>{const H=s.addFieldSprite(0,0,this.config.getSpriteKey(R===1||G,this.isDouble()));return H.setOrigin(.5,1),H.setPipeline(s.spritePipeline,{tone:[0,0,0,0],hasShadow:!!_}),H},"getSprite"),C=o(!0),U=o();if(U.setVisible(!1),this.add(C),this.add(U),R===2&&!this.config.doubleOnly){const _=o(!0,!0),G=o(!1,!0);G.setVisible(!1),C.x=-4,U.x=-4,_.x=28,G.x=28,this.add(_),this.add(G)}}getKey(E){return this.config.getSpriteKey(this.variant===1||E,this.isDouble())}getName(E=b.NONE,R=!1){let I=this.config.getTitle(E,this.variant),N=R&&this.config.title?this.config.title:null;const S=["grunt"];return this.name===""&&S.some(T=>I.toLocaleLowerCase().includes(T))?(N=D.t(`trainerClasses:${I.toLowerCase().replace(/\s/g,"_")}`),console.log("Localized grunt name: "+N),N):(this.name&&(R&&(RO()||VR(),N=D.t(`trainerClasses:${I.toLowerCase().replace(/\s/g,"_")}`)),E?I=E===b.TRAINER?this.name:this.partnerName||this.name:(I=this.name,this.partnerName&&(I=`${I} & ${this.partnerName}`))),this.config.titleDouble&&this.variant===2&&!this.config.doubleOnly&&(N=this.config.titleDouble,I=D.t(`trainerNames:${this.config.nameDouble.toLowerCase().replace(/\s/g,"_")}`)),console.log(N?`${N} ${I}`:I),N?`${N} ${I}`:I)}isDouble(){return this.config.doubleOnly||this.variant===2}isPartner(){return this.variant===2}getMixedBattleBgm(){return this.config.mixedBattleBgm}getBattleBgm(){return this.config.battleBgm}getEncounterBgm(){return this.variant?(this.variant===2?this.config.doubleEncounterBgm:this.config.femaleEncounterBgm)||this.config.encounterBgm:this.config.encounterBgm}getEncounterMessages(){return this.variant?(this.variant===2?this.config.doubleEncounterMessages:this.config.femaleEncounterMessages)||this.config.encounterMessages:this.config.encounterMessages}getVictoryMessages(){return this.variant?(this.variant===2?this.config.doubleVictoryMessages:this.config.femaleVictoryMessages)||this.config.victoryMessages:this.config.victoryMessages}getDefeatMessages(){return this.variant?(this.variant===2?this.config.doubleDefeatMessages:this.config.femaleDefeatMessages)||this.config.defeatMessages:this.config.defeatMessages}getPartyTemplate(){return this.config.partyTemplateFunc?this.config.partyTemplateFunc():this.config.partyTemplates[this.partyTemplateIndex]}getPartyLevels(E){const R=[],I=this.getPartyTemplate(),N=s.gameMode.getWaveForDifficulty(E),S=1+N/2+Math.pow(N/25,2);this.isDouble()&&I.size<2&&(I.size=2);for(let T=0;T<I.size;T++){let i=1;const o=I.getStrength(T);switch(o){case ce.WEAKER:i=.95;break;case ce.WEAK:i=1;break;case ce.AVERAGE:i=1.1;break;case ce.STRONG:i=1.2;break;case ce.STRONGER:i=1.25;break}let C=0;o<ce.STRONG&&(i=Math.min(i+.025*Math.floor(N/25),1.2),C=-Math.floor(N/50*(ce.STRONG-o)));const U=Math.ceil(S*i)+C;R.push(U)}return R}genPartyMember(E){var S;const R=s.currentBattle,I=(S=R.enemyLevels)==null?void 0:S[E];let N;return s.executeWithSeedOffset(()=>{const T=this.getPartyTemplate(),i=T.getStrength(E);if(!(this.config.trainerTypeDouble&&this.isDouble()&&!this.config.doubleOnly)){if(this.config.partyMemberFuncs.hasOwnProperty(E)){N=this.config.partyMemberFuncs[E](I,i);return}if(this.config.partyMemberFuncs.hasOwnProperty(E-T.size)){N=this.config.partyMemberFuncs[E-T.size](I,T.getStrength(E));return}}let o=0;if(T instanceof iE)for(const G of T.templates){if(o+G.size>E)break;o+=G.size}let C=[],U=!1;if(this.config.trainerTypeDouble&&this.isDouble()&&!this.config.doubleOnly){U=!0;const G=Fe[l[this.config.trainerTypeDouble]],H=Fe[l[this.config.trainerType]],c=R.enemyParty.map(w=>w.species.speciesId),f=H.filter(w=>Array.isArray(w)?!w.some(m=>c.includes(m)):!c.includes(w)).flat(),d=G.filter(w=>Array.isArray(w)?!w.some(m=>c.includes(m)):!c.includes(w)).flat();E%2?E===1&&l[this.config.trainerTypeDouble]===l[l.TATE]?C=[e.SOLROCK]:E===1&&l[this.config.trainerTypeDouble]===l[l.LIZA]?C=[e.LUNATONE]:C=d:E===0&&l[this.config.trainerType]===l[l.TATE]?C=[e.SOLROCK]:E===0&&l[this.config.trainerType]===l[l.LIZA]?C=[e.LUNATONE]:C=f,C.length===0&&(U=!1)}let _=U?de(C[Math.floor(De(C.length))]):T.isSameSpecies(E)&&E>o?de(R.enemyParty[o].species.getTrainerSpeciesForLevel(I,!1,T.getStrength(o),s.currentBattle.waveIndex)):this.genNewPartyMemberSpecies(I,i);C&&(_=de(_.getSpeciesForLevel(I,!0,!0,i,s.currentBattle.waveIndex))),N=s.addEnemyPokemon(_,I,!this.isDouble()||!(E%2)?b.TRAINER:b.TRAINER_PARTNER)},this.config.hasStaticParty?this.config.getDerivedType()+(E+1<<8):s.currentBattle.waveIndex+(this.config.getDerivedType()<<10)+((this.config.useSameSeedForAllMembers?0:E)+1<<8)),N}genNewPartyMemberSpecies(E,R,I){const N=s.currentBattle,S=this.getPartyTemplate();let T;if(this.config.speciesPools){const C=De(512);let U=C>=156?Ue.COMMON:C>=32?Ue.UNCOMMON:C>=6?Ue.RARE:C>=1?Ue.SUPER_RARE:Ue.ULTRA_RARE;for(console.log(Ue[U]);!this.config.speciesPools.hasOwnProperty(U)||!this.config.speciesPools[U].length;)console.log(`Downgraded trainer Pokemon rarity tier from ${Ue[U]} to ${Ue[U-1]}`),U--;const _=this.config.speciesPools[U];T=de(SE(_))}else T=s.randomSpecies(N.waveIndex,E,!1,this.config.speciesFilter);let i=de(T.getTrainerSpeciesForLevel(E,!0,R,s.currentBattle.waveIndex)),o=!1;if(console.log(i.getName()),CE.hasOwnProperty(T.speciesId)&&i.speciesId!==T.speciesId)o=!0;else if(S.isBalanced(N.enemyParty.length)){const C=N.enemyParty.flatMap(U=>U.getTypes(!0));(C.indexOf(i.type1)>-1||i.type2!==null&&C.indexOf(i.type2)>-1)&&(o=!0)}if(!o&&this.config.hasSpecialtyType()&&!i.isOfType(this.config.specialtyType)){o=!0,console.log("Attempting reroll of species evolution to fit specialty type...");let C=0;for(;o&&C++<10;)i=de(T.getTrainerSpeciesForLevel(E,!0,R,s.currentBattle.waveIndex)),console.log(i.name),i.isOfType(this.config.specialtyType)&&(o=!1)}return this.checkDuplicateSpecies(T.speciesId)&&(console.log("Duplicate species detected, prompting reroll..."),o=!0),o&&(I??0)<10&&(console.log("Rerolling party member..."),i=this.genNewPartyMemberSpecies(E,R,(I??0)+1)),i}checkDuplicateSpecies(E){const R=(Fe[l[this.config.trainerType]]??[]).flat(1).map(N=>{let S=N;for(;CE.hasOwnProperty(S);)S=CE[S];return S});return s.getEnemyParty().map(N=>N.species.getRootSpeciesId()).includes(E)||R.includes(E)}getPartyMemberMatchupScores(E=b.NONE,R=!1){E&&!this.isDouble()&&(E=b.NONE);const I=s.getEnemyParty();return I.slice(s.currentBattle.getBattlerCount()).filter(T=>T.isAllowedInBattle()).filter(T=>!E||T.trainerSlot===E).map(T=>{const i=s.getPlayerField().filter(C=>C.isAllowedInBattle());let o=0;if(i.length>0){for(const C of i)o+=T.getMatchupScore(C),C.species.legendary&&(o/=2);o/=i.length,R&&!T.isOnField()&&s.arena.findTagsOnSide(C=>C instanceof _O,qe.ENEMY).map(C=>o*=C.getMatchupScoreMultiplier(T))}return[I.indexOf(T),o]})}getSortedPartyMemberMatchupScores(E=this.getPartyMemberMatchupScores()){const R=E.slice(0);return R.sort((I,N)=>{const S=I[1],T=N[1];return S<T?1:S>T?-1:0}),R}getNextSummonIndex(E=b.NONE,R=this.getPartyMemberMatchupScores(E)){E&&!this.isDouble()&&(E=b.NONE);const I=this.getSortedPartyMemberMatchupScores(R),N=R.filter(S=>S[1]===I[0][1]).map(S=>S[0]);if(N.length>1){let S;return s.executeWithSeedOffset(()=>S=De(N.length),s.currentBattle.turn<<2),N[S]}return N[0]}getPartyMemberModifierChanceMultiplier(E){switch(this.getPartyTemplate().getStrength(E)){case ce.WEAKER:return .75;case ce.WEAK:return .675;case ce.AVERAGE:return .5625;case ce.STRONG:return .45;case ce.STRONGER:return .375;default:return console.warn("getPartyMemberModifierChanceMultiplier not defined. Using default 0"),0}}genModifiers(E){return this.config.genModifiersFunc?this.config.genModifiersFunc(E):[]}genAI(E){this.config.genAIFuncs&&this.config.genAIFuncs.forEach(R=>R(E)),console.log("Generated AI funcs")}loadAssets(){return this.config.loadAssets(this.variant)}initSprite(){this.getSprites().map((E,R)=>E.setTexture(this.getKey(!!R)).setFrame(0)),this.getTintSprites().map((E,R)=>E.setTexture(this.getKey(!!R)).setFrame(0))}tryPlaySprite(E,R,I){return E.texture.key==="__MISSING"?(console.error(`No texture found for '${I.key}'!`),!1):E.texture.frameTotal<=1?(console.warn(`No animation found for '${I.key}'. Is this intentional?`),!1):(E.play(I),R.play(I),!0)}playAnim(){const E={key:this.getKey(),repeat:0,startFrame:0},R=this.getSprites(),I=this.getTintSprites();if(this.tryPlaySprite(R[0],I[0],E),this.variant===2&&!this.config.doubleOnly){const N={key:this.getKey(!0),repeat:0,startFrame:0};this.tryPlaySprite(R[1],I[1],N)}}getSprites(){const E=[this.getAt(0)];return this.variant===2&&!this.config.doubleOnly&&E.push(this.getAt(2)),E}getTintSprites(){const E=[this.getAt(1)];return this.variant===2&&!this.config.doubleOnly&&E.push(this.getAt(3)),E}tint(E,R,I,N){this.getTintSprites().map(T=>{T.setTintFill(E),T.setVisible(!0),I?(T.setAlpha(0),s.tweens.add({targets:T,alpha:R||1,duration:I,ease:N||"Linear"})):T.setAlpha(R)})}untint(E,R){this.getTintSprites().map(N=>{E?s.tweens.add({targets:N,alpha:0,duration:E,ease:R||"Linear",onComplete:r(()=>{N.setVisible(!1),N.setAlpha(1)},"onComplete")}):(N.setVisible(!1),N.setAlpha(1))})}shouldTera(E){return!!(this.config.trainerAI.teraMode===Ys.INSTANT_TERA&&!E.isTerastallized&&this.config.trainerAI.instantTeras.includes(E.initialTeamIndex))}};r(hd,"Trainer");let FR=hd;var FA=(t=>(t[t.ATTACKER=-1]="ATTACKER",t[t.PLAYER=0]="PLAYER",t[t.PLAYER_2=1]="PLAYER_2",t[t.ENEMY=2]="ENEMY",t[t.ENEMY_2=3]="ENEMY_2",t))(FA||{});const fd=class fd{constructor(E,R,I,N,S=!1){this.enemyParty=[],this.seenEnemyPartyMemberIds=new Set,this.started=!1,this.enemySwitchCounter=0,this.turn=0,this.playerParticipantIds=new Set,this.battleScore=0,this.postBattleLoot=[],this.escapeAttempts=0,this.battleSeed=y1(16,!0),this.battleSeedState=null,this.moneyScattered=0,this.lastUsedPokeball=null,this.enemyFaints=0,this.playerFaintsHistory=[],this.enemyFaintsHistory=[],this.rngCounter=0,this.gameMode=E,this.waveIndex=R,this.battleType=I,this.trainer=N??null,this.initBattleSpec(),this.enemyLevels=I!==AA.TRAINER?new Array(S?2:1).fill(null).map(()=>this.getLevelForWave()):N==null?void 0:N.getPartyLevels(this.waveIndex),this.double=S}initBattleSpec(){let E=tt.DEFAULT;this.gameMode.isWaveFinal(this.waveIndex)&&this.gameMode.isClassic&&(E=tt.FINAL_BOSS),this.battleSpec=E}getLevelForWave(){const E=this.gameMode.getWaveForDifficulty(this.waveIndex),R=1+E/2+Math.pow(E/25,2),I=1.2;if(this.gameMode.isBoss(this.waveIndex)){const T=Math.floor(R*I);if(this.battleSpec===tt.FINAL_BOSS||!(this.waveIndex%250))return Math.ceil(T/25)*25;let i=0;return this.gameMode.isWaveFinal(this.waveIndex)||(i=Math.round(Phaser.Math.RND.realInRange(-1,1)*Math.floor(E/10))),T+i}let N=0;const S=10/E;return N=Math.abs(this.randSeedGaussForLevel(S)),Math.max(Math.round(R+N),1)}randSeedGaussForLevel(E){let R=0;for(let I=E;I>0;I--)R+=Phaser.Math.RND.realInRange(0,1);return R/E}getBattlerCount(){return this.double?2:1}incrementTurn(){this.turn++,this.turnCommands=Object.fromEntries(Ct(FA).map(E=>[E,null])),this.preTurnCommands=Object.fromEntries(Ct(FA).map(E=>[E,null])),this.battleSeedState=null}addParticipant(E){this.playerParticipantIds.add(E.id)}removeFaintedParticipant(E){this.playerParticipantIds.delete(E.id)}addPostBattleLoot(E){this.postBattleLoot.push(...s.findModifiers(R=>R instanceof DA&&R.pokemonId===E.id&&R.isTransferable,!1).map(R=>{const I=R;return I.pokemonId=null,I}))}pickUpScatteredMoney(){const E=new me(s.currentBattle.moneyScattered);s.applyModifiers(CO,!0,E),s.arena.getTag(oe.HAPPY_HOUR)&&(E.value*=2),s.addMoney(E.value);const R=navigator.language||"en-US",I=E.value.toLocaleString(R),N=D.t("battle:moneyPickedUp",{moneyAmount:I});s.queueMessage(N,void 0,!0),s.currentBattle.moneyScattered=0}addBattleScore(){let E=s.getEnemyParty().length/2+.5;this.double&&(E/=1.5);for(const N of s.getEnemyParty())N.isBoss()&&(E*=N.bossSegments/1.5/s.getEnemyParty().length);const R=Phaser.Tweens.Builders.GetEaseFunction("Sine.easeIn")(1-Math.min(this.turn-2,10*E)/(10*E)),I=Math.ceil(this.battleScore*R);s.score+=I,console.log(`Battle Score: ${I} (${this.turn-1} Turns x${Math.floor(R*100)/100})`),console.log(`Total Score: ${s.score}`),s.updateScoreText()}getBgmOverride(){var R,I,N,S,T,i,o,C;if(this.isBattleMysteryEncounter()&&((R=this.mysteryEncounter)==null?void 0:R.encounterMode)===JE.DEFAULT)return null;if(this.battleType===AA.TRAINER||((I=this.mysteryEncounter)==null?void 0:I.encounterMode)===JE.TRAINER_BATTLE)return!this.started&&((N=this.trainer)!=null&&N.config.encounterBgm)&&((T=(S=this.trainer)==null?void 0:S.getEncounterMessages())!=null&&T.length)?`encounter_${(i=this.trainer)==null?void 0:i.getEncounterBgm()}`:s.musicPreference===FT.GENFIVE?((o=this.trainer)==null?void 0:o.getBattleBgm())??null:((C=this.trainer)==null?void 0:C.getMixedBattleBgm())??null;if(this.gameMode.isClassic&&this.waveIndex>195&&this.battleSpec!==tt.FINAL_BOSS)return"end_summit";const E=s.getEnemyParty();for(const U of E){if(this.battleSpec===tt.FINAL_BOSS)return U.species.getFormSpriteKey(U.formIndex)===te.ETERNAMAX?"battle_final":"battle_final_encounter";if(U.species.legendary||U.species.subLegendary||U.species.mythical){if(s.musicPreference===FT.GENFIVE)switch(U.species.speciesId){case e.REGIROCK:case e.REGICE:case e.REGISTEEL:case e.REGIGIGAS:case e.REGIDRAGO:case e.REGIELEKI:return"battle_legendary_regis_g5";case e.KYUREM:return"battle_legendary_kyurem";default:return U.species.legendary?"battle_legendary_res_zek":"battle_legendary_unova"}if(s.musicPreference===FT.ALLGENS)switch(U.species.speciesId){case e.ARTICUNO:case e.ZAPDOS:case e.MOLTRES:case e.MEWTWO:case e.MEW:return"battle_legendary_kanto";case e.RAIKOU:return"battle_legendary_raikou";case e.ENTEI:return"battle_legendary_entei";case e.SUICUNE:return"battle_legendary_suicune";case e.LUGIA:return"battle_legendary_lugia";case e.HO_OH:return"battle_legendary_ho_oh";case e.REGIROCK:case e.REGICE:case e.REGISTEEL:case e.REGIGIGAS:case e.REGIDRAGO:case e.REGIELEKI:return"battle_legendary_regis_g6";case e.GROUDON:case e.KYOGRE:return"battle_legendary_gro_kyo";case e.RAYQUAZA:return"battle_legendary_rayquaza";case e.DEOXYS:return"battle_legendary_deoxys";case e.UXIE:case e.MESPRIT:case e.AZELF:return"battle_legendary_lake_trio";case e.HEATRAN:case e.CRESSELIA:case e.DARKRAI:case e.SHAYMIN:return"battle_legendary_sinnoh";case e.DIALGA:case e.PALKIA:return U.species.getFormSpriteKey(U.formIndex)===te.ORIGIN?"battle_legendary_origin_forme":"battle_legendary_dia_pal";case e.GIRATINA:return"battle_legendary_giratina";case e.ARCEUS:return"battle_legendary_arceus";case e.COBALION:case e.TERRAKION:case e.VIRIZION:case e.KELDEO:case e.TORNADUS:case e.LANDORUS:case e.THUNDURUS:case e.MELOETTA:case e.GENESECT:return"battle_legendary_unova";case e.KYUREM:return"battle_legendary_kyurem";case e.XERNEAS:case e.YVELTAL:case e.ZYGARDE:return"battle_legendary_xern_yvel";case e.TAPU_KOKO:case e.TAPU_LELE:case e.TAPU_BULU:case e.TAPU_FINI:return"battle_legendary_tapu";case e.SOLGALEO:case e.LUNALA:return"battle_legendary_sol_lun";case e.NECROZMA:switch(U.getFormKey()){case"dusk-mane":case"dawn-wings":return"battle_legendary_dusk_dawn";case"ultra":return"battle_legendary_ultra_nec";default:return"battle_legendary_sol_lun"}case e.NIHILEGO:case e.PHEROMOSA:case e.BUZZWOLE:case e.XURKITREE:case e.CELESTEELA:case e.KARTANA:case e.GUZZLORD:case e.POIPOLE:case e.NAGANADEL:case e.STAKATAKA:case e.BLACEPHALON:return"battle_legendary_ub";case e.ZACIAN:case e.ZAMAZENTA:return"battle_legendary_zac_zam";case e.GLASTRIER:case e.SPECTRIER:return"battle_legendary_glas_spec";case e.CALYREX:return U.getFormKey()==="ice"||U.getFormKey()==="shadow"?"battle_legendary_riders":"battle_legendary_calyrex";case e.GALAR_ARTICUNO:case e.GALAR_ZAPDOS:case e.GALAR_MOLTRES:return"battle_legendary_birds_galar";case e.WO_CHIEN:case e.CHIEN_PAO:case e.TING_LU:case e.CHI_YU:return"battle_legendary_ruinous";case e.KORAIDON:case e.MIRAIDON:return"battle_legendary_kor_mir";case e.OKIDOGI:case e.MUNKIDORI:case e.FEZANDIPITI:return"battle_legendary_loyal_three";case e.OGERPON:return"battle_legendary_ogerpon";case e.TERAPAGOS:return"battle_legendary_terapagos";case e.PECHARUNT:return"battle_legendary_pecharunt";default:return U.species.legendary?"battle_legendary_res_zek":"battle_legendary_unova"}}}return s.gameMode.isClassic&&this.waveIndex<=4?"battle_wild":null}randSeedInt(E,R=0){if(E<=1)return R;const I=s.rngCounter,N=s.rngSeedOverride,S=Phaser.Math.RND.state();this.battleSeedState?Phaser.Math.RND.state(this.battleSeedState):(Phaser.Math.RND.sow([z6(this.battleSeed,this.turn<<6)]),console.log("Battle Seed:",this.battleSeed)),s.rngCounter=this.rngCounter++,s.rngSeedOverride=this.battleSeed;const T=De(E,R);return this.battleSeedState=Phaser.Math.RND.state(),Phaser.Math.RND.state(S),s.rngCounter=I,s.rngSeedOverride=N,T}isBattleMysteryEncounter(){return this.battleType===AA.MYSTERY_ENCOUNTER}};r(fd,"Battle");let ev=fd;const dd=class dd{setBattleType(E){return this.battleType=E,this}setDouble(E){return this.double=E,this}setGetTrainerFunc(E){return this.getTrainer=E,this}setGetEnemyPartyFunc(E){return this.getEnemyParty=E,this}setSeedOffsetWave(E){return this.seedOffsetWaveIndex=E,this}setCustomModifierRewards(E){return this.customModifierRewardSettings=E,this}};r(dd,"FixedBattleConfig");let QE=dd;function ER(t,E=!1,R=0){return()=>{const I=De(t.length),N=[];s.executeWithSeedOffset(()=>{for(const o of t){const C=Array.isArray(o)?SE(o):o;N.push(C)}},R);let S=xA.DEFAULT;E&&(S=oE(2)===0?xA.FEMALE:xA.DEFAULT);const i=[l.ROCKET_GRUNT,l.MAGMA_GRUNT,l.AQUA_GRUNT,l.GALACTIC_GRUNT,l.PLASMA_GRUNT,l.FLARE_GRUNT,l.AETHER_GRUNT,l.SKULL_GRUNT,l.MACRO_GRUNT,l.STAR_GRUNT].includes(N[I]);return yE[N[I]].hasDouble&&i?new FR(N[I],oE(3)===0?xA.DOUBLE:S):new FR(N[I],S)}}r(ER,"getRandomTrainerFunc");const Av={[aA.TOWN_YOUNGSTER]:new QE().setBattleType(AA.TRAINER).setGetTrainerFunc(()=>new FR(l.YOUNGSTER,De(2)?xA.FEMALE:xA.DEFAULT)),[aA.RIVAL_1]:new QE().setBattleType(AA.TRAINER).setGetTrainerFunc(()=>new FR(l.RIVAL,s.gameData.gender===YA.MALE?xA.FEMALE:xA.DEFAULT)),[aA.RIVAL_2]:new QE().setBattleType(AA.TRAINER).setGetTrainerFunc(()=>new FR(l.RIVAL_2,s.gameData.gender===YA.MALE?xA.FEMALE:xA.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[p.ULTRA,p.GREAT,p.GREAT],allowLuckUpgrades:!1}),[aA.EVIL_GRUNT_1]:new QE().setBattleType(AA.TRAINER).setGetTrainerFunc(ER([l.ROCKET_GRUNT,l.MAGMA_GRUNT,l.AQUA_GRUNT,l.GALACTIC_GRUNT,l.PLASMA_GRUNT,l.FLARE_GRUNT,l.AETHER_GRUNT,l.SKULL_GRUNT,l.MACRO_GRUNT,l.STAR_GRUNT],!0)),[aA.RIVAL_3]:new QE().setBattleType(AA.TRAINER).setGetTrainerFunc(()=>new FR(l.RIVAL_3,s.gameData.gender===YA.MALE?xA.FEMALE:xA.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[p.ULTRA,p.ULTRA,p.GREAT,p.GREAT],allowLuckUpgrades:!1}),[aA.EVIL_GRUNT_2]:new QE().setBattleType(AA.TRAINER).setSeedOffsetWave(aA.EVIL_GRUNT_1).setGetTrainerFunc(ER([l.ROCKET_GRUNT,l.MAGMA_GRUNT,l.AQUA_GRUNT,l.GALACTIC_GRUNT,l.PLASMA_GRUNT,l.FLARE_GRUNT,l.AETHER_GRUNT,l.SKULL_GRUNT,l.MACRO_GRUNT,l.STAR_GRUNT],!0)),[aA.EVIL_GRUNT_3]:new QE().setBattleType(AA.TRAINER).setSeedOffsetWave(aA.EVIL_GRUNT_1).setGetTrainerFunc(ER([l.ROCKET_GRUNT,l.MAGMA_GRUNT,l.AQUA_GRUNT,l.GALACTIC_GRUNT,l.PLASMA_GRUNT,l.FLARE_GRUNT,l.AETHER_GRUNT,l.SKULL_GRUNT,l.MACRO_GRUNT,l.STAR_GRUNT],!0)),[aA.EVIL_ADMIN_1]:new QE().setBattleType(AA.TRAINER).setSeedOffsetWave(aA.EVIL_GRUNT_1).setGetTrainerFunc(ER([[l.ARCHER,l.ARIANA,l.PROTON,l.PETREL],[l.TABITHA,l.COURTNEY],[l.MATT,l.SHELLY],[l.JUPITER,l.MARS,l.SATURN],[l.ZINZOLIN,l.COLRESS],[l.XEROSIC,l.BRYONY],l.FABA,l.PLUMERIA,l.OLEANA,[l.GIACOMO,l.MELA,l.ATTICUS,l.ORTEGA,l.ERI]],!0)),[aA.RIVAL_4]:new QE().setBattleType(AA.TRAINER).setGetTrainerFunc(()=>new FR(l.RIVAL_4,s.gameData.gender===YA.MALE?xA.FEMALE:xA.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[p.ULTRA,p.ULTRA,p.ULTRA,p.ULTRA],allowLuckUpgrades:!1}),[aA.EVIL_GRUNT_4]:new QE().setBattleType(AA.TRAINER).setSeedOffsetWave(aA.EVIL_GRUNT_1).setGetTrainerFunc(ER([l.ROCKET_GRUNT,l.MAGMA_GRUNT,l.AQUA_GRUNT,l.GALACTIC_GRUNT,l.PLASMA_GRUNT,l.FLARE_GRUNT,l.AETHER_GRUNT,l.SKULL_GRUNT,l.MACRO_GRUNT,l.STAR_GRUNT],!0)),[aA.EVIL_ADMIN_2]:new QE().setBattleType(AA.TRAINER).setSeedOffsetWave(aA.EVIL_GRUNT_1).setGetTrainerFunc(ER([[l.ARCHER,l.ARIANA,l.PROTON,l.PETREL],[l.TABITHA,l.COURTNEY],[l.MATT,l.SHELLY],[l.JUPITER,l.MARS,l.SATURN],[l.ZINZOLIN,l.COLRESS],[l.XEROSIC,l.BRYONY],l.FABA,l.PLUMERIA,l.OLEANA,[l.GIACOMO,l.MELA,l.ATTICUS,l.ORTEGA,l.ERI]],!0,1)),[aA.EVIL_BOSS_1]:new QE().setBattleType(AA.TRAINER).setSeedOffsetWave(aA.EVIL_GRUNT_1).setGetTrainerFunc(ER([l.ROCKET_BOSS_GIOVANNI_1,l.MAXIE,l.ARCHIE,l.CYRUS,l.GHETSIS,l.LYSANDRE,l.LUSAMINE,l.GUZMA,l.ROSE,l.PENNY])).setCustomModifierRewards({guaranteedModifierTiers:[p.ROGUE,p.ROGUE,p.ULTRA,p.ULTRA,p.ULTRA],allowLuckUpgrades:!1}),[aA.RIVAL_5]:new QE().setBattleType(AA.TRAINER).setGetTrainerFunc(()=>new FR(l.RIVAL_5,s.gameData.gender===YA.MALE?xA.FEMALE:xA.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[p.ROGUE,p.ROGUE,p.ROGUE,p.ULTRA,p.ULTRA],allowLuckUpgrades:!1}),[aA.EVIL_BOSS_2]:new QE().setBattleType(AA.TRAINER).setSeedOffsetWave(aA.EVIL_GRUNT_1).setGetTrainerFunc(ER([l.ROCKET_BOSS_GIOVANNI_2,l.MAXIE_2,l.ARCHIE_2,l.CYRUS_2,l.GHETSIS_2,l.LYSANDRE_2,l.LUSAMINE_2,l.GUZMA_2,l.ROSE_2,l.PENNY_2])).setCustomModifierRewards({guaranteedModifierTiers:[p.ROGUE,p.ROGUE,p.ULTRA,p.ULTRA,p.ULTRA,p.ULTRA],allowLuckUpgrades:!1}),[aA.ELITE_FOUR_1]:new QE().setBattleType(AA.TRAINER).setGetTrainerFunc(ER([l.LORELEI,l.WILL,l.SIDNEY,l.AARON,l.SHAUNTAL,l.MALVA,[l.HALA,l.MOLAYNE],l.MARNIE_ELITE,l.RIKA,l.CRISPIN])),[aA.ELITE_FOUR_2]:new QE().setBattleType(AA.TRAINER).setSeedOffsetWave(aA.ELITE_FOUR_1).setGetTrainerFunc(ER([l.BRUNO,l.KOGA,l.PHOEBE,l.BERTHA,l.MARSHAL,l.SIEBOLD,l.OLIVIA,l.NESSA_ELITE,l.POPPY,l.AMARYS])),[aA.ELITE_FOUR_3]:new QE().setBattleType(AA.TRAINER).setSeedOffsetWave(aA.ELITE_FOUR_1).setGetTrainerFunc(ER([l.AGATHA,l.BRUNO,l.GLACIA,l.FLINT,l.GRIMSLEY,l.WIKSTROM,l.ACEROLA,[l.BEA_ELITE,l.ALLISTER_ELITE],l.LARRY_ELITE,l.LACEY])),[aA.ELITE_FOUR_4]:new QE().setBattleType(AA.TRAINER).setSeedOffsetWave(aA.ELITE_FOUR_1).setGetTrainerFunc(ER([l.LANCE,l.KAREN,l.DRAKE,l.LUCIAN,l.CAITLIN,l.DRASNA,l.KAHILI,l.RAIHAN_ELITE,l.HASSEL,l.DRAYTON])),[aA.CHAMPION]:new QE().setBattleType(AA.TRAINER).setSeedOffsetWave(aA.ELITE_FOUR_1).setGetTrainerFunc(ER([l.BLUE,[l.RED,l.LANCE_CHAMPION],[l.STEVEN,l.WALLACE],l.CYNTHIA,[l.ALDER,l.IRIS],l.DIANTHA,[l.KUKUI,l.HAU],[l.LEON,l.MUSTARD],[l.GEETA,l.NEMONA],l.KIERAN])),[aA.RIVAL_6]:new QE().setBattleType(AA.TRAINER).setGetTrainerFunc(()=>new FR(l.RIVAL_6,s.gameData.gender===YA.MALE?xA.FEMALE:xA.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[p.ROGUE,p.ROGUE,p.ULTRA,p.ULTRA,p.GREAT,p.GREAT],allowLuckUpgrades:!1})};var YR=(t=>(t[t.PRE_APPLY=0]="PRE_APPLY",t[t.POST_APPLY=1]="POST_APPLY",t[t.POST_TARGET=2]="POST_TARGET",t))(YR||{});const Kd=class Kd extends bE{start(){super.start(),s.abilityBar.hide().then(()=>{this.end()})}};r(Kd,"HideAbilityPhase");let GC=Kd;const OM=class OM extends kt{constructor(E,R=!1){super(E),this.passive=R;const I=this.getPokemon();I?(this.pokemonName=Z(I),this.abilityName=(R?this.getPokemon().getPassiveAbility():this.getPokemon().getAbility()).name,this.pokemonOnField=!0):this.pokemonOnField=!1}start(){if(super.start(),!this.pokemonOnField||!this.getPokemon())return this.end();if(s.abilityBar.isVisible())return s.unshiftPhase(new GC),s.unshiftPhase(new OM(this.battlerIndex,this.passive)),this.end();const E=this.getPokemon();E.isPlayer()?s.currentBattle.lastPlayerInvolved=E.getBattlerIndex()%2:s.currentBattle.lastEnemyInvolved=E.getBattlerIndex()%2,s.abilityBar.showAbility(this.pokemonName,this.abilityName,this.passive,this.player).then(()=>{E.waveData.abilityRevealed=!0,this.end()})}};r(OM,"ShowAbilityPhase");let O0=OM;const gE={PENDING:0,HIT:1,NO_EFFECT:2,NO_EFFECT_NO_MESSAGE:3,PROTECTED:4,MISS:5,REFLECTED:6,TARGET_NOT_ON_FIELD:7,ERROR:8};function ui(t){switch(t.moveTarget){case ee.BOTH_SIDES:case ee.USER_SIDE:case ee.ENEMY_SIDE:return!0}return!1}r(ui,"isFieldTargeted");const Fd=class Fd extends kt{constructor(E,R,I=CA.EFFECTIVE,N=!1){super(E),this.amount=R,this.damageResult=I,this.critical=N}start(){if(super.start(),this.damageResult===CA.ONE_HIT_KO||this.damageResult===CA.INDIRECT_KO){s.moveAnimations&&s.toggleInvert(!0),s.time.delayedCall(KA(1e3),()=>{s.toggleInvert(!1),this.applyDamage()});return}this.applyDamage()}updateAmount(E){this.amount=E}applyDamage(){switch(this.damageResult){case CA.EFFECTIVE:case CA.CONFUSION:s.playSound("se/hit");break;case CA.SUPER_EFFECTIVE:case CA.INDIRECT_KO:case CA.ONE_HIT_KO:s.playSound("se/hit_strong");break;case CA.NOT_VERY_EFFECTIVE:s.playSound("se/hit_weak");break}if(this.amount&&s.damageNumberHandler.add(this.getPokemon(),this.amount,this.damageResult,this.critical),this.damageResult!==CA.INDIRECT&&this.amount>0){const E=s.time.addEvent({delay:100,repeat:5,startAt:200,callback:r(()=>{this.getPokemon().getSprite().setVisible(E.repeatCount%2===0),E.repeatCount||this.getPokemon().updateInfo().then(()=>this.end())},"callback")})}else this.getPokemon().updateInfo().then(()=>this.end())}end(){s.currentBattle.battleSpec===tt.FINAL_BOSS?s.initFinalBossPhaseTwo(this.getPokemon()):super.end()}};r(Fd,"DamageAnimPhase");let _C=Fd;const Yd=class Yd extends kt{constructor(E,R=!1,I){super(E),this.preventInstantRevive=R,this.source=I}start(){var R,I;super.start();const E=this.getPokemon();if(this.source&&((R=E.getTag(Y.DESTINY_BOND))==null||R.lapse(this.source,Yt.CUSTOM),(I=E.getTag(Y.GRUDGE))==null||I.lapse(E,Yt.CUSTOM,this.source)),E.resetSummonData(),!this.preventInstantRevive){const N=s.applyModifier(eT,this.player,E);if(N)return E.loseHeldItem(N),s.updateModifiers(this.player),this.end()}for(const N of s.getPlayerField())N!=null&&N.isActive(!0)&&N.isPlayer()&&s.currentBattle.addParticipant(N);this.tryOverrideForBattleSpec()||this.doFaint()}doFaint(){var N,S;const E=this.getPokemon();if(E.isPlayer()?(s.arena.playerFaints+=1,s.currentBattle.playerFaintsHistory.push({pokemon:E,turn:s.currentBattle.turn})):(s.currentBattle.enemyFaints+=1,s.currentBattle.enemyFaintsHistory.push({pokemon:E,turn:s.currentBattle.turn})),s.queueMessage(D.t("battle:fainted",{pokemonNameWithAffix:Z(E)}),null,!0),s.triggerPokemonFormChange(E,xt,!0),E.resetTera(),(N=E.turnData.attacksReceived)!=null&&N.length){const T=E.turnData.attacksReceived[0];Rv(zN,E,s.getPokemonById(T.sourceId),new Ye(T.move).getMove(),T.result)}else Rv(zN,E);const R=s.getField(!0);for(const T of R)Q9(Rr,T,E);if((S=E.turnData.attacksReceived)!=null&&S.length){const T=this.source;if(T!=null&&T.isOnField()){J9(tr,T);const i=Ke[E.turnData.attacksReceived[0].move],o=i.getAttrs(HU);if(o.length)for(const C of o)C.applyPostVictory(T,T,i)}}if(this.player){const T=s.getPokemonAllowedInBattle(),i=T.filter(o=>!o.isActive(!0));T.length?s.currentBattle.double&&T.length===1&&i.length===0?s.unshiftPhase(new _I(!0)):i.length>0&&s.pushPhase(new xN(ZA.SWITCH,this.fieldIndex,!0,!1)):s.unshiftPhase(new $O)}else s.unshiftPhase(new aC(this.battlerIndex)),[AA.TRAINER,AA.MYSTERY_ENCOUNTER].includes(s.currentBattle.battleType)&&s.getEnemyParty().filter(i=>i.isActive()&&!i.isOnField()&&i.trainerSlot===E.trainerSlot).length&&s.pushPhase(new jR(ZA.SWITCH,this.fieldIndex,-1,!1,!1));const I=E.getAlly();s.currentBattle.double&&!Ne(I)&&s.redirectPokemonMoves(E,I),E.faintCry(()=>{E instanceof Rt&&E.addFriendship(-5),E.hideInfo(),s.playSound("se/faint"),s.tweens.add({targets:E,duration:500,y:E.y+150,ease:"Sine.easeIn",onComplete:r(()=>{E.lapseTags(Yt.FAINT),E.y-=150,E.trySetStatus(J.FAINT),E.isPlayer()?s.currentBattle.removeFaintedParticipant(E):(s.addFaintedEnemyScore(E),s.currentBattle.addPostBattleLoot(E)),E.leaveField(),this.end()},"onComplete")})})}tryOverrideForBattleSpec(){switch(s.currentBattle.battleSpec){case tt.FINAL_BOSS:if(!this.player){const E=this.getPokemon();return E.formIndex?s.ui.showDialogue(k8[tt.FINAL_BOSS].secondStageWin,E.species.name,null,()=>this.doFaint()):(E.hp++,s.unshiftPhase(new _C(E.getBattlerIndex(),0,CA.INDIRECT)),this.end()),!0}}return!1}};r(Yd,"FaintPhase");let uC=Yd;const IM=class IM extends kt{constructor(E,R,I,N=!1,S=!1){if(super(E),this.virtual=!1,this.reflected=!1,this.queuedPhases=[],this.move=I,this.virtual=S,this.reflected=N,R.includes(E)&&this.move.moveTarget===ee.ALL_NEAR_OTHERS){const T=R.indexOf(E);R.splice(T,T+1)}this.targets=R,this.hitChecks=Array(this.targets.length).fill([gE.PENDING,0])}conductHitChecks(E,R){let I=!1,N=!0,S=this.getTargets();for(const[T,i]of S.entries()){const o=this.hitCheck(i);if(R&&o[0]===gE.REFLECTED){S=[i],this.hitChecks=[o];break}o[0]===gE.HIT?I=!0:N||(N=o[0]===gE.MISS),this.hitChecks[T]=o}return I?this.moveHistoryEntry.result=EE.SUCCESS:(E.turnData.hitCount=1,E.turnData.hitsLeft=1,this.moveHistoryEntry.result=N?EE.MISS:EE.FAIL),S}queueReflectedMove(E,R){const I=this.move.isMultiTarget()?JI(R,this.move.id).targets:[E.getBattlerIndex()];R.getTag(Y.MAGIC_COAT)||(this.queuedPhases.push(new O0(R.getBattlerIndex(),R.getPassiveAbility().hasAttr(rr))),this.queuedPhases.push(new GC)),this.queuedPhases.push(new lE(R,I,new Ye(this.move.id,0,0,!0),!0,!0,!0))}applyToTargets(E,R){let I=!0;for(const[N,S]of R.entries()){const[T,i]=this.hitChecks[N];switch(T){case gE.HIT:if(this.applyMoveEffects(S,i,I),I=!1,ui(this.move))return;break;case gE.NO_EFFECT:s.queueMessage(D.t(this.move.id===A.SHEER_COLD?"battle:hitResultImmune":"battle:hitResultNoEffect",{pokemonName:Z(S)}));case gE.NO_EFFECT_NO_MESSAGE:case gE.PROTECTED:case gE.TARGET_NOT_ON_FIELD:LE(pO,E,S,this.move);break;case gE.MISS:s.queueMessage(D.t("battle:attackMissed",{pokemonNameWithAffix:Z(S)})),LE(gO,E,S,this.move);break;case gE.REFLECTED:this.queueReflectedMove(E,S);break;case gE.PENDING:case gE.ERROR:throw new Error("Unexpected hit check result")}}}start(){var i,o;super.start();const E=this.getUserPokemon();if(!E){super.end();return}E.isPlayer()?s.currentBattle.lastPlayerInvolved=this.fieldIndex:s.currentBattle.lastEnemyInvolved=this.fieldIndex;const R=this.move.hasAttr(HI);if(!E.isOnField()){if(!R){super.end();return}if(!E.scene){super.end();return}}const I=new SA(!1),N=this.move;if(LE(ZL,E,this.getFirstTarget()??null,N,I,this.virtual),I.value)return this.end();if(E.lapseTags(Yt.MOVE_EFFECT),E.turnData.hitsLeft===0&&E.turnData.hitCount>0&&E.turnData.extraTurns>0&&(E.turnData.hitsLeft=-1,E.turnData.hitCount=0,E.turnData.extraTurns--),E.turnData.hitsLeft===-1){const C=new me(1);LE(vA,E,this.getFirstTarget()??null,N,C),ZO(Ar,E,null,N,!1,C,null),s.applyModifiers($I,E.isPlayer(),E,N.id,C),E.turnData.hitCount=C.value,E.turnData.hitsLeft=C.value}this.moveHistoryEntry={move:this.move.id,targets:this.targets,result:EE.PENDING,virtual:this.virtual};const S=ui(N),T=this.conductHitChecks(E,S);if(this.firstHit=E.turnData.hitCount===E.turnData.hitsLeft,this.lastHit=E.turnData.hitsLeft===1||!T.some(C=>C.isActive(!0)),this.moveHistoryEntry.result===EE.SUCCESS||N.getAttrs(tA).some(C=>C.trigger===YR.POST_TARGET)){const C=this.getFirstTarget();new EU(N.id,E,(C==null?void 0:C.getBattlerIndex())??FA.ATTACKER,((o=(i=s.currentBattle)==null?void 0:i.mysteryEncounter)==null?void 0:o.hasBattleAnimationsWithoutTargets)??!1).play(N.hitsSubstitute(E,C),()=>this.postAnimCallback(E,T));return}this.postAnimCallback(E,T)}postAnimCallback(E,R){this.firstHit&&E.pushMoveHistory(this.moveHistoryEntry);try{this.applyToTargets(E,R)}catch(N){console.warn(N.message||"Unexpected error in move effect phase"),this.end();return}this.queuedPhases.length&&s.appendToPhase(this.queuedPhases,qR);const I=E.getMoveType(this.move,!0);this.move.category!==u.STATUS&&!E.stellarTypesBoosted.includes(I)&&E.stellarTypesBoosted.push(I),this.lastHit&&this.triggerMoveEffects(YR.POST_TARGET,E,null),this.updateSubstitutes(),this.end()}end(){var R;const E=this.getUserPokemon();if(E)if(E.turnData.hitsLeft&&--E.turnData.hitsLeft>=1&&((R=this.getFirstTarget())!=null&&R.isActive()))s.unshiftPhase(this.getNewHitPhase());else{const I=E.turnData.hitCount-Math.max(E.turnData.hitsLeft,0);(I>1||E.turnData.hitsLeft&&E.turnData.hitsLeft>0)&&s.queueMessage(D.t("battle:attackHitsCount",{count:I})),s.applyModifiers(Ss,this.player,E),this.getTargets().forEach(N=>N.turnData.moveEffectiveness=null)}super.end()}applyOnGetHitAbEffects(E,R,I){b9(St,R,E,this.move,I),R.lapseTags(Yt.AFTER_HIT)}applyHeldItemFlinchCheck(E,R,I){if(!this.move.hasAttr(VA)&&I&&!R.hasAbilityWithAttr(vL)&&!this.move.hitsSubstitute(E,R)){const N=new SA(!1);s.applyModifiers(vr,E.isPlayer(),E,N),N.value&&R.addTag(Y.FLINCHED,void 0,this.move.id,E.id)}}protectedCheck(E,R){const I=R.isPlayer()?qe.PLAYER:qe.ENEMY,N=new SA(!1),S=new SA(!1);return this.move.isAllyTarget()||s.arena.applyTagsForSide(QN,I,!1,N,E,R,this.move.id,S),![ee.ENEMY_SIDE,ee.BOTH_SIDES].includes(this.move.moveTarget)&&(S.value||!this.move.doesFlagEffectApply({flag:je.IGNORE_PROTECT,user:E,target:R}))&&(N.value||!R.findTags(T=>T instanceof WS).length&&R.findTags(T=>T instanceof or).find(T=>R.lapseTag(T.tagType))||this.move.category!==u.STATUS&&R.findTags(T=>T instanceof WS).find(T=>R.lapseTag(T.tagType)))}hitCheck(E){var H,c;const R=this.getUserPokemon(),I=this.move;if(!R)return[gE.ERROR,0];if(I.moveTarget===ee.USER)return[gE.HIT,1];const N=ui(I);if(!E.isActive(!0)&&!N)return[gE.TARGET_NOT_ON_FIELD,0];if(!N&&s.currentBattle.double&&((c=(H=E.getAlly())==null?void 0:H.getTag(Y.COMMANDED))==null?void 0:c.getSourcePokemon())===E)return[gE.MISS,0];const S=N||this.checkBypassAccAndInvuln(E),T=E.getTag(Es);if(T&&!S&&!this.checkBypassSemiInvuln(T))return[gE.MISS,0];if(!N&&this.protectedCheck(R,E))return[gE.PROTECTED,0];if(!this.reflected&&I.doesFlagEffectApply({flag:je.REFLECTABLE,user:R,target:E}))return[gE.REFLECTED,0];if(N)return[gE.HIT,1];const i=new SA(!1),o=E.getMoveEffectiveness(R,I,!1,!1,i);if(o===0)return[i.value?gE.NO_EFFECT_NO_MESSAGE:gE.NO_EFFECT,o];const C=I.calculateBattleAccuracy(R,E);if(R.turnData.hitsLeft<R.turnData.hitCount&&(!I.hasFlag(je.CHECK_ALL_HITS)||R.hasAbilityWithAttr(Tr)))return[gE.HIT,o];const U=S||E.getTag(Y.ALWAYS_GET_HIT)||E.getTag(Y.TELEKINESIS)&&!this.move.hasAttr(kO);if(C===-1||U)return[gE.HIT,o];const _=R.getAccuracyMultiplier(E,this.move);return R.randBattleSeedInt(100)<C*_?[gE.HIT,o]:[gE.MISS,0]}checkBypassAccAndInvuln(E){var I;const R=this.getUserPokemon();if(!R)return!1;if(R.hasAbilityWithAttr(ar)||E.hasAbilityWithAttr(ar)||this.move.hasAttr(VU)&&R.isOfType(L.POISON)||R.getTag(Y.IGNORE_ACCURACY)&&(((I=R.getLastXMoves().find(()=>!0))==null?void 0:I.targets)||[]).indexOf(E.getBattlerIndex())!==-1||ui(this.move))return!0}checkBypassSemiInvuln(E){return E?this.move.getAttrs(XR).some(I=>I.tagType===E.tagType):!1}getUserPokemon(){return this.battlerIndex>FA.ENEMY_2?s.getPokemonById(this.battlerIndex):(this.player?s.getPlayerField():s.getEnemyField())[this.fieldIndex]}getTargets(){return s.getField(!0).filter(E=>this.targets.indexOf(E.getBattlerIndex())>-1)}getFirstTarget(){return this.getTargets()[0]}removeTarget(E){this.targets.findIndex(I=>I===E.getBattlerIndex())!==-1&&this.targets.splice(this.targets.findIndex(I=>I===E.getBattlerIndex()),1)}stopMultiHit(E){E&&this.removeTarget(E);const R=this.getUserPokemon();R&&(!E||this.targets.length===0)&&(R.turnData.hitCount=1,R.turnData.hitsLeft=1)}getNewHitPhase(){return new IM(this.battlerIndex,this.targets,this.move,this.reflected,this.virtual)}updateSubstitutes(){const E=this.getTargets();for(const R of E){const I=R.getTag(OR);I&&I.hp<=0&&R.lapseTag(Y.SUBSTITUTE)}}triggerMoveEffects(E,R,I,N,S){return UX(T=>T instanceof tA&&T.trigger===E&&(Ne(S)||T.selfTarget===S)&&(!T.firstHitOnly||this.firstHit)&&(!T.lastHitOnly||this.lastHit)&&(!T.firstTargetOnly||(N??!0)),R,I,this.move)}applyMoveEffects(E,R,I){const N=this.getUserPokemon();if(Ne(N))return;this.triggerMoveEffects(YR.PRE_APPLY,N,E);const S=this.applyMove(N,E,R);this.triggerMoveEffects(YR.POST_APPLY,N,E,I,!0),this.move.hitsSubstitute(N,E)||this.applyOnTargetEffects(N,E,S,I),this.lastHit&&(s.triggerPokemonFormChange(N,fa),N.turnData.hitCount>1&&rc(YS,E,0,E.hasPassive(),!1,[],N))}applyMoveDamage(E,R,I){const N=R.getCriticalHitResult(E,this.move,!1);LE(pU,E,R,this.move);const{result:S,damage:T}=R.getAttackDamage({source:E,move:this.move,ignoreAbility:!1,ignoreSourceAbility:!1,ignoreAllyAbility:!1,ignoreSourceAllyAbility:!1,simulated:!1,effectiveness:I,isCritical:N}),i=E.findTag(G=>G instanceof gS&&G.boostedType===E.getMoveType(this.move));i!=null&&i.oneUse&&E.removeTag(i.tagType);const o=S===CA.ONE_HIT_KO;if(!T)return S;R.lapseTags(Yt.HIT);const C=R.getTag(OR),U=C&&this.move.hitsSubstitute(E,R);U?C.hp-=T:!R.isPlayer()&&T>=R.hp&&s.applyModifiers(Ei,!1,R);const _=U?0:R.damageAndUpdate(T,{result:S,ignoreFaintPhase:!0,ignoreSegments:o,isCritical:N,source:E});return N&&s.queueMessage(D.t("battle:hitResultCriticalHit")),_<=0||(E.isPlayer()&&(s.validateAchvs(aN,new me(_)),_>s.gameData.gameStats.highestDamage&&(s.gameData.gameStats.highestDamage=_)),E.turnData.totalDamageDealt+=_,E.turnData.singleHitDamageDealt=_,R.battleData.hitCount++,R.turnData.damageTaken+=_,R.turnData.attacksReceived.unshift({move:this.move.id,result:S,damage:_,critical:N,sourceId:E.id,sourceBattlerIndex:E.getBattlerIndex()}),E.isPlayer()&&!R.isPlayer()&&s.applyModifiers(JL,!0,E,new me(_))),S}onFaintTarget(E,R){s.setPhaseQueueSplice(),s.unshiftPhase(new uC(R.getBattlerIndex(),!1,E)),R.destroySubstitute(),R.lapseTag(Y.COMMANDED),!this.lastHit&&E.turnData.hitsLeft>1&&(this.lastHit=!0)}queueHitResultMessage(E){let R;switch(E){case CA.SUPER_EFFECTIVE:R=D.t("battle:hitResultSuperEffective");break;case CA.NOT_VERY_EFFECTIVE:R=D.t("battle:hitResultNotVeryEffective");break;case CA.ONE_HIT_KO:R=D.t("battle:hitResultOneHitKO");break}R&&s.queueMessage(R)}applyMove(E,R,I){if(E.getMoveCategory(R,this.move)===u.STATUS)return CA.STATUS;const S=this.applyMoveDamage(E,R,I);return(E.turnData.hitsLeft===1||R.isFainted())&&this.queueHitResultMessage(S),R.isFainted()&&this.onFaintTarget(E,R),S}applyOnTargetEffects(E,R,I,N){const S=[CA.EFFECTIVE,CA.SUPER_EFFECTIVE,CA.NOT_VERY_EFFECTIVE,CA.ONE_HIT_KO].includes(I);this.triggerMoveEffects(YR.POST_APPLY,E,R,N,!1),this.applyHeldItemFlinchCheck(E,R,S),this.applyOnGetHitAbEffects(E,R,I),a6(xL,E,R,this.move,I),!E.isPlayer()&&this.move instanceof B&&s.applyShuffledModifiers(RT,!1,R),this.move instanceof B&&s.applyModifiers(is,this.player,E,R)}};r(IM,"MoveEffectPhase");let jO=IM;const Wd=class Wd extends Wt{constructor(E,R,I,N,S=!1,T=!1,i=!1,o=!1,C=!1){super(E,void 0,XA.HEALTH_UP),this.hpHealed=R,this.message=I,this.showFullHpMessage=N,this.skipAnim=S,this.revive=T,this.healStatus=i,this.preventFullHeal=o,this.fullRestorePP=C}start(){!this.skipAnim&&(this.revive||this.getPokemon().hp)&&!this.getPokemon().isFullHp()?super.start():this.end()}end(){const E=this.getPokemon();if(!E.isOnField()||!this.revive&&!E.isActive())return super.end();const R=!!this.message,I=!E.isFullHp()||this.hpHealed<0,N=E.getTag(Y.HEAL_BLOCK);let S=J.NONE;if(N&&this.hpHealed>0)return s.queueMessage(N.onActivation(E)),this.message=null,super.end();if(I){const T=new me(1);this.revive||s.applyModifiers(ET,this.player,T);const i=new me(Math.floor(this.hpHealed*T.value));if(i.value<0&&(E.damageAndUpdate(i.value*-1,{result:CA.INDIRECT}),i.value=0),this.preventFullHeal&&E.hp+i.value>=E.getMaxHp()&&(i.value=E.getMaxHp()-E.hp-1),i.value=E.heal(i.value),i.value&&s.damageNumberHandler.add(E,i.value,CA.HEAL),E.isPlayer()&&(s.validateAchvs(rN,i),i.value>s.gameData.gameStats.highestHeal&&(s.gameData.gameStats.highestHeal=i.value)),this.healStatus&&!this.revive&&E.status&&(S=E.status.effect,E.resetStatus()),this.fullRestorePP)for(const o of this.getPokemon().getMoveset())o&&(o.ppUsed=0);E.updateInfo().then(()=>super.end())}else this.healStatus&&!this.revive&&E.status?(S=E.status.effect,E.resetStatus(),E.updateInfo().then(()=>super.end())):this.showFullHpMessage&&(this.message=D.t("battle:hpIsFull",{pokemonName:Z(E)}));this.message&&s.queueMessage(this.message),this.healStatus&&S&&!R&&s.queueMessage(qI(S,Z(E))),!I&&!S&&super.end()}};r(Wd,"PokemonHealPhase");let Dt=Wd;var qe=(t=>(t[t.BOTH=0]="BOTH",t[t.PLAYER=1]="PLAYER",t[t.ENEMY=2]="ENEMY",t))(qe||{});const md=class md{constructor(E,R,I,N,S=0){this.tagType=E,this.turnCount=R,this.sourceMove=I,this.sourceId=N,this.side=S}apply(E,R,...I){return!0}onAdd(E,R=!1){}onRemove(E,R=!1){R||s.queueMessage(D.t(`arenaTag:arenaOnRemove${this.side===1?"Player":this.side===2?"Enemy":""}`,{moveName:this.getMoveName()}))}onOverlap(E,R){}lapse(E){return this.turnCount<1||!!--this.turnCount}getMoveName(){return this.sourceMove?Ke[this.sourceMove].name:null}loadTag(E){this.turnCount=E.turnCount,this.sourceMove=E.sourceMove,this.sourceId=E.sourceId,this.side=E.side}getSourcePokemon(){return this.sourceId?s.getPokemonById(this.sourceId):null}getAffectedPokemon(){switch(this.side){case 1:return s.getPlayerField()??[];case 2:return s.getEnemyField()??[];case 0:default:return s.getField(!0)??[]}}};r(md,"ArenaTag");let Ot=md;const gd=class gd extends Ot{constructor(E,R,I){super(oe.MIST,E,A.MIST,R,I)}onAdd(E,R=!1){if(super.onAdd(E),this.sourceId){const I=s.getPokemonById(this.sourceId);!R&&I?s.queueMessage(D.t("arenaTag:mistOnAdd",{pokemonNameWithAffix:Z(I)})):R||console.warn("Failed to get source for MistTag onAdd")}}apply(E,R,I,N){if(I){const S=new SA(!1);if(sA(jN,I,null,!1,S),S.value)return!1}return N.value=!0,R||s.queueMessage(D.t("arenaTag:mistApply")),!0}};r(gd,"MistTag");let HC=gd;const pd=class pd extends Ot{constructor(E,R,I,N,S,T){super(E,R,I,N,S),this.weakenedCategories=T}apply(E,R,I,N,S){if(this.weakenedCategories.includes(N)){const T=new SA(!1);return sA(jN,I,null,!1,T),T.value?!1:(S.value=s.currentBattle.double?2732/4096:.5,!0)}return!1}};r(pd,"WeakenMoveScreenTag");let uS=pd;const yd=class yd extends uS{constructor(E,R,I){super(oe.REFLECT,E,A.REFLECT,R,I,[u.PHYSICAL])}onAdd(E,R=!1){R||s.queueMessage(D.t(`arenaTag:reflectOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}};r(yd,"ReflectTag");let I0=yd;const wd=class wd extends uS{constructor(E,R,I){super(oe.LIGHT_SCREEN,E,A.LIGHT_SCREEN,R,I,[u.SPECIAL])}onAdd(E,R=!1){R||s.queueMessage(D.t(`arenaTag:lightScreenOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}};r(wd,"LightScreenTag");let L0=wd;const Vd=class Vd extends uS{constructor(E,R,I){super(oe.AURORA_VEIL,E,A.AURORA_VEIL,R,I,[u.SPECIAL,u.PHYSICAL])}onAdd(E,R=!1){R||s.queueMessage(D.t(`arenaTag:auroraVeilOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}};r(Vd,"AuroraVeilTag");let N0=Vd;const vd=class vd extends Ot{constructor(E,R,I,N,S,T=!1){super(E,1,R,I,N),this.protectConditionFunc=S,this.ignoresBypass=T}onAdd(E){s.queueMessage(D.t(`arenaTag:conditionalProtectOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`,{moveName:super.getMoveName()}))}onRemove(E){}apply(E,R,I,N,S,T,i){return this.side===1===S.isPlayer()&&this.protectConditionFunc(E,T)?(I.value||(I.value=!0,R||(new Rs(XA.PROTECT,S).play(),s.queueMessage(D.t("arenaTag:conditionalProtectApply",{moveName:super.getMoveName(),pokemonNameWithAffix:Z(S)})))),i.value=i.value||this.ignoresBypass,!0):!1}};r(vd,"ConditionalProtectTag");let QN=vd;const h9=r((t,E)=>{const R=Ke[E],I=s.getCurrentPhase();if(I instanceof jO){const N=I.getUserPokemon();if(N)return R.getPriority(N)>0}return R.priority>0},"QuickGuardConditionFunc"),xd=class xd extends QN{constructor(E,R){super(oe.QUICK_GUARD,A.QUICK_GUARD,E,R,h9)}};r(xd,"QuickGuardTag");let s0=xd;const f9=r((t,E)=>{switch(Ke[E].moveTarget){case ee.ALL_ENEMIES:case ee.ALL_NEAR_ENEMIES:case ee.ALL_OTHERS:case ee.ALL_NEAR_OTHERS:return!0}return!1},"WideGuardConditionFunc"),bd=class bd extends QN{constructor(E,R){super(oe.WIDE_GUARD,A.WIDE_GUARD,E,R,f9)}};r(bd,"WideGuardTag");let S0=bd;const d9=r((t,E)=>Ke[E].category!==u.STATUS,"MatBlockConditionFunc"),Zd=class Zd extends QN{constructor(E,R){super(oe.MAT_BLOCK,A.MAT_BLOCK,E,R,d9)}onAdd(E){if(this.sourceId){const R=s.getPokemonById(this.sourceId);R?s.queueMessage(D.t("arenaTag:matBlockOnAdd",{pokemonNameWithAffix:Z(R)})):console.warn("Failed to get source for MatBlockTag onAdd")}}};r(Zd,"MatBlockTag");let T0=Zd;const K9=r((t,E)=>{const R=Ke[E];return R.category===u.STATUS&&R.moveTarget!==ee.ENEMY_SIDE&&R.moveTarget!==ee.BOTH_SIDES&&R.moveTarget!==ee.ALL},"CraftyShieldConditionFunc"),kd=class kd extends QN{constructor(E,R){super(oe.CRAFTY_SHIELD,A.CRAFTY_SHIELD,E,R,K9,!0)}};r(kd,"CraftyShieldTag");let n0=kd;const Xd=class Xd extends Ot{constructor(E,R,I,N){super(oe.NO_CRIT,E,R,I,N)}onAdd(E){s.queueMessage(D.t(`arenaTag:noCritOnAdd${this.side===1?"Player":"Enemy"}`,{moveName:this.getMoveName()}))}onRemove(E){const R=s.getPokemonById(this.sourceId);s.queueMessage(D.t("arenaTag:noCritOnRemove",{pokemonNameWithAffix:Z(R??void 0),moveName:this.getMoveName()}))}};r(Xd,"NoCritTag");let cC=Xd;const Qd=class Qd extends Ot{constructor(E,R,I){super(oe.WISH,E,A.WISH,R,I)}onAdd(E){if(this.sourceId){const R=s.getPokemonById(this.sourceId);R?(this.battlerIndex=R.getBattlerIndex(),this.triggerMessage=D.t("arenaTag:wishTagOnAdd",{pokemonNameWithAffix:Z(R)}),this.healHp=uA(R.getMaxHp()/2)):console.warn("Failed to get source for WishTag onAdd")}}onRemove(E){const R=s.getField()[this.battlerIndex];R!=null&&R.isActive(!0)&&(s.queueMessage(this.triggerMessage),s.unshiftPhase(new Dt(R.getBattlerIndex(),this.healHp,null,!0,!1)))}};r(Qd,"WishTag");let a0=Qd;const Jd=class Jd extends Ot{constructor(E,R,I,N,S){super(E,R,N,S),this.weakenedType=I}apply(E,R,I,N){return I===this.weakenedType?(N.value*=.33,!0):!1}};r(Jd,"WeakenMoveTypeTag");let Ja=Jd;const $d=class $d extends Ja{constructor(E,R){super(oe.MUD_SPORT,E,L.ELECTRIC,A.MUD_SPORT,R)}onAdd(E){s.queueMessage(D.t("arenaTag:mudSportOnAdd"))}onRemove(E){s.queueMessage(D.t("arenaTag:mudSportOnRemove"))}};r($d,"MudSportTag");let r0=$d;const qd=class qd extends Ja{constructor(E,R){super(oe.WATER_SPORT,E,L.FIRE,A.WATER_SPORT,R)}onAdd(E){s.queueMessage(D.t("arenaTag:waterSportOnAdd"))}onRemove(E){s.queueMessage(D.t("arenaTag:waterSportOnRemove"))}};r(qd,"WaterSportTag");let i0=qd;const zd=class zd extends Ot{constructor(E){super(oe.ION_DELUGE,1,E)}onAdd(E){s.queueMessage(D.t("arenaTag:plasmaFistsOnAdd"))}onRemove(E){}apply(E,R,I){return I.value===L.NORMAL?(I.value=L.ELECTRIC,!0):!1}};r(zd,"IonDelugeTag");let o0=zd;const jd=class jd extends Ot{constructor(E,R,I,N,S){super(E,0,R,I,N),this.layers=1,this.maxLayers=S}onOverlap(E,R){this.layers<this.maxLayers&&(this.layers++,this.onAdd(E))}apply(E,R,I){return this.side===1!==I.isPlayer()?!1:this.activateTrap(I,R)}activateTrap(E,R){return!1}getMatchupScoreMultiplier(E){return E.isGrounded()?1:Phaser.Math.Linear(0,1/Math.pow(2,this.layers),Math.min(E.getHpRatio(),.5)*2)}loadTag(E){super.loadTag(E),this.layers=E.layers,this.maxLayers=E.maxLayers}};r(jd,"ArenaTrapTag");let _O=jd;const eK=class eK extends _O{constructor(E,R){super(oe.SPIKES,A.SPIKES,E,R,3)}onAdd(E,R=!1){super.onAdd(E);const I=this.sourceId?s.getPokemonById(this.sourceId):null;!R&&I&&s.queueMessage(D.t("arenaTag:spikesOnAdd",{moveName:this.getMoveName(),opponentDesc:I.getOpponentDescriptor()}))}activateTrap(E,R){if(!E.isGrounded())return!1;const I=new SA(!1);if(sA($E,E,I),R||I.value)return!I.value;const N=1/(10-2*this.layers),S=uA(E.getMaxHp()*N);return s.queueMessage(D.t("arenaTag:spikesActivateTrap",{pokemonNameWithAffix:Z(E)})),E.damageAndUpdate(S,{result:CA.INDIRECT}),E.turnData.damageTaken+=S,!0}};r(eK,"SpikesTag");let C0=eK;const AK=class AK extends _O{constructor(E,R){super(oe.TOXIC_SPIKES,A.TOXIC_SPIKES,E,R,2),this.neutralized=!1}onAdd(E,R=!1){super.onAdd(E);const I=this.sourceId?s.getPokemonById(this.sourceId):null;!R&&I&&s.queueMessage(D.t("arenaTag:toxicSpikesOnAdd",{moveName:this.getMoveName(),opponentDesc:I.getOpponentDescriptor()}))}onRemove(E){this.neutralized||super.onRemove(E)}activateTrap(E,R){if(E.isGrounded()){if(R)return!0;if(E.isOfType(L.POISON)){if(this.neutralized=!0,s.arena.removeTag(this.tagType))return s.queueMessage(D.t("arenaTag:toxicSpikesActivateTrapPoison",{pokemonNameWithAffix:Z(E),moveName:this.getMoveName()})),!0}else if(!E.status){const I=this.layers>1;if(E.trySetStatus(I?J.TOXIC:J.POISON,!0,null,0,this.getMoveName()))return!0}}return!1}getMatchupScoreMultiplier(E){return E.isGrounded()||!E.canSetStatus(J.POISON,!0)?1:E.isOfType(L.POISON)?1.25:super.getMatchupScoreMultiplier(E)}};r(AK,"ToxicSpikesTag");let l0=AK;const EK=class EK extends Ot{constructor(E,R,I,N,S=0){super(E,3,R,I,S),this.targetIndex=N,this.side=S}lapse(E){const R=super.lapse(E);return R||s.unshiftPhase(new jO(this.sourceId,[this.targetIndex],Ke[this.sourceMove],!1,!0)),R}onRemove(E){}};r(EK,"DelayedAttackTag");let U0=EK;const tK=class tK extends _O{constructor(E,R){super(oe.STEALTH_ROCK,A.STEALTH_ROCK,E,R,1)}onAdd(E,R=!1){super.onAdd(E);const I=this.sourceId?s.getPokemonById(this.sourceId):null;!R&&I&&s.queueMessage(D.t("arenaTag:stealthRockOnAdd",{opponentDesc:I.getOpponentDescriptor()}))}getDamageHpRatio(E){const R=E.getAttackTypeEffectiveness(L.ROCK,void 0,!0);let I=0;switch(R){case 0:I=0;break;case .25:I=.03125;break;case .5:I=.0625;break;case 1:I=.125;break;case 2:I=.25;break;case 4:I=.5;break}return I}activateTrap(E,R){const I=new SA(!1);if(sA($E,E,I),I.value)return!1;const N=this.getDamageHpRatio(E);if(!N)return!1;if(R)return!0;const S=uA(E.getMaxHp()*N);return s.queueMessage(D.t("arenaTag:stealthRockActivateTrap",{pokemonNameWithAffix:Z(E)})),E.damageAndUpdate(S,{result:CA.INDIRECT}),E.turnData.damageTaken+=S,!0}getMatchupScoreMultiplier(E){const R=this.getDamageHpRatio(E);return Phaser.Math.Linear(super.getMatchupScoreMultiplier(E),1,1-Math.pow(R,R))}};r(tK,"StealthRockTag");let D0=tK;const RK=class RK extends _O{constructor(E,R){super(oe.STICKY_WEB,A.STICKY_WEB,E,R,1)}onAdd(E,R=!1){super.onAdd(E);const I=this.sourceId?s.getPokemonById(this.sourceId):null;!R&&I&&s.queueMessage(D.t("arenaTag:stickyWebOnAdd",{moveName:this.getMoveName(),opponentDesc:I.getOpponentDescriptor()}))}activateTrap(E,R){if(E.isGrounded()){const I=new SA(!1);if(sA(sO,E,I),R)return!I.value;if(!I.value){s.queueMessage(D.t("arenaTag:stickyWebActivateTrap",{pokemonName:E.getNameToRender()}));const N=new me(-1);return s.unshiftPhase(new hA(E.getBattlerIndex(),!1,[h.SPD],N.value,!0,!1,!0,null,!1,!0)),!0}}return!1}};r(RK,"StickyWebTag");let M0=RK;const OK=class OK extends Ot{constructor(E,R){super(oe.TRICK_ROOM,E,A.TRICK_ROOM,R)}apply(E,R,I){return I.value=!I.value,!0}onAdd(E){const R=this.sourceId?s.getPokemonById(this.sourceId):null;R&&s.queueMessage(D.t("arenaTag:trickRoomOnAdd",{pokemonNameWithAffix:Z(R)}))}onRemove(E){s.queueMessage(D.t("arenaTag:trickRoomOnRemove"))}};r(OK,"TrickRoomTag");let P0=OK;const IK=class IK extends Ot{constructor(E){super(oe.GRAVITY,E,A.GRAVITY)}onAdd(E){s.queueMessage(D.t("arenaTag:gravityOnAdd")),s.getField(!0).forEach(R=>{R!==null&&(R.removeTag(Y.FLOATING),R.removeTag(Y.TELEKINESIS),R.getTag(Y.FLYING)&&R.addTag(Y.INTERRUPTED))})}onRemove(E){s.queueMessage(D.t("arenaTag:gravityOnRemove"))}};r(IK,"GravityTag");let G0=IK;const LK=class LK extends Ot{constructor(E,R,I){super(oe.TAILWIND,E,A.TAILWIND,R,I)}onAdd(E,R=!1){R||s.queueMessage(D.t(`arenaTag:tailwindOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`));const I=s.getPokemonById(this.sourceId),N=(I!=null&&I.isPlayer()?s.getPlayerField():s.getEnemyField())??[];for(const S of N)S.hasAbility(O.WIND_POWER)&&!S.getTag(Y.CHARGED)&&(S.addTag(Y.CHARGED),s.queueMessage(D.t("abilityTriggers:windPowerCharged",{pokemonName:Z(S),moveName:this.getMoveName()}))),S.hasAbility(O.WIND_RIDER)&&(s.queueAbilityDisplay(S,!1,!0),s.unshiftPhase(new hA(S.getBattlerIndex(),!0,[h.ATK],1,!0)),s.queueAbilityDisplay(S,!1,!1))}onRemove(E,R=!1){R||s.queueMessage(D.t(`arenaTag:tailwindOnRemove${this.side===1?"Player":this.side===2?"Enemy":""}`))}};r(LK,"TailwindTag");let _0=LK;const NK=class NK extends Ot{constructor(E,R,I){super(oe.HAPPY_HOUR,E,A.HAPPY_HOUR,R,I)}onAdd(E){s.queueMessage(D.t("arenaTag:happyHourOnAdd"))}onRemove(E){s.queueMessage(D.t("arenaTag:happyHourOnRemove"))}};r(NK,"HappyHourTag");let u0=NK;const sK=class sK extends Ot{constructor(E,R,I){super(oe.SAFEGUARD,E,A.SAFEGUARD,R,I)}onAdd(E){s.queueMessage(D.t(`arenaTag:safeguardOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}onRemove(E){s.queueMessage(D.t(`arenaTag:safeguardOnRemove${this.side===1?"Player":this.side===2?"Enemy":""}`))}};r(sK,"SafeguardTag");let H0=sK;const SK=class SK extends Ot{constructor(){super(oe.NONE,0)}};r(SK,"NoneTag");let c0=SK;var sS;let F9=(sS=class extends _O{constructor(E,R){super(oe.IMPRISON,A.IMPRISON,E,R,1)}onAdd(){const E=this.getSourcePokemon();if(E){const R=this.getAffectedPokemon();R==null||R.forEach(I=>{I.isAllowedInBattle()&&I.addTag(Y.IMPRISON,1,A.IMPRISON,this.sourceId)}),s.queueMessage(D.t("battlerTags:imprisonOnAdd",{pokemonNameWithAffix:Z(E)}))}}lapse(){const E=this.getSourcePokemon();return E?E.isActive(!0):!1}activateTrap(E){const R=this.getSourcePokemon();return R!=null&&R.isActive(!0)&&E.isAllowedInBattle()&&E.addTag(Y.IMPRISON,1,A.IMPRISON,this.sourceId),!0}onRemove(){const E=this.getAffectedPokemon();E==null||E.forEach(R=>{R.removeTag(Y.IMPRISON)})}},r(sS,"ImprisonTag"),sS);const TK=class TK extends Ot{constructor(E,R){super(oe.FIRE_GRASS_PLEDGE,4,A.FIRE_PLEDGE,E,R)}onAdd(E){s.queueMessage(D.t(`arenaTag:fireGrassPledgeOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}lapse(E){return(this.side===1?s.getPlayerField():s.getEnemyField()).filter(I=>!I.isOfType(L.FIRE)&&!I.switchOutStatus).forEach(I=>{s.queueMessage(D.t("arenaTag:fireGrassPledgeLapse",{pokemonNameWithAffix:Z(I)})),s.unshiftPhase(new Wt(I.getBattlerIndex(),I.getBattlerIndex(),XA.MAGMA_STORM)),I.damageAndUpdate(uA(I.getMaxHp()/8),{result:CA.INDIRECT})}),super.lapse(E)}};r(TK,"FireGrassPledgeTag");let B0=TK;const nK=class nK extends Ot{constructor(E,R){super(oe.WATER_FIRE_PLEDGE,4,A.WATER_PLEDGE,E,R)}onAdd(E){s.queueMessage(D.t(`arenaTag:waterFirePledgeOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}apply(E,R,I){return I.value*=2,!0}};r(nK,"WaterFirePledgeTag");let h0=nK;const aK=class aK extends Ot{constructor(E,R){super(oe.GRASS_WATER_PLEDGE,4,A.GRASS_PLEDGE,E,R)}onAdd(E){s.queueMessage(D.t(`arenaTag:grassWaterPledgeOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}};r(aK,"GrassWaterPledgeTag");let f0=aK;const rK=class rK extends Ot{constructor(E,R){super(oe.FAIRY_LOCK,E,A.FAIRY_LOCK,R)}onAdd(E){s.queueMessage(D.t("arenaTag:fairyLockOnAdd"))}};r(rK,"FairyLockTag");let d0=rK;const iK=class iK extends Ot{constructor(E){super(oe.NEUTRALIZING_GAS,0,void 0,E),this.sourceCount=1,this.beingRemoved=!1}onAdd(E){const R=this.getSourcePokemon();if(R){this.playActivationMessage(R);for(const I of s.getField(!0))I&&I.id!==R.id&&[!0,!1].forEach(N=>k_(I,N))}}onOverlap(E,R){this.sourceCount++,this.playActivationMessage(R)}onSourceLeave(E){if(this.sourceCount--,this.sourceCount<=0)E.removeTag(oe.NEUTRALIZING_GAS);else if(this.sourceCount===1){const R=s.getField().filter(I=>I==null?void 0:I.hasAbilityWithAttr(FL,!1))[0];Z_(R,R.getAbility().hasAttr(FL))}}onRemove(E,R=!1){this.beingRemoved=!0,R||s.queueMessage(D.t("arenaTag:neutralizingGasOnRemove"));for(const I of s.getField(!0))I&&!I.hasAbilityWithAttr(FL,!1)&&[!0,!1].forEach(N=>Z_(I,N))}shouldApplyToSelf(){return this.sourceCount>1}isBeingRemoved(){return this.beingRemoved}playActivationMessage(E){E&&s.queueMessage(D.t("arenaTag:neutralizingGasOnAdd",{pokemonNameWithAffix:Z(E)}))}};r(iK,"SuppressAbilitiesTag");let K0=iK;function n6(t,E,R,I,N,S=0){switch(t){case oe.MIST:return new HC(E,I,S);case oe.QUICK_GUARD:return new s0(I,S);case oe.WIDE_GUARD:return new S0(I,S);case oe.MAT_BLOCK:return new T0(I,S);case oe.CRAFTY_SHIELD:return new n0(I,S);case oe.NO_CRIT:return new cC(E,R,I,S);case oe.MUD_SPORT:return new r0(E,I);case oe.WATER_SPORT:return new i0(E,I);case oe.ION_DELUGE:return new o0(R);case oe.SPIKES:return new C0(I,S);case oe.TOXIC_SPIKES:return new l0(I,S);case oe.FUTURE_SIGHT:case oe.DOOM_DESIRE:return new U0(t,R,I,N,S);case oe.WISH:return new a0(E,I,S);case oe.STEALTH_ROCK:return new D0(I,S);case oe.STICKY_WEB:return new M0(I,S);case oe.TRICK_ROOM:return new P0(E,I);case oe.GRAVITY:return new G0(E);case oe.REFLECT:return new I0(E,I,S);case oe.LIGHT_SCREEN:return new L0(E,I,S);case oe.AURORA_VEIL:return new N0(E,I,S);case oe.TAILWIND:return new _0(E,I,S);case oe.HAPPY_HOUR:return new u0(E,I,S);case oe.SAFEGUARD:return new H0(E,I,S);case oe.IMPRISON:return new F9(I,S);case oe.FIRE_GRASS_PLEDGE:return new B0(I,S);case oe.WATER_FIRE_PLEDGE:return new h0(I,S);case oe.GRASS_WATER_PLEDGE:return new f0(I,S);case oe.FAIRY_LOCK:return new d0(E,I);case oe.NEUTRALIZING_GAS:return new K0(I);default:return null}}r(n6,"getArenaTag");function Y9(t){const E=n6(t.tagType,t.turnCount,t.sourceMove,t.sourceId,t.targetIndex,t.side)??new c0;return E.loadTag(t),E}r(Y9,"loadArenaTag");const oK=class oK extends kt{constructor(E,R,I=!1){super(E),this.targetIndex=R,this.playSound=I}start(){const E=this.getPokemon(),R=s.getField(!0).find(N=>N.getBattlerIndex()===this.targetIndex);if(!R)return this.end();E.summonData.speciesForm=R.getSpeciesForm(),E.summonData.ability=R.getAbility().id,E.summonData.gender=R.getGender(),E.removeTag(Y.POWER_TRICK);for(const N of mL)E.setStat(N,R.getStat(N,!1),!1);for(const N of cO)E.setStatStage(N,R.getStatStage(N));E.summonData.moveset=R.getMoveset().map(N=>N?new Ye(N.moveId,0,0,!1,Math.min(N.getMove().pp,5)):(console.warn(`Transform: somehow iterating over a ${N} value when copying moveset!`),new Ye(A.NONE))),E.summonData.types=R.getTypes();const I=[E.updateInfo()];this.playSound&&s.playSound("battle_anims/PRSFX- Transform"),s.queueMessage(D.t("abilityTriggers:postSummonTransform",{pokemonNameWithAffix:Z(E),targetName:R.name})),I.push(E.loadAssets(!1).then(()=>{E.playAnim(),E.updateInfo(),E.setTempAbility(R.getAbility())})),Promise.allSettled(I).then(()=>this.end())}};r(oK,"PokemonTransformPhase");let BC=oK;const CK=class CK{constructor(E=!0){this.showAbility=E}apply(E,R,I,N,S){}getTriggerMessage(E,R,...I){return null}getCondition(){return this.extraCondition||null}addCondition(E){return this.extraCondition=E,this}canApply(E,R,I,N){return!0}};r(CK,"AbAttr");let Qe=CK;var cL=(t=>(t[t.SUBSTITUTE_ADD=0]="SUBSTITUTE_ADD",t[t.SUBSTITUTE_PRE_MOVE=1]="SUBSTITUTE_PRE_MOVE",t[t.SUBSTITUTE_POST_MOVE=2]="SUBSTITUTE_POST_MOVE",t[t.SUBSTITUTE_REMOVE=3]="SUBSTITUTE_REMOVE",t[t.COMMANDER_APPLY=4]="COMMANDER_APPLY",t[t.COMMANDER_REMOVE=5]="COMMANDER_REMOVE",t))(cL||{});const W9=new Set([A.AFTER_YOU,A.ASSIST,A.BANEFUL_BUNKER,A.BEAK_BLAST,A.BELCH,A.BESTOW,A.COMEUPPANCE,A.COPYCAT,A.COUNTER,A.CRAFTY_SHIELD,A.DESTINY_BOND,A.DETECT,A.ENDURE,A.FEINT,A.FOCUS_PUNCH,A.FOLLOW_ME,A.HELPING_HAND,A.INSTRUCT,A.KINGS_SHIELD,A.MAT_BLOCK,A.ME_FIRST,A.METRONOME,A.MIMIC,A.MIRROR_COAT,A.MIRROR_MOVE,A.OBSTRUCT,A.PROTECT,A.QUASH,A.QUICK_GUARD,A.RAGE_POWDER,A.REVIVAL_BLESSING,A.SHELL_TRAP,A.SILK_TRAP,A.SKETCH,A.SLEEP_TALK,A.SNATCH,A.SNORE,A.SPIKY_SHIELD,A.SPOTLIGHT,A.STRUGGLE,A.TRANSFORM,A.WIDE_GUARD]),m9=new Set([A.ASSIST,A.BANEFUL_BUNKER,A.BEAK_BLAST,A.BELCH,A.BESTOW,A.BOUNCE,A.CELEBRATE,A.CHATTER,A.CIRCLE_THROW,A.COPYCAT,A.COUNTER,A.DESTINY_BOND,A.DETECT,A.DIG,A.DIVE,A.DRAGON_TAIL,A.ENDURE,A.FEINT,A.FLY,A.FOCUS_PUNCH,A.FOLLOW_ME,A.HELPING_HAND,A.HOLD_HANDS,A.KINGS_SHIELD,A.MAT_BLOCK,A.ME_FIRST,A.METRONOME,A.MIMIC,A.MIRROR_COAT,A.MIRROR_MOVE,A.NATURE_POWER,A.PHANTOM_FORCE,A.PROTECT,A.RAGE_POWDER,A.ROAR,A.SHADOW_FORCE,A.SHELL_TRAP,A.SKETCH,A.SKY_DROP,A.SLEEP_TALK,A.SNATCH,A.SPIKY_SHIELD,A.SPOTLIGHT,A.STRUGGLE,A.SWITCHEROO,A.TRANSFORM,A.TRICK,A.WHIRLWIND]),g9=new Set([A.ASSIST,A.BELCH,A.BEAK_BLAST,A.BIDE,A.BOUNCE,A.COPYCAT,A.DIG,A.DIVE,A.FREEZE_SHOCK,A.FLY,A.FOCUS_PUNCH,A.GEOMANCY,A.ICE_BURN,A.ME_FIRST,A.METRONOME,A.MIRROR_MOVE,A.MIMIC,A.PHANTOM_FORCE,A.RAZOR_WIND,A.SHADOW_FORCE,A.SHELL_TRAP,A.SKETCH,A.SKULL_BASH,A.SKY_ATTACK,A.SKY_DROP,A.SLEEP_TALK,A.SOLAR_BLADE,A.SOLAR_BEAM,A.STRUGGLE,A.UPROAR]),p9=new Set([A.ASSIST,A.BANEFUL_BUNKER,A.BEAK_BLAST,A.BESTOW,A.CELEBRATE,A.CHATTER,A.CIRCLE_THROW,A.COPYCAT,A.COUNTER,A.DESTINY_BOND,A.DETECT,A.DRAGON_TAIL,A.ENDURE,A.FEINT,A.FOCUS_PUNCH,A.FOLLOW_ME,A.HELPING_HAND,A.HOLD_HANDS,A.KINGS_SHIELD,A.MAT_BLOCK,A.ME_FIRST,A.METRONOME,A.MIMIC,A.MIRROR_COAT,A.MIRROR_MOVE,A.PROTECT,A.RAGE_POWDER,A.ROAR,A.SHELL_TRAP,A.SKETCH,A.SLEEP_TALK,A.SNATCH,A.SPIKY_SHIELD,A.SPOTLIGHT,A.STRUGGLE,A.SWITCHEROO,A.TRANSFORM,A.TRICK,A.WHIRLWIND]),y9=new Set([A.ACUPRESSURE,A.AFTER_YOU,A.AROMATIC_MIST,A.BEAK_BLAST,A.BELCH,A.CHILLY_RECEPTION,A.COACHING,A.CONVERSION_2,A.COUNTER,A.CRAFTY_SHIELD,A.CURSE,A.DECORATE,A.DOODLE,A.DOOM_DESIRE,A.DRAGON_CHEER,A.ELECTRIC_TERRAIN,A.FINAL_GAMBIT,A.FLORAL_HEALING,A.FLOWER_SHIELD,A.FOCUS_PUNCH,A.FUTURE_SIGHT,A.GEAR_UP,A.GRASSY_TERRAIN,A.GRAVITY,A.GUARD_SPLIT,A.HAIL,A.HAZE,A.HEAL_PULSE,A.HELPING_HAND,A.HOLD_HANDS,A.INSTRUCT,A.ION_DELUGE,A.MAGNETIC_FLUX,A.MAT_BLOCK,A.ME_FIRST,A.MIMIC,A.MIRROR_COAT,A.MIRROR_MOVE,A.MIST,A.MISTY_TERRAIN,A.MUD_SPORT,A.PERISH_SONG,A.POWER_SPLIT,A.PSYCH_UP,A.PSYCHIC_TERRAIN,A.PURIFY,A.QUICK_GUARD,A.RAIN_DANCE,A.REFLECT_TYPE,A.ROLE_PLAY,A.ROTOTILLER,A.SANDSTORM,A.SHELL_TRAP,A.SKETCH,A.SNOWSCAPE,A.SPIT_UP,A.SPOTLIGHT,A.STRUGGLE,A.SUNNY_DAY,A.TEATIME,A.TRANSFORM,A.WATER_SPORT,A.WIDE_GUARD]),w9=new Set([A.WEATHER_BALL,A.JUDGMENT,A.REVELATION_DANCE,A.MULTI_ATTACK,A.TERRAIN_PULSE,A.NATURAL_GIFT,A.TECHNO_BLAST,A.HIDDEN_POWER]),lK=class lK extends Qe{constructor(){super(!1)}apply(E,R,I,N,S){N.value=!0}getTriggerMessage(E,R,...I){return D.t("abilityTriggers:blockRecoilDamage",{pokemonName:Z(E),abilityName:R})}};r(lK,"BlockRecoilDamageAttr");let hC=lK;const UK=class UK extends Qe{constructor(){super(!1)}apply(E,R,I,N,S){const T=S[0];T.value=T.value/4}};r(UK,"DoubleBattleChanceAbAttr");let ps=UK;const DK=class DK extends Qe{canApplyPostBattleInit(E,R,I,N){return!0}applyPostBattleInit(E,R,I,N){}};r(DK,"PostBattleInitAbAttr");let fC=DK;const MK=class MK extends fC{constructor(E){super(!1),this.formFunc=E}canApplyPostBattleInit(E,R,I,N){return this.formFunc(E)!==E.formIndex&&!I}applyPostBattleInit(E,R,I,N){s.triggerPokemonFormChange(E,cA,!1)}};r(MK,"PostBattleInitFormChangeAbAttr");let fO=MK;const PK=class PK extends Qe{constructor(E,R){super(),this.stats=E,this.stages=R}apply(E,R,I,N,S){const T=[];if(!I){T.push(new hA(E.getBattlerIndex(),!0,this.stats,this.stages));for(const i of T)s.unshiftPhase(i)}}};r(PK,"PostTeraFormChangeStatChangeAbAttr");let ys=PK;const GK=class GK extends Qe{constructor(E){super(!0),this.weather=E}canApply(E,R,I,N){return s.arena.canSetWeather(X.NONE)}apply(E,R,I,N,S){I||s.arena.trySetWeather(X.NONE,E)}};r(GK,"ClearWeatherAbAttr");let F0=GK;const _K=class _K extends Qe{constructor(E){super(!0),this.terrain=E}canApply(E,R,I,N){return s.arena.canSetTerrain($e.NONE)}apply(E,R,I,N,S){I||s.arena.trySetTerrain($e.NONE,!0,E)}};r(_K,"ClearTerrainAbAttr");let Y0=_K;const uK=class uK extends Qe{canApplyPreDefend(E,R,I,N,S,T,i){return!0}applyPreDefend(E,R,I,N,S,T,i){}};r(uK,"PreDefendAbAttr");let eI=uK;const HK=class HK extends eI{canApplyPreDefend(E,R,I,N,S,T,i){return E.isFullHp()&&E.getMaxHp()>1&&i[0].value>=E.hp}applyPreDefend(E,R,I,N,S,T,i){I||E.addTag(Y.STURDY,1)}};r(HK,"PreDefendFullHpEndureAbAttr");let dC=HK;const cK=class cK extends Qe{apply(E,R,I,N,S){N.value=!0}getTriggerMessage(E,R,...I){return D.t("abilityTriggers:blockItemTheft",{pokemonNameWithAffix:Z(E),abilityName:R})}};r(cK,"BlockItemTheftAbAttr");let $a=cK;const BK=class BK extends Qe{constructor(){super(!1)}canApply(E,R,I,N){return N[0].value>1}apply(E,R,I,N,S){S[0].value+=.5}};r(BK,"StabBoostAbAttr");let KC=BK;const hK=class hK extends eI{constructor(E,R,I=!1){super(I),this.condition=E,this.damageMultiplier=R}canApplyPreDefend(E,R,I,N,S,T,i){return this.condition(E,N,S)}applyPreDefend(E,R,I,N,S,T,i){i[0].value=uA(i[0].value*this.damageMultiplier)}};r(hK,"ReceivedMoveDamageMultiplierAbAttr");let KR=hK;const fK=class fK extends eI{constructor(E){super(),this.damageMultiplier=E}applyPreDefend(E,R,I,N,S,T,i){const o=i[0];o.value=uA(o.value*this.damageMultiplier)}};r(fK,"AlliedFieldDamageReductionAbAttr");let FC=fK;const dK=class dK extends KR{constructor(E,R){super((I,N,S)=>N.getMoveType(S)===E,R,!1)}};r(dK,"ReceivedTypeDamageMultiplierAbAttr");let sL=dK;const KK=class KK extends eI{constructor(E,R){super(!0),this.immuneType=E,this.condition=R??null}canApplyPreDefend(E,R,I,N,S,T,i){return![ee.BOTH_SIDES,ee.ENEMY_SIDE,ee.USER_SIDE].includes(S.moveTarget)&&N!==E&&N.getMoveType(S)===this.immuneType}applyPreDefend(E,R,I,N,S,T,i){i[0].value=0}getImmuneType(){return this.immuneType}getCondition(){return this.condition}};r(KK,"TypeImmunityAbAttr");let VL=KK;const FK=class FK extends VL{constructor(E,R){super(E,R)}canApplyPreDefend(E,R,I,N,S,T,i){return S.category!==u.STATUS&&!S.hasAttr(kU)&&super.canApplyPreDefend(E,R,I,N,S,T,i)}applyPreDefend(E,R,I,N,S,T,i){super.applyPreDefend(E,R,I,N,S,T,i)}};r(FK,"AttackTypeImmunityAbAttr");let W0=FK;const YK=class YK extends VL{constructor(E){super(E)}canApplyPreDefend(E,R,I,N,S,T,i){return super.canApplyPreDefend(E,R,I,N,S,T,i)}applyPreDefend(E,R,I,N,S,T,i){if(super.applyPreDefend(E,R,I,N,S,T,i),!E.isFullHp()&&!I){const o=(R?E.getPassiveAbility():E.getAbility()).name;s.unshiftPhase(new Dt(E.getBattlerIndex(),uA(E.getMaxHp()/4),D.t("abilityTriggers:typeImmunityHeal",{pokemonNameWithAffix:Z(E),abilityName:o}),!0)),T.value=!0}}};r(YK,"TypeImmunityHealAbAttr");let ws=YK;const WK=class WK extends VL{constructor(E,R,I,N){super(E,N),this.stat=R,this.stages=I}canApplyPreDefend(E,R,I,N,S,T,i){return super.canApplyPreDefend(E,R,I,N,S,T,i)}applyPreDefend(E,R,I,N,S,T,i){super.applyPreDefend(E,R,I,N,S,T,i),T.value=!0,I||s.unshiftPhase(new hA(E.getBattlerIndex(),!0,[this.stat],this.stages))}};r(WK,"TypeImmunityStatStageChangeAbAttr");let IN=WK;const mK=class mK extends VL{constructor(E,R,I,N){super(E,N),this.tagType=R,this.turnCount=I}canApplyPreDefend(E,R,I,N,S,T,i){return super.canApplyPreDefend(E,R,I,N,S,T,i)}applyPreDefend(E,R,I,N,S,T,i){super.applyPreDefend(E,R,I,N,S,T,i),T.value=!0,I||E.addTag(this.tagType,this.turnCount,void 0,E.id)}};r(mK,"TypeImmunityAddBattlerTagAbAttr");let m0=mK;const gK=class gK extends VL{constructor(E){super(null,E)}canApplyPreDefend(E,R,I,N,S,T,i){const o=i.length>0?i[0].value:E.getAttackTypeEffectiveness(N.getMoveType(S),N,void 0,void 0,S);return S instanceof B&&o<2}applyPreDefend(E,R,I,N,S,T,i){T.value=!0,i[0].value=0}getTriggerMessage(E,R,...I){return D.t("abilityTriggers:nonSuperEffectiveImmunity",{pokemonNameWithAffix:Z(E),abilityName:R})}};r(gK,"NonSuperEffectiveImmunityAbAttr");let g0=gK;const pK=class pK extends eI{canApplyPreDefend(E,R,I,N,S,T,i){const o=i[0];return o&&o instanceof me&&!(S&&S.hasAttr(oO))&&E.isFullHp()&&o.value>.5}applyPreDefend(E,R,I,N,S,T,i){const o=i[0];o.value=.5,E.turnData.moveEffectiveness=.5}getTriggerMessage(E,R,...I){return D.t("abilityTriggers:fullHpResistType",{pokemonNameWithAffix:Z(E)})}};r(pK,"FullHpResistTypeAbAttr");let YC=pK;const yK=class yK extends Qe{canApplyPostDefend(E,R,I,N,S,T,i){return!0}applyPostDefend(E,R,I,N,S,T,i){}};r(yK,"PostDefendAbAttr");let St=yK;const wK=class wK extends eI{canApplyPreDefend(E,R,I,N,S,T,i){return!(S.moveTarget===ee.USER||S.moveTarget===ee.NEAR_ALLY)&&S.getPriority(N)>0&&!S.isMultiTarget()}applyPreDefend(E,R,I,N,S,T,i){T.value=!0}};r(wK,"FieldPriorityMoveImmunityAbAttr");let ES=wK;const VK=class VK extends Qe{canApplyPostStatStageChange(E,R,I,N,S,T){return!0}applyPostStatStageChange(E,R,I,N,S,T){}};r(VK,"PostStatStageChangeAbAttr");let WC=VK;const vK=class vK extends eI{constructor(E){super(!0),this.immuneCondition=E}canApplyPreDefend(E,R,I,N,S,T,i){return this.immuneCondition(E,N,S)}applyPreDefend(E,R,I,N,S,T,i){T.value=!0}getTriggerMessage(E,R,...I){return D.t("abilityTriggers:moveImmunity",{pokemonNameWithAffix:Z(E)})}};r(vK,"MoveImmunityAbAttr");let gI=vK;const xK=class xK extends eI{constructor(){super(!1)}canApplyPreDefend(E,R,I,N,S,T,i){const o=i[0];return S.category===u.STATUS&&o.value>=50}applyPreDefend(E,R,I,N,S,T,i){const o=i[0];o.value=50}};r(xK,"WonderSkinAbAttr");let mC=xK;const bK=class bK extends gI{constructor(E,R,I){super(E),this.stat=R,this.stages=I}canApplyPreDefend(E,R,I,N,S,T,i){return!I&&super.canApplyPreDefend(E,R,I,N,S,T,i)}applyPreDefend(E,R,I,N,S,T,i){super.applyPreDefend(E,R,I,N,S,T,i),s.unshiftPhase(new hA(E.getBattlerIndex(),!0,[this.stat],this.stages))}};r(bK,"MoveImmunityStatStageChangeAbAttr");let p0=bK;const ZK=class ZK extends St{canApplyPostDefend(E,R,I,N,S,T,i){return S.hasAttr(AR)}applyPostDefend(E,R,I,N,S,T,i){I||s.queueMessage(D.t("abilityTriggers:reverseDrain",{pokemonNameWithAffix:Z(N)}))}};r(ZK,"ReverseDrainAbAttr");let qa=ZK;const kK=class kK extends St{constructor(E,R,I,N=!0,S=!1){super(!0),this.condition=E,this.stat=R,this.stages=I,this.selfTarget=N,this.allOthers=S}canApplyPostDefend(E,R,I,N,S,T,i){return this.condition(E,N,S)}applyPostDefend(E,R,I,N,S,T,i){if(!I)if(this.allOthers){const o=E.getAlly(),C=Ne(o)?E.getOpponents():E.getOpponents().concat([o]);for(const U of C)s.unshiftPhase(new hA(U.getBattlerIndex(),!1,[this.stat],this.stages))}else s.unshiftPhase(new hA((this.selfTarget?E:N).getBattlerIndex(),this.selfTarget,[this.stat],this.stages))}};r(kK,"PostDefendStatStageChangeAbAttr");let OO=kK;const XK=class XK extends St{constructor(E,R,I,N,S=!0){super(!0),this.condition=E,this.hpGate=R,this.stats=I,this.stages=N,this.selfTarget=S}canApplyPostDefend(E,R,I,N,S,T,i){const o=Math.ceil(E.getMaxHp()*this.hpGate),C=E.turnData.attacksReceived[E.turnData.attacksReceived.length-1],U=(C==null?void 0:C.damage)||0;return this.condition(E,N,S)&&E.hp<=o&&E.hp+U>o}applyPostDefend(E,R,I,N,S,T,i){I||s.unshiftPhase(new hA((this.selfTarget?E:N).getBattlerIndex(),!0,this.stats,this.stages))}};r(XK,"PostDefendHpGatedStatStageChangeAbAttr");let mT=XK;const QK=class QK extends St{constructor(E,R){super(!0),this.condition=E,this.tagType=R}canApplyPostDefend(E,R,I,N,S,T,i){const o=s.arena.getTag(this.tagType);return this.condition(E,N,S)&&(!s.arena.getTag(this.tagType)||o.layers<o.maxLayers)}applyPostDefend(E,R,I,N,S,T,i){I||s.arena.addTag(this.tagType,0,void 0,E.id,E.isPlayer()?qe.ENEMY:qe.PLAYER)}};r(QK,"PostDefendApplyArenaTrapTagAbAttr");let y0=QK;const JK=class JK extends St{constructor(E,R){super(!0),this.condition=E,this.tagType=R}canApplyPostDefend(E,R,I,N,S,T,i){return this.condition(E,N,S)}applyPostDefend(E,R,I,N,S,T,i){!E.getTag(this.tagType)&&!I&&(E.addTag(this.tagType,void 0,void 0,E.id),s.queueMessage(D.t("abilityTriggers:windPowerCharged",{pokemonName:Z(E),moveName:S.name})))}};r(JK,"PostDefendApplyBattlerTagAbAttr");let gC=JK;const $K=class $K extends St{canApplyPostDefend(E,R,I,N,S,T,i){this.type=N.getMoveType(S);const o=E.getTypes(!0);return T<CA.NO_EFFECT&&(I||o.length!==1||o[0]!==this.type)}applyPostDefend(E,R,I,N,S,T,i){const o=N.getMoveType(S);E.summonData.types=[o]}getTriggerMessage(E,R,...I){return D.t("abilityTriggers:postDefendTypeChange",{pokemonNameWithAffix:Z(E),abilityName:R,typeName:D.t(`pokemonInfo:Type.${L[this.type]}`)})}};r($K,"PostDefendTypeChangeAbAttr");let w0=$K;const qK=class qK extends St{constructor(E){super(),this.terrainType=E}canApplyPostDefend(E,R,I,N,S,T,i){return T<CA.NO_EFFECT&&s.arena.canSetTerrain(this.terrainType)}applyPostDefend(E,R,I,N,S,T,i){I||s.arena.trySetTerrain(this.terrainType,!1,E)}};r(qK,"PostDefendTerrainChangeAbAttr");let V0=qK;const zK=class zK extends St{constructor(E,...R){super(!0),this.chance=E,this.effects=R}canApplyPostDefend(E,R,I,N,S,T,i){const o=this.effects.length===1?this.effects[0]:this.effects[E.randBattleSeedInt(this.effects.length)];return S.doesFlagEffectApply({flag:je.MAKES_CONTACT,user:N,target:E})&&!N.status&&(this.chance===-1||E.randBattleSeedInt(100)<this.chance)&&N.canSetStatus(o,!0,!1,E)}applyPostDefend(E,R,I,N,S,T,i){const o=this.effects.length===1?this.effects[0]:this.effects[E.randBattleSeedInt(this.effects.length)];N.trySetStatus(o,!0,E)}};r(zK,"PostDefendContactApplyStatusEffectAbAttr");let tS=zK;const jK=class jK extends tS{constructor(){super(10,J.POISON,J.PARALYSIS,J.SLEEP)}canApplyPostDefend(E,R,I,N,S,T,i){return!(N.hasAbility(O.OVERCOAT)||N.isOfType(L.GRASS))&&super.canApplyPostDefend(E,R,I,N,S,T,i)}applyPostDefend(E,R,I,N,S,T,i){super.applyPostDefend(E,R,I,N,S,T,i)}};r(jK,"EffectSporeAbAttr");let v0=jK;const eF=class eF extends St{constructor(E,R,I){super(),this.tagType=R,this.chance=E,this.turnCount=I}canApplyPostDefend(E,R,I,N,S,T,i){return S.doesFlagEffectApply({flag:je.MAKES_CONTACT,user:N,target:E})&&E.randBattleSeedInt(100)<this.chance&&N.canAddTag(this.tagType)}applyPostDefend(E,R,I,N,S,T,i){I||N.addTag(this.tagType,this.turnCount,S.id,N.id)}};r(eF,"PostDefendContactApplyTagChanceAbAttr");let x0=eF;const AF=class AF extends St{constructor(E,R){super(),this.stat=E,this.stages=R}applyPostDefend(E,R,I,N,S,T,i){I||s.unshiftPhase(new hA(E.getBattlerIndex(),!0,[this.stat],this.stages))}getCondition(){return E=>E.turnData.attacksReceived.length!==0&&E.turnData.attacksReceived[E.turnData.attacksReceived.length-1].critical}};r(AF,"PostDefendCritStatStageChangeAbAttr");let b0=AF;const EF=class EF extends St{constructor(E){super(),this.damageRatio=E}canApplyPostDefend(E,R,I,N,S,T,i){return!I&&S.doesFlagEffectApply({flag:je.MAKES_CONTACT,user:N,target:E})&&!N.hasAbilityWithAttr($E)}applyPostDefend(E,R,I,N,S,T,i){N.damageAndUpdate(uA(N.getMaxHp()*(1/this.damageRatio)),{result:CA.INDIRECT}),N.turnData.damageTaken+=uA(N.getMaxHp()*(1/this.damageRatio))}getTriggerMessage(E,R,...I){return D.t("abilityTriggers:postDefendContactDamage",{pokemonNameWithAffix:Z(E),abilityName:R})}};r(EF,"PostDefendContactDamageAbAttr");let pC=EF;const tF=class tF extends St{constructor(E){super(),this.turns=E}canApplyPostDefend(E,R,I,N,S,T,i){return S.doesFlagEffectApply({flag:je.MAKES_CONTACT,user:N,target:E})&&!N.getTag(Y.PERISH_SONG)}applyPostDefend(E,R,I,N,S,T,i){I||(N.addTag(Y.PERISH_SONG,this.turns),E.addTag(Y.PERISH_SONG,this.turns))}getTriggerMessage(E,R,...I){return D.t("abilityTriggers:perishBody",{pokemonName:Z(E),abilityName:R})}};r(tF,"PostDefendPerishSongAbAttr");let Z0=tF;const RF=class RF extends St{constructor(E,R){super(),this.weatherType=E,this.condition=R}canApplyPostDefend(E,R,I,N,S,T,i){var o;return!(this.condition&&!this.condition(E,N,S))&&!((o=s.arena.weather)!=null&&o.isImmutable())&&s.arena.canSetWeather(this.weatherType)}applyPostDefend(E,R,I,N,S,T,i){I||s.arena.trySetWeather(this.weatherType,E)}};r(RF,"PostDefendWeatherChangeAbAttr");let k0=RF;const OF=class OF extends St{constructor(){super()}canApplyPostDefend(E,R,I,N,S,T,i){return S.doesFlagEffectApply({flag:je.MAKES_CONTACT,user:N,target:E})&&N.getAbility().isSwappable}applyPostDefend(E,R,I,N,S,T,i){if(!I){const o=N.getAbility();N.setTempAbility(E.getAbility()),E.setTempAbility(o)}}getTriggerMessage(E,R,...I){return D.t("abilityTriggers:postDefendAbilitySwap",{pokemonNameWithAffix:Z(E)})}};r(OF,"PostDefendAbilitySwapAbAttr");let X0=OF;const LM=class LM extends St{constructor(E){super(),this.ability=E}canApplyPostDefend(E,R,I,N,S,T,i){return S.doesFlagEffectApply({flag:je.MAKES_CONTACT,user:N,target:E})&&N.getAbility().isSuppressable&&!N.getAbility().hasAttr(LM)}applyPostDefend(E,R,I,N,S,T,i){I||N.setTempAbility(qE[this.ability])}getTriggerMessage(E,R,...I){return D.t("abilityTriggers:postDefendAbilityGive",{pokemonNameWithAffix:Z(E),abilityName:R})}};r(LM,"PostDefendAbilityGiveAbAttr");let yC=LM;const IF=class IF extends St{constructor(E){super(),this.chance=E}canApplyPostDefend(E,R,I,N,S,T,i){return N.getTag(Y.DISABLED)===null&&S.doesFlagEffectApply({flag:je.MAKES_CONTACT,user:N,target:E})&&(this.chance===-1||E.randBattleSeedInt(100)<this.chance)}applyPostDefend(E,R,I,N,S,T,i){I||(this.attacker=N,this.move=S,this.attacker.addTag(Y.DISABLED,4,0,E.id))}};r(IF,"PostDefendMoveDisableAbAttr");let Q0=IF;const LF=class LF extends WC{constructor(E,R,I){super(!0),this.condition=E,this.statsToChange=R,this.stages=I}canApplyPostStatStageChange(E,R,I,N,S,T){return this.condition(E,I,N)&&!S}applyPostStatStageChange(E,R,I,N,S,T){R||s.unshiftPhase(new hA(E.getBattlerIndex(),!0,this.statsToChange,this.stages))}};r(LF,"PostStatStageChangeStatStageChangeAbAttr");let wC=LF;const NF=class NF extends Qe{canApplyPreAttack(E,R,I,N,S,T){return!0}applyPreAttack(E,R,I,N,S,T){}};r(NF,"PreAttackAbAttr");let JN=NF;const sF=class sF extends Qe{constructor(E){super(!1),this.chanceMultiplier=E}canApply(E,R,I,N){const S=[A.ORDER_UP,A.ELECTRO_SHOT];return!(N[0].value<=0||S.includes(N[1].id))}apply(E,R,I,N,S){S[0].value*=this.chanceMultiplier,S[0].value=Math.min(S[0].value,100)}};r(sF,"MoveEffectChanceMultiplierAbAttr");let za=sF;const SF=class SF extends eI{constructor(E=!1){super(E)}canApplyPreDefend(E,R,I,N,S,T,i){return i[0].value>0}applyPreDefend(E,R,I,N,S,T,i){i[0].value=0}};r(SF,"IgnoreMoveEffectsAbAttr");let vL=SF;const TF=class TF extends JN{canApplyPreAttack(E,R,I,N,S,T){return!0}};r(TF,"VariableMovePowerAbAttr");let ja=TF;const nF=class nF extends Qe{apply(E,R,I,N,S){N.value=!0}};r(nF,"FieldPreventExplosiveMovesAbAttr");let er=nF;const NM=class NM extends Qe{constructor(E,R,I=!1){super(!1),this.stat=E,this.multiplier=R,this.canStack=I}canApplyFieldStat(E,R,I,N,S,T,i,o){return this.canStack||!i.value&&this.stat===N&&T.getAbilityAttrs(NM).every(C=>C.stat!==N)}applyFieldStat(E,R,I,N,S,T,i,o){S.value*=this.multiplier,i.value=!0}};r(NM,"FieldMultiplyStatAbAttr");let oN=NM;const aF=class aF extends JN{constructor(E,R,I){super(!1),this.newType=E,this.powerMultiplier=R,this.condition=I}canApplyPreAttack(E,R,I,N,S,T){return(!this.condition||this.condition(E,N,S))&&!w9.has(S.id)&&(!E.isTerastallized||S.id!==A.TERA_BLAST&&(S.id!==A.TERA_STARSTORM||E.getTeraType()!==L.STELLAR||!E.hasSpecies(e.TERAPAGOS)))}applyPreAttack(E,R,I,N,S,T){T[0]&&T[0]instanceof me&&(T[0].value=this.newType),T[1]&&T[1]instanceof me&&(T[1].value*=this.powerMultiplier)}};r(aF,"MoveTypeChangeAbAttr");let TI=aF;const rF=class rF extends JN{constructor(){super(!0)}canApplyPreAttack(E,R,I,N,S,T){if(!E.isTerastallized&&S.id!==A.STRUGGLE&&!S.findAttr(i=>i instanceof hr||i instanceof tD||i instanceof RD||i instanceof vS)){const i=E.getMoveType(S);if(E.getTypes().some(o=>o!==i))return this.moveType=i,!0}return!1}applyPreAttack(E,R,I,N,S,T){const i=E.getMoveType(S);I||(this.moveType=i,E.summonData.types=[i],E.updateInfo())}getTriggerMessage(E,R,...I){return D.t("abilityTriggers:pokemonTypeChange",{pokemonNameWithAffix:Z(E),moveType:D.t(`pokemonInfo:Type.${L[this.moveType]}`)})}};r(rF,"PokemonTypeChangeAbAttr");let dN=rF;const iF=class iF extends JN{constructor(E){super(!1),this.damageMultiplier=E}canApplyPreAttack(E,R,I,N,S,T){return S.canBeMultiStrikeEnhanced(E,!0)}applyPreAttack(E,R,I,N,S,T){const i=T[0],o=T[1];i!=null&&i.value&&(i.value+=1),o!=null&&o.value&&E.turnData.hitsLeft===1&&(o.value=this.damageMultiplier)}};r(iF,"AddSecondStrikeAbAttr");let Ar=iF;const oF=class oF extends JN{constructor(E,R){super(!1),this.damageMultiplier=E,this.condition=R}canApplyPreAttack(E,R,I,N,S,T){return this.condition(E,N,S)}applyPreAttack(E,R,I,N,S,T){const i=T[0];i.value=uA(i.value*this.damageMultiplier)}};r(oF,"DamageBoostAbAttr");let VC=oF;const CF=class CF extends ja{constructor(E,R,I=!1){super(I),this.condition=E,this.powerMultiplier=R}canApplyPreAttack(E,R,I,N,S,T){return this.condition(E,N,S)}applyPreAttack(E,R,I,N,S,T){T[0].value*=this.powerMultiplier}};r(CF,"MovePowerBoostAbAttr");let ht=CF;const lF=class lF extends ht{constructor(E,R){super((I,N,S)=>(I==null?void 0:I.getMoveType(S))===E,R||1.5,!1)}};r(lF,"MoveTypePowerBoostAbAttr");let mO=lF;const UF=class UF extends mO{constructor(E){super(E)}getCondition(){return E=>E.getHpRatio()<=.33}};r(UF,"LowHpMoveTypePowerBoostAbAttr");let Vs=UF;const DF=class DF extends ja{constructor(E,R=!0){super(R),this.mult=E}canApplyPreAttack(E,R,I,N,S,T){return this.mult(E,N,S)!==1}applyPreAttack(E,R,I,N,S,T){const i=this.mult(E,N,S);T[0].value*=i}};r(DF,"VariableMovePowerBoostAbAttr");let J0=DF;const MF=class MF extends Qe{constructor(E,R){super(!1),this.condition=E,this.powerMultiplier=R}canApplyPreAttack(E,R,I,N,S,T){return!0}applyPreAttack(E,R,I,N,S,T){this.condition(E,N,S)&&(T[0].value*=this.powerMultiplier)}};r(MF,"FieldMovePowerBoostAbAttr");let vC=MF;const PF=class PF extends vC{constructor(E,R){super((I,N,S)=>(I==null?void 0:I.getMoveType(S))===E,R||1.5)}};r(PF,"PreAttackFieldMoveTypePowerBoostAbAttr");let xC=PF;const GF=class GF extends xC{};r(GF,"FieldMoveTypePowerBoostAbAttr");let CN=GF;const _F=class _F extends xC{};r(_F,"UserFieldMoveTypePowerBoostAbAttr");let bC=_F;const uF=class uF extends vC{constructor(E,R){super((I,N,S)=>E.includes(S.category),R)}};r(uF,"AllyMoveCategoryPowerBoostAbAttr");let Er=uF;const HF=class HF extends Qe{constructor(E,R,I){super(!1),this.stat=E,this.multiplier=R,this.condition=I??null}canApplyStatStage(E,R,I,N,S,T){const i=T[0];return N===this.stat&&(!this.condition||this.condition(E,null,i))}applyStatStage(E,R,I,N,S,T){S.value*=this.multiplier}};r(HF,"StatMultiplierAbAttr");let OE=HF;const cF=class cF extends Qe{constructor(E=(I,N,S)=>S.category!==u.STATUS,R=!0){super(R),this.attackCondition=E}canApplyPostAttack(E,R,I,N,S,T,i){return this.attackCondition(E,N,S)}applyPostAttack(E,R,I,N,S,T,i){}};r(cF,"PostAttackAbAttr");let xL=cF;const BF=class BF extends Qe{constructor(E,R,I=!0){super(!1),this.stat=E,this.multiplier=R,this.ignorable=I}applyAllyStat(E,R,I,N,S,T,i,o){S.value*=this.multiplier}canApplyAllyStat(E,R,I,N,S,T,i,o){return N===this.stat&&!(i&&this.ignorable)}};r(BF,"AllyStatMultiplierAbAttr");let dL=BF;const hF=class hF extends xL{constructor(){super((E,R,I)=>!0,!1)}canApplyPostAttack(E,R,I,N,S,T,i){return super.canApplyPostAttack(E,R,I,N,S,T,i)&&I||!E.getTag(Y.GORILLA_TACTICS)}applyPostAttack(E,R,I,N,S,T,i){I||E.addTag(Y.GORILLA_TACTICS)}};r(hF,"GorillaTacticsAbAttr");let $0=hF;const fF=class fF extends xL{constructor(E){super(),this.stealCondition=E??null}canApplyPostAttack(E,R,I,N,S,T,i){if(super.canApplyPostAttack(E,R,I,N,S,T,i)&&!I&&T<CA.NO_EFFECT&&(!this.stealCondition||this.stealCondition(E,N,S))){const o=this.getTargetHeldItems(N).filter(C=>C.isTransferable);if(o.length&&(this.stolenItem=o[E.randBattleSeedInt(o.length)],s.canTransferHeldItemModifier(this.stolenItem,E)))return!0}return this.stolenItem=void 0,!1}applyPostAttack(E,R,I,N,S,T,i){const o=this.getTargetHeldItems(N).filter(C=>C.isTransferable);this.stolenItem||(this.stolenItem=o[E.randBattleSeedInt(o.length)]),s.tryTransferHeldItemModifier(this.stolenItem,E,!1)&&s.queueMessage(D.t("abilityTriggers:postAttackStealHeldItem",{pokemonNameWithAffix:Z(E),defenderName:N.name,stolenItemType:this.stolenItem.type.name})),this.stolenItem=void 0}getTargetHeldItems(E){return s.findModifiers(R=>R instanceof DA&&R.pokemonId===E.id,E.isPlayer())}};r(fF,"PostAttackStealHeldItemAbAttr");let q0=fF;const dF=class dF extends xL{constructor(E,R,...I){super(),this.contactRequired=E,this.chance=R,this.effects=I}canApplyPostAttack(E,R,I,N,S,T,i){if(super.canApplyPostAttack(E,R,I,N,S,T,i)&&(I||!N.hasAbilityWithAttr(vL)&&E!==N&&(!this.contactRequired||S.doesFlagEffectApply({flag:je.MAKES_CONTACT,user:N,target:E}))&&E.randBattleSeedInt(100)<this.chance&&!E.status)){const o=this.effects.length===1?this.effects[0]:this.effects[E.randBattleSeedInt(this.effects.length)];return I||N.canSetStatus(o,!0,!1,E)}return!1}applyPostAttack(E,R,I,N,S,T,i){const o=this.effects.length===1?this.effects[0]:this.effects[E.randBattleSeedInt(this.effects.length)];N.trySetStatus(o,!0,E)}};r(dF,"PostAttackApplyStatusEffectAbAttr");let ZC=dF;const KF=class KF extends ZC{constructor(E,...R){super(!0,E,...R)}};r(KF,"PostAttackContactApplyStatusEffectAbAttr");let z0=KF;const FF=class FF extends xL{constructor(E,R,...I){super(void 0,!1),this.contactRequired=E,this.chance=R,this.effects=I}canApplyPostAttack(E,R,I,N,S,T,i){return super.canApplyPostAttack(E,R,I,N,S,T,i)&&!N.hasAbilityWithAttr(vL)&&E!==N&&(!this.contactRequired||S.doesFlagEffectApply({flag:je.MAKES_CONTACT,user:N,target:E}))&&E.randBattleSeedInt(100)<this.chance(N,E,S)&&!E.status}applyPostAttack(E,R,I,N,S,T,i){if(!I){const o=this.effects.length===1?this.effects[0]:this.effects[E.randBattleSeedInt(this.effects.length)];N.addTag(o)}}};r(FF,"PostAttackApplyBattlerTagAbAttr");let j0=FF;const YF=class YF extends St{constructor(E){super(),this.condition=E}canApplyPostDefend(E,R,I,N,S,T,i){if(!I&&T<CA.NO_EFFECT&&(!this.condition||this.condition(E,N,S))){const o=this.getTargetHeldItems(N).filter(C=>C.isTransferable);if(o.length&&(this.stolenItem=o[E.randBattleSeedInt(o.length)],s.canTransferHeldItemModifier(this.stolenItem,E)))return!0}return!1}applyPostDefend(E,R,I,N,S,T,i){const o=this.getTargetHeldItems(N).filter(C=>C.isTransferable);this.stolenItem||(this.stolenItem=o[E.randBattleSeedInt(o.length)]),s.tryTransferHeldItemModifier(this.stolenItem,E,!1)&&s.queueMessage(D.t("abilityTriggers:postDefendStealHeldItem",{pokemonNameWithAffix:Z(E),attackerName:N.name,stolenItemType:this.stolenItem.type.name})),this.stolenItem=void 0}getTargetHeldItems(E){return s.findModifiers(R=>R instanceof DA&&R.pokemonId===E.id,E.isPlayer())}};r(YF,"PostDefendStealHeldItemAbAttr");let e_=YF;const WF=class WF extends Qe{canApplyPostSetStatus(E,R=null,I,N,S,T){return!0}applyPostSetStatus(E,R=null,I,N,S,T){}};r(WF,"PostSetStatusAbAttr");let kC=WF;const mF=class mF extends kC{canApplyPostSetStatus(E,R,I,N,S,T){const i=new Set([J.BURN,J.PARALYSIS,J.POISON,J.TOXIC]);return(R??!1)&&i.has(N)}applyPostSetStatus(E,R=null,I,N,S,T){!S&&R&&R.trySetStatus(N,!0,E)}};r(mF,"SynchronizeStatusAbAttr");let A_=mF;const gF=class gF extends Qe{canApplyPostVictory(E,R,I,N){return!0}applyPostVictory(E,R,I,N){}};r(gF,"PostVictoryAbAttr");let tr=gF;const pF=class pF extends tr{constructor(E,R){super(),this.stat=E,this.stages=R}applyPostVictory(E,R,I,N){const S=typeof this.stat=="function"?this.stat(E):this.stat;I||s.unshiftPhase(new hA(E.getBattlerIndex(),!0,[S],this.stages))}};r(pF,"PostVictoryStatStageChangeAbAttr");let SL=pF;const yF=class yF extends tr{constructor(E){super(!0),this.formFunc=E}canApplyPostVictory(E,R,I,N){return this.formFunc(E)!==E.formIndex}applyPostVictory(E,R,I,N){I||s.triggerPokemonFormChange(E,cA,!1)}};r(yF,"PostVictoryFormChangeAbAttr");let E_=yF;const wF=class wF extends Qe{canApplyPostKnockOut(E,R,I,N,S){return!0}applyPostKnockOut(E,R,I,N,S){}};r(wF,"PostKnockOutAbAttr");let Rr=wF;const VF=class VF extends Rr{constructor(E,R){super(),this.stat=E,this.stages=R}applyPostKnockOut(E,R,I,N,S){const T=typeof this.stat=="function"?this.stat(E):this.stat;I||s.unshiftPhase(new hA(E.getBattlerIndex(),!0,[T],this.stages))}};r(VF,"PostKnockOutStatStageChangeAbAttr");let t_=VF;const vF=class vF extends Rr{constructor(){super()}canApplyPostKnockOut(E,R,I,N,S){return E.isPlayer()===N.isPlayer()&&N.getAbility().isCopiable}applyPostKnockOut(E,R,I,N,S){I||(E.setTempAbility(N.getAbility()),s.queueMessage(D.t("abilityTriggers:copyFaintedAllyAbility",{pokemonNameWithAffix:Z(N),abilityName:qE[N.getAbility().id].name})))}};r(vF,"CopyFaintedAllyAbilityAbAttr");let XC=vF;const xF=class xF extends Qe{constructor(E){super(!1),this.stats=E??cO}canApply(E,R,I,N){return this.stats.includes(N[0])}apply(E,R,I,N,S){S[1].value=!0}};r(xF,"IgnoreOpponentStatStagesAbAttr");let KL=xF;const bF=class bF extends Qe{constructor(){super(!1)}apply(E,R,I,N,S){N.value=!0}getTriggerMessage(E,R,...I){return D.t("abilityTriggers:intimidateImmunity",{pokemonNameWithAffix:Z(E),abilityName:R})}};r(bF,"IntimidateImmunityAbAttr");let lN=bF;const ZF=class ZF extends Qe{constructor(E,R,I){super(!0),this.stats=E,this.stages=R,this.overwrites=!!I}apply(E,R,I,N,S){I||s.pushPhase(new hA(E.getBattlerIndex(),!1,this.stats,this.stages)),N.value=this.overwrites}};r(ZF,"PostIntimidateStatStageChangeAbAttr");let Or=ZF;const kF=class kF extends Qe{constructor(E=!0,R=!0){super(E),this.activateOnGain=R}shouldActivateOnGain(){return this.activateOnGain}canApplyPostSummon(E,R,I,N){return!0}applyPostSummon(E,R,I,N){}};r(kF,"PostSummonAbAttr");let wE=kF;const XF=class XF extends wE{};r(XF,"PostSummonRemoveEffectAbAttr");let Ir=XF;const QF=class QF extends wE{constructor(E){super(!0),this.arenaTags=E}canApplyPostSummon(E,R,I,N){return s.arena.tags.some(S=>this.arenaTags.includes(S.tagType))}applyPostSummon(E,R,I,N){if(!I)for(const S of this.arenaTags)s.arena.removeTag(S)}};r(QF,"PostSummonRemoveArenaTagAbAttr");let R_=QF;const JF=class JF extends wE{constructor(E,R,I,N,S){super(E),this.tagType=R,this.turnCount=I,this.side=N,this.quiet=S}applyPostSummon(E,R,I,N){this.sourceId=E.id,I||s.arena.addTag(this.tagType,this.turnCount,void 0,this.sourceId,this.side,this.quiet)}};r(JF,"PostSummonAddArenaTagAbAttr");let O_=JF;const $F=class $F extends wE{constructor(E){super(!0),this.messageFunc=E}applyPostSummon(E,R,I,N){I||s.queueMessage(this.messageFunc(E))}};r($F,"PostSummonMessageAbAttr");let nR=$F;const qF=class qF extends wE{constructor(E){super(!0),this.message=E}applyPostSummon(E,R,I,N){I||s.queueMessage(this.message)}};r(qF,"PostSummonUnnamedMessageAbAttr");let QC=qF;const zF=class zF extends wE{constructor(E,R,I){super(I),this.tagType=E,this.turnCount=R}canApplyPostSummon(E,R,I,N){return E.canAddTag(this.tagType)}applyPostSummon(E,R,I,N){I||E.addTag(this.tagType,this.turnCount)}};r(zF,"PostSummonAddBattlerTagAbAttr");let dI=zF;const jF=class jF extends Ir{constructor(...E){super(),this.immuneTags=E}canApplyPostSummon(E,R,I,N){return this.immuneTags.some(S=>!!E.getTag(S))}applyPostSummon(E,R,I,N){this.immuneTags.forEach(S=>E.removeTag(S))}};r(jF,"PostSummonRemoveBattlerTagAbAttr");let JC=jF;const eY=class eY extends wE{constructor(E,R,I,N){super(!0),this.stats=E,this.stages=R,this.selfTarget=!!I,this.intimidate=!!N}applyPostSummon(E,R,I,N){if(!I)if(this.selfTarget)s.unshiftPhase(new hA(E.getBattlerIndex(),!0,this.stats,this.stages));else for(const S of E.getOpponents()){const T=new SA(!1);this.intimidate&&(sA(lN,S,T,I),sA(Or,S,T,I),S.getTag(Y.SUBSTITUTE)&&(T.value=!0)),T.value||s.unshiftPhase(new hA(S.getBattlerIndex(),!1,this.stats,this.stages))}}};r(eY,"PostSummonStatStageChangeAbAttr");let UN=eY;const AY=class AY extends wE{constructor(E,R=!1){super(),this.healRatio=E||4,this.showAnim=R}canApplyPostSummon(E,R,I,N){var S;return((S=E.getAlly())==null?void 0:S.isActive(!0))??!1}applyPostSummon(E,R,I,N){const S=E.getAlly();!I&&!Ne(S)&&s.unshiftPhase(new Dt(S.getBattlerIndex(),uA(E.getMaxHp()/this.healRatio),D.t("abilityTriggers:postSummonAllyHeal",{pokemonNameWithAffix:Z(S),pokemonName:E.name}),!0,!this.showAnim))}};r(AY,"PostSummonAllyHealAbAttr");let I_=AY;const EY=class EY extends wE{constructor(){super()}canApplyPostSummon(E,R,I,N){var S;return((S=E.getAlly())==null?void 0:S.isActive(!0))??!1}applyPostSummon(E,R,I,N){const S=E.getAlly();if(!I&&!Ne(S)){for(const T of cO)S.setStatStage(T,0);s.queueMessage(D.t("abilityTriggers:postSummonClearAllyStats",{pokemonNameWithAffix:Z(S)}))}}};r(EY,"PostSummonClearAllyStatStagesAbAttr");let L_=EY;const tY=class tY extends wE{canApplyPostSummon(E,R,I,N){this.enemyDef=0,this.enemySpDef=0,this.enemyCountTally=0;for(const S of E.getOpponents())this.enemyCountTally++,this.enemyDef+=S.getEffectiveStat(h.DEF),this.enemySpDef+=S.getEffectiveStat(h.SPDEF);return this.enemyDef=Math.round(this.enemyDef/this.enemyCountTally),this.enemySpDef=Math.round(this.enemySpDef/this.enemyCountTally),this.enemyDef>0&&this.enemySpDef>0}applyPostSummon(E,R,I,N){this.enemyDef<this.enemySpDef?this.stats=[h.ATK]:this.stats=[h.SPATK],I||s.unshiftPhase(new hA(E.getBattlerIndex(),!1,this.stats,1))}};r(tY,"DownloadAbAttr");let N_=tY;const RY=class RY extends wE{constructor(E){super(),this.weatherType=E}canApplyPostSummon(E,R,I,N){var T;return(this.weatherType===X.HEAVY_RAIN||this.weatherType===X.HARSH_SUN||this.weatherType===X.STRONG_WINDS||!((T=s.arena.weather)!=null&&T.isImmutable()))&&s.arena.canSetWeather(this.weatherType)}applyPostSummon(E,R,I,N){I||s.arena.trySetWeather(this.weatherType,E)}};r(RY,"PostSummonWeatherChangeAbAttr");let OI=RY;const OY=class OY extends wE{constructor(E){super(),this.terrainType=E}canApplyPostSummon(E,R,I,N){return s.arena.canSetTerrain(this.terrainType)}applyPostSummon(E,R,I,N){I||s.arena.trySetTerrain(this.terrainType,!1,E)}};r(OY,"PostSummonTerrainChangeAbAttr");let LN=OY;const IY=class IY extends Ir{constructor(...E){super(),this.immuneEffects=E}canApplyPostSummon(E,R,I,N){var T;const S=(T=E.status)==null?void 0:T.effect;return!Ne(S)&&(this.immuneEffects.length<1||this.immuneEffects.includes(S))}applyPostSummon(E,R,I,N){var T;const S=(T=E.status)==null?void 0:T.effect;Ne(S)||(this.statusHealed=S,E.resetStatus(!1),E.updateInfo())}getTriggerMessage(E,R,...I){return this.statusHealed?qI(this.statusHealed,Z(E)):null}};r(IY,"PostSummonHealStatusAbAttr");let II=IY;const LY=class LY extends wE{constructor(E){super(!0),this.formFunc=E}canApplyPostSummon(E,R,I,N){return this.formFunc(E)!==E.formIndex}applyPostSummon(E,R,I,N){I||s.triggerPokemonFormChange(E,cA,!1)}};r(LY,"PostSummonFormChangeAbAttr");let TL=LY;const NY=class NY extends wE{canApplyPostSummon(E,R,I,N){const S=E.getOpponents();if(!S.length)return!1;let T;return S.length>1?s.executeWithSeedOffset(()=>T=SE(S),s.currentBattle.waveIndex):T=S[0],!T.getAbility().isCopiable&&!(E.hasAbility(O.TRACE)&&T.getAbility().id===O.WONDER_GUARD)?!1:(this.target=T,this.targetAbilityName=qE[T.getAbility().id].name,!0)}applyPostSummon(E,R,I,N){I||(E.setTempAbility(this.target.getAbility()),i6(this.target),E.updateInfo())}getTriggerMessage(E,R,...I){return D.t("abilityTriggers:trace",{pokemonName:Z(E),targetName:Z(this.target),abilityName:this.targetAbilityName})}};r(NY,"PostSummonCopyAbilityAbAttr");let s_=NY;const sY=class sY extends wE{constructor(...E){super(!1),this.statusEffect=E}canApplyPostSummon(E,R,I,N){return(E instanceof Rt?s.getPlayerField():s.getEnemyField()).filter(T=>T.isAllowedInBattle()).length>0}applyPostSummon(E,R,I,N){const T=(E instanceof Rt?s.getPlayerField():s.getEnemyField()).filter(i=>i.isAllowedInBattle());if(!I)for(const i of T)i.status&&this.statusEffect.includes(i.status.effect)&&(s.queueMessage(qI(i.status.effect,Z(i))),i.resetStatus(!1),i.updateInfo())}};r(sY,"PostSummonUserFieldRemoveStatusEffectAbAttr");let $C=sY;const SY=class SY extends wE{canApplyPostSummon(E,R,I,N){if(!s.currentBattle.double)return!1;const S=E.getAlly();return!(Ne(S)||S.getStatStages().every(T=>T===0))}applyPostSummon(E,R,I,N){const S=E.getAlly();if(!I&&!Ne(S)){for(const T of cO)E.setStatStage(T,S.getStatStage(T));E.updateInfo()}}getTriggerMessage(E,R,...I){return D.t("abilityTriggers:costar",{pokemonName:Z(E),allyName:Z(E.getAlly())})}};r(SY,"PostSummonCopyAllyStatsAbAttr");let S_=SY;const TY=class TY extends wE{constructor(){super(!0,!1)}getTarget(E){let R=E[0];return E.length>1?s.executeWithSeedOffset(()=>{if(E[0].fusionSpecies){R=E[1];return}else if(E[1].fusionSpecies){R=E[0];return}R=SE(E)},s.currentBattle.waveIndex):R=E[0],R=R,R}canApplyPostSummon(E,R,I,N){const S=E.getOpponents();return this.getTarget(S).summonData.illusion?!1:I||!S.length?I:!(this.getTarget(S).fusionSpecies||E.fusionSpecies)}applyPostSummon(E,R,I,N){const S=this.getTarget(E.getOpponents());s.unshiftPhase(new BC(E.getBattlerIndex(),S.getBattlerIndex(),!0))}};r(TY,"PostSummonTransformAbAttr");let T_=TY;const nY=class nY extends wE{canApplyPostSummon(E,R,I,N){return o6().length>0}applyPostSummon(E,R,I,N){I||s.arena.triggerWeatherBasedFormChangesToNormal()}};r(nY,"PostSummonWeatherSuppressedFormChangeAbAttr");let qC=nY;const aY=class aY extends wE{constructor(E){super(!0),this.ability=E}canApplyPostSummon(E,R,I,N){const S=E.species.speciesId===e.CASTFORM&&this.ability===O.FORECAST,T=E.species.speciesId===e.CHERRIM&&this.ability===O.FLOWER_GIFT;return S||T}applyPostSummon(E,R,I,N){I||(s.triggerPokemonFormChange(E,ZR),s.triggerPokemonFormChange(E,CI))}};r(aY,"PostSummonFormChangeByWeatherAbAttr");let zC=aY;const rY=class rY extends Qe{constructor(){super(!0)}canApply(E,R,I,N){var T;const S=E.getAlly();return((T=s.currentBattle)==null?void 0:T.double)&&!Ne(S)&&S.species.speciesId===e.DONDOZO&&!(S.isFainted()||S.getTag(Y.COMMANDED))}apply(E,R,I,N,S){var T;I||(E.lapseTags(Yt.MOVE_EFFECT),s.triggerPokemonBattleAnim(E,cL.COMMANDER_APPLY),(T=E.getAlly())==null||T.addTag(Y.COMMANDED,0,A.NONE,E.id),s.tryRemovePhase(i=>i instanceof lE&&i.pokemon===E))}};r(rY,"CommanderAbAttr");let HS=rY;const iY=class iY extends Qe{constructor(E=!0){super(E)}canApplyPreSwitchOut(E,R,I,N){return!0}applyPreSwitchOut(E,R,I,N){}};r(iY,"PreSwitchOutAbAttr");let cS=iY;const oY=class oY extends cS{constructor(){super(!1)}canApplyPreSwitchOut(E,R,I,N){return!Ne(E.status)}applyPreSwitchOut(E,R,I,N){I||(E.resetStatus(),E.updateInfo())}};r(oY,"PreSwitchOutResetStatusAbAttr");let n_=oY;const CY=class CY extends cS{canApplyPreSwitchOut(E,R,I,N){return!E.isFullHp()}applyPreSwitchOut(E,R,I,N){if(!I){const S=uA(E.getMaxHp()*.33);E.heal(S),E.updateInfo()}}};r(CY,"PreSwitchOutHealAbAttr");let a_=CY;const lY=class lY extends cS{constructor(E){super(),this.formFunc=E}canApplyPreSwitchOut(E,R,I,N){return this.formFunc(E)!==E.formIndex}applyPreSwitchOut(E,R,I,N){I||s.triggerPokemonFormChange(E,cA,!1)}};r(lY,"PreSwitchOutFormChangeAbAttr");let r_=lY;const UY=class UY extends Qe{canApplyPreLeaveField(E,R,I,N){return!0}applyPreLeaveField(E,R,I,N){}};r(UY,"PreLeaveFieldAbAttr");let BS=UY;const DY=class DY extends BS{canApplyPreLeaveField(E,R,I,N){var T;switch((T=s.arena.weather)==null?void 0:T.weatherType){case X.HARSH_SUN:if(E.hasAbility(O.DESOLATE_LAND)&&s.getField(!0).filter(i=>i!==E).filter(i=>i.hasAbility(O.DESOLATE_LAND)).length===0)return!0;break;case X.HEAVY_RAIN:if(E.hasAbility(O.PRIMORDIAL_SEA)&&s.getField(!0).filter(i=>i!==E).filter(i=>i.hasAbility(O.PRIMORDIAL_SEA)).length===0)return!0;break;case X.STRONG_WINDS:if(E.hasAbility(O.DELTA_STREAM)&&s.getField(!0).filter(i=>i!==E).filter(i=>i.hasAbility(O.DELTA_STREAM)).length===0)return!0;break}return!1}applyPreLeaveField(E,R,I,N){I||s.arena.trySetWeather(X.NONE)}};r(DY,"PreLeaveFieldClearWeatherAbAttr");let gT=DY;const MY=class MY extends BS{constructor(){super(!1)}canApplyPreLeaveField(E,R,I,N){return!!s.arena.getTag(oe.NEUTRALIZING_GAS)}applyPreLeaveField(E,R,I,N){s.arena.getTag(oe.NEUTRALIZING_GAS).onSourceLeave(s.arena)}};r(MY,"PreLeaveFieldRemoveSuppressAbilitiesSourceAbAttr");let FL=MY;const PY=class PY extends Qe{canApplyPreStatStageChange(E,R,I,N,S,T){return!0}applyPreStatStageChange(E,R,I,N,S,T){}};r(PY,"PreStatStageChangeAbAttr");let Lr=PY;const GY=class GY extends Lr{applyPreStatStageChange(E,R,I,N,S,T){const i=T[0],o=T[1];this.reflectedStat=N,I||s.unshiftPhase(new hA(i.getBattlerIndex(),!1,[N],o,!0,!1,!0,null,!0)),S.value=!0}getTriggerMessage(E,R,...I){return D.t("abilityTriggers:protectStat",{pokemonNameWithAffix:Z(E),abilityName:R,statName:this.reflectedStat?D.t(et(this.reflectedStat)):D.t("battle:stats")})}};r(GY,"ReflectStatStageChangeAbAttr");let jC=GY;const _Y=class _Y extends Lr{constructor(E){super(),this.protectedStat=E}canApplyPreStatStageChange(E,R,I,N,S,T){return Ne(this.protectedStat)||N===this.protectedStat}applyPreStatStageChange(E,R,I,N,S,T){S.value=!0}getTriggerMessage(E,R,...I){return D.t("abilityTriggers:protectStat",{pokemonNameWithAffix:Z(E),abilityName:R,statName:this.protectedStat?D.t(et(this.protectedStat)):D.t("battle:stats")})}};r(_Y,"ProtectStatAbAttr");let sO=_Y;const uY=class uY extends xL{constructor(...E){super((R,I,N)=>!0),this.effects=E}canApplyPostAttack(E,R,I,N,S,T,i){return super.canApplyPostAttack(E,R,I,N,S,T,i)&&this.effects.indexOf(i[0])>-1&&!N.isFainted()&&N.canAddTag(Y.CONFUSED)}applyPostAttack(E,R,I,N,S,T,i){I||N.addTag(Y.CONFUSED,E.randBattleSeedIntRange(2,5),S.id,N.id)}};r(uY,"ConfusionOnStatusEffectAbAttr");let el=uY;const HY=class HY extends Qe{canApplyPreSetStatus(E,R,I,N,S,T){return!0}applyPreSetStatus(E,R,I,N,S,T){}};r(HY,"PreSetStatusAbAttr");let i_=HY;const cY=class cY extends i_{constructor(...E){super(),this.immuneEffects=E}canApplyPreSetStatus(E,R,I,N,S,T){return N!==J.FAINT&&this.immuneEffects.length<1||this.immuneEffects.includes(N)}applyPreSetStatus(E,R,I,N,S,T){S.value=!0,this.lastEffect=N}getTriggerMessage(E,R,...I){return this.immuneEffects.length?D.t("abilityTriggers:statusEffectImmunityWithName",{pokemonNameWithAffix:Z(E),abilityName:R,statusEffectName:_v(this.lastEffect)}):D.t("abilityTriggers:statusEffectImmunity",{pokemonNameWithAffix:Z(E),abilityName:R})}};r(cY,"PreSetStatusEffectImmunityAbAttr");let Al=cY;const BY=class BY extends Al{};r(BY,"StatusEffectImmunityAbAttr");let dR=BY;const hY=class hY extends Al{};r(hY,"UserFieldStatusEffectImmunityAbAttr");let hS=hY;const fY=class fY extends hS{canApplyPreSetStatus(E,R,I,N,S,T){return(!S.value&&N!==J.FAINT&&this.immuneEffects.length<1||this.immuneEffects.includes(N))&&this.condition(T[0],T[1])}constructor(E,...R){super(...R),this.condition=E}};r(fY,"ConditionalUserFieldStatusEffectImmunityAbAttr");let o_=fY;const dY=class dY extends Lr{constructor(E,R){super(),this.condition=E}canApplyPreStatStageChange(E,R,I,N,S,T){const i=T[0];return i?!S.value&&(Ne(this.protectedStat)||N===this.protectedStat)&&this.condition(i):!1}applyPreStatStageChange(E,R,I,N,S,T){S.value=!0}};r(dY,"ConditionalUserFieldProtectStatAbAttr");let fS=dY;const KY=class KY extends Qe{canApplyPreApplyBattlerTag(E,R,I,N,S,T){return!0}applyPreApplyBattlerTag(E,R,I,N,S,T){}};r(KY,"PreApplyBattlerTagAbAttr");let C_=KY;const FY=class FY extends C_{constructor(E){super(!0),this.immuneTagTypes=Array.isArray(E)?E:[E]}canApplyPreApplyBattlerTag(E,R,I,N,S,T){return this.battlerTag=N,!S.value&&this.immuneTagTypes.includes(N.tagType)}applyPreApplyBattlerTag(E,R,I,N,S,T){S.value=!0}getTriggerMessage(E,R,...I){return D.t("abilityTriggers:battlerTagImmunity",{pokemonNameWithAffix:Z(E),abilityName:R,battlerTagName:this.battlerTag.getDescriptor()})}};r(FY,"PreApplyBattlerTagImmunityAbAttr");let El=FY;const YY=class YY extends El{};r(YY,"BattlerTagImmunityAbAttr");let wO=YY;const WY=class WY extends El{};r(WY,"UserFieldBattlerTagImmunityAbAttr");let $N=WY;const mY=class mY extends $N{canApplyPreApplyBattlerTag(E,R,I,N,S,T){return super.canApplyPreApplyBattlerTag(E,R,I,N,S,T)&&this.condition(T[0])}constructor(E,R){super(R),this.condition=E}};r(mY,"ConditionalUserFieldBattlerTagImmunityAbAttr");let l_=mY;const gY=class gY extends Qe{constructor(){super(!1)}apply(E,R,I,N,S){S[0].value=!1}};r(gY,"BlockCritAbAttr");let Nr=gY;const pY=class pY extends Qe{constructor(){super(!1)}apply(E,R,I,N,S){S[0].value+=1}};r(pY,"BonusCritAbAttr");let tl=pY;const yY=class yY extends Qe{constructor(E){super(!1),this.multAmount=E}canApply(E,R,I,N){return N[0].value>1}apply(E,R,I,N,S){const T=S[0];T.value*=this.multAmount}};r(yY,"MultCritAbAttr");let Rl=yY;const wY=class wY extends Qe{constructor(E,R){super(!1),this.condition=E}canApply(E,R,I,N){const S=N[1],T=N[2];return this.condition(E,S,T)}apply(E,R,I,N,S){S[0].value=!0}};r(wY,"ConditionalCritAbAttr");let Ol=wY;const VY=class VY extends Qe{constructor(){super(!1)}apply(E,R,I,N,S){N.value=!0}};r(VY,"BlockNonDirectDamageAbAttr");let $E=VY;const vY=class vY extends Qe{constructor(...E){super(!1),this.effects=E}canApply(E,R,I,N){return!!(E.status&&this.effects.includes(E.status.effect))}apply(E,R,I,N,S){N.value=!0}};r(vY,"BlockStatusDamageAbAttr");let Il=vY;const xY=class xY extends Qe{apply(E,R,I,N,S){N.value=!0}};r(xY,"BlockOneHitKOAbAttr");let Ll=xY;const bY=class bY extends Qe{constructor(E,R){super(!1),this.moveFunc=E,this.changeAmount=R}canApply(E,R,I,N){return this.moveFunc(E,N[0])}apply(E,R,I,N,S){S[1].value+=this.changeAmount}};r(bY,"ChangeMovePriorityAbAttr");let lL=bY;const ZY=class ZY extends Qe{};r(ZY,"IgnoreContactAbAttr");let Nl=ZY;const kY=class kY extends Qe{canApplyPreWeatherEffect(E,R,I,N,S,T){return!0}applyPreWeatherEffect(E,R,I,N,S,T){}};r(kY,"PreWeatherEffectAbAttr");let sl=kY;const XY=class XY extends sl{};r(XY,"PreWeatherDamageAbAttr");let U_=XY;const QY=class QY extends U_{constructor(...E){super(!1),this.weatherTypes=E}canApplyPreWeatherEffect(E,R,I,N,S,T){return!this.weatherTypes.length||this.weatherTypes.indexOf(N==null?void 0:N.weatherType)>-1}applyPreWeatherEffect(E,R,I,N,S,T){S.value=!0}};r(QY,"BlockWeatherDamageAttr");let nL=QY;const JY=class JY extends sl{constructor(E){super(!0),this.affectsImmutable=!!E}canApplyPreWeatherEffect(E,R,I,N,S,T){return this.affectsImmutable||N.isImmutable()}applyPreWeatherEffect(E,R,I,N,S,T){S.value=!0}};r(JY,"SuppressWeatherEffectAbAttr");let dS=JY;function Hi(){return t=>{const E=t.turnData.attacksReceived[0];if(!E)return!0;const R=t.getOpponents().find(N=>N.id===E.sourceId);return R?!(Ke[E.move].chance>=0&&R.hasAbility(O.SHEER_FORCE)):!0}}r(Hi,"getSheerForceHitDisableAbCondition");function Bt(...t){return()=>{var R,I,N;if(!((R=s)!=null&&R.arena)||(I=s.arena.weather)!=null&&I.isEffectSuppressed())return!1;const E=(N=s.arena.weather)==null?void 0:N.weatherType;return!!E&&t.indexOf(E)>-1}}r(Bt,"getWeatherCondition");function V9(){return t=>{for(const E of t.getOpponents())for(const R of E.moveset)if(R){if(R.getMove()instanceof B&&t.getAttackTypeEffectiveness(R.getMove().type,E,!0,void 0,R.getMove())>=2||R.getMove().hasAttr(kO))return!0;if(R.getMove().id===A.HIDDEN_POWER){const I=Math.floor(((E.ivs[h.HP]&1)+(E.ivs[h.ATK]&1)*2+(E.ivs[h.DEF]&1)*4+(E.ivs[h.SPD]&1)*8+(E.ivs[h.SPATK]&1)*16+(E.ivs[h.SPDEF]&1)*32)*15/63),N=[L.FIGHTING,L.FLYING,L.POISON,L.GROUND,L.ROCK,L.BUG,L.GHOST,L.STEEL,L.FIRE,L.WATER,L.GRASS,L.ELECTRIC,L.PSYCHIC,L.ICE,L.DRAGON,L.DARK][I];if(t.getAttackTypeEffectiveness(N,E)>=2)return!0}}return!1}}r(V9,"getAnticipationCondition");function Ev(t){return E=>!E.waveData.abilitiesApplied.has(t)}r(Ev,"getOncePerBattleCondition");const $Y=class $Y extends wE{constructor(){super(!0)}applyPostSummon(E,R,I,N){let S=0,T="",i=0;for(const o of E.getOpponents())for(const C of o.moveset)(C==null?void 0:C.getMove())instanceof ne?i=1:C!=null&&C.getMove().hasAttr(kO)?i=150:(C==null?void 0:C.getMove().id)===A.COUNTER||(C==null?void 0:C.getMove().id)===A.MIRROR_COAT||(C==null?void 0:C.getMove().id)===A.METAL_BURST?i=120:(C==null?void 0:C.getMove().power)===-1?i=80:i=(C==null?void 0:C.getMove().power)??0,i>S&&(S=i,T=(C==null?void 0:C.getName())??"");I||s.queueMessage(D.t("abilityTriggers:forewarn",{pokemonNameWithAffix:Z(E),moveName:T}))}};r($Y,"ForewarnAbAttr");let D_=$Y;const qY=class qY extends wE{constructor(){super(!0)}applyPostSummon(E,R,I,N){if(!I)for(const S of E.getOpponents())s.queueMessage(D.t("abilityTriggers:frisk",{pokemonNameWithAffix:Z(E),opponentName:S.name,opponentAbilityName:S.getAbility().name})),i6(S)}};r(qY,"FriskAbAttr");let M_=qY;const zY=class zY extends Qe{canApplyPostWeatherChange(E,R,I,N,S){return!0}applyPostWeatherChange(E,R,I,N,S){}};r(zY,"PostWeatherChangeAbAttr");let sr=zY;const jY=class jY extends sr{constructor(E,R){super(!1),this.ability=E,this.formRevertingWeathers=R}canApplyPostWeatherChange(E,R,I,N,S){const T=E.species.speciesId===e.CASTFORM&&this.ability===O.FORECAST,i=E.species.speciesId===e.CHERRIM&&this.ability===O.FLOWER_GIFT;return T||i}applyPostWeatherChange(E,R,I,N,S){var i;if(I)return;const T=(i=s.arena.weather)==null?void 0:i.weatherType;T&&this.formRevertingWeathers.includes(T)?s.arena.triggerWeatherBasedFormChangesToNormal():s.arena.triggerWeatherBasedFormChanges()}};r(jY,"PostWeatherChangeFormChangeAbAttr");let Sl=jY;const eW=class eW extends sr{constructor(E,R,...I){super(),this.tagType=E,this.turnCount=R,this.weatherTypes=I}canApplyPostWeatherChange(E,R,I,N,S){return!!this.weatherTypes.find(T=>N===T)&&E.canAddTag(this.tagType)}applyPostWeatherChange(E,R,I,N,S){I||E.addTag(this.tagType,this.turnCount)}};r(eW,"PostWeatherChangeAddBattlerTagAttr");let Tl=eW;const AW=class AW extends Qe{constructor(...E){super(),this.weatherTypes=E}canApplyPostWeatherLapse(E,R,I,N,S){return!0}applyPostWeatherLapse(E,R,I,N,S){}getCondition(){return Bt(...this.weatherTypes)}};r(AW,"PostWeatherLapseAbAttr");let nl=AW;const EW=class EW extends nl{constructor(E,...R){super(...R),this.healFactor=E}canApplyPostWeatherLapse(E,R,I,N,S){return!E.isFullHp()}applyPostWeatherLapse(E,R,I,N,S){const T=(R?E.getPassiveAbility():E.getAbility()).name;I||s.unshiftPhase(new Dt(E.getBattlerIndex(),uA(E.getMaxHp()/(16/this.healFactor)),D.t("abilityTriggers:postWeatherLapseHeal",{pokemonNameWithAffix:Z(E),abilityName:T}),!0))}};r(EW,"PostWeatherLapseHealAbAttr");let pT=EW;const tW=class tW extends nl{constructor(E,...R){super(...R),this.damageFactor=E}canApplyPostWeatherLapse(E,R,I,N,S){return!E.hasAbilityWithAttr($E)}applyPostWeatherLapse(E,R,I,N,S){if(!I){const T=(R?E.getPassiveAbility():E.getAbility()).name;s.queueMessage(D.t("abilityTriggers:postWeatherLapseDamage",{pokemonNameWithAffix:Z(E),abilityName:T})),E.damageAndUpdate(uA(E.getMaxHp()/(16/this.damageFactor)),{result:CA.INDIRECT})}}};r(tW,"PostWeatherLapseDamageAbAttr");let al=tW;const RW=class RW extends Qe{canApplyPostTerrainChange(E,R,I,N,S){return!0}applyPostTerrainChange(E,R,I,N,S){}};r(RW,"PostTerrainChangeAbAttr");let rl=RW;const OW=class OW extends rl{constructor(E,R,...I){super(),this.tagType=E,this.turnCount=R,this.terrainTypes=I}canApplyPostTerrainChange(E,R,I,N,S){return!!this.terrainTypes.find(T=>T===N)&&E.canAddTag(this.tagType)}applyPostTerrainChange(E,R,I,N,S){I||E.addTag(this.tagType,this.turnCount)}};r(OW,"PostTerrainChangeAddBattlerTagAttr");let P_=OW;function ci(...t){return E=>{var I;const R=(I=s.arena.terrain)==null?void 0:I.terrainType;return!!R&&t.indexOf(R)>-1}}r(ci,"getTerrainCondition");const IW=class IW extends Qe{canApplyPostTurn(E,R,I,N){return!0}applyPostTurn(E,R,I,N){}};r(IW,"PostTurnAbAttr");let AI=IW;const LW=class LW extends AI{constructor(...E){super(!1),this.effects=E}canApplyPostTurn(E,R,I,N){return!Ne(E.status)&&this.effects.includes(E.status.effect)&&!E.isFullHp()}applyPostTurn(E,R,I,N){if(!I){const S=(R?E.getPassiveAbility():E.getAbility()).name;s.unshiftPhase(new Dt(E.getBattlerIndex(),uA(E.getMaxHp()/8),D.t("abilityTriggers:poisonHeal",{pokemonName:Z(E),abilityName:S}),!0))}}};r(LW,"PostTurnStatusHealAbAttr");let G_=LW;const NW=class NW extends AI{constructor(E=!1){super(!0),this.allyTarget=E}canApplyPostTurn(E,R,I,N){var T,i;this.allyTarget?this.target=E.getAlly():this.target=E;const S=(i=(T=this.target)==null?void 0:T.status)==null?void 0:i.effect;return!!S&&S!==J.FAINT}applyPostTurn(E,R,I,N){var S,T;!I&&((S=this.target)!=null&&S.status)&&(s.queueMessage(qI((T=this.target.status)==null?void 0:T.effect,Z(this.target))),this.target.resetStatus(!1),this.target.updateInfo())}};r(NW,"PostTurnResetStatusAbAttr");let yT=NW;const sW=class sW extends AI{constructor(E){super(),this.procChance=E}canApplyPostTurn(E,R,I,N){const S=new Set(s.getModifiers(XE,E.isPlayer()).filter(i=>i.pokemonId===E.id&&i.getCountUnderMax()<1).map(i=>i.berryType));if(this.berriesUnderCap=E.battleData.berriesEaten.filter(i=>!S.has(i)),!this.berriesUnderCap.length)return!1;const T=Phaser.Math.RND.realInRange(0,1);return Phaser.Math.Clamp(this.procChance(E),0,1)>=T}applyPostTurn(E,R,I,N){I||this.createEatenBerry(E)}createEatenBerry(E){const R=De(this.berriesUnderCap.length),I=this.berriesUnderCap[R];E.battleData.berriesEaten.splice(R,1);const N=new iS(I),S=s.findModifier(T=>T instanceof XE&&T.berryType===I&&T.pokemonId==E.id,E.isPlayer());if(S)S.stackCount++;else{const T=new XE(N,E.id,I,1);E.isPlayer()?s.addModifier(T):s.addEnemyModifier(T)}return s.updateModifiers(E.isPlayer()),s.queueMessage(D.t("abilityTriggers:postTurnLootCreateEatenBerry",{pokemonNameWithAffix:Z(E),berryName:N.name})),!0}};r(sW,"PostTurnRestoreBerryAbAttr");let __=sW;const SW=class SW extends AI{canApply(E,R,I,N){return this.showAbility=!0,!!E.summonData.berriesEatenLast.length}apply(E,R,I,N,S){s.unshiftPhase(new Wt(E.getBattlerIndex(),E.getBattlerIndex(),XA.USE_ITEM));for(const T of E.summonData.berriesEatenLast){lc(T)(E);const i=new XE(new iS(T),E.id,T,1);s.eventTarget.dispatchEvent(new CP(i))}}canApplyPostTurn(E,R,I,N){return this.showAbility=!1,!0}applyPostTurn(E,R,I,N){E.summonData.berriesEatenLast=E.turnData.berriesEaten}};r(SW,"RepeatBerryNextTurnAbAttr");let u_=SW;const TW=class TW extends AI{constructor(){super(!0)}applyPostTurn(E,R,I,N){const S=mL.filter(i=>E.getStatStage(i)<6);let T=mL.filter(i=>E.getStatStage(i)>-6);if(!I){if(S.length>0){const i=S[E.randBattleSeedInt(S.length)];T=S.filter(o=>o!==i),s.unshiftPhase(new hA(E.getBattlerIndex(),!0,[i],2))}if(T.length>0){const i=T[E.randBattleSeedInt(T.length)];s.unshiftPhase(new hA(E.getBattlerIndex(),!0,[i],-1))}}}};r(TW,"MoodyAbAttr");let H_=TW;const nW=class nW extends AI{constructor(){super(!0)}canApplyPostTurn(E,R,I,N){return I||!E.turnData.switchedInThisTurn&&!E.turnData.failedRunAway}applyPostTurn(E,R,I,N){s.unshiftPhase(new hA(E.getBattlerIndex(),!0,[h.SPD],1))}};r(nW,"SpeedBoostAbAttr");let c_=nW;const aW=class aW extends AI{constructor(E){super(!0),this.formFunc=E}canApplyPostTurn(E,R,I,N){return this.formFunc(E)!==E.formIndex}applyPostTurn(E,R,I,N){I||s.triggerPokemonFormChange(E,cA,!1)}};r(aW,"PostTurnFormChangeAbAttr");let KI=aW;const rW=class rW extends AI{canApplyPostTurn(E,R,I,N){return E.getOpponents().some(S=>{var T;return(((T=S.status)==null?void 0:T.effect)===J.SLEEP||S.hasAbility(O.COMATOSE))&&!S.hasAbilityWithAttr($E)&&!S.switchOutStatus})}applyPostTurn(E,R,I,N){var S;for(const T of E.getOpponents())(((S=T.status)==null?void 0:S.effect)===J.SLEEP||T.hasAbility(O.COMATOSE))&&!T.hasAbilityWithAttr($E)&&!T.switchOutStatus&&(I||(T.damageAndUpdate(uA(T.getMaxHp()/8),{result:CA.INDIRECT}),s.queueMessage(D.t("abilityTriggers:badDreams",{pokemonName:Z(T)}))))}};r(rW,"PostTurnHurtIfSleepingAbAttr");let B_=rW;const iW=class iW extends AI{constructor(){super()}canApplyPostTurn(E,R,I,N){return!I&&!Ne(s.currentBattle.lastUsedPokeball)&&!!E.isPlayer}applyPostTurn(E,R,I,N){const S=s.currentBattle.lastUsedPokeball;s.pokeballCounts[S]++,s.currentBattle.lastUsedPokeball=null,s.queueMessage(D.t("abilityTriggers:fetchBall",{pokemonNameWithAffix:Z(E),pokeballName:WP(S)}))}};r(iW,"FetchBallAbAttr");let h_=iW;const oW=class oW extends Qe{};r(oW,"PostBiomeChangeAbAttr");let il=oW;const CW=class CW extends il{constructor(E){super(),this.weatherType=E}canApply(E,R,I,N){var S;return(((S=s.arena.weather)==null?void 0:S.isImmutable())??!1)&&s.arena.canSetWeather(this.weatherType)}apply(E,R,I,N,S){I||s.arena.trySetWeather(this.weatherType,E)}};r(CW,"PostBiomeChangeWeatherChangeAbAttr");let LI=CW;const lW=class lW extends il{constructor(E){super(),this.terrainType=E}canApply(E,R,I,N){return s.arena.canSetTerrain(this.terrainType)}apply(E,R,I,N,S){I||s.arena.trySetTerrain(this.terrainType,!1,E)}};r(lW,"PostBiomeChangeTerrainChangeAbAttr");let NN=lW;const UW=class UW extends Qe{canApplyPostMoveUsed(E,R,I,N,S,T){return!0}applyPostMoveUsed(E,R,I,N,S,T){}};r(UW,"PostMoveUsedAbAttr");let ol=UW;const DW=class DW extends ol{canApplyPostMoveUsed(E,R,I,N,S,T){const i=[Y.FLYING,Y.UNDERWATER,Y.UNDERGROUND,Y.HIDDEN];return I.getBattlerIndex()!==E.getBattlerIndex()&&!E.summonData.tags.some(o=>i.includes(o.tagType))}applyPostMoveUsed(E,R,I,N,S,T){if(!S)if(R.getMove()instanceof B||R.getMove()instanceof ne){const i=this.getTarget(E,I,N);s.unshiftPhase(new lE(E,i,R,!0,!0))}else R.getMove()instanceof we&&s.unshiftPhase(new lE(E,[E.getBattlerIndex()],R,!0,!0))}getTarget(E,R,I){return E.isPlayer()?R.isPlayer()?I:[R.getBattlerIndex()]:R.isPlayer()?[R.getBattlerIndex()]:I}};r(DW,"PostDancingMoveAbAttr");let f_=DW;const MW=class MW extends Qe{canApplyPostItemLost(E,R,I){return!0}applyPostItemLost(E,R,I){}};r(MW,"PostItemLostAbAttr");let qN=MW;const PW=class PW extends qN{constructor(E){super(!1),this.tagType=E}canApplyPostItemLost(E,R,I){return!E.getTag(this.tagType)&&!R}applyPostItemLost(E,R,I){E.addTag(this.tagType)}};r(PW,"PostItemLostApplyBattlerTagAbAttr");let d_=PW;const GW=class GW extends Qe{constructor(E){super(!1),this.multiplier=E}apply(E,R,I,N,S){S[0].value*=this.multiplier}};r(GW,"StatStageChangeMultiplierAbAttr");let Sr=GW;const _W=class _W extends Qe{apply(E,R,I,N,S){I||s.unshiftPhase(new hA(E.getBattlerIndex(),!0,S[0],S[1],!0,!1,!1))}};r(_W,"StatStageChangeCopyAbAttr");let Cl=_W;const uW=class uW extends Qe{constructor(){super(!1)}apply(E,R,I,N,S){N.value=!0}};r(uW,"BypassBurnDamageReductionAbAttr");let ll=uW;const HW=class HW extends Qe{constructor(E){super(!1),this.multiplier=E}apply(E,R,I,N,S){S[0].value=uA(S[0].value*this.multiplier)}};r(HW,"ReduceBurnDamageAbAttr");let Ul=HW;const cW=class cW extends Qe{apply(E,R,I,N,S){S[0].value*=2}};r(cW,"DoubleBerryEffectAbAttr");let RS=cW;const BW=class BW extends Qe{apply(E,R,I,N){N.value=!0}};r(BW,"PreventBerryUseAbAttr");let wT=BW;const hW=class hW extends Qe{constructor(E){super(),this.healPercent=Math.max(Math.min(E,1),0)}apply(E,R,I,...N){if(I)return;const{name:S}=R?E.getPassiveAbility():E.getAbility();s.unshiftPhase(new Dt(E.getBattlerIndex(),uA(E.getMaxHp()*this.healPercent),D.t("abilityTriggers:healFromBerryUse",{pokemonNameWithAffix:Z(E),abilityName:S}),!0))}};r(hW,"HealFromBerryUseAbAttr");let Dl=hW;const fW=class fW extends Qe{apply(E,R,I,N,S){S[0].value=256}};r(fW,"RunSuccessAbAttr");let K_=fW;const dW=class dW extends Qe{constructor(E){super(!1),this.arenaTrapCondition=E}canApplyCheckTrapped(E,R,I,N,S,T){return!0}applyCheckTrapped(E,R,I,N,S,T){}};r(dW,"CheckTrappedAbAttr");let Ml=dW;const KW=class KW extends Ml{canApplyCheckTrapped(E,R,I,N,S,T){return this.arenaTrapCondition(E,S)&&!(S.getTypes(!0).includes(L.GHOST)||S.getTypes(!0).includes(L.STELLAR)&&S.getTypes().includes(L.GHOST))&&!S.hasAbility(O.RUN_AWAY)}applyCheckTrapped(E,R,I,N,S,T){N.value=!0}getTriggerMessage(E,R,...I){return D.t("abilityTriggers:arenaTrap",{pokemonNameWithAffix:Z(E),abilityName:R})}};r(KW,"ArenaTrapAbAttr");let VT=KW;const FW=class FW extends Qe{constructor(){super(!1)}apply(E,R,I,N,S){S[0].value=0}};r(FW,"MaxMultiHitAbAttr");let Tr=FW;const YW=class YW extends Qe{constructor(E=!0){super(E)}canApplyPostBattle(E,R,I,N){return!0}applyPostBattle(E,R,I,N){}};r(YW,"PostBattleAbAttr");let KS=YW;const WW=class WW extends KS{canApplyPostBattle(E,R,I,N){const S=s.currentBattle.postBattleLoot;return!I&&S.length&&N[0]?(this.randItem=SE(S),s.canTransferHeldItemModifier(this.randItem,E,1)):!1}applyPostBattle(E,R,I,N){const S=s.currentBattle.postBattleLoot;this.randItem||(this.randItem=SE(S)),s.tryTransferHeldItemModifier(this.randItem,E,!0,1,!0,void 0,!1)&&(S.splice(S.indexOf(this.randItem),1),s.queueMessage(D.t("abilityTriggers:postBattleLoot",{pokemonNameWithAffix:Z(E),itemName:this.randItem.type.name}))),this.randItem=void 0}};r(WW,"PostBattleLootAbAttr");let F_=WW;const mW=class mW extends Qe{canApplyPostFaint(E,R,I,N,S,T,...i){return!0}applyPostFaint(E,R,I,N,S,T,...i){}};r(mW,"PostFaintAbAttr");let zN=mW;const gW=class gW extends zN{canApplyPostFaint(E,R,I,N,S,T,...i){return o6().length>0}applyPostFaint(E,R,I,N,S,T,i){I||s.arena.triggerWeatherBasedFormChanges()}};r(gW,"PostFaintUnsuppressedWeatherFormChangeAbAttr");let Pl=gW;const pW=class pW extends zN{constructor(E){super(!0),this.damageRatio=E}canApplyPostFaint(E,R,I,N,S,T,...i){const o=S!==void 0&&N!==void 0&&S.doesFlagEffectApply({flag:je.MAKES_CONTACT,user:N,target:E}),C=new SA(!1);return s.getField(!0).map(U=>sA(er,U,C,I)),!(!o||C.value||N.hasAbilityWithAttr($E))}applyPostFaint(E,R,I,N,S,T,...i){I||(N.damageAndUpdate(uA(N.getMaxHp()*(1/this.damageRatio)),{result:CA.INDIRECT}),N.turnData.damageTaken+=uA(N.getMaxHp()*(1/this.damageRatio)))}getTriggerMessage(E,R,...I){return D.t("abilityTriggers:postFaintContactDamage",{pokemonNameWithAffix:Z(E),abilityName:R})}};r(pW,"PostFaintContactDamageAbAttr");let Y_=pW;const yW=class yW extends zN{constructor(){super()}applyPostFaint(E,R,I,N,S,T,...i){if(S!==void 0&&N!==void 0&&!I){const o=E.turnData.attacksReceived[0].damage;N.damageAndUpdate(o,{result:CA.INDIRECT}),N.turnData.damageTaken+=o}}getTriggerMessage(E,R,...I){return D.t("abilityTriggers:postFaintHpDamage",{pokemonNameWithAffix:Z(E),abilityName:R})}};r(yW,"PostFaintHPDamageAbAttr");let W_=yW;const wW=class wW extends Qe{canApply(E,R,I,N){if(!this.canRedirect(N[0],N[2]))return!1;const S=N[1],T=E.getBattlerIndex();return S.value!==T}apply(E,R,I,N,S){const T=S[1],i=E.getBattlerIndex();T.value=i}canRedirect(E,R){const I=Ke[E];return!![ee.NEAR_OTHER,ee.OTHER].find(N=>I.moveTarget===N)}};r(wW,"RedirectMoveAbAttr");let Gl=wW;const VW=class VW extends Gl{constructor(E){super(),this.type=E}canRedirect(E,R){return super.canRedirect(E,R)&&R.getMoveType(Ke[E])===this.type}};r(VW,"RedirectTypeMoveAbAttr");let _l=VW;const vW=class vW extends Qe{};r(vW,"BlockRedirectAbAttr");let KN=vW;const xW=class xW extends Qe{constructor(E){super(!1),this.statusEffect=E}canApply(E,R,I,N){return N[1]instanceof me&&N[0]===this.statusEffect}apply(E,R,I,N,S){S[1].value-=1}};r(xW,"ReduceStatusEffectDurationAbAttr");let ul=xW;const bW=class bW extends Qe{constructor(){super(!0)}};r(bW,"FlinchEffectAbAttr");let Hl=bW;const ZW=class ZW extends Hl{constructor(E,R){super(),this.stats=Array.isArray(E)?E:[E],this.stages=R}apply(E,R,I,N,S){I||s.unshiftPhase(new hA(E.getBattlerIndex(),!0,this.stats,this.stages))}};r(ZW,"FlinchStatStageChangeAbAttr");let m_=ZW;const kW=class kW extends Qe{};r(kW,"IncreasePpAbAttr");let cl=kW;const XW=class XW extends Qe{apply(E,R,I,N,S){N.value=!0}};r(XW,"ForceSwitchOutImmunityAbAttr");let bL=XW;const QW=class QW extends Qe{constructor(){super(!1)}canApply(E,R,I,N){const S=E.getHpRatio();return N[0].value<S}apply(E,R,I,N,S){S[0].value*=2}};r(QW,"ReduceBerryUseThresholdAbAttr");let DN=QW;const JW=class JW extends Qe{constructor(E){super(!1),this.multiplier=E}apply(E,R,I,N,S){S[0].value*=this.multiplier}};r(JW,"WeightMultiplierAbAttr");let nr=JW;const $W=class $W extends Qe{constructor(){super(!1)}apply(E,R,I,N,S){S[0].setNature(E.getNature())}};r($W,"SyncEncounterNatureAbAttr");let Bl=$W;const qW=class qW extends Qe{constructor(E){super(!1),this.moveIgnoreFunc=E||((R,I)=>!0)}canApply(E,R,I,N){return this.moveIgnoreFunc(E,N[0])}apply(E,R,I,N,S){N.value=!0}};r(qW,"MoveAbilityBypassAbAttr");let pI=qW;const zW=class zW extends Qe{};r(zW,"AlwaysHitAbAttr");let ar=zW;const jW=class jW extends Qe{};r(jW,"IgnoreProtectOnContactAbAttr");let hl=jW;const e5=class e5 extends Qe{constructor(){super(!1)}canApply(E,R,I,N){return N[0]instanceof SA}apply(E,R,I,N,S){const T=S[0];T.value=!0}};r(e5,"InfiltratorAbAttr");let jN=e5;const A5=class A5 extends Qe{};r(A5,"ReflectStatusMoveAbAttr");let rr=A5;const E5=class E5 extends Qe{constructor(){super(!1)}};r(E5,"NoTransformAbilityAbAttr");let aR=E5;const t5=class t5 extends Qe{constructor(){super(!1)}};r(t5,"NoFusionAbilityAbAttr");let it=t5;const R5=class R5 extends Qe{constructor(E,R){super(!1),this.defenderType=E,this.allowedMoveTypes=R}canApply(E,R,I,N){return this.defenderType===N[1]&&this.allowedMoveTypes.includes(N[0])}apply(E,R,I,N,S){N.value=!0}};r(R5,"IgnoreTypeImmunityAbAttr");let FS=R5;const O5=class O5 extends Qe{constructor(E,R){super(!1),this.statusEffect=E,this.defenderType=R}canApply(E,R,I,N){return this.statusEffect.includes(N[0])&&this.defenderType.includes(N[1])}apply(E,R,I,N,S){N.value=!0}};r(O5,"IgnoreTypeStatusEffectImmunityAbAttr");let fl=O5;const I5=class I5 extends KS{constructor(){super()}canApplyPostBattle(E,R,I,N){return!I&&N[0]}applyPostBattle(E,R,I,N){s.currentBattle.moneyScattered+=s.getWaveMoneyAmount(.2)}};r(I5,"MoneyAbAttr");let g_=I5;const L5=class L5 extends UN{constructor(E){super([h.ATK],1,!0,!1),this.tagType=E}canApplyPostSummon(E,R,I,N){const S=E.isPlayer()?qe.PLAYER:qe.ENEMY;return(s.arena.getTagOnSide(this.tagType,S)??!1)&&super.canApplyPostSummon(E,R,I,N)}applyPostSummon(E,R,I,N){super.applyPostSummon(E,R,I,N)}};r(L5,"PostSummonStatStageChangeOnArenaAbAttr");let p_=L5;const N5=class N5 extends KR{constructor(E,R,I,N,S){super(E,R),this.multiplier=R,this.tagType=I,this.recoilDamageFunc=S,this.triggerMessageFunc=N}canApplyPreDefend(E,R,I,N,S,T,i){return this.condition(E,N,S)&&!S.hitsSubstitute(N,E)}applyPreDefend(E,R,I,N,S,T,i){I||(i[0].value=this.multiplier,E.removeTag(this.tagType),this.recoilDamageFunc&&E.damageAndUpdate(this.recoilDamageFunc(E),{result:CA.INDIRECT,ignoreSegments:!0,ignoreFaintPhase:!0}))}getTriggerMessage(E,R,...I){return this.triggerMessageFunc(E,R)}};r(N5,"FormBlockDamageAbAttr");let dl=N5;const s5=class s5 extends Qe{applyPreSummon(E,R,I){}canApplyPreSummon(E,R,I){return!0}};r(s5,"PreSummonAbAttr");let es=s5;const S5=class S5 extends es{applyPreSummon(E,R,I){const S=(E.isPlayer()?s.getPlayerParty():s.getEnemyParty()).filter(T=>T.isAllowedInBattle()).filter(T=>T!==E).at(-1)||E;E.setIllusion(S)}canApplyPreSummon(E,R,I){if(E.hasTrainer()){const S=(E.isPlayer()?s.getPlayerParty():s.getEnemyParty()).filter(i=>i.isAllowedInBattle()).filter(i=>i!==E).at(-1)||E,T=S.species.speciesId;if(S===E||(T===e.OGERPON||T===e.TERAPAGOS)&&(S.isTerastallized||E.isTerastallized))return!1}return!E.summonData.illusionBroken}};r(S5,"IllusionPreSummonAbAttr");let y_=S5;const T5=class T5 extends Qe{apply(E,R,I,N,S){E.breakIllusion(),E.summonData.illusionBroken=!0}};r(T5,"IllusionBreakAbAttr");let Kl=T5;const n5=class n5 extends St{applyPostDefend(E,R,I,N,S,T,i){E.breakIllusion(),E.summonData.illusionBroken=!0}canApplyPostDefend(E,R,I,N,S,T,i){return[CA.EFFECTIVE,CA.SUPER_EFFECTIVE,CA.NOT_VERY_EFFECTIVE,CA.ONE_HIT_KO].includes(T)&&!!E.summonData.illusion}};r(n5,"PostDefendIllusionBreakAbAttr");let w_=n5;const a5=class a5 extends KS{applyPostBattle(E,R,I,N){E.breakIllusion()}};r(a5,"IllusionPostBattleAbAttr");let V_=a5;const r5=class r5 extends Qe{constructor(E){super(!0),this.chance=E}canApply(E,R,I,N){var U;const S=N[0],T=s.currentBattle.turnCommands[E.getBattlerIndex()],i=(T==null?void 0:T.command)===GE.FIGHT,o=(U=T==null?void 0:T.move)!=null&&U.move?Ke[T.move.move]:null,C=(o==null?void 0:o.category)===u.PHYSICAL||(o==null?void 0:o.category)===u.SPECIAL;return!I&&!S.value&&E.randBattleSeedInt(100)<this.chance&&i&&C}apply(E,R,I,N,S){const T=S[0];T.value=!0}getTriggerMessage(E,R,...I){return D.t("abilityTriggers:quickDraw",{pokemonName:Z(E)})}};r(r5,"BypassSpeedChanceAbAttr");let v_=r5;const i5=class i5 extends Qe{constructor(E){super(!0),this.condition=E}canApply(E,R,I,N){var o;const S=s.currentBattle.turnCommands[E.getBattlerIndex()],T=(S==null?void 0:S.command)===GE.FIGHT,i=(o=S==null?void 0:S.move)!=null&&o.move?Ke[S.move.move]:null;return T&&this.condition(E,i)}apply(E,R,I,N,S){const T=S[0],i=S[1];T.value=!1,i.value=!1}};r(i5,"PreventBypassSpeedChanceAbAttr");let x_=i5;const o5=class o5 extends wE{constructor(){super(!0)}canApply(E,R,I,N){return!E.isTerastallized}apply(E,R,I,N,S){const T=s.arena.getTerrainType(),i=this.determineTypeChange(E,T);i.length!==0&&(E.summonData.addedType&&i.includes(E.summonData.addedType)&&(E.summonData.addedType=null),E.summonData.types=i,E.updateInfo())}determineTypeChange(E,R){const I=[];switch(R){case $e.ELECTRIC:I.push(L.ELECTRIC);break;case $e.MISTY:I.push(L.FAIRY);break;case $e.GRASSY:I.push(L.GRASS);break;case $e.PSYCHIC:I.push(L.PSYCHIC);break;default:E.getTypes(!1,!1,!0).forEach(N=>{I.push(N)});break}return I}canApplyPostSummon(E,R,I,N){return s.arena.getTerrainType()!==$e.NONE&&this.canApply(E,R,I,N)}applyPostSummon(E,R,I,N){this.apply(E,R,I,new SA(!1),[])}getTriggerMessage(E,R,...I){const N=s.arena.getTerrainType(),S=Z(E);if(N===$e.NONE)return D.t("abilityTriggers:pokemonTypeChangeRevert",{pokemonNameWithAffix:S});{const T=D.t(`pokemonInfo:Type.${L[this.determineTypeChange(E,N)[0]]}`);return D.t("abilityTriggers:pokemonTypeChange",{pokemonNameWithAffix:S,moveType:T})}}};r(o5,"TerrainEventTypeChangeAbAttr");let Fl=o5;function Yl(t,E,R,I,N,S,T=!1,i=!1,o=[]){if(!(t!=null&&t.canApplyAbility(E))||E&&t.getPassiveAbility().id===t.getAbility().id)return;const C=E?t.getPassiveAbility():t.getAbility();if(!(T&&C.getAttrs(R).some(U=>U instanceof wE&&!U.shouldActivateOnGain())))for(const U of C.getAttrs(R)){const _=U.getCondition();let G=!1;if(_&&!_(t)||!N(U,E))continue;s.setPhaseQueueSplice(),U.showAbility&&!i&&(s.queueAbilityDisplay(t,E,!0),G=!0);const H=U.getTriggerMessage(t,C.name,S);H&&(i||s.queueMessage(H),o.push(H)),I(U,E),G&&s.queueAbilityDisplay(t,E,!1),i||t.waveData.abilitiesApplied.add(C.id),s.clearPhaseQueueSplice()}}r(Yl,"applySingleAbAttrs");const C5=class C5{constructor(E){this.switchType=E}switchOutLogic(E){const R=E;if(R instanceof Rt){if(s.getPlayerParty().filter(I=>I.isAllowedInBattle()&&!I.isOnField()).length<1)return!1;if(R.hp>0)return R.leaveField(this.switchType===ZA.SWITCH),s.prependToPhase(new xN(this.switchType,R.getFieldIndex(),!0,!0),qR),!0}else if(s.currentBattle.battleType!==AA.WILD){if(s.getEnemyParty().filter(I=>I.isAllowedInBattle()&&!I.isOnField()).length<1)return!1;if(R.hp>0){R.leaveField(this.switchType===ZA.SWITCH);const I=s.currentBattle.trainer?s.currentBattle.trainer.getNextSummonIndex(R.trainerSlot):0;return s.prependToPhase(new jR(this.switchType,R.getFieldIndex(),I,!1,!1),qR),!0}}else{const I=R.getAlly();if(!s.currentBattle.waveIndex||s.currentBattle.waveIndex%10===0)return!1;R.hp>0&&(R.leaveField(!1),s.queueMessage(D.t("moveTriggers:fled",{pokemonName:Z(R)}),null,!0,500),s.currentBattle.double&&!Ne(I)&&s.redirectPokemonMoves(R,I)),I!=null&&I.isActive(!0)||(s.clearEnemyHeldItemModifiers(),R.hp&&(s.pushPhase(new bN(!1)),(s.gameMode.hasRandomBiomes||s.isNewBiome())&&s.pushPhase(new MS),s.pushPhase(new US)))}return!1}getSwitchOutCondition(E,R){var T;const I=E,N=I instanceof Rt;if(N){const i=new SA(!1);return sA(bL,R,i),!i.value}if(!N&&s.currentBattle.battleType===AA.WILD&&!s.currentBattle.waveIndex&&s.currentBattle.waveIndex%10===0||!N&&s.currentBattle.isBattleMysteryEncounter()&&!((T=s.currentBattle.mysteryEncounter)!=null&&T.fleeAllowed))return!1;const S=N?s.getPlayerParty():s.getEnemyParty();return!N&&s.currentBattle.battleType===AA.WILD||S.filter(i=>i.isAllowedInBattle()&&!i.isOnField()&&(N||i.trainerSlot===I.trainerSlot)).length>0}getFailedText(E){const R=new SA(!1);return sA(bL,E,R),R.value?D.t("moveTriggers:cannotBeSwitchedOut",{pokemonName:Z(E)}):null}};r(C5,"ForceSwitchOutHelper");let b_=C5;function v9(t){const E=t.getHeldItems().find(R=>R instanceof Ss);return E?uA(t.turnData.totalDamageDealt/8)*E.stackCount:0}r(v9,"calculateShellBellRecovery");const l5=class l5 extends Qe{canApplyPostDamage(E,R,I,N,S,T){return!0}applyPostDamage(E,R,I,N,S,T){}};r(l5,"PostDamageAbAttr");let YS=l5;const U5=class U5 extends YS{constructor(E=.5){super(),this.helper=new b_(ZA.SWITCH),this.hpRatio=E}canApplyPostDamage(E,R,I,N,S,T){const i=E.getMoveHistory(),o=[A.BELLY_DRUM,A.SUBSTITUTE,A.CURSE,A.PAIN_SPLIT];if(i.length>0){const U=i[i.length-1];if(o.includes(U.move))return!1}const C=[A.DRAGON_TAIL,A.CIRCLE_THROW];if(T){const U=T.getMoveHistory();if(U.length>0){const _=U[U.length-1];if(C.includes(_.move)||_.move===A.SKY_DROP&&_.result===EE.OTHER)return!1;if(Ke[_.move].chance>=0&&T.hasAbility(O.SHEER_FORCE))return!1;if(T.turnData.hitsLeft>1)return!1;T.turnData.hitCount>1&&(R=E.turnData.damageTaken)}}if(E.hp+R>=E.getMaxHp()*this.hpRatio){const U=v9(E);if(E.hp-U<E.getMaxHp()*this.hpRatio){for(const _ of E.getOpponents())if(!this.helper.getSwitchOutCondition(E,_))return!1;return!0}}return!1}applyPostDamage(E,R,I,N,S,T){this.helper.switchOutLogic(E)}};r(U5,"PostDamageForceSwitchAbAttr");let As=U5;function UE(t,E,R,I,N,S=!1,T=[],i=!1){for(const o of[!1,!0])E&&(Yl(E,o,t,R,I,N,i,S,T),s.clearPhaseQueueSplice())}r(UE,"applyAbAttrsInternal");function sA(t,E,R,I=!1,...N){UE(t,E,(S,T)=>S.apply(E,T,I,R,N),(S,T)=>S.canApply(E,T,I,N),N,I)}r(sA,"applyAbAttrs");function x9(t,E,R=!1,...I){UE(t,E,(N,S)=>N.applyPostBattleInit(E,S,R,I),(N,S)=>N.canApplyPostBattleInit(E,S,R,I),I,R)}r(x9,"applyPostBattleInitAbAttrs");function FI(t,E,R,I,N,S=!1,...T){UE(t,E,(i,o)=>i.applyPreDefend(E,o,S,R,I,N,T),(i,o)=>i.canApplyPreDefend(E,o,S,R,I,N,T),T,S)}r(FI,"applyPreDefendAbAttrs");function b9(t,E,R,I,N,S=!1,...T){UE(t,E,(i,o)=>i.applyPostDefend(E,o,S,R,I,N,T),(i,o)=>i.canApplyPostDefend(E,o,S,R,I,N,T),T,S)}r(b9,"applyPostDefendAbAttrs");function Z9(t,E,R,I,N,S=!1,...T){UE(t,E,(i,o)=>i.applyPostMoveUsed(E,R,I,N,S,T),(i,o)=>i.canApplyPostMoveUsed(E,R,I,N,S,T),T,S)}r(Z9,"applyPostMoveUsedAbAttrs");function tP(t,E,R,I,N=!1,...S){UE(t,E,(T,i)=>T.applyStatStage(E,i,N,R,I,S),(T,i)=>T.canApplyStatStage(E,i,N,R,I,S),S)}r(tP,"applyStatMultiplierAbAttrs");function RP(t,E,R,I,N=!1,S,T,...i){return UE(t,E,(o,C)=>o.applyAllyStat(E,C,N,R,I,S,T,i),(o,C)=>o.canApplyAllyStat(E,C,N,R,I,S,T,i),i,N)}r(RP,"applyAllyStatMultiplierAbAttrs");function k9(t,E,R,I,N=!1,...S){UE(t,E,(T,i)=>T.applyPostSetStatus(E,I,i,R,N,S),(T,i)=>T.canApplyPostSetStatus(E,I,i,R,N,S),S,N)}r(k9,"applyPostSetStatusAbAttrs");function rc(t,E,R,I,N=!1,S,T){UE(t,E,(i,o)=>i.applyPostDamage(E,R,o,N,S,T),(i,o)=>i.canApplyPostDamage(E,R,o,N,S,T),S)}r(rc,"applyPostDamageAbAttrs");function X9(t,E,R,I,N,S,T=!1,...i){UE(t,E,(o,C)=>o.applyFieldStat(E,C,T,R,I,N,S,i),(o,C)=>o.canApplyFieldStat(E,C,T,R,I,N,S,i),i)}r(X9,"applyFieldStatMultiplierAbAttrs");function ZO(t,E,R,I,N=!1,...S){UE(t,E,(T,i)=>T.applyPreAttack(E,i,N,R,I,S),(T,i)=>T.canApplyPreAttack(E,i,N,R,I,S),S,N)}r(ZO,"applyPreAttackAbAttrs");function a6(t,E,R,I,N,S=!1,...T){UE(t,E,(i,o)=>i.applyPostAttack(E,o,S,R,I,N,T),(i,o)=>i.canApplyPostAttack(E,o,S,R,I,N,T),T,S)}r(a6,"applyPostAttackAbAttrs");function Q9(t,E,R,I=!1,...N){UE(t,E,(S,T)=>S.applyPostKnockOut(E,T,I,R,N),(S,T)=>S.canApplyPostKnockOut(E,T,I,R,N),N,I)}r(Q9,"applyPostKnockOutAbAttrs");function J9(t,E,R=!1,...I){UE(t,E,(N,S)=>N.applyPostVictory(E,S,R,I),(N,S)=>N.canApplyPostVictory(E,S,R,I),I,R)}r(J9,"applyPostVictoryAbAttrs");function r6(t,E,R=!1,...I){UE(t,E,(N,S)=>N.applyPostSummon(E,S,R,I),(N,S)=>N.canApplyPostSummon(E,S,R,I),I,R)}r(r6,"applyPostSummonAbAttrs");function ic(t,E,...R){UE(t,E,(I,N)=>I.applyPreSummon(E,N,R),(I,N)=>I.canApplyPreSummon(E,N,R),R)}r(ic,"applyPreSummonAbAttrs");function $9(t,E,R=!1,...I){UE(t,E,(N,S)=>N.applyPreSwitchOut(E,S,R,I),(N,S)=>N.canApplyPreSwitchOut(E,S,R,I),I,R)}r($9,"applyPreSwitchOutAbAttrs");function q9(t,E,R=!1,...I){return UE(t,E,(N,S)=>N.applyPreLeaveField(E,S,R,I),(N,S)=>N.canApplyPreLeaveField(E,S,R,I),I,R)}r(q9,"applyPreLeaveFieldAbAttrs");function Bi(t,E,R,I,N=!1,...S){UE(t,E,(T,i)=>T.applyPreStatStageChange(E,i,N,R,I,S),(T,i)=>T.canApplyPreStatStageChange(E,i,N,R,I,S),S,N)}r(Bi,"applyPreStatStageChangeAbAttrs");function z9(t,E,R,I,N,S=!1,...T){UE(t,E,(i,o)=>i.applyPostStatStageChange(E,S,R,I,N,T),(i,o)=>i.canApplyPostStatStageChange(E,S,R,I,N,T),T,S)}r(z9,"applyPostStatStageChangeAbAttrs");function tv(t,E,R,I,N=!1,...S){UE(t,E,(T,i)=>T.applyPreSetStatus(E,i,N,R,I,S),(T,i)=>T.canApplyPreSetStatus(E,i,N,R,I,S),S,N)}r(tv,"applyPreSetStatusAbAttrs");function hi(t,E,R,I,N=!1,...S){UE(t,E,(T,i)=>T.applyPreApplyBattlerTag(E,i,N,R,I,S),(T,i)=>T.canApplyPreApplyBattlerTag(E,i,N,R,I,S),S,N)}r(hi,"applyPreApplyBattlerTagAbAttrs");function aQ(t,E,R,I,N=!1,...S){UE(t,E,(T,i)=>T.applyPreWeatherEffect(E,i,N,R,I,S),(T,i)=>T.canApplyPreWeatherEffect(E,i,N,R,I,S),S,N)}r(aQ,"applyPreWeatherEffectAbAttrs");function rQ(t,E,R=!1,...I){UE(t,E,(N,S)=>N.applyPostTurn(E,S,R,I),(N,S)=>N.canApplyPostTurn(E,S,R,I),I,R)}r(rQ,"applyPostTurnAbAttrs");function j9(t,E,R,I=!1,...N){UE(t,E,(S,T)=>S.applyPostWeatherChange(E,T,I,R,N),(S,T)=>S.canApplyPostWeatherChange(E,T,I,R,N),N,I)}r(j9,"applyPostWeatherChangeAbAttrs");function iQ(t,E,R,I=!1,...N){UE(t,E,(S,T)=>S.applyPostWeatherLapse(E,T,I,R,N),(S,T)=>S.canApplyPostWeatherLapse(E,T,I,R,N),N,I)}r(iQ,"applyPostWeatherLapseAbAttrs");function eX(t,E,R,I=!1,...N){UE(t,E,(S,T)=>S.applyPostTerrainChange(E,T,I,R,N),(S,T)=>S.canApplyPostTerrainChange(E,T,I,R,N),N,I)}r(eX,"applyPostTerrainChangeAbAttrs");function AX(t,E,R,I,N,S=!1,...T){UE(t,E,(i,o)=>i.applyCheckTrapped(E,o,S,R,I,T),(i,o)=>i.canApplyCheckTrapped(E,o,S,R,I,T),T,S,N)}r(AX,"applyCheckTrappedAbAttrs");function EX(t,E,R=!1,...I){UE(t,E,(N,S)=>N.applyPostBattle(E,S,R,I),(N,S)=>N.canApplyPostBattle(E,S,R,I),I,R)}r(EX,"applyPostBattleAbAttrs");function Rv(t,E,R,I,N,S=!1,...T){UE(t,E,(i,o)=>i.applyPostFaint(E,o,S,R,I,N,T),(i,o)=>i.canApplyPostFaint(E,o,S,R,I,N,T),T,S)}r(Rv,"applyPostFaintAbAttrs");function BM(t,E,R=!1,...I){UE(t,E,(N,S)=>N.applyPostItemLost(E,R,I),(N,S)=>N.canApplyPostItemLost(E,R,I),I)}r(BM,"applyPostItemLostAbAttrs");function Z_(t,E=!1,R=!1,...I){Yl(t,E,wE,(N,S)=>N.applyPostSummon(t,S,R,I),(N,S)=>N.canApplyPostSummon(t,S,R,I),I,!0,R)}r(Z_,"applyOnGainAbAttrs");function k_(t,E=!1,R=!1,...I){Yl(t,E,BS,(N,S)=>N.applyPreLeaveField(t,S,R,[...I,!0]),(N,S)=>N.canApplyPreLeaveField(t,S,R,[...I,!0]),I,!0,R),Yl(t,E,Kl,(N,S)=>N.apply(t,S,R,null,I),(N,S)=>N.canApply(t,S,R,I),I,!0,R)}r(k_,"applyOnLoseAbAttrs");function i6(t){t.waveData.abilityRevealed=!0}r(i6,"setAbilityRevealed");function o6(){return s.getField(!0).filter(t=>t.hasAbility(O.FORECAST)&&t.species.speciesId===e.CASTFORM||t.hasAbility(O.FLOWER_GIFT)&&t.species.speciesId===e.CHERRIM)}r(o6,"getPokemonWithWeatherBasedForms");function tX(){qE.push(new Q(O.NONE,3),new Q(O.STENCH,3).attr(j0,!1,(t,E,R)=>!R.hasAttr(VA)&&!R.hitsSubstitute(t,E)?10:0,Y.FLINCHED),new Q(O.DRIZZLE,3).attr(OI,X.RAIN).attr(LI,X.RAIN),new Q(O.SPEED_BOOST,3).attr(c_),new Q(O.BATTLE_ARMOR,3).attr(Nr).ignorable(),new Q(O.STURDY,3).attr(dC).attr(Ll).ignorable(),new Q(O.DAMP,3).attr(er).ignorable(),new Q(O.LIMBER,3).attr(dR,J.PARALYSIS).attr(II,J.PARALYSIS).ignorable(),new Q(O.SAND_VEIL,3).attr(OE,h.EVA,1.2).attr(nL,X.SANDSTORM).condition(Bt(X.SANDSTORM)).ignorable(),new Q(O.STATIC,3).attr(tS,30,J.PARALYSIS).bypassFaint(),new Q(O.VOLT_ABSORB,3).attr(ws,L.ELECTRIC).ignorable(),new Q(O.WATER_ABSORB,3).attr(ws,L.WATER).ignorable(),new Q(O.OBLIVIOUS,3).attr(wO,[Y.INFATUATED,Y.TAUNT]).attr(JC,Y.INFATUATED,Y.TAUNT).attr(lN).ignorable(),new Q(O.CLOUD_NINE,3).attr(dS,!0).attr(QC,D.t("abilityTriggers:weatherEffectDisappeared")).attr(qC).attr(Pl).bypassFaint(),new Q(O.COMPOUND_EYES,3).attr(OE,h.ACC,1.3),new Q(O.INSOMNIA,3).attr(dR,J.SLEEP).attr(II,J.SLEEP).attr(wO,Y.DROWSY).ignorable(),new Q(O.COLOR_CHANGE,3).attr(w0).condition(Hi()),new Q(O.IMMUNITY,3).attr(dR,J.POISON,J.TOXIC).attr(II,J.POISON,J.TOXIC).ignorable(),new Q(O.FLASH_FIRE,3).attr(m0,L.FIRE,Y.FIRE_BOOST,1).ignorable(),new Q(O.SHIELD_DUST,3).attr(vL).ignorable(),new Q(O.OWN_TEMPO,3).attr(wO,Y.CONFUSED).attr(JC,Y.CONFUSED).attr(lN).ignorable(),new Q(O.SUCTION_CUPS,3).attr(bL).ignorable(),new Q(O.INTIMIDATE,3).attr(UN,[h.ATK],-1,!1,!0),new Q(O.SHADOW_TAG,3).attr(VT,(t,E)=>!E.hasAbility(O.SHADOW_TAG)),new Q(O.ROUGH_SKIN,3).attr(pC,8).bypassFaint(),new Q(O.WONDER_GUARD,3).attr(g0).uncopiable().ignorable(),new Q(O.LEVITATE,3).attr(W0,L.GROUND,t=>!t.getTag(Dr)&&!s.arena.getTag(oe.GRAVITY)).ignorable(),new Q(O.EFFECT_SPORE,3).attr(v0),new Q(O.SYNCHRONIZE,3).attr(Bl).attr(A_),new Q(O.CLEAR_BODY,3).attr(sO).ignorable(),new Q(O.NATURAL_CURE,3).attr(n_),new Q(O.LIGHTNING_ROD,3).attr(_l,L.ELECTRIC).attr(IN,L.ELECTRIC,h.SPATK,1).ignorable(),new Q(O.SERENE_GRACE,3).attr(za,2),new Q(O.SWIFT_SWIM,3).attr(OE,h.SPD,2).condition(Bt(X.RAIN,X.HEAVY_RAIN)),new Q(O.CHLOROPHYLL,3).attr(OE,h.SPD,2).condition(Bt(X.SUNNY,X.HARSH_SUN)),new Q(O.ILLUMINATE,3).attr(sO,h.ACC).attr(ps).attr(KL,[h.EVA]).ignorable(),new Q(O.TRACE,3).attr(s_).uncopiable(),new Q(O.HUGE_POWER,3).attr(OE,h.ATK,2),new Q(O.POISON_POINT,3).attr(tS,30,J.POISON).bypassFaint(),new Q(O.INNER_FOCUS,3).attr(wO,Y.FLINCHED).attr(lN).ignorable(),new Q(O.MAGMA_ARMOR,3).attr(dR,J.FREEZE).attr(II,J.FREEZE).ignorable(),new Q(O.WATER_VEIL,3).attr(dR,J.BURN).attr(II,J.BURN).ignorable(),new Q(O.MAGNET_PULL,3).attr(VT,(t,E)=>!!(E.getTypes(!0).includes(L.STEEL)||E.getTypes(!0).includes(L.STELLAR)&&E.getTypes().includes(L.STEEL))),new Q(O.SOUNDPROOF,3).attr(gI,(t,E,R)=>t!==E&&R.hasFlag(je.SOUND_BASED)).ignorable(),new Q(O.RAIN_DISH,3).attr(pT,1,X.RAIN,X.HEAVY_RAIN),new Q(O.SAND_STREAM,3).attr(OI,X.SANDSTORM).attr(LI,X.SANDSTORM),new Q(O.PRESSURE,3).attr(cl).attr(nR,t=>D.t("abilityTriggers:postSummonPressure",{pokemonNameWithAffix:Z(t)})),new Q(O.THICK_FAT,3).attr(sL,L.FIRE,.5).attr(sL,L.ICE,.5).ignorable(),new Q(O.EARLY_BIRD,3).attr(ul,J.SLEEP),new Q(O.FLAME_BODY,3).attr(tS,30,J.BURN).bypassFaint(),new Q(O.RUN_AWAY,3).attr(K_),new Q(O.KEEN_EYE,3).attr(sO,h.ACC).ignorable(),new Q(O.HYPER_CUTTER,3).attr(sO,h.ATK).ignorable(),new Q(O.PICKUP,3).attr(F_).unsuppressable(),new Q(O.TRUANT,3).attr(dI,Y.TRUANT,1,!1),new Q(O.HUSTLE,3).attr(OE,h.ATK,1.5).attr(OE,h.ACC,.8,(t,E,R)=>R.category===u.PHYSICAL),new Q(O.CUTE_CHARM,3).attr(x0,30,Y.INFATUATED),new Q(O.PLUS,3).conditionalAttr(t=>s.currentBattle.double&&[O.PLUS,O.MINUS].some(E=>{var R;return((R=t.getAlly())==null?void 0:R.hasAbility(E))??!1}),OE,h.SPATK,1.5),new Q(O.MINUS,3).conditionalAttr(t=>s.currentBattle.double&&[O.PLUS,O.MINUS].some(E=>{var R;return((R=t.getAlly())==null?void 0:R.hasAbility(E))??!1}),OE,h.SPATK,1.5),new Q(O.FORECAST,3).uncopiable().unreplaceable().attr(it).attr(zC,O.FORECAST).attr(Sl,O.FORECAST,[X.NONE,X.SANDSTORM,X.STRONG_WINDS,X.FOG]),new Q(O.STICKY_HOLD,3).attr($a).bypassFaint().ignorable(),new Q(O.SHED_SKIN,3).conditionalAttr(t=>!De(3),yT),new Q(O.GUTS,3).attr(ll).conditionalAttr(t=>!!t.status||t.hasAbility(O.COMATOSE),OE,h.ATK,1.5),new Q(O.MARVEL_SCALE,3).conditionalAttr(t=>!!t.status||t.hasAbility(O.COMATOSE),OE,h.DEF,1.5).ignorable(),new Q(O.LIQUID_OOZE,3).attr(qa),new Q(O.OVERGROW,3).attr(Vs,L.GRASS),new Q(O.BLAZE,3).attr(Vs,L.FIRE),new Q(O.TORRENT,3).attr(Vs,L.WATER),new Q(O.SWARM,3).attr(Vs,L.BUG),new Q(O.ROCK_HEAD,3).attr(hC),new Q(O.DROUGHT,3).attr(OI,X.SUNNY).attr(LI,X.SUNNY),new Q(O.ARENA_TRAP,3).attr(VT,(t,E)=>!!E.isGrounded()).attr(ps),new Q(O.VITAL_SPIRIT,3).attr(dR,J.SLEEP).attr(II,J.SLEEP).attr(wO,Y.DROWSY).ignorable(),new Q(O.WHITE_SMOKE,3).attr(sO).ignorable(),new Q(O.PURE_POWER,3).attr(OE,h.ATK,2),new Q(O.SHELL_ARMOR,3).attr(Nr).ignorable(),new Q(O.AIR_LOCK,3).attr(dS,!0).attr(QC,D.t("abilityTriggers:weatherEffectDisappeared")).attr(qC).attr(Pl).bypassFaint(),new Q(O.TANGLED_FEET,4).conditionalAttr(t=>!!t.getTag(Y.CONFUSED),OE,h.EVA,2).ignorable(),new Q(O.MOTOR_DRIVE,4).attr(IN,L.ELECTRIC,h.SPD,1).ignorable(),new Q(O.RIVALRY,4).attr(ht,(t,E,R)=>(t==null?void 0:t.gender)!==ye.GENDERLESS&&(E==null?void 0:E.gender)!==ye.GENDERLESS&&(t==null?void 0:t.gender)===(E==null?void 0:E.gender),1.25,!0).attr(ht,(t,E,R)=>(t==null?void 0:t.gender)!==ye.GENDERLESS&&(E==null?void 0:E.gender)!==ye.GENDERLESS&&(t==null?void 0:t.gender)!==(E==null?void 0:E.gender),.75),new Q(O.STEADFAST,4).attr(m_,[h.SPD],1),new Q(O.SNOW_CLOAK,4).attr(OE,h.EVA,1.2).attr(nL,X.HAIL).condition(Bt(X.HAIL,X.SNOW)).ignorable(),new Q(O.GLUTTONY,4).attr(DN),new Q(O.ANGER_POINT,4).attr(b0,h.ATK,6),new Q(O.UNBURDEN,4).attr(d_,Y.UNBURDEN).bypassFaint().edgeCase(),new Q(O.HEATPROOF,4).attr(sL,L.FIRE,.5).attr(Ul,.5).ignorable(),new Q(O.SIMPLE,4).attr(Sr,2).ignorable(),new Q(O.DRY_SKIN,4).attr(al,2,X.SUNNY,X.HARSH_SUN).attr(pT,2,X.RAIN,X.HEAVY_RAIN).attr(sL,L.FIRE,1.25).attr(ws,L.WATER).ignorable(),new Q(O.DOWNLOAD,4).attr(N_),new Q(O.IRON_FIST,4).attr(ht,(t,E,R)=>R.hasFlag(je.PUNCHING_MOVE),1.2),new Q(O.POISON_HEAL,4).attr(G_,J.TOXIC,J.POISON).attr(Il,J.TOXIC,J.POISON),new Q(O.ADAPTABILITY,4).attr(KC),new Q(O.SKILL_LINK,4).attr(Tr),new Q(O.HYDRATION,4).attr(yT).condition(Bt(X.RAIN,X.HEAVY_RAIN)),new Q(O.SOLAR_POWER,4).attr(al,2,X.SUNNY,X.HARSH_SUN).attr(OE,h.SPATK,1.5).condition(Bt(X.SUNNY,X.HARSH_SUN)),new Q(O.QUICK_FEET,4).conditionalAttr(t=>t.status?t.status.effect===J.PARALYSIS:!1,OE,h.SPD,2).conditionalAttr(t=>!!t.status||t.hasAbility(O.COMATOSE),OE,h.SPD,1.5),new Q(O.NORMALIZE,4).attr(TI,L.NORMAL,1.2),new Q(O.SNIPER,4).attr(Rl,1.5),new Q(O.MAGIC_GUARD,4).attr($E),new Q(O.NO_GUARD,4).attr(ar).attr(ps),new Q(O.STALL,4).attr(lL,(t,E)=>!0,-.2),new Q(O.TECHNICIAN,4).attr(ht,(t,E,R)=>{const I=new me(R.power);return LE(TE,t,E,R,I),I.value<=60},1.5),new Q(O.LEAF_GUARD,4).attr(dR).condition(Bt(X.SUNNY,X.HARSH_SUN)).ignorable(),new Q(O.KLUTZ,4).unimplemented(),new Q(O.MOLD_BREAKER,4).attr(nR,t=>D.t("abilityTriggers:postSummonMoldBreaker",{pokemonNameWithAffix:Z(t)})).attr(pI),new Q(O.SUPER_LUCK,4).attr(tl),new Q(O.AFTERMATH,4).attr(Y_,4).bypassFaint(),new Q(O.ANTICIPATION,4).conditionalAttr(V9(),nR,t=>D.t("abilityTriggers:postSummonAnticipation",{pokemonNameWithAffix:Z(t)})),new Q(O.FOREWARN,4).attr(D_),new Q(O.UNAWARE,4).attr(KL,[h.ATK,h.DEF,h.SPATK,h.SPDEF,h.ACC,h.EVA]).ignorable(),new Q(O.TINTED_LENS,4).attr(VC,2,(t,E,R)=>((E==null?void 0:E.getMoveEffectiveness(t,R))??1)<=.5),new Q(O.FILTER,4).attr(KR,(t,E,R)=>t.getMoveEffectiveness(E,R)>=2,.75).ignorable(),new Q(O.SLOW_START,4).attr(dI,Y.SLOW_START,5),new Q(O.SCRAPPY,4).attr(FS,L.GHOST,[L.NORMAL,L.FIGHTING]).attr(lN),new Q(O.STORM_DRAIN,4).attr(_l,L.WATER).attr(IN,L.WATER,h.SPATK,1).ignorable(),new Q(O.ICE_BODY,4).attr(nL,X.HAIL).attr(pT,1,X.HAIL,X.SNOW),new Q(O.SOLID_ROCK,4).attr(KR,(t,E,R)=>t.getMoveEffectiveness(E,R)>=2,.75).ignorable(),new Q(O.SNOW_WARNING,4).attr(OI,X.SNOW).attr(LI,X.SNOW),new Q(O.HONEY_GATHER,4).attr(g_).unsuppressable(),new Q(O.FRISK,4).attr(M_),new Q(O.RECKLESS,4).attr(ht,(t,E,R)=>R.hasFlag(je.RECKLESS_MOVE),1.2),new Q(O.MULTITYPE,4).attr(it).uncopiable().unsuppressable().unreplaceable(),new Q(O.FLOWER_GIFT,4).conditionalAttr(Bt(X.SUNNY||X.HARSH_SUN),OE,h.ATK,1.5).conditionalAttr(Bt(X.SUNNY||X.HARSH_SUN),OE,h.SPDEF,1.5).conditionalAttr(Bt(X.SUNNY||X.HARSH_SUN),dL,h.ATK,1.5).conditionalAttr(Bt(X.SUNNY||X.HARSH_SUN),dL,h.SPDEF,1.5).attr(it).attr(zC,O.FLOWER_GIFT).attr(Sl,O.FLOWER_GIFT,[X.NONE,X.SANDSTORM,X.STRONG_WINDS,X.FOG,X.HAIL,X.HEAVY_RAIN,X.SNOW,X.RAIN]).uncopiable().unreplaceable().ignorable(),new Q(O.BAD_DREAMS,4).attr(B_),new Q(O.PICKPOCKET,5).attr(e_,(t,E,R)=>R.doesFlagEffectApply({flag:je.MAKES_CONTACT,user:E,target:t})).condition(Hi()),new Q(O.SHEER_FORCE,5).attr(ht,(t,E,R)=>R.chance>=1,1.3).attr(za,0),new Q(O.CONTRARY,5).attr(Sr,-1).ignorable(),new Q(O.UNNERVE,5).attr(wT),new Q(O.DEFIANT,5).attr(wC,(t,E,R)=>R<0,[h.ATK],2),new Q(O.DEFEATIST,5).attr(OE,h.ATK,.5).attr(OE,h.SPATK,.5).condition(t=>t.getHpRatio()<=.5),new Q(O.CURSED_BODY,5).attr(Q0,30).bypassFaint(),new Q(O.HEALER,5).conditionalAttr(t=>!Ne(t.getAlly())&&De(10)<3,yT,!0),new Q(O.FRIEND_GUARD,5).attr(FC,.75).ignorable(),new Q(O.WEAK_ARMOR,5).attr(OO,(t,E,R)=>R.category===u.PHYSICAL,h.DEF,-1).attr(OO,(t,E,R)=>R.category===u.PHYSICAL,h.SPD,2),new Q(O.HEAVY_METAL,5).attr(nr,2).ignorable(),new Q(O.LIGHT_METAL,5).attr(nr,.5).ignorable(),new Q(O.MULTISCALE,5).attr(KR,(t,E,R)=>t.isFullHp(),.5).ignorable(),new Q(O.TOXIC_BOOST,5).attr(ht,(t,E,R)=>{var I,N;return R.category===u.PHYSICAL&&(((I=t==null?void 0:t.status)==null?void 0:I.effect)===J.POISON||((N=t==null?void 0:t.status)==null?void 0:N.effect)===J.TOXIC)},1.5),new Q(O.FLARE_BOOST,5).attr(ht,(t,E,R)=>{var I;return R.category===u.SPECIAL&&((I=t==null?void 0:t.status)==null?void 0:I.effect)===J.BURN},1.5),new Q(O.HARVEST,5).attr(__,t=>.5*(Bt(X.SUNNY,X.HARSH_SUN)(t)?2:1)).edgeCase(),new Q(O.TELEPATHY,5).attr(gI,(t,E,R)=>t.getAlly()===E&&R instanceof B).ignorable(),new Q(O.MOODY,5).attr(H_),new Q(O.OVERCOAT,5).attr(nL).attr(gI,(t,E,R)=>t!==E&&R.hasFlag(je.POWDER_MOVE)).ignorable(),new Q(O.POISON_TOUCH,5).attr(z0,30,J.POISON),new Q(O.REGENERATOR,5).attr(a_),new Q(O.BIG_PECKS,5).attr(sO,h.DEF).ignorable(),new Q(O.SAND_RUSH,5).attr(OE,h.SPD,2).attr(nL,X.SANDSTORM).condition(Bt(X.SANDSTORM)),new Q(O.WONDER_SKIN,5).attr(mC).ignorable(),new Q(O.ANALYTIC,5).attr(ht,(t,E,R)=>{const I=s.findPhase(N=>N instanceof lE&&N.pokemon.id!==(t==null?void 0:t.id));return Ne(I)},1.3),new Q(O.ILLUSION,5).attr(y_,!1).attr(Kl).attr(w_,!0).attr(it).conditionalAttr(t=>t.isAllowedInBattle(),V_,!1).uncopiable().bypassFaint(),new Q(O.IMPOSTER,5).attr(T_).uncopiable(),new Q(O.INFILTRATOR,5).attr(jN).partial(),new Q(O.MUMMY,5).attr(yC,O.MUMMY).bypassFaint(),new Q(O.MOXIE,5).attr(SL,h.ATK,1),new Q(O.JUSTIFIED,5).attr(OO,(t,E,R)=>E.getMoveType(R)===L.DARK&&R.category!==u.STATUS,h.ATK,1),new Q(O.RATTLED,5).attr(OO,(t,E,R)=>{const I=E.getMoveType(R);return R.category!==u.STATUS&&(I===L.DARK||I===L.BUG||I===L.GHOST)},h.SPD,1).attr(Or,[h.SPD],1),new Q(O.MAGIC_BOUNCE,5).attr(rr).ignorable().edgeCase(),new Q(O.SAP_SIPPER,5).attr(IN,L.GRASS,h.ATK,1).ignorable(),new Q(O.PRANKSTER,5).attr(lL,(t,E)=>E.category===u.STATUS,1),new Q(O.SAND_FORCE,5).attr(mO,L.ROCK,1.3).attr(mO,L.GROUND,1.3).attr(mO,L.STEEL,1.3).attr(nL,X.SANDSTORM).condition(Bt(X.SANDSTORM)),new Q(O.IRON_BARBS,5).attr(pC,8).bypassFaint(),new Q(O.ZEN_MODE,5).attr(fO,()=>0).attr(TL,t=>t.getHpRatio()<=.5?1:0).attr(KI,t=>t.getHpRatio()<=.5?1:0).attr(it).uncopiable().unreplaceable().unsuppressable().bypassFaint(),new Q(O.VICTORY_STAR,5).attr(OE,h.ACC,1.1).attr(dL,h.ACC,1.1,!1),new Q(O.TURBOBLAZE,5).attr(nR,t=>D.t("abilityTriggers:postSummonTurboblaze",{pokemonNameWithAffix:Z(t)})).attr(pI),new Q(O.TERAVOLT,5).attr(nR,t=>D.t("abilityTriggers:postSummonTeravolt",{pokemonNameWithAffix:Z(t)})).attr(pI),new Q(O.AROMA_VEIL,6).attr($N,[Y.INFATUATED,Y.TAUNT,Y.DISABLED,Y.TORMENT,Y.HEAL_BLOCK]).ignorable(),new Q(O.FLOWER_VEIL,6).attr(o_,(t,E)=>E?t.getTypes().includes(L.GRASS)&&t.id!==E.id:!1).attr(l_,t=>t.getTypes().includes(L.GRASS),[Y.DROWSY]).attr(fS,t=>t.getTypes().includes(L.GRASS)).ignorable(),new Q(O.CHEEK_POUCH,6).attr(Dl,1/3),new Q(O.PROTEAN,6).attr(dN),new Q(O.FUR_COAT,6).attr(KR,(t,E,R)=>R.category===u.PHYSICAL,.5).ignorable(),new Q(O.MAGICIAN,6).attr(q0),new Q(O.BULLETPROOF,6).attr(gI,(t,E,R)=>t!==E&&R.hasFlag(je.BALLBOMB_MOVE)).ignorable(),new Q(O.COMPETITIVE,6).attr(wC,(t,E,R)=>R<0,[h.SPATK],2),new Q(O.STRONG_JAW,6).attr(ht,(t,E,R)=>R.hasFlag(je.BITING_MOVE),1.5),new Q(O.REFRIGERATE,6).attr(TI,L.ICE,1.2,(t,E,R)=>R.type===L.NORMAL),new Q(O.SWEET_VEIL,6).attr(hS,J.SLEEP).attr($C,J.SLEEP).attr($N,Y.DROWSY).ignorable().partial(),new Q(O.STANCE_CHANGE,6).attr(it).uncopiable().unreplaceable().unsuppressable(),new Q(O.GALE_WINGS,6).attr(lL,(t,E)=>t.isFullHp()&&t.getMoveType(E)===L.FLYING,1),new Q(O.MEGA_LAUNCHER,6).attr(ht,(t,E,R)=>R.hasFlag(je.PULSE_MOVE),1.5),new Q(O.GRASS_PELT,6).conditionalAttr(ci($e.GRASSY),OE,h.DEF,1.5).ignorable(),new Q(O.SYMBIOSIS,6).unimplemented(),new Q(O.TOUGH_CLAWS,6).attr(ht,(t,E,R)=>R.hasFlag(je.MAKES_CONTACT),1.3),new Q(O.PIXILATE,6).attr(TI,L.FAIRY,1.2,(t,E,R)=>R.type===L.NORMAL),new Q(O.GOOEY,6).attr(OO,(t,E,R)=>R.hasFlag(je.MAKES_CONTACT),h.SPD,-1,!1),new Q(O.AERILATE,6).attr(TI,L.FLYING,1.2,(t,E,R)=>R.type===L.NORMAL),new Q(O.PARENTAL_BOND,6).attr(Ar,.25),new Q(O.DARK_AURA,6).attr(nR,t=>D.t("abilityTriggers:postSummonDarkAura",{pokemonNameWithAffix:Z(t)})).attr(CN,L.DARK,4/3),new Q(O.FAIRY_AURA,6).attr(nR,t=>D.t("abilityTriggers:postSummonFairyAura",{pokemonNameWithAffix:Z(t)})).attr(CN,L.FAIRY,4/3),new Q(O.AURA_BREAK,6).ignorable().conditionalAttr(t=>s.getField(!0).some(E=>E.hasAbility(O.DARK_AURA)),CN,L.DARK,9/16).conditionalAttr(t=>s.getField(!0).some(E=>E.hasAbility(O.FAIRY_AURA)),CN,L.FAIRY,9/16).conditionalAttr(t=>s.getField(!0).some(E=>E.hasAbility(O.DARK_AURA)||E.hasAbility(O.FAIRY_AURA)),nR,t=>D.t("abilityTriggers:postSummonAuraBreak",{pokemonNameWithAffix:Z(t)})),new Q(O.PRIMORDIAL_SEA,6).attr(OI,X.HEAVY_RAIN).attr(LI,X.HEAVY_RAIN).attr(gT).bypassFaint(),new Q(O.DESOLATE_LAND,6).attr(OI,X.HARSH_SUN).attr(LI,X.HARSH_SUN).attr(gT).bypassFaint(),new Q(O.DELTA_STREAM,6).attr(OI,X.STRONG_WINDS).attr(LI,X.STRONG_WINDS).attr(gT).bypassFaint(),new Q(O.STAMINA,7).attr(OO,(t,E,R)=>R.category!==u.STATUS,h.DEF,1),new Q(O.WIMP_OUT,7).attr(As).edgeCase(),new Q(O.EMERGENCY_EXIT,7).attr(As).edgeCase(),new Q(O.WATER_COMPACTION,7).attr(OO,(t,E,R)=>E.getMoveType(R)===L.WATER&&R.category!==u.STATUS,h.DEF,2),new Q(O.MERCILESS,7).attr(Ol,(t,E,R)=>{var I,N;return((I=E==null?void 0:E.status)==null?void 0:I.effect)===J.TOXIC||((N=E==null?void 0:E.status)==null?void 0:N.effect)===J.POISON}),new Q(O.SHIELDS_DOWN,7).attr(fO,()=>0).attr(TL,t=>t.formIndex%7+(t.getHpRatio()<=.5?7:0)).attr(KI,t=>t.formIndex%7+(t.getHpRatio()<=.5?7:0)).conditionalAttr(t=>t.formIndex!==7,dR).conditionalAttr(t=>t.formIndex!==7,wO,Y.DROWSY).attr(it).attr(aR).uncopiable().unreplaceable().unsuppressable().bypassFaint(),new Q(O.STAKEOUT,7).attr(ht,(t,E,R)=>!!(E!=null&&E.turnData.switchedInThisTurn),2),new Q(O.WATER_BUBBLE,7).attr(sL,L.FIRE,.5).attr(mO,L.WATER,2).attr(dR,J.BURN).attr(II,J.BURN).ignorable(),new Q(O.STEELWORKER,7).attr(mO,L.STEEL),new Q(O.BERSERK,7).attr(mT,(t,E,R)=>R.category!==u.STATUS,.5,[h.SPATK],1).condition(Hi()),new Q(O.SLUSH_RUSH,7).attr(OE,h.SPD,2).condition(Bt(X.HAIL,X.SNOW)),new Q(O.LONG_REACH,7).attr(Nl),new Q(O.LIQUID_VOICE,7).attr(TI,L.WATER,1,(t,E,R)=>R.hasFlag(je.SOUND_BASED)),new Q(O.TRIAGE,7).attr(lL,(t,E)=>E.hasFlag(je.TRIAGE_MOVE),3),new Q(O.GALVANIZE,7).attr(TI,L.ELECTRIC,1.2,(t,E,R)=>R.type===L.NORMAL),new Q(O.SURGE_SURFER,7).conditionalAttr(ci($e.ELECTRIC),OE,h.SPD,2),new Q(O.SCHOOLING,7).attr(fO,()=>0).attr(TL,t=>t.level<20||t.getHpRatio()<=.25?0:1).attr(KI,t=>t.level<20||t.getHpRatio()<=.25?0:1).attr(it).uncopiable().unreplaceable().unsuppressable().bypassFaint(),new Q(O.DISGUISE,7).attr(aR).attr(it).conditionalAttr(t=>t.formIndex===0,dI,Y.DISGUISE,0,!1).attr(dl,(t,E,R)=>!!t.getTag(Y.DISGUISE)&&t.getMoveEffectiveness(E,R)>0,0,Y.DISGUISE,(t,E)=>D.t("abilityTriggers:disguiseAvoidedDamage",{pokemonNameWithAffix:Z(t),abilityName:E}),t=>uA(t.getMaxHp()/8)).attr(fO,()=>0).uncopiable().unreplaceable().unsuppressable().bypassFaint().ignorable(),new Q(O.BATTLE_BOND,7).attr(E_,()=>2).attr(fO,()=>1).attr(it).uncopiable().unreplaceable().unsuppressable().bypassFaint(),new Q(O.POWER_CONSTRUCT,7).conditionalAttr(t=>t.formIndex===2||t.formIndex===4,fO,()=>2).conditionalAttr(t=>t.formIndex===3||t.formIndex===5,fO,()=>3).conditionalAttr(t=>t.formIndex===2||t.formIndex===4,TL,t=>t.getHpRatio()<=.5||t.getFormKey()==="complete"?4:2).conditionalAttr(t=>t.formIndex===2||t.formIndex===4,KI,t=>t.getHpRatio()<=.5||t.getFormKey()==="complete"?4:2).conditionalAttr(t=>t.formIndex===3||t.formIndex===5,TL,t=>t.getHpRatio()<=.5||t.getFormKey()==="10-complete"?5:3).conditionalAttr(t=>t.formIndex===3||t.formIndex===5,KI,t=>t.getHpRatio()<=.5||t.getFormKey()==="10-complete"?5:3).attr(it).uncopiable().unreplaceable().unsuppressable().bypassFaint(),new Q(O.CORROSION,7).attr(fl,[J.POISON,J.TOXIC],[L.STEEL,L.POISON]).edgeCase(),new Q(O.COMATOSE,7).attr(dR,..._T()).attr(wO,Y.DROWSY).uncopiable().unreplaceable().unsuppressable(),new Q(O.QUEENLY_MAJESTY,7).attr(ES).ignorable(),new Q(O.INNARDS_OUT,7).attr(W_).bypassFaint(),new Q(O.DANCER,7).attr(f_),new Q(O.BATTERY,7).attr(Er,[u.SPECIAL],1.3),new Q(O.FLUFFY,7).attr(KR,(t,E,R)=>R.doesFlagEffectApply({flag:je.MAKES_CONTACT,user:E,target:t}),.5).attr(KR,(t,E,R)=>E.getMoveType(R)===L.FIRE,2).ignorable(),new Q(O.DAZZLING,7).attr(ES).ignorable(),new Q(O.SOUL_HEART,7).attr(t_,h.SPATK,1),new Q(O.TANGLING_HAIR,7).attr(OO,(t,E,R)=>R.doesFlagEffectApply({flag:je.MAKES_CONTACT,user:E,target:t}),h.SPD,-1,!1),new Q(O.RECEIVER,7).attr(XC).uncopiable(),new Q(O.POWER_OF_ALCHEMY,7).attr(XC).uncopiable(),new Q(O.BEAST_BOOST,7).attr(SL,t=>{let E,R=0;for(const I of mL){const N=t.getStat(I,!1);N>R&&(E=I,R=N)}return E},1),new Q(O.RKS_SYSTEM,7).attr(it).uncopiable().unreplaceable().unsuppressable(),new Q(O.ELECTRIC_SURGE,7).attr(LN,$e.ELECTRIC).attr(NN,$e.ELECTRIC),new Q(O.PSYCHIC_SURGE,7).attr(LN,$e.PSYCHIC).attr(NN,$e.PSYCHIC),new Q(O.MISTY_SURGE,7).attr(LN,$e.MISTY).attr(NN,$e.MISTY),new Q(O.GRASSY_SURGE,7).attr(LN,$e.GRASSY).attr(NN,$e.GRASSY),new Q(O.FULL_METAL_BODY,7).attr(sO),new Q(O.SHADOW_SHIELD,7).attr(KR,(t,E,R)=>t.isFullHp(),.5),new Q(O.PRISM_ARMOR,7).attr(KR,(t,E,R)=>t.getMoveEffectiveness(E,R)>=2,.75),new Q(O.NEUROFORCE,7).attr(ht,(t,E,R)=>((E==null?void 0:E.getMoveEffectiveness(t,R))??1)>=2,1.25),new Q(O.INTREPID_SWORD,8).attr(UN,[h.ATK],1,!0),new Q(O.DAUNTLESS_SHIELD,8).attr(UN,[h.DEF],1,!0),new Q(O.LIBERO,8).attr(dN),new Q(O.BALL_FETCH,8).attr(h_).condition(Ev(O.BALL_FETCH)),new Q(O.COTTON_DOWN,8).attr(OO,(t,E,R)=>R.category!==u.STATUS,h.SPD,-1,!1,!0).bypassFaint(),new Q(O.PROPELLER_TAIL,8).attr(KN),new Q(O.MIRROR_ARMOR,8).attr(jC).ignorable(),new Q(O.GULP_MISSILE,8).attr(aR).attr(it).unsuppressable().uncopiable().unreplaceable().bypassFaint(),new Q(O.STALWART,8).attr(KN),new Q(O.STEAM_ENGINE,8).attr(OO,(t,E,R)=>{const I=E.getMoveType(R);return R.category!==u.STATUS&&(I===L.FIRE||I===L.WATER)},h.SPD,6),new Q(O.PUNK_ROCK,8).attr(ht,(t,E,R)=>R.hasFlag(je.SOUND_BASED),1.3).attr(KR,(t,E,R)=>R.hasFlag(je.SOUND_BASED),.5).ignorable(),new Q(O.SAND_SPIT,8).attr(k0,X.SANDSTORM,(t,E,R)=>R.category!==u.STATUS).bypassFaint(),new Q(O.ICE_SCALES,8).attr(KR,(t,E,R)=>R.category===u.SPECIAL,.5).ignorable(),new Q(O.RIPEN,8).attr(RS),new Q(O.ICE_FACE,8).attr(aR).attr(it).conditionalAttr(t=>t.formIndex===0,dI,Y.ICE_FACE,0,!1).conditionalAttr(Bt(X.HAIL,X.SNOW),dI,Y.ICE_FACE,0).attr(Tl,Y.ICE_FACE,0,X.HAIL,X.SNOW).attr(dl,(t,E,R)=>R.category===u.PHYSICAL&&!!t.getTag(Y.ICE_FACE),0,Y.ICE_FACE,(t,E)=>D.t("abilityTriggers:iceFaceAvoidedDamage",{pokemonNameWithAffix:Z(t),abilityName:E})).attr(fO,()=>0).uncopiable().unreplaceable().unsuppressable().bypassFaint().ignorable(),new Q(O.POWER_SPOT,8).attr(Er,[u.SPECIAL,u.PHYSICAL],1.3),new Q(O.MIMICRY,8).attr(Fl),new Q(O.SCREEN_CLEANER,8).attr(R_,[oe.AURORA_VEIL,oe.LIGHT_SCREEN,oe.REFLECT]),new Q(O.STEELY_SPIRIT,8).attr(bC,L.STEEL),new Q(O.PERISH_BODY,8).attr(Z0,4).bypassFaint(),new Q(O.WANDERING_SPIRIT,8).attr(X0).bypassFaint().edgeCase(),new Q(O.GORILLA_TACTICS,8).attr($0),new Q(O.NEUTRALIZING_GAS,8).attr(O_,!0,oe.NEUTRALIZING_GAS,0).attr(FL).uncopiable().attr(aR).bypassFaint(),new Q(O.PASTEL_VEIL,8).attr($C,J.POISON,J.TOXIC).attr(hS,J.POISON,J.TOXIC).ignorable(),new Q(O.HUNGER_SWITCH,8).attr(KI,t=>t.getFormKey()?0:1).attr(KI,t=>t.getFormKey()?1:0).attr(aR).attr(it).condition(t=>!t.isTerastallized).uncopiable().unreplaceable(),new Q(O.QUICK_DRAW,8).attr(v_,30),new Q(O.UNSEEN_FIST,8).attr(hl),new Q(O.CURIOUS_MEDICINE,8).attr(L_),new Q(O.TRANSISTOR,8).attr(mO,L.ELECTRIC,1.3),new Q(O.DRAGONS_MAW,8).attr(mO,L.DRAGON),new Q(O.CHILLING_NEIGH,8).attr(SL,h.ATK,1),new Q(O.GRIM_NEIGH,8).attr(SL,h.SPATK,1),new Q(O.AS_ONE_GLASTRIER,8).attr(nR,t=>D.t("abilityTriggers:postSummonAsOneGlastrier",{pokemonNameWithAffix:Z(t)})).attr(wT).attr(SL,h.ATK,1).uncopiable().unreplaceable().unsuppressable(),new Q(O.AS_ONE_SPECTRIER,8).attr(nR,t=>D.t("abilityTriggers:postSummonAsOneSpectrier",{pokemonNameWithAffix:Z(t)})).attr(wT).attr(SL,h.SPATK,1).uncopiable().unreplaceable().unsuppressable(),new Q(O.LINGERING_AROMA,9).attr(yC,O.LINGERING_AROMA).bypassFaint(),new Q(O.SEED_SOWER,9).attr(V0,$e.GRASSY).bypassFaint(),new Q(O.THERMAL_EXCHANGE,9).attr(OO,(t,E,R)=>E.getMoveType(R)===L.FIRE&&R.category!==u.STATUS,h.ATK,1).attr(dR,J.BURN).attr(II,J.BURN).ignorable(),new Q(O.ANGER_SHELL,9).attr(mT,(t,E,R)=>R.category!==u.STATUS,.5,[h.ATK,h.SPATK,h.SPD],1).attr(mT,(t,E,R)=>R.category!==u.STATUS,.5,[h.DEF,h.SPDEF],-1).condition(Hi()),new Q(O.PURIFYING_SALT,9).attr(dR).attr(sL,L.GHOST,.5).ignorable(),new Q(O.WELL_BAKED_BODY,9).attr(IN,L.FIRE,h.DEF,2).ignorable(),new Q(O.WIND_RIDER,9).attr(p0,(t,E,R)=>t!==E&&R.hasFlag(je.WIND_MOVE)&&R.category!==u.STATUS,h.ATK,1).attr(p_,oe.TAILWIND).ignorable(),new Q(O.GUARD_DOG,9).attr(Or,[h.ATK],1,!0).attr(bL).ignorable(),new Q(O.ROCKY_PAYLOAD,9).attr(mO,L.ROCK),new Q(O.WIND_POWER,9).attr(gC,(t,E,R)=>R.hasFlag(je.WIND_MOVE),Y.CHARGED),new Q(O.ZERO_TO_HERO,9).uncopiable().unreplaceable().unsuppressable().attr(aR).attr(it).attr(fO,()=>0).attr(r_,t=>t.isFainted()?t.formIndex:1).bypassFaint(),new Q(O.COMMANDER,9).attr(HS).attr(ps).uncopiable().unreplaceable().edgeCase(),new Q(O.ELECTROMORPHOSIS,9).attr(gC,(t,E,R)=>R.category!==u.STATUS,Y.CHARGED),new Q(O.PROTOSYNTHESIS,9).conditionalAttr(Bt(X.SUNNY,X.HARSH_SUN),dI,Y.PROTOSYNTHESIS,0,!0).attr(Tl,Y.PROTOSYNTHESIS,0,X.SUNNY,X.HARSH_SUN).uncopiable().attr(aR),new Q(O.QUARK_DRIVE,9).conditionalAttr(ci($e.ELECTRIC),dI,Y.QUARK_DRIVE,0,!0).attr(P_,Y.QUARK_DRIVE,0,$e.ELECTRIC).uncopiable().attr(aR),new Q(O.GOOD_AS_GOLD,9).attr(gI,(t,E,R)=>t!==E&&R.category===u.STATUS&&![ee.ENEMY_SIDE,ee.BOTH_SIDES,ee.USER_SIDE].includes(R.moveTarget)).ignorable(),new Q(O.VESSEL_OF_RUIN,9).attr(oN,h.SPATK,.75).attr(nR,t=>D.t("abilityTriggers:postSummonVesselOfRuin",{pokemonNameWithAffix:Z(t),statName:D.t(et(h.SPATK))})).ignorable(),new Q(O.SWORD_OF_RUIN,9).attr(oN,h.DEF,.75).attr(nR,t=>D.t("abilityTriggers:postSummonSwordOfRuin",{pokemonNameWithAffix:Z(t),statName:D.t(et(h.DEF))})),new Q(O.TABLETS_OF_RUIN,9).attr(oN,h.ATK,.75).attr(nR,t=>D.t("abilityTriggers:postSummonTabletsOfRuin",{pokemonNameWithAffix:Z(t),statName:D.t(et(h.ATK))})).ignorable(),new Q(O.BEADS_OF_RUIN,9).attr(oN,h.SPDEF,.75).attr(nR,t=>D.t("abilityTriggers:postSummonBeadsOfRuin",{pokemonNameWithAffix:Z(t),statName:D.t(et(h.SPDEF))})),new Q(O.ORICHALCUM_PULSE,9).attr(OI,X.SUNNY).attr(LI,X.SUNNY).conditionalAttr(Bt(X.SUNNY,X.HARSH_SUN),OE,h.ATK,4/3),new Q(O.HADRON_ENGINE,9).attr(LN,$e.ELECTRIC).attr(NN,$e.ELECTRIC).conditionalAttr(ci($e.ELECTRIC),OE,h.SPATK,4/3),new Q(O.OPPORTUNIST,9).attr(Cl),new Q(O.CUD_CHEW,9).attr(u_),new Q(O.SHARPNESS,9).attr(ht,(t,E,R)=>R.hasFlag(je.SLICING_MOVE),1.5),new Q(O.SUPREME_OVERLORD,9).attr(J0,(t,E,R)=>1+.1*Math.min(t.isPlayer()?s.arena.playerFaints:s.currentBattle.enemyFaints,5)).partial(),new Q(O.COSTAR,9).attr(S_),new Q(O.TOXIC_DEBRIS,9).attr(y0,(t,E,R)=>R.category===u.PHYSICAL,oe.TOXIC_SPIKES).bypassFaint(),new Q(O.ARMOR_TAIL,9).attr(ES).ignorable(),new Q(O.EARTH_EATER,9).attr(ws,L.GROUND).ignorable(),new Q(O.MYCELIUM_MIGHT,9).attr(lL,(t,E)=>E.category===u.STATUS,-.2).attr(x_,(t,E)=>E.category===u.STATUS).attr(pI,(t,E)=>E.category===u.STATUS),new Q(O.MINDS_EYE,9).attr(FS,L.GHOST,[L.NORMAL,L.FIGHTING]).attr(sO,h.ACC).attr(KL,[h.EVA]).ignorable(),new Q(O.SUPERSWEET_SYRUP,9).attr(UN,[h.EVA],-1),new Q(O.HOSPITALITY,9).attr(I_,4,!0),new Q(O.TOXIC_CHAIN,9).attr(ZC,!1,30,J.TOXIC),new Q(O.EMBODY_ASPECT_TEAL,9).attr(ys,[h.SPD],1).uncopiable().unreplaceable().attr(aR),new Q(O.EMBODY_ASPECT_WELLSPRING,9).attr(ys,[h.SPDEF],1).uncopiable().unreplaceable().attr(aR),new Q(O.EMBODY_ASPECT_HEARTHFLAME,9).attr(ys,[h.ATK],1).uncopiable().unreplaceable().attr(aR),new Q(O.EMBODY_ASPECT_CORNERSTONE,9).attr(ys,[h.DEF],1).uncopiable().unreplaceable().attr(aR),new Q(O.TERA_SHIFT,9).attr(TL,t=>t.getFormKey()?0:1).uncopiable().unreplaceable().unsuppressable().attr(aR).attr(it),new Q(O.TERA_SHELL,9).attr(YC).uncopiable().unreplaceable().ignorable(),new Q(O.TERAFORM_ZERO,9).attr(F0,[X.SUNNY,X.RAIN,X.SANDSTORM,X.HAIL,X.SNOW,X.FOG,X.HEAVY_RAIN,X.HARSH_SUN,X.STRONG_WINDS]).attr(Y0,[$e.MISTY,$e.ELECTRIC,$e.GRASSY,$e.PSYCHIC]).uncopiable().unreplaceable().condition(Ev(O.TERAFORM_ZERO)),new Q(O.POISON_PUPPETEER,9).uncopiable().unreplaceable().attr(el,J.POISON,J.TOXIC))}r(tX,"initAbilities");var Yt=(t=>(t[t.FAINT=0]="FAINT",t[t.MOVE=1]="MOVE",t[t.PRE_MOVE=2]="PRE_MOVE",t[t.AFTER_MOVE=3]="AFTER_MOVE",t[t.MOVE_EFFECT=4]="MOVE_EFFECT",t[t.TURN_END=5]="TURN_END",t[t.HIT=6]="HIT",t[t.AFTER_HIT=7]="AFTER_HIT",t[t.CUSTOM=8]="CUSTOM",t))(Yt||{});const D5=class D5{constructor(E,R,I,N,S,T=!1){this.tagType=E,this.lapseTypes=Array.isArray(R)?R:[R],this.turnCount=I,this.sourceMove=N,this.sourceId=S,this.isBatonPassable=T}canAdd(E){return!0}onAdd(E){}onRemove(E){}onOverlap(E){}lapse(E,R){return--this.turnCount>0}getDescriptor(){return""}isSourceLinked(){return!1}getMoveName(){return this.sourceMove?Ke[this.sourceMove].name:null}loadTag(E){this.turnCount=E.turnCount,this.sourceMove=E.sourceMove,this.sourceId=E.sourceId}getSourcePokemon(){return this.sourceId?s.getPokemonById(this.sourceId):null}};r(D5,"BattlerTag");let _A=D5;const M5=class M5 extends _A{constructor(E,R,I,N,S){super(E,R,I,N,S)}lapse(E,R){if(R===2){const I=s.getCurrentPhase(),N=I.move;return this.isMoveRestricted(N.moveId,E)&&(this.interruptedText(E,N.moveId)&&s.queueMessage(this.interruptedText(E,N.moveId)),I.cancel()),!0}return super.lapse(E,R)}isMoveTargetRestricted(E,R,I){return!1}interruptedText(E,R){return""}};r(M5,"MoveRestrictionBattlerTag");let uO=M5;const P5=class P5 extends uO{constructor(){super(Y.THROAT_CHOPPED,[5,2],2,A.THROAT_CHOP)}isMoveRestricted(E){return Ke[E].hasFlag(je.SOUND_BASED)}selectionDeniedText(E,R){return D.t("battle:moveCannotBeSelected",{moveName:Ke[R].name})}interruptedText(E,R){return D.t("battle:throatChopInterruptedMove",{pokemonName:Z(E)})}};r(P5,"ThroatChoppedTag");let X_=P5;const G5=class G5 extends uO{constructor(E){super(Y.DISABLED,[2,5],4,A.DISABLE,E),this.moveId=A.NONE}isMoveRestricted(E){return E===this.moveId}onAdd(E){super.onAdd(E);const R=E.getLastXMoves(-1).find(I=>!I.virtual);Ne(R)||R.move===A.STRUGGLE||R.move===A.NONE||(this.moveId=R.move,s.queueMessage(D.t("battlerTags:disabledOnAdd",{pokemonNameWithAffix:Z(E),moveName:Ke[this.moveId].name})))}onRemove(E){super.onRemove(E),s.queueMessage(D.t("battlerTags:disabledLapse",{pokemonNameWithAffix:Z(E),moveName:Ke[this.moveId].name}))}selectionDeniedText(E,R){return D.t("battle:moveDisabled",{moveName:Ke[R].name})}interruptedText(E,R){return D.t("battle:disableInterruptedMove",{pokemonNameWithAffix:Z(E),moveName:Ke[R].name})}loadTag(E){super.loadTag(E),this.moveId=E.moveId}};r(G5,"DisabledTag");let Q_=G5;const sM=class sM extends uO{constructor(){super(Y.GORILLA_TACTICS,8,0),this.moveId=A.NONE}isMoveRestricted(E){return E!==this.moveId}canAdd(E){return this.getLastValidMove(E)!==void 0&&!E.getTag(sM)}onAdd(E){const R=this.getLastValidMove(E);R&&(this.moveId=R,E.setStat(h.ATK,E.getStat(h.ATK,!1)*1.5,!1))}loadTag(E){super.loadTag(E),this.moveId=E.moveId}selectionDeniedText(E,R){return D.t("battle:canOnlyUseMove",{moveName:Ke[this.moveId].name,pokemonName:Z(E)})}getLastValidMove(E){const R=E.getLastXMoves().find(I=>I.move!==A.NONE&&I.move!==A.STRUGGLE&&!I.virtual);return R==null?void 0:R.move}};r(sM,"GorillaTacticsTag");let J_=sM;const _5=class _5 extends _A{constructor(E){super(Y.RECHARGING,[2,5],2,E)}onAdd(E){super.onAdd(E),E.getMoveQueue().push({move:A.NONE,targets:[]})}lapse(E,R){return R===2&&(s.queueMessage(D.t("battlerTags:rechargingLapse",{pokemonNameWithAffix:Z(E)})),s.getCurrentPhase().cancel(),E.getMoveQueue().shift()),super.lapse(E,R)}};r(_5,"RechargingTag");let $_=_5;const u5=class u5 extends _A{constructor(){super(Y.BEAK_BLAST_CHARGING,[2,5,7],1,A.BEAK_BLAST)}onAdd(E){new _r(XI.BEAK_BLAST_CHARGING,this.sourceMove,E).play(),s.queueMessage(D.t("moveTriggers:startedHeatingUpBeak",{pokemonName:Z(E)}))}lapse(E,R){if(R===7){const I=oc();return I!=null&&I.move.doesFlagEffectApply({flag:je.MAKES_CONTACT,user:I.attacker,target:E})&&I.attacker.trySetStatus(J.BURN,!0,E),!0}return super.lapse(E,R)}};r(u5,"BeakBlastChargingTag");let q_=u5;const H5=class H5 extends _A{constructor(){super(Y.SHELL_TRAP,[5,7],1),this.activated=!1}onAdd(E){s.queueMessage(D.t("moveTriggers:setUpShellTrap",{pokemonName:Z(E)}))}lapse(E,R){if(R===7){const I=oc();if((I==null?void 0:I.move.category)===u.PHYSICAL&&E.isOpponent(I.attacker)){const N=s.phaseQueue.findIndex(T=>T instanceof lE&&T.pokemon===E),S=s.phaseQueue.findIndex(T=>T instanceof lE);if(N!==-1&&N!==S){const T=s.phaseQueue.splice(N,1)[0];s.prependToPhase(T,lE)}this.activated=!0}return!0}return super.lapse(E,R)}};r(H5,"ShellTrapTag");let Wl=H5;const SM=class SM extends _A{constructor(E,R,I,N,S){super(E,R,I,N,S,!0)}canAdd(E){const R=s.getPokemonById(this.sourceId),I=Ke[this.sourceMove],N=E.isOfType(L.GHOST),S=E.getTag(SM),T=I.hitsSubstitute(R,E);return!S&&!N&&!T}onAdd(E){super.onAdd(E),s.queueMessage(this.getTrapMessage(E))}onRemove(E){super.onRemove(E),s.queueMessage(D.t("battlerTags:trappedOnRemove",{pokemonNameWithAffix:Z(E),moveName:this.getMoveName()}))}getDescriptor(){return D.t("battlerTags:trappedDesc")}isSourceLinked(){return!0}getTrapMessage(E){return D.t("battlerTags:trappedOnAdd",{pokemonNameWithAffix:Z(E)})}};r(SM,"TrappedTag");let eO=SM;const c5=class c5 extends eO{constructor(E){super(Y.NO_RETREAT,8,0,A.NO_RETREAT,E)}canAdd(E){return!E.getTag(eO)}};r(c5,"NoRetreatTag");let z_=c5;const B5=class B5 extends _A{constructor(E){super(Y.FLINCHED,[2,5],0,E)}onAdd(E){super.onAdd(E),sA(Hl,E,null)}lapse(E,R){return R===2&&(s.getCurrentPhase().cancel(),s.queueMessage(D.t("battlerTags:flinchedLapse",{pokemonNameWithAffix:Z(E)}))),super.lapse(E,R)}getDescriptor(){return D.t("battlerTags:flinchedDesc")}};r(B5,"FlinchedTag");let j_=B5;const h5=class h5 extends _A{constructor(E){super(Y.INTERRUPTED,2,0,E)}canAdd(E){return!!E.getTag(Y.FLYING)}onAdd(E){super.onAdd(E),E.getMoveQueue().shift(),E.pushMoveHistory({move:A.NONE,result:EE.OTHER,targets:[]})}lapse(E,R){return s.getCurrentPhase().cancel(),super.lapse(E,R)}};r(h5,"InterruptedTag");let eu=h5;const f5=class f5 extends _A{constructor(E,R){super(Y.CONFUSED,1,E,R,void 0,!0)}canAdd(E){var R;return((R=s.arena.terrain)==null?void 0:R.terrainType)!==$e.MISTY||!E.isGrounded()}onAdd(E){super.onAdd(E),s.unshiftPhase(new Wt(E.getBattlerIndex(),void 0,XA.CONFUSION)),s.queueMessage(D.t("battlerTags:confusedOnAdd",{pokemonNameWithAffix:Z(E)}))}onRemove(E){super.onRemove(E),s.queueMessage(D.t("battlerTags:confusedOnRemove",{pokemonNameWithAffix:Z(E)}))}onOverlap(E){super.onOverlap(E),s.queueMessage(D.t("battlerTags:confusedOnOverlap",{pokemonNameWithAffix:Z(E)}))}lapse(E,R){if(!(R!==8&&super.lapse(E,R)))return!1;if(s.queueMessage(D.t("battlerTags:confusedLapse",{pokemonNameWithAffix:Z(E)})),s.unshiftPhase(new Wt(E.getBattlerIndex(),void 0,XA.CONFUSION)),E.randBattleSeedInt(3)===0||Ze.CONFUSION_ACTIVATION_OVERRIDE===!0){const N=E.getEffectiveStat(h.ATK),S=E.getEffectiveStat(h.DEF),T=uA(((2*E.level/5+2)*40*N/S/50+2)*(E.randBattleSeedIntRange(85,100)/100));s.queueMessage(D.t("battlerTags:confusedLapseHurtItself")),E.damageAndUpdate(T,{result:CA.CONFUSION}),s.getCurrentPhase().cancel()}return!0}getDescriptor(){return D.t("battlerTags:confusedDesc")}};r(f5,"ConfusedTag");let Au=f5;const d5=class d5 extends _A{constructor(E,R){super(Y.DESTINY_BOND,2,1,E,R,!0)}lapse(E,R){if(R!==8)return super.lapse(E,R);const I=this.sourceId?s.getPokemonById(this.sourceId):null;return I!=null&&I.isFainted()?(I==null?void 0:I.getAlly())===E?!1:E.isBossImmune()?(s.queueMessage(D.t("battlerTags:destinyBondLapseIsBoss",{pokemonNameWithAffix:Z(E)})),!1):(s.queueMessage(D.t("battlerTags:destinyBondLapse",{pokemonNameWithAffix:Z(I),pokemonNameWithAffix2:Z(E)})),E.damageAndUpdate(E.hp,{result:CA.INDIRECT_KO,ignoreSegments:!0}),!1):!0}};r(d5,"DestinyBondTag");let Eu=d5;const K5=class K5 extends _A{constructor(E,R){super(Y.INFATUATED,1,1,E,R)}canAdd(E){if(this.sourceId){const R=s.getPokemonById(this.sourceId);return R?E.isOppositeGender(R):(console.warn("canAdd: this.sourceId is not a valid pokemon id!",this.sourceId),!1)}return console.warn("canAdd: this.sourceId is undefined"),!1}onAdd(E){super.onAdd(E),s.queueMessage(D.t("battlerTags:infatuatedOnAdd",{pokemonNameWithAffix:Z(E),sourcePokemonName:Z(s.getPokemonById(this.sourceId)??void 0)}))}onOverlap(E){super.onOverlap(E),s.queueMessage(D.t("battlerTags:infatuatedOnOverlap",{pokemonNameWithAffix:Z(E)}))}lapse(E,R){const I=R!==8||super.lapse(E,R);return I&&(s.queueMessage(D.t("battlerTags:infatuatedLapse",{pokemonNameWithAffix:Z(E),sourcePokemonName:Z(s.getPokemonById(this.sourceId)??void 0)})),s.unshiftPhase(new Wt(E.getBattlerIndex(),void 0,XA.ATTRACT)),E.randBattleSeedInt(2)&&(s.queueMessage(D.t("battlerTags:infatuatedLapseImmobilize",{pokemonNameWithAffix:Z(E)})),s.getCurrentPhase().cancel())),I}onRemove(E){super.onRemove(E),s.queueMessage(D.t("battlerTags:infatuatedOnRemove",{pokemonNameWithAffix:Z(E)}))}isSourceLinked(){return!0}getDescriptor(){return D.t("battlerTags:infatuatedDesc")}};r(K5,"InfatuatedTag");let tu=K5;const F5=class F5 extends _A{constructor(E){super(Y.SEEDED,5,1,A.LEECH_SEED,E,!0)}loadTag(E){super.loadTag(E),this.sourceIndex=E.sourceIndex}canAdd(E){return!E.isOfType(L.GRASS)}onAdd(E){super.onAdd(E),s.queueMessage(D.t("battlerTags:seededOnAdd",{pokemonNameWithAffix:Z(E)})),this.sourceIndex=s.getPokemonById(this.sourceId).getBattlerIndex()}lapse(E,R){const I=R!==8||super.lapse(E,R);if(I){const N=E.getOpponents().find(S=>S.getBattlerIndex()===this.sourceIndex);if(N){const S=new SA(!1);if(sA($E,E,S),!S.value){s.unshiftPhase(new Wt(N.getBattlerIndex(),E.getBattlerIndex(),XA.LEECH_SEED));const T=E.damageAndUpdate(uA(E.getMaxHp()/8),{result:CA.INDIRECT}),i=E.hasAbilityWithAttr(qa,!1);s.unshiftPhase(new Dt(N.getBattlerIndex(),i?T*-1:T,i?D.t("battlerTags:seededLapseShed",{pokemonNameWithAffix:Z(E)}):D.t("battlerTags:seededLapse",{pokemonNameWithAffix:Z(E)}),!1,!0))}}}return I}getDescriptor(){return D.t("battlerTags:seedDesc")}};r(F5,"SeedTag");let Ru=F5;const Y5=class Y5 extends _A{constructor(){super(Y.POWDER,[2,5],1)}onAdd(E){super.onAdd(E),s.queueMessage(D.t("battlerTags:powderOnAdd",{pokemonNameWithAffix:Z(E)}))}lapse(E,R){if(R===2){const I=s.getCurrentPhase();if(I instanceof lE){const N=I.move.getMove(),S=s.arena.weather;if(E.getMoveType(N)===L.FIRE&&!(S&&S.weatherType===X.HEAVY_RAIN&&!S.isEffectSuppressed())){I.fail(),I.showMoveText(),s.unshiftPhase(new Wt(E.getBattlerIndex(),E.getBattlerIndex(),XA.POWDER));const T=new SA(!1);sA($E,E,T),T.value||E.damageAndUpdate(Math.floor(E.getMaxHp()/4),{result:CA.INDIRECT}),s.queueMessage(D.t("battlerTags:powderLapse",{moveName:N.name}))}}return!0}return super.lapse(E,R)}};r(Y5,"PowderTag");let Ou=Y5;const W5=class W5 extends _A{constructor(){super(Y.NIGHTMARE,5,1,A.NIGHTMARE)}onAdd(E){super.onAdd(E),s.queueMessage(D.t("battlerTags:nightmareOnAdd",{pokemonNameWithAffix:Z(E)}))}onOverlap(E){super.onOverlap(E),s.queueMessage(D.t("battlerTags:nightmareOnOverlap",{pokemonNameWithAffix:Z(E)}))}lapse(E,R){const I=R!==8||super.lapse(E,R);if(I){s.queueMessage(D.t("battlerTags:nightmareLapse",{pokemonNameWithAffix:Z(E)})),s.unshiftPhase(new Wt(E.getBattlerIndex(),void 0,XA.CURSE));const N=new SA(!1);sA($E,E,N),N.value||E.damageAndUpdate(uA(E.getMaxHp()/4),{result:CA.INDIRECT})}return I}getDescriptor(){return D.t("battlerTags:nightmareDesc")}};r(W5,"NightmareTag");let Iu=W5;const m5=class m5 extends _A{constructor(E,R,I){super(Y.FRENZY,8,E,R,I)}onRemove(E){super.onRemove(E),this.turnCount<2&&E.addTag(Y.CONFUSED,E.randBattleSeedIntRange(2,4))}};r(m5,"FrenzyTag");let Lu=m5;const g5=class g5 extends uO{constructor(E){super(Y.ENCORE,[8,3],3,A.ENCORE,E)}loadTag(E){super.loadTag(E),this.moveId=E.moveId}canAdd(E){const R=E.getLastXMoves(1);if(!R.length)return!1;const I=R[0];if(!I.move||I.virtual)return!1;switch(I.move){case A.MIMIC:case A.MIRROR_MOVE:case A.TRANSFORM:case A.STRUGGLE:case A.SKETCH:case A.SLEEP_TALK:case A.ENCORE:return!1}return this.moveId=I.move,!0}onAdd(E){if(super.onRemove(E),s.queueMessage(D.t("battlerTags:encoreOnAdd",{pokemonNameWithAffix:Z(E)})),s.findPhase(I=>I instanceof lE&&I.pokemon===E)){const I=E.getMoveset().find(N=>N.moveId===this.moveId);if(I){const N=E.getLastXMoves(1)[0];s.tryReplacePhase(S=>S instanceof lE&&S.pokemon===E,new lE(E,N.targets??[],I))}}}lapse(E,R){if(R===8){const I=E.getMoveset().find(N=>N.moveId===this.moveId);return!!(I&&(I==null?void 0:I.getPpRatio())>0)}return super.lapse(E,R)}isMoveRestricted(E,R){return E!==this.moveId}selectionDeniedText(E,R){return D.t("battle:moveDisabled",{moveName:Ke[R].name})}onRemove(E){super.onRemove(E),s.queueMessage(D.t("battlerTags:encoreOnRemove",{pokemonNameWithAffix:Z(E)}))}};r(g5,"EncoreTag");let ir=g5;const p5=class p5 extends _A{constructor(E){super(Y.HELPING_HAND,5,1,A.HELPING_HAND,E)}onAdd(E){s.queueMessage(D.t("battlerTags:helpingHandOnAdd",{pokemonNameWithAffix:Z(s.getPokemonById(this.sourceId)??void 0),pokemonName:Z(E)}))}};r(p5,"HelpingHandTag");let ml=p5;const y5=class y5 extends eO{constructor(E){super(Y.INGRAIN,5,1,A.INGRAIN,E)}canAdd(E){return!E.getTag(Y.TRAPPED)}lapse(E,R){const I=R!==8||super.lapse(E,R);return I&&s.unshiftPhase(new Dt(E.getBattlerIndex(),uA(E.getMaxHp()/16),D.t("battlerTags:ingrainLapse",{pokemonNameWithAffix:Z(E)}),!0)),I}getTrapMessage(E){return D.t("battlerTags:ingrainOnTrap",{pokemonNameWithAffix:Z(E)})}getDescriptor(){return D.t("battlerTags:ingrainDesc")}};r(y5,"IngrainTag");let Nu=y5;const w5=class w5 extends eO{constructor(E){super(Y.OCTOLOCK,5,1,A.OCTOLOCK,E)}lapse(E,R){return R!==8||super.lapse(E,R)?(s.unshiftPhase(new hA(E.getBattlerIndex(),!1,[h.DEF,h.SPDEF],-1)),!0):!1}};r(w5,"OctolockTag");let gl=w5;const V5=class V5 extends _A{constructor(){super(Y.AQUA_RING,5,1,A.AQUA_RING,void 0,!0)}onAdd(E){super.onAdd(E),s.queueMessage(D.t("battlerTags:aquaRingOnAdd",{pokemonNameWithAffix:Z(E)}))}lapse(E,R){const I=R!==8||super.lapse(E,R);return I&&s.unshiftPhase(new Dt(E.getBattlerIndex(),uA(E.getMaxHp()/16),D.t("battlerTags:aquaRingLapse",{moveName:this.getMoveName(),pokemonName:Z(E)}),!0)),I}};r(V5,"AquaRingTag");let su=V5;const v5=class v5 extends _A{constructor(){super(Y.MINIMIZED,5,1,A.MINIMIZE)}onAdd(E){super.onAdd(E)}lapse(E,R){return R!==8||super.lapse(E,R)}onRemove(E){super.onRemove(E)}};r(v5,"MinimizeTag");let Su=v5;const x5=class x5 extends _A{constructor(){super(Y.DROWSY,5,2,A.YAWN)}canAdd(E){var R;return((R=s.arena.terrain)==null?void 0:R.terrainType)!==$e.ELECTRIC||!E.isGrounded()}onAdd(E){super.onAdd(E),s.queueMessage(D.t("battlerTags:drowsyOnAdd",{pokemonNameWithAffix:Z(E)}))}lapse(E,R){return super.lapse(E,R)?!0:(E.trySetStatus(J.SLEEP,!0),!1)}getDescriptor(){return D.t("battlerTags:drowsyDesc")}};r(x5,"DrowsyTag");let Tu=x5;const b5=class b5 extends eO{constructor(E,R,I,N,S){super(E,5,I,N,S),this.commonAnim=R}loadTag(E){super.loadTag(E),this.commonAnim=E.commonAnim}canAdd(E){return!E.getTag(eO)&&!E.getTag(Y.SUBSTITUTE)}lapse(E,R){const I=super.lapse(E,R);if(I){s.queueMessage(D.t("battlerTags:damagingTrapLapse",{pokemonNameWithAffix:Z(E),moveName:this.getMoveName()})),s.unshiftPhase(new Wt(E.getBattlerIndex(),void 0,this.commonAnim));const N=new SA(!1);sA($E,E,N),N.value||E.damageAndUpdate(uA(E.getMaxHp()/8),{result:CA.INDIRECT})}return I}};r(b5,"DamagingTrapTag");let HO=b5;const Z5=class Z5 extends HO{constructor(E,R){super(Y.BIND,XA.BIND,E,A.BIND,R)}getTrapMessage(E){return D.t("battlerTags:bindOnTrap",{pokemonNameWithAffix:Z(E),sourcePokemonName:Z(s.getPokemonById(this.sourceId)??void 0),moveName:this.getMoveName()})}};r(Z5,"BindTag");let nu=Z5;const k5=class k5 extends HO{constructor(E,R){super(Y.WRAP,XA.WRAP,E,A.WRAP,R)}getTrapMessage(E){return D.t("battlerTags:wrapOnTrap",{pokemonNameWithAffix:Z(E),sourcePokemonName:Z(s.getPokemonById(this.sourceId)??void 0)})}};r(k5,"WrapTag");let au=k5;const X5=class X5 extends HO{constructor(E,R,I,N,S){super(E,R,I,N,S)}getTrapMessage(E){return D.t("battlerTags:vortexOnTrap",{pokemonNameWithAffix:Z(E)})}};r(X5,"VortexTrapTag");let pl=X5;const Q5=class Q5 extends pl{constructor(E,R){super(Y.FIRE_SPIN,XA.FIRE_SPIN,E,A.FIRE_SPIN,R)}};r(Q5,"FireSpinTag");let ru=Q5;const J5=class J5 extends pl{constructor(E,R){super(Y.WHIRLPOOL,XA.WHIRLPOOL,E,A.WHIRLPOOL,R)}};r(J5,"WhirlpoolTag");let iu=J5;const $5=class $5 extends HO{constructor(E,R){super(Y.CLAMP,XA.CLAMP,E,A.CLAMP,R)}getTrapMessage(E){return D.t("battlerTags:clampOnTrap",{sourcePokemonNameWithAffix:Z(s.getPokemonById(this.sourceId)??void 0),pokemonName:Z(E)})}};r($5,"ClampTag");let ou=$5;const q5=class q5 extends HO{constructor(E,R){super(Y.SAND_TOMB,XA.SAND_TOMB,E,A.SAND_TOMB,R)}getTrapMessage(E){return D.t("battlerTags:sandTombOnTrap",{pokemonNameWithAffix:Z(E),moveName:this.getMoveName()})}};r(q5,"SandTombTag");let Cu=q5;const z5=class z5 extends HO{constructor(E,R){super(Y.MAGMA_STORM,XA.MAGMA_STORM,E,A.MAGMA_STORM,R)}getTrapMessage(E){return D.t("battlerTags:magmaStormOnTrap",{pokemonNameWithAffix:Z(E)})}};r(z5,"MagmaStormTag");let lu=z5;const j5=class j5 extends HO{constructor(E,R){super(Y.SNAP_TRAP,XA.SNAP_TRAP,E,A.SNAP_TRAP,R)}getTrapMessage(E){return D.t("battlerTags:snapTrapOnTrap",{pokemonNameWithAffix:Z(E)})}};r(j5,"SnapTrapTag");let Uu=j5;const em=class em extends HO{constructor(E,R){super(Y.THUNDER_CAGE,XA.THUNDER_CAGE,E,A.THUNDER_CAGE,R)}getTrapMessage(E){return D.t("battlerTags:thunderCageOnTrap",{pokemonNameWithAffix:Z(E),sourcePokemonNameWithAffix:Z(s.getPokemonById(this.sourceId)??void 0)})}};r(em,"ThunderCageTag");let Du=em;const Am=class Am extends HO{constructor(E,R){super(Y.INFESTATION,XA.INFESTATION,E,A.INFESTATION,R)}getTrapMessage(E){return D.t("battlerTags:infestationOnTrap",{pokemonNameWithAffix:Z(E),sourcePokemonNameWithAffix:Z(s.getPokemonById(this.sourceId)??void 0)})}};r(Am,"InfestationTag");let Mu=Am;const Em=class Em extends _A{constructor(E,R=Y.PROTECTED){super(R,5,0,E)}onAdd(E){super.onAdd(E),s.queueMessage(D.t("battlerTags:protectedOnAdd",{pokemonNameWithAffix:Z(E)}))}lapse(E,R){if(R===8){new Rs(XA.PROTECT,E).play(),s.queueMessage(D.t("battlerTags:protectedLapse",{pokemonNameWithAffix:Z(E)}));const I=s.getCurrentPhase();return I instanceof jO&&I.stopMultiHit(E),!0}return super.lapse(E,R)}};r(Em,"ProtectedTag");let or=Em;const tm=class tm extends or{onContact(E,R){}lapse(E,R){const I=super.lapse(E,R),N=oc();return R===8&&N&&N.move.doesFlagEffectApply({flag:je.MAKES_CONTACT,user:N.attacker,target:E})&&this.onContact(N.attacker,E),I}};r(tm,"ContactProtectedTag");let yl=tm;const Rm=class Rm extends yl{constructor(E,R){super(E,Y.SPIKY_SHIELD),this.damageRatio=R}loadTag(E){super.loadTag(E),this.damageRatio=E.damageRatio}onContact(E,R){const I=new SA(!1);sA($E,R,I),I.value||E.damageAndUpdate(uA(E.getMaxHp()*(1/this.damageRatio)),{result:CA.INDIRECT})}};r(Rm,"ContactDamageProtectedTag");let Pu=Rm;const Om=class Om extends yl{};r(Om,"DamageProtectedTag");let WS=Om;const Im=class Im extends WS{constructor(E,R,I){super(E,R),this.statusEffect=I}onContact(E,R){E.trySetStatus(this.statusEffect,!0,R)}};r(Im,"ContactSetStatusProtectedTag");let wl=Im;const Lm=class Lm extends WS{constructor(E,R,I,N){super(E,R),this.stat=I,this.levels=N}loadTag(E){super.loadTag(E),this.stat=E.stat,this.levels=E.levels}onContact(E,R){s.unshiftPhase(new hA(E.getBattlerIndex(),!1,[this.stat],this.levels))}};r(Lm,"ContactStatStageChangeProtectedTag");let vT=Lm;const Nm=class Nm extends _A{constructor(E,R,I){super(E,R,0,I)}onAdd(E){super.onAdd(E),s.queueMessage(D.t("battlerTags:enduringOnAdd",{pokemonNameWithAffix:Z(E)}))}lapse(E,R){return R===8?(s.queueMessage(D.t("battlerTags:enduringLapse",{pokemonNameWithAffix:Z(E)})),!0):super.lapse(E,R)}};r(Nm,"EnduringTag");let Vl=Nm;const sm=class sm extends _A{constructor(E){super(Y.STURDY,5,0,E)}lapse(E,R){return R===8?(s.queueMessage(D.t("battlerTags:sturdyLapse",{pokemonNameWithAffix:Z(E)})),!0):super.lapse(E,R)}};r(sm,"SturdyTag");let Gu=sm;const Sm=class Sm extends _A{constructor(E){super(Y.PERISH_SONG,5,E,A.PERISH_SONG,void 0,!0)}canAdd(E){return!E.isBossImmune()}lapse(E,R){const I=super.lapse(E,R);return I?s.queueMessage(D.t("battlerTags:perishSongLapse",{pokemonNameWithAffix:Z(E),turnCount:this.turnCount})):E.damageAndUpdate(E.hp,{result:CA.INDIRECT_KO,ignoreSegments:!0}),I}};r(Sm,"PerishSongTag");let _u=Sm;const Tm=class Tm extends _A{constructor(E){super(Y.CENTER_OF_ATTENTION,5,1,E),this.powder=this.sourceMove===A.RAGE_POWDER}canAdd(E){return!(E.isPlayer()?s.getPlayerField():s.getEnemyField()).find(I=>I.getTag(Y.CENTER_OF_ATTENTION))}onAdd(E){super.onAdd(E),s.queueMessage(D.t("battlerTags:centerOfAttentionOnAdd",{pokemonNameWithAffix:Z(E)}))}};r(Tm,"CenterOfAttentionTag");let vl=Tm;const nm=class nm extends _A{constructor(E,R,I,N){super(E,I,N),this.ability=R}loadTag(E){super.loadTag(E),this.ability=E.ability}};r(nm,"AbilityBattlerTag");let mS=nm;const am=class am extends mS{constructor(){super(Y.UNBURDEN,O.UNBURDEN,8,1)}onAdd(E){super.onAdd(E)}onRemove(E){super.onRemove(E)}};r(am,"UnburdenTag");let uu=am;const rm=class rm extends mS{constructor(){super(Y.TRUANT,O.TRUANT,1,1)}lapse(E,R){if(!E.hasAbility(O.TRUANT))return super.lapse(E,R);const I=E.getAbility().id!==O.TRUANT,N=E.getLastXMoves().find(()=>!0);return N&&N.move!==A.NONE&&(s.getCurrentPhase().cancel(),s.queueAbilityDisplay(E,I,!0),s.queueMessage(D.t("battlerTags:truantLapse",{pokemonNameWithAffix:Z(E)})),s.queueAbilityDisplay(E,I,!1)),!0}};r(rm,"TruantTag");let Hu=rm;const im=class im extends mS{constructor(){super(Y.SLOW_START,O.SLOW_START,5,5)}onAdd(E){super.onAdd(E),s.queueMessage(D.t("battlerTags:slowStartOnAdd",{pokemonNameWithAffix:Z(E)}))}lapse(E,R){return E.hasAbility(this.ability)||(this.turnCount=1),super.lapse(E,R)}onRemove(E){super.onRemove(E),s.queueMessage(D.t("battlerTags:slowStartOnRemove",{pokemonNameWithAffix:Z(E)}),null,!1,null)}};r(im,"SlowStartTag");let cu=im;const om=class om extends mS{constructor(E,R){super(E,R,8,1)}loadTag(E){super.loadTag(E),this.stat=E.stat,this.multiplier=E.multiplier}onAdd(E){super.onAdd(E);let R;mL.map(I=>E.getEffectiveStat(I,void 0,void 0,void 0,void 0,void 0,void 0,void 0,!0)).reduce((I,N,S)=>N>I?(R=mL[S],N):I,0),R=R,this.stat=R,this.multiplier=this.stat===h.SPD?1.5:1.3,s.queueMessage(D.t("battlerTags:highestStatBoostOnAdd",{pokemonNameWithAffix:Z(E),statName:D.t(et(R))}),null,!1,null,!0)}onRemove(E){super.onRemove(E),s.queueMessage(D.t("battlerTags:highestStatBoostOnRemove",{pokemonNameWithAffix:Z(E),abilityName:qE[this.ability].name}))}};r(om,"HighestStatBoostTag");let Cr=om;const Cm=class Cm extends Cr{constructor(E,R,...I){super(E,R),this.weatherTypes=I}loadTag(E){super.loadTag(E),this.weatherTypes=E.weatherTypes.map(R=>R)}};r(Cm,"WeatherHighestStatBoostTag");let Bu=Cm;const lm=class lm extends Cr{constructor(E,R,...I){super(E,R),this.terrainTypes=I}loadTag(E){super.loadTag(E),this.terrainTypes=E.terrainTypes.map(R=>R)}};r(lm,"TerrainHighestStatBoostTag");let hu=lm;const Um=class Um extends _A{constructor(E,R,I){super(E,4,R,I)}onAdd(E){super.onAdd(E),E.setVisible(!1)}onRemove(E){s.tweens.addCounter({duration:VE(2),onComplete:r(()=>E.setVisible(!0),"onComplete")})}};r(Um,"SemiInvulnerableTag");let Es=Um;const Dm=class Dm extends _A{constructor(E,R,I,N=1){super(E,5,N,R,void 0,!0),this.immuneType=I}loadTag(E){super.loadTag(E),this.immuneType=E.immuneType}};r(Dm,"TypeImmuneTag");let xl=Dm;const Mm=class Mm extends xl{constructor(E,R,I){super(E,R,L.GROUND,I)}onAdd(E){super.onAdd(E),this.sourceMove===A.MAGNET_RISE&&s.queueMessage(D.t("battlerTags:magnetRisenOnAdd",{pokemonNameWithAffix:Z(E)}))}onRemove(E){super.onRemove(E),this.sourceMove===A.MAGNET_RISE&&s.queueMessage(D.t("battlerTags:magnetRisenOnRemove",{pokemonNameWithAffix:Z(E)}))}};r(Mm,"FloatingTag");let fu=Mm;const Pm=class Pm extends _A{constructor(E,R,I,N,S){super(E,5,1,R),this.boostedType=I,this.boostValue=N,this.oneUse=S}loadTag(E){super.loadTag(E),this.boostedType=E.boostedType,this.boostValue=E.boostValue,this.oneUse=E.oneUse}lapse(E,R){return R!==8||super.lapse(E,R)}onAdd(E){s.queueMessage(D.t("abilityTriggers:typeImmunityPowerBoost",{pokemonNameWithAffix:Z(E),typeName:D.t(`pokemonInfo:Type.${L[this.boostedType]}`)}))}onOverlap(E){s.queueMessage(D.t("abilityTriggers:moveImmunity",{pokemonNameWithAffix:Z(E)}))}};r(Pm,"TypeBoostTag");let gS=Pm;const Gm=class Gm extends _A{constructor(E,R){super(E,5,1,R,void 0,!0)}onAdd(E){super.onAdd(E),s.queueMessage(D.t("battlerTags:critBoostOnAdd",{pokemonNameWithAffix:Z(E)}))}lapse(E,R){return R!==8||super.lapse(E,R)}onRemove(E){super.onRemove(E),s.queueMessage(D.t("battlerTags:critBoostOnRemove",{pokemonNameWithAffix:Z(E)}))}};r(Gm,"CritBoostTag");let lr=Gm;const _m=class _m extends lr{constructor(){super(Y.CRIT_BOOST,A.DRAGON_CHEER)}onAdd(E){super.onAdd(E),this.typesOnAdd=E.getTypes(!0)}};r(_m,"DragonCheerTag");let bl=_m;const um=class um extends _A{constructor(E){super(Y.SALT_CURED,5,1,A.SALT_CURE,E)}loadTag(E){super.loadTag(E),this.sourceIndex=E.sourceIndex}onAdd(E){super.onAdd(E),s.queueMessage(D.t("battlerTags:saltCuredOnAdd",{pokemonNameWithAffix:Z(E)})),this.sourceIndex=s.getPokemonById(this.sourceId).getBattlerIndex()}lapse(E,R){const I=R!==8||super.lapse(E,R);if(I){s.unshiftPhase(new Wt(E.getBattlerIndex(),E.getBattlerIndex(),XA.SALT_CURE));const N=new SA(!1);if(sA($E,E,N),!N.value){const S=E.isOfType(L.STEEL)||E.isOfType(L.WATER);E.damageAndUpdate(uA(S?E.getMaxHp()/4:E.getMaxHp()/8),{result:CA.INDIRECT}),s.queueMessage(D.t("battlerTags:saltCuredLapse",{pokemonNameWithAffix:Z(E),moveName:this.getMoveName()}))}}return I}};r(um,"SaltCuredTag");let du=um;const Hm=class Hm extends _A{constructor(E){super(Y.CURSED,5,1,A.CURSE,E,!0)}loadTag(E){super.loadTag(E),this.sourceIndex=E.sourceIndex}onAdd(E){super.onAdd(E),this.sourceIndex=s.getPokemonById(this.sourceId).getBattlerIndex()}lapse(E,R){const I=R!==8||super.lapse(E,R);if(I){s.unshiftPhase(new Wt(E.getBattlerIndex(),E.getBattlerIndex(),XA.SALT_CURE));const N=new SA(!1);sA($E,E,N),N.value||(E.damageAndUpdate(uA(E.getMaxHp()/4),{result:CA.INDIRECT}),s.queueMessage(D.t("battlerTags:cursedLapse",{pokemonNameWithAffix:Z(E)})))}return I}};r(Hm,"CursedTag");let Ku=Hm;const cm=class cm extends _A{constructor(E,R,I){super(E,R,1,I)}};r(cm,"RemovedTypeTag");let Ur=cm;const Bm=class Bm extends _A{constructor(E,R,I){super(E,R,1,I)}};r(Bm,"GroundedTag");let Dr=Bm;const hm=class hm extends _A{constructor(){super(Y.ROOSTED,5,1,A.ROOST)}onRemove(E){const R=E.getTypes(),I=E.getTypes(!1,!1,!0),N=R.includes(L.GRASS)&&!I.includes(L.GRASS),S=R.includes(L.GHOST)&&!I.includes(L.GHOST);if(this.isBaseFlying){let T=[];this.isBasePureFlying?N||S?(T=R.filter(i=>i!==L.NORMAL),T.push(L.FLYING)):T=[L.FLYING]:(T=[...R],T.push(L.FLYING)),E.summonData.types=T,E.updateInfo()}}onAdd(E){const R=E.getTypes(),I=E.getTypes(!1,!1,!0),N=I.length===2,S=R.length===2;if(this.isBaseFlying=I.includes(L.FLYING),this.isBasePureFlying=I[0]===L.FLYING&&I.length===1,this.isBaseFlying){let T;this.isBasePureFlying&&!S?T=[L.NORMAL]:E.getTag(Ur)&&N&&!S?T=[L.UNKNOWN]:T=R.filter(i=>i!==L.FLYING),E.summonData.types=T,E.updateInfo()}}};r(hm,"RoostedTag");let Fu=hm;const fm=class fm extends _A{constructor(E){super(E,8,1)}canAdd(E){return E.formIndex===0}onAdd(E){super.onAdd(E),E.formIndex!==0&&s.triggerPokemonFormChange(E,cA)}onRemove(E){super.onRemove(E),s.triggerPokemonFormChange(E,cA)}};r(fm,"FormBlockDamageTag");let Zl=fm;const dm=class dm extends Zl{canAdd(E){var N;const R=(N=s.arena.weather)==null?void 0:N.weatherType,I=R===X.HAIL||R===X.SNOW;return super.canAdd(E)||I}};r(dm,"IceFaceBlockDamageTag");let Yu=dm;const Km=class Km extends _A{constructor(E){super(Y.COMMANDED,8,0,A.NONE,E)}get tatsugiriFormKey(){return this._tatsugiriFormKey}onAdd(E){var R;this._tatsugiriFormKey=((R=this.getSourcePokemon())==null?void 0:R.getFormKey())??"curly",s.unshiftPhase(new hA(E.getBattlerIndex(),!0,[h.ATK,h.DEF,h.SPATK,h.SPDEF,h.SPD],2))}onRemove(E){var R;(R=this.getSourcePokemon())!=null&&R.isActive(!0)&&s.triggerPokemonBattleAnim(E,cL.COMMANDER_REMOVE)}loadTag(E){super.loadTag(E),this._tatsugiriFormKey=E._tatsugiriFormKey}};r(Km,"CommandedTag");let kl=Km;const Fm=class Fm extends _A{constructor(E=A.NONE){super(Y.STOCKPILING,8,1,E),this.stockpiledCount=0,this.statChangeCounts={[h.DEF]:0,[h.SPDEF]:0},this.onStatStagesChanged=(R,I,N)=>{const S=N[I.indexOf(h.DEF)]??0,T=N[I.indexOf(h.SPDEF)]??0;S&&this.statChangeCounts[h.DEF]++,T&&this.statChangeCounts[h.SPDEF]++}}loadTag(E){var R,I;super.loadTag(E),this.stockpiledCount=E.stockpiledCount||0,this.statChangeCounts={[h.DEF]:((R=E.statChangeCounts)==null?void 0:R[h.DEF])??0,[h.SPDEF]:((I=E.statChangeCounts)==null?void 0:I[h.SPDEF])??0}}onAdd(E){this.stockpiledCount<3&&(this.stockpiledCount++,s.queueMessage(D.t("battlerTags:stockpilingOnAdd",{pokemonNameWithAffix:Z(E),stockpiledCount:this.stockpiledCount})),s.unshiftPhase(new hA(E.getBattlerIndex(),!0,[h.SPDEF,h.DEF],1,!0,!1,!0,this.onStatStagesChanged)))}onOverlap(E){this.onAdd(E)}onRemove(E){const R=this.statChangeCounts[h.DEF],I=this.statChangeCounts[h.SPDEF];R&&s.unshiftPhase(new hA(E.getBattlerIndex(),!0,[h.DEF],-R,!0,!1,!0)),I&&s.unshiftPhase(new hA(E.getBattlerIndex(),!0,[h.SPDEF],-I,!0,!1,!0))}};r(Fm,"StockpilingTag");let ts=Fm;const Ym=class Ym extends _A{constructor(E,R){super(E,6,0,R)}lapse(E,R){if(E.getTag(Y.UNDERWATER))return!0;const I=s.getCurrentPhase();if(I instanceof jO){const N=I.getUserPokemon();if(!N)return!1;if(I.move.hitsSubstitute(N,E))return!0;const S=new SA(!1);sA($E,N,S),S.value||N.damageAndUpdate(Math.max(1,Math.floor(N.getMaxHp()/4)),{result:CA.INDIRECT}),this.tagType===Y.GULP_MISSILE_ARROKUDA?s.unshiftPhase(new hA(N.getBattlerIndex(),!1,[h.DEF],-1)):N.trySetStatus(J.PARALYSIS,!0,E)}return!1}canAdd(E){const R=[A.SURF,A.DIVE].includes(this.sourceMove),I=E.formIndex===0&&!E.getTag(Y.GULP_MISSILE_ARROKUDA)&&!E.getTag(Y.GULP_MISSILE_PIKACHU),N=E.species.speciesId===e.CRAMORANT;return R&&I&&N}onAdd(E){super.onAdd(E),s.triggerPokemonFormChange(E,cA)}onRemove(E){super.onRemove(E),s.triggerPokemonFormChange(E,cA)}};r(Ym,"GulpMissileTag");let Xl=Ym;const Wm=class Wm extends _A{constructor(E,R,I,N){super(E,8,1,R),this.defenderType=I,this.allowedTypes=N}loadTag(E){super.loadTag(E),this.defenderType=E.defenderType,this.allowedTypes=E.allowedTypes}ignoreImmunity(E,R){return E===this.defenderType&&this.allowedTypes.includes(R)}};r(Wm,"ExposedTag");let pS=Wm;const mm=class mm extends uO{constructor(E,R){super(Y.HEAL_BLOCK,[2,5],E,R)}onActivation(E){return D.t("battle:battlerTagsHealBlock",{pokemonNameWithAffix:Z(E)})}isMoveRestricted(E){return!!(Ke[E].hasFlag(je.TRIAGE_MOVE)&&Ke[E].category===u.STATUS)}isMoveTargetRestricted(E,R,I){const N=new me(Ke[E].category);return LE(bU,R,I,Ke[E],N),!!(Ke[E].hasAttr(oU)&&N.value===u.STATUS)}selectionDeniedText(E,R){return D.t("battle:moveDisabledHealBlock",{pokemonNameWithAffix:Z(E),moveName:Ke[R].name,healBlockName:Ke[A.HEAL_BLOCK].name})}interruptedText(E,R){return D.t("battle:moveDisabledHealBlock",{pokemonNameWithAffix:Z(E),moveName:Ke[R].name,healBlockName:Ke[A.HEAL_BLOCK].name})}onRemove(E){super.onRemove(E),s.queueMessage(D.t("battle:battlerTagsHealBlockOnRemove",{pokemonNameWithAffix:Z(E)}),null,!1,null)}};r(mm,"HealBlockTag");let Wu=mm;const gm=class gm extends _A{constructor(){super(Y.TAR_SHOT,8,0)}canAdd(E){return!E.isTerastallized}onAdd(E){s.queueMessage(D.t("battlerTags:tarShotOnAdd",{pokemonNameWithAffix:Z(E)}))}};r(gm,"TarShotTag");let Ql=gm;const pm=class pm extends _A{constructor(){super(Y.ELECTRIFIED,5,1,A.ELECTRIFY)}onAdd(E){s.queueMessage(D.t("battlerTags:electrifiedOnAdd",{pokemonNameWithAffix:Z(E)}))}};r(pm,"ElectrifiedTag");let mu=pm;const ym=class ym extends _A{constructor(E=A.AUTOTOMIZE){super(Y.AUTOTOMIZED,8,1,E),this.autotomizeCount=0}onAdd(E){E.getWeight()>.1&&s.queueMessage(D.t("battlerTags:autotomizeOnAdd",{pokemonNameWithAffix:Z(E)})),this.autotomizeCount+=1}onOverlap(E){this.onAdd(E)}};r(ym,"AutotomizedTag");let Jl=ym;const wm=class wm extends _A{constructor(E,R){super(Y.SUBSTITUTE,[2,3,6],0,E,R,!0)}onAdd(E){this.hp=Math.floor(s.getPokemonById(this.sourceId).getMaxHp()/4),this.sourceInFocus=!1,s.triggerPokemonBattleAnim(E,cL.SUBSTITUTE_ADD),this.sourceMove===A.SHED_TAIL?s.queueMessage(D.t("battlerTags:shedTailOnAdd",{pokemonNameWithAffix:Z(E)}),1500):s.queueMessage(D.t("battlerTags:substituteOnAdd",{pokemonNameWithAffix:Z(E)}),1500),E.findAndRemoveTags(R=>R instanceof HO)}onRemove(E){this.sourceInFocus?this.sprite.destroy():s.triggerPokemonBattleAnim(E,cL.SUBSTITUTE_REMOVE,[this.sprite]),s.queueMessage(D.t("battlerTags:substituteOnRemove",{pokemonNameWithAffix:Z(E)}))}lapse(E,R){switch(R){case 2:this.onPreMove(E);break;case 3:this.onAfterMove(E);break;case 6:this.onHit(E);break}return R!==8}onPreMove(E){s.triggerPokemonBattleAnim(E,cL.SUBSTITUTE_PRE_MOVE,[this.sprite]),this.sourceInFocus=!0}onAfterMove(E){s.triggerPokemonBattleAnim(E,cL.SUBSTITUTE_POST_MOVE,[this.sprite]),this.sourceInFocus=!1}onHit(E){const R=s.getCurrentPhase();if(R instanceof jO){const I=R.getUserPokemon();if(!I)return;const N=R.move;I.turnData.hitCount===I.turnData.hitsLeft&&N.hitsSubstitute(I,E)&&s.queueMessage(D.t("battlerTags:substituteOnHit",{pokemonNameWithAffix:Z(E)}))}}loadTag(E){super.loadTag(E),this.hp=E.hp}};r(wm,"SubstituteTag");let OR=wm;const Vm=class Vm extends _A{constructor(){super(Y.MYSTERY_ENCOUNTER_POST_SUMMON,8,1)}onAdd(E){super.onAdd(E)}lapse(E,R){const I=super.lapse(E,R);if(R===8){const N=new SA(!1);sA(sO,E,N),sA(fS,E,N,!1,E),N.value||E.mysteryEncounterBattleEffects&&E.mysteryEncounterBattleEffects(E)}return I}onRemove(E){super.onRemove(E)}};r(Vm,"MysteryEncounterPostSummonTag");let $l=Vm;const vm=class vm extends uO{constructor(E){super(Y.TORMENT,3,1,A.TORMENT,E)}onAdd(E){super.onAdd(E),s.queueMessage(D.t("battlerTags:tormentOnAdd",{pokemonNameWithAffix:Z(E)}),1500)}lapse(E,R){return E.isActive(!0)}isMoveRestricted(E,R){if(!R)return!1;const I=R.getLastXMoves(1)[0];if(!I)return!1;const S=Ke[I.move].hasAttr(OS)||R.getTag(Y.FRENZY),T=I.result===EE.SUCCESS||I.result===EE.MISS;return!!(I.move===E&&T&&I.move!==A.STRUGGLE&&!S)}selectionDeniedText(E,R){return D.t("battle:moveDisabledTorment",{pokemonNameWithAffix:Z(E)})}};r(vm,"TormentTag");let gu=vm;const xm=class xm extends uO{constructor(){super(Y.TAUNT,[2,3],4,A.TAUNT)}onAdd(E){super.onAdd(E),s.queueMessage(D.t("battlerTags:tauntOnAdd",{pokemonNameWithAffix:Z(E)}),1500)}onRemove(E){super.onRemove(E),s.queueMessage(D.t("battlerTags:tauntOnRemove",{pokemonNameWithAffix:Z(E)}))}isMoveRestricted(E){return Ke[E].category===u.STATUS}selectionDeniedText(E,R){return D.t("battle:moveDisabledTaunt",{pokemonNameWithAffix:Z(E),moveName:Ke[R].name})}interruptedText(E,R){return D.t("battle:moveDisabledTaunt",{pokemonNameWithAffix:Z(E),moveName:Ke[R].name})}};r(xm,"TauntTag");let pu=xm;const bm=class bm extends uO{constructor(E){super(Y.IMPRISON,[2,3],1,A.IMPRISON,E)}lapse(E,R){const I=this.getSourcePokemon();return I?R===2?super.lapse(E,R)&&I.isActive(!0):I.isActive(!0):!1}isMoveRestricted(E,R){const I=this.getSourcePokemon();if(I){const N=I.getMoveset().map(S=>S.moveId);return(N==null?void 0:N.includes(E))&&I.isActive(!0)}return!1}selectionDeniedText(E,R){return D.t("battle:moveDisabledImprison",{pokemonNameWithAffix:Z(E),moveName:Ke[R].name})}interruptedText(E,R){return D.t("battle:moveDisabledImprison",{pokemonNameWithAffix:Z(E),moveName:Ke[R].name})}};r(bm,"ImprisonTag");let yu=bm;const Zm=class Zm extends _A{constructor(E){super(Y.SYRUP_BOMB,5,3,A.SYRUP_BOMB,E)}onAdd(E){super.onAdd(E),s.queueMessage(D.t("battlerTags:syrupBombOnAdd",{pokemonNameWithAffix:Z(E)}))}lapse(E,R){var I;return this.sourceId&&!((I=s.getPokemonById(this.sourceId))!=null&&I.isActive(!0))?!1:(s.queueMessage(D.t("battlerTags:syrupBombLapse",{pokemonNameWithAffix:Z(E)})),s.unshiftPhase(new hA(E.getBattlerIndex(),!0,[h.SPD],-1,!0,!1,!0)),--this.turnCount>0)}};r(Zm,"SyrupBombTag");let wu=Zm;const km=class km extends _A{constructor(E){super(Y.TELEKINESIS,[2,3],3,E,void 0,!0)}onAdd(E){s.queueMessage(D.t("battlerTags:telekinesisOnAdd",{pokemonNameWithAffix:Z(E)}))}};r(km,"TelekinesisTag");let Vu=km;const Xm=class Xm extends _A{constructor(E,R){super(Y.POWER_TRICK,8,0,E,R,!0)}onAdd(E){this.swapStat(E),s.queueMessage(D.t("battlerTags:powerTrickActive",{pokemonNameWithAffix:Z(E)}))}onRemove(E){this.swapStat(E),s.queueMessage(D.t("battlerTags:powerTrickActive",{pokemonNameWithAffix:Z(E)}))}onOverlap(E){E.removeTag(this.tagType)}swapStat(E){const R=E.getStat(h.ATK,!1);E.setStat(h.ATK,E.getStat(h.DEF,!1),!1),E.setStat(h.DEF,R,!1)}};r(Xm,"PowerTrickTag");let ql=Xm;const Qm=class Qm extends _A{constructor(){super(Y.GRUDGE,[8,2],1,A.GRUDGE)}onAdd(E){super.onAdd(E),s.queueMessage(D.t("battlerTags:grudgeOnAdd",{pokemonNameWithAffix:Z(E)}))}lapse(E,R,I){if(R===8&&I){if(I.isActive()&&E.isOpponent(I)){const N=E.turnData.attacksReceived[0],S=I.getMoveset().find(T=>T.moveId===N.move);S&&N.move!==A.STRUGGLE&&(S.ppUsed=S.getMovePp(),s.queueMessage(D.t("battlerTags:grudgeLapse",{pokemonNameWithAffix:Z(E),moveName:S.getName()})))}return!1}return super.lapse(E,R)}};r(Qm,"GrudgeTag");let vu=Qm;const Jm=class Jm extends _A{constructor(){super(Y.PSYCHO_SHIFT,3,1,A.PSYCHO_SHIFT)}lapse(E,R){return E.status&&E.isActive(!0)&&(s.queueMessage(qI(E.status.effect,Z(E))),E.resetStatus(),E.updateInfo()),!1}};r(Jm,"PsychoShiftTag");let xu=Jm;const $m=class $m extends _A{constructor(){super(Y.MAGIC_COAT,5,1,A.MAGIC_COAT)}onAdd(E){s.queueMessage(D.t("battlerTags:magicCoatOnAdd",{pokemonNameWithAffix:Z(E)}))}};r($m,"MagicCoatTag");let bu=$m;function C6(t,E,R,I){switch(t){case Y.RECHARGING:return new $_(R);case Y.BEAK_BLAST_CHARGING:return new q_;case Y.SHELL_TRAP:return new Wl;case Y.FLINCHED:return new j_(R);case Y.INTERRUPTED:return new eu(R);case Y.CONFUSED:return new Au(E,R);case Y.INFATUATED:return new tu(R,I);case Y.SEEDED:return new Ru(I);case Y.POWDER:return new Ou;case Y.NIGHTMARE:return new Iu;case Y.FRENZY:return new Lu(E,R,I);case Y.CHARGING:return new _A(t,8,1,R,I);case Y.ENCORE:return new ir(I);case Y.HELPING_HAND:return new ml(I);case Y.INGRAIN:return new Nu(I);case Y.AQUA_RING:return new su;case Y.DROWSY:return new Tu;case Y.TRAPPED:return new eO(t,8,E,R,I);case Y.NO_RETREAT:return new z_(I);case Y.BIND:return new nu(E,I);case Y.WRAP:return new au(E,I);case Y.FIRE_SPIN:return new ru(E,I);case Y.WHIRLPOOL:return new iu(E,I);case Y.CLAMP:return new ou(E,I);case Y.SAND_TOMB:return new Cu(E,I);case Y.MAGMA_STORM:return new lu(E,I);case Y.SNAP_TRAP:return new Uu(E,I);case Y.THUNDER_CAGE:return new Du(E,I);case Y.INFESTATION:return new Mu(E,I);case Y.PROTECTED:return new or(R);case Y.SPIKY_SHIELD:return new Pu(R,8);case Y.KINGS_SHIELD:return new vT(R,t,h.ATK,-1);case Y.OBSTRUCT:return new vT(R,t,h.DEF,-2);case Y.SILK_TRAP:return new vT(R,t,h.SPD,-1);case Y.BANEFUL_BUNKER:return new wl(R,t,J.POISON);case Y.BURNING_BULWARK:return new wl(R,t,J.BURN);case Y.ENDURING:return new Vl(t,5,R);case Y.ENDURE_TOKEN:return new Vl(t,7,R);case Y.STURDY:return new Gu(R);case Y.PERISH_SONG:return new _u(E);case Y.CENTER_OF_ATTENTION:return new vl(R);case Y.TRUANT:return new Hu;case Y.SLOW_START:return new cu;case Y.PROTOSYNTHESIS:return new Bu(t,O.PROTOSYNTHESIS,X.SUNNY,X.HARSH_SUN);case Y.QUARK_DRIVE:return new hu(t,O.QUARK_DRIVE,$e.ELECTRIC);case Y.FLYING:case Y.UNDERGROUND:case Y.UNDERWATER:case Y.HIDDEN:return new Es(t,E,R);case Y.FIRE_BOOST:return new gS(t,R,L.FIRE,1.5,!1);case Y.CRIT_BOOST:return new lr(t,R);case Y.DRAGON_CHEER:return new bl;case Y.ALWAYS_CRIT:case Y.IGNORE_ACCURACY:return new _A(t,5,2,R);case Y.ALWAYS_GET_HIT:case Y.RECEIVE_DOUBLE_DAMAGE:return new _A(t,2,1,R);case Y.BYPASS_SLEEP:return new _A(t,5,E,R);case Y.IGNORE_FLYING:return new Dr(t,8,R);case Y.ROOSTED:return new Fu;case Y.BURNED_UP:return new Ur(t,8,R);case Y.DOUBLE_SHOCKED:return new Ur(t,8,R);case Y.SALT_CURED:return new du(I);case Y.CURSED:return new Ku(I);case Y.CHARGED:return new gS(t,R,L.ELECTRIC,2,!0);case Y.FLOATING:return new fu(t,R,E);case Y.MINIMIZED:return new Su;case Y.DESTINY_BOND:return new Eu(R,I);case Y.ICE_FACE:return new Yu(t);case Y.DISGUISE:return new Zl(t);case Y.COMMANDED:return new kl(I);case Y.STOCKPILING:return new ts(R);case Y.OCTOLOCK:return new gl(I);case Y.DISABLED:return new Q_(I);case Y.IGNORE_GHOST:return new pS(t,R,L.GHOST,[L.NORMAL,L.FIGHTING]);case Y.IGNORE_DARK:return new pS(t,R,L.DARK,[L.PSYCHIC]);case Y.GULP_MISSILE_ARROKUDA:case Y.GULP_MISSILE_PIKACHU:return new Xl(t,R);case Y.TAR_SHOT:return new Ql;case Y.ELECTRIFIED:return new mu;case Y.THROAT_CHOPPED:return new X_;case Y.GORILLA_TACTICS:return new J_;case Y.UNBURDEN:return new uu;case Y.SUBSTITUTE:return new OR(R,I);case Y.AUTOTOMIZED:return new Jl;case Y.MYSTERY_ENCOUNTER_POST_SUMMON:return new $l;case Y.HEAL_BLOCK:return new Wu(E,R);case Y.TORMENT:return new gu(I);case Y.TAUNT:return new pu;case Y.IMPRISON:return new yu(I);case Y.SYRUP_BOMB:return new wu(I);case Y.TELEKINESIS:return new Vu(R);case Y.POWER_TRICK:return new ql(R,I);case Y.GRUDGE:return new vu;case Y.PSYCHO_SHIFT:return new xu;case Y.MAGIC_COAT:return new bu;case Y.NONE:default:return new _A(t,8,E,R,I)}}r(C6,"getBattlerTag");function RX(t){const E=C6(t.tagType,t.turnCount,t.sourceMove,t.sourceId);return E.loadTag(t),E}r(RX,"loadBattlerTag");function oc(t){const E=s.getCurrentPhase();return E instanceof jO?{phase:E,attacker:E.getPokemon(),move:E.move}:null}r(oc,"getMoveEffectPhaseData");var Zu=(t=>(t[t.USER=0]="USER",t[t.TARGET=1]="TARGET",t[t.GRAPHIC=2]="GRAPHIC",t))(Zu||{}),XI=(t=>(t[t.FLY_CHARGING=1e3]="FLY_CHARGING",t[t.BOUNCE_CHARGING=1001]="BOUNCE_CHARGING",t[t.DIG_CHARGING=1002]="DIG_CHARGING",t[t.FUTURE_SIGHT_CHARGING=1003]="FUTURE_SIGHT_CHARGING",t[t.DIVE_CHARGING=1004]="DIVE_CHARGING",t[t.SOLAR_BEAM_CHARGING=1005]="SOLAR_BEAM_CHARGING",t[t.SHADOW_FORCE_CHARGING=1006]="SHADOW_FORCE_CHARGING",t[t.SKULL_BASH_CHARGING=1007]="SKULL_BASH_CHARGING",t[t.FREEZE_SHOCK_CHARGING=1008]="FREEZE_SHOCK_CHARGING",t[t.SKY_DROP_CHARGING=1009]="SKY_DROP_CHARGING",t[t.SKY_ATTACK_CHARGING=1010]="SKY_ATTACK_CHARGING",t[t.ICE_BURN_CHARGING=1011]="ICE_BURN_CHARGING",t[t.DOOM_DESIRE_CHARGING=1012]="DOOM_DESIRE_CHARGING",t[t.RAZOR_WIND_CHARGING=1013]="RAZOR_WIND_CHARGING",t[t.PHANTOM_FORCE_CHARGING=1014]="PHANTOM_FORCE_CHARGING",t[t.GEOMANCY_CHARGING=1015]="GEOMANCY_CHARGING",t[t.SHADOW_BLADE_CHARGING=1016]="SHADOW_BLADE_CHARGING",t[t.SOLAR_BLADE_CHARGING=1017]="SOLAR_BLADE_CHARGING",t[t.BEAK_BLAST_CHARGING=1018]="BEAK_BLAST_CHARGING",t[t.METEOR_BEAM_CHARGING=1019]="METEOR_BEAM_CHARGING",t[t.ELECTRO_SHOT_CHARGING=1020]="ELECTRO_SHOT_CHARGING",t))(XI||{}),XA=(t=>(t[t.USE_ITEM=2e3]="USE_ITEM",t[t.HEALTH_UP=2001]="HEALTH_UP",t[t.TERASTALLIZE=2002]="TERASTALLIZE",t[t.POISON=2010]="POISON",t[t.TOXIC=2011]="TOXIC",t[t.PARALYSIS=2012]="PARALYSIS",t[t.SLEEP=2013]="SLEEP",t[t.FROZEN=2014]="FROZEN",t[t.BURN=2015]="BURN",t[t.CONFUSION=2016]="CONFUSION",t[t.ATTRACT=2017]="ATTRACT",t[t.BIND=2018]="BIND",t[t.WRAP=2019]="WRAP",t[t.CURSE_NO_GHOST=2020]="CURSE_NO_GHOST",t[t.LEECH_SEED=2021]="LEECH_SEED",t[t.FIRE_SPIN=2022]="FIRE_SPIN",t[t.PROTECT=2023]="PROTECT",t[t.COVET=2024]="COVET",t[t.WHIRLPOOL=2025]="WHIRLPOOL",t[t.BIDE=2026]="BIDE",t[t.SAND_TOMB=2027]="SAND_TOMB",t[t.QUICK_GUARD=2028]="QUICK_GUARD",t[t.WIDE_GUARD=2029]="WIDE_GUARD",t[t.CURSE=2030]="CURSE",t[t.MAGMA_STORM=2031]="MAGMA_STORM",t[t.CLAMP=2032]="CLAMP",t[t.SNAP_TRAP=2033]="SNAP_TRAP",t[t.THUNDER_CAGE=2034]="THUNDER_CAGE",t[t.INFESTATION=2035]="INFESTATION",t[t.ORDER_UP_CURLY=2036]="ORDER_UP_CURLY",t[t.ORDER_UP_DROOPY=2037]="ORDER_UP_DROOPY",t[t.ORDER_UP_STRETCHY=2038]="ORDER_UP_STRETCHY",t[t.RAGING_BULL_FIRE=2039]="RAGING_BULL_FIRE",t[t.RAGING_BULL_WATER=2040]="RAGING_BULL_WATER",t[t.SALT_CURE=2041]="SALT_CURE",t[t.POWDER=2042]="POWDER",t[t.SUNNY=2100]="SUNNY",t[t.RAIN=2101]="RAIN",t[t.SANDSTORM=2102]="SANDSTORM",t[t.HAIL=2103]="HAIL",t[t.SNOW=2104]="SNOW",t[t.WIND=2105]="WIND",t[t.HEAVY_RAIN=2106]="HEAVY_RAIN",t[t.HARSH_SUN=2107]="HARSH_SUN",t[t.STRONG_WINDS=2108]="STRONG_WINDS",t[t.MISTY_TERRAIN=2110]="MISTY_TERRAIN",t[t.ELECTRIC_TERRAIN=2111]="ELECTRIC_TERRAIN",t[t.GRASSY_TERRAIN=2112]="GRASSY_TERRAIN",t[t.PSYCHIC_TERRAIN=2113]="PSYCHIC_TERRAIN",t[t.LOCK_ON=2120]="LOCK_ON",t))(XA||{});const qm=class qm{constructor(E){if(this.frameTimedEvents=new Map,E){this.id=E.id,this.graphic=E.graphic;const R=E.frames;R.map(N=>{for(let S=0;S<N.length;S++)N[S]=new ku(N[S])}),this.frames=R;const I=E.frameTimedEvents;for(const N of Object.keys(I)){const S=[];for(const T of I[N]){let i;switch(T.eventType){case"AnimTimedSoundEvent":i=new Mr(T.frameIndex,T.resourceName,T);break;case"AnimTimedAddBgEvent":i=new Pr(T.frameIndex,T.resourceName,T);break;case"AnimTimedUpdateBgEvent":i=new AU(T.frameIndex,T.resourceName,T);break}i&&S.push(i)}this.frameTimedEvents.set(Number.parseInt(N),S)}this.position=E.position,this.hue=E.hue}else this.frames=[]}getSoundResourceNames(){const E=new Set;for(const R of this.frameTimedEvents.values())for(const I of R)I instanceof Mr&&I.resourceName&&E.add(I.resourceName);return Array.from(E.values())}getBackgroundResourceNames(){const E=new Set;for(const R of this.frameTimedEvents.values())for(const I of R)I instanceof Pr&&I.resourceName&&E.add(I.resourceName);return Array.from(E.values())}};r(qm,"AnimConfig");let GO=qm;const zm=class zm{constructor(E,R,I,N,S,T,i,o,C,U,_,G,H,c,f,d,w,m,W,v,$,Oe,q,Ie,le,Ae){if(this.x=Ae?E:((E||0)-128)*.5,this.y=Ae?R:((R||0)-224)*.5,I?this.zoomX=I:Ae&&(this.zoomX=0),N?this.zoomY=N:Ae&&(this.zoomY=0),S?this.angle=S:Ae&&(this.angle=0),T?this.mirror=T:Ae&&(this.mirror=!1),i?this.visible=i:Ae&&(this.visible=!1),o?this.blendType=o:Ae&&(this.blendType=0),!Ae){let Re=2;switch(C){case-2:Re=1;break;case-1:Re=0;break}this.target=Re,this.graphicFrame=C>=0?C:0}U?this.opacity=U:Ae&&(this.opacity=0),_||G||H||c?this.color=[_||0,G||0,H||0,c||0]:Ae&&(this.color=[0,0,0,0]),f||d||w||m?this.tone=[f||0,d||0,w||0,m||0]:Ae&&(this.tone=[0,0,0,0]),W||v||$||Oe?this.flash=[W||0,v||0,$||0,Oe||0]:Ae&&(this.flash=[0,0,0,0]),q?this.locked=q:Ae&&(this.locked=!1),Ie?this.priority=Ie:Ae&&(this.priority=0),this.focus=le||1}};r(zm,"AnimFrame");let zl=zm;const jm=class jm extends zl{constructor(E){const R=E.color||[0,0,0,0],I=E.tone||[0,0,0,0],N=E.flash||[0,0,0,0];super(E.x,E.y,E.zoomX,E.zoomY,E.angle,E.mirror,E.visible,E.blendType,E.graphicFrame,E.opacity,R[0],R[1],R[2],R[3],I[0],I[1],I[2],I[3],N[0],N[1],N[2],N[3],E.locked,E.priority,E.focus,!0),this.target=E.target,this.graphicFrame=E.graphicFrame}};r(jm,"ImportedAnimFrame");let ku=jm;const eg=class eg{constructor(E,R){this.frameIndex=E,this.resourceName=R}};r(eg,"AnimTimedEvent");let jl=eg;const Ag=class Ag extends jl{constructor(E,R,I){super(E,R),this.volume=100,this.pitch=100,I&&(this.volume=I.volume,this.pitch=I.pitch)}execute(E){const R={rate:this.pitch*.01,volume:this.volume*.01};if(this.resourceName){try{s.playSound(`battle_anims/${this.resourceName}`,R)}catch(I){console.error(I)}return Math.ceil(s.sound.get(`battle_anims/${this.resourceName}`).totalDuration*1e3/33.33)}return Math.ceil(E.user.cry(R).totalDuration*1e3/33.33)}getEventType(){return"AnimTimedSoundEvent"}};r(Ag,"AnimTimedSoundEvent");let Mr=Ag;const Eg=class Eg extends jl{constructor(E,R,I){super(E,R),this.bgX=0,this.bgY=0,this.opacity=0,this.duration=0,I&&(this.bgX=I.bgX,this.bgY=I.bgY,this.opacity=I.opacity,this.duration=I.duration)}};r(Eg,"AnimTimedBgEvent");let eU=Eg;const tg=class tg extends eU{execute(E,R){const I={};return this.bgX!==void 0&&(I.x=this.bgX*.5-320),this.bgY!==void 0&&(I.y=this.bgY*.5-284),this.opacity!==void 0&&(I.alpha=(this.opacity||0)/255),Object.keys(I).length&&s.tweens.add(Object.assign({targets:E.bgSprite,duration:VE(this.duration*3)},I)),this.duration*2}getEventType(){return"AnimTimedUpdateBgEvent"}};r(tg,"AnimTimedUpdateBgEvent");let AU=tg;const Rg=class Rg extends eU{execute(E,R){E.bgSprite&&E.bgSprite.destroy(),E.bgSprite=this.resourceName?s.add.tileSprite(this.bgX-320,this.bgY-284,896,576,this.resourceName):s.add.rectangle(this.bgX-320,this.bgY-284,896,576,0),E.bgSprite.setOrigin(0,0),E.bgSprite.setScale(1.25),E.bgSprite.setAlpha(this.opacity/255),s.field.add(E.bgSprite);const I=s.getEnemyPokemon(!1)??s.getPlayerPokemon(!1);return Ne(R)?I!=null&&I.isOnField()&&s.field.moveBelow(E.bgSprite,I):s.field.moveTo(E.bgSprite,R),s.tweens.add({targets:E.bgSprite,duration:VE(this.duration*3)}),this.duration*2}getEventType(){return"AnimTimedAddBgEvent"}};r(Rg,"AnimTimedAddBgEvent");let Pr=Rg;const UR=new Map,DR=new Map,hM=new Map,xT=new Map;function oQ(){return new Promise(t=>{const E=gN(XA),R=Ct(XA),I=[];for(let N=0;N<R.length;N++){const S=R[N];I.push(s.cachedFetch(`./battle-anims/common-${E[N].toLowerCase().replace(/\_/g,"-")}.json`).then(T=>T.json()).then(T=>hM.set(S,new GO(T))))}Promise.allSettled(I).then(()=>t())})}r(oQ,"initCommonAnims");function fM(t){return new Promise(E=>{if(UR.has(t))if(UR.get(t)!==null)E();else{const R=setInterval(()=>{if(UR.get(t)!==null){const I=Ke[t].isChargingMove()?Ke[t]:Ke[t].getAttrs(HI)[0]??Ke[t].getAttrs(yS)[0];if(I&&DR.get(I.chargeAnim)===null)return;clearInterval(R),E()}},50)}else{UR.set(t,null);const R=Ke[t]instanceof B?A.TACKLE:Ke[t]instanceof we?A.FOCUS_ENERGY:A.TAIL_WHIP;r(N=>{s.cachedFetch(`./battle-anims/${lv(N)}.json`).then(S=>{const T=S.headers.get("content-type");return!S.ok||(T==null?void 0:T.indexOf("application/json"))===-1?(Ov(N,R),Iv(N,S.status,S.statusText),E()):S.json()}).then(S=>{Array.isArray(S)?(Mo(N,S[0]),Mo(N,S[1])):Mo(N,S);const T=Ke[N].isChargingMove()?Ke[N]:Ke[N].getAttrs(HI)[0]??Ke[N].getAttrs(yS)[0];T?IX(T.chargeAnim).then(()=>E()):E()}).catch(S=>(Ov(N,R),Iv(N,S),E()))},"fetchAnimAndResolve")(t)}})}r(fM,"initMoveAnim");function Ov(t,E){Mo(t,UR.get(E))}r(Ov,"useDefaultAnim");function Iv(t,...E){const R=lv(t);console.warn(`Could not load animation file for move '${R}'`,...E)}r(Iv,"logMissingMoveAnim");async function OX(t){const E=Array.isArray(t)?t:[t],R=gN(aO),I=[];for(const N of E)xT.has(N)&&!Ne(xT.get(N))||I.push(s.cachedFetch(`./battle-anims/encounter-${R[N].toLowerCase().replace(/\_/g,"-")}.json`).then(S=>S.json()).then(S=>xT.set(N,new GO(S))));await Promise.allSettled(I)}r(OX,"initEncounterAnims");function IX(t){return new Promise(E=>{if(DR.has(t))if(DR.get(t)!==null)E();else{const R=setInterval(()=>{DR.get(t)!==null&&(clearInterval(R),E())},50)}else DR.set(t,null),s.cachedFetch(`./battle-anims/${XI[t].toLowerCase().replace(/\_/g,"-")}.json`).then(R=>R.json()).then(R=>{Array.isArray(R)?(OP(t,R[0]),OP(t,R[1])):OP(t,R),E()})})}r(IX,"initMoveChargeAnim");function Mo(t,E){const R=new GO(E);if(UR.get(t)===null){UR.set(t,R);return}UR.set(t,[UR.get(t),R])}r(Mo,"populateMoveAnim");function OP(t,E){const R=new GO(E);if(DR.get(t)===null){DR.set(t,R);return}DR.set(t,[DR.get(t),R])}r(OP,"populateMoveChargeAnim");function CQ(t){return new Promise(E=>{Cc(Array.from(hM.values()),t).then(()=>E())})}r(CQ,"loadCommonAnimAssets");async function LX(t){await Cc(Array.from(xT.values()),t)}r(LX,"loadEncounterAnimAssets");function dM(t,E){return new Promise(R=>{const I=t.flatMap(N=>UR.get(N));for(const N of t){const S=Ke[N].isChargingMove()?Ke[N]:Ke[N].getAttrs(HI)[0]??Ke[N].getAttrs(yS)[0];if(S){const T=DR.get(S.chargeAnim);I.push(T instanceof GO?T:T[0]),Array.isArray(T)&&I.push(T[1])}}Cc(I,E).then(()=>R())})}r(dM,"loadMoveAnimAssets");function Cc(t,E){return new Promise(R=>{var S;const I=new Set,N=new Set;for(const T of t){if(!((S=T.frames)!=null&&S.length))continue;const i=T.getSoundResourceNames();for(const C of i)N.add(C);const o=T.getBackgroundResourceNames();for(const C of o)I.add(C);T.graphic&&s.loadSpritesheet(T.graphic,"battle_anims",96)}for(const T of I)s.loadImage(T,"battle_anims");for(const T of N)s.loadSe(T,"battle_anims",T);E?(s.load.once(Kt.Loader.Events.COMPLETE,()=>R()),s.load.isLoading()||s.load.start()):R()})}r(Cc,"loadAnimAssets");const IP=106,LP=116,NP=234,sP=52;function NX(t,E,R,I,N,S,T,i,o,C){const U=sX(t,E,R,I,o,C);return SX(N,S,T,i,U[0],U[1])}r(NX,"transformPoint");function sX(t,E,R,I,N,S){const T=R-t,i=I-E,o=T===0?0:(N-t)/T,C=i===0?0:(S-E)/i;return[o,C]}r(sX,"yAxisIntersect");function SX(t,E,R,I,N,S){const T=R-t,i=I-E,o=t+N*T,C=E+S*i;return[o,C]}r(SX,"repositionY");function TX(t,E,R,I){return t===E?!1:t<E?R>I:R<I}r(TX,"isReversed");const Og=class Og{constructor(E,R,I=!1){this.user=E??null,this.target=R??null,this.sprites=[],this.playRegardlessOfIssues=I}isHideUser(){return!1}isHideTarget(){return!1}getGraphicFrameData(E,R){var w,m;const I=new Map([[2,new Map],[0,new Map],[1,new Map]]),N=this.isOppAnim(),S=N?this.target:this.user,T=N?this.user:this.target,i=R&&S!==T?T.getTag(OR):null,o=S.x,C=S.y,U=S.getSprite().displayHeight/2,_=((w=i==null?void 0:i.sprite)==null?void 0:w.x)??T.x,G=((m=i==null?void 0:i.sprite)==null?void 0:m.y)??T.y,H=((i==null?void 0:i.sprite)??T.getSprite()).displayHeight/2;let c=0,f=0,d=0;for(const W of E){let v=W.x+106,$=W.y+116,Oe=W.zoomX/100*(W.mirror?-1:1);const q=W.zoomY/100;switch(W.focus){case 1:v+=_-NP,$+=G-H-sP;break;case 2:v+=o-IP,$+=C-U-LP;break;case 3:{const Ae=NX(this.srcLine[0],this.srcLine[1],this.srcLine[2],this.srcLine[3],this.dstLine[0],this.dstLine[1]-U,this.dstLine[2],this.dstLine[3]-H,v,$);v=Ae[0],$=Ae[1],W.target===2&&TX(this.srcLine[0],this.srcLine[2],this.dstLine[0],this.dstLine[2])&&(Oe=Oe*-1)}break}const Ie=-W.angle,le=W.target===2?c++:W.target===0?f++:d++;I.get(W.target).set(le,{x:v,y:$,scaleX:Oe,scaleY:q,angle:Ie})}return I}play(E,R){var W,v;const I=this.isOppAnim(),N=I?this.target:this.user,S=I?this.user:this.target;if(!(S!=null&&S.isOnField())&&!this.playRegardlessOfIssues){R&&R();return}const T=E&&N!==S?S.getTag(OR):null,i=N.getSprite(),o=(T==null?void 0:T.sprite)??S.getSprite(),C={2:[],0:[],1:[]},U=[],_=r(()=>{i.setPosition(0,0),i.setScale(1),i.setAlpha(1),i.pipelineData.tone=[0,0,0,0],i.setAngle(0),T?(o.setPosition(S.x-S.getSubstituteOffset()[0],S.y-S.getSubstituteOffset()[1]),o.setScale(S.getSpriteScale()*(S.isPlayer()?.5:1)),o.setAlpha(1)):(o.setPosition(0,0),o.setScale(1),o.setAlpha(1)),o.pipelineData.tone=[0,0,0,0],o.setAngle(0);const $=I?o:i,Oe=I?i:o;!this.isHideUser()&&$&&$.setVisible(!0),!this.isHideTarget()&&(Oe!==$||!this.isHideUser())&&Oe.setVisible(!0);for(const q of Object.values(C).flat())q&&q.destroy();this.bgSprite&&this.bgSprite.destroy(),R&&R()},"cleanUpAndComplete");if(!s.moveAnimations&&!this.playRegardlessOfIssues)return _();const G=this.getAnim(),H=N.x,c=N.y,f=((W=T==null?void 0:T.sprite)==null?void 0:W.x)??S.x,d=((v=T==null?void 0:T.sprite)==null?void 0:v.y)??S.y;this.srcLine=[IP,LP,NP,sP],this.dstLine=[H,c,f,d];let w=(G==null?void 0:G.frames.length)??0,m=0;s.tweens.addCounter({duration:VE(3),repeat:(G==null?void 0:G.frames.length)??0,onRepeat:r(()=>{m||(i.setVisible(!1),o.setVisible(!1));const $=G.frames[m],Oe=this.getGraphicFrameData(G.frames[m],E);let q=0,Ie=0,le=0;for(const Re of $)if(Re.target!==2){const se=Re.target===0;if(se&&S===N||this.playRegardlessOfIssues&&Re.target===1&&!S.isOnField())continue;const ie=C[se?0:1],He=se?i:o;if((se?q:Ie)===ie.length)if(se||!T){const rA=s.addPokemonSprite(se?N:S,0,0,He.texture,He.frame.name,!0);["spriteColors","fusionSpriteColors"].map(Be=>rA.pipelineData[Be]=(se?N:S).getSprite().pipelineData[Be]),rA.setPipelineData("spriteKey",(se?N:S).getBattleSpriteKey()),rA.setPipelineData("shiny",(se?N:S).shiny),rA.setPipelineData("variant",(se?N:S).variant),rA.setPipelineData("ignoreFieldPos",!0),He.on("animationupdate",(Be,ae)=>rA.setFrame(ae.textureFrame)),s.field.add(rA),ie.push(rA)}else{const rA=s.addFieldSprite(He.x,He.y,He.texture);He.on("animationupdate",(Be,ae)=>rA.setFrame(ae.textureFrame)),s.field.add(rA),ie.push(rA)}const ve=se?q++:Ie++,xe=ie[ve],EA=Oe.get(Re.target).get(ve),NA=se||!T?He.parentContainer.scale:S.getSpriteScale()*(S.isPlayer()?.5:1);xe.setPosition(EA.x,EA.y-He.height/2*(NA-1)),xe.setAngle(EA.angle),xe.setScale(EA.scaleX*NA,EA.scaleY*NA),xe.setData("locked",Re.locked),xe.setAlpha(Re.opacity/255),xe.pipelineData.tone=Re.tone,xe.setVisible(Re.visible&&(se?N.visible:S.visible)),xe.setBlendMode(Re.blendType===0?Kt.BlendModes.NORMAL:Re.blendType===1?Kt.BlendModes.ADD:Kt.BlendModes.DIFFERENCE)}else{const se=C[2];if(le===se.length){const xe=s.addFieldSprite(0,0,G.graphic,1);se.push(xe),s.field.add(xe),U.push(1)}const ie=le++,He=se[ie];U[ie]!==Re.priority&&(U[ie]=Re.priority,r(EA=>{let NA,rA=s.field.bringToTop;EA===0?(NA=s.getEnemyField().find(Be=>Be)??s.getPlayerField().find(Be=>Be),rA=s.field.moveBelow):EA===2&&this.bgSprite?(rA=s.field.moveAbove,NA=this.bgSprite):(EA===2||EA===3)&&(rA=EA===2?s.field.moveBelow:s.field.moveAbove,Re.focus===2?NA=this.user:Re.focus===1&&(NA=this.target)),NA&&s.field.exists(NA)?rA.bind(s.field)(He,NA):s.field.bringToTop(He)},"setSpritePriority")(Re.priority)),He.setFrame(Re.graphicFrame);const ve=Oe.get(Re.target).get(ie);He.setPosition(ve.x,ve.y),He.setAngle(ve.angle),He.setScale(ve.scaleX,ve.scaleY),He.setAlpha(Re.opacity/255),He.setVisible(Re.visible),He.setBlendMode(Re.blendType===0?Kt.BlendModes.NORMAL:Re.blendType===1?Kt.BlendModes.ADD:Kt.BlendModes.DIFFERENCE)}if(G!=null&&G.frameTimedEvents.has(m)){const Re=G.frames.length-m;for(const se of G.frameTimedEvents.get(m))w=Math.max(Re+se.execute(this),w)}const Ae=Ct(Zu);for(const Re of Ae){const se=Re===2?le:Re===0?q:Ie;if(se<C[Re].length){const ie=C[Re].slice(se,C[Re].length);for(const He of ie)if(!He.getData("locked")){const ve=C[Re].indexOf(He);C[Re].splice(ve,1),Re===2&&U.splice(ve,1),He.destroy()}}}m++,w--},"onRepeat"),onComplete:r(()=>{for(const $ of Object.values(C).flat())$&&!$.getData("locked")&&$.destroy();w?s.tweens.addCounter({duration:VE(w),onComplete:r(()=>_(),"onComplete")}):_()},"onComplete")})}getGraphicFrameDataWithoutTarget(E,R,I){var o;const N=new Map([[2,new Map],[0,new Map],[1,new Map]]);let S=0,T=0,i=0;for(const C of E){let{x:U,y:_}=C;const G=C.zoomX/100*(C.mirror?-1:1),H=C.zoomY/100;U+=R,_+=I;const c=-C.angle,f=C.target===2?S++:C.target===0?T++:i++;(o=N.get(C.target))==null||o.set(f,{x:U,y:_,scaleX:G,scaleY:H,angle:c})}return N}playWithoutTargets(E,R,I,N,S){const T={2:[],0:[],1:[]},i=r(()=>{for(const G of Object.values(T).flat())G&&G.destroy();this.bgSprite&&this.bgSprite.destroy(),S&&S()},"cleanUpAndComplete");if(!s.moveAnimations&&!this.playRegardlessOfIssues)return i();const o=this.getAnim();this.srcLine=[IP,LP,NP,sP],this.dstLine=[150,75,E,R];let C=o.frames.length,U=0,_=s.field.getAll().slice(0);s.tweens.addCounter({duration:VE(3)*I,repeat:o.frames.length,onRepeat:r(()=>{var d;_=s.field.getAll().slice(0);const G=o.frames[U],H=this.getGraphicFrameDataWithoutTarget(o.frames[U],E,R);let c=0;for(const w of G){if(w.target!==2){console.log("Encounter animations do not support targets");continue}const m=T[2];if(c===m.length){const Oe=s.addFieldSprite(0,0,o.graphic,1);m.push(Oe),s.field.add(Oe)}const W=c++,v=m[W];Ne(w.priority)||r(q=>{if(_.length>q){const Ie=s.field.getIndex(_[q]);s.field.moveTo(v,Ie)}else s.field.moveTo(v,s.field.getAll().length-1)},"setSpritePriority")(w.priority),v.setFrame(w.graphicFrame);const $=(d=H.get(w.target))==null?void 0:d.get(W);$&&(v.setPosition($.x,$.y),v.setAngle($.angle),v.setScale($.scaleX,$.scaleY),v.setAlpha(w.opacity/255),v.setVisible(w.visible),v.setBlendMode(w.blendType===0?Kt.BlendModes.NORMAL:w.blendType===1?Kt.BlendModes.ADD:Kt.BlendModes.DIFFERENCE))}if(o!=null&&o.frameTimedEvents.get(U)){const w=o.frames.length-U;for(const m of o.frameTimedEvents.get(U))C=Math.max(w+m.execute(this,N),C)}const f=Ct(Zu);for(const w of f){const m=c;if(m<T[w].length){const W=T[w].slice(m,T[w].length);for(const v of W)if(!v.getData("locked")){const $=T[w].indexOf(v);T[w].splice($,1),v.destroy()}}}U++,C--},"onRepeat"),onComplete:r(()=>{for(const G of Object.values(T).flat())G&&!G.getData("locked")&&G.destroy();C?s.tweens.addCounter({duration:VE(C),onComplete:r(()=>i(),"onComplete")}):i()},"onComplete")})}};r(Og,"BattleAnim");let Gr=Og;const Ig=class Ig extends Gr{constructor(E,R,I,N=!1){super(R,I||R,N),this.commonAnim=E}getAnim(){return this.commonAnim?hM.get(this.commonAnim)??null:null}isOppAnim(){return!1}};r(Ig,"CommonBattleAnim");let Rs=Ig;const Lg=class Lg extends Gr{constructor(E,R,I,N=!1){super(R,s.getField()[I]??R,N),this.move=E}getAnim(){var E,R;return UR.get(this.move)instanceof GO?UR.get(this.move):(R=UR.get(this.move))==null?void 0:R[(E=this.user)!=null&&E.isPlayer()?0:1]}isOppAnim(){var E;return!((E=this.user)!=null&&E.isPlayer())&&Array.isArray(UR.get(this.move))}isHideUser(){return Ke[this.move].hasFlag(je.HIDE_USER)}isHideTarget(){return Ke[this.move].hasFlag(je.HIDE_TARGET)}};r(Lg,"MoveAnim");let EU=Lg;const Ng=class Ng extends EU{constructor(E,R,I){super(R,I,0),this.chargeAnim=E}isOppAnim(){var E;return!((E=this.user)!=null&&E.isPlayer())&&Array.isArray(DR.get(this.chargeAnim))}getAnim(){var E,R;return DR.get(this.chargeAnim)instanceof GO?DR.get(this.chargeAnim):(R=DR.get(this.chargeAnim))==null?void 0:R[(E=this.user)!=null&&E.isPlayer()?0:1]}};r(Ng,"MoveChargeAnim");let _r=Ng;const sg=class sg extends Gr{constructor(E,R,I,N){super(R,I??R,!0),this.encounterAnim=E,this.oppAnim=N??!1}getAnim(){return xT.get(this.encounterAnim)??null}isOppAnim(){return this.oppAnim}};r(sg,"EncounterBattleAnim");let VI=sg;async function lQ(){const E=gN(XA).map(U=>U.toLowerCase()).map(U=>U.replace(/\_/g,"")),R=Ct(XA),N=gN(XI).map(U=>U.toLowerCase()).map(U=>U.replace(/\_/g," ")),S=Ct(XI),T=/name: (?:Common:)?(Opp )?(.*)/,i={};for(const U of Ct(A).slice(1)){const _=A[U].toUpperCase().replace(/\_/g,"");i[_]=U}const o=[],C=[];for(let U=0;U<C.length;U++){const _=C[U].split("@").slice(1),G=_.find(W=>W.startsWith("name: "));let H,c,f;if(!G.startsWith("name: Move:")&&!(H=G.startsWith("name: OppMove:"))){const v=T.exec(G)[2].toLowerCase();E.indexOf(v)>-1?c=R[E.indexOf(v)]:N.indexOf(v)>-1&&(H=G.startsWith("name: Opp "),f=S[N.indexOf(v)])}const d=G.indexOf(":",5)+1,w=G.slice(d,G.indexOf(`
`,d));if(!i.hasOwnProperty(w)&&!c&&!f)continue;const m=c||f?new GO:new GO;m instanceof GO&&(m.id=i[w]),c?hM.set(c,m):f?DR.set(f,H?[DR.get(f),m]:m):UR.set(i[w],H?[UR.get(i[w]),m]:m);for(let W=0;W<_.length;W++){const v=_[W],$=v.slice(0,v.indexOf(":")),Oe=v.slice($.length+1,v.lastIndexOf(`
`)).trim();switch($){case"array":{const q=Oe.split("  - - - ").slice(1);for(let Ie=0;Ie<q.length;Ie++){m.frames.push([]);const Ae=q[Ie].split("    - - ");for(let Re=0;Re<Ae.length;Re++){const se=Ae[Re].replace(/ {6}\- /g,"").split(`
`),ie=new zl(Number.parseFloat(se[0]),Number.parseFloat(se[1]),Number.parseFloat(se[2]),Number.parseFloat(se[11]),Number.parseFloat(se[3]),Number.parseInt(se[4])===1,Number.parseInt(se[6])===1,Number.parseInt(se[5]),Number.parseInt(se[7]),Number.parseInt(se[8]),Number.parseInt(se[12]),Number.parseInt(se[13]),Number.parseInt(se[14]),Number.parseInt(se[15]),Number.parseInt(se[16]),Number.parseInt(se[17]),Number.parseInt(se[18]),Number.parseInt(se[19]),Number.parseInt(se[21]),Number.parseInt(se[22]),Number.parseInt(se[23]),Number.parseInt(se[24]),Number.parseInt(se[20])===1,Number.parseInt(se[25]),Number.parseInt(se[26]));m.frames[Ie].push(ie)}}break}case"graphic":{const q=Oe!=="''"?Oe:"";m.graphic=q.indexOf(".")>-1?q.slice(0,Oe.indexOf(".")):q;break}case"timing":{const q=Oe.split("- !ruby/object:PBAnimTiming ").slice(1);for(let Ie=0;Ie<q.length;Ie++){const le=q[Ie].replace(/\n/g," ").replace(/[ ]{2,}/g," ").replace(/[a-z]+: ! '', /gi,"").replace(/name: (.*?),/,'name: "$1",').replace(/flashColor: !ruby\/object:Color { alpha: ([\d\.]+), blue: ([\d\.]+), green: ([\d\.]+), red: ([\d\.]+)}/,"flashRed: $4, flashGreen: $3, flashBlue: $2, flashAlpha: $1"),Ae=Number.parseInt(/frame: (\d+)/.exec(le)[1]);let Re=/name: "(.*?)"/.exec(le)[1].replace("''","");const se=Number.parseInt(/timingType: (\d)/.exec(le)[1]);let ie;switch(se){case 0:if(Re&&Re.indexOf(".")===-1){let xe;["wav","mp3","m4a"].every(EA=>o.indexOf(`${Re}.${EA}`)>-1?(xe=EA,!1):!0),xe||(xe=".wav"),Re+=`.${xe}`}ie=new Mr(Ae,Re);break;case 1:ie=new Pr(Ae,Re.slice(0,Re.indexOf(".")));break;case 2:ie=new AU(Ae,Re.slice(0,Re.indexOf(".")));break}if(!ie)continue;const He=/([a-z]+): (.*?)(?:,|\})/gi;let ve;for(;ve=He.exec(le);){const xe=ve[1];let EA=ve[2];switch(xe){case"bgX":case"bgY":EA=Number.parseFloat(EA);break;case"volume":case"pitch":case"opacity":case"colorRed":case"colorGreen":case"colorBlue":case"colorAlpha":case"duration":case"flashScope":case"flashRed":case"flashGreen":case"flashBlue":case"flashAlpha":case"flashDuration":EA=Number.parseInt(EA);break}ie.hasOwnProperty(xe)&&(ie[xe]=EA)}m.frameTimedEvents.has(Ae)||m.frameTimedEvents.set(Ae,[]),m.frameTimedEvents.get(Ae).push(ie)}break}case"position":m.position=Number.parseInt(Oe);break;case"hue":m.hue=Number.parseInt(Oe);break}}}}r(lQ,"populateAnims");const Sg=class Sg extends Nt{constructor(E){super(),this.user=E}start(){s.ui.setMode(Ce.PARTY,CR.REVIVAL_BLESSING,this.user.getFieldIndex(),(E,R)=>{if(E>=0&&E<6){const I=s.getPlayerParty()[E];if(!I||!I.isFainted())return this.end();I.resetTurnData(),I.resetStatus(!0,!1,!1,!1),I.heal(Math.min(uA(.5*I.getMaxHp()),I.getMaxHp())),s.queueMessage(D.t("moveTriggers:revivalBlessing",{pokemonName:I.name}),0,!0);const N=this.user.getAlly();s.currentBattle.double&&s.getPlayerParty().length>1&&!Ne(N)&&(E<=1?(s.unshiftPhase(new jR(ZA.SWITCH,I.getFieldIndex(),E,!1,!0)),s.unshiftPhase(new _I(!0))):N.isFainted()&&(s.unshiftPhase(new jR(ZA.SWITCH,N.getFieldIndex(),E,!1,!0)),s.unshiftPhase(new _I(!0))))}s.ui.setMode(Ce.MESSAGE).then(()=>this.end())},st.FilterFainted)}};r(Sg,"RevivalBlessingPhase");let Xu=Sg;const Tg=class Tg extends bE{constructor(E){super(),this.moveId=E}start(){fM(this.moveId).then(()=>dM([this.moveId],!0)).then(()=>this.end())}};r(Tg,"LoadMoveAnimPhase");let tU=Tg;const ng=class ng extends bE{constructor(E,R=!1){super(),this.anim=E,this.onSubstitute=R}start(){super.start(),this.anim.play(this.onSubstitute,()=>this.end())}};r(ng,"MoveAnimPhase");let Qu=ng;var _E=(t=>(t[t._2=0]="_2",t[t._2_TO_5=1]="_2_TO_5",t[t._3=2]="_3",t[t._10=3]="_10",t[t.BEAT_UP=4]="BEAT_UP",t))(_E||{});const ag=class ag{constructor(E,R,I,N,S,T,i,o,C,U){this.attrs=[],this.conditions=[],this.flags=0,this.nameAppend="",this.id=E,this._type=R,this._category=I,this.moveTarget=N,this.power=S,this.accuracy=T,this.pp=i,this.chance=o,this.priority=C,this.generation=U,N===ee.USER&&this.setFlag(je.IGNORE_PROTECT,!0),I===u.PHYSICAL&&this.setFlag(je.MAKES_CONTACT,!0),this.localize()}get type(){return this._type}get category(){return this._category}localize(){const E=A[this.id].split("_").filter(R=>R).map((R,I)=>I?`${R[0]}${R.slice(1).toLowerCase()}`:R.toLowerCase()).join("");this.name=this.id?`${D.t(`move:${E}.name`)}${this.nameAppend}`:"",this.effect=this.id?`${D.t(`move:${E}.effect`)}${this.nameAppend}`:""}getAttrs(E){return this.attrs.filter(R=>R instanceof E)}hasAttr(E){return this.attrs.some(R=>R instanceof E)}findAttr(E){return this.attrs.find(E)}attr(E,...R){const I=new E(...R);this.attrs.push(I);let N=I.getCondition();return N&&(typeof N=="function"&&(N=new YN(N)),this.conditions.push(N)),this}addAttr(E){this.attrs.push(E);let R=E.getCondition();return R&&(typeof R=="function"&&(R=new YN(R)),this.conditions.push(R)),this}target(E){return this.moveTarget=E,this}hasFlag(E){return!!(this.flags&E)}isMultiTarget(){switch(this.moveTarget){case ee.ALL_OTHERS:case ee.ALL_NEAR_OTHERS:case ee.ALL_NEAR_ENEMIES:case ee.ALL_ENEMIES:case ee.USER_AND_ALLIES:case ee.ALL:case ee.USER_SIDE:case ee.ENEMY_SIDE:case ee.BOTH_SIDES:return!0}return!1}isAllyTarget(){switch(this.moveTarget){case ee.USER:case ee.NEAR_ALLY:case ee.ALLY:case ee.USER_OR_NEAR_ALLY:case ee.USER_AND_ALLIES:case ee.USER_SIDE:return!0}return!1}isChargingMove(){return!1}isTypeImmune(E,R,I){if(this.moveTarget===ee.USER)return!1;switch(I){case L.GRASS:if(this.hasFlag(je.POWDER_MOVE))return!0;break;case L.DARK:if(E.hasAbility(O.PRANKSTER)&&this.category===u.STATUS&&E.isPlayer()!==R.isPlayer())return!0;break}return!1}hitsSubstitute(E,R){if([ee.USER,ee.USER_SIDE,ee.ENEMY_SIDE,ee.BOTH_SIDES].includes(this.moveTarget)||!(R!=null&&R.getTag(Y.SUBSTITUTE)))return!1;const I=new SA(!1);return sA(jN,E,null,!1,I),!I.value&&!this.hasFlag(je.SOUND_BASED)&&!this.hasFlag(je.IGNORE_SUBSTITUTE)}condition(E){return typeof E=="function"&&(E=new YN(E)),this.conditions.push(E),this}edgeCase(){return this}partial(){return this.nameAppend+=" (P)",this}unimplemented(){return this.nameAppend+=" (N)",this}setFlag(E,R){R?this.flags|=E:this.flags^=E}makesContact(E=!0){return this.setFlag(je.MAKES_CONTACT,E),this}ignoresProtect(){return this.setFlag(je.IGNORE_PROTECT,!0),this}soundBased(){return this.setFlag(je.SOUND_BASED,!0),this}hidesUser(){return this.setFlag(je.HIDE_USER,!0),this}hidesTarget(){return this.setFlag(je.HIDE_TARGET,!0),this}bitingMove(){return this.setFlag(je.BITING_MOVE,!0),this}pulseMove(){return this.setFlag(je.PULSE_MOVE,!0),this}punchingMove(){return this.setFlag(je.PUNCHING_MOVE,!0),this}slicingMove(){return this.setFlag(je.SLICING_MOVE,!0),this}recklessMove(){return this.setFlag(je.RECKLESS_MOVE,!0),this}ballBombMove(){return this.setFlag(je.BALLBOMB_MOVE,!0),this}powderMove(){return this.setFlag(je.POWDER_MOVE,!0),this}danceMove(){return this.setFlag(je.DANCE_MOVE,!0),this}windMove(){return this.setFlag(je.WIND_MOVE,!0),this}triageMove(){return this.setFlag(je.TRIAGE_MOVE,!0),this}ignoresAbilities(){return this.setFlag(je.IGNORE_ABILITIES,!0),this}checkAllHits(){return this.setFlag(je.CHECK_ALL_HITS,!0),this}ignoresSubstitute(){return this.setFlag(je.IGNORE_SUBSTITUTE,!0),this}redirectCounter(){return this.setFlag(je.REDIRECT_COUNTER,!0),this}reflectable(){return this.setFlag(je.REFLECTABLE,!0),this}doesFlagEffectApply({flag:E,user:R,target:I,isFollowUp:N=!1}){switch(E){case je.MAKES_CONTACT:if(R.hasAbilityWithAttr(Nl)||this.hitsSubstitute(R,I))return!1;break;case je.IGNORE_ABILITIES:if(R.hasAbilityWithAttr(pI)){const S=new SA(!1);if(sA(pI,R,S,!1,this),S.value)return!0}return this.hasFlag(je.IGNORE_ABILITIES)&&!N;case je.IGNORE_PROTECT:if(R.hasAbilityWithAttr(hl)&&this.doesFlagEffectApply({flag:je.MAKES_CONTACT,user:R}))return!0;break;case je.REFLECTABLE:if(I!=null&&I.getTag(Es)||!(I!=null&&I.getTag(Y.MAGIC_COAT)||!this.doesFlagEffectApply({flag:je.IGNORE_ABILITIES,user:R,target:I})&&(I!=null&&I.hasAbilityWithAttr(rr))))return!1;break}return!!(this.flags&E)}applyConditions(E,R,I){for(const N of this.conditions)if(!N.apply(E,R,I))return!1;return!0}getFailedText(E,R,I){for(const N of this.attrs){const S=N.getFailedText(E,R,I);if(S)return S}}getUserBenefitScore(E,R,I){let N=0;for(const S of this.attrs)N+=S.getUserBenefitScore(E,R,I);for(const S of this.conditions)N+=S.getUserBenefitScore(E,R,I);return N}getTargetBenefitScore(E,R,I){var S,T;let N=0;if(((T=(S=R.getAlly())==null?void 0:S.getTag(Y.COMMANDED))==null?void 0:T.getSourcePokemon())===R)return 20*(R.isPlayer()===E.isPlayer()?-1:1);for(const i of this.attrs)N+=i.getTargetBenefitScore(E,i.selfTarget?E:R,I)*(R!==E&&i.selfTarget?-1:1);return N}calculateBattleAccuracy(E,R,I=!1){var T;const N=new me(this.accuracy);if(LE(QI,E,R,this,N),FI(mC,R,E,this,{value:!1},I,N),N.value===-1)return N.value;const S=this.hasAttr(YL);return S||s.applyModifiers(Qr,E.isPlayer(),E,N),((T=s.arena.weather)==null?void 0:T.weatherType)===X.FOG&&(N.value=Math.floor(N.value*.9)),!S&&s.arena.getTag(oe.GRAVITY)&&(N.value=Math.floor(N.value*1.67)),N.value}calculateBattlePower(E,R,I=!1){if(this.category===u.STATUS)return-1;const N=new me(this.power),S=new me(1),T=new me(this.type);ZO(TI,E,R,this,!0,T,S);const i=E.getTeraType();E.isTerastallized&&i===this.type&&N.value<60&&this.priority<=0&&!this.hasAttr(vA)&&!s.findModifier(G=>G instanceof $I&&G.pokemonId===E.id)&&(N.value=60),ZO(ja,E,R,this,I,N);const o=E.getAlly();Ne(o)||ZO(Er,o,R,this,I,N);const C=new Set(s.getField(!0).map(G=>G.getAbilityAttrs(CN).filter(H=>{const c=H.getCondition();return!c||c(G)})).flat());for(const G of C)G.applyPreAttack(E,null,I,R,this,[N]);(E instanceof Rt?s.getPlayerField():s.getEnemyField()).forEach(G=>ZO(bC,G,R,this,I,N)),N.value*=S.value;const _=E.findTag(G=>G instanceof gS&&G.boostedType===T.value);return _&&(N.value*=_.boostValue),LE(TE,E,R,this,N),this.hasAttr(VS)||(s.arena.applyTags(Ja,I,T.value,N),s.applyModifiers(DI,E.isPlayer(),E,T.value,N)),E.getTag(ml)&&(N.value*=1.5),N.value}getPriority(E,R=!0){const I=new me(this.priority);return LE(CU,E,null,this,I),sA(lL,E,null,R,this,I),I.value}calculateEffectivePower(){let E;if(this.id===A.TRIPLE_AXEL)E=94.14;else if(this.id===A.TRIPLE_KICK)E=47.07;else{const I=this.getAttrs(vA)[0];I?E=I.calculateExpectedHitCount(this)*this.power:E=this.power*(this.accuracy===-1?1:this.accuracy/100)}let R=1;return this.hasAttr(HI)&&(R+=2),this.hasAttr(kR)&&(R+=1),this.isChargingMove()&&(R+=1),E/R}canBeMultiStrikeEnhanced(E,R=!1){const{targets:I,multiple:N}=JI(E,this.id),S=N&&I.length>1,T=[vA,vI,Os],i=[A.FLING,A.UPROAR,A.ROLLOUT,A.ICE_BALL,A.ENDEAVOR],o=E.getAlly(),C=this.id===A.POLLEN_PUFF&&!Ne(o)&&I.includes(o.getBattlerIndex());return(!R||!S)&&!this.isChargingMove()&&!T.some(U=>this.hasAttr(U))&&!i.some(U=>this.id===U)&&!C&&this.category!==u.STATUS}};r(ag,"Move");let ur=ag;const rg=class rg extends ur{constructor(E,R,I,N,S,T,i,o,C){super(E,R,I,ee.NEAR_OTHER,N,S,T,i,o,C),this.type===L.FIRE&&this.addAttr(new fE(!1,J.FREEZE))}getTargetBenefitScore(E,R,I){const N=super.getTargetBenefitScore(E,R,I);let S=0;const T=R.getAttackTypeEffectiveness(this.type,E,void 0,void 0,this);S=Math.pow(T-1,2)*(T<1?-2:2);const[i,o]=this.category===u.PHYSICAL?[h.ATK,h.SPATK]:[h.SPATK,h.ATK],C=new me(E.getEffectiveStat(i,R)),U=E.getEffectiveStat(o,R);LE(wS,E,R,I,C);const _=U/C.value;_<=.75?S*=2:_<=.875&&(S*=1.5);const G=new me(this.calculateEffectivePower());return LE(TE,E,R,I,G),S+=Math.floor(G.value/5),N-S}};r(rg,"AttackMove");let B=rg;const ig=class ig extends ur{constructor(E,R,I,N,S,T,i){super(E,R,u.STATUS,ee.NEAR_OTHER,-1,I,N,S,T,i)}};r(ig,"StatusMove");let ne=ig;const og=class og extends ur{constructor(E,R,I,N,S,T,i){super(E,R,u.STATUS,ee.USER,-1,I,N,S,T,i)}};r(og,"SelfStatusMove");let we=og;function l6(t){return class extends t{constructor(){super(...arguments),this.chargeAnim=XI[`${A[this.id]}_CHARGING`],this.chargeAttrs=[]}isChargingMove(){return!0}chargeText(E){return this._chargeText=E,this}showChargeText(E,R){s.queueMessage(this._chargeText.replace("{USER}",Z(E)).replace("{TARGET}",Z(R)))}getChargeAttrs(E){return this.chargeAttrs.filter(R=>R instanceof E)}hasChargeAttr(E){return this.chargeAttrs.some(R=>R instanceof E)}chargeAttr(E,...R){const I=new E(...R);return this.chargeAttrs.push(I),this}}}r(l6,"ChargeMove");const Cg=class Cg extends l6(B){};r(Cg,"ChargingAttackMove");let pt=Cg;const lg=class lg extends l6(we){};r(lg,"ChargingSelfStatusMove");let Ju=lg;const Ug=class Ug{constructor(E=!1){this.selfTarget=E}apply(E,R,I,N){return!0}getCondition(){return null}getFailedText(E,R,I){}getUserBenefitScore(E,R,I){return 0}getTargetBenefitScore(E,R,I){return 0}};r(Ug,"MoveAttr");let wA=Ug;const Dg=class Dg extends wA{constructor(E,R){super(E),this.options=R}get trigger(){var E;return((E=this.options)==null?void 0:E.trigger)??YR.POST_APPLY}get firstHitOnly(){var E;return((E=this.options)==null?void 0:E.firstHitOnly)??!1}get lastHitOnly(){var E;return((E=this.options)==null?void 0:E.lastHitOnly)??!1}get firstTargetOnly(){var E;return((E=this.options)==null?void 0:E.firstTargetOnly)??!1}get effectChanceOverride(){var E;return(E=this.options)==null?void 0:E.effectChanceOverride}canApply(E,R,I,N){return!!(this.selfTarget?E.hp&&!E.getTag(Y.FRENZY):R.hp)&&(this.selfTarget||!R.getTag(Y.PROTECTED)||I.doesFlagEffectApply({flag:je.IGNORE_PROTECT,user:E,target:R}))}apply(E,R,I,N){return this.canApply(E,R,I,N)}getMoveChance(E,R,I,N,S){const T=new me(this.effectChanceOverride??I.chance);if(sA(za,E,null,!S,T,I),(!I.hasAttr(VA)||T.value<=I.chance)&&!I.hasAttr(uU)){const i=E.isPlayer()?qe.PLAYER:qe.ENEMY;s.arena.applyTagsForSide(oe.WATER_FIRE_PLEDGE,i,!1,T)}return N||FI(vL,R,E,null,null,!S,T),T.value}};r(Dg,"MoveEffectAttr");let tA=Dg;const Mg=class Mg extends wA{constructor(){super(!0)}};r(Mg,"MoveHeaderAttr");let RU=Mg;const Pg=class Pg extends RU{constructor(E){super(),this.message=E}apply(E,R,I,N){const S=typeof this.message=="string"?this.message:this.message(E,I);return S?(s.queueMessage(S),!0):!1}};r(Pg,"MessageHeaderAttr");let $u=Pg;const Gg=class Gg extends RU{constructor(E){super(),this.tagType=E}apply(E,R,I,N){return E.addTag(this.tagType),!0}};r(Gg,"AddBattlerTagHeaderAttr");let OU=Gg;const _g=class _g extends OU{constructor(){super(Y.BEAK_BLAST_CHARGING),this.chargeAnim=XI.BEAK_BLAST_CHARGING}};r(_g,"BeakBlastHeaderAttr");let yS=_g;const ug=class ug extends wA{constructor(E){super(),this.message=E}apply(E,R,I,N){const S=typeof this.message=="string"?this.message:this.message(E,R,I);return S?(s.queueMessage(S,500),!0):!1}};r(ug,"PreMoveMessageAttr");let MN=ug;const Hg=class Hg extends wA{constructor(E,R){super(),this.message=E,this.conditionFunc=R??(()=>!0)}apply(E,R,I){return this.conditionFunc(E,R,I)}getFailedText(E,R,I){if(this.message&&this.conditionFunc(E,R,I))return typeof this.message=="string"?this.message:this.message(E,R,I)}};r(Hg,"PreUseInterruptAttr");let IU=Hg;const cg=class cg extends wA{};r(cg,"RespectAttackTypeImmunityAttr");let LU=cg;const Bg=class Bg extends wA{apply(E,R,I,N){return N[0].value=!0,!0}};r(Bg,"IgnoreOpponentStatStagesAttr");let FN=Bg;const hg=class hg extends wA{apply(E,R,I,N){return N[0].value++,!0}getUserBenefitScore(E,R,I){return 3}};r(hg,"HighCritAttr");let hE=hg;const fg=class fg extends wA{apply(E,R,I,N){return N[0].value=!0,!0}getUserBenefitScore(E,R,I){return 5}};r(fg,"CritOnlyAttr");let nI=fg;const dg=class dg extends wA{constructor(E){super(),this.damage=E}apply(E,R,I,N){return N[0].value=this.getDamage(E,R,I),!0}getDamage(E,R,I){return this.damage}};r(dg,"FixedDamageAttr");let oO=dg;const Kg=class Kg extends oO{constructor(){super(0)}apply(E,R,I,N){return N[0].value=E.hp,!0}};r(Kg,"UserHpDamageAttr");let qu=Kg;const Fg=class Fg extends oO{constructor(){super(0)}apply(E,R,I,N){var T;const S=((T=E.getHeldItems().find(i=>i instanceof $I))==null?void 0:T.getStackCount())??0;if(S<=0)return N[0].value=uA(R.hp/2),!0;switch(E.turnData.hitCount-E.turnData.hitsLeft){case 0:this.initialHp=R.hp;default:return N[0].value=uA(this.initialHp/2),!0;case S+1:return N[0].value=uA(R.hp/2),!0}}getTargetBenefitScore(E,R,I){return R.getHpRatio()>.5?Math.floor((R.getHpRatio()-.5)*-24+4):-20}};r(Fg,"TargetHalfHpDamageAttr");let bT=Fg;const Yg=class Yg extends oO{constructor(){super(0)}apply(E,R,I,N){return N[0].value=R.hp-E.hp,!0}getCondition(){return(E,R,I)=>E.hp<=R.hp}};r(Yg,"MatchHpAttr");let zu=Yg;const Wg=class Wg extends oO{constructor(E,R){super(0),this.moveFilter=E,this.multiplier=R}apply(E,R,I,N){const S=E.turnData.attacksReceived.filter(T=>this.moveFilter(Ke[T.move])).reduce((T,i)=>T+i.damage,0);return N[0].value=uA(S*this.multiplier),!0}getCondition(){return(E,R,I)=>!!E.turnData.attacksReceived.filter(N=>this.moveFilter(Ke[N.move])).length}};r(Wg,"CounterDamageAttr");let PN=Wg;const mg=class mg extends oO{constructor(){super(0)}getDamage(E,R,I){return E.level}};r(mg,"LevelDamageAttr");let NU=mg;const gg=class gg extends oO{constructor(){super(0)}getDamage(E,R,I){return uA(E.level*(E.randBattleSeedIntRange(50,150)*.01))}};r(gg,"RandomLevelDamageAttr");let ju=gg;const pg=class pg extends wA{apply(E,R,I,N){const S=N[0];return S.value=this.getModifiedDamage(E,R,I,S.value),!0}getModifiedDamage(E,R,I,N){return N}};r(pg,"ModifiedDamageAttr");let sU=pg;const yg=class yg extends sU{getModifiedDamage(E,R,I,N){return Math.min(N,R.hp-1)}getUserBenefitScore(E,R,I){return R.hp>1?0:-20}};r(yg,"SurviveDamageAttr");let SU=yg;const wg=class wg extends tA{apply(E,R,I,N){return s.queueMessage(D.t("moveTriggers:splash")),!0}};r(wg,"SplashAttr");let eH=wg;const Vg=class Vg extends tA{apply(E,R,I,N){return s.queueMessage(D.t("moveTriggers:celebrate",{playerName:ke==null?void 0:ke.username})),!0}};r(Vg,"CelebrateAttr");let AH=Vg;const vg=class vg extends tA{constructor(E=!1,R=.25,I=!1){super(!0,{lastHitOnly:!0}),this.useHp=E,this.damageRatio=R,this.unblockable=I}apply(E,R,I,N){var C;if(!super.apply(E,R,I,N))return!1;const S=new SA(!1);if(this.unblockable||(sA(hC,E,S),sA($E,E,S)),S.value||this.useHp&&[EE.FAIL,EE.MISS].includes(((C=E.getLastXMoves(1)[0])==null?void 0:C.result)??EE.FAIL))return!1;const T=(this.useHp?E.getMaxHp():E.turnData.totalDamageDealt)*this.damageRatio,i=E.turnData.totalDamageDealt?1:0,o=uA(T,i);return!o||S.value?!1:(E.damageAndUpdate(o,{result:CA.INDIRECT,ignoreSegments:!0}),s.queueMessage(D.t("moveTriggers:hitWithRecoil",{pokemonName:Z(E)})),E.turnData.damageTaken+=o,!0)}getUserBenefitScore(E,R,I){return Math.floor(I.power/5/-4)}};r(vg,"RecoilAttr");let rR=vg;const xg=class xg extends tA{constructor(){super(!0,{trigger:YR.POST_TARGET})}apply(E,R,I,N){return E.damageAndUpdate(E.hp,{result:CA.INDIRECT,ignoreSegments:!0}),E.turnData.damageTaken+=E.hp,!0}getUserBenefitScore(E,R,I){return E.isBoss()?-20:Math.ceil(((1-E.getHpRatio())*10-10)*(R.getAttackTypeEffectiveness(I.type,E)-.5))}};r(xg,"SacrificialAttr");let vI=xg;const bg=class bg extends tA{constructor(){super(!0)}apply(E,R,I,N){return super.apply(E,R,I,N)?(E.damageAndUpdate(E.hp,{result:CA.INDIRECT,ignoreSegments:!0}),E.turnData.damageTaken+=E.hp,!0):!1}getUserBenefitScore(E,R,I){return E.isBoss()?-20:Math.ceil(((1-E.getHpRatio())*10-10)*(R.getAttackTypeEffectiveness(I.type,E)-.5))}};r(bg,"SacrificialAttrOnHit");let Os=bg;const Zg=class Zg extends tA{constructor(){super(!0,{trigger:YR.POST_TARGET})}apply(E,R,I,N){if(!super.apply(E,R,I,N))return!1;const S=new SA(!1);return sA($E,E,S),S.value||(E.damageAndUpdate(uA(E.getMaxHp()/2),{result:CA.INDIRECT,ignoreSegments:!0}),s.queueMessage(D.t("moveTriggers:cutHpPowerUpMove",{pokemonName:Z(E)}))),!0}getUserBenefitScore(E,R,I){return E.isBoss()?-10:Math.ceil(((1-E.getHpRatio()/2)*10-10)*(R.getAttackTypeEffectiveness(I.type,E)-.5))}};r(Zg,"HalfSacrificialAttr");let TU=Zg;const kg=class kg extends tA{constructor(E,R){super(!0),this.hpCost=E,this.roundUp=R}apply(E,R,I,N){if(!super.apply(E,R,I,N))return!1;const S=this.roundUp?Math.ceil(E.getMaxHp()*this.hpCost):Math.floor(E.getMaxHp()*this.hpCost);return E.damageAndUpdate(S,{result:CA.INDIRECT,ignoreSegments:!0,ignoreFaintPhase:!0}),E.addTag(Y.SUBSTITUTE,0,I.id,E.id),!0}getUserBenefitScore(E,R,I){return E.isBoss()?-10:5}getCondition(){return(E,R,I)=>!E.getTag(OR)&&E.hp>(this.roundUp?Math.ceil(E.getMaxHp()*this.hpCost):Math.floor(E.getMaxHp()*this.hpCost))&&E.getMaxHp()>1}getFailedText(E,R,I){if(E.getTag(OR))return D.t("moveTriggers:substituteOnOverlap",{pokemonName:Z(E)});if(E.hp<=Math.floor(E.getMaxHp()/4)||E.getMaxHp()===1)return D.t("moveTriggers:substituteNotEnoughHp")}};r(kg,"AddSubstituteAttr");let nU=kg;const Xg=class Xg extends tA{constructor(E,R,I){super(I===void 0||I),this.healRatio=E||1,this.showAnim=!!R}apply(E,R,I,N){return this.addHealPhase(this.selfTarget?E:R,this.healRatio),!0}addHealPhase(E,R){s.unshiftPhase(new Dt(E.getBattlerIndex(),uA(E.getMaxHp()*R),D.t("moveTriggers:healHp",{pokemonName:Z(E)}),!0,!this.showAnim))}getTargetBenefitScore(E,R,I){const N=(1-(this.selfTarget?E:R).getHpRatio())*20-this.healRatio*10;return Math.round(N/(1-this.healRatio/2))}};r(Xg,"HealAttr");let Vt=Xg;const Qg=class Qg extends tA{constructor(E,R){super(),this.message=E,this.abilityCondition=R}canApply(E,R,I,N){return!!(this.selfTarget&&E.hp&&!E.getTag(Y.FRENZY)||!this.selfTarget&&(!R.getTag(Y.PROTECTED)||I.hasFlag(je.IGNORE_PROTECT)))}apply(E,R,I,N){return this.canApply(E,R,I,N)?((E.isPlayer()?s.getPlayerParty():s.getEnemyParty()).forEach(T=>this.cureStatus(T,E.id)),this.message&&s.queueMessage(this.message),!0):!1}cureStatus(E,R){var I,N;!E.isOnField()||E.id===R?(E.resetStatus(!1),E.updateInfo()):E.hasAbility(this.abilityCondition)?(s.queueAbilityDisplay(E,((I=E.getPassiveAbility())==null?void 0:I.id)===this.abilityCondition,!0),s.queueAbilityDisplay(E,((N=E.getPassiveAbility())==null?void 0:N.id)===this.abilityCondition,!1)):(E.resetStatus(),E.updateInfo())}};r(Qg,"PartyStatusCureAttr");let ZT=Qg;const Jg=class Jg extends tA{constructor(){super(!0)}apply(E,R,I,N){const S=R.getAlly(),T=new SA(!1);return Ne(S)||sA($E,S,T),T.value||!S||S.switchOutStatus?!1:(S.damageAndUpdate(Math.max(1,Math.floor(1/16*S.getMaxHp())),{result:CA.INDIRECT}),!0)}getTargetBenefitScore(E,R,I){return Ne(R.getAlly())?0:-5}};r(Jg,"FlameBurstAttr");let EH=Jg;const $g=class $g extends vI{constructor(E,R){super(),this.restorePP=E,this.moveMessage=R}apply(E,R,I,N){if(!super.apply(E,R,I,N))return!1;const T=(E.isPlayer()?s.getPlayerParty():s.getEnemyParty()).map(i=>i.getMaxHp()).reduce((i,o)=>Math.max(o,i),0);return s.pushPhase(new Dt(E.getBattlerIndex(),T,D.t(this.moveMessage,{pokemonName:Z(E)}),!0,!1,!1,!0,!1,this.restorePP),!0),!0}getUserBenefitScore(E,R,I){return-20}getCondition(){return(E,R,I)=>s.getPlayerParty().filter(N=>N.isActive()).length>s.currentBattle.getBattlerCount()}};r($g,"SacrificialFullRestoreAttr");let aU=$g;const qg=class qg extends wA{constructor(E){super(),this.weather=E}apply(E,R,I,N){var T;const S=N[0];return((T=s.arena.weather)==null?void 0:T.weatherType)===this.weather&&(S.value=Math.max(S.value,1)),!0}};r(qg,"IgnoreWeatherTypeDebuffAttr");let rU=qg;const zg=class zg extends Vt{constructor(){super(.5)}apply(E,R,I,N){var T,i;let S=.5;if(!((T=s.arena.weather)!=null&&T.isEffectSuppressed())){const o=((i=s.arena.weather)==null?void 0:i.weatherType)||X.NONE;S=this.getWeatherHealRatio(o)}return this.addHealPhase(E,S),!0}};r(zg,"WeatherHealAttr");let iU=zg;const jg=class jg extends iU{getWeatherHealRatio(E){switch(E){case X.SUNNY:case X.HARSH_SUN:return 2/3;case X.RAIN:case X.SANDSTORM:case X.HAIL:case X.SNOW:case X.HEAVY_RAIN:return .25;default:return .5}}};r(jg,"PlantHealAttr");let kT=jg;const ep=class ep extends iU{getWeatherHealRatio(E){switch(E){case X.SANDSTORM:return 2/3;default:return .5}}};r(ep,"SandHealAttr");let tH=ep;const Ap=class Ap extends Vt{constructor(E=.5,R=2/3,I,N,S){super(E,I,N),this.normalHealRatio=E,this.boostedHealRatio=R,this.condition=S}apply(E,R,I,N){const S=this.condition&&this.condition(E,R,I)?this.boostedHealRatio:this.normalHealRatio;return this.addHealPhase(R,S),!0}};r(Ap,"BoostHealAttr");let RH=Ap;const Ep=class Ep extends Vt{apply(E,R,I,N){return E.getAlly()===R?(super.apply(E,R,I,N),!0):!1}};r(Ep,"HealOnAllyAttr");let oU=Ep;const tp=class tp extends tA{constructor(E,R){super(!0),this.healRatio=E??.5,this.healStat=R??null}apply(E,R,I,N){let S=0,T="";const i=R.hasAbilityWithAttr(qa,!1);return this.healStat!==null?(S=R.getEffectiveStat(this.healStat),T=D.t("battle:drainMessage",{pokemonName:Z(R)})):(S=uA(E.turnData.singleHitDamageDealt*this.healRatio),T=D.t("battle:regainHealth",{pokemonName:Z(E)})),i&&(E.hasAbilityWithAttr($E)?(S=0,T=""):(E.turnData.damageTaken+=S,S=S*-1,T="")),s.unshiftPhase(new Dt(E.getBattlerIndex(),S,T,!1,!0)),!0}getUserBenefitScore(E,R,I){if(this.healStat){const N=R.getEffectiveStat(this.healStat);return Math.floor(Math.max(0,Math.min(1,(N+E.hp)/E.getMaxHp()-.33))/E.getHpRatio())}return Math.floor(Math.max(1-E.getHpRatio()-.33,0)*(I.power/4))}};r(tp,"HitHealAttr");let AR=tp;const Rp=class Rp extends wA{constructor(E,R=1){super(),this.moveIncrementFunc=E,this.increaseAmount=R}apply(E,R,I,N){return this.moveIncrementFunc(E,R,I)?(N[0].value+=this.increaseAmount,!0):!1}};r(Rp,"IncrementMovePriorityAttr");let CU=Rp;const Op=class Op extends wA{constructor(E){super(),this.intrinsicMultiHitType=E!==void 0?E:_E._2_TO_5,this.multiHitType=this.intrinsicMultiHitType}getMultiHitType(){return this.multiHitType}apply(E,R,I,N){const S=new me(this.intrinsicMultiHitType);return LE(lU,E,R,I,S),this.multiHitType=S.value,N[0].value=this.getHitCount(E,R),!0}getTargetBenefitScore(E,R,I){return-5}getHitCount(E,R){switch(this.multiHitType){case _E._2_TO_5:{const N=E.randBattleSeedInt(20),S=new me(N);return sA(Tr,E,null,!1,S),S.value>=13?2:S.value>=6?3:S.value>=3?4:5}case _E._2:return 2;case _E._3:return 3;case _E._10:return 10;case _E.BEAT_UP:return(E.isPlayer()?s.getPlayerParty():s.getEnemyParty()).reduce((N,S)=>N+(S.id===E.id?1:S!=null&&S.status&&S.status.effect!==J.NONE?0:1),0)}}calculateExpectedHitCount(E,{ignoreAcc:R=!1,maxMultiHit:I=!1,partySize:N=1}={}){let S;switch(this.multiHitType){case _E._2_TO_5:S=I?5:3.1;break;case _E._2:S=2;break;case _E._3:S=3;break;case _E._10:S=10;break;case _E.BEAT_UP:S=Math.max(1,N/2);break}if(R||E.accuracy===-1)return S;const T=E.accuracy/100;return E.hasFlag(je.CHECK_ALL_HITS)&&!I?T*(1-Math.pow(T,S))/(1-T):S*=T}};r(Op,"MultiHitAttr");let vA=Op;const Ip=class Ip extends wA{apply(E,R,I,N){return!1}};r(Ip,"ChangeMultiHitTypeAttr");let lU=Ip;const Lp=class Lp extends lU{apply(E,R,I,N){return E.species.speciesId===e.GRENINJA&&E.hasAbility(O.BATTLE_BOND)&&E.formIndex===2?(N[0].value=_E._3,!0):!1}};r(Lp,"WaterShurikenMultiHitTypeAttr");let OH=Lp;const Np=class Np extends tA{constructor(E,R,I,N=!1){super(R),this.overrideStatus=!1,this.effect=E,this.turnsRemaining=I,this.overrideStatus=N}apply(E,R,I,N){const S=this.getMoveChance(E,R,I,this.selfTarget,!0),T=S<0||S===100||E.randBattleSeedInt(100)<S,i=I.category!==u.STATUS;if(T){const o=this.selfTarget?E:R;if(E!==R&&I.category===u.STATUS&&!R.canSetStatus(this.effect,i,!1,E,!0))return!1;if((!o.status||this.overrideStatus||o.status.effect===this.effect&&S<0)&&o.trySetStatus(this.effect,!0,E,this.turnsRemaining,null,this.overrideStatus,i))return a6(el,E,R,I,null,!1,this.effect),!0}return!1}getTargetBenefitScore(E,R,I){const N=this.getMoveChance(E,R,I,this.selfTarget,!1),S=N<0?-10:Math.floor(N*-.1),T=this.selfTarget?E:R;return!T.status&&T.canSetStatus(this.effect,!0,!1,E)?S:0}};r(Np,"StatusEffectAttr");let Ve=Np;const sp=class sp extends Ve{constructor(E,R,I,N){super(E[0],R,I,N),this.effects=E}apply(E,R,I,N){return this.effect=SE(this.effects),super.apply(E,R,I,N)}getTargetBenefitScore(E,R,I){const N=this.getMoveChance(E,R,I,this.selfTarget,!1),S=N<0?-10:Math.floor(N*-.1),T=this.selfTarget?E:R;return!T.status&&T.canSetStatus(this.effect,!0,!1,E)?S:0}};r(sp,"MultiStatusEffectAttr");let UU=sp;const Sp=class Sp extends tA{constructor(){super(!1)}apply(E,R,I,N){var T;const S=((T=E.status)==null?void 0:T.effect)??(E.hasAbility(O.COMATOSE)?J.SLEEP:void 0);if(R.status)return!1;{const o=R.canSetStatus(S,!0,!1,E)?R.trySetStatus(S,!0,E):!1;return o&&E.status&&E.addTag(Y.PSYCHO_SHIFT),o}}getTargetBenefitScore(E,R,I){var N;return!R.status&&R.canSetStatus((N=E.status)==null?void 0:N.effect,!0,!1,E)?-10:0}};r(Sp,"PsychoShiftEffectAttr");let IH=Sp;const Tp=class Tp extends tA{constructor(E){super(!1),this.chance=E}apply(E,R,I,N){if(Phaser.Math.RND.realInRange(0,1)>=this.chance)return!1;const T=this.getTargetHeldItems(R).filter(_=>_.isTransferable);if(!T.length)return!1;const i=R.isPlayer()?lt.PLAYER:R.hasTrainer()?lt.TRAINER:lt.WILD,o=T.map(_=>_.type.getOrInferTier(i)).reduce((_,G)=>Math.max(G,_),0),C=T.filter(_=>_.type.getOrInferTier(i)===o),U=C[E.randBattleSeedInt(C.length)];return s.tryTransferHeldItemModifier(U,E,!1)?(s.queueMessage(D.t("moveTriggers:stoleItem",{pokemonName:Z(E),targetName:Z(R),itemName:U.type.name})),!0):!1}getTargetHeldItems(E){return s.findModifiers(R=>R instanceof DA&&R.pokemonId===E.id,E.isPlayer())}getUserBenefitScore(E,R,I){return this.getTargetHeldItems(R).length?5:0}getTargetBenefitScore(E,R,I){return this.getTargetHeldItems(R).length?-5:0}};r(Tp,"StealHeldItemChanceAttr");let DU=Tp;const np=class np extends tA{constructor(E=!1){super(!1),this.berriesOnly=E}apply(E,R,I,N){if(!this.berriesOnly&&R.isPlayer())return!1;const S=new SA(!1);if(sA($a,R,S),S.value)return!1;let T=this.getTargetHeldItems(R).filter(o=>o.isTransferable);if(this.berriesOnly&&(T=T.filter(o=>o instanceof XE&&o.pokemonId===R.id,R.isPlayer())),!T.length)return!1;const i=T[E.randBattleSeedInt(T.length)];return R.loseHeldItem(i),s.updateModifiers(R.isPlayer()),this.berriesOnly?s.queueMessage(D.t("moveTriggers:incineratedItem",{pokemonName:Z(E),targetName:Z(R),itemName:i.type.name})):s.queueMessage(D.t("moveTriggers:knockedOffItem",{pokemonName:Z(E),targetName:Z(R),itemName:i.type.name})),!0}getTargetHeldItems(E){return s.findModifiers(R=>R instanceof DA&&R.pokemonId===E.id,E.isPlayer())}getUserBenefitScore(E,R,I){return this.getTargetHeldItems(R).length?5:0}getTargetBenefitScore(E,R,I){return this.getTargetHeldItems(R).length?-5:0}};r(np,"RemoveHeldItemAttr");let MU=np;const ap=class ap extends tA{constructor(E){super(E)}apply(E,R,I,N){if(!super.apply(E,R,I,N))return!1;const S=this.selfTarget?E:R,T=this.getTargetHeldBerries(S);if(T.length<=0)return!1;this.chosenBerry=T[E.randBattleSeedInt(T.length)];const i=new SA(!1);return s.applyModifiers(Ts,S.isPlayer(),S,i),i.value||this.reduceBerryModifier(S),this.eatBerry(R,void 0,!i.value),!0}getTargetHeldBerries(E){return s.findModifiers(R=>R instanceof XE&&R.pokemonId===E.id,E.isPlayer())}reduceBerryModifier(E){this.chosenBerry&&E.loseHeldItem(this.chosenBerry),s.updateModifiers(E.isPlayer())}eatBerry(E,R=E,I=E===R){lc(this.chosenBerry.berryType)(E),BM(qN,R,!1),sA(Dl,E,new SA(!1)),E.recordEatenBerry(this.chosenBerry.berryType,I)}};r(ap,"EatBerryAttr");let Hr=ap;const rp=class rp extends Hr{constructor(){super(!1)}apply(E,R,I,N){const S=new SA(!1);if(sA($a,R,S),S.value===!0)return!1;const T=this.getTargetHeldBerries(R);if(T.length<=0)return!1;this.chosenBerry=T[E.randBattleSeedInt(T.length)],BM(qN,R,!1);const i=D.t("battle:stealEatBerry",{pokemonName:E.name,targetName:R.name,berryName:this.chosenBerry.type.name});return s.queueMessage(i),this.reduceBerryModifier(R),this.eatBerry(E,R),!0}};r(rp,"StealEatBerryAttr");let PU=rp;const ip=class ip extends tA{constructor(E,R){super(E,{lastHitOnly:!0}),this.effects=[R].flat(1)}apply(E,R,I,N){if(!super.apply(E,R,I,N))return!1;const S=JI(E,I.id);if(R.hasAbilityWithAttr(vL)&&I.id===A.SPARKLING_ARIA&&S.targets.length===1)return!1;const T=this.selfTarget?E:R;return T.status&&this.effects.includes(T.status.effect)?(s.queueMessage(qI(T.status.effect,Z(T))),T.resetStatus(),T.updateInfo(),!0):!1}isOfEffect(E){return this.effects.includes(E)}getUserBenefitScore(E,R,I){return E.status?10:0}};r(ip,"HealStatusEffectAttr");let fE=ip;const op=class op extends wA{apply(E,R,I,N){var S;return((S=E.status)==null?void 0:S.effect)===J.SLEEP?(E.addTag(Y.BYPASS_SLEEP,1,I.id,E.id),!0):!1}getUserBenefitScore(E,R,I){return E.status&&E.status.effect===J.SLEEP?200:-10}};r(op,"BypassSleepAttr");let cr=op;const Cp=class Cp extends wA{apply(E,R,I,N){return N[0].value=!0,!0}};r(Cp,"BypassBurnDamageReductionAttr");let GU=Cp;const lp=class lp extends tA{constructor(E){super(),this.weatherType=E}apply(E,R,I,N){return s.arena.trySetWeather(this.weatherType,E)}getCondition(){return(E,R,I)=>!s.arena.weather||s.arena.weather.weatherType!==this.weatherType&&!s.arena.weather.isImmutable()}};r(lp,"WeatherChangeAttr");let sN=lp;const Up=class Up extends tA{constructor(E){super(),this.weatherType=E}apply(E,R,I,N){var S;return((S=s.arena.weather)==null?void 0:S.weatherType)===this.weatherType?s.arena.trySetWeather(X.NONE,E):!1}};r(Up,"ClearWeatherAttr");let LH=Up;const Dp=class Dp extends tA{constructor(E){super(),this.terrainType=E}apply(E,R,I,N){return s.arena.trySetTerrain(this.terrainType,!0,E)}getCondition(){return(E,R,I)=>!s.arena.terrain||s.arena.terrain.terrainType!==this.terrainType}getUserBenefitScore(E,R,I){return s.arena.terrain?0:6}};r(Dp,"TerrainChangeAttr");let SN=Dp;const Mp=class Mp extends tA{constructor(){super()}apply(E,R,I,N){return s.arena.trySetTerrain($e.NONE,!0,E)}};r(Mp,"ClearTerrainAttr");let vs=Mp;const Pp=class Pp extends wA{apply(E,R,I,N){return R.isBossImmune()?!1:(N[0].value=!0,!0)}getCondition(){return(E,R,I)=>{const N=new SA(!1);return sA(Ll,R,N),!N.value&&E.level>=R.level}}};r(Pp,"OneHitKOAttr");let kO=Pp;const Gp=class Gp extends wA{constructor(E){super(!0),this.condition=E}apply(E,R,I,N){const S=N[0];return S instanceof SA&&this.condition(E,I)?(S.value=!0,!0):!1}};r(Gp,"InstantChargeAttr");let _U=Gp;const _p=class _p extends _U{constructor(E){super((R,I)=>{const N=s.arena.weather;return Ne(N==null?void 0:N.weatherType)?!1:!(N!=null&&N.isEffectSuppressed())&&E.includes(N==null?void 0:N.weatherType)})}};r(_p,"WeatherInstantChargeAttr");let XT=_p;const up=class up extends wA{apply(E,R,I,N){return!0}};r(up,"OverrideMoveEffectAttr");let ZL=up;const Hp=class Hp extends ZL{constructor(E,R,I){super(),this.tagType=E,this.chargeAnim=R,this.chargeText=I}apply(E,R,I,N){if(!R)return!0;const S=N[0];if(N[1])s.queueMessage(D.t("moveTriggers:tookMoveAttack",{pokemonName:Z(s.getPokemonById(R.id)??void 0),moveName:I.name}));else{S.value=!0,s.unshiftPhase(new Qu(new _r(this.chargeAnim,I.id,E))),s.queueMessage(this.chargeText.replace("{TARGET}",Z(R)).replace("{USER}",Z(E))),E.pushMoveHistory({move:I.id,targets:[R.getBattlerIndex()],result:EE.OTHER});const i=R.isPlayer()?qe.PLAYER:qe.ENEMY;s.arena.addTag(this.tagType,3,I.id,E.id,i,!1,R.getBattlerIndex())}return!0}};r(Hp,"DelayedAttackAttr");let HI=Hp;const TM=class TM extends ZL{constructor(){super(!0)}apply(E,R,I,N){if(E.turnData.combiningPledge)return s.queueMessage(D.t("moveTriggers:combiningPledge")),!1;const S=N[0],T=s.findPhase(i=>i instanceof lE&&i.pokemon.isPlayer()===E.isPlayer());if(T){const i=T.move.getMove();if(i!==I&&i.hasAttr(TM)){[E,T.pokemon].forEach(U=>U.turnData.combiningPledge=I.id),s.queueMessage(D.t("moveTriggers:awaitingPledge",{userPokemonName:Z(E),allyPokemonName:Z(T.pokemon)}));const o=s.phaseQueue.indexOf(T),C=s.phaseQueue.findIndex(U=>U instanceof lE);return o!==C&&s.prependToPhase(s.phaseQueue.splice(o,1)[0],lE),S.value=!0,!0}}return!1}};r(TM,"AwaitCombinedPledgeAttr");let QT=TM;const cp=class cp extends tA{constructor(E,R,I,N){super(I,N),this.stats=E,this.stages=R,this.options=N}get condition(){var E;return((E=this.options)==null?void 0:E.condition)??null}get showMessage(){var E;return((E=this.options)==null?void 0:E.showMessage)??!0}apply(E,R,I,N){if(!super.apply(E,R,I,N)||this.condition&&!this.condition(E,R,I))return!1;const S=this.getMoveChance(E,R,I,this.selfTarget,!0);if(S<0||S===100||E.randBattleSeedInt(100)<S){const T=this.getLevels(E);return s.unshiftPhase(new hA((this.selfTarget?E:R).getBattlerIndex(),this.selfTarget,this.stats,T,this.showMessage)),!0}return!1}getLevels(E){return this.stages}getTargetBenefitScore(E,R,I){let N=0;const S=this.getLevels(E);for(const T of this.stats){let i=S;const o=R.getStatStage(T);i>0?i=Math.min(o+i,6)-o:i=Math.max(o+i,-6)-o;let C=!1;switch(T){case h.ATK:this.selfTarget&&(C=!E.getMoveset().find(U=>U instanceof B&&U.category===u.PHYSICAL));break;case h.DEF:this.selfTarget||(C=!E.getMoveset().find(U=>U instanceof B&&U.category===u.PHYSICAL));break;case h.SPATK:this.selfTarget&&(C=!E.getMoveset().find(U=>U instanceof B&&U.category===u.SPECIAL));break;case h.SPDEF:this.selfTarget||(C=!E.getMoveset().find(U=>U instanceof B&&U.category===u.SPECIAL));break}C||(N+=i*4+(i>0?-2:2))}return N}};r(cp,"StatStageChangeAttr");let Le=cp;const Bp=class Bp extends tA{constructor(){super(!1)}apply(E,R,I,N){if(!super.apply(E,R,I,N))return!1;let S;const T=s.arena.getTerrainType();if(T!==$e.NONE)S=this.determineTerrainEffect(T);else{const i=s.arena.biomeType;S=this.determineBiomeEffect(i)}return S.apply(E,R,I,[])}determineTerrainEffect(E){let R;switch(E){case $e.ELECTRIC:default:R=new Ve(J.PARALYSIS,!1);break;case $e.MISTY:R=new Le([h.SPATK],-1,!1);break;case $e.GRASSY:R=new Ve(J.SLEEP,!1);break;case $e.PSYCHIC:R=new Le([h.SPD],-1,!1);break}return R}determineBiomeEffect(E){let R;switch(E){case n.PLAINS:case n.GRASS:case n.TALL_GRASS:case n.FOREST:case n.JUNGLE:case n.MEADOW:R=new Ve(J.SLEEP,!1);break;case n.SWAMP:case n.MOUNTAIN:case n.TEMPLE:case n.RUINS:R=new Le([h.SPD],-1,!1);break;case n.ICE_CAVE:case n.SNOWY_FOREST:R=new Ve(J.FREEZE,!1);break;case n.VOLCANO:R=new Ve(J.BURN,!1);break;case n.FAIRY_CAVE:R=new Le([h.SPATK],-1,!1);break;case n.DESERT:case n.CONSTRUCTION_SITE:case n.BEACH:case n.ISLAND:case n.BADLANDS:R=new Le([h.ACC],-1,!1);break;case n.SEA:case n.LAKE:case n.SEABED:R=new Le([h.ATK],-1,!1);break;case n.CAVE:case n.WASTELAND:case n.GRAVEYARD:case n.ABYSS:case n.SPACE:R=new TA(Y.FLINCHED,!1,!0);break;case n.END:R=new Le([h.DEF],-1,!1);break;case n.TOWN:case n.METROPOLIS:case n.SLUM:case n.DOJO:case n.FACTORY:case n.LABORATORY:case n.POWER_PLANT:default:R=new Ve(J.PARALYSIS,!1);break}return R}};r(Bp,"SecretPowerAttr");let uU=Bp;const hp=class hp extends wA{constructor(E,R,I,N,S=!0,T=!1){super(),this.stats=E,this.stages=R,this.condition=N,this.showMessage=S}applyPostVictory(E,R,I){if(this.condition&&!this.condition(E,R,I))return;new Le(this.stats,this.stages,this.showMessage).apply(E,R,I)}};r(hp,"PostVictoryStatStageChangeAttr");let HU=hp;const fp=class fp extends tA{constructor(){super()}apply(E,R,I,N){const S=cO.filter(T=>R.getStatStage(T)<6);if(S.length>0){const T=[S[E.randBattleSeedInt(S.length)]];return s.unshiftPhase(new hA(R.getBattlerIndex(),this.selfTarget,T,2)),!0}return!1}};r(fp,"AcupressureStatStageChangeAttr");let NH=fp;const dp=class dp extends Le{constructor(){super([h.ATK,h.SPATK],1,!0)}getLevels(E){var R,I;if(!((R=s.arena.weather)!=null&&R.isEffectSuppressed())){const N=(I=s.arena.weather)==null?void 0:I.weatherType;if(N===X.SUNNY||N===X.HARSH_SUN)return this.stages+1}return this.stages}};r(dp,"GrowthStatStageChangeAttr");let sH=dp;const Kp=class Kp extends Le{constructor(E,R,I,N){super(E,R,!0),this.cutRatio=I,this.messageCallback=N}apply(E,R,I,N){E.damageAndUpdate(uA(E.getMaxHp()/this.cutRatio),{result:CA.INDIRECT}),E.updateInfo();const S=super.apply(E,R,I,N);return this.messageCallback&&this.messageCallback(E),S}getCondition(){return(E,R,I)=>E.getHpRatio()>1/this.cutRatio&&this.stats.some(N=>E.getStatStage(N)<6)}};r(Kp,"CutHpStatStageBoostAttr");let JT=Kp;const Fp=class Fp extends tA{constructor(){super(!0)}apply(E,R,I,N){const S=E.getTag(kl);if(!S)return!1;let T=h.ATK;switch(S.tatsugiriFormKey){case"curly":T=h.ATK;break;case"droopy":T=h.DEF;break;case"stretchy":T=h.SPD;break}return s.unshiftPhase(new hA(E.getBattlerIndex(),this.selfTarget,[T],1)),!0}};r(Fp,"OrderUpStatBoostAttr");let SH=Fp;const Yp=class Yp extends tA{apply(E,R,I,N){if(!super.apply(E,R,I,N))return!1;for(const S of cO)E.setStatStage(S,R.getStatStage(S));return R.getTag(Y.CRIT_BOOST)?E.addTag(Y.CRIT_BOOST,0,I.id):E.removeTag(Y.CRIT_BOOST),R.updateInfo(),E.updateInfo(),s.queueMessage(D.t("moveTriggers:copiedStatChanges",{pokemonName:Z(E),targetName:Z(R)})),!0}};r(Yp,"CopyStatsAttr");let TH=Yp;const Wp=class Wp extends tA{apply(E,R,I,N){if(!super.apply(E,R,I,N))return!1;for(const S of cO)R.setStatStage(S,-R.getStatStage(S));return R.updateInfo(),E.updateInfo(),s.queueMessage(D.t("moveTriggers:invertStats",{pokemonName:Z(R)})),!0}};r(Wp,"InvertStatsAttr");let nH=Wp;const mp=class mp extends tA{constructor(E){super(),this.targetAllPokemon=E}apply(E,R,I,N){return this.targetAllPokemon?(s.getField(!0).forEach(T=>this.resetStats(T)),s.queueMessage(D.t("moveTriggers:statEliminated"))):(this.resetStats(R),s.queueMessage(D.t("moveTriggers:resetStats",{pokemonName:Z(R)}))),!0}resetStats(E){for(const R of cO)E.setStatStage(R,0);E.updateInfo()}};r(mp,"ResetStatsAttr");let $T=mp;const gp=class gp extends tA{constructor(E){super(),this.stats=E}apply(E,R,I,N){if(super.apply(E,R,I,N)){for(const S of this.stats){const T=E.getStatStage(S);E.setStatStage(S,R.getStatStage(S)),R.setStatStage(S,T)}return R.updateInfo(),E.updateInfo(),this.stats.length===7?s.queueMessage(D.t("moveTriggers:switchedStatChanges",{pokemonName:Z(E)})):this.stats.length===2&&s.queueMessage(D.t("moveTriggers:switchedTwoStatChanges",{pokemonName:Z(E),firstStat:D.t(et(this.stats[0])),secondStat:D.t(et(this.stats[1]))})),!0}return!1}};r(gp,"SwapStatStagesAttr");let qT=gp;const pp=class pp extends tA{apply(E,R,I,N){if(!super.apply(E,R,I,N))return!1;const S=Math.floor((R.hp+E.hp)/2);return[E,R].forEach(T=>{if(T.hp<S){const i=T.heal(S-T.hp);i&&s.damageNumberHandler.add(T,i,CA.HEAL)}else if(T.hp>S){const i=T.damage(T.hp-S,!0);i&&s.damageNumberHandler.add(T,i)}T.updateInfo()}),!0}};r(pp,"HpSplitAttr");let cU=pp;const yp=class yp extends wA{apply(E,R,I,N){return!1}};r(yp,"VariablePowerAttr");let TE=yp;const wp=class wp extends TE{apply(E,R,I,N){var C;const S=I.pp,T=((C=E.moveset.find(U=>U.moveId===I.id))==null?void 0:C.ppUsed)??0;let i=S-T;i<0&&(i=0);const o=N[0];switch(i){case 0:o.value=200;break;case 1:o.value=80;break;case 2:o.value=60;break;case 3:o.value=50;break;default:o.value=40;break}return!0}};r(wp,"LessPPMorePowerAttr");let aH=wp;const Vp=class Vp extends TE{constructor(E){super(),this.powerMultiplierFunc=E}apply(E,R,I,N){const S=N[0];return S.value*=this.powerMultiplierFunc(E,R,I),!0}};r(Vp,"MovePowerMultiplierAttr");let jA=Vp;const nX=r((t,E)=>{const R=t.isPlayer()?s.getPlayerParty():s.getEnemyParty();for(let I=E;I<R.length;I++){const N=R[I];if(!(N.id!==t.id&&(N!=null&&N.status)&&N.status.effect!==J.NONE))return N.species.getBaseStat(h.ATK)/10+5}return 0},"beatUpFunc"),vp=class vp extends TE{apply(E,R,I,N){const S=N[0],i=(E.isPlayer()?s.getPlayerParty():s.getEnemyParty()).filter(C=>{var U;return C.id===E.id||!((U=C.status)!=null&&U.effect)}).length,o=(E.turnData.hitCount-E.turnData.hitsLeft)%i;return S.value=nX(E,o),!0}};r(vp,"BeatUpAttr");let rH=vp;const aX=r((t,E,R)=>{let I="";return s.executeWithSeedOffset(()=>{De(100)<R.chance&&(I=D.t("moveTriggers:goingAllOutForAttack",{pokemonName:Z(t)}))},s.currentBattle.turn<<6,s.waveSeed),I},"doublePowerChanceMessageFunc"),xp=class xp extends TE{apply(E,R,I,N){let S;if(s.executeWithSeedOffset(()=>S=De(100),s.currentBattle.turn<<6,s.waveSeed),S<I.chance){const T=N[0];return T.value*=2,!0}return!1}};r(xp,"DoublePowerChanceAttr");let iH=xp;const bp=class bp extends jA{constructor(E,R,I,...N){super((S,T,i)=>{var _;const o=S.getLastXMoves(E+1).slice(1);let C=0,U;for(;(((_=U=o.shift())==null?void 0:_.move)===i.id||N.length&&N.includes((U==null?void 0:U.move)??A.NONE))&&(!R||(U==null?void 0:U.result)===EE.SUCCESS);)if(C<E-1)C++;else if(I)C=0;else break;return this.getMultiplier(C)})}};r(bp,"ConsecutiveUsePowerMultiplierAttr");let BU=bp;const Zp=class Zp extends BU{getMultiplier(E){return Math.pow(2,E)}};r(Zp,"ConsecutiveUseDoublePowerAttr");let OS=Zp;const kp=class kp extends BU{getMultiplier(E){return E+1}};r(kp,"ConsecutiveUseMultiBasePowerAttr");let oH=kp;const Xp=class Xp extends TE{apply(E,R,I,N){const S=N[0],T=R.getWeight(),i=[10,25,50,100,200];let o=0;for(;T>=i[o]&&++o!==i.length;);return S.value=(o+1)*20,!0}};r(Xp,"WeightPowerAttr");let hU=Xp;const Qp=class Qp extends TE{apply(E,R,I,N){const S=N[0],T=R.getEffectiveStat(h.SPD)/E.getEffectiveStat(h.SPD),i=[.25,1/3,.5,1,-1],o=[150,120,80,60,40];let C=0;for(;C<i.length-1&&T>i[C]&&++C!==i.length;);return S.value=o[C],!0}};r(Qp,"ElectroBallPowerAttr");let CH=Qp;const Jp=class Jp extends TE{apply(E,R,I,N){const S=N[0],T=E.getEffectiveStat(h.SPD);return T<1?(S.value=1,!0):(S.value=Math.floor(Math.min(150,25*R.getEffectiveStat(h.SPD)/T+1)),!0)}};r(Jp,"GyroBallPowerAttr");let lH=Jp;const $p=class $p extends TE{apply(E,R,I,N){const S=N[0],T=E.getHpRatio();switch(!0){case T<.0417:S.value=200;break;case T<.1042:S.value=150;break;case T<.2083:S.value=100;break;case T<.3542:S.value=80;break;case T<.6875:S.value=40;break;default:S.value=20;break}return!0}};r($p,"LowHpPowerAttr");let fU=$p;const qp=class qp extends TE{apply(E,R,I,N){const S=N[0],T=E.getWeight(),i=R.getWeight();if(!T||T===0)return!1;const o=i/T*100;switch(!0){case o<20.01:S.value=120;break;case o<25.01:S.value=100;break;case o<33.35:S.value=80;break;case o<50.01:S.value=60;break;default:S.value=40;break}return!0}};r(qp,"CompareWeightPowerAttr");let dU=qp;const zp=class zp extends TE{apply(E,R,I,N){return N[0].value=uA(150*E.getHpRatio()),!0}};r(zp,"HpPowerAttr");let zT=zp;const jp=class jp extends TE{constructor(E){super(),this.maxBasePower=E}apply(E,R,I,N){return N[0].value=uA(this.maxBasePower*R.getHpRatio()),!0}};r(jp,"OpponentHighHpPowerAttr");let jT=jp;const ey=class ey extends TE{apply(E,R,I,N){return console.log(R.getLastXMoves(1),s.currentBattle.turn),R.getLastXMoves(1).find(S=>S.turn===s.currentBattle.turn)?!1:(N[0].value*=2,!0)}};r(ey,"FirstAttackDoublePowerAttr");let KU=ey;const Ay=class Ay extends TE{apply(E,R,I,N){return E.turnData.attacksReceived.find(S=>S.damage&&S.sourceId===R.id)?(N[0].value*=2,!0):!1}};r(Ay,"TurnDamagedDoublePowerAttr");let FU=Ay;const rX=r((t,E,R)=>{let I;return s.executeWithSeedOffset(()=>{const N=[5,15,35,65,75,95],S=De(100);let T=0;for(;T<N.length&&!(S<N[T]);T++);I=D.t("moveTriggers:magnitudeMessage",{magnitude:T+4})},s.currentBattle.turn<<6,s.waveSeed),I},"magnitudeMessageFunc"),Ey=class Ey extends TE{apply(E,R,I,N){const S=N[0],T=[5,15,35,65,75,95],i=[10,30,50,70,90,100,110,150];let o;s.executeWithSeedOffset(()=>o=De(100),s.currentBattle.turn<<6,s.waveSeed);let C=0;for(;C<T.length&&!(o<T[C]);C++);return S.value=i[C],!0}};r(Ey,"MagnitudePowerAttr");let UH=Ey;const ty=class ty extends TE{apply(E,R,I,N){var S,T;if(!((S=s.arena.weather)!=null&&S.isEffectSuppressed())){const i=N[0];switch(((T=s.arena.weather)==null?void 0:T.weatherType)||X.NONE){case X.RAIN:case X.SANDSTORM:case X.HAIL:case X.SNOW:case X.HEAVY_RAIN:return i.value*=.5,!0}}return!1}};r(ty,"AntiSunlightPowerDecreaseAttr");let YU=ty;const Ry=class Ry extends TE{constructor(E){super(),this.invert=!!E}apply(E,R,I,N){const S=N[0],T=Math.floor(Math.min(E instanceof Rt?E.friendship:E.species.baseFriendship,255)/2.5);return S.value=Math.max(this.invert?102-T:T,1),!0}};r(Ry,"FriendshipPowerAttr");let xs=Ry;const Oy=class Oy extends TE{apply(E,R,I,N){const S=E.battleData.hitCount,T=N[0];return T.value=50*(1+Math.min(S,6)),!0}};r(Oy,"RageFistPowerAttr");let DH=Oy;const U6=r(t=>t.getStatStages().reduce((E,R)=>R&&R>0?E+R:E,0),"countPositiveStatStages"),Iy=class Iy extends TE{apply(E,R,I,N){const S=U6(E);return N[0].value+=S*20,!0}};r(Iy,"PositiveStatStagePowerAttr");let WU=Iy;const Ly=class Ly extends TE{constructor(){super(...arguments),this.PUNISHMENT_MIN_BASE_POWER=60,this.PUNISHMENT_MAX_BASE_POWER=200}apply(E,R,I,N){const S=U6(R);return N[0].value=Math.min(this.PUNISHMENT_MAX_BASE_POWER,this.PUNISHMENT_MIN_BASE_POWER+S*20),!0}};r(Ly,"PunishmentPowerAttr");let MH=Ly;const Ny=class Ny extends TE{apply(E,R,I,N){const S=E.turnData.hitCount===E.turnData.hitsLeft,T=De(S?100:80);return T<=40?N[0].value=40:40<T&&T<=70?N[0].value=80:70<T&&T<=80?N[0].value=120:80<T&&T<=100&&(E.turnData.hitCount=1,E.turnData.hitsLeft=1,s.unshiftPhase(new Dt(R.getBattlerIndex(),uA(R.getMaxHp()/4),D.t("moveTriggers:regainedHealth",{pokemonName:Z(R)}),!0))),!0}};r(Ny,"PresentPowerAttr");let PH=Ny;const sy=class sy extends TE{apply(E,R,I,N){return E.species.speciesId===e.GRENINJA&&E.hasAbility(O.BATTLE_BOND)&&E.formIndex===2?(N[0].value=20,!0):!1}};r(sy,"WaterShurikenPowerAttr");let GH=sy;const Sy=class Sy extends TE{constructor(E){super(),this.multiplier=0,this.multiplier=E}apply(E,R,I,N){const S=E.getTag(ts);if(S&&S.stockpiledCount>0){const T=N[0];return T.value=this.multiplier*S.stockpiledCount,!0}return!1}};r(Sy,"SpitUpPowerAttr");let _H=Sy;const Ty=class Ty extends Vt{apply(E,R,I,N){const S=E.getTag(ts);if(S&&S.stockpiledCount>0){const T=S.stockpiledCount;let i;if(T===1?i=.25:T===2?i=.5:i=1,i)return this.addHealPhase(E,i),!0}return!1}};r(Ty,"SwallowHealAttr");let uH=Ty;const Lv=r(t=>{const E=t.getTag(ts);return!!E&&E.stockpiledCount>0},"hasStockpileStacksCondition"),ny=class ny extends TE{constructor(E){super(),this.maxHits=E}apply(E,R,I,N){const S=E.turnData.hitCount-Math.max(E.turnData.hitsLeft,0),T=N[0];return T.value=I.power*(1+S%this.maxHits),!0}};r(ny,"MultiHitPowerIncrementAttr");let mU=ny;const ay=class ay extends TE{constructor(E){super(),this.move=E}apply(E,R,I,N){const S=N[0],T=E.getOpponent(0),i=[];if(T!=null&&T.turnData.acted&&i.push(T),s.currentBattle.double){const o=E.getAlly(),C=T==null?void 0:T.getAlly();o!=null&&o.turnData.acted&&i.push(o),C!=null&&C.turnData.acted&&i.push(C)}i.sort((o,C)=>C.turnData.order-o.turnData.order);for(const o of i){const[C]=o.getLastXMoves(1);if(C.result!==EE.FAIL){if(C.result===EE.SUCCESS&&C.move===this.move)return S.value*=2,!0;break}}return!1}};r(ay,"LastMoveDoublePowerAttr");let gU=ay;const ry=class ry extends TE{apply(E,R,I,N){const S=N[0];if(!(S instanceof me))return!1;const T=E.turnData.combiningPledge;return T&&T!==I.id?(S.value*=150/80,!0):!1}};r(ry,"CombinedPledgePowerAttr");let en=ry;const iy=class iy extends wA{apply(E,R,I,N){const S=N[0];if(!(S instanceof me))return!1;const T=E.turnData.combiningPledge;return T&&T!==I.id?(S.value=1.5,!0):!1}};r(iy,"CombinedPledgeStabBoostAttr");let IS=iy;const oy=class oy extends TE{apply(E,R,I,N){const S=N[0];return E.turnData.joinedRound?(S.value*=2,!0):!1}};r(oy,"RoundPowerAttr");let HH=oy;const Cy=class Cy extends tA{constructor(){super(!0,{lastHitOnly:!0})}apply(E,R,I,N){const S=s.findPhase(o=>o instanceof lE&&o.move.moveId===A.ROUND);if(!S)return!1;const T=s.phaseQueue.indexOf(S),i=s.phaseQueue.findIndex(o=>o instanceof lE);return T!==i&&s.prependToPhase(s.phaseQueue.splice(T,1)[0],lE),S.pokemon.turnData.joinedRound=!0,!0}};r(Cy,"CueNextRoundAttr");let cH=Cy;const ly=class ly extends wA{apply(E,R,I,N){return!1}};r(ly,"StatChangeBeforeDmgCalcAttr");let pU=ly;const Uy=class Uy extends pU{apply(E,R,I,N){for(const S of cO){const T=R.getStatStage(S),i=E.getStatStage(S);if(T>0){const o=Math.min(T,6-i);s.unshiftPhase(new hA(E.getBattlerIndex(),this.selfTarget,[S],o)),R.setStatStage(S,T-o)}}return R.updateInfo(),E.updateInfo(),s.queueMessage(D.t("moveTriggers:stealPositiveStats",{pokemonName:Z(E),targetName:Z(R)})),!0}};r(Uy,"SpectralThiefAttr");let BH=Uy;const Dy=class Dy extends wA{constructor(){super()}apply(E,R,I,N){return!1}};r(Dy,"VariableAtkAttr");let wS=Dy;const My=class My extends wS{constructor(){super()}apply(E,R,I,N){return N[0].value=R.getEffectiveStat(h.ATK,R),!0}};r(My,"TargetAtkUserAtkAttr");let hH=My;const Py=class Py extends wS{constructor(){super()}apply(E,R,I,N){return N[0].value=E.getEffectiveStat(h.DEF,R),!0}};r(Py,"DefAtkAttr");let fH=Py;const Gy=class Gy extends wA{constructor(){super()}apply(E,R,I,N){return!1}};r(Gy,"VariableDefAttr");let yU=Gy;const _y=class _y extends yU{constructor(){super()}apply(E,R,I,N){return N[0].value=R.getEffectiveStat(h.DEF,E),!0}};r(_y,"DefDefAttr");let An=_y;const uy=class uy extends wA{apply(E,R,I,N){return!1}};r(uy,"VariableAccuracyAttr");let QI=uy;const Hy=class Hy extends QI{apply(E,R,I,N){var S,T;if(!((S=s.arena.weather)!=null&&S.isEffectSuppressed())){const i=N[0];switch(((T=s.arena.weather)==null?void 0:T.weatherType)||X.NONE){case X.SUNNY:case X.HARSH_SUN:return i.value=50,!0;case X.RAIN:case X.HEAVY_RAIN:return i.value=-1,!0}}return!1}};r(Hy,"ThunderAccuracyAttr");let wU=Hy;const cy=class cy extends QI{apply(E,R,I,N){var S,T;if(!((S=s.arena.weather)!=null&&S.isEffectSuppressed())){const i=N[0];switch(((T=s.arena.weather)==null?void 0:T.weatherType)||X.NONE){case X.RAIN:case X.HEAVY_RAIN:return i.value=-1,!0}}return!1}};r(cy,"StormAccuracyAttr");let En=cy;const By=class By extends QI{apply(E,R,I,N){if(R.getTag(Y.MINIMIZED)){const S=N[0];return S.value=-1,!0}return!1}};r(By,"AlwaysHitMinimizeAttr");let dO=By;const hy=class hy extends QI{apply(E,R,I,N){if(E.isOfType(L.POISON)){const S=N[0];return S.value=-1,!0}return!1}};r(hy,"ToxicAccuracyAttr");let VU=hy;const fy=class fy extends QI{apply(E,R,I,N){var S,T;if(!((S=s.arena.weather)!=null&&S.isEffectSuppressed())){const i=N[0],o=((T=s.arena.weather)==null?void 0:T.weatherType)||X.NONE;if(o===X.HAIL||o===X.SNOW)return i.value=-1,!0}return!1}};r(fy,"BlizzardAccuracyAttr");let dH=fy;const dy=class dy extends wA{apply(E,R,I,N){return!1}};r(dy,"VariableMoveCategoryAttr");let kL=dy;const Ky=class Ky extends kL{apply(E,R,I,N){const S=N[0];return E.getEffectiveStat(h.ATK,R,I)>E.getEffectiveStat(h.SPATK,R,I)?(S.value=u.PHYSICAL,!0):!1}};r(Ky,"PhotonGeyserCategoryAttr");let vU=Ky;const Fy=class Fy extends kL{apply(E,R,I,N){const S=N[0];return E.isTerastallized&&E.getEffectiveStat(h.ATK,R,I,!0,!0,!1,!1,!0)>E.getEffectiveStat(h.SPATK,R,I,!0,!0,!1,!1,!0)?(S.value=u.PHYSICAL,!0):!1}};r(Fy,"TeraMoveCategoryAttr");let xU=Fy;const Yy=class Yy extends TE{apply(E,R,I,N){const S=N[0];return E.isTerastallized&&E.getTeraType()===L.STELLAR?(S.value=100,!0):!1}};r(Yy,"TeraBlastPowerAttr");let KH=Yy;const Wy=class Wy extends kL{apply(E,R,I,N){const S=N[0];return E.getAlly()===R?(S.value=u.STATUS,!0):!1}};r(Wy,"StatusCategoryOnAllyAttr");let bU=Wy;const my=class my extends kL{apply(E,R,I,N){const S=N[0],T=R.getBaseDamage({source:E,move:I,moveCategory:u.PHYSICAL,ignoreAbility:!0,ignoreSourceAbility:!0,ignoreAllyAbility:!0,ignoreSourceAllyAbility:!0,simulated:!0}),i=R.getBaseDamage({source:E,move:I,moveCategory:u.SPECIAL,ignoreAbility:!0,ignoreSourceAbility:!0,ignoreAllyAbility:!0,ignoreSourceAllyAbility:!0,simulated:!0});return T>i||T===i&&E.randBattleSeedInt(2)===0?(S.value=u.PHYSICAL,!0):!1}};r(my,"ShellSideArmCategoryAttr");let FH=my;const gy=class gy extends wA{apply(E,R,I,N){return!1}};r(gy,"VariableMoveTypeAttr");let gR=gy;const py=class py extends gR{apply(E,R,I,N){var T,i,o;const S=N[0];if(!(S instanceof me))return!1;if([E.species.speciesId,(T=E.fusionSpecies)==null?void 0:T.speciesId].includes(e.ARCEUS)||[E.species.speciesId,(i=E.fusionSpecies)==null?void 0:i.speciesId].includes(e.SILVALLY)){const C=E.species.speciesId===e.ARCEUS||E.species.speciesId===e.SILVALLY?E.formIndex:(o=E.fusionSpecies)==null?void 0:o.formIndex;return S.value=L[L[C]],!0}return S.value===I.type?!1:(S.value=I.type,!0)}};r(py,"FormChangeItemTypeAttr");let ZU=py;const yy=class yy extends gR{apply(E,R,I,N){var T,i;const S=N[0];if(!(S instanceof me))return!1;if([E.species.speciesId,(T=E.fusionSpecies)==null?void 0:T.speciesId].includes(e.GENESECT)){switch(E.species.speciesId===e.GENESECT?E.formIndex:(i=E.fusionSpecies)==null?void 0:i.formIndex){case 1:S.value=L.ELECTRIC;break;case 2:S.value=L.FIRE;break;case 3:S.value=L.ICE;break;case 4:S.value=L.WATER;break;default:S.value=L.NORMAL;break}return!0}return!1}};r(yy,"TechnoBlastTypeAttr");let YH=yy;const wy=class wy extends gR{apply(E,R,I,N){var T,i;const S=N[0];if(!(S instanceof me))return!1;if([E.species.speciesId,(T=E.fusionSpecies)==null?void 0:T.speciesId].includes(e.MORPEKO)){switch(E.species.speciesId===e.MORPEKO?E.formIndex:(i=E.fusionSpecies)==null?void 0:i.formIndex){case 1:S.value=L.DARK;break;default:S.value=L.ELECTRIC;break}return!0}return!1}};r(wy,"AuraWheelTypeAttr");let WH=wy;const Vy=class Vy extends gR{apply(E,R,I,N){var T,i;const S=N[0];if(!(S instanceof me))return!1;if([E.species.speciesId,(T=E.fusionSpecies)==null?void 0:T.speciesId].includes(e.PALDEA_TAUROS)){switch(E.species.speciesId===e.PALDEA_TAUROS?E.formIndex:(i=E.fusionSpecies)==null?void 0:i.formIndex){case 1:S.value=L.FIRE;break;case 2:S.value=L.WATER;break;default:S.value=L.FIGHTING;break}return!0}return!1}};r(Vy,"RagingBullTypeAttr");let mH=Vy;const vy=class vy extends gR{apply(E,R,I,N){var T,i;const S=N[0];if(!(S instanceof me))return!1;if([E.species.speciesId,(T=E.fusionSpecies)==null?void 0:T.speciesId].includes(e.OGERPON)){switch(E.species.speciesId===e.OGERPON?E.formIndex:(i=E.fusionSpecies)==null?void 0:i.formIndex){case 1:case 5:S.value=L.WATER;break;case 2:case 6:S.value=L.FIRE;break;case 3:case 7:S.value=L.ROCK;break;case 4:default:S.value=L.GRASS;break}return!0}return!1}};r(vy,"IvyCudgelTypeAttr");let gH=vy;const xy=class xy extends gR{apply(E,R,I,N){var T,i;const S=N[0];if(!(S instanceof me))return!1;if(!((T=s.arena.weather)!=null&&T.isEffectSuppressed())){switch((i=s.arena.weather)==null?void 0:i.weatherType){case X.SUNNY:case X.HARSH_SUN:S.value=L.FIRE;break;case X.RAIN:case X.HEAVY_RAIN:S.value=L.WATER;break;case X.SANDSTORM:S.value=L.ROCK;break;case X.HAIL:case X.SNOW:S.value=L.ICE;break;default:if(S.value===I.type)return!1;S.value=I.type;break}return!0}return!1}};r(xy,"WeatherBallTypeAttr");let pH=xy;const by=class by extends gR{apply(E,R,I,N){const S=N[0];if(!(S instanceof me)||!E.isGrounded())return!1;switch(s.arena.getTerrainType()){case $e.MISTY:S.value=L.FAIRY;break;case $e.ELECTRIC:S.value=L.ELECTRIC;break;case $e.GRASSY:S.value=L.GRASS;break;case $e.PSYCHIC:S.value=L.PSYCHIC;break;default:if(S.value===I.type)return!1;S.value=I.type;break}return!0}};r(by,"TerrainPulseTypeAttr");let yH=by;const Zy=class Zy extends gR{apply(E,R,I,N){const S=N[0];if(!(S instanceof me))return!1;const T=Math.floor(((E.ivs[h.HP]&1)+(E.ivs[h.ATK]&1)*2+(E.ivs[h.DEF]&1)*4+(E.ivs[h.SPD]&1)*8+(E.ivs[h.SPATK]&1)*16+(E.ivs[h.SPDEF]&1)*32)*15/63);return S.value=[L.FIGHTING,L.FLYING,L.POISON,L.GROUND,L.ROCK,L.BUG,L.GHOST,L.STEEL,L.FIRE,L.WATER,L.GRASS,L.ELECTRIC,L.PSYCHIC,L.ICE,L.DRAGON,L.DARK][T],!0}};r(Zy,"HiddenPowerTypeAttr");let wH=Zy;const ky=class ky extends gR{apply(E,R,I,N){const S=N[0];return S instanceof me&&E.isTerastallized?(S.value=E.getTeraType(),!0):!1}};r(ky,"TeraBlastTypeAttr");let VH=ky;const Xy=class Xy extends gR{apply(E,R,I,N){if(E.isTerastallized&&E.hasSpecies(e.TERAPAGOS)){const S=N[0];return S.value=L.STELLAR,!0}return!1}};r(Xy,"TeraStarstormTypeAttr");let vH=Xy;const Qy=class Qy extends gR{apply(E,R,I,N){const S=N[0];if(!(S instanceof me))return!1;const T=E.getTypes(!0);if(T.includes(L.STELLAR)){const i=E.getTypes();return S.value=i[0],!0}else return T.length>0?(S.value=T[0],!0):!1}};r(Qy,"MatchUserTypeAttr");let xH=Qy;const Jy=class Jy extends gR{apply(E,R,I,N){var i;const S=N[0];if(!(S instanceof me))return!1;const T=(i=E==null?void 0:E.turnData)==null?void 0:i.combiningPledge;if(!T)return!1;switch(I.id){case A.FIRE_PLEDGE:return T===A.WATER_PLEDGE?(S.value=L.WATER,!0):!1;case A.WATER_PLEDGE:return T===A.GRASS_PLEDGE?(S.value=L.GRASS,!0):!1;case A.GRASS_PLEDGE:return T===A.FIRE_PLEDGE?(S.value=L.FIRE,!0):!1;default:return!1}}};r(Jy,"CombinedPledgeTypeAttr");let tn=Jy;const $y=class $y extends wA{apply(E,R,I,N){return!1}};r($y,"VariableMoveTypeMultiplierAttr");let Is=$y;const qy=class qy extends Is{apply(E,R,I,N){if(!R.getTag(Y.IGNORE_FLYING)){const S=N[0];return R.isOfType(L.FLYING)&&(S.value=1),!0}return!1}};r(qy,"NeutralDamageAgainstFlyingTypeMultiplierAttr");let kU=qy;const zy=class zy extends Is{apply(E,R,I,N){const S=N[0];return R.isOfType(L.ICE)?(S.value=0,!0):!1}};r(zy,"IceNoEffectTypeAttr");let bH=zy;const jy=class jy extends Is{apply(E,R,I,N){const S=N[0];return S.value*=R.getAttackTypeEffectiveness(L.FLYING,E),!0}};r(jy,"FlyingTypeMultiplierAttr");let ZH=jy;const e4=class e4 extends wA{apply(E,R,I,N){return!1}};r(e4,"VariableMoveTypeChartAttr");let XU=e4;const A4=class A4 extends XU{apply(E,R,I,N){const S=N[0];return N[1]===L.WATER?(S.value=2,!0):!1}};r(A4,"FreezeDryAttr");let kH=A4;const E4=class E4 extends QI{apply(E,R,I,N){const S=N[0];return E.level<R.level?S.value=0:S.value=Math.min(Math.max(30+100*(1-R.level/E.level),0),100),!0}};r(E4,"OneHitKOAccuracyAttr");let YL=E4;const t4=class t4 extends YL{apply(E,R,I,N){const S=N[0];if(E.level<R.level)S.value=0;else{const T=E.isOfType(L.ICE)?30:20;S.value=Math.min(Math.max(T+100*(1-R.level/E.level),0),100)}return!0}};r(t4,"SheerColdAccuracyAttr");let XH=t4;const R4=class R4 extends wA{constructor(E){super(),this.missEffectFunc=E}apply(E,R,I,N){return this.missEffectFunc(E,I),!0}};r(R4,"MissEffectAttr");let gO=R4;const O4=class O4 extends wA{constructor(E){super(),this.noEffectFunc=E}apply(E,R,I,N){return this.noEffectFunc(E,I),!0}};r(O4,"NoEffectAttr");let pO=O4;const RL=r((t,E)=>{const R=new SA(!1);return sA($E,t,R),R.value?!1:(t.damageAndUpdate(uA(t.getMaxHp()/2),{result:CA.INDIRECT}),s.queueMessage(D.t("moveTriggers:keptGoingAndCrashed",{pokemonName:Z(t)})),t.turnData.damageTaken+=uA(t.getMaxHp()/2),!0)},"crashDamageFunc"),I4=class I4 extends wA{};r(I4,"TypelessAttr");let VS=I4;const L4=class L4 extends wA{constructor(E=!1){super(),this.abilitiesOnly=E}};r(L4,"BypassRedirectAttr");let GN=L4;const N4=class N4 extends tA{constructor(){super(!0,{lastHitOnly:!0})}canApply(E,R,I,N){return!(this.selfTarget?E:R).isFainted()}apply(E,R,I,N){if(!super.apply(E,R,I,N))return!1;if(!E.getTag(Y.FRENZY)&&!E.getMoveQueue().length){const S=E.randBattleSeedIntRange(1,2);new Array(S).fill(null).map(()=>E.getMoveQueue().push({move:I.id,targets:[R.getBattlerIndex()],ignorePP:!0})),E.addTag(Y.FRENZY,S,I.id,E.id)}else LE(TA,E,R,I,N),E.lapseTag(Y.FRENZY);return!0}};r(N4,"FrenzyAttr");let bs=N4;const hI=r((t,E)=>{for(;t.getMoveQueue().length&&t.getMoveQueue()[0].move===E.id;)t.getMoveQueue().shift();return t.removeTag(Y.FRENZY),!0},"frenzyMissFunc"),s4=class s4 extends tA{constructor(E){super(!0),this.tagType=E}apply(E,R,I,N){return super.apply(E,R,I,N)?E.addTag(this.tagType,1,I.id,E.id):!1}};r(s4,"SemiInvulnerableAttr");let YI=s4;const S4=class S4 extends tA{constructor(E,R=!1,I=!1,N=0,S,T=!1){super(R,{lastHitOnly:T}),this.tagType=E,this.turnCountMin=N,this.turnCountMax=S!==void 0?S:N,this.failOnOverlap=!!I}canApply(E,R,I,N){return!!super.canApply(E,R,I,N)}apply(E,R,I,N){if(!super.apply(E,R,I,N))return!1;const S=this.getMoveChance(E,R,I,this.selfTarget,!0);return S<0||S===100||E.randBattleSeedInt(100)<S?(this.selfTarget?E:R).addTag(this.tagType,E.randBattleSeedIntRange(this.turnCountMin,this.turnCountMax),I.id,E.id):!1}getCondition(){return this.failOnOverlap?(E,R,I)=>!(this.selfTarget?E:R).getTag(this.tagType):null}getTagTargetBenefitScore(){switch(this.tagType){case Y.RECHARGING:case Y.PERISH_SONG:return-16;case Y.FLINCHED:case Y.CONFUSED:case Y.INFATUATED:case Y.NIGHTMARE:case Y.DROWSY:case Y.DISABLED:case Y.HEAL_BLOCK:case Y.RECEIVE_DOUBLE_DAMAGE:return-5;case Y.SEEDED:case Y.SALT_CURED:case Y.CURSED:case Y.FRENZY:case Y.TRAPPED:case Y.BIND:case Y.WRAP:case Y.FIRE_SPIN:case Y.WHIRLPOOL:case Y.CLAMP:case Y.SAND_TOMB:case Y.MAGMA_STORM:case Y.SNAP_TRAP:case Y.THUNDER_CAGE:case Y.INFESTATION:return-3;case Y.ENCORE:return-2;case Y.MINIMIZED:case Y.ALWAYS_GET_HIT:return 0;case Y.INGRAIN:case Y.IGNORE_ACCURACY:case Y.AQUA_RING:case Y.MAGIC_COAT:return 3;case Y.PROTECTED:case Y.FLYING:case Y.CRIT_BOOST:case Y.ALWAYS_CRIT:return 5;default:return console.warn(`BattlerTag ${Y[this.tagType]} is missing a score!`),0}}getTargetBenefitScore(E,R,I){let N=this.getMoveChance(E,R,I,this.selfTarget,!1);return N<0&&(N=100),Math.floor(this.getTagTargetBenefitScore()*(N/100))}};r(S4,"AddBattlerTagAttr");let TA=S4;const T4=class T4 extends TA{constructor(){super(Y.SEEDED)}};r(T4,"LeechSeedAttr");let QU=T4;const n4=class n4 extends TA{constructor(){super(Y.IGNORE_FLYING,!1,!1,1,1,!0)}apply(E,R,I,N){return R.isGrounded()||s.queueMessage(D.t("moveTriggers:fallDown",{targetPokemonName:Z(R)})),super.apply(E,R,I,N)}};r(n4,"FallDownAttr");let JU=n4;const a4=class a4 extends tA{constructor(){super(!0)}apply(E,R,I,N){return super.apply(E,R,I,N)&&E.hasAbility(O.GULP_MISSILE)&&E.species.speciesId===e.CRAMORANT?(E.getHpRatio()>=.5?E.addTag(Y.GULP_MISSILE_ARROKUDA,0,I.id):E.addTag(Y.GULP_MISSILE_PIKACHU,0,I.id),!0):!1}getUserBenefitScore(E,R,I){return E.hasAbility(O.GULP_MISSILE)&&E.species.speciesId===e.CRAMORANT&&!E.getTag(Xl)?10:0}};r(a4,"GulpMissileTagAttr");let $U=a4;const r4=class r4 extends TA{constructor(){super(Y.TRAPPED)}apply(E,R,I,N){if(!super.canApply(E,R,I,N)||E.getTag(eO)||R.getTag(eO))return!1;const S=this.getMoveChance(E,R,I,this.selfTarget);return S<0||S===100||E.randBattleSeedInt(100)<S?R.addTag(Y.TRAPPED,1,I.id,E.id)&&E.addTag(Y.TRAPPED,1,I.id,R.id):!1}};r(r4,"JawLockAttr");let QH=r4;const i4=class i4 extends tA{apply(E,R,I,N){if(E.getTypes(!0).includes(L.GHOST)){if(R.getTag(Y.CURSED))return s.queueMessage(D.t("battle:attackFailed")),!1;const S=Math.max(1,Math.floor(E.getMaxHp()/2));return E.damageAndUpdate(S,{result:CA.INDIRECT,ignoreSegments:!0}),s.queueMessage(D.t("battlerTags:cursedOnAdd",{pokemonNameWithAffix:Z(E),pokemonName:Z(R)})),R.addTag(Y.CURSED,0,I.id,E.id),!0}else return s.unshiftPhase(new hA(E.getBattlerIndex(),!0,[h.ATK,h.DEF],1)),s.unshiftPhase(new hA(E.getBattlerIndex(),!0,[h.SPD],-1)),!0}};r(i4,"CurseAttr");let JH=i4;const o4=class o4 extends tA{constructor(E,R=!1){super(R),this.tagTypes=E}apply(E,R,I,N){if(!super.apply(E,R,I,N))return!1;for(const S of this.tagTypes)(this.selfTarget?E:R).lapseTag(S);return!0}};r(o4,"LapseBattlerTagAttr");let $H=o4;const C4=class C4 extends tA{constructor(E,R=!1){super(R),this.tagTypes=E}apply(E,R,I,N){if(!super.apply(E,R,I,N))return!1;for(const S of this.tagTypes)(this.selfTarget?E:R).removeTag(S);return!0}};r(C4,"RemoveBattlerTagAttr");let WI=C4;const l4=class l4 extends TA{constructor(){super(Y.FLINCHED,!1)}};r(l4,"FlinchAttr");let VA=l4;const U4=class U4 extends TA{constructor(E){super(Y.CONFUSED,E,!1,2,5)}apply(E,R,I,N){return!this.selfTarget&&R.isSafeguarded(E)?(I.category===u.STATUS&&s.queueMessage(D.t("moveTriggers:safeguard",{targetName:Z(R)})),!1):super.apply(E,R,I,N)}};r(U4,"ConfuseAttr");let rt=U4;const D4=class D4 extends TA{constructor(){super(Y.RECHARGING,!0,!1,1,1,!0)}};r(D4,"RechargeAttr");let kR=D4;const M4=class M4 extends TA{constructor(E){super(E,!1,!1,4,5)}};r(M4,"TrapAttr");let UO=M4;const nM=class nM extends TA{constructor(E=Y.PROTECTED){super(E,!0)}getCondition(){return(E,R,I)=>{let N=0;const S=E.getLastXMoves();let T;for(;S.length&&(T=S.shift(),!(!Ke[(T==null?void 0:T.move)??A.NONE].hasAttr(nM)||(T==null?void 0:T.result)!==EE.SUCCESS));)N++;return N?!E.randBattleSeedInt(Math.pow(3,N)):!0}}};r(nM,"ProtectAttr");let IO=nM;const P4=class P4 extends TA{constructor(){super(Y.IGNORE_ACCURACY,!0,!1,2)}apply(E,R,I,N){return super.apply(E,R,I,N)?(s.queueMessage(D.t("moveTriggers:tookAimAtTarget",{pokemonName:Z(E),targetName:Z(R)})),!0):!1}};r(P4,"IgnoreAccuracyAttr");let qU=P4;const G4=class G4 extends TA{constructor(){super(Y.PERISH_SONG,!1,!0,4)}apply(E,R,I,N){return super.apply(E,R,I,N)?(s.queueMessage(D.t("moveTriggers:faintCountdown",{pokemonName:Z(R),turnCount:this.turnCountMin-1})),!0):!1}};r(G4,"FaintCountdownAttr");let qH=G4;const _4=class _4 extends tA{constructor(){super(!0)}apply(E,R,I,N){return super.apply(E,R,I,N)?(s.getField(!0).forEach(S=>S.findAndRemoveTags(T=>T.tagType===Y.SUBSTITUTE)),!0):!1}};r(_4,"RemoveAllSubstitutesAttr");let zH=_4;const u4=class u4 extends wA{constructor(E,R=!1){super(),this.tagType=E,this.doubleDamage=!!R}getTargetBenefitScore(E,R,I){return R.getTag(this.tagType)?this.doubleDamage?10:5:0}};r(u4,"HitsTagAttr");let XR=u4;const H4=class H4 extends XR{constructor(E){super(E,!0)}};r(H4,"HitsTagForDoubleDamageAttr");let iR=H4;const c4=class c4 extends tA{constructor(E,R,I=!1,N=!1){super(!0),this.tagType=E,this.turnCount=R,this.failOnOverlap=I,this.selfSideTarget=N}apply(E,R,I,N){var S;if(!super.apply(E,R,I,N))return!1;if((I.chance<0||I.chance===100||E.randBattleSeedInt(100)<I.chance)&&((S=E.getLastXMoves(1)[0])==null?void 0:S.result)===EE.SUCCESS){const T=(this.selfSideTarget?E:R).isPlayer()!==(I.hasAttr(BL)&&R===E)?qe.PLAYER:qe.ENEMY;return s.arena.addTag(this.tagType,this.turnCount,I.id,E.id,T),!0}return!1}getCondition(){return this.failOnOverlap?(E,R,I)=>!s.arena.getTagOnSide(this.tagType,R.isPlayer()?qe.PLAYER:qe.ENEMY):null}};r(c4,"AddArenaTagAttr");let dE=c4;const B4=class B4 extends tA{constructor(E,R){super(!0),this.tagTypes=E,this.selfSideTarget=R}apply(E,R,I,N){if(!super.apply(E,R,I,N))return!1;const S=(this.selfSideTarget?E:R).isPlayer()?qe.PLAYER:qe.ENEMY;for(const T of this.tagTypes)s.arena.removeTagOnSide(T,S);return!0}};r(B4,"RemoveArenaTagsAttr");let zU=B4;const h4=class h4 extends dE{getCondition(){return(E,R,I)=>{const N=this.selfSideTarget!==E.isPlayer()?qe.ENEMY:qe.PLAYER,S=s.arena.getTagOnSide(this.tagType,N);return S?S.layers<S.maxLayers:!0}}};r(h4,"AddArenaTrapTagAttr");let BL=h4;const f4=class f4 extends dE{apply(E,R,I,N){var o;const S=this.getMoveChance(E,R,I,this.selfTarget,!0),T=(this.selfSideTarget?E:R).isPlayer()?qe.PLAYER:qe.ENEMY,i=s.arena.getTagOnSide(this.tagType,T);return(S<0||S===100||E.randBattleSeedInt(100)<S)&&((o=E.getLastXMoves(1)[0])==null?void 0:o.result)===EE.SUCCESS?(s.arena.addTag(this.tagType,0,I.id,E.id,T),i?i.layers<i.maxLayers:!0):!1}};r(f4,"AddArenaTrapTagHitAttr");let jU=f4;const d4=class d4 extends tA{constructor(E=!1){super(!0,{trigger:YR.PRE_APPLY}),this.targetBothSides=E}apply(E,R,I,N){return super.apply(E,R,I,N)?(this.targetBothSides?(s.arena.removeTagOnSide(oe.SPIKES,qe.PLAYER),s.arena.removeTagOnSide(oe.TOXIC_SPIKES,qe.PLAYER),s.arena.removeTagOnSide(oe.STEALTH_ROCK,qe.PLAYER),s.arena.removeTagOnSide(oe.STICKY_WEB,qe.PLAYER),s.arena.removeTagOnSide(oe.SPIKES,qe.ENEMY),s.arena.removeTagOnSide(oe.TOXIC_SPIKES,qe.ENEMY),s.arena.removeTagOnSide(oe.STEALTH_ROCK,qe.ENEMY),s.arena.removeTagOnSide(oe.STICKY_WEB,qe.ENEMY)):(s.arena.removeTagOnSide(oe.SPIKES,R.isPlayer()?qe.ENEMY:qe.PLAYER),s.arena.removeTagOnSide(oe.TOXIC_SPIKES,R.isPlayer()?qe.ENEMY:qe.PLAYER),s.arena.removeTagOnSide(oe.STEALTH_ROCK,R.isPlayer()?qe.ENEMY:qe.PLAYER),s.arena.removeTagOnSide(oe.STICKY_WEB,R.isPlayer()?qe.ENEMY:qe.PLAYER)),!0):!1}};r(d4,"RemoveArenaTrapAttr");let Zs=d4;const K4=class K4 extends tA{constructor(E=!1){super(!0,{trigger:YR.PRE_APPLY}),this.targetBothSides=E}apply(E,R,I,N){return super.apply(E,R,I,N)?(this.targetBothSides?(s.arena.removeTagOnSide(oe.REFLECT,qe.PLAYER),s.arena.removeTagOnSide(oe.LIGHT_SCREEN,qe.PLAYER),s.arena.removeTagOnSide(oe.AURORA_VEIL,qe.PLAYER),s.arena.removeTagOnSide(oe.REFLECT,qe.ENEMY),s.arena.removeTagOnSide(oe.LIGHT_SCREEN,qe.ENEMY),s.arena.removeTagOnSide(oe.AURORA_VEIL,qe.ENEMY)):(s.arena.removeTagOnSide(oe.REFLECT,R.isPlayer()?qe.PLAYER:qe.ENEMY),s.arena.removeTagOnSide(oe.LIGHT_SCREEN,R.isPlayer()?qe.PLAYER:qe.ENEMY),s.arena.removeTagOnSide(oe.AURORA_VEIL,R.isPlayer()?qe.PLAYER:qe.ENEMY)),!0):!1}};r(K4,"RemoveScreensAttr");let ks=K4;const F4=class F4 extends tA{constructor(E){super(!0),this.SwapTags=E}apply(E,R,I,N){if(!super.apply(E,R,I,N))return!1;const S=s.arena.findTagsOnSide(i=>this.SwapTags.includes(i.tagType),qe.PLAYER),T=s.arena.findTagsOnSide(i=>this.SwapTags.includes(i.tagType),qe.ENEMY);if(S)for(const i of S)s.arena.removeTagOnSide(i.tagType,qe.PLAYER,!0),s.arena.addTag(i.tagType,i.turnCount,i.sourceMove,i.sourceId,qe.ENEMY,!0);if(T)for(const i of T)s.arena.removeTagOnSide(i.tagType,qe.ENEMY,!0),s.arena.addTag(i.tagType,i.turnCount,i.sourceMove,i.sourceId,qe.PLAYER,!0);return s.queueMessage(D.t("moveTriggers:swapArenaTags",{pokemonName:Z(E)})),!0}};r(F4,"SwapArenaTagsAttr");let jH=F4;const Y4=class Y4 extends dE{constructor(E,R,I=!1){super(E,4,!1,I),this.requiredPledge=R}apply(E,R,I,N){var S;return((S=E.getLastXMoves(1)[0])==null?void 0:S.result)!==EE.SUCCESS?!1:E.turnData.combiningPledge===this.requiredPledge?super.apply(E,R,I,N):!1}};r(Y4,"AddPledgeEffectAttr");let aL=Y4;const W4=class W4 extends tA{constructor(){super(!0)}apply(E,R,I,N){var S;if(E instanceof Rt)return s.unshiftPhase(new Xu(E)),!0;if(E instanceof pR&&E.hasTrainer()&&s.getEnemyParty().findIndex(T=>T.isFainted()&&!T.isBoss())>-1){const T=s.getEnemyParty().filter(U=>U.isFainted()&&!U.isBoss()),i=T[E.randBattleSeedInt(T.length)],o=s.getEnemyParty().findIndex(U=>i.id===U.id);i.resetStatus(!0,!1,!1,!0),i.heal(Math.min(uA(.5*i.getMaxHp()),i.getMaxHp())),s.queueMessage(D.t("moveTriggers:revivalBlessing",{pokemonName:Z(i)}),0,!0);const C=E.getAlly();return s.currentBattle.double&&s.getEnemyParty().length>1&&!Ne(C)&&(C.isFainted()||C===i)&&(s.tryRemovePhase(U=>U instanceof jR&&U.getPokemon()===i),(S=s.findPhase(U=>U.pokemon===i))==null||S.cancel(),E.fieldPosition===RR.CENTER&&E.setFieldPosition(RR.LEFT),s.unshiftPhase(new jR(ZA.SWITCH,C.getFieldIndex(),o,!1,!1))),!0}return!1}getCondition(){return(E,R,I)=>E instanceof Rt&&s.getPlayerParty().some(N=>N.isFainted())||E instanceof pR&&E.hasTrainer()&&s.getEnemyParty().some(N=>N.isFainted()&&!N.isBoss())}getUserBenefitScore(E,R,I){return E.hasTrainer()&&s.getEnemyParty().some(N=>N.isFainted()&&!N.isBoss())?20:-20}};r(W4,"RevivalBlessingAttr");let e1=W4;const m4=class m4 extends tA{constructor(E=!1,R=ZA.SWITCH){super(!1,{lastHitOnly:!0}),this.selfSwitch=E,this.switchType=R}isBatonPass(){return this.switchType===ZA.BATON_PASS}apply(E,R,I,N){var T;if(!this.getSwitchOutCondition()(E,R,I))return!1;const S=this.selfSwitch?E:R;if(S.lapseTag(Y.COMMANDED),S instanceof Rt){if(R.getAbility().hasAttr(As)&&[A.U_TURN,A.VOLT_SWITCH,A.FLIP_TURN].includes(I.id)&&this.hpDroppedBelowHalf(R))return!1;const i=[];if(s.getPlayerParty().forEach((o,C)=>{o.isAllowedInBattle()&&!o.isOnField()&&i.push(C)}),i.length<1)return!1;if(S.hp>0)if(this.switchType===ZA.FORCE_SWITCH){S.leaveField(!0);const o=i[E.randBattleSeedInt(i.length)];s.prependToPhase(new jR(this.switchType,S.getFieldIndex(),o,!1,!0),qR)}else return S.leaveField(this.switchType===ZA.SWITCH),s.prependToPhase(new xN(this.switchType,S.getFieldIndex(),!0,!0),qR),!0;return!1}else if(s.currentBattle.battleType!==AA.WILD){const i=(T=s.currentBattle.trainer)==null?void 0:T.isPartner(),o=[];if(s.getEnemyParty().forEach((C,U)=>{C.isAllowedInBattle()&&!C.isOnField()&&(!i||C.trainerSlot===S.trainerSlot)&&o.push(U)}),o.length<1)return!1;if(S.hp>0)if(this.switchType===ZA.FORCE_SWITCH){S.leaveField(!0);const C=o[E.randBattleSeedInt(o.length)];s.prependToPhase(new jR(this.switchType,S.getFieldIndex(),C,!1,!1),qR)}else S.leaveField(this.switchType===ZA.SWITCH),s.prependToPhase(new jR(this.switchType,S.getFieldIndex(),s.currentBattle.trainer?s.currentBattle.trainer.getNextSummonIndex(S.trainerSlot):0,!1,!1),qR)}else{if(R.getAbility().hasAttr(As)&&[A.U_TURN,A.VOLT_SWITCH,A.FLIP_TURN].includes(I.id)&&this.hpDroppedBelowHalf(R))return!1;const i=S.getAlly();S.hp>0&&(S.leaveField(!1),s.queueMessage(D.t("moveTriggers:fled",{pokemonName:Z(S)}),null,!0,500),s.currentBattle.double&&!Ne(i)&&s.redirectPokemonMoves(S,i)),s.clearEnemyHeldItemModifiers(S),!(i!=null&&i.isActive(!0))&&S.hp&&(s.pushPhase(new bN(!1)),(s.gameMode.hasRandomBiomes||s.isNewBiome())&&s.pushPhase(new MS),s.pushPhase(new US))}return!0}getCondition(){return(E,R,I)=>I.category!==u.STATUS||this.getSwitchOutCondition()(E,R,I)}getFailedText(E,R,I){const N=new SA(!1);if(sA(bL,R,N),N.value)return D.t("moveTriggers:cannotBeSwitchedOut",{pokemonName:Z(R)})}getSwitchOutCondition(){return(E,R,I)=>{var i,o;const N=this.selfSwitch?E:R,S=N instanceof Rt;if(!this.selfSwitch){const C=N.getTag(Y.COMMANDED);if((i=C==null?void 0:C.getSourcePokemon())!=null&&i.isActive(!0)||!S&&s.currentBattle.isBattleMysteryEncounter()&&!((o=s.currentBattle.mysteryEncounter)!=null&&o.fleeAllowed))return!1;const U=new SA(!1);if(sA(bL,R,U),U.value)return!1}return!S&&s.currentBattle.battleType===AA.WILD?!this.isBatonPass()&&s.currentBattle.waveIndex%10!==0&&!(this.selfSwitch&&u.STATUS!==I.category):(S?s.getPlayerParty():s.getEnemyParty()).filter(C=>C.isAllowedInBattle()&&!C.isOnField()&&(S||C.trainerSlot===N.trainerSlot)).length>0}}getUserBenefitScore(E,R,I){if(!s.getEnemyParty().find(S=>S.isActive()&&!S.isOnField()))return-20;let N=this.selfSwitch?Math.floor((1-E.getHpRatio())*20):super.getUserBenefitScore(E,R,I);if(this.selfSwitch&&this.isBatonPass()){const S=E.getStatStages().reduce((T,i)=>i+=T,0);N=N/2+Phaser.Tweens.Builders.GetEaseFunction("Sine.easeOut")(Math.min(Math.abs(S),10)/10)*(S>=0?10:-10)}return N}hpDroppedBelowHalf(E){const R=E.hp,I=E.getMaxHp(),N=E.turnData.damageTaken;return R+N>=I/2&&R<I/2}};r(m4,"ForceSwitchOutAttr");let oR=m4;const g4=class g4 extends oR{apply(E,R,I,N){return s.arena.trySetWeather(X.SNOW,E),super.apply(E,R,I,N)}getCondition(){return(E,R,I)=>{var N;return((N=s.arena.weather)==null?void 0:N.weatherType)!==X.SNOW||super.getSwitchOutCondition()(E,R,I)}}};r(g4,"ChillyReceptionAttr");let A1=g4;const p4=class p4 extends tA{constructor(E,R){super(!0,{trigger:YR.POST_TARGET}),this.removedType=E,this.messageCallback=R}apply(E,R,I,N){if(!super.apply(E,R,I,N)||E.isTerastallized&&E.getTeraType()===this.removedType)return!1;const T=E.getTypes(!0).filter(i=>i!==this.removedType);return T.length===0&&T.push(L.UNKNOWN),E.summonData.types=T,E.updateInfo(),this.messageCallback&&this.messageCallback(E),!0}};r(p4,"RemoveTypeAttr");let eD=p4;const y4=class y4 extends tA{constructor(){super(!1)}apply(E,R,I,N){if(!super.apply(E,R,I,N))return!1;const S=R.getTypes(!0);return S.includes(L.UNKNOWN)&&S.indexOf(L.UNKNOWN)>-1&&(S[S.indexOf(L.UNKNOWN)]=L.NORMAL),E.summonData.types=S,E.updateInfo(),s.queueMessage(D.t("moveTriggers:copyType",{pokemonName:Z(E),targetPokemonName:Z(R)})),!0}getCondition(){return(E,R,I)=>R.getTypes()[0]!==L.UNKNOWN||R.summonData.addedType!==null}};r(y4,"CopyTypeAttr");let E1=y4;const w4=class w4 extends tA{constructor(){super(!0)}apply(E,R,I,N){if(!super.apply(E,R,I,N))return!1;const S=s.arena.getTerrainType();let T;return S!==$e.NONE?T=this.getTypeForTerrain(s.arena.getTerrainType()):T=this.getTypeForBiome(s.arena.biomeType),E.summonData.types=[T],E.updateInfo(),s.queueMessage(D.t("moveTriggers:transformedIntoType",{pokemonName:Z(E),typeName:D.t(`pokemonInfo:Type.${L[T]}`)})),!0}getTypeForTerrain(E){switch(E){case $e.ELECTRIC:return L.ELECTRIC;case $e.MISTY:return L.FAIRY;case $e.GRASSY:return L.GRASS;case $e.PSYCHIC:return L.PSYCHIC;case $e.NONE:default:return L.UNKNOWN}}getTypeForBiome(E){switch(E){case n.TOWN:case n.PLAINS:case n.METROPOLIS:return L.NORMAL;case n.GRASS:case n.TALL_GRASS:return L.GRASS;case n.FOREST:case n.JUNGLE:return L.BUG;case n.SLUM:case n.SWAMP:return L.POISON;case n.SEA:case n.BEACH:case n.LAKE:case n.SEABED:return L.WATER;case n.MOUNTAIN:return L.FLYING;case n.BADLANDS:return L.GROUND;case n.CAVE:case n.DESERT:return L.ROCK;case n.ICE_CAVE:case n.SNOWY_FOREST:return L.ICE;case n.MEADOW:case n.FAIRY_CAVE:case n.ISLAND:return L.FAIRY;case n.POWER_PLANT:return L.ELECTRIC;case n.VOLCANO:return L.FIRE;case n.GRAVEYARD:case n.TEMPLE:return L.GHOST;case n.DOJO:case n.CONSTRUCTION_SITE:return L.FIGHTING;case n.FACTORY:case n.LABORATORY:return L.STEEL;case n.RUINS:case n.SPACE:return L.PSYCHIC;case n.WASTELAND:case n.END:return L.DRAGON;case n.ABYSS:return L.DARK;default:return L.UNKNOWN}}};r(w4,"CopyBiomeTypeAttr");let t1=w4;const V4=class V4 extends tA{constructor(E){super(!1),this.type=E}apply(E,R,I,N){return R.summonData.types=[this.type],R.updateInfo(),s.queueMessage(D.t("moveTriggers:transformedIntoType",{pokemonName:Z(R),typeName:D.t(`pokemonInfo:Type.${L[this.type]}`)})),!0}getCondition(){return(E,R,I)=>!R.isTerastallized&&!R.hasAbility(O.MULTITYPE)&&!R.hasAbility(O.RKS_SYSTEM)&&!(R.getTypes().length===1&&R.getTypes()[0]===this.type)}};r(V4,"ChangeTypeAttr");let AD=V4;const v4=class v4 extends tA{constructor(E){super(!1),this.type=E}apply(E,R,I,N){return R.summonData.addedType=this.type,R.updateInfo(),s.queueMessage(D.t("moveTriggers:addType",{typeName:D.t(`pokemonInfo:Type.${L[this.type]}`),pokemonName:Z(R)})),!0}getCondition(){return(E,R,I)=>!R.isTerastallized&&!R.getTypes().includes(this.type)}};r(v4,"AddTypeAttr");let ED=v4;const x4=class x4 extends tA{constructor(){super(!0)}apply(E,R,I,N){if(!super.apply(E,R,I,N))return!1;const S=R.getMoveset()[0].getMove().type;return E.summonData.types=[S],s.queueMessage(D.t("battle:transformedIntoType",{pokemonName:Z(E),type:D.t(`pokemonInfo:Type.${L[S]}`)})),!0}};r(x4,"FirstMoveTypeAttr");let R1=x4;const b4=class b4 extends ZL{apply(E,R,I,N){const S=I.moveTarget===ee.NEAR_OTHER?ee.NEAR_ENEMY:void 0,T=JI(E,I.id,S);if(T.targets.length===0)return s.queueMessage(D.t("battle:attackFailed")),console.log("CallMoveAttr failed due to no targets."),!1;const i=T.multiple||T.targets.length===1?T.targets:[this.hasTarget?R.getBattlerIndex():T.targets[E.randBattleSeedInt(T.targets.length)]];return E.getMoveQueue().push({move:I.id,targets:i,virtual:!0,ignorePP:!0}),s.unshiftPhase(new tU(I.id)),s.unshiftPhase(new lE(E,i,new Ye(I.id,0,0,!0),!0,!0)),!0}};r(b4,"CallMoveAttr");let Br=b4;const Z4=class Z4 extends Br{constructor(E){super(),this.invalidMoves=E}getMoveOverride(){return null}apply(E,R,I,N){const S=Ct(A).map(i=>!this.invalidMoves.has(i)&&!Ke[i].name.endsWith(" (N)")?i:A.NONE);let T=A.NONE;do T=this.getMoveOverride()??S[E.randBattleSeedInt(S.length)];while(T===A.NONE);return super.apply(E,R,Ke[T],N)}};r(Z4,"RandomMoveAttr");let tD=Z4;const k4=class k4 extends Br{constructor(E,R=!1){super(),this.includeParty=R,this.invalidMoves=E}apply(E,R,I,N){return super.apply(E,R,Ke[this.moveId],N)}getCondition(){return(E,R,I)=>{let N;this.includeParty?N=E.isPlayer()?s.getPlayerParty().filter(i=>i!==E):s.getEnemyParty().filter(i=>i!==E):N=[E];const T=N.map(i=>i.moveset).flat().filter(i=>!this.invalidMoves.has(i.moveId)&&!i.getMove().name.endsWith(" (N)"));return T.length===0?!1:(this.moveId=T[E.randBattleSeedInt(T.length)].moveId,!0)}}};r(k4,"RandomMovesetMoveAttr");let hr=k4;const X4=class X4 extends ZL{apply(E,R,I,N){let S;switch(s.arena.getTerrainType()){case $e.NONE:switch(s.arena.biomeType){case n.TOWN:S=A.ROUND;break;case n.METROPOLIS:S=A.TRI_ATTACK;break;case n.SLUM:S=A.SLUDGE_BOMB;break;case n.PLAINS:S=A.SILVER_WIND;break;case n.GRASS:S=A.GRASS_KNOT;break;case n.TALL_GRASS:S=A.POLLEN_PUFF;break;case n.MEADOW:S=A.GIGA_DRAIN;break;case n.FOREST:S=A.BUG_BUZZ;break;case n.JUNGLE:S=A.LEAF_STORM;break;case n.SEA:S=A.HYDRO_PUMP;break;case n.SWAMP:S=A.MUD_BOMB;break;case n.BEACH:S=A.SCALD;break;case n.LAKE:S=A.BUBBLE_BEAM;break;case n.SEABED:S=A.BRINE;break;case n.ISLAND:S=A.LEAF_TORNADO;break;case n.MOUNTAIN:S=A.AIR_SLASH;break;case n.BADLANDS:S=A.EARTH_POWER;break;case n.DESERT:S=A.SCORCHING_SANDS;break;case n.WASTELAND:S=A.DRAGON_PULSE;break;case n.CONSTRUCTION_SITE:S=A.STEEL_BEAM;break;case n.CAVE:S=A.POWER_GEM;break;case n.ICE_CAVE:S=A.ICE_BEAM;break;case n.SNOWY_FOREST:S=A.FROST_BREATH;break;case n.VOLCANO:S=A.LAVA_PLUME;break;case n.GRAVEYARD:S=A.SHADOW_BALL;break;case n.RUINS:S=A.ANCIENT_POWER;break;case n.TEMPLE:S=A.EXTRASENSORY;break;case n.DOJO:S=A.FOCUS_BLAST;break;case n.FAIRY_CAVE:S=A.ALLURING_VOICE;break;case n.ABYSS:S=A.OMINOUS_WIND;break;case n.SPACE:S=A.DRACO_METEOR;break;case n.FACTORY:S=A.FLASH_CANNON;break;case n.LABORATORY:S=A.ZAP_CANNON;break;case n.POWER_PLANT:S=A.CHARGE_BEAM;break;case n.END:S=A.ETERNABEAM;break}break;case $e.MISTY:S=A.MOONBLAST;break;case $e.ELECTRIC:S=A.THUNDERBOLT;break;case $e.GRASSY:S=A.ENERGY_BALL;break;case $e.PSYCHIC:S=A.PSYCHIC;break;default:S=A.TRI_ATTACK;break}return E.getMoveQueue().push({move:S,targets:[R.getBattlerIndex()],ignorePP:!0}),s.unshiftPhase(new tU(S)),s.unshiftPhase(new lE(E,[R.getBattlerIndex()],new Ye(S,0,0,!0),!0)),!0}};r(X4,"NaturePowerAttr");let RD=X4;const Q4=class Q4 extends Br{constructor(E,R=new Set){super(),this.mirrorMove=E,this.invalidMoves=R}apply(E,R,I,N){this.hasTarget=this.mirrorMove;const S=this.mirrorMove?R.getLastXMoves()[0].move:s.currentBattle.lastMove;return super.apply(E,R,Ke[S],N)}getCondition(){return(E,R,I)=>{var N;if(this.mirrorMove){const S=(N=R.getLastXMoves()[0])==null?void 0:N.move;return!!S&&!this.invalidMoves.has(S)}else{const S=s.currentBattle.lastMove;return S!==void 0&&!this.invalidMoves.has(S)}}}};r(Q4,"CopyMoveAttr");let vS=Q4;const J4=class J4 extends tA{constructor(){super(!1,{trigger:YR.POST_APPLY})}apply(E,R,I,N){const S=R.getLastXMoves(-1).find(C=>C.move!==A.NONE),T=R.getMoveset().find(C=>C.moveId===S.move);let i=T.getMove().isMultiTarget()?JI(R,S.move).targets:S.targets;const o=s.getField()[i[0]];if(s.currentBattle.double&&i.length===1&&o.isFainted()&&o!==R.getAlly()){const C=o.getAlly();!Ne(C)&&C.isActive()&&(i=[C.getBattlerIndex()])}return s.queueMessage(D.t("moveTriggers:instructingMove",{userPokemonName:Z(E),targetPokemonName:Z(R)})),R.getMoveQueue().unshift({move:S.move,targets:i,ignorePP:!1}),R.turnData.extraTurns++,s.appendToPhase(new lE(R,i,T),qR),!0}getCondition(){return(E,R,I)=>{const N=R.getLastXMoves(-1).find(i=>i.move!==A.NONE),S=R.getMoveset().find(i=>i.moveId===(N==null?void 0:N.move)),T=[A.OUTRAGE,A.RAGING_FURY,A.ROLLOUT,A.PETAL_DANCE,A.THRASH,A.ICE_BALL,A.BIDE,A.SHELL_TRAP,A.BEAK_BLAST,A.FOCUS_PUNCH,A.FAKE_OUT,A.FIRST_IMPRESSION,A.MAT_BLOCK,A.HYPER_BEAM,A.ETERNABEAM,A.FRENZY_PLANT,A.BLAST_BURN,A.HYDRO_CANNON,A.GIGA_IMPACT,A.PRISMATIC_LASER,A.ROAR_OF_TIME,A.ROCK_WRECKER,A.METEOR_ASSAULT,A.DIG,A.FLY,A.BOUNCE,A.SHADOW_FORCE,A.PHANTOM_FORCE,A.DIVE,A.ELECTRO_SHOT,A.ICE_BURN,A.GEOMANCY,A.FREEZE_SHOCK,A.SKY_DROP,A.SKY_ATTACK,A.SKULL_BASH,A.SOLAR_BEAM,A.SOLAR_BLADE,A.METEOR_BEAM,A.INSTRUCT,A.KINGS_SHIELD,A.SKETCH,A.TRANSFORM,A.MIMIC,A.STRUGGLE];return!(!(N!=null&&N.move)||!S||S.ppUsed===S.getMovePp()||Ke[N.move].isChargingMove()||T.includes(N.move))}}getTargetBenefitScore(E,R,I){return 2}};r(J4,"RepeatMoveAttr");let O1=J4;const $4=class $4 extends tA{constructor(E){super(),this.reduction=E}apply(E,R,I,N){const S=R.getLastXMoves()[0],T=R.getMoveset().find(C=>C.moveId===S.move),i=T.ppUsed;T.ppUsed=Math.min(i+this.reduction,T.getMovePp());const o=D.t("battle:ppReduced",{targetName:Z(R),moveName:T.getName(),reduction:T.ppUsed-i});return s.eventTarget.dispatchEvent(new Ga(R.id,T.getMove(),T.ppUsed)),s.queueMessage(o),!0}getCondition(){return(E,R,I)=>{const N=R.getLastXMoves()[0];if(N){const S=R.getMoveset().find(T=>T.moveId===N.move);return!!(S!=null&&S.getPpRatio())}return!1}}getTargetBenefitScore(E,R,I){const N=R.getLastXMoves()[0];if(N){const S=R.getMoveset().find(T=>T.moveId===N.move);if(S){const T=S.getMovePp(),i=T-S.ppUsed,o=-(8-Math.ceil(Math.min(T,30)/5));return i<4?o/4*i:o}}return 0}};r($4,"ReducePpMoveAttr");let OD=$4;const q4=class q4 extends OD{constructor(E){super(E)}apply(E,R,I,N){const S=R.getLastXMoves().find(()=>!0);if(S){const T=R.getMoveset().find(i=>i.moveId===S.move);T!=null&&T.getPpRatio()&&super.apply(E,R,I,N)}return!0}getCondition(){return(E,R,I)=>!0}};r(q4,"AttackReducePpMoveAttr");let I1=q4;const D6=r((t,E,R)=>{const I=E.getMoveHistory().filter(S=>!S.virtual);if(!I.length)return!1;const N=I[0];return!(!N.move||Ke[N.move].isChargingMove()&&N.result===EE.OTHER)},"targetMoveCopiableCondition"),z4=class z4 extends ZL{apply(E,R,I,N){const S=R.getMoveHistory().filter(o=>!o.virtual);if(!S.length)return!1;const T=Ke[S[0].move],i=E.getMoveset().findIndex(o=>o.moveId===I.id);return i===-1?!1:(E.summonData.moveset=E.getMoveset().slice(0),E.summonData.moveset[i]=new Ye(T.id,0,0),s.queueMessage(D.t("moveTriggers:copiedMove",{pokemonName:Z(E),moveName:T.name})),!0)}getCondition(){return D6}};r(z4,"MovesetCopyMoveAttr");let L1=z4;const j4=class j4 extends tA{constructor(){super(!0)}apply(E,R,I,N){if(!super.apply(E,R,I,N))return!1;const S=R.getLastXMoves(-1).find(o=>o.move!==A.NONE&&o.move!==A.STRUGGLE&&!o.virtual);if(!S)return!1;const T=Ke[S.move],i=E.getMoveset().findIndex(o=>o.moveId===I.id);return i===-1?!1:(E.setMove(i,T.id),s.queueMessage(D.t("moveTriggers:sketchedMove",{pokemonName:Z(E),moveName:T.name})),!0)}getCondition(){return(E,R,I)=>{if(!D6(E,R))return!1;const N=R.getMoveHistory().filter(T=>!T.virtual).at(-1);return!(!N||[A.CHATTER,A.MIRROR_MOVE,A.SLEEP_TALK,A.STRUGGLE,A.SKETCH,A.REVIVAL_BLESSING,A.TERA_STARSTORM,A.BREAKNECK_BLITZ__PHYSICAL,A.BREAKNECK_BLITZ__SPECIAL].includes(N.move)||E.getMoveset().find(T=>T.moveId===N.move))}}};r(j4,"SketchAttr");let N1=j4;const e3=class e3 extends tA{constructor(E,R){super(R),this.ability=E}apply(E,R,I,N){if(!super.apply(E,R,I,N))return!1;const S=this.selfTarget?E:R;return s.triggerPokemonFormChange(S,CI),S.breakIllusion()&&s.queueMessage(D.t("abilityTriggers:illusionBreak",{pokemonName:Z(S)})),s.queueMessage(D.t("moveTriggers:acquiredAbility",{pokemonName:Z(S),abilityName:qE[this.ability].name})),S.setTempAbility(qE[this.ability]),s.triggerPokemonFormChange(S,CI),!0}getCondition(){return(E,R,I)=>(this.selfTarget?E:R).getAbility().isReplaceable&&(this.selfTarget?E:R).getAbility().id!==this.ability}};r(e3,"AbilityChangeAttr");let ID=e3;const A3=class A3 extends tA{constructor(E=!1){super(!1),this.copyToPartner=E}apply(E,R,I,N){var T;if(!super.apply(E,R,I,N))return!1;s.queueMessage(D.t("moveTriggers:copiedTargetAbility",{pokemonName:Z(E),targetName:Z(R),abilityName:qE[R.getAbility().id].name})),E.setTempAbility(R.getAbility());const S=E.getAlly();return this.copyToPartner&&((T=s.currentBattle)!=null&&T.double)&&!Ne(S)&&S.hp&&(s.queueMessage(D.t("moveTriggers:copiedTargetAbility",{pokemonName:Z(S),targetName:Z(R),abilityName:qE[R.getAbility().id].name})),S.setTempAbility(R.getAbility())),!0}getCondition(){return(E,R,I)=>{var T;const N=E.getAlly();let S=R.getAbility().isCopiable&&E.getAbility().isReplaceable;return this.copyToPartner&&((T=s.currentBattle)!=null&&T.double)?S=S&&(!(N!=null&&N.hp)||(N==null?void 0:N.getAbility().isReplaceable)):S=S&&E.getAbility().id!==R.getAbility().id,S}}};r(A3,"AbilityCopyAttr");let LD=A3;const E3=class E3 extends tA{constructor(){super(!1)}apply(E,R,I,N){return super.apply(E,R,I,N)?(s.queueMessage(D.t("moveTriggers:acquiredAbility",{pokemonName:Z(R),abilityName:qE[E.getAbility().id].name})),R.setTempAbility(E.getAbility()),!0):!1}getCondition(){return(E,R,I)=>E.getAbility().isCopiable&&R.getAbility().isReplaceable&&E.getAbility().id!==R.getAbility().id}};r(E3,"AbilityGiveAttr");let s1=E3;const t3=class t3 extends tA{apply(E,R,I,N){if(!super.apply(E,R,I,N))return!1;const S=E.getAbility();return s.queueMessage(D.t("moveTriggers:swappedAbilitiesWithTarget",{pokemonName:Z(E)})),E.setTempAbility(R.getAbility()),R.setTempAbility(S),s.arena.triggerWeatherBasedFormChangesToNormal(),!0}getCondition(){return(E,R,I)=>[E,R].every(N=>N.getAbility().isSwappable)}};r(t3,"SwitchAbilitiesAttr");let S1=t3;const R3=class R3 extends tA{apply(E,R,I,N){return super.apply(E,R,I,N)?(s.queueMessage(D.t("moveTriggers:suppressAbilities",{pokemonName:Z(R)})),R.suppressAbility(),s.arena.triggerWeatherBasedFormChangesToNormal(),!0):!1}getCondition(){return(E,R,I)=>R.getAbility().isSuppressable&&!R.summonData.abilitySuppressed}};r(R3,"SuppressAbilitiesAttr");let ND=R3;const O3=class O3 extends tA{apply(E,R,I,N){if(!super.apply(E,R,I,N))return!1;if(R.turnData.acted){const S=new ND;S.getCondition()(E,R,I)&&S.apply(E,R,I,N)}return!0}};r(O3,"SuppressAbilitiesIfActedAttr");let T1=O3;const I3=class I3 extends tA{apply(E,R,I,N){return super.apply(E,R,I,N)?(s.unshiftPhase(new BC(E.getBattlerIndex(),R.getBattlerIndex())),s.queueMessage(D.t("moveTriggers:transformedIntoTarget",{pokemonName:Z(E),targetName:Z(R)})),!0):!1}};r(I3,"TransformAttr");let n1=I3;const L3=class L3 extends tA{constructor(E){super(),this.stat=E}apply(E,R,I,N){if(super.apply(E,R,I,N)){const S=E.getStat(this.stat,!1);return E.setStat(this.stat,R.getStat(this.stat,!1),!1),R.setStat(this.stat,S,!1),s.queueMessage(D.t("moveTriggers:switchedStat",{pokemonName:Z(E),stat:D.t(et(this.stat))})),!0}return!1}};r(L3,"SwapStatAttr");let a1=L3;const N3=class N3 extends tA{constructor(E,R){super(),this.statToSwitch=E,this.statToSwitchWith=R}apply(E,R,I,N){if(!super.apply(E,R,I,N))return!1;const S=E.getStat(this.statToSwitch,!1),T=E.getStat(this.statToSwitchWith,!1);return E.setStat(this.statToSwitch,T,!1),E.setStat(this.statToSwitchWith,S,!1),s.queueMessage(D.t("moveTriggers:shiftedStats",{pokemonName:Z(E),statToSwitch:D.t(et(this.statToSwitch)),statToSwitchWith:D.t(et(this.statToSwitchWith))})),!0}getUserBenefitScore(E,R,I){return E.getStat(this.statToSwitchWith,!1)>E.getStat(this.statToSwitch,!1)?10:0}};r(N3,"ShiftStatAttr");let r1=N3;const s3=class s3 extends tA{constructor(E,R){super(),this.stats=E,this.msgKey=R}apply(E,R,I,N){if(super.apply(E,R,I,N)){for(const S of this.stats){const T=Math.floor((E.getStat(S,!1)+R.getStat(S,!1))/2);E.setStat(S,T,!1),R.setStat(S,T,!1)}return s.queueMessage(D.t(this.msgKey,{pokemonName:Z(E)})),!0}return!1}};r(s3,"AverageStatsAttr");let sD=s3;const S3=class S3 extends tA{constructor(){super(!0,{firstHitOnly:!0})}apply(E,R,I){return s.currentBattle.moneyScattered+=s.getWaveMoneyAmount(.2),s.queueMessage(D.t("moveTriggers:coinsScatteredEverywhere")),!0}};r(S3,"MoneyAttr");let SD=S3;const T3=class T3 extends tA{constructor(){super(!0,{trigger:YR.PRE_APPLY})}apply(E,R,I,N){return s.queueMessage(`${D.t("moveTriggers:tryingToTakeFoeDown",{pokemonName:Z(E)})}`),E.addTag(Y.DESTINY_BOND,void 0,I.id,E.id),!0}};r(T3,"DestinyBondAttr");let i1=T3;const n3=class n3 extends TA{constructor(E){super(E,!1,!1,2,5)}apply(E,R,I,N){return R.turnData.statStagesIncreased&&super.apply(E,R,I,N),!0}};r(n3,"AddBattlerTagIfBoostedAttr");let o1=n3;const a3=class a3 extends tA{constructor(E){super(!0),this.effect=E}apply(E,R,I,N){return R.turnData.statStagesIncreased&&R.trySetStatus(this.effect,!0,E),!0}};r(a3,"StatusIfBoostedAttr");let C1=a3;const r3=class r3 extends wA{getCondition(){return(E,R,I)=>{const N=new Set(E.getMoveset().map(T=>T.moveId));if(!N.delete(I.id)||!N.size)return!1;const S=new Set(E.getMoveHistory().filter(T=>!T.virtual).map(T=>T.move));return[...N].every(T=>S.has(T))}}};r(r3,"LastResortAttr");let l1=r3;const i3=class i3 extends wA{constructor(E){super(),this.targetChangeFunc=E}apply(E,R,I,N){const S=N[0];return S.value=this.targetChangeFunc(E,R,I),!0}};r(i3,"VariableTargetAttr");let xS=i3;const o3=class o3 extends tA{apply(E,R,I,N){s.queueMessage(D.t("moveTriggers:afterYou",{targetName:Z(R)}));const S=s.findPhase(T=>T.pokemon===R);return S&&s.tryRemovePhase(T=>T.pokemon===R)&&s.prependToPhase(new lE(R,[...S.targets],S.move),lE),!0}};r(o3,"AfterYouAttr");let U1=o3;const C3=class C3 extends tA{apply(E,R,I,N){s.queueMessage(D.t("moveTriggers:forceLast",{targetPokemonName:Z(R)}));const S=s.findPhase(T=>T.pokemon===R);if(S&&!S.isForcedLast()&&s.tryRemovePhase(T=>T.pokemon===R)){const T=s.findPhase(i=>[lE,qR].every(o=>!(i instanceof o))||i instanceof lE&&iX(i,R,!!s.arena.getTag(oe.TRICK_ROOM)));T&&s.phaseQueue.splice(s.phaseQueue.indexOf(T),0,new lE(R,[...S.targets],S.move,!1,!1,!1,!0))}return!0}};r(C3,"ForceLastAttr");let D1=C3;const iX=r((t,E,R)=>{let I;return t.pokemon.getEffectiveStat(h.SPD)===E.getEffectiveStat(h.SPD)?I=!!E.randBattleSeedInt(2):I=R?t.pokemon.getEffectiveStat(h.SPD)>E.getEffectiveStat(h.SPD):t.pokemon.getEffectiveStat(h.SPD)<E.getEffectiveStat(h.SPD),t.isForcedLast()&&I},"phaseForcedSlower"),OL=r((t,E,R)=>!s.arena.getTag(oe.GRAVITY),"failOnGravityCondition"),SP=r((t,E,R)=>!E.isBossImmune(),"failOnBossCondition"),hs=r((t,E,R)=>s.currentBattle.double,"failIfSingleBattle"),fi=r((t,E,R)=>{const I=new SA(!1);return s.getField(!0).map(N=>sA(er,N,I)),I.value&&s.queueMessage(D.t("moveTriggers:cannotUseMove",{pokemonName:Z(t),moveName:R.name})),!I.value},"failIfDampCondition"),Nv=r((t,E,R)=>{var I;return((I=t.status)==null?void 0:I.effect)===J.SLEEP||t.hasAbility(O.COMATOSE)},"userSleptOrComatoseCondition"),TP=r((t,E,R)=>{var I;return((I=E.status)==null?void 0:I.effect)===J.SLEEP||E.hasAbility(O.COMATOSE)},"targetSleptOrComatoseCondition"),BR=r((t,E,R)=>s.phaseQueue.find(I=>I instanceof lE)!==void 0,"failIfLastCondition"),di=r((t,E,R)=>(t.isPlayer()?s.getPlayerParty():s.getEnemyParty()).some(N=>N.isActive()&&!N.isOnField()),"failIfLastInPartyCondition"),Ki=r((t,E,R)=>!E.isOfType(L.GHOST),"failIfGhostTypeCondition"),oX=r((t,E,R)=>{var I;return((I=E.getHeldItems().filter(N=>N.isTransferable))==null?void 0:I.length)>0},"failIfNoTargetHeldItemsCondition"),CX=r((t,E,R)=>{var T,i;const I=E.getHeldItems().filter(o=>o.isTransferable);if(I.length===0)return"";const N=((i=(T=I[0])==null?void 0:T.type)==null?void 0:i.name)??"item";return D.t("moveTriggers:attackedByItem",{pokemonName:Z(E),itemName:N})},"attackedByItemMessageFunc");function M6(t,E,R,I,N){I.attrs.filter(S=>t(S)).forEach(S=>S.apply(E,R,I,N))}r(M6,"applyMoveAttrsInternal");function lX(t,E,R,I,N){I.chargeAttrs.filter(S=>t(S)).forEach(S=>S.apply(E,R,I,N))}r(lX,"applyMoveChargeAttrsInternal");function LE(t,E,R,I,...N){M6(S=>S instanceof t,E,R,I,N)}r(LE,"applyMoveAttrs");function UX(t,E,R,I,...N){M6(t,E,R,I,N)}r(UX,"applyFilteredMoveAttrs");function sv(t,E,R,I,...N){lX(S=>S instanceof t,E,R,I,N)}r(sv,"applyMoveChargeAttrs");const l3=class l3{constructor(E){this.func=E}apply(E,R,I){return this.func(E,R,I)}getUserBenefitScore(E,R,I){return 0}};r(l3,"MoveCondition");let YN=l3;const U3=class U3 extends YN{constructor(){super((E,R,I)=>E.tempSummonData.waveTurnCount===1)}getUserBenefitScore(E,R,I){return this.apply(E,R,I)?10:-20}};r(U3,"FirstMoveCondition");let Rn=U3;const D3=class D3 extends YN{constructor(){super((E,R,I)=>{var S;const N=s.currentBattle.turnCommands[R.getBattlerIndex()];return!!N&&N.command===GE.FIGHT&&!R.turnData.acted&&!!((S=N.move)!=null&&S.move)&&Ke[N.move.move].category!==u.STATUS&&Ke[N.move.move].getPriority(R)>0})}};r(D3,"UpperHandCondition");let M1=D3;const M3=class M3 extends Is{apply(E,R,I,N){const S=N[0];return E.getTypes().some(T=>R.getTypes().includes(T))?!1:(S.value=0,!0)}};r(M3,"hitsSameTypeAttr");let P1=M3;const P3=class P3 extends tA{constructor(){super(!0)}apply(E,R,I,N){if(!super.apply(E,R,I,N))return!1;const[S]=R.getLastXMoves(1);if(!S)return!1;const T=Ke[S.move];if(T.type===L.STELLAR||T.type===L.UNKNOWN)return!1;const i=E.getTypes(),o=this.getTypeResistances(s.gameMode,T.type).filter(U=>!i.includes(U));if(!o.length)return!1;const C=o[E.randBattleSeedInt(o.length)];return E.summonData.types=[C],s.queueMessage(D.t("battle:transformedIntoType",{pokemonName:Z(E),type:mN(L[C])})),E.updateInfo(),!0}getTypeResistances(E,R){const I=[];for(let N=0;N<Object.keys(L).length;N++){const S=new me(1);S.value=iP(R,N),JR(PO.TYPE_EFFECTIVENESS,S),S.value<1&&I.push(N)}return I}getCondition(){return(E,R,I)=>R.getLastXMoves().length!==0}};r(P3,"ResistLastMoveTypeAttr");let G1=P3;const G3=class G3 extends TA{constructor(E){super(E,!1,!0)}apply(E,R,I,N){return super.apply(E,R,I,N)?(s.queueMessage(D.t("moveTriggers:exposedMove",{pokemonName:Z(E),targetPokemonName:Z(R)})),!0):!1}};r(G3,"ExposedMoveAttr");let On=G3;const DX=r((t,E,R)=>!t.getTypes().includes(L.UNKNOWN),"unknownTypeCondition");function JI(t,E,R){const I=new me(0);t.getOpponents(!1).forEach(C=>LE(xS,t,C,Ke[E],I));let N;Ke[E].hasAttr(xS)?N=I.value:R!==void 0?N=R:E?N=Ke[E].moveTarget:E===void 0&&(N=ee.NEAR_ENEMY);const S=t.getOpponents(!1);let T=[],i=!1;const o=t.getAlly();switch(N){case ee.USER:case ee.PARTY:T=[t];break;case ee.NEAR_OTHER:case ee.OTHER:case ee.ALL_NEAR_OTHERS:case ee.ALL_OTHERS:T=Ne(o)?S:S.concat([o]),i=N===ee.ALL_NEAR_OTHERS||N===ee.ALL_OTHERS;break;case ee.NEAR_ENEMY:case ee.ALL_NEAR_ENEMIES:case ee.ALL_ENEMIES:case ee.ENEMY_SIDE:T=S,i=N!==ee.NEAR_ENEMY;break;case ee.RANDOM_NEAR_ENEMY:T=[S[t.randBattleSeedInt(S.length)]];break;case ee.ATTACKER:return{targets:[-1],multiple:!1};case ee.NEAR_ALLY:case ee.ALLY:T=Ne(o)?[]:[o];break;case ee.USER_OR_NEAR_ALLY:case ee.USER_AND_ALLIES:case ee.USER_SIDE:T=Ne(o)?[t]:[t,o],i=N!==ee.USER_OR_NEAR_ALLY;break;case ee.ALL:case ee.BOTH_SIDES:T=(Ne(o)?[t]:[t,o]).concat(S),i=!0;break;case ee.CURSE:const C=Ne(o)?[]:[o];T=t.getTypes(!0).includes(L.GHOST)?S.concat(C):[t];break}return{targets:T.filter(C=>C==null?void 0:C.isActive(!0)).map(C=>C.getBattlerIndex()).filter(C=>C!==void 0),multiple:i}}r(JI,"getMoveTargets");const Ke=[new we(A.NONE,L.NORMAL,u.STATUS,-1,-1,0,1)],MX=[];function PX(){Ke.push(new B(A.POUND,L.NORMAL,u.PHYSICAL,40,100,35,-1,0,1),new B(A.KARATE_CHOP,L.FIGHTING,u.PHYSICAL,50,100,25,-1,0,1).attr(hE),new B(A.DOUBLE_SLAP,L.NORMAL,u.PHYSICAL,15,85,10,-1,0,1).attr(vA),new B(A.COMET_PUNCH,L.NORMAL,u.PHYSICAL,18,85,15,-1,0,1).attr(vA).punchingMove(),new B(A.MEGA_PUNCH,L.NORMAL,u.PHYSICAL,80,85,20,-1,0,1).punchingMove(),new B(A.PAY_DAY,L.NORMAL,u.PHYSICAL,40,100,20,-1,0,1).attr(SD).makesContact(!1),new B(A.FIRE_PUNCH,L.FIRE,u.PHYSICAL,75,100,15,10,0,1).attr(Ve,J.BURN).punchingMove(),new B(A.ICE_PUNCH,L.ICE,u.PHYSICAL,75,100,15,10,0,1).attr(Ve,J.FREEZE).punchingMove(),new B(A.THUNDER_PUNCH,L.ELECTRIC,u.PHYSICAL,75,100,15,10,0,1).attr(Ve,J.PARALYSIS).punchingMove(),new B(A.SCRATCH,L.NORMAL,u.PHYSICAL,40,100,35,-1,0,1),new B(A.VISE_GRIP,L.NORMAL,u.PHYSICAL,55,100,30,-1,0,1),new B(A.GUILLOTINE,L.NORMAL,u.PHYSICAL,200,30,5,-1,0,1).attr(kO).attr(YL),new pt(A.RAZOR_WIND,L.NORMAL,u.SPECIAL,80,100,10,-1,0,1).chargeText(D.t("moveTriggers:whippedUpAWhirlwind",{pokemonName:"{USER}"})).attr(hE).windMove().target(ee.ALL_NEAR_ENEMIES),new we(A.SWORDS_DANCE,L.NORMAL,-1,20,-1,0,1).attr(Le,[h.ATK],2,!0).danceMove(),new B(A.CUT,L.NORMAL,u.PHYSICAL,50,95,30,-1,0,1).slicingMove(),new B(A.GUST,L.FLYING,u.SPECIAL,40,100,35,-1,0,1).attr(iR,Y.FLYING).windMove(),new B(A.WING_ATTACK,L.FLYING,u.PHYSICAL,60,100,35,-1,0,1),new ne(A.WHIRLWIND,L.NORMAL,-1,20,-1,-6,1).attr(oR,!1,ZA.FORCE_SWITCH).ignoresSubstitute().hidesTarget().windMove().reflectable(),new pt(A.FLY,L.FLYING,u.PHYSICAL,90,95,15,-1,0,1).chargeText(D.t("moveTriggers:flewUpHigh",{pokemonName:"{USER}"})).chargeAttr(YI,Y.FLYING).condition(OL),new B(A.BIND,L.NORMAL,u.PHYSICAL,15,85,20,-1,0,1).attr(UO,Y.BIND),new B(A.SLAM,L.NORMAL,u.PHYSICAL,80,75,20,-1,0,1),new B(A.VINE_WHIP,L.GRASS,u.PHYSICAL,45,100,25,-1,0,1),new B(A.STOMP,L.NORMAL,u.PHYSICAL,65,100,20,30,0,1).attr(dO).attr(iR,Y.MINIMIZED).attr(VA),new B(A.DOUBLE_KICK,L.FIGHTING,u.PHYSICAL,30,100,30,-1,0,1).attr(vA,_E._2),new B(A.MEGA_KICK,L.NORMAL,u.PHYSICAL,120,75,5,-1,0,1),new B(A.JUMP_KICK,L.FIGHTING,u.PHYSICAL,100,95,10,-1,0,1).attr(gO,RL).attr(pO,RL).condition(OL).recklessMove(),new B(A.ROLLING_KICK,L.FIGHTING,u.PHYSICAL,60,85,15,30,0,1).attr(VA),new ne(A.SAND_ATTACK,L.GROUND,100,15,-1,0,1).attr(Le,[h.ACC],-1).reflectable(),new B(A.HEADBUTT,L.NORMAL,u.PHYSICAL,70,100,15,30,0,1).attr(VA),new B(A.HORN_ATTACK,L.NORMAL,u.PHYSICAL,65,100,25,-1,0,1),new B(A.FURY_ATTACK,L.NORMAL,u.PHYSICAL,15,85,20,-1,0,1).attr(vA),new B(A.HORN_DRILL,L.NORMAL,u.PHYSICAL,200,30,5,-1,0,1).attr(kO).attr(YL),new B(A.TACKLE,L.NORMAL,u.PHYSICAL,40,100,35,-1,0,1),new B(A.BODY_SLAM,L.NORMAL,u.PHYSICAL,85,100,15,30,0,1).attr(dO).attr(iR,Y.MINIMIZED).attr(Ve,J.PARALYSIS),new B(A.WRAP,L.NORMAL,u.PHYSICAL,15,90,20,-1,0,1).attr(UO,Y.WRAP),new B(A.TAKE_DOWN,L.NORMAL,u.PHYSICAL,90,85,20,-1,0,1).attr(rR).recklessMove(),new B(A.THRASH,L.NORMAL,u.PHYSICAL,120,100,10,-1,0,1).attr(bs).attr(gO,hI).attr(pO,hI).target(ee.RANDOM_NEAR_ENEMY),new B(A.DOUBLE_EDGE,L.NORMAL,u.PHYSICAL,120,100,15,-1,0,1).attr(rR,!1,.33).recklessMove(),new ne(A.TAIL_WHIP,L.NORMAL,100,30,-1,0,1).attr(Le,[h.DEF],-1).target(ee.ALL_NEAR_ENEMIES).reflectable(),new B(A.POISON_STING,L.POISON,u.PHYSICAL,15,100,35,30,0,1).attr(Ve,J.POISON).makesContact(!1),new B(A.TWINEEDLE,L.BUG,u.PHYSICAL,25,100,20,20,0,1).attr(vA,_E._2).attr(Ve,J.POISON).makesContact(!1),new B(A.PIN_MISSILE,L.BUG,u.PHYSICAL,25,95,20,-1,0,1).attr(vA).makesContact(!1),new ne(A.LEER,L.NORMAL,100,30,-1,0,1).attr(Le,[h.DEF],-1).target(ee.ALL_NEAR_ENEMIES).reflectable(),new B(A.BITE,L.DARK,u.PHYSICAL,60,100,25,30,0,1).attr(VA).bitingMove(),new ne(A.GROWL,L.NORMAL,100,40,-1,0,1).attr(Le,[h.ATK],-1).soundBased().target(ee.ALL_NEAR_ENEMIES).reflectable(),new ne(A.ROAR,L.NORMAL,-1,20,-1,-6,1).attr(oR,!1,ZA.FORCE_SWITCH).soundBased().hidesTarget().reflectable(),new ne(A.SING,L.NORMAL,55,15,-1,0,1).attr(Ve,J.SLEEP).soundBased().reflectable(),new ne(A.SUPERSONIC,L.NORMAL,55,20,-1,0,1).attr(rt).soundBased().reflectable(),new B(A.SONIC_BOOM,L.NORMAL,u.SPECIAL,-1,90,20,-1,0,1).attr(oO,20),new ne(A.DISABLE,L.NORMAL,100,20,-1,0,1).attr(TA,Y.DISABLED,!1,!0).condition((t,E,R)=>{const I=E.getLastXMoves(-1).find(N=>!N.virtual);return!Ne(I)&&I.move!==A.NONE&&I.move!==A.STRUGGLE}).ignoresSubstitute().reflectable(),new B(A.ACID,L.POISON,u.SPECIAL,40,100,30,10,0,1).attr(Le,[h.SPDEF],-1).target(ee.ALL_NEAR_ENEMIES),new B(A.EMBER,L.FIRE,u.SPECIAL,40,100,25,10,0,1).attr(Ve,J.BURN),new B(A.FLAMETHROWER,L.FIRE,u.SPECIAL,90,100,15,10,0,1).attr(Ve,J.BURN),new ne(A.MIST,L.ICE,-1,30,-1,0,1).attr(dE,oe.MIST,5,!0).target(ee.USER_SIDE),new B(A.WATER_GUN,L.WATER,u.SPECIAL,40,100,25,-1,0,1),new B(A.HYDRO_PUMP,L.WATER,u.SPECIAL,110,80,5,-1,0,1),new B(A.SURF,L.WATER,u.SPECIAL,90,100,15,-1,0,1).target(ee.ALL_NEAR_OTHERS).attr(iR,Y.UNDERWATER).attr($U),new B(A.ICE_BEAM,L.ICE,u.SPECIAL,90,100,10,10,0,1).attr(Ve,J.FREEZE),new B(A.BLIZZARD,L.ICE,u.SPECIAL,110,70,5,10,0,1).attr(dH).attr(Ve,J.FREEZE).windMove().target(ee.ALL_NEAR_ENEMIES),new B(A.PSYBEAM,L.PSYCHIC,u.SPECIAL,65,100,20,10,0,1).attr(rt),new B(A.BUBBLE_BEAM,L.WATER,u.SPECIAL,65,100,20,10,0,1).attr(Le,[h.SPD],-1),new B(A.AURORA_BEAM,L.ICE,u.SPECIAL,65,100,20,10,0,1).attr(Le,[h.ATK],-1),new B(A.HYPER_BEAM,L.NORMAL,u.SPECIAL,150,90,5,-1,0,1).attr(kR),new B(A.PECK,L.FLYING,u.PHYSICAL,35,100,35,-1,0,1),new B(A.DRILL_PECK,L.FLYING,u.PHYSICAL,80,100,20,-1,0,1),new B(A.SUBMISSION,L.FIGHTING,u.PHYSICAL,80,80,20,-1,0,1).attr(rR).recklessMove(),new B(A.LOW_KICK,L.FIGHTING,u.PHYSICAL,-1,100,20,-1,0,1).attr(hU),new B(A.COUNTER,L.FIGHTING,u.PHYSICAL,-1,100,20,-1,-5,1).attr(PN,t=>t.category===u.PHYSICAL,2).target(ee.ATTACKER),new B(A.SEISMIC_TOSS,L.FIGHTING,u.PHYSICAL,-1,100,20,-1,0,1).attr(NU),new B(A.STRENGTH,L.NORMAL,u.PHYSICAL,80,100,15,-1,0,1),new B(A.ABSORB,L.GRASS,u.SPECIAL,20,100,25,-1,0,1).attr(AR).triageMove(),new B(A.MEGA_DRAIN,L.GRASS,u.SPECIAL,40,100,15,-1,0,1).attr(AR).triageMove(),new ne(A.LEECH_SEED,L.GRASS,90,10,-1,0,1).attr(QU).condition((t,E,R)=>!E.getTag(Y.SEEDED)&&!E.isOfType(L.GRASS)).reflectable(),new we(A.GROWTH,L.NORMAL,-1,20,-1,0,1).attr(sH),new B(A.RAZOR_LEAF,L.GRASS,u.PHYSICAL,55,95,25,-1,0,1).attr(hE).makesContact(!1).slicingMove().target(ee.ALL_NEAR_ENEMIES),new pt(A.SOLAR_BEAM,L.GRASS,u.SPECIAL,120,100,10,-1,0,1).chargeText(D.t("moveTriggers:tookInSunlight",{pokemonName:"{USER}"})).chargeAttr(XT,[X.SUNNY,X.HARSH_SUN]).attr(YU),new ne(A.POISON_POWDER,L.POISON,75,35,-1,0,1).attr(Ve,J.POISON).powderMove().reflectable(),new ne(A.STUN_SPORE,L.GRASS,75,30,-1,0,1).attr(Ve,J.PARALYSIS).powderMove().reflectable(),new ne(A.SLEEP_POWDER,L.GRASS,75,15,-1,0,1).attr(Ve,J.SLEEP).powderMove().reflectable(),new B(A.PETAL_DANCE,L.GRASS,u.SPECIAL,120,100,10,-1,0,1).attr(bs).attr(gO,hI).attr(pO,hI).makesContact().danceMove().target(ee.RANDOM_NEAR_ENEMY),new ne(A.STRING_SHOT,L.BUG,95,40,-1,0,1).attr(Le,[h.SPD],-2).target(ee.ALL_NEAR_ENEMIES).reflectable(),new B(A.DRAGON_RAGE,L.DRAGON,u.SPECIAL,-1,100,10,-1,0,1).attr(oO,40),new B(A.FIRE_SPIN,L.FIRE,u.SPECIAL,35,85,15,-1,0,1).attr(UO,Y.FIRE_SPIN),new B(A.THUNDER_SHOCK,L.ELECTRIC,u.SPECIAL,40,100,30,10,0,1).attr(Ve,J.PARALYSIS),new B(A.THUNDERBOLT,L.ELECTRIC,u.SPECIAL,90,100,15,10,0,1).attr(Ve,J.PARALYSIS),new ne(A.THUNDER_WAVE,L.ELECTRIC,90,20,-1,0,1).attr(Ve,J.PARALYSIS).attr(LU).reflectable(),new B(A.THUNDER,L.ELECTRIC,u.SPECIAL,110,70,10,30,0,1).attr(Ve,J.PARALYSIS).attr(wU).attr(XR,Y.FLYING),new B(A.ROCK_THROW,L.ROCK,u.PHYSICAL,50,90,15,-1,0,1).makesContact(!1),new B(A.EARTHQUAKE,L.GROUND,u.PHYSICAL,100,100,10,-1,0,1).attr(iR,Y.UNDERGROUND).attr(jA,(t,E,R)=>s.arena.getTerrainType()===$e.GRASSY&&E.isGrounded()?.5:1).makesContact(!1).target(ee.ALL_NEAR_OTHERS),new B(A.FISSURE,L.GROUND,u.PHYSICAL,200,30,5,-1,0,1).attr(kO).attr(YL).attr(XR,Y.UNDERGROUND).makesContact(!1),new pt(A.DIG,L.GROUND,u.PHYSICAL,80,100,10,-1,0,1).chargeText(D.t("moveTriggers:dugAHole",{pokemonName:"{USER}"})).chargeAttr(YI,Y.UNDERGROUND),new ne(A.TOXIC,L.POISON,90,10,-1,0,1).attr(Ve,J.TOXIC).attr(VU).reflectable(),new B(A.CONFUSION,L.PSYCHIC,u.SPECIAL,50,100,25,10,0,1).attr(rt),new B(A.PSYCHIC,L.PSYCHIC,u.SPECIAL,90,100,10,10,0,1).attr(Le,[h.SPDEF],-1),new ne(A.HYPNOSIS,L.PSYCHIC,60,20,-1,0,1).attr(Ve,J.SLEEP).reflectable(),new we(A.MEDITATE,L.PSYCHIC,-1,40,-1,0,1).attr(Le,[h.ATK],1,!0),new we(A.AGILITY,L.PSYCHIC,-1,30,-1,0,1).attr(Le,[h.SPD],2,!0),new B(A.QUICK_ATTACK,L.NORMAL,u.PHYSICAL,40,100,30,-1,1,1),new B(A.RAGE,L.NORMAL,u.PHYSICAL,20,100,20,-1,0,1).partial(),new we(A.TELEPORT,L.PSYCHIC,-1,20,-1,-6,1).attr(oR,!0).hidesUser(),new B(A.NIGHT_SHADE,L.GHOST,u.SPECIAL,-1,100,15,-1,0,1).attr(NU),new ne(A.MIMIC,L.NORMAL,-1,10,-1,0,1).attr(L1).ignoresSubstitute(),new ne(A.SCREECH,L.NORMAL,85,40,-1,0,1).attr(Le,[h.DEF],-2).soundBased().reflectable(),new we(A.DOUBLE_TEAM,L.NORMAL,-1,15,-1,0,1).attr(Le,[h.EVA],1,!0),new we(A.RECOVER,L.NORMAL,-1,5,-1,0,1).attr(Vt,.5).triageMove(),new we(A.HARDEN,L.NORMAL,-1,30,-1,0,1).attr(Le,[h.DEF],1,!0),new we(A.MINIMIZE,L.NORMAL,-1,10,-1,0,1).attr(TA,Y.MINIMIZED,!0,!1).attr(Le,[h.EVA],2,!0),new ne(A.SMOKESCREEN,L.NORMAL,100,20,-1,0,1).attr(Le,[h.ACC],-1).reflectable(),new ne(A.CONFUSE_RAY,L.GHOST,100,10,-1,0,1).attr(rt).reflectable(),new we(A.WITHDRAW,L.WATER,-1,40,-1,0,1).attr(Le,[h.DEF],1,!0),new we(A.DEFENSE_CURL,L.NORMAL,-1,40,-1,0,1).attr(Le,[h.DEF],1,!0),new we(A.BARRIER,L.PSYCHIC,-1,20,-1,0,1).attr(Le,[h.DEF],2,!0),new ne(A.LIGHT_SCREEN,L.PSYCHIC,-1,30,-1,0,1).attr(dE,oe.LIGHT_SCREEN,5,!0).target(ee.USER_SIDE),new we(A.HAZE,L.ICE,-1,30,-1,0,1).ignoresSubstitute().attr($T,!0),new ne(A.REFLECT,L.PSYCHIC,-1,20,-1,0,1).attr(dE,oe.REFLECT,5,!0).target(ee.USER_SIDE),new we(A.FOCUS_ENERGY,L.NORMAL,-1,30,-1,0,1).attr(TA,Y.CRIT_BOOST,!0,!0),new B(A.BIDE,L.NORMAL,u.PHYSICAL,-1,-1,10,-1,1,1).target(ee.USER).unimplemented(),new we(A.METRONOME,L.NORMAL,-1,10,-1,0,1).attr(tD,W9),new ne(A.MIRROR_MOVE,L.FLYING,-1,20,-1,0,1).attr(vS,!0,y9),new B(A.SELF_DESTRUCT,L.NORMAL,u.PHYSICAL,200,100,5,-1,0,1).attr(vI).makesContact(!1).condition(fi).target(ee.ALL_NEAR_OTHERS),new B(A.EGG_BOMB,L.NORMAL,u.PHYSICAL,100,75,10,-1,0,1).makesContact(!1).ballBombMove(),new B(A.LICK,L.GHOST,u.PHYSICAL,30,100,30,30,0,1).attr(Ve,J.PARALYSIS),new B(A.SMOG,L.POISON,u.SPECIAL,30,70,20,40,0,1).attr(Ve,J.POISON),new B(A.SLUDGE,L.POISON,u.SPECIAL,65,100,20,30,0,1).attr(Ve,J.POISON),new B(A.BONE_CLUB,L.GROUND,u.PHYSICAL,65,85,20,10,0,1).attr(VA).makesContact(!1),new B(A.FIRE_BLAST,L.FIRE,u.SPECIAL,110,85,5,10,0,1).attr(Ve,J.BURN),new B(A.WATERFALL,L.WATER,u.PHYSICAL,80,100,15,20,0,1).attr(VA),new B(A.CLAMP,L.WATER,u.PHYSICAL,35,85,15,-1,0,1).attr(UO,Y.CLAMP),new B(A.SWIFT,L.NORMAL,u.SPECIAL,60,-1,20,-1,0,1).target(ee.ALL_NEAR_ENEMIES),new pt(A.SKULL_BASH,L.NORMAL,u.PHYSICAL,130,100,10,-1,0,1).chargeText(D.t("moveTriggers:loweredItsHead",{pokemonName:"{USER}"})).chargeAttr(Le,[h.DEF],1,!0),new B(A.SPIKE_CANNON,L.NORMAL,u.PHYSICAL,20,100,15,-1,0,1).attr(vA).makesContact(!1),new B(A.CONSTRICT,L.NORMAL,u.PHYSICAL,10,100,35,10,0,1).attr(Le,[h.SPD],-1),new we(A.AMNESIA,L.PSYCHIC,-1,20,-1,0,1).attr(Le,[h.SPDEF],2,!0),new ne(A.KINESIS,L.PSYCHIC,80,15,-1,0,1).attr(Le,[h.ACC],-1).reflectable(),new we(A.SOFT_BOILED,L.NORMAL,-1,5,-1,0,1).attr(Vt,.5).triageMove(),new B(A.HIGH_JUMP_KICK,L.FIGHTING,u.PHYSICAL,130,90,10,-1,0,1).attr(gO,RL).attr(pO,RL).condition(OL).recklessMove(),new ne(A.GLARE,L.NORMAL,100,30,-1,0,1).attr(Ve,J.PARALYSIS).reflectable(),new B(A.DREAM_EATER,L.PSYCHIC,u.SPECIAL,100,100,15,-1,0,1).attr(AR).condition(TP).triageMove(),new ne(A.POISON_GAS,L.POISON,90,40,-1,0,1).attr(Ve,J.POISON).target(ee.ALL_NEAR_ENEMIES).reflectable(),new B(A.BARRAGE,L.NORMAL,u.PHYSICAL,15,85,20,-1,0,1).attr(vA).makesContact(!1).ballBombMove(),new B(A.LEECH_LIFE,L.BUG,u.PHYSICAL,80,100,10,-1,0,1).attr(AR).triageMove(),new ne(A.LOVELY_KISS,L.NORMAL,75,10,-1,0,1).attr(Ve,J.SLEEP).reflectable(),new pt(A.SKY_ATTACK,L.FLYING,u.PHYSICAL,140,90,5,30,0,1).chargeText(D.t("moveTriggers:isGlowing",{pokemonName:"{USER}"})).attr(hE).attr(VA).makesContact(!1),new ne(A.TRANSFORM,L.NORMAL,-1,10,-1,0,1).attr(n1).condition((t,E,R)=>!E.getTag(Y.SUBSTITUTE)).condition((t,E,R)=>!E.summonData.illusion&&!t.summonData.illusion).condition((t,E,R)=>!E.getTag(Y.SUBSTITUTE)&&!t.fusionSpecies&&!E.fusionSpecies).ignoresProtect().edgeCase(),new B(A.BUBBLE,L.WATER,u.SPECIAL,40,100,30,10,0,1).attr(Le,[h.SPD],-1).target(ee.ALL_NEAR_ENEMIES),new B(A.DIZZY_PUNCH,L.NORMAL,u.PHYSICAL,70,100,10,20,0,1).attr(rt).punchingMove(),new ne(A.SPORE,L.GRASS,100,15,-1,0,1).attr(Ve,J.SLEEP).powderMove().reflectable(),new ne(A.FLASH,L.NORMAL,100,20,-1,0,1).attr(Le,[h.ACC],-1).reflectable(),new B(A.PSYWAVE,L.PSYCHIC,u.SPECIAL,-1,100,15,-1,0,1).attr(ju),new we(A.SPLASH,L.NORMAL,-1,40,-1,0,1).attr(eH).condition(OL),new we(A.ACID_ARMOR,L.POISON,-1,20,-1,0,1).attr(Le,[h.DEF],2,!0),new B(A.CRABHAMMER,L.WATER,u.PHYSICAL,100,90,10,-1,0,1).attr(hE),new B(A.EXPLOSION,L.NORMAL,u.PHYSICAL,250,100,5,-1,0,1).condition(fi).attr(vI).makesContact(!1).target(ee.ALL_NEAR_OTHERS),new B(A.FURY_SWIPES,L.NORMAL,u.PHYSICAL,18,80,15,-1,0,1).attr(vA),new B(A.BONEMERANG,L.GROUND,u.PHYSICAL,50,90,10,-1,0,1).attr(vA,_E._2).makesContact(!1),new we(A.REST,L.PSYCHIC,-1,5,-1,0,1).attr(Ve,J.SLEEP,!0,3,!0).attr(Vt,1,!0).condition((t,E,R)=>!t.isFullHp()&&t.canSetStatus(J.SLEEP,!0,!0,t)).triageMove(),new B(A.ROCK_SLIDE,L.ROCK,u.PHYSICAL,75,90,10,30,0,1).attr(VA).makesContact(!1).target(ee.ALL_NEAR_ENEMIES),new B(A.HYPER_FANG,L.NORMAL,u.PHYSICAL,80,90,15,10,0,1).attr(VA).bitingMove(),new we(A.SHARPEN,L.NORMAL,-1,30,-1,0,1).attr(Le,[h.ATK],1,!0),new we(A.CONVERSION,L.NORMAL,-1,30,-1,0,1).attr(R1),new B(A.TRI_ATTACK,L.NORMAL,u.SPECIAL,80,100,10,20,0,1).attr(UU,[J.BURN,J.FREEZE,J.PARALYSIS]),new B(A.SUPER_FANG,L.NORMAL,u.PHYSICAL,-1,90,10,-1,0,1).attr(bT),new B(A.SLASH,L.NORMAL,u.PHYSICAL,70,100,20,-1,0,1).attr(hE).slicingMove(),new we(A.SUBSTITUTE,L.NORMAL,-1,10,-1,0,1).attr(nU,.25,!1),new B(A.STRUGGLE,L.NORMAL,u.PHYSICAL,50,-1,1,-1,0,1).attr(rR,!0,.25,!0).attr(VS).target(ee.RANDOM_NEAR_ENEMY),new ne(A.SKETCH,L.NORMAL,-1,1,-1,0,2).ignoresSubstitute().attr(N1),new B(A.TRIPLE_KICK,L.FIGHTING,u.PHYSICAL,10,90,10,-1,0,2).attr(vA,_E._3).attr(mU,3).checkAllHits(),new B(A.THIEF,L.DARK,u.PHYSICAL,60,100,25,-1,0,2).attr(DU,.3).edgeCase(),new ne(A.SPIDER_WEB,L.BUG,-1,10,-1,0,2).condition(Ki).attr(TA,Y.TRAPPED,!1,!0,1).reflectable(),new ne(A.MIND_READER,L.NORMAL,-1,5,-1,0,2).attr(qU),new ne(A.NIGHTMARE,L.GHOST,100,15,-1,0,2).attr(TA,Y.NIGHTMARE).condition(TP),new B(A.FLAME_WHEEL,L.FIRE,u.PHYSICAL,60,100,25,10,0,2).attr(fE,!0,J.FREEZE).attr(Ve,J.BURN),new B(A.SNORE,L.NORMAL,u.SPECIAL,50,100,15,30,0,2).attr(cr).attr(VA).condition(Nv).soundBased(),new ne(A.CURSE,L.GHOST,-1,10,-1,0,2).attr(JH).ignoresSubstitute().ignoresProtect().target(ee.CURSE),new B(A.FLAIL,L.NORMAL,u.PHYSICAL,-1,100,15,-1,0,2).attr(fU),new ne(A.CONVERSION_2,L.NORMAL,-1,30,-1,0,2).attr(G1).ignoresSubstitute().partial(),new B(A.AEROBLAST,L.FLYING,u.SPECIAL,100,95,5,-1,0,2).windMove().attr(hE),new ne(A.COTTON_SPORE,L.GRASS,100,40,-1,0,2).attr(Le,[h.SPD],-2).powderMove().target(ee.ALL_NEAR_ENEMIES).reflectable(),new B(A.REVERSAL,L.FIGHTING,u.PHYSICAL,-1,100,15,-1,0,2).attr(fU),new ne(A.SPITE,L.GHOST,100,10,-1,0,2).ignoresSubstitute().attr(OD,4).reflectable(),new B(A.POWDER_SNOW,L.ICE,u.SPECIAL,40,100,25,10,0,2).attr(Ve,J.FREEZE).target(ee.ALL_NEAR_ENEMIES),new we(A.PROTECT,L.NORMAL,-1,10,-1,4,2).attr(IO).condition(BR),new B(A.MACH_PUNCH,L.FIGHTING,u.PHYSICAL,40,100,30,-1,1,2).punchingMove(),new ne(A.SCARY_FACE,L.NORMAL,100,10,-1,0,2).attr(Le,[h.SPD],-2).reflectable(),new B(A.FEINT_ATTACK,L.DARK,u.PHYSICAL,60,-1,20,-1,0,2),new ne(A.SWEET_KISS,L.FAIRY,75,10,-1,0,2).attr(rt).reflectable(),new we(A.BELLY_DRUM,L.NORMAL,-1,10,-1,0,2).attr(JT,[h.ATK],12,2,t=>{s.queueMessage(D.t("moveTriggers:cutOwnHpAndMaximizedStat",{pokemonName:Z(t),statName:D.t(et(h.ATK))}))}),new B(A.SLUDGE_BOMB,L.POISON,u.SPECIAL,90,100,10,30,0,2).attr(Ve,J.POISON).ballBombMove(),new B(A.MUD_SLAP,L.GROUND,u.SPECIAL,20,100,10,100,0,2).attr(Le,[h.ACC],-1),new B(A.OCTAZOOKA,L.WATER,u.SPECIAL,65,85,10,50,0,2).attr(Le,[h.ACC],-1).ballBombMove(),new ne(A.SPIKES,L.GROUND,-1,20,-1,0,2).attr(BL,oe.SPIKES).target(ee.ENEMY_SIDE).reflectable(),new B(A.ZAP_CANNON,L.ELECTRIC,u.SPECIAL,120,50,5,100,0,2).attr(Ve,J.PARALYSIS).ballBombMove(),new ne(A.FORESIGHT,L.NORMAL,-1,40,-1,0,2).attr(On,Y.IGNORE_GHOST).ignoresSubstitute().reflectable(),new we(A.DESTINY_BOND,L.GHOST,-1,5,-1,0,2).ignoresProtect().attr(i1).condition((t,E,R)=>{const I=t.getLastXMoves(1);return I.length===0||I[0].move!==R.id||I[0].result!==EE.SUCCESS}),new ne(A.PERISH_SONG,L.NORMAL,-1,5,-1,0,2).attr(qH).ignoresProtect().soundBased().condition(SP).target(ee.ALL),new B(A.ICY_WIND,L.ICE,u.SPECIAL,55,95,15,100,0,2).attr(Le,[h.SPD],-1).windMove().target(ee.ALL_NEAR_ENEMIES),new we(A.DETECT,L.FIGHTING,-1,5,-1,4,2).attr(IO).condition(BR),new B(A.BONE_RUSH,L.GROUND,u.PHYSICAL,25,90,10,-1,0,2).attr(vA).makesContact(!1),new ne(A.LOCK_ON,L.NORMAL,-1,5,-1,0,2).attr(qU),new B(A.OUTRAGE,L.DRAGON,u.PHYSICAL,120,100,10,-1,0,2).attr(bs).attr(gO,hI).attr(pO,hI).target(ee.RANDOM_NEAR_ENEMY),new ne(A.SANDSTORM,L.ROCK,-1,10,-1,0,2).attr(sN,X.SANDSTORM).target(ee.BOTH_SIDES),new B(A.GIGA_DRAIN,L.GRASS,u.SPECIAL,75,100,10,-1,0,2).attr(AR).triageMove(),new we(A.ENDURE,L.NORMAL,-1,10,-1,4,2).attr(IO,Y.ENDURING).condition(BR),new ne(A.CHARM,L.FAIRY,100,20,-1,0,2).attr(Le,[h.ATK],-2).reflectable(),new B(A.ROLLOUT,L.ROCK,u.PHYSICAL,30,90,20,-1,0,2).partial().attr(OS,5,!0,!0,A.DEFENSE_CURL),new B(A.FALSE_SWIPE,L.NORMAL,u.PHYSICAL,40,100,40,-1,0,2).attr(SU),new ne(A.SWAGGER,L.NORMAL,85,15,-1,0,2).attr(Le,[h.ATK],2).attr(rt).reflectable(),new we(A.MILK_DRINK,L.NORMAL,-1,5,-1,0,2).attr(Vt,.5).triageMove(),new B(A.SPARK,L.ELECTRIC,u.PHYSICAL,65,100,20,30,0,2).attr(Ve,J.PARALYSIS),new B(A.FURY_CUTTER,L.BUG,u.PHYSICAL,40,95,20,-1,0,2).attr(OS,3,!0).slicingMove(),new B(A.STEEL_WING,L.STEEL,u.PHYSICAL,70,90,25,10,0,2).attr(Le,[h.DEF],1,!0),new ne(A.MEAN_LOOK,L.NORMAL,-1,5,-1,0,2).condition(Ki).attr(TA,Y.TRAPPED,!1,!0,1).reflectable(),new ne(A.ATTRACT,L.NORMAL,100,15,-1,0,2).attr(TA,Y.INFATUATED).ignoresSubstitute().condition((t,E,R)=>t.isOppositeGender(E)).reflectable(),new we(A.SLEEP_TALK,L.NORMAL,-1,10,-1,0,2).attr(cr).attr(hr,g9,!1).condition(Nv).target(ee.NEAR_ENEMY),new ne(A.HEAL_BELL,L.NORMAL,-1,5,-1,0,2).attr(ZT,D.t("moveTriggers:bellChimed"),O.SOUNDPROOF).soundBased().target(ee.PARTY),new B(A.RETURN,L.NORMAL,u.PHYSICAL,-1,100,20,-1,0,2).attr(xs),new B(A.PRESENT,L.NORMAL,u.PHYSICAL,-1,90,15,-1,0,2).attr(PH).makesContact(!1),new B(A.FRUSTRATION,L.NORMAL,u.PHYSICAL,-1,100,20,-1,0,2).attr(xs,!0),new ne(A.SAFEGUARD,L.NORMAL,-1,25,-1,0,2).target(ee.USER_SIDE).attr(dE,oe.SAFEGUARD,5,!0,!0),new ne(A.PAIN_SPLIT,L.NORMAL,-1,20,-1,0,2).attr(cU).condition(SP),new B(A.SACRED_FIRE,L.FIRE,u.PHYSICAL,100,95,5,50,0,2).attr(fE,!0,J.FREEZE).attr(Ve,J.BURN).makesContact(!1),new B(A.MAGNITUDE,L.GROUND,u.PHYSICAL,-1,100,30,-1,0,2).attr(MN,rX).attr(UH).attr(jA,(t,E,R)=>s.arena.getTerrainType()===$e.GRASSY&&E.isGrounded()?.5:1).attr(iR,Y.UNDERGROUND).makesContact(!1).target(ee.ALL_NEAR_OTHERS),new B(A.DYNAMIC_PUNCH,L.FIGHTING,u.PHYSICAL,100,50,5,100,0,2).attr(rt).punchingMove(),new B(A.MEGAHORN,L.BUG,u.PHYSICAL,120,85,10,-1,0,2),new B(A.DRAGON_BREATH,L.DRAGON,u.SPECIAL,60,100,20,30,0,2).attr(Ve,J.PARALYSIS),new we(A.BATON_PASS,L.NORMAL,-1,40,-1,0,2).attr(oR,!0,ZA.BATON_PASS).condition(di).hidesUser(),new ne(A.ENCORE,L.NORMAL,100,5,-1,0,2).attr(TA,Y.ENCORE,!1,!0).ignoresSubstitute().condition((t,E,R)=>new ir(t.id).canAdd(E)).reflectable(),new B(A.PURSUIT,L.DARK,u.PHYSICAL,40,100,20,-1,0,2).partial(),new B(A.RAPID_SPIN,L.NORMAL,u.PHYSICAL,50,100,40,100,0,2).attr(Le,[h.SPD],1,!0).attr(WI,[Y.BIND,Y.WRAP,Y.FIRE_SPIN,Y.WHIRLPOOL,Y.CLAMP,Y.SAND_TOMB,Y.MAGMA_STORM,Y.SNAP_TRAP,Y.THUNDER_CAGE,Y.SEEDED,Y.INFESTATION],!0).attr(Zs),new ne(A.SWEET_SCENT,L.NORMAL,100,20,-1,0,2).attr(Le,[h.EVA],-2).target(ee.ALL_NEAR_ENEMIES).reflectable(),new B(A.IRON_TAIL,L.STEEL,u.PHYSICAL,100,75,15,30,0,2).attr(Le,[h.DEF],-1),new B(A.METAL_CLAW,L.STEEL,u.PHYSICAL,50,95,35,10,0,2).attr(Le,[h.ATK],1,!0),new B(A.VITAL_THROW,L.FIGHTING,u.PHYSICAL,70,-1,10,-1,-1,2),new we(A.MORNING_SUN,L.NORMAL,-1,5,-1,0,2).attr(kT).triageMove(),new we(A.SYNTHESIS,L.GRASS,-1,5,-1,0,2).attr(kT).triageMove(),new we(A.MOONLIGHT,L.FAIRY,-1,5,-1,0,2).attr(kT).triageMove(),new B(A.HIDDEN_POWER,L.NORMAL,u.SPECIAL,60,100,15,-1,0,2).attr(wH),new B(A.CROSS_CHOP,L.FIGHTING,u.PHYSICAL,100,80,5,-1,0,2).attr(hE),new B(A.TWISTER,L.DRAGON,u.SPECIAL,40,100,20,20,0,2).attr(iR,Y.FLYING).attr(VA).windMove().target(ee.ALL_NEAR_ENEMIES),new ne(A.RAIN_DANCE,L.WATER,-1,5,-1,0,2).attr(sN,X.RAIN).target(ee.BOTH_SIDES),new ne(A.SUNNY_DAY,L.FIRE,-1,5,-1,0,2).attr(sN,X.SUNNY).target(ee.BOTH_SIDES),new B(A.CRUNCH,L.DARK,u.PHYSICAL,80,100,15,20,0,2).attr(Le,[h.DEF],-1).bitingMove(),new B(A.MIRROR_COAT,L.PSYCHIC,u.SPECIAL,-1,100,20,-1,-5,2).attr(PN,t=>t.category===u.SPECIAL,2).target(ee.ATTACKER),new ne(A.PSYCH_UP,L.NORMAL,-1,10,-1,0,2).ignoresSubstitute().attr(TH),new B(A.EXTREME_SPEED,L.NORMAL,u.PHYSICAL,80,100,5,-1,2,2),new B(A.ANCIENT_POWER,L.ROCK,u.SPECIAL,60,100,5,10,0,2).attr(Le,[h.ATK,h.DEF,h.SPATK,h.SPDEF,h.SPD],1,!0),new B(A.SHADOW_BALL,L.GHOST,u.SPECIAL,80,100,15,20,0,2).attr(Le,[h.SPDEF],-1).ballBombMove(),new B(A.FUTURE_SIGHT,L.PSYCHIC,u.SPECIAL,120,100,10,-1,0,2).partial().ignoresProtect().attr(HI,oe.FUTURE_SIGHT,XI.FUTURE_SIGHT_CHARGING,D.t("moveTriggers:foresawAnAttack",{pokemonName:"{USER}"})),new B(A.ROCK_SMASH,L.FIGHTING,u.PHYSICAL,40,100,15,50,0,2).attr(Le,[h.DEF],-1),new B(A.WHIRLPOOL,L.WATER,u.SPECIAL,35,85,15,-1,0,2).attr(UO,Y.WHIRLPOOL).attr(iR,Y.UNDERWATER),new B(A.BEAT_UP,L.DARK,u.PHYSICAL,-1,100,10,-1,0,2).attr(vA,_E.BEAT_UP).attr(rH).makesContact(!1),new B(A.FAKE_OUT,L.NORMAL,u.PHYSICAL,40,100,10,100,3,3).attr(VA).condition(new Rn),new B(A.UPROAR,L.NORMAL,u.SPECIAL,90,100,10,-1,0,3).soundBased().target(ee.RANDOM_NEAR_ENEMY).partial(),new we(A.STOCKPILE,L.NORMAL,-1,20,-1,0,3).condition(t=>{var E;return(((E=t.getTag(ts))==null?void 0:E.stockpiledCount)??0)<3}).attr(TA,Y.STOCKPILING,!0),new B(A.SPIT_UP,L.NORMAL,u.SPECIAL,-1,-1,10,-1,0,3).condition(Lv).attr(_H,100).attr(WI,[Y.STOCKPILING],!0),new we(A.SWALLOW,L.NORMAL,-1,10,-1,0,3).condition(Lv).attr(uH).attr(WI,[Y.STOCKPILING],!0).triageMove(),new B(A.HEAT_WAVE,L.FIRE,u.SPECIAL,95,90,10,10,0,3).attr(fE,!0,J.FREEZE).attr(Ve,J.BURN).windMove().target(ee.ALL_NEAR_ENEMIES),new ne(A.HAIL,L.ICE,-1,10,-1,0,3).attr(sN,X.HAIL).target(ee.BOTH_SIDES),new ne(A.TORMENT,L.DARK,100,15,-1,0,3).ignoresSubstitute().edgeCase().attr(TA,Y.TORMENT,!1,!0,1).reflectable(),new ne(A.FLATTER,L.DARK,100,15,-1,0,3).attr(Le,[h.SPATK],1).attr(rt).reflectable(),new ne(A.WILL_O_WISP,L.FIRE,85,15,-1,0,3).attr(Ve,J.BURN).reflectable(),new ne(A.MEMENTO,L.DARK,100,10,-1,0,3).attr(Os).attr(Le,[h.ATK,h.SPATK],-2),new B(A.FACADE,L.NORMAL,u.PHYSICAL,70,100,20,-1,0,3).attr(jA,(t,E,R)=>t.status&&(t.status.effect===J.BURN||t.status.effect===J.POISON||t.status.effect===J.TOXIC||t.status.effect===J.PARALYSIS)?2:1).attr(GU),new B(A.FOCUS_PUNCH,L.FIGHTING,u.PHYSICAL,150,100,20,-1,-3,3).attr($u,(t,E)=>D.t("moveTriggers:isTighteningFocus",{pokemonName:Z(t)})).attr(IU,(t,E,R)=>D.t("moveTriggers:lostFocus",{pokemonName:Z(t)}),t=>!!t.turnData.attacksReceived.find(E=>E.damage)).punchingMove(),new B(A.SMELLING_SALTS,L.NORMAL,u.PHYSICAL,70,100,10,-1,0,3).attr(jA,(t,E,R)=>{var I;return((I=E.status)==null?void 0:I.effect)===J.PARALYSIS?2:1}).attr(fE,!0,J.PARALYSIS),new we(A.FOLLOW_ME,L.NORMAL,-1,20,-1,2,3).attr(TA,Y.CENTER_OF_ATTENTION,!0),new ne(A.NATURE_POWER,L.NORMAL,-1,20,-1,0,3).attr(RD),new we(A.CHARGE,L.ELECTRIC,-1,20,-1,0,3).attr(Le,[h.SPDEF],1,!0).attr(TA,Y.CHARGED,!0,!1),new ne(A.TAUNT,L.DARK,100,20,-1,0,3).ignoresSubstitute().attr(TA,Y.TAUNT,!1,!0,4).reflectable(),new ne(A.HELPING_HAND,L.NORMAL,-1,20,-1,5,3).attr(TA,Y.HELPING_HAND).ignoresSubstitute().target(ee.NEAR_ALLY).condition(hs),new ne(A.TRICK,L.PSYCHIC,100,10,-1,0,3).unimplemented(),new ne(A.ROLE_PLAY,L.PSYCHIC,-1,10,-1,0,3).ignoresSubstitute().attr(LD),new we(A.WISH,L.NORMAL,-1,10,-1,0,3).triageMove().attr(dE,oe.WISH,2,!0),new we(A.ASSIST,L.NORMAL,-1,20,-1,0,3).attr(hr,m9,!0),new we(A.INGRAIN,L.GRASS,-1,20,-1,0,3).attr(TA,Y.INGRAIN,!0,!0).attr(TA,Y.IGNORE_FLYING,!0,!0).attr(WI,[Y.FLOATING],!0),new B(A.SUPERPOWER,L.FIGHTING,u.PHYSICAL,120,100,5,-1,0,3).attr(Le,[h.ATK,h.DEF],-1,!0),new we(A.MAGIC_COAT,L.PSYCHIC,-1,15,-1,4,3).attr(TA,Y.MAGIC_COAT,!0,!0,0).condition(BR).edgeCase(),new we(A.RECYCLE,L.NORMAL,-1,10,-1,0,3).unimplemented(),new B(A.REVENGE,L.FIGHTING,u.PHYSICAL,60,100,10,-1,-4,3).attr(FU),new B(A.BRICK_BREAK,L.FIGHTING,u.PHYSICAL,75,100,15,-1,0,3).attr(ks),new ne(A.YAWN,L.NORMAL,-1,10,-1,0,3).attr(TA,Y.DROWSY,!1,!0).condition((t,E,R)=>!E.status&&!E.isSafeguarded(t)).reflectable(),new B(A.KNOCK_OFF,L.DARK,u.PHYSICAL,65,100,20,-1,0,3).attr(jA,(t,E,R)=>E.getHeldItems().filter(I=>I.isTransferable).length>0?1.5:1).attr(MU,!1).edgeCase(),new B(A.ENDEAVOR,L.NORMAL,u.PHYSICAL,-1,100,5,-1,0,3).attr(zu).condition(SP),new B(A.ERUPTION,L.FIRE,u.SPECIAL,150,100,5,-1,0,3).attr(zT).target(ee.ALL_NEAR_ENEMIES),new ne(A.SKILL_SWAP,L.PSYCHIC,-1,10,-1,0,3).ignoresSubstitute().attr(S1),new ne(A.IMPRISON,L.PSYCHIC,100,10,-1,0,3).ignoresSubstitute().attr(dE,oe.IMPRISON,1,!0,!1).target(ee.ENEMY_SIDE),new we(A.REFRESH,L.NORMAL,-1,20,-1,0,3).attr(fE,!0,[J.PARALYSIS,J.POISON,J.TOXIC,J.BURN]).condition((t,E,R)=>!!t.status&&(t.status.effect===J.PARALYSIS||t.status.effect===J.POISON||t.status.effect===J.TOXIC||t.status.effect===J.BURN)),new we(A.GRUDGE,L.GHOST,-1,5,-1,0,3).attr(TA,Y.GRUDGE,!0,void 0,1),new we(A.SNATCH,L.DARK,-1,10,-1,4,3).unimplemented(),new B(A.SECRET_POWER,L.NORMAL,u.PHYSICAL,70,100,20,30,0,3).makesContact(!1).attr(uU),new pt(A.DIVE,L.WATER,u.PHYSICAL,80,100,10,-1,0,3).chargeText(D.t("moveTriggers:hidUnderwater",{pokemonName:"{USER}"})).chargeAttr(YI,Y.UNDERWATER).chargeAttr($U),new B(A.ARM_THRUST,L.FIGHTING,u.PHYSICAL,15,100,20,-1,0,3).attr(vA),new we(A.CAMOUFLAGE,L.NORMAL,-1,20,-1,0,3).attr(t1),new we(A.TAIL_GLOW,L.BUG,-1,20,-1,0,3).attr(Le,[h.SPATK],3,!0),new B(A.LUSTER_PURGE,L.PSYCHIC,u.SPECIAL,95,100,5,50,0,3).attr(Le,[h.SPDEF],-1),new B(A.MIST_BALL,L.PSYCHIC,u.SPECIAL,95,100,5,50,0,3).attr(Le,[h.SPATK],-1).ballBombMove(),new ne(A.FEATHER_DANCE,L.FLYING,100,15,-1,0,3).attr(Le,[h.ATK],-2).danceMove().reflectable(),new ne(A.TEETER_DANCE,L.NORMAL,100,20,-1,0,3).attr(rt).danceMove().target(ee.ALL_NEAR_OTHERS),new B(A.BLAZE_KICK,L.FIRE,u.PHYSICAL,85,90,10,10,0,3).attr(hE).attr(Ve,J.BURN),new ne(A.MUD_SPORT,L.GROUND,-1,15,-1,0,3).ignoresProtect().attr(dE,oe.MUD_SPORT,5).target(ee.BOTH_SIDES),new B(A.ICE_BALL,L.ICE,u.PHYSICAL,30,90,20,-1,0,3).partial().attr(OS,5,!0,!0,A.DEFENSE_CURL).ballBombMove(),new B(A.NEEDLE_ARM,L.GRASS,u.PHYSICAL,60,100,15,30,0,3).attr(VA),new we(A.SLACK_OFF,L.NORMAL,-1,5,-1,0,3).attr(Vt,.5).triageMove(),new B(A.HYPER_VOICE,L.NORMAL,u.SPECIAL,90,100,10,-1,0,3).soundBased().target(ee.ALL_NEAR_ENEMIES),new B(A.POISON_FANG,L.POISON,u.PHYSICAL,50,100,15,50,0,3).attr(Ve,J.TOXIC).bitingMove(),new B(A.CRUSH_CLAW,L.NORMAL,u.PHYSICAL,75,95,10,50,0,3).attr(Le,[h.DEF],-1),new B(A.BLAST_BURN,L.FIRE,u.SPECIAL,150,90,5,-1,0,3).attr(kR),new B(A.HYDRO_CANNON,L.WATER,u.SPECIAL,150,90,5,-1,0,3).attr(kR),new B(A.METEOR_MASH,L.STEEL,u.PHYSICAL,90,90,10,20,0,3).attr(Le,[h.ATK],1,!0).punchingMove(),new B(A.ASTONISH,L.GHOST,u.PHYSICAL,30,100,15,30,0,3).attr(VA),new B(A.WEATHER_BALL,L.NORMAL,u.SPECIAL,50,100,10,-1,0,3).attr(pH).attr(jA,(t,E,R)=>{const I=s.arena.weather;return I&&[X.SUNNY,X.RAIN,X.SANDSTORM,X.HAIL,X.SNOW,X.FOG,X.HEAVY_RAIN,X.HARSH_SUN].includes(I.weatherType)&&!I.isEffectSuppressed()?2:1}).ballBombMove(),new ne(A.AROMATHERAPY,L.GRASS,-1,5,-1,0,3).attr(ZT,D.t("moveTriggers:soothingAromaWaftedThroughArea"),O.SAP_SIPPER).target(ee.PARTY),new ne(A.FAKE_TEARS,L.DARK,100,20,-1,0,3).attr(Le,[h.SPDEF],-2).reflectable(),new B(A.AIR_CUTTER,L.FLYING,u.SPECIAL,60,95,25,-1,0,3).attr(hE).slicingMove().windMove().target(ee.ALL_NEAR_ENEMIES),new B(A.OVERHEAT,L.FIRE,u.SPECIAL,130,90,5,-1,0,3).attr(Le,[h.SPATK],-2,!0).attr(fE,!0,J.FREEZE),new ne(A.ODOR_SLEUTH,L.NORMAL,-1,40,-1,0,3).attr(On,Y.IGNORE_GHOST).ignoresSubstitute().reflectable(),new B(A.ROCK_TOMB,L.ROCK,u.PHYSICAL,60,95,15,100,0,3).attr(Le,[h.SPD],-1).makesContact(!1),new B(A.SILVER_WIND,L.BUG,u.SPECIAL,60,100,5,10,0,3).attr(Le,[h.ATK,h.DEF,h.SPATK,h.SPDEF,h.SPD],1,!0).windMove(),new ne(A.METAL_SOUND,L.STEEL,85,40,-1,0,3).attr(Le,[h.SPDEF],-2).soundBased().reflectable(),new ne(A.GRASS_WHISTLE,L.GRASS,55,15,-1,0,3).attr(Ve,J.SLEEP).soundBased().reflectable(),new ne(A.TICKLE,L.NORMAL,100,20,-1,0,3).attr(Le,[h.ATK,h.DEF],-1).reflectable(),new we(A.COSMIC_POWER,L.PSYCHIC,-1,20,-1,0,3).attr(Le,[h.DEF,h.SPDEF],1,!0),new B(A.WATER_SPOUT,L.WATER,u.SPECIAL,150,100,5,-1,0,3).attr(zT).target(ee.ALL_NEAR_ENEMIES),new B(A.SIGNAL_BEAM,L.BUG,u.SPECIAL,75,100,15,10,0,3).attr(rt),new B(A.SHADOW_PUNCH,L.GHOST,u.PHYSICAL,60,-1,20,-1,0,3).punchingMove(),new B(A.EXTRASENSORY,L.PSYCHIC,u.SPECIAL,80,100,20,10,0,3).attr(VA),new B(A.SKY_UPPERCUT,L.FIGHTING,u.PHYSICAL,85,90,15,-1,0,3).attr(XR,Y.FLYING).punchingMove(),new B(A.SAND_TOMB,L.GROUND,u.PHYSICAL,35,85,15,-1,0,3).attr(UO,Y.SAND_TOMB).makesContact(!1),new B(A.SHEER_COLD,L.ICE,u.SPECIAL,200,20,5,-1,0,3).attr(bH).attr(kO).attr(XH),new B(A.MUDDY_WATER,L.WATER,u.SPECIAL,90,85,10,30,0,3).attr(Le,[h.ACC],-1).target(ee.ALL_NEAR_ENEMIES),new B(A.BULLET_SEED,L.GRASS,u.PHYSICAL,25,100,30,-1,0,3).attr(vA).makesContact(!1).ballBombMove(),new B(A.AERIAL_ACE,L.FLYING,u.PHYSICAL,60,-1,20,-1,0,3).slicingMove(),new B(A.ICICLE_SPEAR,L.ICE,u.PHYSICAL,25,100,30,-1,0,3).attr(vA).makesContact(!1),new we(A.IRON_DEFENSE,L.STEEL,-1,15,-1,0,3).attr(Le,[h.DEF],2,!0),new ne(A.BLOCK,L.NORMAL,-1,5,-1,0,3).condition(Ki).attr(TA,Y.TRAPPED,!1,!0,1).reflectable(),new ne(A.HOWL,L.NORMAL,-1,40,-1,0,3).attr(Le,[h.ATK],1).soundBased().target(ee.USER_AND_ALLIES),new B(A.DRAGON_CLAW,L.DRAGON,u.PHYSICAL,80,100,15,-1,0,3),new B(A.FRENZY_PLANT,L.GRASS,u.SPECIAL,150,90,5,-1,0,3).attr(kR),new we(A.BULK_UP,L.FIGHTING,-1,20,-1,0,3).attr(Le,[h.ATK,h.DEF],1,!0),new pt(A.BOUNCE,L.FLYING,u.PHYSICAL,85,85,5,30,0,3).chargeText(D.t("moveTriggers:sprangUp",{pokemonName:"{USER}"})).chargeAttr(YI,Y.FLYING).attr(Ve,J.PARALYSIS).condition(OL),new B(A.MUD_SHOT,L.GROUND,u.SPECIAL,55,95,15,100,0,3).attr(Le,[h.SPD],-1),new B(A.POISON_TAIL,L.POISON,u.PHYSICAL,50,100,25,10,0,3).attr(hE).attr(Ve,J.POISON),new B(A.COVET,L.NORMAL,u.PHYSICAL,60,100,25,-1,0,3).attr(DU,.3).edgeCase(),new B(A.VOLT_TACKLE,L.ELECTRIC,u.PHYSICAL,120,100,15,10,0,3).attr(rR,!1,.33).attr(Ve,J.PARALYSIS).recklessMove(),new B(A.MAGICAL_LEAF,L.GRASS,u.SPECIAL,60,-1,20,-1,0,3),new ne(A.WATER_SPORT,L.WATER,-1,15,-1,0,3).ignoresProtect().attr(dE,oe.WATER_SPORT,5).target(ee.BOTH_SIDES),new we(A.CALM_MIND,L.PSYCHIC,-1,20,-1,0,3).attr(Le,[h.SPATK,h.SPDEF],1,!0),new B(A.LEAF_BLADE,L.GRASS,u.PHYSICAL,90,100,15,-1,0,3).attr(hE).slicingMove(),new we(A.DRAGON_DANCE,L.DRAGON,-1,20,-1,0,3).attr(Le,[h.ATK,h.SPD],1,!0).danceMove(),new B(A.ROCK_BLAST,L.ROCK,u.PHYSICAL,25,90,10,-1,0,3).attr(vA).makesContact(!1).ballBombMove(),new B(A.SHOCK_WAVE,L.ELECTRIC,u.SPECIAL,60,-1,20,-1,0,3),new B(A.WATER_PULSE,L.WATER,u.SPECIAL,60,100,20,20,0,3).attr(rt).pulseMove(),new B(A.DOOM_DESIRE,L.STEEL,u.SPECIAL,140,100,5,-1,0,3).partial().ignoresProtect().attr(HI,oe.DOOM_DESIRE,XI.DOOM_DESIRE_CHARGING,D.t("moveTriggers:choseDoomDesireAsDestiny",{pokemonName:"{USER}"})),new B(A.PSYCHO_BOOST,L.PSYCHIC,u.SPECIAL,140,90,5,-1,0,3).attr(Le,[h.SPATK],-2,!0),new we(A.ROOST,L.FLYING,-1,5,-1,0,4).attr(Vt,.5).attr(TA,Y.ROOSTED,!0,!1).triageMove(),new ne(A.GRAVITY,L.PSYCHIC,-1,5,-1,0,4).ignoresProtect().attr(dE,oe.GRAVITY,5).target(ee.BOTH_SIDES),new ne(A.MIRACLE_EYE,L.PSYCHIC,-1,40,-1,0,4).attr(On,Y.IGNORE_DARK).ignoresSubstitute().reflectable(),new B(A.WAKE_UP_SLAP,L.FIGHTING,u.PHYSICAL,70,100,10,-1,0,4).attr(jA,(t,E,R)=>TP(t,E)?2:1).attr(fE,!1,J.SLEEP),new B(A.HAMMER_ARM,L.FIGHTING,u.PHYSICAL,100,90,10,-1,0,4).attr(Le,[h.SPD],-1,!0).punchingMove(),new B(A.GYRO_BALL,L.STEEL,u.PHYSICAL,-1,100,5,-1,0,4).attr(lH).ballBombMove(),new we(A.HEALING_WISH,L.PSYCHIC,-1,10,-1,0,4).attr(aU,!1,"moveTriggers:sacrificialFullRestore").triageMove().condition(di),new B(A.BRINE,L.WATER,u.SPECIAL,65,100,10,-1,0,4).attr(jA,(t,E,R)=>E.getHpRatio()<.5?2:1),new B(A.NATURAL_GIFT,L.NORMAL,u.PHYSICAL,-1,100,15,-1,0,4).makesContact(!1).unimplemented(),new B(A.FEINT,L.NORMAL,u.PHYSICAL,30,100,10,-1,2,4).attr(WI,[Y.PROTECTED]).attr(zU,[oe.QUICK_GUARD,oe.WIDE_GUARD,oe.MAT_BLOCK,oe.CRAFTY_SHIELD],!1).makesContact(!1).ignoresProtect(),new B(A.PLUCK,L.FLYING,u.PHYSICAL,60,100,20,-1,0,4).attr(PU),new ne(A.TAILWIND,L.FLYING,-1,15,-1,0,4).windMove().attr(dE,oe.TAILWIND,4,!0).target(ee.USER_SIDE),new ne(A.ACUPRESSURE,L.NORMAL,-1,30,-1,0,4).attr(NH).target(ee.USER_OR_NEAR_ALLY),new B(A.METAL_BURST,L.STEEL,u.PHYSICAL,-1,100,10,-1,0,4).attr(PN,t=>t.category===u.PHYSICAL||t.category===u.SPECIAL,1.5).redirectCounter().makesContact(!1).target(ee.ATTACKER),new B(A.U_TURN,L.BUG,u.PHYSICAL,70,100,20,-1,0,4).attr(oR,!0),new B(A.CLOSE_COMBAT,L.FIGHTING,u.PHYSICAL,120,100,5,-1,0,4).attr(Le,[h.DEF,h.SPDEF],-1,!0),new B(A.PAYBACK,L.DARK,u.PHYSICAL,50,100,10,-1,0,4).attr(jA,(t,E,R)=>{var I;return E.getLastXMoves(1).find(N=>N.turn===s.currentBattle.turn)||((I=s.currentBattle.turnCommands[E.getBattlerIndex()])==null?void 0:I.command)===GE.BALL?2:1}),new B(A.ASSURANCE,L.DARK,u.PHYSICAL,60,100,10,-1,0,4).attr(jA,(t,E,R)=>E.turnData.damageTaken>0?2:1),new ne(A.EMBARGO,L.DARK,100,15,-1,0,4).reflectable().unimplemented(),new B(A.FLING,L.DARK,u.PHYSICAL,-1,100,10,-1,0,4).makesContact(!1).unimplemented(),new ne(A.PSYCHO_SHIFT,L.PSYCHIC,100,10,-1,0,4).attr(IH).condition((t,E,R)=>{var N;let I=t.hasAbility(O.COMATOSE)?J.SLEEP:void 0;return(N=t.status)!=null&&N.effect&&tV(t.status.effect)&&(I=t.status.effect),!!I&&E.canSetStatus(I,!1,!1,t)}),new B(A.TRUMP_CARD,L.NORMAL,u.SPECIAL,-1,-1,5,-1,0,4).makesContact().attr(aH),new ne(A.HEAL_BLOCK,L.PSYCHIC,100,15,-1,0,4).attr(TA,Y.HEAL_BLOCK,!1,!0,5).target(ee.ALL_NEAR_ENEMIES).reflectable(),new B(A.WRING_OUT,L.NORMAL,u.SPECIAL,-1,100,5,-1,0,4).attr(jT,120).makesContact(),new we(A.POWER_TRICK,L.PSYCHIC,-1,10,-1,0,4).attr(TA,Y.POWER_TRICK,!0),new ne(A.GASTRO_ACID,L.POISON,100,10,-1,0,4).attr(ND).reflectable(),new ne(A.LUCKY_CHANT,L.NORMAL,-1,30,-1,0,4).attr(dE,oe.NO_CRIT,5,!0,!0).target(ee.USER_SIDE),new ne(A.ME_FIRST,L.NORMAL,-1,20,-1,0,4).ignoresSubstitute().target(ee.NEAR_ENEMY).unimplemented(),new we(A.COPYCAT,L.NORMAL,-1,20,-1,0,4).attr(vS,!1,p9),new ne(A.POWER_SWAP,L.PSYCHIC,-1,10,100,0,4).attr(qT,[h.ATK,h.SPATK]).ignoresSubstitute(),new ne(A.GUARD_SWAP,L.PSYCHIC,-1,10,100,0,4).attr(qT,[h.DEF,h.SPDEF]).ignoresSubstitute(),new B(A.PUNISHMENT,L.DARK,u.PHYSICAL,-1,100,5,-1,0,4).makesContact(!0).attr(MH),new B(A.LAST_RESORT,L.NORMAL,u.PHYSICAL,140,100,5,-1,0,4).attr(l1).edgeCase(),new ne(A.WORRY_SEED,L.GRASS,100,10,-1,0,4).attr(ID,O.INSOMNIA).reflectable(),new B(A.SUCKER_PUNCH,L.DARK,u.PHYSICAL,70,100,5,-1,1,4).condition((t,E,R)=>{const I=s.currentBattle.turnCommands[E.getBattlerIndex()];return!I||!I.move?!1:I.command===GE.FIGHT&&!E.turnData.acted&&Ke[I.move.move].category!==u.STATUS}),new ne(A.TOXIC_SPIKES,L.POISON,-1,20,-1,0,4).attr(BL,oe.TOXIC_SPIKES).target(ee.ENEMY_SIDE).reflectable(),new ne(A.HEART_SWAP,L.PSYCHIC,-1,10,-1,0,4).attr(qT,cO).ignoresSubstitute(),new we(A.AQUA_RING,L.WATER,-1,20,-1,0,4).attr(TA,Y.AQUA_RING,!0,!0),new we(A.MAGNET_RISE,L.ELECTRIC,-1,10,-1,0,4).attr(TA,Y.FLOATING,!0,!0,5).condition((t,E,R)=>!s.arena.getTag(oe.GRAVITY)&&[Y.FLOATING,Y.IGNORE_FLYING,Y.INGRAIN].every(I=>!t.getTag(I))),new B(A.FLARE_BLITZ,L.FIRE,u.PHYSICAL,120,100,15,10,0,4).attr(rR,!1,.33).attr(fE,!0,J.FREEZE).attr(Ve,J.BURN).recklessMove(),new B(A.FORCE_PALM,L.FIGHTING,u.PHYSICAL,60,100,10,30,0,4).attr(Ve,J.PARALYSIS),new B(A.AURA_SPHERE,L.FIGHTING,u.SPECIAL,80,-1,20,-1,0,4).pulseMove().ballBombMove(),new we(A.ROCK_POLISH,L.ROCK,-1,20,-1,0,4).attr(Le,[h.SPD],2,!0),new B(A.POISON_JAB,L.POISON,u.PHYSICAL,80,100,20,30,0,4).attr(Ve,J.POISON),new B(A.DARK_PULSE,L.DARK,u.SPECIAL,80,100,15,20,0,4).attr(VA).pulseMove(),new B(A.NIGHT_SLASH,L.DARK,u.PHYSICAL,70,100,15,-1,0,4).attr(hE).slicingMove(),new B(A.AQUA_TAIL,L.WATER,u.PHYSICAL,90,90,10,-1,0,4),new B(A.SEED_BOMB,L.GRASS,u.PHYSICAL,80,100,15,-1,0,4).makesContact(!1).ballBombMove(),new B(A.AIR_SLASH,L.FLYING,u.SPECIAL,75,95,15,30,0,4).attr(VA).slicingMove(),new B(A.X_SCISSOR,L.BUG,u.PHYSICAL,80,100,15,-1,0,4).slicingMove(),new B(A.BUG_BUZZ,L.BUG,u.SPECIAL,90,100,10,10,0,4).attr(Le,[h.SPDEF],-1).soundBased(),new B(A.DRAGON_PULSE,L.DRAGON,u.SPECIAL,85,100,10,-1,0,4).pulseMove(),new B(A.DRAGON_RUSH,L.DRAGON,u.PHYSICAL,100,75,10,20,0,4).attr(dO).attr(iR,Y.MINIMIZED).attr(VA),new B(A.POWER_GEM,L.ROCK,u.SPECIAL,80,100,20,-1,0,4),new B(A.DRAIN_PUNCH,L.FIGHTING,u.PHYSICAL,75,100,10,-1,0,4).attr(AR).punchingMove().triageMove(),new B(A.VACUUM_WAVE,L.FIGHTING,u.SPECIAL,40,100,30,-1,1,4),new B(A.FOCUS_BLAST,L.FIGHTING,u.SPECIAL,120,70,5,10,0,4).attr(Le,[h.SPDEF],-1).ballBombMove(),new B(A.ENERGY_BALL,L.GRASS,u.SPECIAL,90,100,10,10,0,4).attr(Le,[h.SPDEF],-1).ballBombMove(),new B(A.BRAVE_BIRD,L.FLYING,u.PHYSICAL,120,100,15,-1,0,4).attr(rR,!1,.33).recklessMove(),new B(A.EARTH_POWER,L.GROUND,u.SPECIAL,90,100,10,10,0,4).attr(Le,[h.SPDEF],-1),new ne(A.SWITCHEROO,L.DARK,100,10,-1,0,4).unimplemented(),new B(A.GIGA_IMPACT,L.NORMAL,u.PHYSICAL,150,90,5,-1,0,4).attr(kR),new we(A.NASTY_PLOT,L.DARK,-1,20,-1,0,4).attr(Le,[h.SPATK],2,!0),new B(A.BULLET_PUNCH,L.STEEL,u.PHYSICAL,40,100,30,-1,1,4).punchingMove(),new B(A.AVALANCHE,L.ICE,u.PHYSICAL,60,100,10,-1,-4,4).attr(FU),new B(A.ICE_SHARD,L.ICE,u.PHYSICAL,40,100,30,-1,1,4).makesContact(!1),new B(A.SHADOW_CLAW,L.GHOST,u.PHYSICAL,70,100,15,-1,0,4).attr(hE),new B(A.THUNDER_FANG,L.ELECTRIC,u.PHYSICAL,65,95,15,10,0,4).attr(VA).attr(Ve,J.PARALYSIS).bitingMove(),new B(A.ICE_FANG,L.ICE,u.PHYSICAL,65,95,15,10,0,4).attr(VA).attr(Ve,J.FREEZE).bitingMove(),new B(A.FIRE_FANG,L.FIRE,u.PHYSICAL,65,95,15,10,0,4).attr(VA).attr(Ve,J.BURN).bitingMove(),new B(A.SHADOW_SNEAK,L.GHOST,u.PHYSICAL,40,100,30,-1,1,4),new B(A.MUD_BOMB,L.GROUND,u.SPECIAL,65,85,10,30,0,4).attr(Le,[h.ACC],-1).ballBombMove(),new B(A.PSYCHO_CUT,L.PSYCHIC,u.PHYSICAL,70,100,20,-1,0,4).attr(hE).slicingMove().makesContact(!1),new B(A.ZEN_HEADBUTT,L.PSYCHIC,u.PHYSICAL,80,90,15,20,0,4).attr(VA),new B(A.MIRROR_SHOT,L.STEEL,u.SPECIAL,65,85,10,30,0,4).attr(Le,[h.ACC],-1),new B(A.FLASH_CANNON,L.STEEL,u.SPECIAL,80,100,10,10,0,4).attr(Le,[h.SPDEF],-1),new B(A.ROCK_CLIMB,L.NORMAL,u.PHYSICAL,90,85,20,20,0,4).attr(rt),new ne(A.DEFOG,L.FLYING,-1,15,-1,0,4).attr(Le,[h.EVA],-1).attr(LH,X.FOG).attr(vs).attr(ks,!1).attr(Zs,!0).attr(zU,[oe.MIST,oe.SAFEGUARD],!1).reflectable(),new ne(A.TRICK_ROOM,L.PSYCHIC,-1,5,-1,-7,4).attr(dE,oe.TRICK_ROOM,5).ignoresProtect().target(ee.BOTH_SIDES),new B(A.DRACO_METEOR,L.DRAGON,u.SPECIAL,130,90,5,-1,0,4).attr(Le,[h.SPATK],-2,!0),new B(A.DISCHARGE,L.ELECTRIC,u.SPECIAL,80,100,15,30,0,4).attr(Ve,J.PARALYSIS).target(ee.ALL_NEAR_OTHERS),new B(A.LAVA_PLUME,L.FIRE,u.SPECIAL,80,100,15,30,0,4).attr(Ve,J.BURN).target(ee.ALL_NEAR_OTHERS),new B(A.LEAF_STORM,L.GRASS,u.SPECIAL,130,90,5,-1,0,4).attr(Le,[h.SPATK],-2,!0),new B(A.POWER_WHIP,L.GRASS,u.PHYSICAL,120,85,10,-1,0,4),new B(A.ROCK_WRECKER,L.ROCK,u.PHYSICAL,150,90,5,-1,0,4).attr(kR).makesContact(!1).ballBombMove(),new B(A.CROSS_POISON,L.POISON,u.PHYSICAL,70,100,20,10,0,4).attr(hE).attr(Ve,J.POISON).slicingMove(),new B(A.GUNK_SHOT,L.POISON,u.PHYSICAL,120,80,5,30,0,4).attr(Ve,J.POISON).makesContact(!1),new B(A.IRON_HEAD,L.STEEL,u.PHYSICAL,80,100,15,30,0,4).attr(VA),new B(A.MAGNET_BOMB,L.STEEL,u.PHYSICAL,60,-1,20,-1,0,4).makesContact(!1).ballBombMove(),new B(A.STONE_EDGE,L.ROCK,u.PHYSICAL,100,80,5,-1,0,4).attr(hE).makesContact(!1),new ne(A.CAPTIVATE,L.NORMAL,100,20,-1,0,4).attr(Le,[h.SPATK],-2).condition((t,E,R)=>E.isOppositeGender(t)).target(ee.ALL_NEAR_ENEMIES).reflectable(),new ne(A.STEALTH_ROCK,L.ROCK,-1,20,-1,0,4).attr(BL,oe.STEALTH_ROCK).target(ee.ENEMY_SIDE).reflectable(),new B(A.GRASS_KNOT,L.GRASS,u.SPECIAL,-1,100,20,-1,0,4).attr(hU).makesContact(),new B(A.CHATTER,L.FLYING,u.SPECIAL,65,100,20,100,0,4).attr(rt).soundBased(),new B(A.JUDGMENT,L.NORMAL,u.SPECIAL,100,100,10,-1,0,4).attr(ZU),new B(A.BUG_BITE,L.BUG,u.PHYSICAL,60,100,20,-1,0,4).attr(PU),new B(A.CHARGE_BEAM,L.ELECTRIC,u.SPECIAL,50,90,10,70,0,4).attr(Le,[h.SPATK],1,!0),new B(A.WOOD_HAMMER,L.GRASS,u.PHYSICAL,120,100,15,-1,0,4).attr(rR,!1,.33).recklessMove(),new B(A.AQUA_JET,L.WATER,u.PHYSICAL,40,100,20,-1,1,4),new B(A.ATTACK_ORDER,L.BUG,u.PHYSICAL,90,100,15,-1,0,4).attr(hE).makesContact(!1),new we(A.DEFEND_ORDER,L.BUG,-1,10,-1,0,4).attr(Le,[h.DEF,h.SPDEF],1,!0),new we(A.HEAL_ORDER,L.BUG,-1,5,-1,0,4).attr(Vt,.5).triageMove(),new B(A.HEAD_SMASH,L.ROCK,u.PHYSICAL,150,80,5,-1,0,4).attr(rR,!1,.5).recklessMove(),new B(A.DOUBLE_HIT,L.NORMAL,u.PHYSICAL,35,90,10,-1,0,4).attr(vA,_E._2),new B(A.ROAR_OF_TIME,L.DRAGON,u.SPECIAL,150,90,5,-1,0,4).attr(kR),new B(A.SPACIAL_REND,L.DRAGON,u.SPECIAL,100,95,5,-1,0,4).attr(hE),new we(A.LUNAR_DANCE,L.PSYCHIC,-1,10,-1,0,4).attr(aU,!0,"moveTriggers:lunarDanceRestore").danceMove().triageMove().condition(di),new B(A.CRUSH_GRIP,L.NORMAL,u.PHYSICAL,-1,100,5,-1,0,4).attr(jT,120),new B(A.MAGMA_STORM,L.FIRE,u.SPECIAL,100,75,5,-1,0,4).attr(UO,Y.MAGMA_STORM),new ne(A.DARK_VOID,L.DARK,80,10,-1,0,4).attr(Ve,J.SLEEP).target(ee.ALL_NEAR_ENEMIES).reflectable(),new B(A.SEED_FLARE,L.GRASS,u.SPECIAL,120,85,5,40,0,4).attr(Le,[h.SPDEF],-2),new B(A.OMINOUS_WIND,L.GHOST,u.SPECIAL,60,100,5,10,0,4).attr(Le,[h.ATK,h.DEF,h.SPATK,h.SPDEF,h.SPD],1,!0).windMove(),new pt(A.SHADOW_FORCE,L.GHOST,u.PHYSICAL,120,100,5,-1,0,4).chargeText(D.t("moveTriggers:vanishedInstantly",{pokemonName:"{USER}"})).chargeAttr(YI,Y.HIDDEN).ignoresProtect(),new we(A.HONE_CLAWS,L.DARK,-1,15,-1,0,5).attr(Le,[h.ATK,h.ACC],1,!0),new ne(A.WIDE_GUARD,L.ROCK,-1,10,-1,3,5).target(ee.USER_SIDE).attr(dE,oe.WIDE_GUARD,1,!0,!0).condition(BR),new ne(A.GUARD_SPLIT,L.PSYCHIC,-1,10,-1,0,5).attr(sD,[h.DEF,h.SPDEF],"moveTriggers:sharedGuard"),new ne(A.POWER_SPLIT,L.PSYCHIC,-1,10,-1,0,5).attr(sD,[h.ATK,h.SPATK],"moveTriggers:sharedPower"),new ne(A.WONDER_ROOM,L.PSYCHIC,-1,10,-1,0,5).ignoresProtect().target(ee.BOTH_SIDES).unimplemented(),new B(A.PSYSHOCK,L.PSYCHIC,u.SPECIAL,80,100,10,-1,0,5).attr(An),new B(A.VENOSHOCK,L.POISON,u.SPECIAL,65,100,10,-1,0,5).attr(jA,(t,E,R)=>E.status&&(E.status.effect===J.POISON||E.status.effect===J.TOXIC)?2:1),new we(A.AUTOTOMIZE,L.STEEL,-1,15,-1,0,5).attr(Le,[h.SPD],2,!0).attr(TA,Y.AUTOTOMIZED,!0),new we(A.RAGE_POWDER,L.BUG,-1,20,-1,2,5).powderMove().attr(TA,Y.CENTER_OF_ATTENTION,!0),new ne(A.TELEKINESIS,L.PSYCHIC,-1,15,-1,0,5).condition(OL).condition((t,E,R)=>![e.DIGLETT,e.DUGTRIO,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.SANDYGAST,e.PALOSSAND,e.WIGLETT,e.WUGTRIO].includes(E.species.speciesId)).condition((t,E,R)=>!(E.species.speciesId===e.GENGAR&&E.getFormKey()==="mega")).condition((t,E,R)=>Ne(E.getTag(Y.INGRAIN))&&Ne(E.getTag(Y.IGNORE_FLYING))).attr(TA,Y.TELEKINESIS,!1,!0,3).attr(TA,Y.FLOATING,!1,!0,3).reflectable(),new ne(A.MAGIC_ROOM,L.PSYCHIC,-1,10,-1,0,5).ignoresProtect().target(ee.BOTH_SIDES).unimplemented(),new B(A.SMACK_DOWN,L.ROCK,u.PHYSICAL,50,100,15,-1,0,5).attr(JU).attr(TA,Y.INTERRUPTED).attr(WI,[Y.FLYING,Y.FLOATING,Y.TELEKINESIS]).attr(XR,Y.FLYING).makesContact(!1),new B(A.STORM_THROW,L.FIGHTING,u.PHYSICAL,60,100,10,-1,0,5).attr(nI),new B(A.FLAME_BURST,L.FIRE,u.SPECIAL,70,100,15,-1,0,5).attr(EH),new B(A.SLUDGE_WAVE,L.POISON,u.SPECIAL,95,100,10,10,0,5).attr(Ve,J.POISON).target(ee.ALL_NEAR_OTHERS),new we(A.QUIVER_DANCE,L.BUG,-1,20,-1,0,5).attr(Le,[h.SPATK,h.SPDEF,h.SPD],1,!0).danceMove(),new B(A.HEAVY_SLAM,L.STEEL,u.PHYSICAL,-1,100,10,-1,0,5).attr(dO).attr(dU).attr(iR,Y.MINIMIZED),new B(A.SYNCHRONOISE,L.PSYCHIC,u.SPECIAL,120,100,10,-1,0,5).target(ee.ALL_NEAR_OTHERS).condition(DX).attr(P1),new B(A.ELECTRO_BALL,L.ELECTRIC,u.SPECIAL,-1,100,10,-1,0,5).attr(CH).ballBombMove(),new ne(A.SOAK,L.WATER,100,20,-1,0,5).attr(AD,L.WATER).reflectable(),new B(A.FLAME_CHARGE,L.FIRE,u.PHYSICAL,50,100,20,100,0,5).attr(Le,[h.SPD],1,!0),new we(A.COIL,L.POISON,-1,20,-1,0,5).attr(Le,[h.ATK,h.DEF,h.ACC],1,!0),new B(A.LOW_SWEEP,L.FIGHTING,u.PHYSICAL,65,100,20,100,0,5).attr(Le,[h.SPD],-1),new B(A.ACID_SPRAY,L.POISON,u.SPECIAL,40,100,20,100,0,5).attr(Le,[h.SPDEF],-2).ballBombMove(),new B(A.FOUL_PLAY,L.DARK,u.PHYSICAL,95,100,15,-1,0,5).attr(hH),new ne(A.SIMPLE_BEAM,L.NORMAL,100,15,-1,0,5).attr(ID,O.SIMPLE).reflectable(),new ne(A.ENTRAINMENT,L.NORMAL,100,15,-1,0,5).attr(s1).reflectable(),new ne(A.AFTER_YOU,L.NORMAL,-1,15,-1,0,5).ignoresProtect().ignoresSubstitute().target(ee.NEAR_OTHER).condition(hs).condition((t,E,R)=>!E.turnData.acted).attr(U1),new B(A.ROUND,L.NORMAL,u.SPECIAL,60,100,15,-1,0,5).attr(cH).attr(HH).soundBased(),new B(A.ECHOED_VOICE,L.NORMAL,u.SPECIAL,40,100,15,-1,0,5).attr(oH,5,!1).soundBased(),new B(A.CHIP_AWAY,L.NORMAL,u.PHYSICAL,70,100,20,-1,0,5).attr(FN),new B(A.CLEAR_SMOG,L.POISON,u.SPECIAL,50,-1,15,-1,0,5).attr($T,!1),new B(A.STORED_POWER,L.PSYCHIC,u.SPECIAL,20,100,10,-1,0,5).attr(WU),new ne(A.QUICK_GUARD,L.FIGHTING,-1,15,-1,3,5).target(ee.USER_SIDE).attr(dE,oe.QUICK_GUARD,1,!0,!0).condition(BR),new we(A.ALLY_SWITCH,L.PSYCHIC,-1,15,-1,2,5).ignoresProtect().unimplemented(),new B(A.SCALD,L.WATER,u.SPECIAL,80,100,15,30,0,5).attr(fE,!1,J.FREEZE).attr(fE,!0,J.FREEZE).attr(Ve,J.BURN),new we(A.SHELL_SMASH,L.NORMAL,-1,15,-1,0,5).attr(Le,[h.ATK,h.SPATK,h.SPD],2,!0).attr(Le,[h.DEF,h.SPDEF],-1,!0),new ne(A.HEAL_PULSE,L.PSYCHIC,-1,10,-1,0,5).attr(Vt,.5,!1,!1).pulseMove().triageMove().reflectable(),new B(A.HEX,L.GHOST,u.SPECIAL,65,100,10,-1,0,5).attr(jA,(t,E,R)=>E.status||E.hasAbility(O.COMATOSE)?2:1),new pt(A.SKY_DROP,L.FLYING,u.PHYSICAL,60,100,10,-1,0,5).chargeText(D.t("moveTriggers:tookTargetIntoSky",{pokemonName:"{USER}",targetName:"{TARGET}"})).chargeAttr(YI,Y.FLYING).condition(OL).condition((t,E,R)=>!E.getTag(Y.SUBSTITUTE)).partial(),new we(A.SHIFT_GEAR,L.STEEL,-1,10,-1,0,5).attr(Le,[h.ATK],1,!0).attr(Le,[h.SPD],2,!0),new B(A.CIRCLE_THROW,L.FIGHTING,u.PHYSICAL,60,90,10,-1,-6,5).attr(oR,!1,ZA.FORCE_SWITCH).hidesTarget(),new B(A.INCINERATE,L.FIRE,u.SPECIAL,60,100,15,-1,0,5).target(ee.ALL_NEAR_ENEMIES).attr(MU,!0).edgeCase(),new ne(A.QUASH,L.DARK,100,15,-1,0,5).condition(hs).condition((t,E,R)=>!E.turnData.acted).attr(D1),new B(A.ACROBATICS,L.FLYING,u.PHYSICAL,55,100,15,-1,0,5).attr(jA,(t,E,R)=>Math.max(1,2-.2*t.getHeldItems().filter(I=>I.isTransferable).reduce((I,N)=>I+N.stackCount,0))),new ne(A.REFLECT_TYPE,L.NORMAL,-1,15,-1,0,5).ignoresSubstitute().attr(E1),new B(A.RETALIATE,L.NORMAL,u.PHYSICAL,70,100,5,-1,0,5).attr(jA,(t,E,R)=>{const I=s.currentBattle.turn,N=s.currentBattle.playerFaintsHistory[s.currentBattle.playerFaintsHistory.length-1],S=s.currentBattle.enemyFaintsHistory[s.currentBattle.enemyFaintsHistory.length-1];return N!==void 0&&I-N.turn===1&&t.isPlayer()||S!==void 0&&I-S.turn===1&&!t.isPlayer()?2:1}),new B(A.FINAL_GAMBIT,L.FIGHTING,u.SPECIAL,-1,100,5,-1,0,5).attr(qu).attr(Os),new ne(A.BESTOW,L.NORMAL,-1,15,-1,0,5).ignoresProtect().ignoresSubstitute().unimplemented(),new B(A.INFERNO,L.FIRE,u.SPECIAL,100,50,5,100,0,5).attr(Ve,J.BURN),new B(A.WATER_PLEDGE,L.WATER,u.SPECIAL,80,100,10,-1,0,5).attr(QT).attr(tn).attr(en).attr(IS).attr(aL,oe.WATER_FIRE_PLEDGE,A.FIRE_PLEDGE,!0).attr(aL,oe.GRASS_WATER_PLEDGE,A.GRASS_PLEDGE).attr(GN,!0),new B(A.FIRE_PLEDGE,L.FIRE,u.SPECIAL,80,100,10,-1,0,5).attr(QT).attr(tn).attr(en).attr(IS).attr(aL,oe.FIRE_GRASS_PLEDGE,A.GRASS_PLEDGE).attr(aL,oe.WATER_FIRE_PLEDGE,A.WATER_PLEDGE,!0).attr(GN,!0),new B(A.GRASS_PLEDGE,L.GRASS,u.SPECIAL,80,100,10,-1,0,5).attr(QT).attr(tn).attr(en).attr(IS).attr(aL,oe.GRASS_WATER_PLEDGE,A.WATER_PLEDGE).attr(aL,oe.FIRE_GRASS_PLEDGE,A.FIRE_PLEDGE).attr(GN,!0),new B(A.VOLT_SWITCH,L.ELECTRIC,u.SPECIAL,70,100,20,-1,0,5).attr(oR,!0),new B(A.STRUGGLE_BUG,L.BUG,u.SPECIAL,50,100,20,100,0,5).attr(Le,[h.SPATK],-1).target(ee.ALL_NEAR_ENEMIES),new B(A.BULLDOZE,L.GROUND,u.PHYSICAL,60,100,20,100,0,5).attr(Le,[h.SPD],-1).attr(jA,(t,E,R)=>s.arena.getTerrainType()===$e.GRASSY&&E.isGrounded()?.5:1).makesContact(!1).target(ee.ALL_NEAR_OTHERS),new B(A.FROST_BREATH,L.ICE,u.SPECIAL,60,90,10,-1,0,5).attr(nI),new B(A.DRAGON_TAIL,L.DRAGON,u.PHYSICAL,60,90,10,-1,-6,5).attr(oR,!1,ZA.FORCE_SWITCH).hidesTarget(),new we(A.WORK_UP,L.NORMAL,-1,30,-1,0,5).attr(Le,[h.ATK,h.SPATK],1,!0),new B(A.ELECTROWEB,L.ELECTRIC,u.SPECIAL,55,95,15,100,0,5).attr(Le,[h.SPD],-1).target(ee.ALL_NEAR_ENEMIES),new B(A.WILD_CHARGE,L.ELECTRIC,u.PHYSICAL,90,100,15,-1,0,5).attr(rR).recklessMove(),new B(A.DRILL_RUN,L.GROUND,u.PHYSICAL,80,95,10,-1,0,5).attr(hE),new B(A.DUAL_CHOP,L.DRAGON,u.PHYSICAL,40,90,15,-1,0,5).attr(vA,_E._2),new B(A.HEART_STAMP,L.PSYCHIC,u.PHYSICAL,60,100,25,30,0,5).attr(VA),new B(A.HORN_LEECH,L.GRASS,u.PHYSICAL,75,100,10,-1,0,5).attr(AR).triageMove(),new B(A.SACRED_SWORD,L.FIGHTING,u.PHYSICAL,90,100,15,-1,0,5).attr(FN).slicingMove(),new B(A.RAZOR_SHELL,L.WATER,u.PHYSICAL,75,95,10,50,0,5).attr(Le,[h.DEF],-1).slicingMove(),new B(A.HEAT_CRASH,L.FIRE,u.PHYSICAL,-1,100,10,-1,0,5).attr(dO).attr(dU).attr(iR,Y.MINIMIZED),new B(A.LEAF_TORNADO,L.GRASS,u.SPECIAL,65,90,10,50,0,5).attr(Le,[h.ACC],-1),new B(A.STEAMROLLER,L.BUG,u.PHYSICAL,65,100,20,30,0,5).attr(dO).attr(iR,Y.MINIMIZED).attr(VA),new we(A.COTTON_GUARD,L.GRASS,-1,10,-1,0,5).attr(Le,[h.DEF],3,!0),new B(A.NIGHT_DAZE,L.DARK,u.SPECIAL,85,95,10,40,0,5).attr(Le,[h.ACC],-1),new B(A.PSYSTRIKE,L.PSYCHIC,u.SPECIAL,100,100,10,-1,0,5).attr(An),new B(A.TAIL_SLAP,L.NORMAL,u.PHYSICAL,25,85,10,-1,0,5).attr(vA),new B(A.HURRICANE,L.FLYING,u.SPECIAL,110,70,10,30,0,5).attr(wU).attr(rt).attr(XR,Y.FLYING).windMove(),new B(A.HEAD_CHARGE,L.NORMAL,u.PHYSICAL,120,100,15,-1,0,5).attr(rR).recklessMove(),new B(A.GEAR_GRIND,L.STEEL,u.PHYSICAL,50,85,15,-1,0,5).attr(vA,_E._2),new B(A.SEARING_SHOT,L.FIRE,u.SPECIAL,100,100,5,30,0,5).attr(Ve,J.BURN).ballBombMove().target(ee.ALL_NEAR_OTHERS),new B(A.TECHNO_BLAST,L.NORMAL,u.SPECIAL,120,100,5,-1,0,5).attr(YH),new B(A.RELIC_SONG,L.NORMAL,u.SPECIAL,75,100,10,10,0,5).attr(Ve,J.SLEEP).soundBased().target(ee.ALL_NEAR_ENEMIES),new B(A.SECRET_SWORD,L.FIGHTING,u.SPECIAL,85,100,10,-1,0,5).attr(An).slicingMove(),new B(A.GLACIATE,L.ICE,u.SPECIAL,65,95,10,100,0,5).attr(Le,[h.SPD],-1).target(ee.ALL_NEAR_ENEMIES),new B(A.BOLT_STRIKE,L.ELECTRIC,u.PHYSICAL,130,85,5,20,0,5).attr(Ve,J.PARALYSIS),new B(A.BLUE_FLARE,L.FIRE,u.SPECIAL,130,85,5,20,0,5).attr(Ve,J.BURN),new B(A.FIERY_DANCE,L.FIRE,u.SPECIAL,80,100,10,50,0,5).attr(Le,[h.SPATK],1,!0).danceMove(),new pt(A.FREEZE_SHOCK,L.ICE,u.PHYSICAL,140,90,5,30,0,5).chargeText(D.t("moveTriggers:becameCloakedInFreezingLight",{pokemonName:"{USER}"})).attr(Ve,J.PARALYSIS).makesContact(!1),new pt(A.ICE_BURN,L.ICE,u.SPECIAL,140,90,5,30,0,5).chargeText(D.t("moveTriggers:becameCloakedInFreezingAir",{pokemonName:"{USER}"})).attr(Ve,J.BURN),new B(A.SNARL,L.DARK,u.SPECIAL,55,95,15,100,0,5).attr(Le,[h.SPATK],-1).soundBased().target(ee.ALL_NEAR_ENEMIES),new B(A.ICICLE_CRASH,L.ICE,u.PHYSICAL,85,90,10,30,0,5).attr(VA).makesContact(!1),new B(A.V_CREATE,L.FIRE,u.PHYSICAL,180,95,5,-1,0,5).attr(Le,[h.DEF,h.SPDEF,h.SPD],-1,!0),new B(A.FUSION_FLARE,L.FIRE,u.SPECIAL,100,100,5,-1,0,5).attr(fE,!0,J.FREEZE).attr(gU,A.FUSION_BOLT),new B(A.FUSION_BOLT,L.ELECTRIC,u.PHYSICAL,100,100,5,-1,0,5).attr(gU,A.FUSION_FLARE).makesContact(!1),new B(A.FLYING_PRESS,L.FIGHTING,u.PHYSICAL,100,95,10,-1,0,6).attr(dO).attr(ZH).attr(iR,Y.MINIMIZED).condition(OL),new ne(A.MAT_BLOCK,L.FIGHTING,-1,10,-1,0,6).target(ee.USER_SIDE).attr(dE,oe.MAT_BLOCK,1,!0,!0).condition(new Rn).condition(BR),new B(A.BELCH,L.POISON,u.SPECIAL,120,90,10,-1,0,6).condition((t,E,R)=>t.battleData.hasEatenBerry),new ne(A.ROTOTILLER,L.GROUND,-1,10,-1,0,6).target(ee.ALL).condition((t,E,R)=>[...s.getEnemyParty(),...s.getPlayerParty()].some(I=>I.isOfType(L.GRASS)&&I.isGrounded())).attr(Le,[h.ATK,h.SPATK],1,!1,{condition:r((t,E,R)=>E.isOfType(L.GRASS)&&E.isGrounded(),"condition")}),new ne(A.STICKY_WEB,L.BUG,-1,20,-1,0,6).attr(BL,oe.STICKY_WEB).target(ee.ENEMY_SIDE).reflectable(),new B(A.FELL_STINGER,L.BUG,u.PHYSICAL,50,100,25,-1,0,6).attr(HU,[h.ATK],3,!0),new pt(A.PHANTOM_FORCE,L.GHOST,u.PHYSICAL,90,100,10,-1,0,6).chargeText(D.t("moveTriggers:vanishedInstantly",{pokemonName:"{USER}"})).chargeAttr(YI,Y.HIDDEN).ignoresProtect(),new ne(A.TRICK_OR_TREAT,L.GHOST,100,20,-1,0,6).attr(ED,L.GHOST).reflectable(),new ne(A.NOBLE_ROAR,L.NORMAL,100,30,-1,0,6).attr(Le,[h.ATK,h.SPATK],-1).soundBased().reflectable(),new ne(A.ION_DELUGE,L.ELECTRIC,-1,25,-1,1,6).attr(dE,oe.ION_DELUGE).target(ee.BOTH_SIDES),new B(A.PARABOLIC_CHARGE,L.ELECTRIC,u.SPECIAL,65,100,20,-1,0,6).attr(AR).target(ee.ALL_NEAR_OTHERS).triageMove(),new ne(A.FORESTS_CURSE,L.GRASS,100,20,-1,0,6).attr(ED,L.GRASS).reflectable(),new B(A.PETAL_BLIZZARD,L.GRASS,u.PHYSICAL,90,100,15,-1,0,6).windMove().makesContact(!1).target(ee.ALL_NEAR_OTHERS),new B(A.FREEZE_DRY,L.ICE,u.SPECIAL,70,100,20,10,0,6).attr(Ve,J.FREEZE).attr(kH),new B(A.DISARMING_VOICE,L.FAIRY,u.SPECIAL,40,-1,15,-1,0,6).soundBased().target(ee.ALL_NEAR_ENEMIES),new ne(A.PARTING_SHOT,L.DARK,100,20,-1,0,6).attr(Le,[h.ATK,h.SPATK],-1,!1,{trigger:YR.PRE_APPLY}).attr(oR,!0).soundBased().reflectable(),new ne(A.TOPSY_TURVY,L.DARK,-1,20,-1,0,6).attr(nH).reflectable(),new B(A.DRAINING_KISS,L.FAIRY,u.SPECIAL,50,100,10,-1,0,6).attr(AR,.75).makesContact().triageMove(),new ne(A.CRAFTY_SHIELD,L.FAIRY,-1,10,-1,3,6).target(ee.USER_SIDE).attr(dE,oe.CRAFTY_SHIELD,1,!0,!0).condition(BR),new ne(A.FLOWER_SHIELD,L.FAIRY,-1,10,-1,0,6).target(ee.ALL).attr(Le,[h.DEF],1,!1,{condition:r((t,E,R)=>E.getTypes().includes(L.GRASS)&&!E.getTag(Es),"condition")}),new ne(A.GRASSY_TERRAIN,L.GRASS,-1,10,-1,0,6).attr(SN,$e.GRASSY).target(ee.BOTH_SIDES),new ne(A.MISTY_TERRAIN,L.FAIRY,-1,10,-1,0,6).attr(SN,$e.MISTY).target(ee.BOTH_SIDES),new ne(A.ELECTRIFY,L.ELECTRIC,-1,20,-1,0,6).attr(TA,Y.ELECTRIFIED,!1,!0),new B(A.PLAY_ROUGH,L.FAIRY,u.PHYSICAL,90,90,10,10,0,6).attr(Le,[h.ATK],-1),new B(A.FAIRY_WIND,L.FAIRY,u.SPECIAL,40,100,30,-1,0,6).windMove(),new B(A.MOONBLAST,L.FAIRY,u.SPECIAL,95,100,15,30,0,6).attr(Le,[h.SPATK],-1),new B(A.BOOMBURST,L.NORMAL,u.SPECIAL,140,100,10,-1,0,6).soundBased().target(ee.ALL_NEAR_OTHERS),new ne(A.FAIRY_LOCK,L.FAIRY,-1,10,-1,0,6).ignoresSubstitute().ignoresProtect().target(ee.BOTH_SIDES).attr(dE,oe.FAIRY_LOCK,2,!0),new we(A.KINGS_SHIELD,L.STEEL,-1,10,-1,4,6).attr(IO,Y.KINGS_SHIELD).condition(BR),new ne(A.PLAY_NICE,L.NORMAL,-1,20,-1,0,6).attr(Le,[h.ATK],-1).ignoresSubstitute().reflectable(),new ne(A.CONFIDE,L.NORMAL,-1,20,-1,0,6).attr(Le,[h.SPATK],-1).soundBased().reflectable(),new B(A.DIAMOND_STORM,L.ROCK,u.PHYSICAL,100,95,5,50,0,6).attr(Le,[h.DEF],2,!0,{firstTargetOnly:!0}).makesContact(!1).target(ee.ALL_NEAR_ENEMIES),new B(A.STEAM_ERUPTION,L.WATER,u.SPECIAL,110,95,5,30,0,6).attr(fE,!0,J.FREEZE).attr(fE,!1,J.FREEZE).attr(Ve,J.BURN),new B(A.HYPERSPACE_HOLE,L.PSYCHIC,u.SPECIAL,80,-1,5,-1,0,6).ignoresProtect().ignoresSubstitute(),new B(A.WATER_SHURIKEN,L.WATER,u.SPECIAL,15,100,20,-1,1,6).attr(vA).attr(GH).attr(OH),new B(A.MYSTICAL_FIRE,L.FIRE,u.SPECIAL,75,100,10,100,0,6).attr(Le,[h.SPATK],-1),new we(A.SPIKY_SHIELD,L.GRASS,-1,10,-1,4,6).attr(IO,Y.SPIKY_SHIELD).condition(BR),new ne(A.AROMATIC_MIST,L.FAIRY,-1,20,-1,0,6).attr(Le,[h.SPDEF],1).ignoresSubstitute().condition(hs).target(ee.NEAR_ALLY),new ne(A.EERIE_IMPULSE,L.ELECTRIC,100,15,-1,0,6).attr(Le,[h.SPATK],-2).reflectable(),new ne(A.VENOM_DRENCH,L.POISON,100,20,-1,0,6).attr(Le,[h.ATK,h.SPATK,h.SPD],-1,!1,{condition:r((t,E,R)=>{var I,N;return((I=E.status)==null?void 0:I.effect)===J.POISON||((N=E.status)==null?void 0:N.effect)===J.TOXIC},"condition")}).target(ee.ALL_NEAR_ENEMIES).reflectable(),new ne(A.POWDER,L.BUG,100,20,-1,1,6).attr(TA,Y.POWDER,!1,!0).ignoresSubstitute().powderMove().reflectable(),new Ju(A.GEOMANCY,L.FAIRY,-1,10,-1,0,6).chargeText(D.t("moveTriggers:isChargingPower",{pokemonName:"{USER}"})).attr(Le,[h.SPATK,h.SPDEF,h.SPD],2,!0),new ne(A.MAGNETIC_FLUX,L.ELECTRIC,-1,20,-1,0,6).attr(Le,[h.DEF,h.SPDEF],1,!1,{condition:r((t,E,R)=>!![O.PLUS,O.MINUS].find(I=>E.hasAbility(I,!1)),"condition")}).ignoresSubstitute().target(ee.USER_AND_ALLIES).condition((t,E,R)=>!![t,t.getAlly()].filter(I=>I==null?void 0:I.isActive()).find(I=>!![O.PLUS,O.MINUS].find(N=>I==null?void 0:I.hasAbility(N,!1)))),new ne(A.HAPPY_HOUR,L.NORMAL,-1,30,-1,0,6).attr(dE,oe.HAPPY_HOUR,null,!0).target(ee.USER_SIDE),new ne(A.ELECTRIC_TERRAIN,L.ELECTRIC,-1,10,-1,0,6).attr(SN,$e.ELECTRIC).target(ee.BOTH_SIDES),new B(A.DAZZLING_GLEAM,L.FAIRY,u.SPECIAL,80,100,10,-1,0,6).target(ee.ALL_NEAR_ENEMIES),new we(A.CELEBRATE,L.NORMAL,-1,40,-1,0,6).attr(AH),new ne(A.HOLD_HANDS,L.NORMAL,-1,40,-1,0,6).ignoresSubstitute().target(ee.NEAR_ALLY),new ne(A.BABY_DOLL_EYES,L.FAIRY,100,30,-1,1,6).attr(Le,[h.ATK],-1).reflectable(),new B(A.NUZZLE,L.ELECTRIC,u.PHYSICAL,20,100,20,100,0,6).attr(Ve,J.PARALYSIS),new B(A.HOLD_BACK,L.NORMAL,u.PHYSICAL,40,100,40,-1,0,6).attr(SU),new B(A.INFESTATION,L.BUG,u.SPECIAL,20,100,20,-1,0,6).makesContact().attr(UO,Y.INFESTATION),new B(A.POWER_UP_PUNCH,L.FIGHTING,u.PHYSICAL,40,100,20,100,0,6).attr(Le,[h.ATK],1,!0).punchingMove(),new B(A.OBLIVION_WING,L.FLYING,u.SPECIAL,80,100,10,-1,0,6).attr(AR,.75).triageMove(),new B(A.THOUSAND_ARROWS,L.GROUND,u.PHYSICAL,90,100,10,-1,0,6).attr(kU).attr(JU).attr(XR,Y.FLYING).attr(XR,Y.FLOATING).attr(TA,Y.INTERRUPTED).attr(WI,[Y.FLYING,Y.FLOATING,Y.TELEKINESIS]).makesContact(!1).target(ee.ALL_NEAR_ENEMIES),new B(A.THOUSAND_WAVES,L.GROUND,u.PHYSICAL,90,100,10,-1,0,6).attr(TA,Y.TRAPPED,!1,!1,1,1,!0).makesContact(!1).target(ee.ALL_NEAR_ENEMIES),new B(A.LANDS_WRATH,L.GROUND,u.PHYSICAL,90,100,10,-1,0,6).makesContact(!1).target(ee.ALL_NEAR_ENEMIES),new B(A.LIGHT_OF_RUIN,L.FAIRY,u.SPECIAL,140,90,5,-1,0,6).attr(rR,!1,.5).recklessMove(),new B(A.ORIGIN_PULSE,L.WATER,u.SPECIAL,110,85,10,-1,0,6).pulseMove().target(ee.ALL_NEAR_ENEMIES),new B(A.PRECIPICE_BLADES,L.GROUND,u.PHYSICAL,120,85,10,-1,0,6).makesContact(!1).target(ee.ALL_NEAR_ENEMIES),new B(A.DRAGON_ASCENT,L.FLYING,u.PHYSICAL,120,100,5,-1,0,6).attr(Le,[h.DEF,h.SPDEF],-1,!0),new B(A.HYPERSPACE_FURY,L.DARK,u.PHYSICAL,100,-1,5,-1,0,6).attr(Le,[h.DEF],-1,!0).ignoresSubstitute().makesContact(!1).ignoresProtect(),new B(A.BREAKNECK_BLITZ__PHYSICAL,L.NORMAL,u.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.BREAKNECK_BLITZ__SPECIAL,L.NORMAL,u.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.ALL_OUT_PUMMELING__PHYSICAL,L.FIGHTING,u.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.ALL_OUT_PUMMELING__SPECIAL,L.FIGHTING,u.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.SUPERSONIC_SKYSTRIKE__PHYSICAL,L.FLYING,u.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.SUPERSONIC_SKYSTRIKE__SPECIAL,L.FLYING,u.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.ACID_DOWNPOUR__PHYSICAL,L.POISON,u.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.ACID_DOWNPOUR__SPECIAL,L.POISON,u.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.TECTONIC_RAGE__PHYSICAL,L.GROUND,u.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.TECTONIC_RAGE__SPECIAL,L.GROUND,u.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.CONTINENTAL_CRUSH__PHYSICAL,L.ROCK,u.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.CONTINENTAL_CRUSH__SPECIAL,L.ROCK,u.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.SAVAGE_SPIN_OUT__PHYSICAL,L.BUG,u.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.SAVAGE_SPIN_OUT__SPECIAL,L.BUG,u.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.NEVER_ENDING_NIGHTMARE__PHYSICAL,L.GHOST,u.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.NEVER_ENDING_NIGHTMARE__SPECIAL,L.GHOST,u.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.CORKSCREW_CRASH__PHYSICAL,L.STEEL,u.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.CORKSCREW_CRASH__SPECIAL,L.STEEL,u.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.INFERNO_OVERDRIVE__PHYSICAL,L.FIRE,u.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.INFERNO_OVERDRIVE__SPECIAL,L.FIRE,u.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.HYDRO_VORTEX__PHYSICAL,L.WATER,u.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.HYDRO_VORTEX__SPECIAL,L.WATER,u.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.BLOOM_DOOM__PHYSICAL,L.GRASS,u.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.BLOOM_DOOM__SPECIAL,L.GRASS,u.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.GIGAVOLT_HAVOC__PHYSICAL,L.ELECTRIC,u.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.GIGAVOLT_HAVOC__SPECIAL,L.ELECTRIC,u.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.SHATTERED_PSYCHE__PHYSICAL,L.PSYCHIC,u.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.SHATTERED_PSYCHE__SPECIAL,L.PSYCHIC,u.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.SUBZERO_SLAMMER__PHYSICAL,L.ICE,u.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.SUBZERO_SLAMMER__SPECIAL,L.ICE,u.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.DEVASTATING_DRAKE__PHYSICAL,L.DRAGON,u.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.DEVASTATING_DRAKE__SPECIAL,L.DRAGON,u.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.BLACK_HOLE_ECLIPSE__PHYSICAL,L.DARK,u.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.BLACK_HOLE_ECLIPSE__SPECIAL,L.DARK,u.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.TWINKLE_TACKLE__PHYSICAL,L.FAIRY,u.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.TWINKLE_TACKLE__SPECIAL,L.FAIRY,u.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.CATASTROPIKA,L.ELECTRIC,u.PHYSICAL,210,-1,1,-1,0,7).unimplemented(),new we(A.SHORE_UP,L.GROUND,-1,5,-1,0,7).attr(tH).triageMove(),new B(A.FIRST_IMPRESSION,L.BUG,u.PHYSICAL,90,100,10,-1,2,7).condition(new Rn),new we(A.BANEFUL_BUNKER,L.POISON,-1,10,-1,4,7).attr(IO,Y.BANEFUL_BUNKER).condition(BR),new B(A.SPIRIT_SHACKLE,L.GHOST,u.PHYSICAL,80,100,10,100,0,7).attr(TA,Y.TRAPPED,!1,!1,1,1,!0).makesContact(!1),new B(A.DARKEST_LARIAT,L.DARK,u.PHYSICAL,85,100,10,-1,0,7).attr(FN),new B(A.SPARKLING_ARIA,L.WATER,u.SPECIAL,90,100,10,100,0,7).attr(fE,!1,J.BURN).soundBased().target(ee.ALL_NEAR_OTHERS),new B(A.ICE_HAMMER,L.ICE,u.PHYSICAL,100,90,10,-1,0,7).attr(Le,[h.SPD],-1,!0).punchingMove(),new ne(A.FLORAL_HEALING,L.FAIRY,-1,10,-1,0,7).attr(RH,.5,2/3,!0,!1,(t,E,R)=>{var I;return((I=s.arena.terrain)==null?void 0:I.terrainType)===$e.GRASSY}).triageMove().reflectable(),new B(A.HIGH_HORSEPOWER,L.GROUND,u.PHYSICAL,95,95,10,-1,0,7),new ne(A.STRENGTH_SAP,L.GRASS,100,10,-1,0,7).attr(AR,null,h.ATK).attr(Le,[h.ATK],-1).condition((t,E,R)=>E.getStatStage(h.ATK)>-6).triageMove().reflectable(),new pt(A.SOLAR_BLADE,L.GRASS,u.PHYSICAL,125,100,10,-1,0,7).chargeText(D.t("moveTriggers:isGlowing",{pokemonName:"{USER}"})).chargeAttr(XT,[X.SUNNY,X.HARSH_SUN]).attr(YU).slicingMove(),new B(A.LEAFAGE,L.GRASS,u.PHYSICAL,40,100,40,-1,0,7).makesContact(!1),new ne(A.SPOTLIGHT,L.NORMAL,-1,15,-1,3,7).attr(TA,Y.CENTER_OF_ATTENTION,!1).condition(hs).reflectable(),new ne(A.TOXIC_THREAD,L.POISON,100,20,-1,0,7).attr(Ve,J.POISON).attr(Le,[h.SPD],-1).reflectable(),new we(A.LASER_FOCUS,L.NORMAL,-1,30,-1,0,7).attr(TA,Y.ALWAYS_CRIT,!0,!1),new ne(A.GEAR_UP,L.STEEL,-1,20,-1,0,7).attr(Le,[h.ATK,h.SPATK],1,!1,{condition:r((t,E,R)=>!![O.PLUS,O.MINUS].find(I=>E.hasAbility(I,!1)),"condition")}).ignoresSubstitute().target(ee.USER_AND_ALLIES).condition((t,E,R)=>!![t,t.getAlly()].filter(I=>I==null?void 0:I.isActive()).find(I=>!![O.PLUS,O.MINUS].find(N=>I==null?void 0:I.hasAbility(N,!1)))),new B(A.THROAT_CHOP,L.DARK,u.PHYSICAL,80,100,15,100,0,7).attr(TA,Y.THROAT_CHOPPED),new B(A.POLLEN_PUFF,L.BUG,u.SPECIAL,90,100,15,-1,0,7).attr(bU).attr(oU,.5,!0,!1).ballBombMove(),new B(A.ANCHOR_SHOT,L.STEEL,u.PHYSICAL,80,100,20,100,0,7).attr(TA,Y.TRAPPED,!1,!1,1,1,!0),new ne(A.PSYCHIC_TERRAIN,L.PSYCHIC,-1,10,-1,0,7).attr(SN,$e.PSYCHIC).target(ee.BOTH_SIDES),new B(A.LUNGE,L.BUG,u.PHYSICAL,80,100,15,100,0,7).attr(Le,[h.ATK],-1),new B(A.FIRE_LASH,L.FIRE,u.PHYSICAL,80,100,15,100,0,7).attr(Le,[h.DEF],-1),new B(A.POWER_TRIP,L.DARK,u.PHYSICAL,20,100,10,-1,0,7).attr(WU),new B(A.BURN_UP,L.FIRE,u.SPECIAL,130,100,5,-1,0,7).condition(t=>t.getTypes(!0).includes(L.FIRE)).attr(fE,!0,J.FREEZE).attr(TA,Y.BURNED_UP,!0,!1).attr(eD,L.FIRE,t=>{s.queueMessage(D.t("moveTriggers:burnedItselfOut",{pokemonName:Z(t)}))}),new ne(A.SPEED_SWAP,L.PSYCHIC,-1,10,-1,0,7).attr(a1,h.SPD).ignoresSubstitute(),new B(A.SMART_STRIKE,L.STEEL,u.PHYSICAL,70,-1,10,-1,0,7),new ne(A.PURIFY,L.POISON,-1,20,-1,0,7).condition((t,E,R)=>E.status?tV(E.status.effect):!1).attr(Vt,.5).attr(fE,!1,_T()).triageMove().reflectable(),new B(A.REVELATION_DANCE,L.NORMAL,u.SPECIAL,90,100,15,-1,0,7).danceMove().attr(xH),new B(A.CORE_ENFORCER,L.DRAGON,u.SPECIAL,100,100,10,-1,0,7).target(ee.ALL_NEAR_ENEMIES).attr(T1),new B(A.TROP_KICK,L.GRASS,u.PHYSICAL,70,100,15,100,0,7).attr(Le,[h.ATK],-1),new ne(A.INSTRUCT,L.PSYCHIC,-1,15,-1,0,7).ignoresSubstitute().attr(O1).edgeCase(),new B(A.BEAK_BLAST,L.FLYING,u.PHYSICAL,100,100,15,-1,-3,7).attr(yS).ballBombMove().makesContact(!1),new B(A.CLANGING_SCALES,L.DRAGON,u.SPECIAL,110,100,5,-1,0,7).attr(Le,[h.DEF],-1,!0,{firstTargetOnly:!0}).soundBased().target(ee.ALL_NEAR_ENEMIES),new B(A.DRAGON_HAMMER,L.DRAGON,u.PHYSICAL,90,100,15,-1,0,7),new B(A.BRUTAL_SWING,L.DARK,u.PHYSICAL,60,100,20,-1,0,7).target(ee.ALL_NEAR_OTHERS),new ne(A.AURORA_VEIL,L.ICE,-1,20,-1,0,7).condition((t,E,R)=>{var I,N,S;return(((I=s.arena.weather)==null?void 0:I.weatherType)===X.HAIL||((N=s.arena.weather)==null?void 0:N.weatherType)===X.SNOW)&&!((S=s.arena.weather)!=null&&S.isEffectSuppressed())}).attr(dE,oe.AURORA_VEIL,5,!0).target(ee.USER_SIDE),new B(A.SINISTER_ARROW_RAID,L.GHOST,u.PHYSICAL,180,-1,1,-1,0,7).unimplemented().makesContact(!1).edgeCase(),new B(A.MALICIOUS_MOONSAULT,L.DARK,u.PHYSICAL,180,-1,1,-1,0,7).unimplemented().attr(dO).attr(XR,Y.MINIMIZED,!0).edgeCase(),new B(A.OCEANIC_OPERETTA,L.WATER,u.SPECIAL,195,-1,1,-1,0,7).unimplemented().edgeCase(),new B(A.GUARDIAN_OF_ALOLA,L.FAIRY,u.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new B(A.SOUL_STEALING_7_STAR_STRIKE,L.GHOST,u.PHYSICAL,195,-1,1,-1,0,7).unimplemented(),new B(A.STOKED_SPARKSURFER,L.ELECTRIC,u.SPECIAL,175,-1,1,100,0,7).unimplemented().edgeCase(),new B(A.PULVERIZING_PANCAKE,L.NORMAL,u.PHYSICAL,210,-1,1,-1,0,7).unimplemented().edgeCase(),new we(A.EXTREME_EVOBOOST,L.NORMAL,-1,1,-1,0,7).unimplemented().attr(Le,[h.ATK,h.DEF,h.SPATK,h.SPDEF,h.SPD],2,!0),new B(A.GENESIS_SUPERNOVA,L.PSYCHIC,u.SPECIAL,185,-1,1,100,0,7).unimplemented().attr(SN,$e.PSYCHIC),new B(A.SHELL_TRAP,L.FIRE,u.SPECIAL,150,100,5,-1,-3,7).attr(OU,Y.SHELL_TRAP).target(ee.ALL_NEAR_ENEMIES).condition((t,E,R)=>{var I;return((I=t.getTag(Wl))==null?void 0:I.activated)===!0}),new B(A.FLEUR_CANNON,L.FAIRY,u.SPECIAL,130,90,5,-1,0,7).attr(Le,[h.SPATK],-2,!0),new B(A.PSYCHIC_FANGS,L.PSYCHIC,u.PHYSICAL,85,100,10,-1,0,7).bitingMove().attr(ks),new B(A.STOMPING_TANTRUM,L.GROUND,u.PHYSICAL,75,100,10,-1,0,7).attr(jA,(t,E,R)=>{var I,N;return((I=t.getLastXMoves(2)[1])==null?void 0:I.result)===EE.MISS||((N=t.getLastXMoves(2)[1])==null?void 0:N.result)===EE.FAIL?2:1}),new B(A.SHADOW_BONE,L.GHOST,u.PHYSICAL,85,100,10,20,0,7).attr(Le,[h.DEF],-1).makesContact(!1),new B(A.ACCELEROCK,L.ROCK,u.PHYSICAL,40,100,20,-1,1,7),new B(A.LIQUIDATION,L.WATER,u.PHYSICAL,85,100,10,20,0,7).attr(Le,[h.DEF],-1),new B(A.PRISMATIC_LASER,L.PSYCHIC,u.SPECIAL,160,100,10,-1,0,7).attr(kR),new B(A.SPECTRAL_THIEF,L.GHOST,u.PHYSICAL,90,100,10,-1,0,7).attr(BH).ignoresSubstitute(),new B(A.SUNSTEEL_STRIKE,L.STEEL,u.PHYSICAL,100,100,5,-1,0,7).ignoresAbilities(),new B(A.MOONGEIST_BEAM,L.GHOST,u.SPECIAL,100,100,5,-1,0,7).ignoresAbilities(),new ne(A.TEARFUL_LOOK,L.NORMAL,-1,20,-1,0,7).attr(Le,[h.ATK,h.SPATK],-1).reflectable(),new B(A.ZING_ZAP,L.ELECTRIC,u.PHYSICAL,80,100,10,30,0,7).attr(VA),new B(A.NATURES_MADNESS,L.FAIRY,u.SPECIAL,-1,90,10,-1,0,7).attr(bT),new B(A.MULTI_ATTACK,L.NORMAL,u.PHYSICAL,120,100,10,-1,0,7).attr(ZU),new B(A.TEN_MILLION_VOLT_THUNDERBOLT,L.ELECTRIC,u.SPECIAL,195,-1,1,-1,0,7).unimplemented().edgeCase(),new B(A.MIND_BLOWN,L.FIRE,u.SPECIAL,150,100,5,-1,0,7).condition(fi).attr(TU).target(ee.ALL_NEAR_OTHERS),new B(A.PLASMA_FISTS,L.ELECTRIC,u.PHYSICAL,100,100,15,-1,0,7).attr(dE,oe.ION_DELUGE,1).punchingMove(),new B(A.PHOTON_GEYSER,L.PSYCHIC,u.SPECIAL,100,100,5,-1,0,7).attr(vU).ignoresAbilities(),new B(A.LIGHT_THAT_BURNS_THE_SKY,L.PSYCHIC,u.SPECIAL,200,-1,1,-1,0,7).unimplemented().attr(vU).ignoresAbilities(),new B(A.SEARING_SUNRAZE_SMASH,L.STEEL,u.PHYSICAL,200,-1,1,-1,0,7).unimplemented().ignoresAbilities(),new B(A.MENACING_MOONRAZE_MAELSTROM,L.GHOST,u.SPECIAL,200,-1,1,-1,0,7).unimplemented().ignoresAbilities(),new B(A.LETS_SNUGGLE_FOREVER,L.FAIRY,u.PHYSICAL,190,-1,1,-1,0,7).unimplemented().edgeCase(),new B(A.SPLINTERED_STORMSHARDS,L.ROCK,u.PHYSICAL,190,-1,1,-1,0,7).unimplemented().attr(vs).makesContact(!1),new B(A.CLANGOROUS_SOULBLAZE,L.DRAGON,u.SPECIAL,185,-1,1,100,0,7).unimplemented().attr(Le,[h.ATK,h.DEF,h.SPATK,h.SPDEF,h.SPD],1,!0,{firstTargetOnly:!0}).soundBased().target(ee.ALL_NEAR_ENEMIES).edgeCase(),new B(A.ZIPPY_ZAP,L.ELECTRIC,u.PHYSICAL,50,100,15,-1,2,7).attr(nI),new B(A.SPLISHY_SPLASH,L.WATER,u.SPECIAL,90,100,15,30,0,7).attr(Ve,J.PARALYSIS).target(ee.ALL_NEAR_ENEMIES),new B(A.FLOATY_FALL,L.FLYING,u.PHYSICAL,90,95,15,30,0,7).attr(VA),new B(A.PIKA_PAPOW,L.ELECTRIC,u.SPECIAL,-1,-1,20,-1,0,7).attr(xs),new B(A.BOUNCY_BUBBLE,L.WATER,u.SPECIAL,60,100,20,-1,0,7).attr(AR,1).triageMove(),new B(A.BUZZY_BUZZ,L.ELECTRIC,u.SPECIAL,60,100,20,100,0,7).attr(Ve,J.PARALYSIS),new B(A.SIZZLY_SLIDE,L.FIRE,u.PHYSICAL,60,100,20,100,0,7).attr(Ve,J.BURN),new B(A.GLITZY_GLOW,L.PSYCHIC,u.SPECIAL,80,95,15,-1,0,7).attr(dE,oe.LIGHT_SCREEN,5,!1,!0),new B(A.BADDY_BAD,L.DARK,u.SPECIAL,80,95,15,-1,0,7).attr(dE,oe.REFLECT,5,!1,!0),new B(A.SAPPY_SEED,L.GRASS,u.PHYSICAL,100,90,10,-1,0,7).attr(QU).makesContact(!1),new B(A.FREEZY_FROST,L.ICE,u.SPECIAL,100,90,10,-1,0,7).attr($T,!0),new B(A.SPARKLY_SWIRL,L.FAIRY,u.SPECIAL,120,85,5,-1,0,7).attr(ZT,null,O.NONE),new B(A.VEEVEE_VOLLEY,L.NORMAL,u.PHYSICAL,-1,-1,20,-1,0,7).attr(xs),new B(A.DOUBLE_IRON_BASH,L.STEEL,u.PHYSICAL,60,100,5,30,0,7).attr(vA,_E._2).attr(VA).punchingMove(),new we(A.MAX_GUARD,L.NORMAL,-1,10,-1,4,8).unimplemented().attr(IO).condition(BR),new B(A.DYNAMAX_CANNON,L.DRAGON,u.SPECIAL,100,100,5,-1,0,8).attr(jA,(t,E,R)=>E.level>s.getMaxExpLevel()?1+Math.min(1,(E.level-s.getMaxExpLevel())/(s.getMaxExpLevel()*.05)):1),new B(A.SNIPE_SHOT,L.WATER,u.SPECIAL,80,100,15,-1,0,8).attr(hE).attr(GN),new B(A.JAW_LOCK,L.DARK,u.PHYSICAL,80,100,10,-1,0,8).attr(QH).bitingMove(),new we(A.STUFF_CHEEKS,L.NORMAL,-1,10,-1,0,8).attr(Hr,!0).attr(Le,[h.DEF],2,!0).condition(t=>s.findModifiers(R=>R instanceof XE,t.isPlayer()).length>0).edgeCase(),new we(A.NO_RETREAT,L.FIGHTING,-1,5,-1,0,8).attr(Le,[h.ATK,h.DEF,h.SPATK,h.SPDEF,h.SPD],1,!0).attr(TA,Y.NO_RETREAT,!0,!1).condition((t,E,R)=>{var I;return((I=t.getTag(eO))==null?void 0:I.sourceMove)!==A.NO_RETREAT}),new ne(A.TAR_SHOT,L.ROCK,100,15,-1,0,8).attr(Le,[h.SPD],-1).attr(TA,Y.TAR_SHOT,!1).reflectable(),new ne(A.MAGIC_POWDER,L.PSYCHIC,100,20,-1,0,8).attr(AD,L.PSYCHIC).powderMove().reflectable(),new B(A.DRAGON_DARTS,L.DRAGON,u.PHYSICAL,50,100,10,-1,0,8).attr(vA,_E._2).makesContact(!1).partial(),new ne(A.TEATIME,L.NORMAL,-1,10,-1,0,8).attr(Hr,!1).target(ee.ALL),new ne(A.OCTOLOCK,L.FIGHTING,100,15,-1,0,8).condition(Ki).attr(TA,Y.OCTOLOCK,!1,!0,1),new B(A.BOLT_BEAK,L.ELECTRIC,u.PHYSICAL,85,100,10,-1,0,8).attr(KU),new B(A.FISHIOUS_REND,L.WATER,u.PHYSICAL,85,100,10,-1,0,8).attr(KU).bitingMove(),new ne(A.COURT_CHANGE,L.NORMAL,100,10,-1,0,8).attr(jH,[oe.AURORA_VEIL,oe.LIGHT_SCREEN,oe.MIST,oe.REFLECT,oe.SPIKES,oe.STEALTH_ROCK,oe.STICKY_WEB,oe.TAILWIND,oe.TOXIC_SPIKES]),new B(A.MAX_FLARE,L.FIRE,u.PHYSICAL,10,-1,10,-1,0,8).target(ee.NEAR_ENEMY).unimplemented(),new B(A.MAX_FLUTTERBY,L.BUG,u.PHYSICAL,10,-1,10,-1,0,8).target(ee.NEAR_ENEMY).unimplemented(),new B(A.MAX_LIGHTNING,L.ELECTRIC,u.PHYSICAL,10,-1,10,-1,0,8).target(ee.NEAR_ENEMY).unimplemented(),new B(A.MAX_STRIKE,L.NORMAL,u.PHYSICAL,10,-1,10,-1,0,8).target(ee.NEAR_ENEMY).unimplemented(),new B(A.MAX_KNUCKLE,L.FIGHTING,u.PHYSICAL,10,-1,10,-1,0,8).target(ee.NEAR_ENEMY).unimplemented(),new B(A.MAX_PHANTASM,L.GHOST,u.PHYSICAL,10,-1,10,-1,0,8).target(ee.NEAR_ENEMY).unimplemented(),new B(A.MAX_HAILSTORM,L.ICE,u.PHYSICAL,10,-1,10,-1,0,8).target(ee.NEAR_ENEMY).unimplemented(),new B(A.MAX_OOZE,L.POISON,u.PHYSICAL,10,-1,10,-1,0,8).target(ee.NEAR_ENEMY).unimplemented(),new B(A.MAX_GEYSER,L.WATER,u.PHYSICAL,10,-1,10,-1,0,8).target(ee.NEAR_ENEMY).unimplemented(),new B(A.MAX_AIRSTREAM,L.FLYING,u.PHYSICAL,10,-1,10,-1,0,8).target(ee.NEAR_ENEMY).unimplemented(),new B(A.MAX_STARFALL,L.FAIRY,u.PHYSICAL,10,-1,10,-1,0,8).target(ee.NEAR_ENEMY).unimplemented(),new B(A.MAX_WYRMWIND,L.DRAGON,u.PHYSICAL,10,-1,10,-1,0,8).target(ee.NEAR_ENEMY).unimplemented(),new B(A.MAX_MINDSTORM,L.PSYCHIC,u.PHYSICAL,10,-1,10,-1,0,8).target(ee.NEAR_ENEMY).unimplemented(),new B(A.MAX_ROCKFALL,L.ROCK,u.PHYSICAL,10,-1,10,-1,0,8).target(ee.NEAR_ENEMY).unimplemented(),new B(A.MAX_QUAKE,L.GROUND,u.PHYSICAL,10,-1,10,-1,0,8).target(ee.NEAR_ENEMY).unimplemented(),new B(A.MAX_DARKNESS,L.DARK,u.PHYSICAL,10,-1,10,-1,0,8).target(ee.NEAR_ENEMY).unimplemented(),new B(A.MAX_OVERGROWTH,L.GRASS,u.PHYSICAL,10,-1,10,-1,0,8).target(ee.NEAR_ENEMY).unimplemented(),new B(A.MAX_STEELSPIKE,L.STEEL,u.PHYSICAL,10,-1,10,-1,0,8).target(ee.NEAR_ENEMY).unimplemented(),new we(A.CLANGOROUS_SOUL,L.DRAGON,100,5,-1,0,8).attr(JT,[h.ATK,h.DEF,h.SPATK,h.SPDEF,h.SPD],1,3).soundBased().danceMove(),new B(A.BODY_PRESS,L.FIGHTING,u.PHYSICAL,80,100,10,-1,0,8).attr(fH),new ne(A.DECORATE,L.FAIRY,-1,15,-1,0,8).attr(Le,[h.ATK,h.SPATK],2).ignoresProtect(),new B(A.DRUM_BEATING,L.GRASS,u.PHYSICAL,80,100,10,100,0,8).attr(Le,[h.SPD],-1).makesContact(!1),new B(A.SNAP_TRAP,L.GRASS,u.PHYSICAL,35,100,15,-1,0,8).attr(UO,Y.SNAP_TRAP),new B(A.PYRO_BALL,L.FIRE,u.PHYSICAL,120,90,5,10,0,8).attr(fE,!0,J.FREEZE).attr(Ve,J.BURN).ballBombMove().makesContact(!1),new B(A.BEHEMOTH_BLADE,L.STEEL,u.PHYSICAL,100,100,5,-1,0,8).slicingMove(),new B(A.BEHEMOTH_BASH,L.STEEL,u.PHYSICAL,100,100,5,-1,0,8),new B(A.AURA_WHEEL,L.ELECTRIC,u.PHYSICAL,110,100,10,100,0,8).attr(Le,[h.SPD],1,!0).makesContact(!1).attr(WH),new B(A.BREAKING_SWIPE,L.DRAGON,u.PHYSICAL,60,100,15,100,0,8).target(ee.ALL_NEAR_ENEMIES).attr(Le,[h.ATK],-1),new B(A.BRANCH_POKE,L.GRASS,u.PHYSICAL,40,100,40,-1,0,8),new B(A.OVERDRIVE,L.ELECTRIC,u.SPECIAL,80,100,10,-1,0,8).soundBased().target(ee.ALL_NEAR_ENEMIES),new B(A.APPLE_ACID,L.GRASS,u.SPECIAL,80,100,10,100,0,8).attr(Le,[h.SPDEF],-1),new B(A.GRAV_APPLE,L.GRASS,u.PHYSICAL,80,100,10,100,0,8).attr(Le,[h.DEF],-1).attr(jA,(t,E,R)=>s.arena.getTag(oe.GRAVITY)?1.5:1).makesContact(!1),new B(A.SPIRIT_BREAK,L.FAIRY,u.PHYSICAL,75,100,15,100,0,8).attr(Le,[h.SPATK],-1),new B(A.STRANGE_STEAM,L.FAIRY,u.SPECIAL,90,95,10,20,0,8).attr(rt),new ne(A.LIFE_DEW,L.WATER,-1,10,-1,0,8).attr(Vt,.25,!0,!1).target(ee.USER_AND_ALLIES).ignoresProtect(),new we(A.OBSTRUCT,L.DARK,100,10,-1,4,8).attr(IO,Y.OBSTRUCT).condition(BR),new B(A.FALSE_SURRENDER,L.DARK,u.PHYSICAL,80,-1,10,-1,0,8),new B(A.METEOR_ASSAULT,L.FIGHTING,u.PHYSICAL,150,100,5,-1,0,8).attr(kR).makesContact(!1),new B(A.ETERNABEAM,L.DRAGON,u.SPECIAL,160,90,5,-1,0,8).attr(kR),new B(A.STEEL_BEAM,L.STEEL,u.SPECIAL,140,95,5,-1,0,8).attr(TU),new B(A.EXPANDING_FORCE,L.PSYCHIC,u.SPECIAL,80,100,10,-1,0,8).attr(jA,(t,E,R)=>s.arena.getTerrainType()===$e.PSYCHIC&&t.isGrounded()?1.5:1).attr(xS,(t,E,R)=>s.arena.getTerrainType()===$e.PSYCHIC&&t.isGrounded()?ee.ALL_NEAR_ENEMIES:ee.NEAR_OTHER),new B(A.STEEL_ROLLER,L.STEEL,u.PHYSICAL,130,100,5,-1,0,8).attr(vs).condition((t,E,R)=>!!s.arena.terrain),new B(A.SCALE_SHOT,L.DRAGON,u.PHYSICAL,25,90,20,-1,0,8).attr(Le,[h.SPD],1,!0,{lastHitOnly:!0}).attr(Le,[h.DEF],-1,!0,{lastHitOnly:!0}).attr(vA).makesContact(!1),new pt(A.METEOR_BEAM,L.ROCK,u.SPECIAL,120,90,10,-1,0,8).chargeText(D.t("moveTriggers:isOverflowingWithSpacePower",{pokemonName:"{USER}"})).chargeAttr(Le,[h.SPATK],1,!0),new B(A.SHELL_SIDE_ARM,L.POISON,u.SPECIAL,90,100,10,20,0,8).attr(FH).attr(Ve,J.POISON).partial(),new B(A.MISTY_EXPLOSION,L.FAIRY,u.SPECIAL,100,100,5,-1,0,8).attr(vI).target(ee.ALL_NEAR_OTHERS).attr(jA,(t,E,R)=>s.arena.getTerrainType()===$e.MISTY&&t.isGrounded()?1.5:1).condition(fi).makesContact(!1),new B(A.GRASSY_GLIDE,L.GRASS,u.PHYSICAL,55,100,20,-1,0,8).attr(CU,(t,E,R)=>s.arena.getTerrainType()===$e.GRASSY&&t.isGrounded()),new B(A.RISING_VOLTAGE,L.ELECTRIC,u.SPECIAL,70,100,20,-1,0,8).attr(jA,(t,E,R)=>s.arena.getTerrainType()===$e.ELECTRIC&&E.isGrounded()?2:1),new B(A.TERRAIN_PULSE,L.NORMAL,u.SPECIAL,50,100,10,-1,0,8).attr(yH).attr(jA,(t,E,R)=>s.arena.getTerrainType()!==$e.NONE&&t.isGrounded()?2:1).pulseMove(),new B(A.SKITTER_SMACK,L.BUG,u.PHYSICAL,70,90,10,100,0,8).attr(Le,[h.SPATK],-1),new B(A.BURNING_JEALOUSY,L.FIRE,u.SPECIAL,70,100,5,100,0,8).attr(C1,J.BURN).target(ee.ALL_NEAR_ENEMIES),new B(A.LASH_OUT,L.DARK,u.PHYSICAL,75,100,5,-1,0,8).attr(jA,(t,E,R)=>t.turnData.statStagesDecreased?2:1),new B(A.POLTERGEIST,L.GHOST,u.PHYSICAL,110,90,5,-1,0,8).condition(oX).attr(MN,CX).makesContact(!1),new ne(A.CORROSIVE_GAS,L.POISON,100,40,-1,0,8).target(ee.ALL_NEAR_OTHERS).reflectable().unimplemented(),new ne(A.COACHING,L.FIGHTING,-1,10,-1,0,8).attr(Le,[h.ATK,h.DEF],1).target(ee.NEAR_ALLY).condition(hs),new B(A.FLIP_TURN,L.WATER,u.PHYSICAL,60,100,20,-1,0,8).attr(oR,!0),new B(A.TRIPLE_AXEL,L.ICE,u.PHYSICAL,20,90,10,-1,0,8).attr(vA,_E._3).attr(mU,3).checkAllHits(),new B(A.DUAL_WINGBEAT,L.FLYING,u.PHYSICAL,40,90,10,-1,0,8).attr(vA,_E._2),new B(A.SCORCHING_SANDS,L.GROUND,u.SPECIAL,70,100,10,30,0,8).attr(fE,!0,J.FREEZE).attr(fE,!1,J.FREEZE).attr(Ve,J.BURN),new ne(A.JUNGLE_HEALING,L.GRASS,-1,10,-1,0,8).attr(Vt,.25,!0,!1).attr(fE,!1,_T()).target(ee.USER_AND_ALLIES),new B(A.WICKED_BLOW,L.DARK,u.PHYSICAL,75,100,5,-1,0,8).attr(nI).punchingMove(),new B(A.SURGING_STRIKES,L.WATER,u.PHYSICAL,25,100,5,-1,0,8).attr(vA,_E._3).attr(nI).punchingMove(),new B(A.THUNDER_CAGE,L.ELECTRIC,u.SPECIAL,80,90,15,-1,0,8).attr(UO,Y.THUNDER_CAGE),new B(A.DRAGON_ENERGY,L.DRAGON,u.SPECIAL,150,100,5,-1,0,8).attr(zT).target(ee.ALL_NEAR_ENEMIES),new B(A.FREEZING_GLARE,L.PSYCHIC,u.SPECIAL,90,100,10,10,0,8).attr(Ve,J.FREEZE),new B(A.FIERY_WRATH,L.DARK,u.SPECIAL,90,100,10,20,0,8).attr(VA).target(ee.ALL_NEAR_ENEMIES),new B(A.THUNDEROUS_KICK,L.FIGHTING,u.PHYSICAL,90,100,10,100,0,8).attr(Le,[h.DEF],-1),new B(A.GLACIAL_LANCE,L.ICE,u.PHYSICAL,120,100,5,-1,0,8).target(ee.ALL_NEAR_ENEMIES).makesContact(!1),new B(A.ASTRAL_BARRAGE,L.GHOST,u.SPECIAL,120,100,5,-1,0,8).target(ee.ALL_NEAR_ENEMIES),new B(A.EERIE_SPELL,L.PSYCHIC,u.SPECIAL,80,100,5,100,0,8).attr(I1,3).soundBased(),new B(A.DIRE_CLAW,L.POISON,u.PHYSICAL,80,100,15,50,0,8).attr(UU,[J.POISON,J.PARALYSIS,J.SLEEP]),new B(A.PSYSHIELD_BASH,L.PSYCHIC,u.PHYSICAL,70,90,10,100,0,8).attr(Le,[h.DEF],1,!0),new we(A.POWER_SHIFT,L.NORMAL,-1,10,-1,0,8).target(ee.USER).attr(r1,h.ATK,h.DEF),new B(A.STONE_AXE,L.ROCK,u.PHYSICAL,65,90,15,100,0,8).attr(jU,oe.STEALTH_ROCK).slicingMove(),new B(A.SPRINGTIDE_STORM,L.FAIRY,u.SPECIAL,100,80,5,30,0,8).attr(Le,[h.ATK],-1).windMove().target(ee.ALL_NEAR_ENEMIES),new B(A.MYSTICAL_POWER,L.PSYCHIC,u.SPECIAL,70,90,10,100,0,8).attr(Le,[h.SPATK],1,!0),new B(A.RAGING_FURY,L.FIRE,u.PHYSICAL,120,100,10,-1,0,8).makesContact(!1).attr(bs).attr(gO,hI).attr(pO,hI).target(ee.RANDOM_NEAR_ENEMY),new B(A.WAVE_CRASH,L.WATER,u.PHYSICAL,120,100,10,-1,0,8).attr(rR,!1,.33).recklessMove(),new B(A.CHLOROBLAST,L.GRASS,u.SPECIAL,150,95,5,-1,0,8).attr(rR,!0,.5),new B(A.MOUNTAIN_GALE,L.ICE,u.PHYSICAL,100,85,10,30,0,8).makesContact(!1).attr(VA),new we(A.VICTORY_DANCE,L.FIGHTING,-1,10,-1,0,8).attr(Le,[h.ATK,h.DEF,h.SPD],1,!0).danceMove(),new B(A.HEADLONG_RUSH,L.GROUND,u.PHYSICAL,120,100,5,-1,0,8).attr(Le,[h.DEF,h.SPDEF],-1,!0).punchingMove(),new B(A.BARB_BARRAGE,L.POISON,u.PHYSICAL,60,100,10,50,0,8).makesContact(!1).attr(jA,(t,E,R)=>E.status&&(E.status.effect===J.POISON||E.status.effect===J.TOXIC)?2:1).attr(Ve,J.POISON),new B(A.ESPER_WING,L.PSYCHIC,u.SPECIAL,80,100,10,100,0,8).attr(hE).attr(Le,[h.SPD],1,!0),new B(A.BITTER_MALICE,L.GHOST,u.SPECIAL,75,100,10,100,0,8).attr(Le,[h.ATK],-1),new we(A.SHELTER,L.STEEL,-1,10,-1,0,8).attr(Le,[h.DEF],2,!0),new B(A.TRIPLE_ARROWS,L.FIGHTING,u.PHYSICAL,90,100,10,30,0,8).makesContact(!1).attr(hE).attr(Le,[h.DEF],-1,!1,{effectChanceOverride:50}).attr(VA),new B(A.INFERNAL_PARADE,L.GHOST,u.SPECIAL,60,100,15,30,0,8).attr(Ve,J.BURN).attr(jA,(t,E,R)=>E.status?2:1),new B(A.CEASELESS_EDGE,L.DARK,u.PHYSICAL,65,90,15,100,0,8).attr(jU,oe.SPIKES).slicingMove(),new B(A.BLEAKWIND_STORM,L.FLYING,u.SPECIAL,100,80,10,30,0,8).attr(En).attr(Le,[h.SPD],-1).windMove().target(ee.ALL_NEAR_ENEMIES),new B(A.WILDBOLT_STORM,L.ELECTRIC,u.SPECIAL,100,80,10,20,0,8).attr(En).attr(Ve,J.PARALYSIS).windMove().target(ee.ALL_NEAR_ENEMIES),new B(A.SANDSEAR_STORM,L.GROUND,u.SPECIAL,100,80,10,20,0,8).attr(En).attr(Ve,J.BURN).windMove().target(ee.ALL_NEAR_ENEMIES),new ne(A.LUNAR_BLESSING,L.PSYCHIC,-1,5,-1,0,8).attr(Vt,.25,!0,!1).attr(fE,!1,_T()).target(ee.USER_AND_ALLIES).triageMove(),new we(A.TAKE_HEART,L.PSYCHIC,-1,10,-1,0,8).attr(Le,[h.SPATK,h.SPDEF],1,!0).attr(fE,!0,[J.PARALYSIS,J.POISON,J.TOXIC,J.BURN,J.SLEEP]),new B(A.TERA_BLAST,L.NORMAL,u.SPECIAL,80,100,10,-1,0,9).attr(xU).attr(VH).attr(KH).attr(Le,[h.ATK,h.SPATK],-1,!0,{condition:r((t,E,R)=>t.isTerastallized&&t.isOfType(L.STELLAR),"condition")}),new we(A.SILK_TRAP,L.BUG,-1,10,-1,4,9).attr(IO,Y.SILK_TRAP).condition(BR),new B(A.AXE_KICK,L.FIGHTING,u.PHYSICAL,120,90,10,30,0,9).attr(gO,RL).attr(pO,RL).attr(rt).recklessMove(),new B(A.LAST_RESPECTS,L.GHOST,u.PHYSICAL,50,100,10,-1,0,9).attr(jA,(t,E,R)=>1+Math.min(t.isPlayer()?s.arena.playerFaints:s.currentBattle.enemyFaints,100)).makesContact(!1),new B(A.LUMINA_CRASH,L.PSYCHIC,u.SPECIAL,80,100,10,100,0,9).attr(Le,[h.SPDEF],-2),new B(A.ORDER_UP,L.DRAGON,u.PHYSICAL,80,100,10,100,0,9).attr(SH).makesContact(!1),new B(A.JET_PUNCH,L.WATER,u.PHYSICAL,60,100,15,-1,1,9).punchingMove(),new ne(A.SPICY_EXTRACT,L.GRASS,-1,15,-1,0,9).attr(Le,[h.ATK],2).attr(Le,[h.DEF],-2),new B(A.SPIN_OUT,L.STEEL,u.PHYSICAL,100,100,5,-1,0,9).attr(Le,[h.SPD],-2,!0),new B(A.POPULATION_BOMB,L.NORMAL,u.PHYSICAL,20,90,10,-1,0,9).attr(vA,_E._10).slicingMove().checkAllHits(),new B(A.ICE_SPINNER,L.ICE,u.PHYSICAL,80,100,15,-1,0,9).attr(vs),new B(A.GLAIVE_RUSH,L.DRAGON,u.PHYSICAL,120,100,5,-1,0,9).attr(TA,Y.ALWAYS_GET_HIT,!0,!1,0,0,!0).attr(TA,Y.RECEIVE_DOUBLE_DAMAGE,!0,!1,0,0,!0).condition((t,E,R)=>{var I,N;return!(((I=E.getTag(Y.PROTECTED))==null?void 0:I.tagType)==="PROTECTED"||((N=s.arena.getTag(oe.MAT_BLOCK))==null?void 0:N.tagType)==="MAT_BLOCK")}),new ne(A.REVIVAL_BLESSING,L.NORMAL,-1,1,-1,0,9).triageMove().attr(e1).target(ee.USER),new B(A.SALT_CURE,L.ROCK,u.PHYSICAL,40,100,15,100,0,9).attr(TA,Y.SALT_CURED).makesContact(!1),new B(A.TRIPLE_DIVE,L.WATER,u.PHYSICAL,30,95,10,-1,0,9).attr(vA,_E._3),new B(A.MORTAL_SPIN,L.POISON,u.PHYSICAL,30,100,15,100,0,9).attr($H,[Y.BIND,Y.WRAP,Y.FIRE_SPIN,Y.WHIRLPOOL,Y.CLAMP,Y.SAND_TOMB,Y.MAGMA_STORM,Y.SNAP_TRAP,Y.THUNDER_CAGE,Y.SEEDED,Y.INFESTATION],!0).attr(Ve,J.POISON).attr(Zs).target(ee.ALL_NEAR_ENEMIES),new ne(A.DOODLE,L.NORMAL,100,10,-1,0,9).attr(LD,!0),new we(A.FILLET_AWAY,L.NORMAL,-1,10,-1,0,9).attr(JT,[h.ATK,h.SPATK,h.SPD],2,2),new B(A.KOWTOW_CLEAVE,L.DARK,u.PHYSICAL,85,-1,10,-1,0,9).slicingMove(),new B(A.FLOWER_TRICK,L.GRASS,u.PHYSICAL,70,-1,10,-1,0,9).attr(nI).makesContact(!1),new B(A.TORCH_SONG,L.FIRE,u.SPECIAL,80,100,10,100,0,9).attr(Le,[h.SPATK],1,!0).soundBased(),new B(A.AQUA_STEP,L.WATER,u.PHYSICAL,80,100,10,100,0,9).attr(Le,[h.SPD],1,!0).danceMove(),new B(A.RAGING_BULL,L.NORMAL,u.PHYSICAL,90,100,10,-1,0,9).attr(mH).attr(ks),new B(A.MAKE_IT_RAIN,L.STEEL,u.SPECIAL,120,100,5,-1,0,9).attr(SD).attr(Le,[h.SPATK],-1,!0,{firstTargetOnly:!0}).target(ee.ALL_NEAR_ENEMIES),new B(A.PSYBLADE,L.PSYCHIC,u.PHYSICAL,80,100,15,-1,0,9).attr(jA,(t,E,R)=>s.arena.getTerrainType()===$e.ELECTRIC&&t.isGrounded()?1.5:1).slicingMove(),new B(A.HYDRO_STEAM,L.WATER,u.SPECIAL,80,100,15,-1,0,9).attr(rU,X.SUNNY).attr(jA,(t,E,R)=>{const I=s.arena.weather;return I&&[X.SUNNY,X.HARSH_SUN].includes(I.weatherType)&&!I.isEffectSuppressed()?1.5:1}),new B(A.RUINATION,L.DARK,u.SPECIAL,-1,90,10,-1,0,9).attr(bT),new B(A.COLLISION_COURSE,L.FIGHTING,u.PHYSICAL,100,100,5,-1,0,9).attr(jA,(t,E,R)=>E.getAttackTypeEffectiveness(R.type,t)>=2?5461/4096:1),new B(A.ELECTRO_DRIFT,L.ELECTRIC,u.SPECIAL,100,100,5,-1,0,9).attr(jA,(t,E,R)=>E.getAttackTypeEffectiveness(R.type,t)>=2?5461/4096:1).makesContact(),new we(A.SHED_TAIL,L.NORMAL,-1,10,-1,0,9).attr(nU,.5,!0).attr(oR,!0,ZA.SHED_TAIL).condition(di),new we(A.CHILLY_RECEPTION,L.ICE,-1,10,-1,0,9).attr(MN,(t,E)=>D.t("moveTriggers:chillyReception",{pokemonName:Z(t)})).attr(A1,!0),new we(A.TIDY_UP,L.NORMAL,-1,10,-1,0,9).attr(Le,[h.ATK,h.SPD],1,!0).attr(Zs,!0).attr(zH),new ne(A.SNOWSCAPE,L.ICE,-1,10,-1,0,9).attr(sN,X.SNOW).target(ee.BOTH_SIDES),new B(A.POUNCE,L.BUG,u.PHYSICAL,50,100,20,100,0,9).attr(Le,[h.SPD],-1),new B(A.TRAILBLAZE,L.GRASS,u.PHYSICAL,50,100,20,100,0,9).attr(Le,[h.SPD],1,!0),new B(A.CHILLING_WATER,L.WATER,u.SPECIAL,50,100,20,100,0,9).attr(Le,[h.ATK],-1),new B(A.HYPER_DRILL,L.NORMAL,u.PHYSICAL,100,100,5,-1,0,9).ignoresProtect(),new B(A.TWIN_BEAM,L.PSYCHIC,u.SPECIAL,40,100,10,-1,0,9).attr(vA,_E._2),new B(A.RAGE_FIST,L.GHOST,u.PHYSICAL,50,100,10,-1,0,9).attr(DH).punchingMove(),new B(A.ARMOR_CANNON,L.FIRE,u.SPECIAL,120,100,5,-1,0,9).attr(Le,[h.DEF,h.SPDEF],-1,!0),new B(A.BITTER_BLADE,L.FIRE,u.PHYSICAL,90,100,10,-1,0,9).attr(AR).slicingMove().triageMove(),new B(A.DOUBLE_SHOCK,L.ELECTRIC,u.PHYSICAL,120,100,5,-1,0,9).condition(t=>t.getTypes(!0).includes(L.ELECTRIC)).attr(TA,Y.DOUBLE_SHOCKED,!0,!1).attr(eD,L.ELECTRIC,t=>{s.queueMessage(D.t("moveTriggers:usedUpAllElectricity",{pokemonName:Z(t)}))}),new B(A.GIGATON_HAMMER,L.STEEL,u.PHYSICAL,160,100,5,-1,0,9).makesContact(!1).condition((t,E,R)=>{const I=t.getLastXMoves(1);return!I.length||I[0].move!==R.id||I[0].result!==EE.SUCCESS}),new B(A.COMEUPPANCE,L.DARK,u.PHYSICAL,-1,100,10,-1,0,9).attr(PN,t=>t.category===u.PHYSICAL||t.category===u.SPECIAL,1.5).redirectCounter().target(ee.ATTACKER),new B(A.AQUA_CUTTER,L.WATER,u.PHYSICAL,70,100,20,-1,0,9).attr(hE).slicingMove().makesContact(!1),new B(A.BLAZING_TORQUE,L.FIRE,u.PHYSICAL,80,100,10,30,0,9).attr(Ve,J.BURN).makesContact(!1),new B(A.WICKED_TORQUE,L.DARK,u.PHYSICAL,80,100,10,10,0,9).attr(Ve,J.SLEEP).makesContact(!1),new B(A.NOXIOUS_TORQUE,L.POISON,u.PHYSICAL,100,100,10,30,0,9).attr(Ve,J.POISON).makesContact(!1),new B(A.COMBAT_TORQUE,L.FIGHTING,u.PHYSICAL,100,100,10,30,0,9).attr(Ve,J.PARALYSIS).makesContact(!1),new B(A.MAGICAL_TORQUE,L.FAIRY,u.PHYSICAL,100,100,10,30,0,9).attr(rt).makesContact(!1),new B(A.BLOOD_MOON,L.NORMAL,u.SPECIAL,140,100,5,-1,0,9).condition((t,E,R)=>{const I=t.getLastXMoves(1);return!I.length||I[0].move!==R.id||I[0].result!==EE.SUCCESS}),new B(A.MATCHA_GOTCHA,L.GRASS,u.SPECIAL,80,90,15,20,0,9).attr(AR).attr(fE,!0,J.FREEZE).attr(fE,!1,J.FREEZE).attr(Ve,J.BURN).target(ee.ALL_NEAR_ENEMIES).triageMove(),new B(A.SYRUP_BOMB,L.GRASS,u.SPECIAL,60,85,10,100,0,9).attr(TA,Y.SYRUP_BOMB,!1,!1,3).ballBombMove(),new B(A.IVY_CUDGEL,L.GRASS,u.PHYSICAL,100,100,10,-1,0,9).attr(gH).attr(hE).makesContact(!1),new pt(A.ELECTRO_SHOT,L.ELECTRIC,u.SPECIAL,130,100,10,100,0,9).chargeText(D.t("moveTriggers:absorbedElectricity",{pokemonName:"{USER}"})).chargeAttr(Le,[h.SPATK],1,!0).chargeAttr(XT,[X.RAIN,X.HEAVY_RAIN]),new B(A.TERA_STARSTORM,L.NORMAL,u.SPECIAL,120,100,5,-1,0,9).attr(xU).attr(vH).attr(xS,(t,E,R)=>{var I;return t.hasSpecies(e.TERAPAGOS)&&(t.isTerastallized||((I=s.currentBattle.preTurnCommands[t.getFieldIndex()])==null?void 0:I.command)===GE.TERA)?ee.ALL_NEAR_ENEMIES:ee.NEAR_OTHER}).partial(),new B(A.FICKLE_BEAM,L.DRAGON,u.SPECIAL,80,100,5,30,0,9).attr(MN,aX).attr(iH).edgeCase(),new we(A.BURNING_BULWARK,L.FIRE,-1,10,-1,4,9).attr(IO,Y.BURNING_BULWARK).condition(BR),new B(A.THUNDERCLAP,L.ELECTRIC,u.SPECIAL,70,100,5,-1,1,9).condition((t,E,R)=>{const I=s.currentBattle.turnCommands[E.getBattlerIndex()];return!I||!I.move?!1:I.command===GE.FIGHT&&!E.turnData.acted&&Ke[I.move.move].category!==u.STATUS}),new B(A.MIGHTY_CLEAVE,L.ROCK,u.PHYSICAL,95,100,5,-1,0,9).slicingMove().ignoresProtect(),new B(A.TACHYON_CUTTER,L.STEEL,u.SPECIAL,50,-1,10,-1,0,9).attr(vA,_E._2).slicingMove(),new B(A.HARD_PRESS,L.STEEL,u.PHYSICAL,-1,100,10,-1,0,9).attr(jT,100),new ne(A.DRAGON_CHEER,L.DRAGON,-1,15,-1,0,9).attr(TA,Y.DRAGON_CHEER,!1,!0).target(ee.NEAR_ALLY),new B(A.ALLURING_VOICE,L.FAIRY,u.SPECIAL,80,100,10,100,0,9).attr(o1,Y.CONFUSED).soundBased(),new B(A.TEMPER_FLARE,L.FIRE,u.PHYSICAL,75,100,10,-1,0,9).attr(jA,(t,E,R)=>{var I,N;return((I=t.getLastXMoves(2)[1])==null?void 0:I.result)===EE.MISS||((N=t.getLastXMoves(2)[1])==null?void 0:N.result)===EE.FAIL?2:1}),new B(A.SUPERCELL_SLAM,L.ELECTRIC,u.PHYSICAL,100,95,15,-1,0,9).attr(dO).attr(iR,Y.MINIMIZED).attr(gO,RL).attr(pO,RL).recklessMove(),new B(A.PSYCHIC_NOISE,L.PSYCHIC,u.SPECIAL,75,100,10,100,0,9).soundBased().attr(TA,Y.HEAL_BLOCK,!1,!1,2),new B(A.UPPER_HAND,L.FIGHTING,u.PHYSICAL,65,100,15,100,3,9).attr(VA).condition(new M1),new B(A.MALIGNANT_CHAIN,L.POISON,u.SPECIAL,100,100,5,50,0,9).attr(Ve,J.TOXIC)),Ke.map(t=>{t.getAttrs(Le).some(E=>E.selfTarget&&E.stages<0)&&MX.push(t.id)})}r(PX,"initMoves");const _3=class _3 extends kt{constructor(E,R,I,N,S){super(E),this.statusEffect=R,this.turnsRemaining=I,this.sourceText=N,this.sourcePokemon=S}start(){var R;const E=this.getPokemon();if(E&&!E.status){if(E.trySetStatus(this.statusEffect,!1,this.sourcePokemon)){this.turnsRemaining&&(E.status.sleepTurnsRemaining=this.turnsRemaining),E.updateInfo(!0),new Rs(XA.POISON+(this.statusEffect-1),E).play(!1,()=>{s.queueMessage(a8(this.statusEffect,Z(E),this.sourceText??void 0)),!Ne(this.statusEffect)&&this.statusEffect!==J.FAINT&&(s.triggerPokemonFormChange(E,pP,!0),s.arena.setIgnoreAbilities(!1),k9(kC,E,this.statusEffect,this.sourcePokemon)),this.end()});return}}else((R=E.status)==null?void 0:R.effect)===this.statusEffect&&s.queueMessage(Gv(this.statusEffect??J.NONE,Z(E)));this.end()}};r(_3,"ObtainStatusEffectPhase");let _1=_3;async function GX(t){await Promise.allSettled(t.map(E=>fM(E))),await dM(t)}r(GX,"loadMoveAnimations");const u3=class u3 extends Nt{constructor(E,R,I){super(),this.pokemon=E,this.affectConfusion=R,this.reloadAssets=I}start(){this.pokemon.clearStatus(this.affectConfusion,this.reloadAssets),this.end()}};r(u3,"ResetStatusPhase");let u1=u3;var Po=(t=>(t[t.MISC=0]="MISC",t[t.LEVEL_UP=1]="LEVEL_UP",t[t.RELEARN=2]="RELEARN",t[t.EVOLUTION=3]="EVOLUTION",t[t.EVOLUTION_FUSED=4]="EVOLUTION_FUSED",t[t.EVOLUTION_FUSED_BASE=5]="EVOLUTION_FUSED_BASE",t))(Po||{}),RR=(t=>(t[t.CENTER=0]="CENTER",t[t.LEFT=1]="LEFT",t[t.RIGHT=2]="RIGHT",t))(RR||{});const H3=class H3 extends Kt.GameObjects.Container{constructor(E,R,I,N,S,T,i,o,C,U,_,G){if(super(s,E,R),this.switchOutStatus=!1,this.customPokemonData=new lR,this.battleData=new NS,this.summonData=new LS,this.tempSummonData=new TD,this.waveData=new nD,this.turnData=new aD,!I.isObtainable()&&this.isPlayer())throw`Cannot create a player Pokemon for species '${I.getName(T)}'`;if(this.species=I,this.pokeball=(G==null?void 0:G.pokeball)||Me.POKEBALL,this.level=N,this.abilityIndex=S??this.generateAbilityIndex(),T!==void 0&&(this.formIndex=T),i!==void 0&&(this.gender=i),o!==void 0&&(this.shiny=o),C!==void 0&&(this.variant=C),this.exp=(G==null?void 0:G.exp)||SO(this.level,I.growthRate),this.levelExp=(G==null?void 0:G.levelExp)||0,G)this.id=G.id,this.hp=G.hp,this.stats=G.stats,this.ivs=G.ivs,this.passive=!!G.passive,this.variant===void 0&&(this.variant=0),this.nature=G.nature||0,this.nickname=G.nickname,this.moveset=G.moveset,this.status=G.status,this.friendship=G.friendship!==void 0?G.friendship:this.species.baseFriendship,this.metLevel=G.metLevel||5,this.luck=G.luck,this.metBiome=G.metBiome,this.metSpecies=G.metSpecies??(this.metBiome!==-1?this.species.speciesId:this.species.getRootSpeciesId(!0)),this.metWave=G.metWave??(this.metBiome===-1?-1:0),this.pauseEvolutions=G.pauseEvolutions,this.pokerus=!!G.pokerus,this.evoCounter=G.evoCounter??0,this.fusionSpecies=G.fusionSpecies instanceof M?G.fusionSpecies:G.fusionSpecies?de(G.fusionSpecies):null,this.fusionFormIndex=G.fusionFormIndex,this.fusionAbilityIndex=G.fusionAbilityIndex,this.fusionShiny=G.fusionShiny,this.fusionVariant=G.fusionVariant||0,this.fusionGender=G.fusionGender,this.fusionLuck=G.fusionLuck,this.fusionCustomPokemonData=G.fusionCustomPokemonData,this.fusionTeraType=G.fusionTeraType,this.usedTMs=G.usedTMs??[],this.customPokemonData=new lR(G.customPokemonData),this.teraType=G.teraType,this.isTerastallized=G.isTerastallized,this.stellarTypesBoosted=G.stellarTypesBoosted??[];else{if(this.id=De(4294967296),this.ivs=U||ov(this.id),this.gender===void 0&&this.generateGender(),this.formIndex===void 0&&(this.formIndex=s.getSpeciesFormIndex(I,this.gender,this.nature,this.isPlayer())),this.shiny===void 0&&this.trySetShiny(),this.variant===void 0&&(this.variant=this.shiny?this.generateShinyVariant():0),_!==void 0?this.setNature(_):this.generateNature(),this.friendship=I.baseFriendship,this.metLevel=N,this.metBiome=s.currentBattle?s.arena.biomeType:-1,this.metSpecies=I.speciesId,this.metWave=s.currentBattle?s.currentBattle.waveIndex:-1,this.pokerus=!1,N>1){const H=new SA(s.gameMode.isSplicedOnly);!H.value&&!this.isPlayer()&&!this.hasTrainer()&&s.applyModifier(ti,!1,H),H.value&&(this.calculateStats(),this.generateFusionSpecies())}this.luck=(this.shiny?this.variant+1:0)+(this.fusionShiny?this.fusionVariant+1:0),this.fusionLuck=this.luck,this.teraType=SE(this.getTypes(!1,!1,!0)),this.isTerastallized=!1,this.stellarTypesBoosted=[]}this.summonData=new LS(G==null?void 0:G.summonData),this.battleData=new NS(G==null?void 0:G.battleData),this.generateName(),I.isObtainable()||(this.shiny=!1),G||this.calculateStats()}getNameToRender(E=!0){const R=!E&&this.summonData.illusion?this.summonData.illusion.basePokemon.name:this.name,I=!E&&this.summonData.illusion?this.summonData.illusion.basePokemon.nickname:this.nickname;try{return I?decodeURIComponent(escape(atob(I))):R}catch(N){return console.error(`Failed to decode nickname for ${R}`,N),R}}getPokeball(E=!1){var R;return E?((R=this.summonData.illusion)==null?void 0:R.pokeball)??this.pokeball:this.pokeball}init(){this.fieldPosition=0,this.initBattleInfo(),s.fieldUI.addAt(this.battleInfo,0);const E=r(N=>{const S=s.addPokemonSprite(this,0,0,`pkmn__${this.isPlayer()?"back__":""}sub`,void 0,!0);return S.setOrigin(.5,1),S.setPipeline(s.spritePipeline,{tone:[0,0,0,0],hasShadow:!!N,teraColor:iO(this.getTeraType()),isTerastallized:this.isTerastallized}),S},"getSprite");this.setScale(this.getSpriteScale());const R=E(!0),I=E();I.setVisible(!1),this.addAt(R,0),this.addAt(I,1),this.isShiny(!0)&&!this.shinySparkle&&this.initShinySparkle()}isOnField(){return!s||this.switchOutStatus?!1:s.field.getIndex(this)>-1}isFainted(E=!1){var R;return this.hp<=0&&(!E||((R=this.status)==null?void 0:R.effect)===J.FAINT)}isAllowedInBattle(){return!this.isFainted()&&this.isAllowedInChallenge()}isAllowedInChallenge(){const E=new SA(!0);return JR(PO.POKEMON_IN_BATTLE,this,E),E.value}isActive(E=!1){return s?this.isAllowedInBattle()&&(!E||this.isOnField()):!1}getDexAttr(){let E=0n;return E|=this.gender!==ye.FEMALE?LA.MALE:LA.FEMALE,E|=this.shiny?LA.SHINY:LA.NON_SHINY,E|=this.variant>=2?LA.VARIANT_3:this.variant===1?LA.VARIANT_2:LA.DEFAULT_VARIANT,E|=s.gameData.getFormAttr(this.formIndex),E}generateName(){if(!this.fusionSpecies){this.name=this.species.getName(this.formIndex);return}this.name=c9(this.species.getName(this.formIndex),this.fusionSpecies.getName(this.fusionFormIndex)),this.battleInfo&&this.updateInfo(!0)}generateAbilityIndex(){const E=new me(pM);this.hasTrainer()||s.applyModifiers(MI,!0,E);const R=!De(E.value);return this.species.abilityHidden&&R?2:this.species.ability2!==this.species.ability1?De(2):0}setIllusion(E){if(this.summonData.illusion&&this.breakIllusion(),this.hasTrainer()){const R=E.species.speciesId;this.summonData.illusion={basePokemon:{name:this.name,nickname:this.nickname,shiny:this.shiny,variant:this.variant,fusionShiny:this.fusionShiny,fusionVariant:this.fusionVariant},species:R,formIndex:E.formIndex,gender:E.gender,pokeball:E.pokeball,fusionFormIndex:E.fusionFormIndex,fusionSpecies:E.fusionSpecies||void 0,fusionGender:E.fusionGender},this.name=E.name,this.nickname=E.nickname,this.shiny=E.shiny,this.variant=E.variant,this.fusionVariant=E.fusionVariant,this.fusionShiny=E.fusionShiny,this.shiny&&this.initShinySparkle(),this.loadAssets(!1,!0).then(()=>this.playAnim()),this.updateInfo()}else{const R=s.arena.randomSpecies(s.currentBattle.waveIndex,this.level);this.summonData.illusion={basePokemon:{name:this.name,nickname:this.nickname,shiny:this.shiny,variant:this.variant,fusionShiny:this.fusionShiny,fusionVariant:this.fusionVariant},species:R.speciesId,formIndex:R.formIndex,gender:this.gender,pokeball:this.pokeball},this.name=R.name,this.loadAssets(!1,!0).then(()=>this.playAnim())}return!0}breakIllusion(){if(this.summonData.illusion)this.name=this.summonData.illusion.basePokemon.name,this.nickname=this.summonData.illusion.basePokemon.nickname,this.shiny=this.summonData.illusion.basePokemon.shiny,this.variant=this.summonData.illusion.basePokemon.variant,this.fusionVariant=this.summonData.illusion.basePokemon.fusionVariant,this.fusionShiny=this.summonData.illusion.basePokemon.fusionShiny,this.summonData.illusion=null;else return!1;return this.isOnField()&&s.playSound("PRSFX- Transform"),this.shiny&&this.initShinySparkle(),this.loadAssets(!1).then(()=>this.playAnim()),this.updateInfo(!0),!0}async loadAssets(E=!0,R=!1){var T,i;const I=[];I.push(GX(this.getMoveset().map(o=>o.getMove().id)));const N=R&&this.summonData.illusion?this.summonData.illusion.formIndex:this.formIndex;if(I.push(this.getSpeciesForm(!1,R).loadAssets(this.getGender(R)===ye.FEMALE,N,this.isShiny(R),this.getVariant(R))),(this.isPlayer()||this.getFusionSpeciesForm(!1,R))&&s.loadPokemonAtlas(this.getBattleSpriteKey(!0,E),this.getBattleSpriteAtlasPath(!0,E)),this.getFusionSpeciesForm()){const o=R&&this.summonData.illusion?this.summonData.illusion.fusionFormIndex:this.fusionFormIndex,C=!R&&((T=this.summonData.illusion)!=null&&T.basePokemon)?this.summonData.illusion.basePokemon.fusionShiny:this.fusionShiny,U=!R&&((i=this.summonData.illusion)!=null&&i.basePokemon)?this.summonData.illusion.basePokemon.fusionVariant:this.fusionVariant;I.push(this.getFusionSpeciesForm(!1,R).loadAssets(this.getFusionGender(!1,R)===ye.FEMALE,o,C,U)),s.loadPokemonAtlas(this.getFusionBattleSpriteKey(!0,E),this.getFusionBattleSpriteAtlasPath(!0,E))}this.isShiny(!0)&&(I.push(qw(this,!1,E)),this.isPlayer()&&I.push(qw(this,!0,E))),await Promise.allSettled(I);const S=new Promise(o=>s.load.once(Kt.Loader.Events.COMPLETE,o));if(s.load.isLoading()||s.load.start(),await S,this.isPlayer()){const o=console.warn;console.warn=()=>{};const C=this.getBattleSpriteKey(this.isPlayer(),E),U=s.anims.generateFrameNames(C,{zeroPad:4,suffix:".png",start:1,end:400});console.warn=o,s.anims.exists(C)||s.anims.create({key:C,frames:U,frameRate:10,repeat:-1})}this.playAnim(),this.updateFusionPalette(),this.summonData.speciesForm&&this.updateFusionPalette(!0)}async fallbackVariantColor(E,R,I,N,...S){console.warn(`Could not load ${R}!`,...S),I&&await this.populateVariantColorCache(E,!1,N)}async populateVariantColorCache(E,R,I){const N=`./images/pokemon/variant/${R?"exp/":""}${I}.json`;return s.cachedFetch(N).then(S=>S.ok?S.json():this.fallbackVariantColor(E,S.url,R,I,S.status,S.statusText)).catch(S=>this.fallbackVariantColor(E,N,R,I,S)).then(S=>{Ne(S)||(hL[E]=S)})}getFormKey(){return!this.species.forms.length||this.species.forms.length<=this.formIndex?"":this.species.forms[this.formIndex].formKey}getFusionFormKey(){return this.fusionSpecies?!this.fusionSpecies.forms.length||this.fusionSpecies.forms.length<=this.fusionFormIndex?"":this.fusionSpecies.forms[this.fusionFormIndex].formKey:null}getSpriteAtlasPath(E){const R=this.getSpriteId(E).replace(/\_{2}/g,"/");return`${/_[1-3]$/.test(R)?"variant/":""}${R}`}getBattleSpriteAtlasPath(E,R){const I=this.getBattleSpriteId(E,R).replace(/\_{2}/g,"/");return`${/_[1-3]$/.test(I)?"variant/":""}${I}`}getSpriteId(E){var I;const R=((I=this.summonData.illusion)==null?void 0:I.formIndex)??this.formIndex;return this.getSpeciesForm(E,!0).getSpriteId(this.getGender(E,!0)===ye.FEMALE,R,this.shiny,this.variant)}getBattleSpriteId(E,R){var N;E===void 0&&(E=this.isPlayer());const I=((N=this.summonData.illusion)==null?void 0:N.formIndex)??this.formIndex;return this.getSpeciesForm(R,!0).getSpriteId(this.getGender(R,!0)===ye.FEMALE,I,this.shiny,this.variant,E)}getSpriteKey(E){var R,I;return this.getSpeciesForm(E,!1).getSpriteKey(this.getGender(E)===ye.FEMALE,this.formIndex,((R=this.summonData.illusion)==null?void 0:R.basePokemon.shiny)??this.shiny,((I=this.summonData.illusion)==null?void 0:I.basePokemon.variant)??this.variant)}getBattleSpriteKey(E,R){return`pkmn__${this.getBattleSpriteId(E,R)}`}getFusionSpriteId(E){var I;const R=((I=this.summonData.illusion)==null?void 0:I.fusionFormIndex)??this.fusionFormIndex;return this.getFusionSpeciesForm(E,!0).getSpriteId(this.getFusionGender(E,!0)===ye.FEMALE,R,this.fusionShiny,this.fusionVariant)}getFusionBattleSpriteId(E,R){var N;E===void 0&&(E=this.isPlayer());const I=((N=this.summonData.illusion)==null?void 0:N.fusionFormIndex)??this.fusionFormIndex;return this.getFusionSpeciesForm(R,!0).getSpriteId(this.getFusionGender(R,!0)===ye.FEMALE,I,this.fusionShiny,this.fusionVariant,E)}getFusionBattleSpriteKey(E,R){return`pkmn__${this.getFusionBattleSpriteId(E,R)}`}getFusionBattleSpriteAtlasPath(E,R){return this.getFusionBattleSpriteId(E,R).replace(/\_{2}/g,"/")}getIconAtlasKey(E,R=!0){var S,T,i;const I=R&&((S=this.summonData.illusion)!=null&&S.formIndex)?(T=this.summonData.illusion)==null?void 0:T.formIndex:this.formIndex,N=!R&&this.summonData.illusion?(i=this.summonData.illusion)==null?void 0:i.basePokemon.variant:this.variant;return this.getSpeciesForm(E,R).getIconAtlasKey(I,this.isBaseShiny(R),N)}getFusionIconAtlasKey(E,R=!0){var S,T,i;const I=R&&((S=this.summonData.illusion)!=null&&S.fusionFormIndex)?(T=this.summonData.illusion)==null?void 0:T.fusionFormIndex:this.fusionFormIndex,N=!R&&this.summonData.illusion?(i=this.summonData.illusion)==null?void 0:i.basePokemon.fusionVariant:this.fusionVariant;return this.getFusionSpeciesForm(E,R).getIconAtlasKey(I,this.isFusionShiny(),N)}getIconId(E,R=!0){var S,T,i;const I=R&&((S=this.summonData.illusion)!=null&&S.formIndex)?(T=this.summonData.illusion)==null?void 0:T.formIndex:this.formIndex,N=!R&&this.summonData.illusion?(i=this.summonData.illusion)==null?void 0:i.basePokemon.variant:this.variant;return this.getSpeciesForm(E,R).getIconId(this.getGender(E,R)===ye.FEMALE,I,this.isBaseShiny(),N)}getFusionIconId(E,R=!0){var S,T,i;const I=R&&((S=this.summonData.illusion)!=null&&S.fusionFormIndex)?(T=this.summonData.illusion)==null?void 0:T.fusionFormIndex:this.fusionFormIndex,N=!R&&this.summonData.illusion?(i=this.summonData.illusion)==null?void 0:i.basePokemon.fusionVariant:this.fusionVariant;return this.getFusionSpeciesForm(E,R).getIconId(this.getFusionGender(E,R)===ye.FEMALE,I,this.isFusionShiny(),N)}getSpeciesForm(E=!1,R=!1){if(!E&&this.summonData.speciesForm)return this.summonData.speciesForm;const I=R&&this.summonData.illusion?de(this.summonData.illusion.species):this.species,N=R&&this.summonData.illusion?this.summonData.illusion.formIndex:this.formIndex;return I.forms&&I.forms.length>0?I.forms[N]:I}getFusionSpeciesForm(E,R=!1){var S;const I=R&&this.summonData.illusion?this.summonData.illusion.fusionSpecies:this.fusionSpecies,N=R&&this.summonData.illusion?this.summonData.illusion.fusionFormIndex:this.fusionFormIndex;return!E&&this.summonData.fusionSpeciesForm?this.summonData.fusionSpeciesForm:!((S=I==null?void 0:I.forms)!=null&&S.length)||N>=(I==null?void 0:I.forms.length)?I:I==null?void 0:I.forms[N]}getSprite(){return this.getAt(0)}getTintSprite(){return this.maskEnabled?this.maskSprite:this.getAt(1)}getSpriteScale(){const E=this.getFormKey();return this.isMax()===!0||E==="segin-starmobile"||E==="schedar-starmobile"||E==="navi-starmobile"||E==="ruchbah-starmobile"||E==="caph-starmobile"?1.5:this.customPokemonData.spriteScale<=0?1:this.customPokemonData.spriteScale}resetSprite(){this.setVisible(!1),this.isOffsetBySubstitute()&&(this.x-=this.getSubstituteOffset()[0],this.y-=this.getSubstituteOffset()[1]),this.setAlpha(1),this.setScale(this.getSpriteScale())}getHeldItems(){return s?s.findModifiers(E=>E instanceof DA&&E.pokemonId===this.id,this.isPlayer()):[]}updateScale(){this.setScale(this.getSpriteScale())}updateSpritePipelineData(){[this.getSprite(),this.getTintSprite()].filter(E=>!!E).map(E=>{E.pipelineData.teraColor=iO(this.getTeraType()),E.pipelineData.isTerastallized=this.isTerastallized}),this.updateInfo(!0)}initShinySparkle(){const E=s.addFieldSprite(0,0,"shiny");E.setVisible(!1),E.setOrigin(.5,1),this.add(E),this.shinySparkle=E}tryPlaySprite(E,R,I){try{E.play(I),R.play(I)}catch(N){return console.error(`Couldn't play animation for '${I}'!
Is the image for this Pokemon missing?
`,N),!1}return!0}playAnim(){this.tryPlaySprite(this.getSprite(),this.getTintSprite(),this.getBattleSpriteKey())}getFieldPositionOffset(){switch(this.fieldPosition){case 0:return[0,0];case 1:return[-32,-8];case 2:return[32,0]}}getSubstituteOffset(){return this.isPlayer()?[-30,10]:[30,-10]}isOffsetBySubstitute(){const E=this.getTag(OR);if(E){if(E.sprite===void 0)return!1;const R=s.getCurrentPhase();return!(R instanceof jO&&R.getPokemon()===this)}else return!1}destroySubstitute(){const E=this.getTag(OR);E&&E.sprite&&E.sprite.destroy()}setFieldPosition(E,R){return new Promise(I=>{if(E===this.fieldPosition){I();return}const N=this.getFieldPositionOffset();this.fieldPosition=E,this.battleInfo.setMini(E!==0),this.battleInfo.setOffset(E===2);const S=this.getFieldPositionOffset(),T=S[0]-N[0],i=S[1]-N[1],o=this.getTag(OR);if(R){const C=[this];o!=null&&o.sprite&&C.push(o.sprite),s.tweens.add({targets:C,x:r((U,_,G)=>G+T,"x"),y:r((U,_,G)=>G+i,"y"),duration:R,ease:"Sine.easeOut",onComplete:r(()=>I(),"onComplete")})}else this.x+=T,this.y+=i,o!=null&&o.sprite&&(o.sprite.x+=T,o.sprite.y+=i)})}getStats(E=!0){return!E&&this.summonData.stats?this.summonData.stats:this.stats}getStat(E,R=!0){return!R&&this.summonData.stats[E]!==0?this.summonData.stats[E]:this.stats[E]}setStat(E,R,I=!0){R<0||(I?this.stats[E]=R:this.summonData.stats[E]=R)}getStatStages(){return this.summonData?this.summonData.statStages:[0,0,0,0,0,0,0]}getStatStage(E){return this.summonData?this.summonData.statStages[E-1]:0}setStatStage(E,R){R>=-6?this.summonData.statStages[E-1]=Math.min(R,6):this.summonData.statStages[E-1]=Math.max(R,-6)}getCritStage(E,R){const I=new me(0);LE(hE,E,this,R,I),s.applyModifiers(qS,E.isPlayer(),E,I),s.applyModifiers(Fr,E.isPlayer(),I),sA(tl,E,null,!1,I);const N=E.getTag(lr);return N&&(N instanceof bl?I.value+=N.typesOnAdd.includes(L.DRAGON)?2:1:I.value+=2),console.log(`crit stage: +${I.value}`),I.value}getMoveCategory(E,R){const I=new me(R.category);return LE(kL,this,E,R,I),I.value}getEffectiveStat(E,R,I,N=!1,S=!1,T=!1,i=!1,o=!0,C=!1){var f,d;const U=new me(this.getStat(E,!1));C||s.applyModifiers($S,this.isPlayer(),this,E,U);const _=new SA(!1);for(const w of s.getField(!0))if(X9(oN,w,E,U,this,_,o),_.value)break;N||tP(OE,this,E,U,o);const G=this.getAlly();Ne(G)||RP(dL,G,E,U,o,this,(I==null?void 0:I.hasFlag(je.IGNORE_ABILITIES))||T);let H=U.value*this.getStatStageMultiplier(E,R,I,S,i,o,C);switch(E){case h.ATK:this.getTag(Y.SLOW_START)&&(H>>=1);break;case h.DEF:this.isOfType(L.ICE)&&((f=s.arena.weather)==null?void 0:f.weatherType)===X.SNOW&&(H*=1.5);break;case h.SPATK:break;case h.SPDEF:this.isOfType(L.ROCK)&&((d=s.arena.weather)==null?void 0:d.weatherType)===X.SANDSTORM&&(H*=1.5);break;case h.SPD:const w=this.isPlayer()?qe.PLAYER:qe.ENEMY;s.arena.getTagOnSide(oe.TAILWIND,w)&&(H*=2),s.arena.getTagOnSide(oe.GRASS_WATER_PLEDGE,w)&&(H>>=2),this.getTag(Y.SLOW_START)&&(H>>=1),this.status&&this.status.effect===J.PARALYSIS&&(H>>=1),this.getTag(Y.UNBURDEN)&&this.hasAbility(O.UNBURDEN)&&(H*=2);break}const c=this.findTag(w=>w instanceof Cr&&w.stat===E);return c&&(H*=c.multiplier),Math.floor(H)}calculateStats(){this.stats||(this.stats=[0,0,0,0,0,0]);const E=this.calculateBaseStats();for(const R of uN){const I=new me(Math.floor((2*E[R]+this.ivs[R])*this.level*.01));if(R===h.HP){if(I.value=I.value+this.level+10,s.applyModifier(JS,this.isPlayer(),this,R,I),this.hasAbility(O.WONDER_GUARD,!1,!0)&&(I.value=1),this.hp>I.value||this.hp===void 0)this.hp=I.value;else if(this.hp){const N=this.getMaxHp();N&&I.value>N&&(this.hp+=I.value-N)}}else{I.value+=5;const N=new me(Ri(this.getNature(),R));s.applyModifier(Xr,this.isPlayer(),this,N),N.value!==1&&(I.value=Math.max(Math[N.value>1?"ceil":"floor"](I.value*N.value),1)),s.applyModifier(JS,this.isPlayer(),this,R,I)}I.value=Kt.Math.Clamp(I.value,1,Number.MAX_SAFE_INTEGER),this.setStat(R,I.value)}}calculateBaseStats(){const E=this.getSpeciesForm(!0).baseStats.slice(0);if(JR(PO.FLIP_STAT,this,E),s.applyModifiers(pr,this.isPlayer(),this,E),s.applyModifiers(yr,this.isPlayer(),this,E),this.isFusion()){const R=this.getFusionSpeciesForm(!0).baseStats;JR(PO.FLIP_STAT,this,R);for(const I of uN)E[I]=Math.ceil((E[I]+R[I])/2)}else if(s.gameMode.isSplicedOnly)for(const R of uN)E[R]=Math.ceil(E[R]/2);return s.applyModifiers(mr,this.isPlayer(),this,E),E}getNature(){return this.customPokemonData.nature!==-1?this.customPokemonData.nature:this.nature}setNature(E){this.nature=E,this.calculateStats()}setCustomNature(E){this.customPokemonData.nature=E,this.calculateStats()}generateNature(E){E===void 0&&(E=Ct(be));const R=E[De(E.length)];this.setNature(R)}isFullHp(){return this.hp>=this.getMaxHp()}getMaxHp(){return this.getStat(h.HP)}getInverseHp(){return this.getMaxHp()-this.hp}getHpRatio(E=!1){return E?this.hp/this.getMaxHp():Math.round(this.hp/this.getMaxHp()*100)/100}generateGender(){this.species.malePercent===null?this.gender=ye.GENDERLESS:this.id%256*.390625<this.species.malePercent?this.gender=ye.MALE:this.gender=ye.FEMALE}getGender(E,R=!1){return R&&this.summonData.illusion?this.summonData.illusion.gender:!E&&!Ne(this.summonData.gender)?this.summonData.gender:this.gender}getFusionGender(E,R=!1){var I;return R&&((I=this.summonData.illusion)!=null&&I.fusionGender)?this.summonData.illusion.fusionGender:!E&&!Ne(this.summonData.fusionGender)?this.summonData.fusionGender:this.fusionGender}isShiny(E=!1){var R,I;return!E&&this.summonData.illusion?((R=this.summonData.illusion.basePokemon)==null?void 0:R.shiny)||this.summonData.illusion.fusionSpecies&&((I=this.summonData.illusion.basePokemon)==null?void 0:I.fusionShiny)||!1:this.shiny||this.isFusion(E)&&this.fusionShiny}isBaseShiny(E=!1){var R;return!E&&this.summonData.illusion?!!((R=this.summonData.illusion.basePokemon)!=null&&R.shiny):this.shiny}isFusionShiny(E=!1){var R;return!E&&this.summonData.illusion?!!((R=this.summonData.illusion.basePokemon)!=null&&R.fusionShiny):this.isFusion(E)&&this.fusionShiny}isDoubleShiny(E=!1){var R;return!E&&((R=this.summonData.illusion)!=null&&R.basePokemon)?this.isFusion(!1)&&this.summonData.illusion.basePokemon.shiny&&this.summonData.illusion.basePokemon.fusionShiny:this.isFusion(E)&&this.shiny&&this.fusionShiny}getVariant(E=!1){return!E&&this.summonData.illusion?this.isFusion(!1)?Math.max(this.variant,this.fusionVariant):this.summonData.illusion.basePokemon.variant:this.isFusion(!0)?Math.max(this.variant,this.fusionVariant):this.variant}getBaseVariant(E){var R,I;return E?((I=(R=this.summonData.illusion)==null?void 0:R.basePokemon)==null?void 0:I.variant)??this.variant:this.getVariant()}getLuck(){return this.luck+(this.isFusion()?this.fusionLuck:0)}isFusion(E=!1){return E&&this.summonData.illusion?!!this.summonData.illusion.fusionSpecies:!!this.fusionSpecies}getName(E=!1){var R;return!E&&((R=this.summonData.illusion)!=null&&R.basePokemon)?this.summonData.illusion.basePokemon.name:this.name}hasFusionSpecies(E){var R;return((R=this.fusionSpecies)==null?void 0:R.speciesId)===E}hasSpecies(E,R){var I,N;return Ne(R)?this.species.speciesId===E||((I=this.fusionSpecies)==null?void 0:I.speciesId)===E:this.species.speciesId===E&&this.getFormKey()===R||((N=this.fusionSpecies)==null?void 0:N.speciesId)===E&&this.getFusionFormKey()===R}getMoveset(E){const R=!E&&this.summonData.moveset?this.summonData.moveset:this.moveset;let I=this.isPlayer()?Ze.MOVESET_OVERRIDE:Ze.OPP_MOVESET_OVERRIDE;return Array.isArray(I)||(I=[I]),I.length>0&&(this.isPlayer()||(this.moveset=[]),I.forEach((N,S)=>{var i;const T=((i=this.moveset[S])==null?void 0:i.ppUsed)??0;this.moveset[S]=new Ye(N,Math.min(T,Ke[N].pp))})),R}getUnlockedEggMoves(){const E=[],R=this.metSpecies in NO?this.metSpecies:this.getSpeciesForm(!0).getRootSpeciesId(!0);if(R in NO)for(let I=0;I<4;I++)s.gameData.starterData[R].eggMoves&1<<I&&E.push(NO[R][I]);return E}getLearnableLevelMoves(){let E=this.getLevelMoves(1,!0,!1,!0).map(R=>R[1]);return this.metBiome===-1&&!s.gameMode.isFreshStartChallenge()&&!s.gameMode.isDaily&&(E=this.getUnlockedEggMoves().concat(E)),Array.isArray(this.usedTMs)&&this.usedTMs.length>0&&(E=this.usedTMs.filter(R=>!E.includes(R)).concat(E)),E=E.filter(R=>!this.moveset.some(I=>I.moveId===R)),E}getTypes(E=!1,R=!1,I=!1,N=!1){var T,i,o;const S=[];if(E&&this.isTerastallized){const C=this.getTeraType();if(this.isTerastallized&&!(R&&C===L.STELLAR)&&(S.push(C),R))return S}if(!S.length||!E)if(!I&&this.summonData.types&&this.summonData.types.length>0&&(!this.summonData.illusion||!N))this.summonData.types.forEach(C=>S.push(C));else{const C=this.getSpeciesForm(I,N),U=this.getFusionSpeciesForm(I,N),_=((T=this.customPokemonData.types)==null?void 0:T.length)>0,G=_&&this.customPokemonData.types[0]!==L.UNKNOWN?this.customPokemonData.types[0]:C.type1;S.push(G);let H=L.UNKNOWN;if(U){const c=(i=this.fusionCustomPokemonData)!=null&&i.types&&this.fusionCustomPokemonData.types.length>0&&this.fusionCustomPokemonData.types[0]!==L.UNKNOWN?this.fusionCustomPokemonData.types[0]:U.type1,f=(o=this.fusionCustomPokemonData)!=null&&o.types&&this.fusionCustomPokemonData.types.length>1&&this.fusionCustomPokemonData.types[1]!==L.UNKNOWN?this.fusionCustomPokemonData.types[1]:U.type2;f!==null&&f!==S[0]?H=f:c!==S[0]&&(H=c),H===L.UNKNOWN&&Ne(f)&&(H=_&&this.customPokemonData.types.length>1&&this.customPokemonData.types[1]!==L.UNKNOWN?this.customPokemonData.types[1]:C.type2??L.UNKNOWN)}else H=_&&this.customPokemonData.types.length>1&&this.customPokemonData.types[1]!==L.UNKNOWN?this.customPokemonData.types[1]:C.type2??L.UNKNOWN;H!==L.UNKNOWN&&S.push(H)}if(S.length||S.push(L.UNKNOWN),S.length>1&&S.includes(L.UNKNOWN)){const C=S.indexOf(L.UNKNOWN);C!==-1&&S.splice(C,1)}return!I&&this.summonData.addedType&&!S.includes(this.summonData.addedType)&&S.push(this.summonData.addedType),S.length>1&&S[0]===S[1]&&S.splice(0,1),S}isOfType(E,R=!0,I=!1,N=!1){return this.getTypes(R,I,N).some(S=>S===E)}getAbility(E=!1){var I;if(!E&&this.summonData.ability)return qE[this.summonData.ability];if(Ze.ABILITY_OVERRIDE&&this.isPlayer())return qE[Ze.ABILITY_OVERRIDE];if(Ze.OPP_ABILITY_OVERRIDE&&!this.isPlayer())return qE[Ze.OPP_ABILITY_OVERRIDE];if(this.isFusion())return!Ne((I=this.fusionCustomPokemonData)==null?void 0:I.ability)&&this.fusionCustomPokemonData.ability!==-1?qE[this.fusionCustomPokemonData.ability]:qE[this.getFusionSpeciesForm(E).getAbility(this.fusionAbilityIndex)];if(!Ne(this.customPokemonData.ability)&&this.customPokemonData.ability!==-1)return qE[this.customPokemonData.ability];let R=this.getSpeciesForm(E).getAbility(this.abilityIndex);return R===O.NONE&&(R=this.species.ability1),qE[R]}getPassiveAbility(){return Ze.PASSIVE_ABILITY_OVERRIDE&&this.isPlayer()?qE[Ze.PASSIVE_ABILITY_OVERRIDE]:Ze.OPP_PASSIVE_ABILITY_OVERRIDE&&!this.isPlayer()?qE[Ze.OPP_PASSIVE_ABILITY_OVERRIDE]:!Ne(this.customPokemonData.passive)&&this.customPokemonData.passive!==-1?qE[this.customPokemonData.passive]:qE[this.species.getPassiveAbility(this.formIndex)]}getAbilityAttrs(E,R=!0,I=!1){const N=[];return(!R||this.canApplyAbility())&&N.push(...this.getAbility(I).getAttrs(E)),(!R||this.canApplyAbility(!0))&&N.push(...this.getPassiveAbility().getAttrs(E)),N}setTempAbility(E,R=!1){k_(this,R),R?this.summonData.passiveAbility=E.id:this.summonData.ability=E.id,Z_(this,R)}suppressAbility(){[!0,!1].forEach(E=>k_(this,E)),this.summonData.abilitySuppressed=!0}hasPassive(){if(Ze.HAS_PASSIVE_ABILITY_OVERRIDE===!1&&this.isPlayer()||Ze.OPP_HAS_PASSIVE_ABILITY_OVERRIDE===!1&&!this.isPlayer())return!1;if((Ze.PASSIVE_ABILITY_OVERRIDE!==O.NONE||Ze.HAS_PASSIVE_ABILITY_OVERRIDE)&&this.isPlayer()||(Ze.OPP_PASSIVE_ABILITY_OVERRIDE!==O.NONE||Ze.OPP_HAS_PASSIVE_ABILITY_OVERRIDE)&&!this.isPlayer())return!0;const{currentBattle:E,gameMode:R}=s,I=E==null?void 0:E.waveIndex;return this instanceof pR&&((E==null?void 0:E.battleSpec)===tt.FINAL_BOSS||R.isEndlessMinorBoss(I)||R.isEndlessMajorBoss(I))?!1:this.passive||this.isBoss()}canApplyAbility(E=!1){var T;if(E&&!this.hasPassive())return!1;const R=E?this.getPassiveAbility():this.getAbility();if(this.isFusion()&&R.hasAttr(it))return!1;const I=(T=s)==null?void 0:T.arena;if(I.ignoreAbilities&&I.ignoringEffectSource!==this.getBattlerIndex()&&R.isIgnorable||this.summonData.abilitySuppressed&&R.isSuppressable)return!1;const N=I.getTag(oe.NEUTRALIZING_GAS),S=R.hasAttr(es);if((this.isOnField()||S)&&N&&!N.isBeingRemoved()){const i=R.hasAttr(FL),o=this.hasAbilityWithAttr(FL,!1);if(!(!R.isSuppressable||i||o&&!N.shouldApplyToSelf()))return!1}return(this.hp>0||R.isBypassFaint)&&!R.conditions.find(i=>!i(this))}hasAbility(E,R=!0,I=!1){return!!(this.getAbility(I).id===E&&(!R||this.canApplyAbility())||this.getPassiveAbility().id===E&&this.hasPassive()&&(!R||this.canApplyAbility(!0)))}hasAbilityWithAttr(E,R=!0,I=!1){return!!((!R||this.canApplyAbility())&&this.getAbility(I).hasAttr(E)||this.hasPassive()&&(!R||this.canApplyAbility(!0))&&this.getPassiveAbility().hasAttr(E))}getWeight(){const E=this.getTag(Jl);let R=0;Ne(E)||(R=100*E.autotomizeCount);const I=.1,N=new me(this.species.weight-R);return sA(nr,this,null,!1,N),Math.max(I,N.value)}getTeraType(){if(this.hasSpecies(e.TERAPAGOS))return L.STELLAR;if(this.hasSpecies(e.OGERPON))switch(this.species.speciesId===e.OGERPON?this.formIndex:this.fusionFormIndex){case 0:case 4:return L.GRASS;case 1:case 5:return L.WATER;case 2:case 6:return L.FIRE;case 3:case 7:return L.ROCK}return this.hasSpecies(e.SHEDINJA)?L.BUG:this.teraType}isGrounded(){return!!this.getTag(Dr)||!this.isOfType(L.FLYING,!0,!0)&&!this.hasAbility(O.LEVITATE)&&!this.getTag(Y.FLOATING)&&!this.getTag(Es)}isTrapped(E=[],R=!0){var o;const I=this.getTag(Y.COMMANDED);if((o=I==null?void 0:I.getSourcePokemon())!=null&&o.isActive(!0))return!0;if(this.isOfType(L.GHOST))return!1;const N=new SA(!1),T=(this.isPlayer()?s.getEnemyField():s.getPlayerField()).filter(C=>C.switchOutStatus===!1);for(const C of T)AX(Ml,C,N,this,E,R);const i=this.isPlayer()?qe.PLAYER:qe.ENEMY;return N.value||!!this.getTag(eO)||!!s.arena.getTagOnSide(oe.FAIRY_LOCK,i)}getMoveType(E,R=!0){const I=new me(E.type);return LE(gR,this,null,E,I),ZO(TI,this,null,E,R,I),this.isTerastallized&&(E.id===A.TERA_BLAST||E.id===A.TERA_STARSTORM&&I.value===L.STELLAR)||(s.arena.applyTags(oe.ION_DELUGE,R,I),this.getTag(Y.ELECTRIFIED)&&(I.value=L.ELECTRIC)),I.value}getMoveEffectiveness(E,R,I=!1,N=!0,S,T=!1){var _,G;if(!Ne((_=this.turnData)==null?void 0:_.moveEffectiveness))return(G=this.turnData)==null?void 0:G.moveEffectiveness;if(R.hasAttr(VS))return 1;const i=E.getMoveType(R),o=new me(R.category!==u.STATUS||R.hasAttr(LU)?this.getAttackTypeEffectiveness(i,E,!1,N,R,T):1);LE(Is,E,this,R,o),this.getTypes(!0,!0).find(H=>R.isTypeImmune(E,this,H))&&(o.value=0),this.getTag(Ql)&&this.getMoveType(R)===L.FIRE&&(o.value*=2);const C=S??new SA(!1);I||(FI(VL,this,E,R,C,N,o),C.value||FI(gI,this,E,R,C,N,o),C.value||(this.isPlayer()?s.getPlayerField():s.getEnemyField()).forEach(c=>FI(ES,c,E,R,C)));const U=this.findTags(H=>H instanceof xl&&H.immuneType===i);for(const H of U)if(R&&!R.getAttrs(XR).some(c=>c.tagType===H.tagType)){o.value=0;break}return!I&&R.category!==u.STATUS&&FI(YC,this,E,R,C,N,o),R.category===u.STATUS&&R.hitsSubstitute(E,this)&&(o.value=0),C.value?0:o.value}getAttackTypeEffectiveness(E,R,I=!1,N=!0,S,T=!1){var _;if(E===L.STELLAR)return this.isTerastallized?2:1;const i=this.getTypes(!0,!0,void 0,T),o=s.arena;if(E===L.GROUND&&(this.isGrounded()||o.hasTag(oe.GRAVITY))){const G=i.indexOf(L.FLYING);G>-1&&i.splice(G,1)}let C=i.map(G=>{const H=new me(iP(E,G));if(JR(PO.TYPE_EFFECTIVENESS,H),S&&LE(XU,null,this,S,H,G),R){const c=new SA(!1);if(R.isActive(!0)&&R.hasAbilityWithAttr(FS)&&sA(FS,R,c,N,E,G),c.value&&H.value===0||this.findTags(d=>d instanceof pS).some(d=>d.ignoreImmunity(G,E))&&H.value===0)return 1}return H.value}).reduce((G,H)=>G*H,1);const U=new me(iP(E,L.FLYING));return JR(PO.TYPE_EFFECTIVENESS,U),!I&&((_=o.weather)==null?void 0:_.weatherType)===X.STRONG_WINDS&&!o.weather.isEffectSuppressed()&&this.isOfType(L.FLYING)&&U.value===2&&(C/=2,N||s.queueMessage(D.t("weather:strongWindsEffectMessage"))),C}getMatchupScore(E){const R=this.getTypes(!0),I=E.getTypes(!0,!0,!1,!0),N=(this.isActive(!0)?this.getEffectiveStat(h.SPD,E):this.getStat(h.SPD,!1))>=E.getEffectiveStat(h.SPD,this);let S=E.getAttackTypeEffectiveness(R[0],this,!1,!0,void 0,!0)*(N?1.25:1),T=1/Math.max(this.getAttackTypeEffectiveness(I[0],E),.25);R.length>1&&(S*=E.getAttackTypeEffectiveness(R[1],this)),I.length>1&&(T*=1/Math.max(this.getAttackTypeEffectiveness(I[1],E,!1,!1,void 0,!0),.25));let i=this.getHpRatio()+(1-E.getHpRatio());return N&&(i=Math.min(i*1.5,1)),(S+T)*i}getEvolution(){if(BA.hasOwnProperty(this.species.speciesId)){const E=BA[this.species.speciesId];for(const R of E)if(!R.item&&this.level>=R.level&&(Ne(R.preFormKey)||this.getFormKey()===R.preFormKey)&&(R.condition===null||R.condition.predicate(this)))return R}if(this.isFusion()&&this.fusionSpecies&&BA.hasOwnProperty(this.fusionSpecies.speciesId)){const E=BA[this.fusionSpecies.speciesId].map(R=>new yI(this.species.speciesId,R));for(const R of E)if(!R.item&&this.level>=R.level&&(Ne(R.preFormKey)||this.getFusionFormKey()===R.preFormKey)&&(R.condition===null||R.condition.predicate(this)))return R}return null}getLevelMoves(E,R=!1,I=!1,N=!1,S=0){const T=[];let i=[];if(E||(E=this.level),S===4&&this.fusionSpecies)i=this.getFusionSpeciesForm(!0).getLevelMoves().filter(o=>R&&o[0]===k||N&&o[0]===V||o[0]>0);else{if(I){const o=this.species.getSimulatedEvolutionChain(this.level,this.hasTrainer(),this.isBoss(),this.isPlayer());for(let C=0;C<o.length;C++){const U=XN(o[C][0],this.formIndex).getLevelMoves();N?i.push(...U):i.push(...U.filter(_=>R&&_[0]===k||(!C||_[0]>1)&&(C===o.length-1||_[0]<=o[C+1][1])))}}else i=this.getSpeciesForm(!0).getLevelMoves().filter(o=>R&&o[0]===k||N&&o[0]===V||o[0]>0);if(this.fusionSpecies&&S!==5)if(I){const o=this.fusionSpecies.getSimulatedEvolutionChain(this.level,this.hasTrainer(),this.isBoss(),this.isPlayer());for(let C=0;C<o.length;C++){const U=XN(o[C][0],this.fusionFormIndex).getLevelMoves();N?i.push(...U.filter(_=>R&&_[0]===k||_[0]!==k)):i.push(...U.filter(_=>R&&_[0]===k||(!C||_[0]>1)&&(C===o.length-1||_[0]<=o[C+1][1])))}}else i.push(...this.getFusionSpeciesForm(!0).getLevelMoves().filter(o=>R&&o[0]===k||N&&o[0]===V||o[0]>0))}return i.sort((o,C)=>o[0]>C[0]?1:o[0]<C[0]?-1:0),i=i.filter(o=>{const C=o[0],U=C<E,_=C===0&&R;return!(C>this.level)&&(N||!U||_)}),i&&this.getUniqueMoves(i,T),T}getUniqueMoves(E,R){const I=[];for(const N of E)I.find(S=>S===N[1])||(I.push(N[1]),R.push(N))}getEggMoves(){return NO[this.getSpeciesForm().getRootSpeciesId()]}setMove(E,R){if(R===A.NONE)return;const I=new Ye(R);this.moveset[E]=I,this.summonData.moveset&&(this.summonData.moveset[E]=I)}trySetShiny(E){if(s.gameMode.isEndless&&s.arena.biomeType===n.END)return!1;const R=(this.id&4294901760)>>>16,I=this.id&65535,N=s.gameData.trainerId^s.gameData.secretId,S=R^I,T=new me(CV);if(E===void 0){if(vE.isEventActive()){const i=vE.getClassicTrainerShinyChance();T.value*=vE.getShinyMultiplier(),this.hasTrainer()&&i>0&&(T.value=Math.max(i,T.value))}this.hasTrainer()||s.applyModifiers(as,!0,T)}else T.value=E;return this.shiny=(N^S)<T.value,this.shiny&&this.initShinySparkle(),this.shiny}trySetShinySeed(E,R){if(!this.shiny){const I=new me(CV);E===void 0||R?(E!==void 0&&R&&(I.value=E),vE.isEventActive()&&(I.value*=vE.getShinyMultiplier()),s.applyModifiers(as,!0,I)):I.value=E,this.shiny=De(65536)<I.value}return this.shiny&&(this.variant=this.variant??0,this.variant=Math.max(this.generateShinyVariant(),this.variant),this.luck=this.variant+1+(this.fusionShiny?this.fusionVariant+1:0),this.initShinySparkle()),this.shiny}generateShinyVariant(){var N;const E=this.formIndex;let R=this.species.speciesId;if(this.species.forms.length>0){const S=(N=this.species.forms[E])==null?void 0:N.formKey;S&&(R=`${R}-${S}`)}if(!this.shiny||!QR.hasOwnProperty(R)&&!QR.hasOwnProperty(this.species.speciesId))return 0;const I=new me(0);return s.executeWithSeedOffset(()=>{I.value=De(10)},this.id,s.waveSeed),I.value>=yv?0:I.value>=wv?1:2}tryRerollHiddenAbilitySeed(E,R){if(!this.species.abilityHidden)return!1;const I=new me(pM);return E===void 0||R?(E!==void 0&&R&&(I.value=E),this.hasTrainer()||s.applyModifiers(MI,!0,I)):I.value=E,De(65536)<I.value&&(this.abilityIndex=2),this.abilityIndex===2}generateFusionSpecies(E){var i;const R=new me(pM);this.hasTrainer()||s.applyModifiers(MI,!0,R);const I=!De(R.value),N=De(2),S=E?o=>BA.hasOwnProperty(o.speciesId)&&!CE.hasOwnProperty(o.speciesId)&&!o.subLegendary&&!o.legendary&&!o.mythical&&!o.isTrainerForbidden()&&o.speciesId!==this.species.speciesId&&o.speciesId!==e.DITTO:this.species.getCompatibleFusionSpeciesFilter();let T;E&&this instanceof Rt&&Ze.STARTER_FUSION_SPECIES_OVERRIDE?T=de(Ze.STARTER_FUSION_SPECIES_OVERRIDE):this instanceof pR&&Ze.OPP_FUSION_SPECIES_OVERRIDE&&(T=de(Ze.OPP_FUSION_SPECIES_OVERRIDE)),this.fusionSpecies=T??s.randomSpecies(((i=s.currentBattle)==null?void 0:i.waveIndex)||0,this.level,!1,S,!0),this.fusionAbilityIndex=this.fusionSpecies.abilityHidden&&I?2:this.fusionSpecies.ability2!==this.fusionSpecies.ability1?N:0,this.fusionShiny=this.shiny,this.fusionVariant=this.variant,this.fusionSpecies.malePercent===null?this.fusionGender=ye.GENDERLESS:this.id%256*.390625<this.fusionSpecies.malePercent?this.fusionGender=ye.MALE:this.fusionGender=ye.FEMALE,this.fusionFormIndex=s.getSpeciesFormIndex(this.fusionSpecies,this.fusionGender,this.getNature(),!0),this.fusionLuck=this.luck,this.generateName()}clearFusionSpecies(){this.fusionSpecies=null,this.fusionFormIndex=0,this.fusionAbilityIndex=0,this.fusionShiny=!1,this.fusionVariant=0,this.fusionGender=0,this.fusionLuck=0,this.fusionCustomPokemonData=null,this.generateName(),this.calculateStats()}generateAndPopulateMoveset(){var U,_;this.moveset=[];let E=[];const R=this.getLevelMoves(1,!0,!0);if(!R){console.warn("Error encountered trying to generate moveset for:",this.species.name);return}for(let G=0;G<R.length;G++){const H=R[G];if(this.level<H[0])break;let c=H[0];c===0&&(c=50),c===1&&Ke[H[1]].power>=80&&(c=40),!E.some(f=>f[0]===H[1])&&!Ke[H[1]].name.endsWith(" (N)")&&E.push([H[1],c])}if(this.hasTrainer()){const G=Object.keys(UI);for(const H of G){const c=Number.parseInt(H);let f=!1;for(const d of UI[H])if(Array.isArray(d)){if(d[0]===this.species.speciesId||this.fusionSpecies&&d[0]===this.fusionSpecies.speciesId&&d.slice(1).indexOf(this.species.forms[this.formIndex])>-1){f=!0;break}}else if(d===this.species.speciesId||this.fusionSpecies&&d===this.fusionSpecies.speciesId){f=!0;break}f&&!E.some(d=>d[0]===c)&&!Ke[c].name.endsWith(" (N)")&&(gi[c]===p.COMMON&&this.level>=15?E.push([c,4]):gi[c]===p.GREAT&&this.level>=30?E.push([c,8]):gi[c]===p.ULTRA&&this.level>=50&&E.push([c,14]))}if(this.level>=60){for(let c=0;c<3;c++){const f=NO[this.species.getRootSpeciesId()][c];!E.some(d=>d[0]===f)&&!Ke[f].name.endsWith(" (N)")&&E.push([f,40])}const H=NO[this.species.getRootSpeciesId()][3];if(this.level>=170&&!E.some(c=>c[0]===H)&&!Ke[H].name.endsWith(" (N)")&&!this.isBoss()&&E.push([H,30]),this.fusionSpecies){for(let f=0;f<3;f++){const d=NO[this.fusionSpecies.getRootSpeciesId()][f];!E.some(w=>w[0]===d)&&!Ke[d].name.endsWith(" (N)")&&E.push([d,40])}const c=NO[this.fusionSpecies.getRootSpeciesId()][3];this.level>=170&&!E.some(f=>f[0]===c)&&!Ke[c].name.endsWith(" (N)")&&!this.isBoss()&&E.push([c,30])}}}this.isBoss()&&(E=E.filter(G=>!Ke[G[0]].hasAttr(vI)),E=E.filter(G=>!Ke[G[0]].hasAttr(cU))),E=E.filter(G=>!Ke[G[0]].hasAttr(Os)),this.hasTrainer()&&(E=E.filter(G=>!Ke[G[0]].hasAttr(kO)),E=E.map(G=>[G[0],G[1]*(Ke[G[0]].hasAttr(vI)?.5:1)]),E=E.map(G=>[G[0],G[1]*(Ke[G[0]].hasAttr(Os)?.5:1)]),E=E.map(G=>[G[0],G[1]*(Ke[G[0]].getAttrs(Le).some(H=>H.stages>1&&H.selfTarget)?1.25:1)]),E=E.map(G=>[G[0],G[1]*(Ke[G[0]].isChargingMove()||Ke[G[0]].hasAttr(kR)?.7:1)]));const I=Math.min(E.reduce((G,H)=>Math.max(Ke[H[0]].calculateEffectivePower(),G),40),90);E=E.map(G=>[G[0],G[1]*(Ke[G[0]].category===u.STATUS?1:Math.max(Math.min(Ke[G[0]].calculateEffectivePower()/I,1),.5))]);const N=this.getStat(h.ATK),S=this.getStat(h.SPATK),T=N>S?u.SPECIAL:u.PHYSICAL,i=T===u.PHYSICAL?N/S:S/N;E=E.map(G=>[G[0],G[1]*(Ke[G[0]].category===T?Math.min(Math.pow(i,3)*1.3,1):1)]);let o=.9;this.hasTrainer()&&(o+=.7),this.isBoss()&&(o+=.4);const C=E.map(G=>[G[0],Math.ceil(Math.pow(G[1],o)*100)]);if(this.hasTrainer()||this.isBoss()){const G=C.filter(H=>Ke[H[0]].category!==u.STATUS&&this.isOfType(Ke[H[0]].type));if(G.length){const H=G.reduce((d,w)=>d+w[1],0);let c=De(H),f=0;for(;c>G[f][1];)c-=G[f++][1];this.moveset.push(new Ye(G[f][0],0,0))}}else{const G=C.filter(H=>Ke[H[0]].category!==u.STATUS);if(G.length){const H=G.reduce((d,w)=>d+w[1],0);let c=De(H),f=0;for(;c>G[f][1];)c-=G[f++][1];this.moveset.push(new Ye(G[f][0],0,0))}}for(;C.length>this.moveset.length&&this.moveset.length<4;){this.hasTrainer()?E=C.filter(f=>!this.moveset.some(d=>f[0]===d.moveId)).map(f=>{let d;return this.moveset.some(w=>w.getMove().category!==u.STATUS&&w.getMove().type===Ke[f[0]].type)?d=Math.ceil(Math.sqrt(f[1])):Ke[f[0]].category!==u.STATUS?d=Math.ceil(f[1]/Math.max(Math.pow(4,this.moveset.filter(w=>(w.getMove().power??0)>1).length)/8,.5)*(this.isOfType(Ke[f[0]].type)?20:1)):d=f[1],[f[0],d]}):E=C.filter(f=>!this.moveset.some(d=>f[0]===d.moveId));const G=E.reduce((f,d)=>f+d[1],0);let H=De(G),c=0;for(;H>E[c][1];)H-=E[c++][1];this.moveset.push(new Ye(E[c][0],0,0))}(this.isPlayer()||!((U=s.currentBattle)!=null&&U.isBattleMysteryEncounter())||!((_=s.currentBattle)!=null&&_.mysteryEncounter))&&s.triggerPokemonFormChange(this,yN)}trySelectMove(E,R){const I=this.getMoveset().length>E?this.getMoveset()[E]:null;return(I==null?void 0:I.isUsable(this,R))??!1}showInfo(){if(!this.battleInfo.visible){const E=s.fieldUI.getAll().slice(0,4).filter(R=>R instanceof _a&&R instanceof uo===this.isPlayer()).find(()=>!0);!E||!this.getFieldIndex()?(s.fieldUI.sendToBack(this.battleInfo),s.sendTextToBack()):s.fieldUI.moveAbove(this.battleInfo,E),this.battleInfo.setX(this.battleInfo.x+(this.isPlayer()?150:this.isBoss()?-198:-150)),this.battleInfo.setVisible(!0),this.isPlayer()&&(this.battleInfo.expMaskRect.x+=150),s.tweens.add({targets:[this.battleInfo,this.battleInfo.expMaskRect],x:this.isPlayer()?"-=150":`+=${this.isBoss()?246:150}`,duration:1e3,ease:"Cubic.easeOut"})}}hideInfo(){return new Promise(E=>{this.battleInfo&&this.battleInfo.visible?s.tweens.add({targets:[this.battleInfo,this.battleInfo.expMaskRect],x:this.isPlayer()?"+=150":`-=${this.isBoss()?246:150}`,duration:500,ease:"Cubic.easeIn",onComplete:r(()=>{this.isPlayer()&&(this.battleInfo.expMaskRect.x-=150),this.battleInfo.setVisible(!1),this.battleInfo.setX(this.battleInfo.x-(this.isPlayer()?150:this.isBoss()?-198:-150)),E()},"onComplete")}):E()})}setSwitchOutStatus(E){this.switchOutStatus=E}updateInfo(E){return this.battleInfo.updateInfo(this,E)}updateEffectiveness(E){this.battleInfo.updateEffectiveness(E)}toggleStats(E){this.battleInfo.toggleStats(E)}toggleFlyout(E){this.battleInfo.toggleFlyout(E)}addExp(E,R=!1){const I=s.getMaxExpLevel(R),N=this.exp;for(this.exp+=E;this.level<I&&this.exp>=SO(this.level+1,this.species.growthRate);)this.level++;this.level>=I&&(console.log(N,this.exp,SO(this.level,this.species.growthRate)),this.exp=Math.max(SO(this.level,this.species.growthRate),N)),this.levelExp=this.exp-SO(this.level,this.species.growthRate)}isOpponent(E){return this.isPlayer()!==E.isPlayer()}getOpponent(E){const R=this.getOpponents()[E];return R.summonData?R:null}getOpponents(E=!0){return(this.isPlayer()?s.getEnemyField():s.getPlayerField()).filter(R=>R.isActive(E))}getOpponentDescriptor(){const E=this.getOpponents();return E.length===1?E[0].name:this.isPlayer()?D.t("arenaTag:opposingTeam"):D.t("arenaTag:yourTeam")}getAlly(){return(this.isPlayer()?s.getPlayerField():s.getEnemyField())[this.getFieldIndex()?0:1]}getAlliedField(){return this instanceof Rt?s.getPlayerField():s.getEnemyField()}getStatStageMultiplier(E,R,I,N=!1,S=!1,T=!0,i=!1){const o=new me(this.getStatStage(E)),C=new SA(!1);if(R){if(S)switch(E){case h.ATK:case h.SPATK:o.value=Math.max(o.value,0);break;case h.DEF:case h.SPDEF:o.value=Math.min(o.value,0);break}N||sA(KL,R,null,T,E,C),I&&LE(FN,this,R,I,C)}if(!C.value){const U=new me(Math.max(2,2+o.value)/Math.max(2,2-o.value));return i||s.applyModifiers(ZS,this.isPlayer(),E,U),Math.min(U.value,4)}return 1}getAccuracyMultiplier(E,R){if(R.hasAttr(YL))return 1;const N=new me(this.getStatStage(h.ACC)),S=new me(E.getStatStage(h.EVA)),T=new SA(!1),i=new SA(!1);sA(KL,E,null,!1,h.ACC,T),sA(KL,this,null,!1,h.EVA,i),LE(FN,this,E,R,i),s.applyModifiers(ZS,this.isPlayer(),h.ACC,N),N.value=T.value?0:Math.min(N.value,6),S.value=i.value?0:S.value,E.findTag(_=>_ instanceof pS)&&(S.value=Math.min(0,S.value));const o=new me(1);N.value!==S.value&&(o.value=N.value>S.value?(3+Math.min(N.value-S.value,6))/3:3/(3+Math.min(S.value-N.value,6))),tP(OE,this,h.ACC,o,!1,R);const C=new me(1);tP(OE,E,h.EVA,C);const U=this.getAlly();if(!Ne(U)){const _=this.hasAbilityWithAttr(pI)||R.hasFlag(je.IGNORE_ABILITIES);RP(dL,U,h.ACC,o,!1,this,_),RP(dL,U,h.EVA,C,!1,this,_)}return o.value/C.value}getBaseDamage({source:E,move:R,moveCategory:I,ignoreAbility:N=!1,ignoreSourceAbility:S=!1,ignoreAllyAbility:T=!1,ignoreSourceAllyAbility:i=!1,isCritical:o=!1,simulated:C=!0}){const U=I===u.PHYSICAL,_=2*E.level/5+2,G=R.calculateBattlePower(E,this,C),H=new me(E.getEffectiveStat(U?h.ATK:h.SPATK,this,void 0,S,N,T,o,C));LE(wS,E,this,R,H);const c=new me(this.getEffectiveStat(U?h.DEF:h.SPDEF,E,R,N,S,i,o,C));LE(yU,E,this,R,c);const f=_*G*H.value/c.value/50+2;return C||console.log("base damage",f,R.name,G,H.value,c.value),f}calculateStabMultiplier(E,R,I,N){if(R.hasAttr(VS))return 1;const S=E.getTypes(),T=E.getTeraType(),i=E.getMoveType(R),o=S.includes(E.getMoveType(R)),C=new me(1);return o&&i!==L.STELLAR&&(C.value+=.5),LE(IS,E,this,R,C),I||sA(KC,E,null,N,C),E.isTerastallized&&T===i&&i!==L.STELLAR&&(C.value+=.5),E.isTerastallized&&E.getTeraType()===L.STELLAR&&(!E.stellarTypesBoosted.includes(i)||E.hasSpecies(e.TERAPAGOS))&&(C.value+=o?.5:.2),Math.min(C.value,2.25)}getAttackDamage({source:E,move:R,ignoreAbility:I=!1,ignoreSourceAbility:N=!1,ignoreAllyAbility:S=!1,ignoreSourceAllyAbility:T=!1,isCritical:i=!1,simulated:o=!0,effectiveness:C}){var ae;const U=new me(0),_=this.isPlayer()?qe.PLAYER:qe.ENEMY,G=new me(R.category);LE(kL,E,this,R,G);const H=G.value,c=E.getMoveType(R),f=new SA(!1),d=C??this.getMoveEffectiveness(E,R,I,o,f),w=H===u.PHYSICAL,m=new me(s.arena.getAttackTypeMultiplier(c,E.isGrounded()));LE(rU,E,this,R,m);const W=d*m.value===0;if(f.value||W)return{cancelled:f.value,result:R.id===A.SHEER_COLD?11:5,damage:0};const v=new me(0);if(LE(oO,E,this,R,v),v.value){const Pe=new me(1);return s.applyModifiers($I,E.isPlayer(),E,R.id,null,Pe),v.value=uA(v.value*Pe.value),{cancelled:!1,result:1,damage:v.value}}const $=new SA(!1);if(LE(kO,E,this,R,$),$.value)return{cancelled:!1,result:4,damage:this.hp};const Oe=this.getBaseDamage({source:E,move:R,moveCategory:H,ignoreAbility:I,ignoreSourceAbility:N,ignoreAllyAbility:S,ignoreSourceAllyAbility:T,isCritical:i,simulated:o}),{targets:q,multiple:Ie}=JI(E,R.id),Ae=(Ie?q.length:1)>1?.75:1,Re=new me(1);s.applyModifiers($I,E.isPlayer(),E,R.id,null,Re),N||ZO(Ar,E,this,R,o,null,Re);const se=new me(1);this.getTag(Y.RECEIVE_DOUBLE_DAMAGE)&&(se.value=2);const ie=new me(i?1.5:1);sA(Rl,E,null,o,ie);const He=o?1:this.randBattleSeedIntRange(85,100)/100,ve=this.calculateStabMultiplier(E,R,N,o);let xe=1;if(w&&E.status&&E.status.effect===J.BURN&&!R.hasAttr(GU)){const Pe=new SA(!1);N||sA(ll,E,Pe,o),Pe.value||(xe=.5)}const EA=new me(1);i||s.arena.applyTagsForSide(uS,_,o,E,H,EA);const NA=new me(1);R.getAttrs(XR).filter(Pe=>Pe.doubleDamage).forEach(Pe=>{this.getTag(Pe.tagType)&&(NA.value*=2)});const rA=((ae=s.arena.terrain)==null?void 0:ae.terrainType)===$e.MISTY&&this.isGrounded()&&c===L.DRAGON?.5:1;if(U.value=uA(Oe*Ae*Re.value*m.value*se.value*ie.value*He*ve*d*xe*EA.value*NA.value*rA),N||ZO(VC,E,this,R,o,U),E.isPlayer()||s.applyModifiers(ei,!1,U),this.isPlayer()||s.applyModifiers(Ai,!1,U),!I){FI(KR,this,E,R,f,o,U);const Pe=this.getAlly();s.currentBattle.double&&!Ne(Pe)&&Pe.isActive(!0)&&FI(FC,Pe,E,R,f,o,U)}LE(sU,E,this,R,U),this.isFullHp()&&!I&&FI(dC,this,E,R,f,!1,U),o||console.log("damage",U.value,R.name);let Be;return d<1?Be=3:d>1?Be=2:Be=1,{cancelled:f.value,result:Be,damage:U.value}}getCriticalHitResult(E,R,I=!0){const N=this.isPlayer()?qe.PLAYER:qe.ENEMY;if(s.arena.getTagOnSide(cC,N)||Ze.NEVER_CRIT_OVERRIDE||R.hasAttr(oO))return!1;const T=new SA(!1);if(E.getTag(Y.ALWAYS_CRIT)&&(T.value=!0),LE(nI,E,this,R,T),sA(Ol,E,null,I,T,this,R),!T.value){const i=[24,8,2,1][Math.max(0,Math.min(this.getCritStage(E,R),3))];T.value=i===1||!s.randBattleSeedInt(i)}return sA(Nr,this,null,I,T),T.value}damage(E,R=!1,I=!1,N=!1){if(this.isFainted())return 0;const S=new SA(!1);return!I&&this.hp-E<=0&&(this.hp>=1&&this.getTag(Y.ENDURING)?S.value=this.lapseTag(Y.ENDURING):this.hp>1&&this.getTag(Y.STURDY)?S.value=this.lapseTag(Y.STURDY):this.hp>=1&&this.getTag(Y.ENDURE_TOKEN)&&(S.value=this.lapseTag(Y.ENDURE_TOKEN)),S.value||s.applyModifiers(Vr,this.isPlayer(),this,S),S.value&&(E=this.hp-1)),E=Math.min(E,this.hp),this.hp=this.hp-E,this.isFainted()&&!N&&(s.setPhaseQueueSplice(),s.unshiftPhase(new uC(this.getBattlerIndex(),I)),this.destroySubstitute(),this.lapseTag(Y.COMMANDED)),E}damageAndUpdate(E,{result:R=1,isCritical:I=!1,ignoreSegments:N=!1,ignoreFaintPhase:S=!1,source:T=void 0}={}){const i=[10,13].includes(R),o=new _C(this.getBattlerIndex(),E,R,I);return s.unshiftPhase(o),this.switchOutStatus&&T&&(E=0),E=this.damage(E,N,i,S),this.battleInfo.visible&&this.updateInfo(),o.updateAmount(E),(!T||T.turnData.hitCount<=1)&&rc(YS,this,E,this.hasPassive(),!1,[],T),E}heal(E){const R=Math.min(E,this.getMaxHp()-this.hp);return this.hp+=R,R}isBossImmune(){return this.isBoss()}isMax(){const E=[te.GIGANTAMAX,te.GIGANTAMAX_RAPID,te.GIGANTAMAX_SINGLE,te.ETERNAMAX];return E.includes(this.getFormKey())||!!this.getFusionFormKey()&&E.includes(this.getFusionFormKey())}isMega(){const E=[te.MEGA,te.MEGA_X,te.MEGA_Y,te.PRIMAL];return E.includes(this.getFormKey())||!!this.getFusionFormKey()&&E.includes(this.getFusionFormKey())}canAddTag(E){if(this.getTag(E))return!1;const R=new _A(E,0,0),I=new SA(!1);return hi(wO,this,R,I,!0),this.getAlliedField().forEach(S=>hi($N,S,R,I,!0,this)),!I.value}addTag(E,R=0,I,N){const S=this.getTag(E);if(S)return S.onOverlap(this),!1;const T=C6(E,R,I,N),i=new SA(!1);if(hi(wO,this,T,i),i.value)return!1;for(const o of this.getAlliedField())if(hi($N,o,T,i,!1,this),i.value)return!1;return T.canAdd(this)?(this.summonData.tags.push(T),T.onAdd(this),!0):!1}getTag(E){return E instanceof Function?this.summonData.tags.find(R=>R instanceof E):this.summonData.tags.find(R=>R.tagType===E)}findTag(E){return this.summonData.tags.find(R=>E(R))}findTags(E){return this.summonData.tags.filter(R=>E(R))}lapseTag(E){const R=this.summonData.tags,I=R.find(N=>N.tagType===E);return I?(I.lapse(this,Yt.CUSTOM)||(I.onRemove(this),R.splice(R.indexOf(I),1)),!0):!1}lapseTags(E){const R=this.summonData.tags;R.filter(I=>E===Yt.FAINT||I.lapseTypes.some(N=>N===E)&&!I.lapse(this,E)).forEach(I=>{I.onRemove(this),R.splice(R.indexOf(I),1)})}removeTag(E){const R=this.summonData.tags,I=R.find(N=>N.tagType===E);I&&(I.onRemove(this),R.splice(R.indexOf(I),1))}findAndRemoveTags(E){const R=this.summonData.tags,I=R.filter(N=>E(N));for(const N of I)N.turnCount=0,N.onRemove(this),R.splice(R.indexOf(N),1)}removeTagsBySourceId(E){this.findAndRemoveTags(R=>R.isSourceLinked()&&R.sourceId===E)}transferTagsBySourceId(E,R){this.summonData.tags.forEach(I=>{I.sourceId===E&&(I.sourceId=R)})}transferSummon(E){for(const R of cO){const I=E.getStatStage(R);this instanceof Rt&&I===6&&s.validateAchv(oA.TRANSFER_MAX_STAT_STAGE),this.setStatStage(R,I)}for(const R of E.summonData.tags)!R.isBatonPassable||R.tagType===Y.TELEKINESIS&&this.species.speciesId===e.GENGAR&&this.getFormKey()==="mega"||(R instanceof ql&&R.swapStat(this),this.summonData.tags.push(R));this.updateInfo()}isMoveRestricted(E,R){return this.getRestrictingTag(E,R)!==null}isMoveTargetRestricted(E,R,I){for(const N of this.findTags(S=>S instanceof uO))if(N.isMoveTargetRestricted(E,R,I))return N!==null;return!1}getRestrictingTag(E,R,I){for(const N of this.findTags(S=>S instanceof uO))if(N.isMoveRestricted(E,R)||R&&I&&N.isMoveTargetRestricted(E,R,I))return N;return null}getMoveHistory(){return this.summonData.moveHistory}pushMoveHistory(E){var R;this.isOnField()&&(E.turn=(R=s.currentBattle)==null?void 0:R.turn,this.getMoveHistory().push(E))}getLastXMoves(E=1){const R=this.getMoveHistory();return E>=0?R.slice(Math.max(R.length-E,0)).reverse():R.slice(0).reverse()}getMoveQueue(){return this.summonData.moveQueue}changeForm(E){return new Promise(R=>{this.formIndex=Math.max(this.species.forms.findIndex(N=>N.formKey===E.formKey),0),this.generateName();const I=this.getSpeciesForm().getAbilityCount();this.abilityIndex>=I&&(this.abilityIndex=I-1),s.gameData.setPokemonSeen(this,!1),this.setScale(this.getSpriteScale()),this.loadAssets().then(()=>{this.calculateStats(),s.updateModifiers(this.isPlayer(),!0),Promise.all([this.updateInfo(),s.updateFieldScale()]).then(()=>R())})})}cry(E,R){const I=R??s,N=this.getSpeciesForm(void 0,!0).cry(E);let S=N.totalDuration*1e3;if(this.fusionSpecies&&this.getSpeciesForm(void 0,!0)!==this.getFusionSpeciesForm(void 0,!0)){let T=this.getFusionSpeciesForm(void 0,!0).cry(E,!0);S=Math.min(S,T.totalDuration*1e3),T.destroy(),I.time.delayedCall(KA(Math.ceil(S*.4)),()=>{try{uL.fadeOut(I,N,KA(Math.ceil(S*.2))),T=this.getFusionSpeciesForm(void 0,!0).cry(Object.assign({seek:Math.max(T.totalDuration*.4,0)},E)),uL.fadeIn(I,T,KA(Math.ceil(S*.2)),I.masterVolume*I.fieldVolume,0)}catch(i){console.error(i)}})}return N}faintCry(E){if(this.fusionSpecies&&this.getSpeciesForm()!==this.getFusionSpeciesForm())return this.fusionFaintCry(E);const R=this.species.getCryKey(this.formIndex);let I=.85;const N=s.playSound(R,{rate:I});if(!N||s.fieldVolume===0)return E();const S=this.getSprite(),T=this.getTintSprite(),i=Math.max(s.sound.get(R).totalDuration*50,25);let o=0,C;S.anims.pause(),T==null||T.anims.pause();let U=s.time.addEvent({delay:KA(i),repeat:-1,callback:r(()=>{for(C=S.anims.msPerFrame/I,o+=i;o>C;)S.anims.duration&&(S.anims.nextFrame(),T==null||T.anims.nextFrame()),o-=C;N&&!N.pendingRemove?(I*=.99,N.setRate(I)):(U==null||U.destroy(),U=null,E&&E())},"callback")});s.time.delayedCall(KA(3e3),()=>{!U||!s||(N!=null&&N.isPlaying&&N.stop(),U.destroy(),E&&E())})}fusionFaintCry(E){const R=this.species.getCryKey(this.formIndex);let I=0,N=.85;const S=s.playSound(R,{rate:N}),T=this.getSprite(),i=this.getTintSprite();let o=S.totalDuration*1e3;const C=this.fusionSpecies.getCryKey(this.fusionFormIndex);let U=s.playSound(C,{rate:N});if(!S||!U||s.fieldVolume===0)return E();U.stop(),o=Math.min(o,U.totalDuration*1e3),U.destroy();const _=Math.max(o*.05,25);let G=0,H=0;const c=Math.ceil(o*.4);for(;H<c;)++I,H+=_*N,N*=.99;G=I,I=0,N=.85;let f=0,d;T.anims.pause(),i==null||i.anims.pause();let w=s.time.addEvent({delay:KA(_),repeat:-1,callback:r(()=>{for(++I,d=T.anims.msPerFrame/N,f+=_;f>d;)T.anims.duration&&(T.anims.nextFrame(),i==null||i.anims.nextFrame()),f-=d;I===G&&C&&(uL.fadeOut(s,S,KA(Math.ceil(o/N*.2))),U=s.playSound(C,Object.assign({seek:Math.max(U.totalDuration*.4,0),rate:N})),uL.fadeIn(s,U,KA(Math.ceil(o/N*.2)),s.masterVolume*s.fieldVolume,0)),N*=.99,S&&!S.pendingRemove&&S.setRate(N),U&&!U.pendingRemove&&U.setRate(N),(!S||S.pendingRemove)&&(!U||U.pendingRemove)&&(w==null||w.destroy(),w=null,E&&E())},"callback")});s.time.delayedCall(KA(3e3),()=>{!w||!s||(S!=null&&S.isPlaying&&S.stop(),U!=null&&U.isPlaying&&U.stop(),w.destroy(),E&&E())})}isOppositeGender(E){return this.gender!==ye.GENDERLESS&&E.gender===(this.gender===ye.MALE?ye.FEMALE:ye.MALE)}queueImmuneMessage(E,R){var N;if(!R||E)return;const I=R&&((N=this.status)==null?void 0:N.effect)===R?Gv(R??J.NONE,Z(this)):D.t("abilityTriggers:moveImmunity",{pokemonNameWithAffix:Z(this)});s.queueMessage(I)}canSetStatus(E,R=!1,I=!1,N=null,S=!1){var o,C,U,_,G,H;if(E!==J.FAINT){if(I?((o=this.status)==null?void 0:o.effect)===E:this.status)return this.queueImmuneMessage(R,E),!1;if(this.isGrounded()&&!S&&((C=s.arena.terrain)==null?void 0:C.terrainType)===$e.MISTY)return this.queueImmuneMessage(R,E),!1}const T=this.getTypes(!0,!0);switch(E){case J.POISON:case J.TOXIC:const c=T.map(f=>{if(f!==L.POISON&&f!==L.STEEL)return!1;const d=new SA(!1);return!(N&&(sA(fl,N,d,!1,E,f),d.value))});if((this.isOfType(L.POISON)||this.isOfType(L.STEEL))&&c.includes(!0))return this.queueImmuneMessage(R,E),!1;break;case J.PARALYSIS:if(this.isOfType(L.ELECTRIC))return this.queueImmuneMessage(R,E),!1;break;case J.SLEEP:if(this.isGrounded()&&((U=s.arena.terrain)==null?void 0:U.terrainType)===$e.ELECTRIC)return this.queueImmuneMessage(R,E),!1;break;case J.FREEZE:if(this.isOfType(L.ICE)||!S&&((H=(G=(_=s)==null?void 0:_.arena)==null?void 0:G.weather)!=null&&H.weatherType)&&[X.SUNNY,X.HARSH_SUN].includes(s.arena.weather.weatherType))return this.queueImmuneMessage(R,E),!1;break;case J.BURN:if(this.isOfType(L.FIRE))return this.queueImmuneMessage(R,E),!1;break}const i=new SA(!1);if(tv(dR,this,E,i,R),i.value)return!1;for(const c of this.getAlliedField())if(tv(hS,c,E,i,R,this,N),i.value)break;return i.value?!1:N&&N!==this&&this.isSafeguarded(N)?(R||s.queueMessage(D.t("moveTriggers:safeguard",{targetName:Z(this)})),!1):!0}trySetStatus(E,R=!1,I=null,N=0,S=null,T,i=!0){if(!this.canSetStatus(E,i,T,I)||this.isFainted()&&E!==J.FAINT)return!1;if(E===J.SLEEP||E===J.FREEZE){const C=s.getCurrentPhase();C instanceof jO&&C.getUserPokemon()===this&&(this.turnData.hitCount=1,this.turnData.hitsLeft=1)}if(R)return T&&this.resetStatus(!1),s.unshiftPhase(new _1(this.getBattlerIndex(),E,N,S,I)),!0;let o;if(E===J.SLEEP){o=new me(this.randBattleSeedIntRange(2,4)),this.setFrameRate(4);const U=[Y.UNDERGROUND,Y.UNDERWATER,Y.HIDDEN,Y.FLYING].find(_=>this.getTag(_));U&&(this.removeTag(U),this.getMoveQueue().pop())}return o=o,E=E,this.status=new pN(E,0,o==null?void 0:o.value),!0}resetStatus(E=!0,R=!1,I=!1,N=!0){var T;const S=(T=this.status)==null?void 0:T.effect;!E&&S===J.FAINT||(N?s.unshiftPhase(new u1(this,R,I)):this.clearStatus(R,I))}clearStatus(E,R){var N;const I=(N=this.status)==null?void 0:N.effect;this.status=null,I===J.SLEEP&&(this.setFrameRate(10),this.getTag(Y.NIGHTMARE)&&this.lapseTag(Y.NIGHTMARE)),E&&this.getTag(Y.CONFUSED)&&this.lapseTag(Y.CONFUSED),R&&this.loadAssets(!1).then(()=>this.playAnim()),this.updateInfo(!0)}isSafeguarded(E){const R=this.isPlayer()?qe.PLAYER:qe.ENEMY;if(s.arena.getTagOnSide(oe.SAFEGUARD,R)){const I=new SA(!1);return E&&sA(jN,E,null,!1,I),!I.value}return!1}fieldSetup(E){var R;this.setSwitchOutStatus(!1),s&&s.triggerPokemonFormChange(this,fa,!0),this.getTag(OR)&&(s.triggerPokemonBattleAnim(this,cL.SUBSTITUTE_ADD),this.getTag(OR).sourceInFocus=!1),this.hasAbilityWithAttr(HS)&&s.currentBattle.double&&((R=this.getAlly())==null?void 0:R.species.speciesId)===e.DONDOZO&&this.setVisible(!1),E&&this.resetSummonData()}resetSummonData(){const E=this.summonData.illusion;this.summonData.speciesForm&&(this.summonData.speciesForm=null,this.updateFusionPalette()),this.summonData=new LS,this.tempSummonData=new TD,this.summonData.illusion=E,this.updateInfo()}resetBattleAndWaveData(){this.battleData=new NS,this.resetWaveData()}resetWaveData(){this.waveData=new nD}resetTera(){const E=this.isTerastallized;this.isTerastallized=!1,this.stellarTypesBoosted=[],E&&(this.updateSpritePipelineData(),s.triggerPokemonFormChange(this,oL))}resetTurnData(){this.turnData=new aD}getExpValue(){return this.getSpeciesForm().getBaseExp()*this.level/5+1}setFrameRate(E){var R;s.anims.get(this.getBattleSpriteKey()).frameRate=E;try{this.getSprite().play(this.getBattleSpriteKey())}catch(I){console.error(`Failed to play animation for ${this.getBattleSpriteKey()}`,I)}try{(R=this.getTintSprite())==null||R.play(this.getBattleSpriteKey())}catch(I){console.error(`Failed to play animation for ${this.getBattleSpriteKey()}`,I)}}tint(E,R,I,N){const S=this.getTintSprite();S==null||S.setTintFill(E),S==null||S.setVisible(!0),I?(S==null||S.setAlpha(0),s.tweens.add({targets:S,alpha:R||1,duration:I,ease:N||"Linear"})):S==null||S.setAlpha(R)}untint(E,R){const I=this.getTintSprite();E?s.tweens.add({targets:I,alpha:0,duration:E,ease:R||"Linear",onComplete:r(()=>{I==null||I.setVisible(!1),I==null||I.setAlpha(1)},"onComplete")}):(I==null||I.setVisible(!1),I==null||I.setAlpha(1))}enableMask(){var E,R,I;this.maskEnabled||(this.maskSprite=this.getTintSprite(),(E=this.maskSprite)==null||E.setVisible(!0),(R=this.maskSprite)==null||R.setPosition(this.x*this.parentContainer.scale+this.parentContainer.x,this.y*this.parentContainer.scale+this.parentContainer.y),(I=this.maskSprite)==null||I.setScale(this.getSpriteScale()*this.parentContainer.scale),this.maskEnabled=!0)}disableMask(){var E,R,I;this.maskEnabled&&((E=this.maskSprite)==null||E.setVisible(!1),(R=this.maskSprite)==null||R.setPosition(0,0),(I=this.maskSprite)==null||I.setScale(this.getSpriteScale()),this.maskSprite=null,this.maskEnabled=!1)}sparkle(){this.shinySparkle&&HM(this.shinySparkle,this.variant)}updateFusionPalette(E){if(!this.getFusionSpeciesForm(E)){[this.getSprite(),this.getTintSprite()].filter(Be=>!!Be).map(Be=>{Be.pipelineData[`spriteColors${E&&this.summonData.speciesForm?"Base":""}`]=[],Be.pipelineData[`fusionSpriteColors${E&&this.summonData.speciesForm?"Base":""}`]=[]});return}const R=this.getSpeciesForm(E),I=this.getFusionSpeciesForm(E),N=R.getSpriteKey(this.getGender(E)===ye.FEMALE,R.formIndex,this.shiny,this.variant),S=R.getSpriteKey(this.getGender(E)===ye.FEMALE,R.formIndex,this.shiny,this.variant).replace("pkmn__","pkmn__back__"),T=I.getSpriteKey(this.getFusionGender(E)===ye.FEMALE,I.formIndex,this.fusionShiny,this.fusionVariant),i=I.getSpriteKey(this.getFusionGender(E)===ye.FEMALE,I.formIndex,this.fusionShiny,this.fusionVariant).replace("pkmn__","pkmn__back__"),o=s.textures.get(N),C=s.textures.get(S),U=s.textures.get(T),_=s.textures.get(i),[G,H,c,f]=[o,C,U,_].map(Be=>Be.frames[Be.firstFrame]),[d,w,m,W]=[o,C,U,_].map(Be=>Be.getSourceImage()),v=document.createElement("canvas"),$=document.createElement("canvas"),Oe=document.createElement("canvas"),q=document.createElement("canvas"),Ie=[],le=[];[v,$,Oe,q].forEach((Be,ae)=>{const Pe=Be.getContext("2d"),Te=[G,H,c,f][ae];if(Be.width=Te.width,Be.height=Te.height,Pe){Pe.drawImage([d,w,m,W][ae],Te.cutX,Te.cutY,Te.width,Te.height,0,0,Te.width,Te.height);const Ge=Pe.getImageData(Te.cutX,Te.cutY,Te.width,Te.height);le.push(Ge.data)}});for(let Be=0;Be<2;Be++){const ae=hL[Be?S:N],Pe=new Map;this.shiny&&ae&&ae[this.variant]&&Object.keys(ae[this.variant]).forEach(Te=>{Pe.set(ri(Array.from(Object.values(DL(Te)))),Array.from(Object.values(DL(ae[this.variant][Te]))))});for(let Te=0;Te<le[Be].length;Te+=4)if(le[Be][Te+3]){const Ge=le[Be].slice(Te,Te+4);let[ze,eA,GA,IA]=Ge;if(ae){const yA=ri([ze,eA,GA,IA]);if(Pe.has(yA)){const DE=Pe.get(yA);DE&&([ze,eA,GA,IA]=DE)}}Ie.find(yA=>yA[0]===ze&&yA[1]===eA&&yA[2]===GA)||Ie.push([ze,eA,GA,IA])}}const Ae=JSON.parse(JSON.stringify(Ie)),Re=[];for(let Be=0;Be<2;Be++)for(let ae=0;ae<le[Be].length;ae+=4)le[Be].slice(ae,ae+3).reduce((Te,Ge)=>Te+Ge,0)&&Re.push(fL({r:le[Be][ae],g:le[Be][ae+1],b:le[Be][ae+2],a:le[Be][ae+3]}));const se=[];for(let Be=0;Be<2;Be++){const ae=hL[Be?i:T],Pe=new Map;if(this.fusionShiny&&ae&&ae[this.fusionVariant])for(const Te of Object.keys(ae[this.fusionVariant]))Pe.set(ri(Array.from(Object.values(DL(Te)))),Array.from(Object.values(DL(ae[this.fusionVariant][Te]))));for(let Te=0;Te<le[2+Be].length;Te+=4){if(!le[2+Be].slice(Te,Te+3).reduce((yA,DE)=>yA+DE,0))continue;let[ze,eA,GA,IA]=[le[2+Be][Te],le[2+Be][Te+1],le[2+Be][Te+2],le[2+Be][Te+3]];if(ae){const yA=ri([ze,eA,GA,IA]);if(Pe.has(yA)){const DE=Pe.get(yA);DE&&([ze,eA,GA,IA]=DE)}}se.push(fL({r:ze,g:eA,b:GA,a:IA}))}}if(se.length===0){console.log("Failed to create fusion palette");return}let ie,He;const ve=Math.random;Math.random=()=>Kt.Math.RND.realInRange(0,1),s.executeWithSeedOffset(()=>{ie=ca.quantize(Re,4),He=ca.quantize(se,4)},0,"This result should not vary"),Math.random=ve,ie=ie,He=He;const[xe,EA]=[ie,He].map(Be=>{let ae=Array.from(Be.keys()).sort((ze,eA)=>Be.get(ze)<Be.get(eA)?1:-1),Pe,Te;const Ge=new Map;do{Ge.clear(),Pe=ae.reduce((ze,eA)=>(ze.set(eA,Object.values(uP(eA))),ze),new Map),Te=Array.from(Pe.keys()).reduce((ze,eA)=>{const GA=Pe.get(eA).slice(0,3);return ze.set(eA,j6(GA[0],GA[1],GA[2])),ze},new Map);for(let ze=ae.length-1;ze>=0;ze--){const eA=Te.get(ae[ze]);for(let GA=0;GA<ze;GA++){const IA=Te.get(ae[GA]),yA=Math.abs(eA[0]-IA[0]);if(yA<30||yA>=330){Ge.has(ae[ze])?Ge.get(ae[ze]).push(ae[GA]):Ge.set(ae[ze],[ae[GA]]);break}}}Ge.forEach((ze,eA)=>{const GA=Pe.get(eA),IA=ze.map(cE=>Pe.get(cE)),yA=GA.slice(0);let DE=Be.get(eA);for(const cE of ze){const Pt=Be.get(cE);Pt&&(DE+=Pt)}for(let cE=0;cE<3;cE++)yA[cE]*=Be.get(eA)/DE,ze.forEach((Pt,Gt)=>{if(Be.has(Pt)){const HA=Be.get(Pt);yA[cE]+=IA[Gt][cE]*(HA/DE)}}),yA[cE]=Math.round(yA[cE]);Be.delete(eA);for(const cE of ze)Be.delete(cE),Ge.has(cE)&&Ge.delete(cE);Be.set(fL({r:yA[0],g:yA[1],b:yA[2],a:yA[3]}),DE)}),ae=Array.from(Be.keys()).sort((ze,eA)=>Be.get(ze)<Be.get(eA)?1:-1)}while(Ge.size);return ae.map(ze=>Object.values(uP(ze)))}),NA=[];Ie.forEach((Be,ae)=>{NA.push([]);for(let Pe=0;Pe<xe.length;Pe++)NA[ae].push(e8(Be,xe[Pe]))});const rA=Kt.Tweens.Builders.GetEaseFunction("Cubic.easeIn");for(let Be=0;Be<Ie.length;Be++){const ae=Math.min(...NA[Be]),Pe=Math.min(NA[Be].findIndex(Te=>Te===ae),EA.length-1);if(ae<255){const Te=rA(ae/255),Ge=[0,0,0,Ae[Be][3]];for(let ze=0;ze<3;ze++)Ge[ze]=Math.round(Ae[Be][ze]*Te+EA[Pe][ze]*(1-Te));Ae[Be]=Ge}}[this.getSprite(),this.getTintSprite()].filter(Be=>!!Be).map(Be=>{Be.pipelineData[`spriteColors${E&&this.summonData.speciesForm?"Base":""}`]=Ie,Be.pipelineData[`fusionSpriteColors${E&&this.summonData.speciesForm?"Base":""}`]=Ae}),v.remove(),Oe.remove()}randBattleSeedInt(E,R=0){return s.currentBattle?s.randBattleSeedInt(E,R):De(E,R)}randBattleSeedIntRange(E,R){return s.currentBattle?s.randBattleSeedInt(R-E+1,E):p1(E,R)}leaveField(E=!0,R=!0,I=!1){this.resetSprite(),this.resetTurnData(),s.getField(!0).filter(N=>N!==this).forEach(N=>N.removeTagsBySourceId(this.id)),E&&(this.destroySubstitute(),this.resetSummonData()),R&&this.hideInfo(),q9(BS,this),this.setSwitchOutStatus(!0),s.triggerPokemonFormChange(this,xt,!0),s.field.remove(this,I)}destroy(){var E;(E=this.battleInfo)==null||E.destroy(),this.destroySubstitute(),super.destroy()}getBattleInfo(){return this.battleInfo}hasSameAbilityInRootForm(E){const R=this.abilityIndex,I=de(this.species.getRootSpeciesId());return I.getAbility(E)===I.getAbility(R)}checkIfPlayerHasAbilityOfStarter(E){return!!((E&1)>0&&this.hasSameAbilityInRootForm(0)||(E&2)>0&&this.hasSameAbilityInRootForm(1)||(E&4)>0&&this.hasSameAbilityInRootForm(2))}loseHeldItem(E,R=!0){return E.pokemonId!==-1&&E.pokemonId!==this.id?!1:(E.stackCount--,E.stackCount<=0&&s.removeModifier(E,!this.isPlayer()),R&&BM(qN,this,!1),!0)}recordEatenBerry(E,R=!0){this.battleData.hasEatenBerry=!0,R&&this.battleData.berriesEaten.push(E),this.turnData.berriesEaten.push(E)}};r(H3,"Pokemon");let bS=H3;const c3=class c3 extends bS{constructor(E,R,I,N,S,T,i,o,C,U){super(106,148,E,R,I,N,S,T,i,o,C,U),Ze.STATUS_OVERRIDE&&(this.status=new pN(Ze.STATUS_OVERRIDE,0,4)),Ze.SHINY_OVERRIDE?(this.shiny=!0,this.initShinySparkle()):Ze.SHINY_OVERRIDE===!1&&(this.shiny=!1),Ze.VARIANT_OVERRIDE!==null&&this.shiny&&(this.variant=Ze.VARIANT_OVERRIDE),U||(s.gameMode.isDaily?this.generateAndPopulateMoveset():this.moveset=[]),this.generateCompatibleTms()}initBattleInfo(){this.battleInfo=new uo,this.battleInfo.initInfo(this)}isPlayer(){return!0}hasTrainer(){return!0}isBoss(){return!1}getFieldIndex(){return s.getPlayerField().indexOf(this)}getBattlerIndex(){return this.getFieldIndex()}generateCompatibleTms(){this.compatibleTms=[];const E=Object.keys(UI);for(const R of E){const I=Number.parseInt(R);let N=!1;for(const S of UI[R])if(Array.isArray(S)){const[T,i]=S;if((T===this.species.speciesId||this.fusionSpecies&&T===this.fusionSpecies.speciesId)&&i===this.getFormKey()){N=!0;break}}else if(S===this.species.speciesId||this.fusionSpecies&&S===this.fusionSpecies.speciesId){N=!0;break}d8.indexOf(I)>-1&&(N=!N),N&&this.compatibleTms.push(I)}}tryPopulateMoveset(E){return this.getSpeciesForm().validateStarterMoveset(E,s.gameData.starterData[this.species.getRootSpeciesId()].eggMoves)?(this.moveset=E.map(R=>new Ye(R)),!0):!1}switchOut(E=ZA.SWITCH){return new Promise(R=>{this.leaveField(E===ZA.SWITCH),s.ui.setMode(Ce.PARTY,CR.FAINT_SWITCH,this.getFieldIndex(),(I,N)=>{I>=s.currentBattle.getBattlerCount()&&I<6&&s.prependToPhase(new jR(E,this.getFieldIndex(),I,!1),qR),s.ui.setMode(Ce.MESSAGE).then(R)},st.FilterNonFainted)})}addFriendship(E){if(E>0){const R=this.species.getRootSpeciesId(),I=this.isFusion()&&this.fusionSpecies?this.fusionSpecies.getRootSpeciesId():0,N=[s.gameData.starterData[R],I?s.gameData.starterData[I]:null].filter(C=>!!C),S=new me(E);s.applyModifier(kr,!0,this,S);const T=s.gameMode.isClassic?vE.getClassicFriendshipMultiplier():1,i=I?vE.areFusionsBoosted()?1.5:2:1,o=new me(Math.floor(S.value*T/i));this.friendship=Math.min(this.friendship+S.value,255),this.friendship===255&&s.validateAchv(oA.MAX_FRIENDSHIP),N.forEach((C,U)=>{const _=U?I:R;C.friendship=(C.friendship||0)+o.value,C.friendship>=Bv(kE[_])&&(s.gameData.addStarterCandy(de(_),1),C.friendship=0)})}else this.friendship=Math.max(this.friendship+E,0)}getPossibleEvolution(E){return E?new Promise(R=>{const I=de(E.speciesId),N=E instanceof yI;let S;if(N){const T=this.fusionSpecies,i=this.fusionFormIndex;this.fusionSpecies=I,this.fusionFormIndex=E.evoFormKey!==null?Math.max(I.forms.findIndex(o=>o.formKey===E.evoFormKey),0):this.fusionFormIndex,S=s.addPlayerPokemon(this.species,this.level,this.abilityIndex,this.formIndex,this.gender,this.shiny,this.variant,this.ivs,this.nature,this),this.fusionSpecies=T,this.fusionFormIndex=i}else{const T=E.evoFormKey!==null&&!N?Math.max(I.forms.findIndex(i=>i.formKey===E.evoFormKey),0):this.formIndex;S=s.addPlayerPokemon(N?this.species:I,this.level,this.abilityIndex,T,this.gender,this.shiny,this.variant,this.ivs,this.nature,this)}S.loadAssets().then(()=>R(S))}):new Promise(R=>R(this))}evolve(E,R){return E?new Promise(I=>{this.pauseEvolutions=!1,this.handleSpecialEvolutions(E);const N=E instanceof yI;if(N?this.fusionSpecies=de(E.speciesId):this.species=de(E.speciesId),E.preFormKey!==null){const T=Math.max((!N||!this.fusionSpecies?this.species:this.fusionSpecies).forms.findIndex(i=>i.formKey===E.evoFormKey),0);N?this.fusionFormIndex=T:this.formIndex=T}if(this.generateName(),N){const T=this.getFusionSpeciesForm().getAbilityCount(),i=R.getAbilityCount();[0,1,2].includes(this.fusionAbilityIndex)?this.fusionAbilityIndex===2&&i===3&&T===2&&(this.fusionAbilityIndex=1):(console.warn("this.fusionAbilityIndex is somehow an illegal value, please report this"),console.warn(this.fusionAbilityIndex),this.fusionAbilityIndex=0)}else{const T=this.getSpeciesForm().getAbilityCount(),i=R.getAbilityCount();[0,1,2].includes(this.abilityIndex)?this.abilityIndex===2&&i===3&&T===2&&(this.abilityIndex=1):(console.warn("this.abilityIndex is somehow an illegal value, please report this"),console.warn(this.abilityIndex),this.abilityIndex=0)}this.compatibleTms.splice(0,this.compatibleTms.length),this.generateCompatibleTms();const S=r(()=>{this.loadAssets().then(()=>{this.calculateStats(),this.updateInfo(!0).then(()=>I())})},"updateAndResolve");if(R.speciesId===e.GIMMIGHOUL){const T=this.getHeldItems().filter(i=>i instanceof gr)[0]??null;T&&s.removeModifier(T)}!s.gameMode.isDaily||this.metBiome>-1?(s.gameData.updateSpeciesDexIvs(this.species.speciesId,this.ivs),s.gameData.setPokemonSeen(this,!1),s.gameData.setPokemonCaught(this,!1).then(()=>S())):S()}):new Promise(I=>I())}handleSpecialEvolutions(E){var N;const R=E instanceof yI,I=R?this.fusionSpecies:this.species;if((I==null?void 0:I.speciesId)===e.NINCADA&&E.speciesId===e.NINJASK){const S=BA[I.speciesId][1];if((N=S.condition)!=null&&N.predicate(this)){const T=s.addPlayerPokemon(this.species,this.level,this.abilityIndex,this.formIndex,void 0,this.shiny,this.variant,this.ivs,this.nature);T.passive=this.passive,T.moveset=this.moveset.slice(),T.moveset=this.copyMoveset(),T.luck=this.luck,T.gender=ye.GENDERLESS,T.metLevel=this.metLevel,T.metBiome=this.metBiome,T.metSpecies=this.metSpecies,T.metWave=this.metWave,T.fusionSpecies=this.fusionSpecies,T.fusionFormIndex=this.fusionFormIndex,T.fusionAbilityIndex=this.fusionAbilityIndex,T.fusionShiny=this.fusionShiny,T.fusionVariant=this.fusionVariant,T.fusionGender=this.fusionGender,T.fusionLuck=this.fusionLuck,T.fusionTeraType=this.fusionTeraType,T.usedTMs=this.usedTMs,T.evoCounter=this.evoCounter,s.getPlayerParty().push(T),T.evolve(R?new yI(this.id,S):S,I),s.findModifiers(o=>o instanceof DA&&o.pokemonId===this.id,!0).forEach(o=>{const C=o.clone();C.pokemonId=T.id,s.addModifier(C,!0)}),s.updateModifiers(!0)}}}getPossibleForm(E){return new Promise(R=>{const I=Math.max(this.species.forms.findIndex(S=>S.formKey===E.formKey),0),N=s.addPlayerPokemon(this.species,this.level,this.abilityIndex,I,this.gender,this.shiny,this.variant,this.ivs,this.nature,this);N.loadAssets().then(()=>R(N))})}changeForm(E){return new Promise(R=>{this.formIndex=Math.max(this.species.forms.findIndex(S=>S.formKey===E.formKey),0),this.generateName();const I=this.getSpeciesForm().getAbilityCount();this.abilityIndex>=I&&(this.abilityIndex=I-1),this.compatibleTms.splice(0,this.compatibleTms.length),this.generateCompatibleTms();const N=r(()=>{this.loadAssets().then(()=>{this.calculateStats(),s.updateModifiers(!0,!0),this.updateInfo(!0).then(()=>R())})},"updateAndResolve");!s.gameMode.isDaily||this.metBiome>-1?(s.gameData.setPokemonSeen(this,!1),s.gameData.setPokemonCaught(this,!1).then(()=>N())):N()})}clearFusionSpecies(){super.clearFusionSpecies(),this.generateCompatibleTms()}fuse(E){this.fusionSpecies=E.species,this.fusionFormIndex=E.formIndex,this.fusionAbilityIndex=E.abilityIndex,this.fusionShiny=E.shiny,this.fusionVariant=E.variant,this.fusionGender=E.gender,this.fusionLuck=E.luck,this.fusionCustomPokemonData=E.customPokemonData,this.evoCounter=Math.max(E.evoCounter,this.evoCounter),(E.pauseEvolutions||this.pauseEvolutions)&&(this.pauseEvolutions=!0),s.validateAchv(oA.SPLICE),s.gameData.gameStats.pokemonFused++;const R=this.getMaxHp(),I=(E.hp/E.getMaxHp()+this.hp/R)/2;this.generateName(),this.calculateStats(),this.hp=Math.round(R*I),this.isFainted()?E.isFainted()||(this.hp=Math.max(this.hp,1),this.status=E.status):(this.hp=Math.min(this.hp,R),this.status=i8(this.status,E.status)),this.generateCompatibleTms(),this.updateInfo(!0);const N=s.getPlayerParty().indexOf(E);s.getPlayerParty().indexOf(this);const S=s.findModifiers(i=>i instanceof DA&&i.pokemonId===E.id,!0);for(const i of S)s.tryTransferHeldItemModifier(i,this,!1,i.getStackCount(),!0,!0,!1);s.updateModifiers(!0,!0),s.removePartyMemberModifiers(N),s.getPlayerParty().splice(N,1)[0];const T=s.getPlayerParty().indexOf(this);E.getMoveset(!0).map(i=>s.unshiftPhase(new kI(T,i.getMove().id))),E.destroy(),this.updateFusionPalette()}unfuse(){return new Promise(E=>{this.clearFusionSpecies(),this.updateInfo(!0).then(()=>E()),this.updateFusionPalette()})}copyMoveset(){const E=[];return this.moveset.forEach(R=>{E.push(new Ye(R.moveId,0,R.ppUp,R.virtual,R.maxPpOverride))}),E}};r(c3,"PlayerPokemon");let Rt=c3;const B3=class B3 extends bS{constructor(E,R,I,N,S=!1,T){var o,C;super(236,84,E,R,T==null?void 0:T.abilityIndex,T==null?void 0:T.formIndex,T==null?void 0:T.gender,!S&&T?T.shiny:!1,!S&&T?T.variant:void 0,void 0,T?T.nature:void 0,T),this.trainerSlot=I,this.initialTeamIndex=((o=s.currentBattle)==null?void 0:o.enemyParty.length)??0,this.isPopulatedFromDataSource=!!T,N&&this.setBoss(N,T==null?void 0:T.bossSegments),Ze.OPP_STATUS_OVERRIDE&&(this.status=new pN(Ze.OPP_STATUS_OVERRIDE,0,4)),Ze.OPP_GENDER_OVERRIDE!==null&&(this.gender=Ze.OPP_GENDER_OVERRIDE);const i=this.species.speciesId;if(i in Ze.OPP_FORM_OVERRIDES&&!Ne(Ze.OPP_FORM_OVERRIDES[i])&&this.species.forms[Ze.OPP_FORM_OVERRIDES[i]]&&(this.formIndex=Ze.OPP_FORM_OVERRIDES[i]),!T){this.generateAndPopulateMoveset(),S||Ze.OPP_SHINY_OVERRIDE===!1?this.shiny=!1:this.trySetShiny(),!this.shiny&&Ze.OPP_SHINY_OVERRIDE&&(this.shiny=!0,this.initShinySparkle()),this.shiny&&(this.variant=this.generateShinyVariant(),Ze.OPP_VARIANT_OVERRIDE!==null&&(this.variant=Ze.OPP_VARIANT_OVERRIDE)),this.luck=(this.shiny?this.variant+1:0)+(this.fusionShiny?this.fusionVariant+1:0);let U,_=E.speciesId;for(;U=CE[_];){const G=BA[U].find(H=>H.speciesId===_&&(!H.evoFormKey||H.evoFormKey===this.getFormKey()));(C=G==null?void 0:G.condition)!=null&&C.enforceFunc&&G.condition.enforceFunc(this),_=U}if(this.hasTrainer()&&s.currentBattle){const{waveIndex:G}=s.currentBattle,H=[];for(;H.length<6;)H.push(p1(Math.floor(G/10),31));this.ivs=H}}this.aiType=N||this.hasTrainer()?2:1}initBattleInfo(){this.battleInfo?this.battleInfo.updateBossSegments(this):(this.battleInfo=new MP,this.battleInfo.initInfo(this),this.battleInfo.updateBossSegments(this))}setBoss(E=!0,R=0){E?(this.bossSegments=R||s.getEncounterBossSegments(s.currentBattle.waveIndex,this.level,this.species,!0),this.bossSegmentIndex=this.bossSegments-1):(this.bossSegments=0,this.bossSegmentIndex=0)}generateAndPopulateMoveset(E){switch(!0){case this.species.speciesId===e.SMEARGLE:this.moveset=[new Ye(A.SKETCH),new Ye(A.SKETCH),new Ye(A.SKETCH),new Ye(A.SKETCH)];break;case this.species.speciesId===e.ETERNATUS:this.moveset=(E!==void 0?E:this.formIndex)?[new Ye(A.DYNAMAX_CANNON),new Ye(A.CROSS_POISON),new Ye(A.FLAMETHROWER),new Ye(A.RECOVER,0,-4)]:[new Ye(A.ETERNABEAM),new Ye(A.SLUDGE_BOMB),new Ye(A.FLAMETHROWER),new Ye(A.COSMIC_POWER)],s.gameMode.hasChallenge(Je.INVERSE_BATTLE)&&(this.moveset[2]=new Ye(A.THUNDERBOLT));break;default:super.generateAndPopulateMoveset();break}}getNextMove(){const E=this.getMoveQueue();if(E.length!==0){const I=E[0];if(I){const N=this.getMoveset().findIndex(S=>S.moveId===I.move);return N>-1&&this.getMoveset()[N].isUsable(this,I.ignorePP)||I.virtual?I:(this.getMoveQueue().shift(),this.getNextMove())}}let R=this.getMoveset().filter(I=>I.isUsable(this));if(R.length){if(R.length===1)return{move:R[0].moveId,targets:this.getNextTargets(R[0].moveId)};const I=this.getTag(ir);if(I){const N=R.find(S=>S.moveId===I.moveId);if(N)return{move:N.moveId,targets:this.getNextTargets(N.moveId)}}switch(this.aiType){case 0:const N=R[s.randBattleSeedInt(R.length)].moveId;return{move:N,targets:this.getNextTargets(N)};case 1:case 2:const S=R.filter(U=>{if(!U)return!1;const _=U.getMove();if(_.moveTarget===ee.ATTACKER)return!1;const G=s.getField(),H=JI(this,_.id).targets.map(f=>G[f]).filter(f=>this.isPlayer()!==f.isPlayer()),c=_.hasAttr(nI)||!!this.getTag(Y.ALWAYS_CRIT);return _.category!==u.STATUS&&H.some(f=>{var w;return(_.applyConditions(this,f,_)||[A.SUCKER_PUNCH,A.UPPER_HAND,A.THUNDERCLAP].includes(_.id))&&f.getAttackDamage({source:this,move:_,ignoreAbility:!f.waveData.abilityRevealed,ignoreSourceAbility:!1,ignoreAllyAbility:!((w=f.getAlly())!=null&&w.waveData.abilityRevealed),ignoreSourceAllyAbility:!1,isCritical:c}).damage>=f.hp})},this);S.length>0&&(R=S);const T=R.map(()=>0),i=Object.fromEntries(R.map(U=>[U.moveId,this.getNextTargets(U.moveId)]));for(const U in R){const G=R[U].getMove();let H=T[U];const c=[];for(const f of i[G.id]){if(f===FA.ATTACKER)break;const d=s.getField()[f];let w=G.getUserBenefitScore(this,d,G)+G.getTargetBenefitScore(this,d,G)*(f<FA.ENEMY===this.isPlayer()?1:-1);if(Number.isNaN(w)&&(console.error(`Move ${G.name} returned score of NaN`),w=0),(G.name.endsWith(" (N)")||!G.applyConditions(this,d,G))&&![A.SUCKER_PUNCH,A.UPPER_HAND,A.THUNDERCLAP].includes(G.id))w=-20;else if(G instanceof B){const m=d.getMoveEffectiveness(this,G,!d.waveData.abilityRevealed,void 0,void 0,!0);d.isPlayer()!==this.isPlayer()?(w*=m,this.isOfType(G.type)&&(w*=1.5)):m&&(w/=m,this.isOfType(G.type)&&(w/=1.5)),w||(w=-20)}c.push(w)}H+=Math.max(...c),T[U]=H}console.log(T);const o=R.slice(0);o.sort((U,_)=>{const G=T[R.indexOf(U)],H=T[R.indexOf(_)];return G<H?1:G>H?-1:0});let C=0;if(this.aiType===1)for(;C<o.length-1&&s.randBattleSeedInt(8)>=5;)C++;else if(this.aiType===2)for(;C<o.length-1&&T[R.indexOf(o[C+1])]/T[R.indexOf(o[C])]>=0&&s.randBattleSeedInt(100)<Math.round(T[R.indexOf(o[C+1])]/T[R.indexOf(o[C])]*50);)C++;return console.log(R.map(U=>U.getName()),T,C,o.map(U=>U.getName())),{move:o[C].moveId,targets:i[o[C].moveId]}}}return{move:A.STRUGGLE,targets:this.getNextTargets(A.STRUGGLE)}}getNextTargets(E){const R=JI(this,E),I=s.getField(!0).filter(c=>R.targets.indexOf(c.getBattlerIndex())>-1);if(R.multiple)return I.map(c=>c.getBattlerIndex());const N=Ke[E],T=I.map(c=>[c.getBattlerIndex(),N.getTargetBenefitScore(this,c,N)*(c.isPlayer()===this.isPlayer()?1:-1)]).slice(0);if(T.sort((c,f)=>{const d=c[1],w=f[1];return d<w?1:d>w?-1:0}),!T.length)return N.hasAttr(PN)?[FA.ATTACKER]:[];let i=T.map(c=>c[1]);const o=i[i.length-1];if(o<1)for(let c=0;c<i.length;c++)i[c]+=Math.abs(o-1);const C=i.findIndex(c=>c<i[0]/2);C>-1&&(i=i.slice(0,C));const U=[];let _=0;i.reduce((c,f)=>(c+=f,U.push(c),_=c,c),0);const G=s.randBattleSeedInt(_);let H=0;return U.every((c,f)=>G>=c?!0:(H=f,!1)),[T[H][0]]}isPlayer(){return!1}hasTrainer(){return!!this.trainerSlot}isBoss(){return!!this.bossSegments}getBossSegmentIndex(){const E=this.bossSegments,R=this.getMaxHp()/E;for(let I=E-1;I>0;I--){const N=Math.round(R*I);if(this.hp>N)return I}return 0}damage(E,R=!1,I=!1,N=!1){if(this.isFainted())return 0;let S=this.isBoss()?this.bossSegmentIndex+1:0;if(this.isBoss()&&!R){const i=this.getMaxHp()/this.bossSegments;for(let o=this.bossSegmentIndex;o>0;o--){const C=i*o,U=Math.round(C);if(this.hp>=U){if(this.hp-E<=U){const _=this.hp-U;let G=0;for(;G<this.bossSegmentIndex&&this.canBypassBossSegments(G+1)&&E-_>=Math.round(i*Math.pow(2,G+1));)G++;E=uA(this.hp-C+i*G),S=o-G}break}}}switch(s.currentBattle.battleSpec){case tt.FINAL_BOSS:!this.formIndex&&this.bossSegmentIndex<1&&(E=Math.min(E,this.hp-1))}const T=super.damage(E,R,I,N);if(this.isBoss()){if(R){const i=this.getMaxHp()/this.bossSegments;S=Math.ceil(this.hp/i)}S<=this.bossSegmentIndex&&this.handleBossSegmentCleared(S),this.battleInfo.updateBossSegments(this)}return T}canBypassBossSegments(E=1){return!(s.currentBattle.battleSpec===tt.FINAL_BOSS&&!this.formIndex&&this.bossSegmentIndex-E<1)}handleBossSegmentCleared(E){for(;this.bossSegmentIndex>0&&E-1<this.bossSegmentIndex;){const R=mL.filter(C=>this.getStatStage(C)<6),I=R.map(C=>this.getStat(C,!1));let N;const S=[];let T=0;for(const C in I)T+=I[C],S.push(T);const i=De(T);for(const C in S)if(i<S[C]){N=R[C];break}let o=1;this.bossSegments>=3&&this.bossSegmentIndex===1&&o++,this.bossSegments>=5&&this.bossSegmentIndex===2&&o++,s.unshiftPhase(new hA(this.getBattlerIndex(),!0,[N],o,!0,!0)),this.bossSegmentIndex--}}getFieldIndex(){return s.getEnemyField().indexOf(this)}getBattlerIndex(){return FA.ENEMY+this.getFieldIndex()}addToParty(E,R=-1){const I=s.getPlayerParty();let N=null;if(I.length<rP){this.pokeball=E,this.metLevel=this.level,this.metBiome=s.arena.biomeType,this.metWave=s.currentBattle.waveIndex,this.metSpecies=this.species.speciesId;const S=s.addPlayerPokemon(this.species,this.level,this.abilityIndex,this.formIndex,this.gender,this.shiny,this.variant,this.ivs,this.nature,this);A8(R,0,rP-1)?I.splice(R,0,S):I.push(S),S.setVisible(!1),N=S,s.triggerPokemonFormChange(S,xt,!0)}return N}};r(B3,"EnemyPokemon");let pR=B3;const h3=class h3{constructor(E){if(this.statStages=[0,0,0,0,0,0,0],this.moveQueue=[],this.tags=[],this.abilitySuppressed=!1,this.speciesForm=null,this.fusionSpeciesForm=null,this.stats=[0,0,0,0,0,0],this.types=[],this.addedType=null,this.illusion=null,this.illusionBroken=!1,this.berriesEatenLast=[],this.moveHistory=[],!Ne(E)){for(const[R,I]of Object.entries(E))if(!(Ne(I)&&this.hasOwnProperty(R))){if(R==="moveset"){this.moveset=I==null?void 0:I.map(N=>Ye.loadMove(N));continue}if(R==="tags"){this.tags=I.map(N=>RX(N));continue}this[R]=I}}}};r(h3,"PokemonSummonData");let LS=h3;const f3=class f3{constructor(){this.turnCount=1,this.waveTurnCount=1}};r(f3,"PokemonTempSummonData");let TD=f3;const d3=class d3{constructor(E){this.hitCount=0,this.hasEatenBerry=!1,this.berriesEaten=[],Ne(E)||(this.hitCount=E.hitCount??0,this.hasEatenBerry=E.hasEatenBerry??!1,this.berriesEaten=E.berriesEaten??[])}};r(d3,"PokemonBattleData");let NS=d3;const K3=class K3{constructor(){this.endured=!1,this.abilitiesApplied=new Set,this.abilityRevealed=!1}};r(K3,"PokemonWaveData");let nD=K3;const F3=class F3{constructor(){this.flinched=!1,this.acted=!1,this.hitCount=0,this.hitsLeft=-1,this.totalDamageDealt=0,this.singleHitDamageDealt=0,this.damageTaken=0,this.attacksReceived=[],this.statStagesIncreased=!1,this.statStagesDecreased=!1,this.moveEffectiveness=null,this.switchedInThisTurn=!1,this.failedRunAway=!1,this.joinedRound=!1,this.extraTurns=0,this.berriesEaten=[]}};r(F3,"PokemonTurnData");let aD=F3;var P6=(t=>(t[t.RANDOM=0]="RANDOM",t[t.SMART_RANDOM=1]="SMART_RANDOM",t[t.SMART=2]="SMART",t))(P6||{}),EE=(t=>(t[t.PENDING=0]="PENDING",t[t.SUCCESS=1]="SUCCESS",t[t.FAIL=2]="FAIL",t[t.MISS=3]="MISS",t[t.OTHER=4]="OTHER",t))(EE||{}),CA=(t=>(t[t.EFFECTIVE=1]="EFFECTIVE",t[t.SUPER_EFFECTIVE=2]="SUPER_EFFECTIVE",t[t.NOT_VERY_EFFECTIVE=3]="NOT_VERY_EFFECTIVE",t[t.ONE_HIT_KO=4]="ONE_HIT_KO",t[t.NO_EFFECT=5]="NO_EFFECT",t[t.STATUS=6]="STATUS",t[t.HEAL=7]="HEAL",t[t.FAIL=8]="FAIL",t[t.MISS=9]="MISS",t[t.INDIRECT=10]="INDIRECT",t[t.IMMUNE=11]="IMMUNE",t[t.CONFUSION=12]="CONFUSION",t[t.INDIRECT_KO=13]="INDIRECT_KO",t))(CA||{});const aM=class aM{constructor(E,R=0,I=0,N=!1,S){this.moveId=E,this.ppUsed=R,this.ppUp=I,this.virtual=N,this.maxPpOverride=S}isUsable(E,R=!1,I=!1){return this.moveId&&!I&&E.isMoveRestricted(this.moveId,E)||this.getMove().name.endsWith(" (N)")?!1:R||this.ppUsed<this.getMovePp()||this.getMove().pp===-1}getMove(){return Ke[this.moveId]}usePp(E=1){this.ppUsed=Math.min(this.ppUsed+E,this.getMovePp())}getMovePp(){return this.maxPpOverride||this.getMove().pp+this.ppUp*uA(this.getMove().pp/5)}getPpRatio(){return 1-this.ppUsed/this.getMovePp()}getName(){return this.getMove().name}static loadMove(E){return new aM(E.moveId,E.ppUsed,E.ppUp,E.virtual,E.maxPpOverride)}};r(aM,"PokemonMove");let Ye=aM;function H1(t){return D.t(`berry:${OA[t]}.name`)}r(H1,"getBerryName");function _X(t){return D.t(`berry:${OA[t]}.effect`)}r(_X,"getBerryEffectDescription");function uX(t){switch(t){case OA.SITRUS:return E=>E.getHpRatio()<.5;case OA.LUM:return E=>!!E.status||!!E.getTag(Y.CONFUSED);case OA.ENIGMA:return E=>!!E.turnData.attacksReceived.filter(R=>R.result===CA.SUPER_EFFECTIVE).length;case OA.LIECHI:case OA.GANLON:case OA.PETAYA:case OA.APICOT:case OA.SALAC:return E=>{const R=new me(.25),I=t-OA.ENIGMA;return sA(DN,E,null,!1,R),E.getHpRatio()<R.value&&E.getStatStage(I)<6};case OA.LANSAT:return E=>{const R=new me(.25);return sA(DN,E,null,!1,R),E.getHpRatio()<.25&&!E.getTag(Y.CRIT_BOOST)};case OA.STARF:return E=>{const R=new me(.25);return sA(DN,E,null,!1,R),E.getHpRatio()<.25};case OA.LEPPA:return E=>{const R=new me(.25);return sA(DN,E,null,!1,R),!!E.getMoveset().find(I=>!I.getPpRatio())}}}r(uX,"getBerryPredicate");function lc(t){return E=>{switch(t){case OA.SITRUS:case OA.ENIGMA:{const R=new me(uA(E.getMaxHp()/4));sA(RS,E,null,!1,R),s.unshiftPhase(new Dt(E.getBattlerIndex(),R.value,D.t("battle:hpHealBerry",{pokemonNameWithAffix:Z(E),berryName:H1(t)}),!0))}break;case OA.LUM:E.status&&s.queueMessage(qI(E.status.effect,Z(E))),E.resetStatus(!0,!0),E.updateInfo();break;case OA.LIECHI:case OA.GANLON:case OA.PETAYA:case OA.APICOT:case OA.SALAC:{const R=t-OA.ENIGMA,I=new me(1);sA(RS,E,null,!1,I),s.unshiftPhase(new hA(E.getBattlerIndex(),!0,[R],I.value))}break;case OA.LANSAT:E.addTag(Y.CRIT_BOOST);break;case OA.STARF:{const R=De(h.SPD,h.ATK),I=new me(2);sA(RS,E,null,!1,I),s.unshiftPhase(new hA(E.getBattlerIndex(),!0,[R],I.value))}break;case OA.LEPPA:{const R=E.getMoveset().find(I=>I.ppUsed===I.getMovePp())??E.getMoveset().find(I=>I.ppUsed<I.getMovePp());R&&(R.ppUsed=Math.max(R.ppUsed-10,0),s.queueMessage(D.t("battle:ppHealBerry",{pokemonNameWithAffix:Z(E),moveName:R.getName(),berryName:H1(t)})))}break;default:console.error("Incorrect BerryType %d passed to GetBerryEffectFunc",t)}}}r(lc,"getBerryEffectFunc");const Y3=class Y3 extends bE{start(){super.start(),s.ui.setModeForceTransition(Ce.MESSAGE).then(()=>this.end())}};r(Y3,"EndEvolutionPhase");let rD=Y3;const W3=class W3 extends bE{constructor(E,R,I){super(),this.pokemon=E,this.evolution=R,this.lastLevel=I,this.fusionSpeciesEvolved=R instanceof yI}validate(){return!!this.evolution}setMode(){return s.ui.setModeForceTransition(Ce.EVOLUTION_SCENE)}start(){super.start(),this.setMode().then(()=>{if(!this.validate())return this.end();s.fadeOutBgm(void 0,!1),this.evolutionHandler=s.ui.getHandler(),this.evolutionContainer=this.evolutionHandler.evolutionContainer,this.evolutionBaseBg=s.add.image(0,0,"default_bg"),this.evolutionBaseBg.setOrigin(0,0),this.evolutionContainer.add(this.evolutionBaseBg),this.evolutionBg=s.add.video(0,0,"evo_bg").stop(),this.evolutionBg.setOrigin(0,0),this.evolutionBg.setScale(.4359673025),this.evolutionBg.setVisible(!1),this.evolutionContainer.add(this.evolutionBg),this.evolutionBgOverlay=s.add.rectangle(0,0,s.game.canvas.width/6,s.game.canvas.height/6,2500134),this.evolutionBgOverlay.setOrigin(0,0),this.evolutionBgOverlay.setAlpha(0),this.evolutionContainer.add(this.evolutionBgOverlay);const E=r(()=>{const R=s.addPokemonSprite(this.pokemon,this.evolutionBaseBg.displayWidth/2,this.evolutionBaseBg.displayHeight/2,"pkmn__sub");return R.setPipeline(s.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),R},"getPokemonSprite");this.evolutionContainer.add(this.pokemonSprite=E()),this.evolutionContainer.add(this.pokemonTintSprite=E()),this.evolutionContainer.add(this.pokemonEvoSprite=E()),this.evolutionContainer.add(this.pokemonEvoTintSprite=E()),this.pokemonTintSprite.setAlpha(0),this.pokemonTintSprite.setTintFill(16777215),this.pokemonEvoSprite.setVisible(!1),this.pokemonEvoTintSprite.setVisible(!1),this.pokemonEvoTintSprite.setTintFill(16777215),this.evolutionOverlay=s.add.rectangle(0,-s.game.canvas.height/6,s.game.canvas.width/6,s.game.canvas.height/6-48,16777215),this.evolutionOverlay.setOrigin(0,0),this.evolutionOverlay.setAlpha(0),s.ui.add(this.evolutionOverlay),[this.pokemonSprite,this.pokemonTintSprite,this.pokemonEvoSprite,this.pokemonEvoTintSprite].map(R=>{const I=this.pokemon.getSpriteKey(!0);try{R.play(I)}catch(N){console.error(`Failed to play animation for ${I}`,N)}R.setPipeline(s.spritePipeline,{tone:[0,0,0,0],hasShadow:!1,teraColor:iO(this.pokemon.getTeraType()),isTerastallized:this.pokemon.isTerastallized}),R.setPipelineData("ignoreTimeTint",!0),R.setPipelineData("spriteKey",this.pokemon.getSpriteKey()),R.setPipelineData("shiny",this.pokemon.shiny),R.setPipelineData("variant",this.pokemon.variant),["spriteColors","fusionSpriteColors"].map(N=>{this.pokemon.summonData.speciesForm&&(N+="Base"),R.pipelineData[N]=this.pokemon.getSprite().pipelineData[N]})}),this.preEvolvedPokemonName=Z(this.pokemon),this.doEvolution()})}doEvolution(){s.ui.showText(D.t("menu:evolving",{pokemonName:this.preEvolvedPokemonName}),null,()=>{this.pokemon.cry(),this.pokemon.getPossibleEvolution(this.evolution).then(E=>{[this.pokemonEvoSprite,this.pokemonEvoTintSprite].map(R=>{const I=E.getSpriteKey(!0);try{R.play(I)}catch(N){console.error(`Failed to play animation for ${I}`,N)}R.setPipelineData("ignoreTimeTint",!0),R.setPipelineData("spriteKey",E.getSpriteKey()),R.setPipelineData("shiny",E.shiny),R.setPipelineData("variant",E.variant),["spriteColors","fusionSpriteColors"].map(N=>{E.summonData.speciesForm&&(N+="Base"),R.pipelineData[N]=E.getSprite().pipelineData[N]})}),s.time.delayedCall(1e3,()=>{this.evolutionBgm=s.playSoundWithoutBgm("evolution"),s.tweens.add({targets:this.evolutionBgOverlay,alpha:1,delay:500,duration:1500,ease:"Sine.easeOut",onComplete:r(()=>{s.time.delayedCall(1e3,()=>{s.tweens.add({targets:this.evolutionBgOverlay,alpha:0,duration:250}),this.evolutionBg.setVisible(!0),this.evolutionBg.play()}),s.playSound("se/charge"),this.doSpiralUpward(),s.tweens.addCounter({from:0,to:1,duration:2e3,onUpdate:r(R=>{this.pokemonTintSprite.setAlpha(R.getValue())},"onUpdate"),onComplete:r(()=>{this.pokemonSprite.setVisible(!1),s.time.delayedCall(1100,()=>{s.playSound("se/beam"),this.doArcDownward(),s.time.delayedCall(1500,()=>{this.pokemonEvoTintSprite.setScale(.25),this.pokemonEvoTintSprite.setVisible(!0),this.evolutionHandler.canCancel=!0,this.doCycle(1).then(R=>{R?this.handleSuccessEvolution(E):this.handleFailedEvolution(E)})})})},"onComplete")})},"onComplete")})})})},1e3)}handleFailedEvolution(E){this.pokemonSprite.setVisible(!0),this.pokemonTintSprite.setScale(1),s.tweens.add({targets:[this.evolutionBg,this.pokemonTintSprite,this.pokemonEvoSprite,this.pokemonEvoTintSprite],alpha:0,duration:250,onComplete:r(()=>{this.evolutionBg.setVisible(!1)},"onComplete")}),uL.fadeOut(s,this.evolutionBgm,100),s.unshiftPhase(new rD),s.ui.showText(D.t("menu:stoppedEvolving",{pokemonName:this.preEvolvedPokemonName}),null,()=>{s.ui.showText(D.t("menu:pauseEvolutionsQuestion",{pokemonName:this.preEvolvedPokemonName}),null,()=>{const R=r(()=>{s.ui.showText("",0),s.playBgm(),E.destroy(),this.end()},"end");s.ui.setOverlayMode(Ce.CONFIRM,()=>{s.ui.revertMode(),this.pokemon.pauseEvolutions=!0,s.ui.showText(D.t("menu:evolutionsPaused",{pokemonName:this.preEvolvedPokemonName}),null,R,3e3)},()=>{s.ui.revertMode(),s.time.delayedCall(3e3,R)})})},null,!0)}handleSuccessEvolution(E){s.playSound("se/sparkle"),this.pokemonEvoSprite.setVisible(!0),this.doCircleInward();const R=r(()=>{uL.fadeOut(s,this.evolutionBgm,100),s.time.delayedCall(250,()=>{this.pokemon.cry(),s.time.delayedCall(1250,()=>{s.playSoundWithoutBgm("evolution_fanfare"),E.destroy(),s.ui.showText(D.t("menu:evolutionDone",{pokemonName:this.preEvolvedPokemonName,evolvedPokemonName:this.pokemon.species.getExpandedSpeciesName()}),null,()=>this.end(),null,!0,KA(4e3)),s.time.delayedCall(KA(4250),()=>s.playBgm())})})},"onEvolutionComplete");s.time.delayedCall(900,()=>{this.evolutionHandler.canCancel=!1,this.pokemon.evolve(this.evolution,this.pokemon.species).then(()=>{const I=this.fusionSpeciesEvolved?Po.EVOLUTION_FUSED:this.pokemon.fusionSpecies?Po.EVOLUTION_FUSED_BASE:Po.EVOLUTION,N=this.pokemon.getLevelMoves(this.lastLevel+1,!0,!1,!1,I).filter(S=>S[0]===k);for(const S of N)s.unshiftPhase(new kI(s.getPlayerParty().indexOf(this.pokemon),S[1]));s.unshiftPhase(new rD),s.playSound("se/shine"),this.doSpray(),s.tweens.add({targets:this.evolutionOverlay,alpha:1,duration:250,easing:"Sine.easeIn",onComplete:r(()=>{this.evolutionBgOverlay.setAlpha(1),this.evolutionBg.setVisible(!1),s.tweens.add({targets:[this.evolutionOverlay,this.pokemonEvoTintSprite],alpha:0,duration:2e3,delay:150,easing:"Sine.easeIn",onComplete:r(()=>{s.tweens.add({targets:this.evolutionBgOverlay,alpha:0,duration:250,onComplete:R})},"onComplete")})},"onComplete")})})})}doSpiralUpward(){let E=0;s.tweens.addCounter({repeat:64,duration:VE(1),onRepeat:r(()=>{if(E<64){if(!(E&7))for(let R=0;R<4;R++)this.doSpiralUpwardParticle((E&120)*2+R*64);E++}},"onRepeat")})}doArcDownward(){let E=0;s.tweens.addCounter({repeat:96,duration:VE(1),onRepeat:r(()=>{if(E<96){if(E<6)for(let R=0;R<9;R++)this.doArcDownParticle(R*16);E++}},"onRepeat")})}doCycle(E,R=15){return new Promise(I=>{const N=E===R;s.tweens.add({targets:this.pokemonTintSprite,scale:.25,ease:"Cubic.easeInOut",duration:500/E,yoyo:!N}),s.tweens.add({targets:this.pokemonEvoTintSprite,scale:1,ease:"Cubic.easeInOut",duration:500/E,yoyo:!N,onComplete:r(()=>{if(this.evolutionHandler.cancelled)return I(!1);E<R?this.doCycle(E+.5,R).then(S=>I(S)):(this.pokemonTintSprite.setVisible(!1),I(!0))},"onComplete")})})}doCircleInward(){let E=0;s.tweens.addCounter({repeat:48,duration:VE(1),onRepeat:r(()=>{if(E){if(E===32)for(let R=0;R<16;R++)this.doCircleInwardParticle(R*16,8)}else for(let R=0;R<16;R++)this.doCircleInwardParticle(R*16,4);E++},"onRepeat")})}doSpray(){let E=0;s.tweens.addCounter({repeat:48,duration:VE(1),onRepeat:r(()=>{if(E)E<50&&this.doSprayParticle(oE(8));else for(let R=0;R<8;R++)this.doSprayParticle(R);E++},"onRepeat")})}doSpiralUpwardParticle(E){const R=this.evolutionBaseBg.displayWidth/2,I=s.add.image(R,0,"evo_sparkle");this.evolutionContainer.add(I);let N=0,S=48;const T=s.tweens.addCounter({repeat:-1,duration:VE(1),onRepeat:r(()=>{i()},"onRepeat")}),i=r(()=>{!N||I.y>8?(I.setPosition(R,88-N*N/80),I.y+=aI(E,S)/4,I.x+=hN(E,S),I.setScale(1-N/80),E+=4,N&1&&S--,N++):(I.destroy(),T.remove())},"updateParticle");i()}doArcDownParticle(E){const R=this.evolutionBaseBg.displayWidth/2,I=s.add.image(R,0,"evo_sparkle");I.setScale(.5),this.evolutionContainer.add(I);let N=0,S=8;const T=s.tweens.addCounter({repeat:-1,duration:VE(1),onRepeat:r(()=>{i()},"onRepeat")}),i=r(()=>{!N||I.y<88?(I.setPosition(R,8+N*N/5),I.y+=aI(E,S)/4,I.x+=hN(E,S),S=8+aI(N*4,40),N++):(I.destroy(),T.remove())},"updateParticle");i()}doCircleInwardParticle(E,R){const I=this.evolutionBaseBg.displayWidth/2,N=this.evolutionBaseBg.displayHeight/2,S=s.add.image(I,N,"evo_sparkle");this.evolutionContainer.add(S);let T=120;const i=s.tweens.addCounter({repeat:-1,duration:VE(1),onRepeat:r(()=>{o()},"onRepeat")}),o=r(()=>{T>8?(S.setPosition(I,N),S.y+=aI(E,T),S.x+=hN(E,T),T-=R,E+=4):(S.destroy(),i.remove())},"updateParticle");o()}doSprayParticle(E){const R=this.evolutionBaseBg.displayWidth/2,I=this.evolutionBaseBg.displayHeight/2,N=s.add.image(R,I,"evo_sparkle");this.evolutionContainer.add(N);let S=0,T=0;const i=3-oE(8),o=48+oE(64),C=s.tweens.addCounter({repeat:-1,duration:VE(1),onRepeat:r(()=>{U()},"onRepeat")}),U=r(()=>{S&3||T++,E<128?(N.setPosition(R+i*S/3,I+T),N.y+=-aI(E,o),S>108&&N.setScale(1-(S-108)/20),E++,S++):(N.destroy(),C.remove())},"updateParticle");U()}};r(W3,"EvolutionPhase");let iD=W3;var c1=(t=>(t[t.DEFAULT=0]="DEFAULT",t[t.ONLY_LEVEL_UP=1]="ONLY_LEVEL_UP",t[t.SKIP=2]="SKIP",t))(c1||{});const m3=class m3 extends lC{constructor(E,R,I){super(E),this.pokemon=this.getPlayerPokemon(),this.lastLevel=R,this.level=I}start(){super.start(),this.level>s.gameData.gameStats.highestLevel&&(s.gameData.gameStats.highestLevel=this.level),s.validateAchvs(qs,new me(this.level));const E=this.pokemon.stats.slice(0);this.pokemon.calculateStats(),this.pokemon.updateInfo(),s.expParty===c1.DEFAULT?(s.playSound("level_up_fanfare"),s.ui.showText(D.t("battle:levelUp",{pokemonName:Z(this.pokemon),level:this.level}),null,()=>s.ui.getMessageHandler().promptLevelUpStats(this.partyMemberIndex,E,!1).then(()=>this.end()),null,!0)):s.expParty===c1.SKIP?this.end():s.ui.getMessageHandler().promptLevelUpStats(this.partyMemberIndex,E,!1).then(()=>this.end())}end(){if(this.lastLevel<100){const E=this.getPokemon().getLevelMoves(this.lastLevel+1);for(const R of E)s.unshiftPhase(new kI(this.partyMemberIndex,R[1]))}if(!this.pokemon.pauseEvolutions){const E=this.pokemon.getEvolution();E&&(this.pokemon.breakIllusion(),s.unshiftPhase(new iD(this.pokemon,E,this.lastLevel)))}return super.end()}};r(m3,"LevelUpPhase");let B1=m3;const Fi=24,fr=r((t,E)=>{const R=t.type.name.localeCompare(E.type.name),I=t.constructor.name.localeCompare(E.constructor.name),N=t instanceof DA&&t.pokemonId?t.pokemonId:4294967295,S=E instanceof DA&&E.pokemonId?E.pokemonId:4294967295;return N<S?1:N>S?-1:N===S?I===0?R:I:0},"modifierSortFunc"),g3=class g3 extends Phaser.GameObjects.Container{constructor(E){super(s,1+(E?302:0),2),this.player=!E,this.setScale(.5)}updateModifiers(E,R=!1){this.removeAll(!0);const I=E.filter(i=>i.isIconVisible()),N=I.filter(i=>!i.pokemonId).sort(fr),S=I.filter(i=>i.pokemonId).sort(fr),T=R?N:N.concat(S);T.forEach((i,o)=>{const C=i.getIcon();o>=Fi&&C.setVisible(!1),this.add(C),this.setModifierIconPosition(C,T.length),C.setInteractive(new Phaser.Geom.Rectangle(0,0,32,24),Phaser.Geom.Rectangle.Contains),C.on("pointerover",()=>{s.ui.showTooltip(i.type.name,i.type.getDescription()),this.modifierCache&&this.modifierCache.length>Fi&&this.updateModifierOverflowVisibility(!0)}),C.on("pointerout",()=>{s.ui.hideTooltip(),this.modifierCache&&this.modifierCache.length>Fi&&this.updateModifierOverflowVisibility(!1)})});for(const i of this.getAll())this.sendToBack(i);this.modifierCache=E}updateModifierOverflowVisibility(E){const R=this.getAll().reverse();for(const I of R.map(N=>N).slice(Fi))I.setVisible(E)}setModifierIconPosition(E,R){const I=12+6*Math.max(Math.ceil(Math.min(R,24)/12)-2,0),N=this.getIndex(E)%I*26/(I/12),S=Math.floor(this.getIndex(E)/I)*20;E.setPosition(this.player?N:-N,S)}};r(g3,"ModifierBar");let h1=g3;const p3=class p3{constructor(E){this.type=E}match(E){return!1}shouldApply(...E){return!0}};r(p3,"Modifier");let dr=p3;const y3=class y3 extends dr{constructor(E,R=1){super(E),this.stackCount=R,this.virtualStackCount=0}add(E,R){for(const I of E)if(this.match(I))return I.incrementStack(this.stackCount,R);return R&&(this.virtualStackCount+=this.stackCount,this.stackCount=0),E.push(this),!0}getArgs(){return[]}incrementStack(E,R){return this.getStackCount()+E<=this.getMaxStackCount()?(R?this.virtualStackCount+=E:this.stackCount+=E,!0):!1}getStackCount(){return this.stackCount+this.virtualStackCount}getCountUnderMax(){return this.getMaxStackCount()-this.getStackCount()}isIconVisible(){return!0}getIcon(E){const R=s.add.container(0,0),I=s.add.sprite(0,12,"items");I.setFrame(this.type.iconImage),I.setOrigin(0,.5),R.add(I);const N=this.getIconStackText();N&&R.add(N);const S=this.getIconStackText(!0);return S&&R.add(S),R}getIconStackText(E){if(this.getMaxStackCount()===1||E&&!this.virtualStackCount)return null;const R=s.add.bitmapText(10,15,"item-count",this.stackCount.toString(),11);return R.letterSpacing=-.5,this.getStackCount()>=this.getMaxStackCount()&&R.setTint(16291984),R.setOrigin(0,0),R}};r(y3,"PersistentModifier");let WE=y3;const w3=class w3 extends dr{add(E){return!0}};r(w3,"ConsumableModifier");let Ls=w3;const V3=class V3 extends Ls{constructor(E,R,I){super(E),this.pokeballType=R,this.count=I}apply(){const E=s.pokeballCounts;return E[this.pokeballType]=Math.min(E[this.pokeballType]+this.count,hv),!0}};r(V3,"AddPokeballModifier");let oD=V3;const v3=class v3 extends Ls{constructor(E,R,I){super(E),this.voucherType=R,this.count=I}apply(){const E=s.gameData.voucherCounts;return E[this.voucherType]+=this.count,!0}};r(v3,"AddVoucherModifier");let CD=v3;const x3=class x3 extends WE{constructor(E,R,I,N){super(E,N),this.maxBattles=R,this.battleCount=I??this.maxBattles}add(E,R){for(const I of E)if(this.match(I)){const N=I;return N.getBattleCount()<N.getMaxBattles()?(N.resetBattleCount(),s.playSound("se/restore"),!0):!1}return E.push(this),!0}lapse(...E){return this.battleCount--,this.battleCount>0}getIcon(){const E=super.getIcon(),R=Math.floor(120*(this.battleCount/this.maxBattles)+5),I=$w(R,.5,.9),N=$w(R,.7,.3),S=We(27,0,this.battleCount.toString(),Se.PARTY,{fontSize:"66px",color:I});return S.setShadow(0,0),S.setStroke(N,16),S.setOrigin(1,0),E.add(S),E}getIconStackText(E){return null}getBattleCount(){return this.battleCount}resetBattleCount(){this.battleCount=this.maxBattles}setNewBattleCount(E){this.maxBattles=E,this.battleCount=E}getMaxBattles(){return this.maxBattles}getArgs(){return[this.maxBattles,this.battleCount]}getMaxStackCount(E){return 2}};r(x3,"LapsingPersistentModifier");let XL=x3;const Un=class Un extends XL{match(E){return E instanceof Un&&E.getMaxBattles()===this.getMaxBattles()}clone(){return new Un(this.type,this.getMaxBattles(),this.getBattleCount(),this.stackCount)}apply(E){return E.value=E.value/4,!0}};r(Un,"DoubleBattleChanceBoosterModifier");let Kr=Un;const Dn=class Dn extends XL{constructor(E,R,I,N,S){super(E,I,N,S),this.stat=R,this.boost=R!==h.ACC?.3:1}match(E){return E instanceof Dn?E.stat===this.stat:!1}clone(){return new Dn(this.type,this.stat,this.getMaxBattles(),this.getBattleCount(),this.stackCount)}getArgs(){return[this.stat,...super.getArgs()]}shouldApply(E,R){return!!E&&!!R&&Mv.includes(E)&&E===this.stat}apply(E,R){return R.value+=this.boost,!0}};r(Dn,"TempStatStageBoosterModifier");let ZS=Dn;const Mn=class Mn extends XL{clone(){return new Mn(this.type,this.getMaxBattles(),this.getBattleCount(),this.stackCount)}match(E){return E instanceof Mn}shouldApply(E){return!!E}apply(E){return E.value++,!0}};r(Mn,"TempCritBoosterModifier");let Fr=Mn;const rM=class rM extends WE{clone(){return new rM(this.type,this.stackCount)}apply(...E){return!0}getMaxStackCount(){return 1}};r(rM,"MapModifier");let Yr=rM;const iM=class iM extends WE{clone(){return new iM(this.type,this.stackCount)}apply(...E){return!0}getMaxStackCount(){return 1}};r(iM,"MegaEvolutionAccessModifier");let kS=iM;const oM=class oM extends WE{clone(){return new oM(this.type,this.stackCount)}apply(...E){return!0}getMaxStackCount(){return 1}};r(oM,"GigantamaxAccessModifier");let XS=oM;const CM=class CM extends WE{clone(){return new CM(this.type,this.stackCount)}apply(...E){return!0}getMaxStackCount(){return 1}};r(CM,"TerastallizeAccessModifier");let QS=CM;const b3=class b3 extends WE{constructor(E,R,I){super(E,I),this.isTransferable=!0,this.pokemonId=R}match(E){return this.matchType(E)&&E.pokemonId===this.pokemonId}getArgs(){return[this.pokemonId]}shouldApply(E,...R){return!!E&&(this.pokemonId===-1||E.id===this.pokemonId)}isIconVisible(){var E;return!!((E=this.getPokemon())!=null&&E.isOnField())}getIcon(E){const R=E?super.getIcon():s.add.container(0,0);if(E)R.setScale(.5);else{const I=this.getPokemon();if(I){const i=s.addPokemonIcon(I,-2,10,0,.5,void 0,!0);R.add(i),R.setName(I.id.toString())}const N=s.add.sprite(16,this.virtualStackCount?8:16,"items");N.setScale(.5),N.setOrigin(0,.5),N.setTexture("items",this.type.iconImage),R.add(N);const S=this.getIconStackText();S&&R.add(S);const T=this.getIconStackText(!0);T&&R.add(T)}return R}getPokemon(){return this.pokemonId?s.getPokemonById(this.pokemonId)??void 0:void 0}getScoreMultiplier(){return 1}getMaxStackCount(E){const R=this.getPokemon();return R?R.isPlayer()&&E?s.getPlayerParty().map(I=>this.getMaxHeldItemCount(I)).reduce((I,N)=>Math.max(I,N),0):this.getMaxHeldItemCount(R):0}};r(b3,"PokemonHeldItemModifier");let DA=b3;const Z3=class Z3 extends DA{constructor(E,R,I,N){super(E,R,N),this.isTransferable=!1,this.battlesLeft=I}lapse(...E){return!!--this.battlesLeft}getIcon(E){var I;const R=super.getIcon(E);if((I=this.getPokemon())!=null&&I.isPlayer()){const N=We(27,0,this.battlesLeft.toString(),Se.PARTY,{fontSize:"66px",color:fv.PINK});N.setShadow(0,0),N.setStroke(dv.RED,16),N.setOrigin(1,0),R.add(N)}return R}getBattlesLeft(){return this.battlesLeft}getMaxStackCount(E){return 1}};r(Z3,"LapsingPokemonHeldItemModifier");let Wr=Z3;const Pn=class Pn extends DA{constructor(E,R,I,N){super(E,R,N),this.isTransferable=!1,this.stat=I}matchType(E){return E instanceof Pn?E.stat===this.stat:!1}clone(){return new Pn(this.type,this.pokemonId,this.stat,this.stackCount)}getArgs(){return super.getArgs().concat(this.stat)}shouldApply(E,R){return super.shouldApply(E,R)&&Array.isArray(R)}apply(E,R){return R[this.stat]=Math.floor(R[this.stat]*(1+this.getStackCount()*.1)),!0}getScoreMultiplier(){return 1.1}getMaxHeldItemCount(E){return E.ivs[this.stat]}};r(Pn,"BaseStatModifier");let mr=Pn;const Gn=class Gn extends DA{constructor(E,R,I,N,S){super(E,R,S),this.isTransferable=!1,this.species=I,this.required=N}matchType(E){return E instanceof Gn&&E.species===this.species&&E.required===this.required}clone(){return new Gn(this.type,this.pokemonId,this.species,this.required,this.stackCount)}getArgs(){return super.getArgs().concat([this.species,this.required])}apply(){return!0}getIconStackText(E){if(this.getMaxStackCount()===1||E&&!this.virtualStackCount)return null;const R=s.getPokemonById(this.pokemonId);this.stackCount=R?R.evoCounter+R.getHeldItems().filter(N=>N instanceof JL).length+s.findModifiers(N=>N instanceof CO||N instanceof qL||N instanceof zL).length:this.stackCount;const I=s.add.bitmapText(10,15,"item-count",this.stackCount.toString(),11);return I.letterSpacing=-.5,this.getStackCount()>=this.required&&I.setTint(16291984),I.setOrigin(0,0),I}getMaxHeldItemCount(E){return this.stackCount=E.evoCounter+E.getHeldItems().filter(R=>R instanceof JL).length+s.findModifiers(R=>R instanceof CO||R instanceof qL||R instanceof zL).length,999}};r(Gn,"EvoTrackerModifier");let gr=Gn;const _n=class _n extends DA{constructor(E,R,I,N){super(E,R,N),this.isTransferable=!1,this.statModifier=I}matchType(E){return E instanceof _n&&this.statModifier===E.statModifier}clone(){return new _n(this.type,this.pokemonId,this.statModifier,this.stackCount)}getArgs(){return super.getArgs().concat(this.statModifier)}shouldApply(E,R){return super.shouldApply(E,R)&&Array.isArray(R)}apply(E,R){return R.forEach((I,N)=>{const S=Math.floor(N===0?I+this.statModifier/2:I+this.statModifier);R[N]=Math.min(Math.max(S,1),999999)}),!0}getScoreMultiplier(){return 1.2}getMaxHeldItemCount(E){return 2}};r(_n,"PokemonBaseStatTotalModifier");let pr=_n;const un=class un extends DA{constructor(E,R,I,N,S){super(E,R,S),this.isTransferable=!1,this.statModifier=I,this.stats=N}matchType(E){return E instanceof un&&E.statModifier===this.statModifier&&this.stats.every(R=>E.stats.some(I=>R===I))}clone(){return new un(this.type,this.pokemonId,this.statModifier,this.stats,this.stackCount)}getArgs(){return[...super.getArgs(),this.statModifier,this.stats]}shouldApply(E,R){return super.shouldApply(E,R)&&Array.isArray(R)}apply(E,R){return R.forEach((I,N)=>{if(this.stats.includes(N)){const S=Math.floor(I+this.statModifier);R[N]=Math.min(Math.max(S,1),999999)}}),!0}getScoreMultiplier(){return 1.1}getMaxHeldItemCount(E){return 1}};r(un,"PokemonBaseStatFlatModifier");let yr=un;const Hn=class Hn extends DA{constructor(){super(...arguments),this.isTransferable=!1}matchType(E){return E instanceof Hn}clone(){return new Hn(this.type,this.pokemonId,this.stackCount)}getArgs(){return super.getArgs()}shouldApply(E,R,I){return super.shouldApply(E,R,I)&&!!I}apply(E,R,I){return R===h.HP?(I.value+=2*this.stackCount,this.stackCount===this.getMaxHeldItemCount()&&(I.value=Math.floor(I.value*1.1))):(I.value+=this.stackCount,this.stackCount===this.getMaxHeldItemCount()&&(I.value=Math.floor(I.value*1.05))),!0}getScoreMultiplier(){return 1.2}getMaxHeldItemCount(E){return 50}};r(Hn,"PokemonIncrementingStatModifier");let JS=Hn;const cn=class cn extends DA{constructor(E,R,I,N,S){super(E,R,S),this.stats=I,this.multiplier=N}clone(){return new cn(this.type,this.pokemonId,this.stats,this.multiplier,this.stackCount)}getArgs(){return[...super.getArgs(),this.stats,this.multiplier]}matchType(E){if(E instanceof cn){const R=E;if(R.multiplier===this.multiplier&&R.stats.length===this.stats.length)return R.stats.every((I,N)=>I===this.stats[N])}return!1}shouldApply(E,R,I){return super.shouldApply(E,R,I)&&this.stats.includes(R)}apply(E,R,I){return I.value*=this.multiplier,!0}getMaxHeldItemCount(E){return 1}};r(cn,"StatBoosterModifier");let $S=cn;const lM=class lM extends $S{clone(){return super.clone()}matchType(E){return E instanceof lM}shouldApply(E,R,I){return super.shouldApply(E,R,I)&&!E.isMax()}apply(E,R,I){const N=E.getSpeciesForm(!0).speciesId in BA;return E.isFusion()&&E.getFusionSpeciesForm(!0).speciesId in BA!==N?(I.value*=1+(this.multiplier-1)/2,!0):N?super.apply(E,R,I):!1}};r(lM,"EvolutionStatBoosterModifier");let lD=lM;const Bn=class Bn extends $S{constructor(E,R,I,N,S,T){super(E,R,I,N,T),this.species=S}clone(){return new Bn(this.type,this.pokemonId,this.stats,this.multiplier,this.species,this.stackCount)}getArgs(){return[...super.getArgs(),this.species]}matchType(E){if(E instanceof Bn){const R=E;if(R.species.length===this.species.length)return super.matchType(E)&&R.species.every((I,N)=>I===this.species[N])}return!1}shouldApply(E,R,I){return super.shouldApply(E,R,I)&&(this.species.includes(E.getSpeciesForm(!0).speciesId)||E.isFusion()&&this.species.includes(E.getFusionSpeciesForm(!0).speciesId))}contains(E,R){return this.species.includes(E)&&this.stats.includes(R)}};r(Bn,"SpeciesStatBoosterModifier");let Ns=Bn;const hn=class hn extends DA{constructor(E,R,I,N){super(E,R,N),this.stageIncrement=I}clone(){return new hn(this.type,this.pokemonId,this.stageIncrement,this.stackCount)}getArgs(){return super.getArgs().concat(this.stageIncrement)}matchType(E){return E instanceof hn?E.stageIncrement===this.stageIncrement:!1}apply(E,R){return R.value+=this.stageIncrement,!0}getMaxHeldItemCount(E){return 1}};r(hn,"CritBoosterModifier");let qS=hn;const fn=class fn extends qS{constructor(E,R,I,N,S){super(E,R,I,S),this.species=N}clone(){return new fn(this.type,this.pokemonId,this.stageIncrement,this.species,this.stackCount)}getArgs(){return[...super.getArgs(),this.species]}matchType(E){return E instanceof fn}shouldApply(E,R){return super.shouldApply(E,R)&&(this.species.includes(E.getSpeciesForm(!0).speciesId)||E.isFusion()&&this.species.includes(E.getFusionSpeciesForm(!0).speciesId))}};r(fn,"SpeciesCritBoosterModifier");let wr=fn;const dn=class dn extends DA{constructor(E,R,I,N,S){super(E,R,S),this.moveType=I,this.boostMultiplier=N*.01}matchType(E){if(E instanceof dn){const R=E;return R.moveType===this.moveType&&R.boostMultiplier===this.boostMultiplier}return!1}clone(){return new dn(this.type,this.pokemonId,this.moveType,this.boostMultiplier*100,this.stackCount)}getArgs(){return super.getArgs().concat([this.moveType,this.boostMultiplier*100])}shouldApply(E,R,I){return super.shouldApply(E,R,I)&&typeof R=="number"&&I instanceof me&&this.moveType===R}apply(E,R,I){return R===this.moveType&&I.value>=1?(I.value=Math.floor(I.value*(1+this.getStackCount()*this.boostMultiplier)),!0):!1}getScoreMultiplier(){return 1.2}getMaxHeldItemCount(E){return 99}};r(dn,"AttackTypeBoosterModifier");let DI=dn;const Kn=class Kn extends DA{matchType(E){return E instanceof Kn}clone(){return new Kn(this.type,this.pokemonId,this.stackCount)}shouldApply(E,R){return super.shouldApply(E,R)&&!!R}apply(E,R){return!R.value&&E.randBattleSeedInt(10)<this.getStackCount()?(R.value=!0,s.queueMessage(D.t("modifier:surviveDamageApply",{pokemonNameWithAffix:Z(E),typeName:this.type.name})),!0):!1}getMaxHeldItemCount(E){return 5}};r(Kn,"SurviveDamageModifier");let Vr=Kn;const Fn=class Fn extends DA{matchType(E){return E instanceof Fn}clone(){return new Fn(this.type,this.pokemonId,this.stackCount)}shouldApply(E,R){return super.shouldApply(E,R)&&!!R}apply(E,R){var I;if(!R.value&&E.randBattleSeedInt(10)<this.getStackCount()){R.value=!0;const N=((I=s.currentBattle.turnCommands[E.getBattlerIndex()])==null?void 0:I.command)===GE.FIGHT,S=this.type instanceof eE&&this.type.id==="QUICK_CLAW";return N&&S&&s.queueMessage(D.t("modifier:bypassSpeedChanceApply",{pokemonName:Z(E),itemName:D.t("modifierType:ModifierType.QUICK_CLAW.name")})),!0}return!1}getMaxHeldItemCount(E){return 3}};r(Fn,"BypassSpeedChanceModifier");let zS=Fn;const Yn=class Yn extends DA{constructor(E,R,I){super(E,R,I),this.chance=10}matchType(E){return E instanceof Yn}clone(){return new Yn(this.type,this.pokemonId,this.stackCount)}shouldApply(E,R){return super.shouldApply(E,R)&&!!R}apply(E,R){return E.summonData&&!R.value&&E.randBattleSeedInt(100)<this.getStackCount()*this.chance?(R.value=!0,!0):!1}getMaxHeldItemCount(E){return 3}};r(Yn,"FlinchChanceModifier");let vr=Yn;const Wn=class Wn extends DA{matchType(E){return E instanceof Wn}clone(){return new Wn(this.type,this.pokemonId,this.stackCount)}apply(E){return E.isFullHp()?!1:(s.unshiftPhase(new Dt(E.getBattlerIndex(),uA(E.getMaxHp()/16)*this.stackCount,D.t("modifier:turnHealApply",{pokemonNameWithAffix:Z(E),typeName:this.type.name}),!0)),!0)}getMaxHeldItemCount(E){return 4}};r(Wn,"TurnHealModifier");let jS=Wn;const mn=class mn extends DA{constructor(E,R,I){switch(super(E,R,I),E.id){case"TOXIC_ORB":this.effect=J.TOXIC;break;case"FLAME_ORB":this.effect=J.BURN;break}}matchType(E){return E instanceof mn}clone(){return new mn(this.type,this.pokemonId,this.stackCount)}apply(E){return E.trySetStatus(this.effect,!0,void 0,void 0,this.type.name)}getMaxHeldItemCount(E){return 1}getStatusEffect(){return this.effect}};r(mn,"TurnStatusEffectModifier");let ss=mn;const gn=class gn extends DA{matchType(E){return E instanceof gn}clone(){return new gn(this.type,this.pokemonId,this.stackCount)}apply(E){return E.turnData.totalDamageDealt&&!E.isFullHp()&&s.unshiftPhase(new Dt(E.getBattlerIndex(),uA(E.turnData.totalDamageDealt/8)*this.stackCount,D.t("modifier:hitHealApply",{pokemonNameWithAffix:Z(E),typeName:this.type.name}),!0)),!0}getMaxHeldItemCount(E){return 4}};r(gn,"HitHealModifier");let Ss=gn;const pn=class pn extends WE{match(E){return E instanceof pn}clone(){return new pn(this.type,this.stackCount)}shouldApply(E){return!!E}apply(E){return E.value+=this.getStackCount(),!0}getMaxStackCount(E){return 99}};r(pn,"LevelIncrementBoosterModifier");let QL=pn;const yn=class yn extends DA{constructor(E,R,I,N){super(E,R,N),this.berryType=I,this.consumed=!1}matchType(E){return E instanceof yn&&E.berryType===this.berryType}clone(){return new yn(this.type,this.pokemonId,this.berryType,this.stackCount)}getArgs(){return super.getArgs().concat(this.berryType)}shouldApply(E){return!this.consumed&&super.shouldApply(E)&&uX(this.berryType)(E)}apply(E){const R=new SA(!1);return s.applyModifiers(Ts,E.isPlayer(),E,R),this.consumed=!R.value,lc(this.berryType)(E),BM(qN,E,!1),E.recordEatenBerry(this.berryType,this.consumed),!0}getMaxHeldItemCount(E){return[OA.LUM,OA.LEPPA,OA.SITRUS,OA.ENIGMA].includes(this.berryType)?2:3}};r(yn,"BerryModifier");let XE=yn;const wn=class wn extends WE{match(E){return E instanceof wn}clone(){return new wn(this.type,this.stackCount)}shouldApply(E,R){return!!E&&!!R}apply(E,R){return R.value||(R.value=E.randBattleSeedInt(10)<this.getStackCount()*3),!0}getMaxStackCount(){return 3}};r(wn,"PreserveBerryModifier");let Ts=wn;const Vn=class Vn extends DA{matchType(E){return E instanceof Vn}clone(){return new Vn(this.type,this.pokemonId,this.stackCount)}apply(E){s.unshiftPhase(new Dt(E.getBattlerIndex(),uA(E.getMaxHp()/2),D.t("modifier:pokemonInstantReviveApply",{pokemonNameWithAffix:Z(E),typeName:this.type.name}),!1,!1,!0)),E.resetStatus(!0,!1,!0,!1);const R=E.isPlayer()?s.getPlayerField():s.getEnemyField();for(const I of R)sA(HS,I,null,!1);return!0}getMaxHeldItemCount(E){return 1}};r(Vn,"PokemonInstantReviveModifier");let eT=Vn;const vn=class vn extends DA{matchType(E){return E instanceof vn}clone(){return new vn(this.type,this.pokemonId,this.stackCount)}apply(E){let R=!1;for(const I of cO)E.getStatStage(I)<0&&(E.setStatStage(I,0),R=!0);return R&&s.queueMessage(D.t("modifier:resetNegativeStatStageApply",{pokemonNameWithAffix:Z(E),typeName:this.type.name})),R}getMaxHeldItemCount(E){return 2}};r(vn,"ResetNegativeStatStageModifier");let xr=vn;const xn=class xn extends DA{apply(E,R){return R.value+=2*this.stackCount,!0}matchType(E){return E instanceof xn}clone(){return new xn(this.type,this.pokemonId,this.stackCount)}getMaxHeldItemCount(E){return 2}};r(xn,"FieldEffectModifier");let AT=xn;const k3=class k3 extends Ls{constructor(E,R){super(E),this.pokemonId=R}shouldApply(E,...R){return!!E&&(this.pokemonId===-1||E.id===this.pokemonId)}getPokemon(){return s.getPlayerParty().find(E=>E.id===this.pokemonId)}};r(k3,"ConsumablePokemonModifier");let AO=k3;const X3=class X3 extends AO{constructor(E,R,I){super(E,R),this.teraType=I}shouldApply(E){var R;return super.shouldApply(E)&&[E==null?void 0:E.species.speciesId,(R=E==null?void 0:E.fusionSpecies)==null?void 0:R.speciesId].filter(I=>I===e.TERAPAGOS||I===e.OGERPON||I===e.SHEDINJA).length===0}apply(E){return E.teraType=this.teraType,!0}};r(X3,"TerrastalizeModifier");let UD=X3;const Q3=class Q3 extends AO{constructor(E,R,I,N,S,T){super(E,R),this.restorePoints=I,this.restorePercent=N,this.healStatus=S,this.fainted=!!T}shouldApply(E,R){return super.shouldApply(E)&&(this.fainted||!Ne(R)&&typeof R=="number")}apply(E,R){if(!E.hp===this.fainted){let I=this.restorePoints;return this.fainted||(I=Math.floor(I*R)),(this.fainted||this.healStatus)&&E.resetStatus(!0,!0,!1,!1),E.hp=Math.min(E.hp+Math.max(Math.ceil(Math.max(Math.floor(this.restorePercent*.01*E.getMaxHp()),I)),1),E.getMaxHp()),!0}return!1}};r(Q3,"PokemonHpRestoreModifier");let ns=Q3;const J3=class J3 extends AO{apply(E){return E.resetStatus(!0,!0,!1,!1),!0}};r(J3,"PokemonStatusHealModifier");let DD=J3;const $3=class $3 extends AO{constructor(E,R,I){super(E,R),this.moveIndex=I}};r($3,"ConsumablePokemonMoveModifier");let br=$3;const q3=class q3 extends br{constructor(E,R,I,N){super(E,R,I),this.restorePoints=N}apply(E){const R=E.getMoveset()[this.moveIndex];return R&&(R.ppUsed=this.restorePoints>-1?Math.max(R.ppUsed-this.restorePoints,0):0),!0}};r(q3,"PokemonPpRestoreModifier");let MD=q3;const z3=class z3 extends AO{constructor(E,R,I){super(E,R),this.restorePoints=I}apply(E){for(const R of E.getMoveset())R&&(R.ppUsed=this.restorePoints>-1?Math.max(R.ppUsed-this.restorePoints,0):0);return!0}};r(z3,"PokemonAllMovePpRestoreModifier");let PD=z3;const j3=class j3 extends br{constructor(E,R,I,N){super(E,R,I),this.upPoints=N}apply(E){const R=E.getMoveset()[this.moveIndex];return R&&!R.maxPpOverride&&(R.ppUp=Math.min(R.ppUp+this.upPoints,3)),!0}};r(j3,"PokemonPpUpModifier");let GD=j3;const ew=class ew extends AO{constructor(E,R,I){super(E,R),this.nature=I}apply(E){return E.setCustomNature(this.nature),s.gameData.unlockSpeciesNature(E.species,this.nature),!0}};r(ew,"PokemonNatureChangeModifier");let _D=ew;const Aw=class Aw extends AO{apply(E,R=new me(1)){return s.applyModifiers(QL,!0,R),E.level+=R.value,E.level<=s.getMaxExpLevel(!0)&&(E.exp=SO(E.level,E.species.growthRate),E.levelExp=0),E.addFriendship(f8),s.unshiftPhase(new B1(s.getPlayerParty().indexOf(E),E.level-R.value,E.level)),!0}};r(Aw,"PokemonLevelIncrementModifier");let Zr=Aw;const Ew=class Ew extends AO{apply(E){return s.unshiftPhase(new kI(s.getPlayerParty().indexOf(E),this.type.moveId,ac.TM)),!0}};r(Ew,"TmModifier");let uD=Ew;const tw=class tw extends AO{constructor(E,R,I){super(E,R),this.levelMoveIndex=I}apply(E,R){return s.unshiftPhase(new kI(s.getPlayerParty().indexOf(E),E.getLearnableLevelMoves()[this.levelMoveIndex],ac.MEMORY,R)),!0}};r(tw,"RememberMoveModifier");let HD=tw;const Rw=class Rw extends AO{apply(E){let R=BA.hasOwnProperty(E.species.speciesId)?BA[E.species.speciesId].find(I=>I.item===this.type.evolutionItem&&(I.evoFormKey===null||(I.preFormKey||"")===E.getFormKey())&&(!I.condition||I.condition.predicate(E))):null;return!R&&E.isFusion()&&(R=BA[E.fusionSpecies.speciesId].find(I=>I.item===this.type.evolutionItem&&(I.evoFormKey===null||(I.preFormKey||"")===E.getFusionFormKey())&&(!I.condition||I.condition.predicate(E))),R&&(R=new yI(E.species.speciesId,R))),R?(s.unshiftPhase(new iD(E,R,E.level-1)),!0):!1}};r(Rw,"EvolutionItemModifier");let cD=Rw;const Ow=class Ow extends AO{constructor(E,R,I){super(E,R),this.fusePokemonId=I}shouldApply(E,R){return super.shouldApply(E,R)&&!!R&&this.fusePokemonId===R.id}apply(E,R){return E.fuse(R),!0}};r(Ow,"FusePokemonModifier");let BD=Ow;const bn=class bn extends WE{match(E){return E instanceof bn}apply(){return!0}clone(){return new bn(this.type,this.stackCount)}getMaxStackCount(){return 5}};r(bn,"MultipleParticipantExpBonusModifier");let hD=bn;const Zn=class Zn extends WE{constructor(E,R,I){super(E,I),this.multiplier=R}match(E){return E instanceof Zn}clone(){return new Zn(this.type,this.multiplier,this.stackCount)}getArgs(){return[this.multiplier]}apply(E){return E.value*=1+(this.multiplier-1)*this.getStackCount(),!0}getMaxStackCount(){return 5}};r(Zn,"HealingBoosterModifier");let ET=Zn;const kn=class kn extends WE{constructor(E,R,I){super(E,I),this.boostMultiplier=R*.01}match(E){return E instanceof kn?E.boostMultiplier===this.boostMultiplier:!1}clone(){return new kn(this.type,this.boostMultiplier*100,this.stackCount)}getArgs(){return[this.boostMultiplier*100]}apply(E){return E.value=Math.floor(E.value*(1+this.getStackCount()*this.boostMultiplier)),!0}getMaxStackCount(E){return this.boostMultiplier<1?this.boostMultiplier<.6?99:30:10}};r(kn,"ExpBoosterModifier");let fD=kn;const Xn=class Xn extends DA{constructor(E,R,I,N){super(E,R,N),this.boostMultiplier=I*.01}matchType(E){return E instanceof Xn?E.boostMultiplier===this.boostMultiplier:!1}clone(){return new Xn(this.type,this.pokemonId,this.boostMultiplier*100,this.stackCount)}getArgs(){return super.getArgs().concat(this.boostMultiplier*100)}shouldApply(E,R){return super.shouldApply(E,R)&&!!R}apply(E,R){return R.value=Math.floor(R.value*(1+this.getStackCount()*this.boostMultiplier)),!0}getMaxHeldItemCount(E){return 99}};r(Xn,"PokemonExpBoosterModifier");let dD=Xn;const Qn=class Qn extends WE{match(E){return E instanceof Qn}clone(){return new Qn(this.type,this.stackCount)}apply(){return!0}getMaxStackCount(){return 5}};r(Qn,"ExpShareModifier");let KD=Qn;const Jn=class Jn extends WE{match(E){return E instanceof Jn}clone(){return new Jn(this.type,this.stackCount)}apply(){return!0}getMaxStackCount(){return 4}};r(Jn,"ExpBalanceModifier");let FD=Jn;const $n=class $n extends DA{matchType(E){return E instanceof $n}clone(){return new $n(this.type,this.pokemonId,this.stackCount)}apply(E,R){return R.value=Math.floor(R.value*(1+.5*this.getStackCount())),!0}getMaxHeldItemCount(E){return 3}};r($n,"PokemonFriendshipBoosterModifier");let kr=$n;const qn=class qn extends DA{matchType(E){return E instanceof qn}clone(){return new qn(this.type,this.pokemonId,this.stackCount)}apply(E,R){return R.value!==1?(R.value+=.1*this.getStackCount()*(R.value>1?1:-1),!0):!1}getMaxHeldItemCount(E){return 10}};r(qn,"PokemonNatureWeightModifier");let Xr=qn;const zn=class zn extends DA{constructor(E,R,I,N){super(E,R,N),this.accuracyAmount=I}matchType(E){return E instanceof zn?E.accuracyAmount===this.accuracyAmount:!1}clone(){return new zn(this.type,this.pokemonId,this.accuracyAmount,this.stackCount)}getArgs(){return super.getArgs().concat(this.accuracyAmount)}shouldApply(E,R){return super.shouldApply(E,R)&&!!R}apply(E,R){return R.value=R.value+this.accuracyAmount*this.getStackCount(),!0}getMaxHeldItemCount(E){return 3}};r(zn,"PokemonMoveAccuracyBoosterModifier");let Qr=zn;const jn=class jn extends DA{matchType(E){return E instanceof jn}clone(){return new jn(this.type,this.pokemonId,this.stackCount)}apply(E,R,I=null,N=null){return Ke[R].canBeMultiStrikeEnhanced(E)?Ne(I)?Ne(N)?!1:this.applyDamageModifier(E,N):this.applyHitCountBoost(I):!1}applyHitCountBoost(E){return E.value+=this.getStackCount(),!0}applyDamageModifier(E,R){return E.turnData.hitsLeft===E.turnData.hitCount?(R.value*=1-.25*this.getStackCount(),!0):E.turnData.hitCount-E.turnData.hitsLeft!==this.getStackCount()+1?(R.value*=.25,!0):!1}getMaxHeldItemCount(E){return 2}};r(jn,"PokemonMultiHitModifier");let $I=jn;const ea=class ea extends DA{constructor(E,R,I,N,S){super(E,R,S),this.isTransferable=!1,this.formChangeItem=I,this.active=N}matchType(E){return E instanceof ea&&E.formChangeItem===this.formChangeItem}clone(){return new ea(this.type,this.pokemonId,this.formChangeItem,this.active,this.stackCount)}getArgs(){return super.getArgs().concat(this.formChangeItem,this.active)}apply(E,R){const I=this.active&&!R;I&&(this.active=!1);const N=s.triggerPokemonFormChange(E,re);return I&&(this.active=!0),N}getMaxHeldItemCount(E){return 1}};r(ea,"PokemonFormChangeItemModifier");let EI=ea;const Iw=class Iw extends Ls{constructor(E,R){super(E),this.moneyMultiplier=R}apply(){const E=new me(s.getWaveMoneyAmount(this.moneyMultiplier));return s.applyModifiers(CO,!0,E),s.addMoney(E.value),s.getPlayerParty().map(R=>{var I,N;if(((I=R.species)==null?void 0:I.speciesId)===e.GIMMIGHOUL||((N=R.fusionSpecies)==null?void 0:N.speciesId)===e.GIMMIGHOUL){R.evoCounter?R.evoCounter+=Math.min(Math.floor(this.moneyMultiplier),3):R.evoCounter=Math.min(Math.floor(this.moneyMultiplier),3);const S=q1(x.EVOLUTION_TRACKER_GIMMIGHOUL).newModifier(R);s.addModifier(S)}}),!0}};r(Iw,"MoneyRewardModifier");let YD=Iw;const Aa=class Aa extends WE{match(E){return E instanceof Aa}clone(){return new Aa(this.type,this.stackCount)}apply(E){return E.value+=Math.floor(E.value*.2*this.getStackCount()),!0}getMaxStackCount(){return 5}};r(Aa,"MoneyMultiplierModifier");let CO=Aa;const Ea=class Ea extends DA{matchType(E){return E instanceof Ea}clone(){return new Ea(this.type,this.pokemonId,this.stackCount)}apply(E,R){const I=new me(Math.floor(R.value*(.5*this.getStackCount())));return s.applyModifiers(CO,!0,I),s.addMoney(I.value),!0}getMaxHeldItemCount(E){return 5}};r(Ea,"DamageMoneyRewardModifier");let JL=Ea;const ta=class ta extends WE{match(E){return E instanceof ta}apply(){const E=Math.floor(s.money*.1*this.getStackCount());s.addMoney(E);const R=navigator.language||"en-US",I=E.toLocaleString(R),N=D.t("modifier:moneyInterestApply",{moneyAmount:I,typeName:this.type.name});return s.queueMessage(N,void 0,!0),!0}clone(){return new ta(this.type,this.stackCount)}getMaxStackCount(){return 5}};r(ta,"MoneyInterestModifier");let Jr=ta;const Ra=class Ra extends WE{match(E){return E instanceof Ra}clone(){return new Ra(this.type,this.stackCount)}apply(E){return E.value*=Math.pow(2,-1-this.getStackCount()),!0}getMaxStackCount(){return 4}};r(Ra,"HiddenAbilityRateBoosterModifier");let MI=Ra;const Oa=class Oa extends WE{match(E){return E instanceof Oa}clone(){return new Oa(this.type,this.stackCount)}apply(E){return E.value*=Math.pow(2,1+this.getStackCount()),!0}getMaxStackCount(){return 4}};r(Oa,"ShinyRateBoosterModifier");let as=Oa;const Ia=class Ia extends WE{match(E){return E instanceof Ia}clone(){return new Ia(this.type,this.stackCount)}apply(E){return E.value*=1.5+this.getStackCount()/2,!0}getMaxStackCount(){return 3}};r(Ia,"CriticalCatchChanceBoosterModifier");let $r=Ia;const La=class La extends WE{match(E){return E instanceof La}apply(){return!0}clone(){return new La(this.type,this.stackCount)}getMaxStackCount(){return 1}};r(La,"LockModifierTiersModifier");let qr=La;const Na=class Na extends WE{constructor(E,R,I){super(E,I),this.shopMultiplier=R??2.5}match(E){return E instanceof Na}clone(){return new Na(this.type,this.shopMultiplier,this.stackCount)}apply(E){return E.value=Math.floor(E.value*this.shopMultiplier),!0}getArgs(){return super.getArgs().concat(this.shopMultiplier)}getMaxStackCount(){return 1}};r(Na,"HealShopCostModifier");let $L=Na;const sa=class sa extends WE{match(E){return E instanceof sa}clone(){return new sa(this.type,this.stackCount)}apply(){return!0}getMaxStackCount(){return 1}};r(sa,"BoostBugSpawnModifier");let zr=sa;const Sa=class Sa extends DA{matchType(E){return E instanceof Sa}clone(){return new Sa(this.type,this.pokemonId,this.stackCount)}apply(){return!0}getMaxHeldItemCount(E){return 1}};r(Sa,"SwitchEffectTransferModifier");let rs=Sa;const Lw=class Lw extends DA{getTargets(E,...R){return E instanceof bS?E.getOpponents():[]}apply(E,R,...I){const N=this.getTargets(E,R);if(!N.length)return!1;const S=N[E.randBattleSeedInt(N.length)],T=this.getTransferredItemCount();if(!T)return!1;const i=E.isPlayer()?lt.PLAYER:E.hasTrainer()?lt.TRAINER:lt.WILD,o=[],C=s.findModifiers(G=>G instanceof DA&&G.pokemonId===S.id&&G.isTransferable,S.isPlayer());let U=C.map(G=>G.type.getOrInferTier(i)).reduce((G,H)=>Math.max(H,G),0),_=C.filter(G=>G.type.getOrInferTier(i)===U);for(let G=0;G<T;G++){if(!_.length){for(;U--&&!_.length;)_=C.filter(f=>f.type.tier===U);if(!_.length)break}const H=E.randBattleSeedInt(C.length),c=C[H];s.tryTransferHeldItemModifier(c,E,!1)&&(o.push(c.type),C.splice(H,1))}for(const G of o)s.queueMessage(this.getTransferMessage(E,S,G));return!!o.length}};r(Lw,"HeldItemTransferModifier");let jr=Lw;const Ta=class Ta extends jr{constructor(){super(...arguments),this.isTransferable=!0}matchType(E){return E instanceof Ta}clone(){return new Ta(this.type,this.pokemonId,this.stackCount)}getTransferredItemCount(){return this.getStackCount()}getTransferMessage(E,R,I){return D.t("modifier:turnHeldItemTransferApply",{pokemonNameWithAffix:Z(R),itemName:I.name,pokemonName:E.getNameToRender(),typeName:this.type.name})}getMaxHeldItemCount(E){return 1}setTransferrableFalse(){this.isTransferable=!1}};r(Ta,"TurnHeldItemTransferModifier");let tT=Ta;const na=class na extends jr{constructor(E,R,I,N){super(E,R,N),this.chance=I/100}getTargets(E,R){return R?[R]:[]}matchType(E){return E instanceof na}clone(){return new na(this.type,this.pokemonId,this.chance*100,this.stackCount)}getArgs(){return super.getArgs().concat(this.chance*100)}getTransferredItemCount(){return Phaser.Math.RND.realInRange(0,1)<this.chance*this.getStackCount()?1:0}getTransferMessage(E,R,I){return D.t("modifier:contactHeldItemTransferApply",{pokemonNameWithAffix:Z(R),itemName:I.name,pokemonName:Z(E),typeName:this.type.name})}getMaxHeldItemCount(E){return 5}};r(na,"ContactHeldItemTransferChanceModifier");let is=na;const aa=class aa extends WE{constructor(E,R){super(E)}match(E){return E instanceof aa}clone(){return new aa(this.type)}apply(){return!0}getMaxStackCount(){return 1}};r(aa,"IvScannerModifier");let os=aa;const ra=class ra extends WE{match(E){return E instanceof ra}clone(){return new ra(this.type,this.stackCount)}apply(E){return E.value+=this.getStackCount(),!0}getMaxStackCount(){return 3}};r(ra,"ExtraModifierModifier");let qL=ra;const ia=class ia extends XL{add(E,R){for(const I of E)if(this.match(I)){const N=I,S=this.getMaxBattles()+N.getBattleCount();return N.setNewBattleCount(S),s.playSound("se/restore"),!0}return E.push(this),!0}clone(){return new ia(this.type,this.getMaxBattles(),this.getBattleCount(),this.stackCount)}match(E){return E instanceof ia}apply(E){return E.value+=this.getStackCount(),!0}};r(ia,"TempExtraModifierModifier");let zL=ia;const Nw=class Nw extends WE{getMaxStackCount(){return 5}};r(Nw,"EnemyPersistentModifier");let cI=Nw;const sw=class sw extends cI{constructor(E,R,I){super(E,I),this.damageMultiplier=R}apply(E){return E.value=uA(E.value*Math.pow(this.damageMultiplier,this.getStackCount())),!0}getMaxStackCount(){return 99}};r(sw,"EnemyDamageMultiplierModifier");let WD=sw;const oa=class oa extends WD{constructor(E,R,I){super(E,1.05,I)}match(E){return E instanceof oa}clone(){return new oa(this.type,(this.damageMultiplier-1)*100,this.stackCount)}getArgs(){return[(this.damageMultiplier-1)*100]}getMaxStackCount(){return 999}};r(oa,"EnemyDamageBoosterModifier");let ei=oa;const Ca=class Ca extends WD{constructor(E,R,I){super(E,.975,I)}match(E){return E instanceof Ca}clone(){return new Ca(this.type,(1-this.damageMultiplier)*100,this.stackCount)}getArgs(){return[(1-this.damageMultiplier)*100]}getMaxStackCount(){return s.currentBattle.waveIndex<2e3?super.getMaxStackCount():999}};r(Ca,"EnemyDamageReducerModifier");let Ai=Ca;const la=class la extends cI{constructor(E,R,I){super(E,I),this.healPercent=2}match(E){return E instanceof la}clone(){return new la(this.type,this.healPercent,this.stackCount)}getArgs(){return[this.healPercent]}apply(E){return E.isFullHp()?!1:(s.unshiftPhase(new Dt(E.getBattlerIndex(),Math.max(Math.floor(E.getMaxHp()/(100/this.healPercent))*this.stackCount,1),D.t("modifier:enemyTurnHealApply",{pokemonNameWithAffix:Z(E)}),!0,!1,!1,!1,!0)),!0)}getMaxStackCount(){return 10}};r(la,"EnemyTurnHealModifier");let mD=la;const Ua=class Ua extends cI{constructor(E,R,I,N){super(E,N),this.effect=R,this.chance=.025*(this.effect===J.BURN||this.effect===J.POISON?2:1)}match(E){return E instanceof Ua&&E.effect===this.effect}clone(){return new Ua(this.type,this.effect,this.chance*100,this.stackCount)}getArgs(){return[this.effect,this.chance*100]}apply(E){return Phaser.Math.RND.realInRange(0,1)<this.chance*this.getStackCount()?E.trySetStatus(this.effect,!0):!1}getMaxStackCount(){return 10}};r(Ua,"EnemyAttackStatusEffectChanceModifier");let RT=Ua;const Da=class Da extends cI{constructor(E,R,I){super(E,I),this.chance=.025}match(E){return E instanceof Da}clone(){return new Da(this.type,this.chance*100,this.stackCount)}getArgs(){return[this.chance*100]}apply(E){return E.status&&Phaser.Math.RND.realInRange(0,1)<this.chance*this.getStackCount()?(s.queueMessage(qI(E.status.effect,Z(E))),E.resetStatus(),E.updateInfo(),!0):!1}getMaxStackCount(){return 10}};r(Da,"EnemyStatusEffectHealChanceModifier");let gD=Da;const Ma=class Ma extends cI{constructor(E,R,I){super(E,I||10),this.chance=2}match(E){return E instanceof Ma}clone(){return new Ma(this.type,this.chance,this.stackCount)}getArgs(){return[this.chance]}apply(E){return E.waveData.endured||E.randBattleSeedInt(100)>=this.chance*this.getStackCount()?!1:(E.addTag(Y.ENDURE_TOKEN,1),E.waveData.endured=!0,!0)}getMaxStackCount(){return 10}};r(Ma,"EnemyEndureChanceModifier");let Ei=Ma;const Pa=class Pa extends cI{constructor(E,R,I){super(E,I),this.chance=R/100}match(E){return E instanceof Pa&&E.chance===this.chance}clone(){return new Pa(this.type,this.chance*100,this.stackCount)}getArgs(){return[this.chance*100]}apply(E){return Phaser.Math.RND.realInRange(0,1)>=this.chance*this.getStackCount()?!1:(E.value=!0,!0)}getMaxStackCount(){return 10}};r(Pa,"EnemyFusionChanceModifier");let ti=Pa;function Uc(t=!0){const E=t?Ze.STARTING_MODIFIER_OVERRIDE:Ze.OPP_MODIFIER_OVERRIDE;if(!(!E||E.length===0||!s)){t||s.clearEnemyModifiers();for(const R of E){const I=x[R.name];let N=I();if(N instanceof jE){const T="type"in R&&R.type!==null?[R.type]:void 0;N=N.generateType([],T)}const S=N&&N.withIdFromFunc(I).newModifier();S&&(S.stackCount=R.count||1,t?s.addModifier(S,!0,!1,!1,!0):s.addEnemyModifier(S,!0,!0))}}}r(Uc,"overrideModifiers");function Dc(t,E=!0){const R=E?Ze.STARTING_HELD_ITEMS_OVERRIDE:Ze.OPP_HELD_ITEMS_OVERRIDE;if(!(!R||R.length===0||!s)){E||s.clearEnemyHeldItemModifiers(t);for(const I of R){const N=x[I.name];let S=N();const T=I.count||1;if(S instanceof jE){const o="type"in I&&I.type!==null?[I.type]:void 0;S=S.generateType([],o)}const i=S&&S.withIdFromFunc(N).newModifier(t);i&&(i.pokemonId=t.id,i.stackCount=T,E?s.addModifier(i,!0,!1,!1,!0):s.addEnemyModifier(i,!0,!0))}}}r(Dc,"overrideHeldItems");var G6=(t=>(t[t.NONE=0]="NONE",t[t.SHORT=1]="SHORT",t[t.MEDIUM=2]="MEDIUM",t[t.LONG=3]="LONG",t[t.VERY_LONG=4]="VERY_LONG",t[t.NEVER=5]="NEVER",t))(G6||{}),WN=(t=>(t[t.NONE=0]="NONE",t[t.LINKING_CORD=1]="LINKING_CORD",t[t.SUN_STONE=2]="SUN_STONE",t[t.MOON_STONE=3]="MOON_STONE",t[t.LEAF_STONE=4]="LEAF_STONE",t[t.FIRE_STONE=5]="FIRE_STONE",t[t.WATER_STONE=6]="WATER_STONE",t[t.THUNDER_STONE=7]="THUNDER_STONE",t[t.ICE_STONE=8]="ICE_STONE",t[t.DUSK_STONE=9]="DUSK_STONE",t[t.DAWN_STONE=10]="DAWN_STONE",t[t.SHINY_STONE=11]="SHINY_STONE",t[t.CRACKED_POT=12]="CRACKED_POT",t[t.SWEET_APPLE=13]="SWEET_APPLE",t[t.TART_APPLE=14]="TART_APPLE",t[t.STRAWBERRY_SWEET=15]="STRAWBERRY_SWEET",t[t.UNREMARKABLE_TEACUP=16]="UNREMARKABLE_TEACUP",t[t.UPGRADE=17]="UPGRADE",t[t.DUBIOUS_DISC=18]="DUBIOUS_DISC",t[t.DRAGON_SCALE=19]="DRAGON_SCALE",t[t.PRISM_SCALE=20]="PRISM_SCALE",t[t.RAZOR_CLAW=21]="RAZOR_CLAW",t[t.RAZOR_FANG=22]="RAZOR_FANG",t[t.REAPER_CLOTH=23]="REAPER_CLOTH",t[t.ELECTIRIZER=24]="ELECTIRIZER",t[t.MAGMARIZER=25]="MAGMARIZER",t[t.PROTECTOR=26]="PROTECTOR",t[t.SACHET=27]="SACHET",t[t.WHIPPED_DREAM=28]="WHIPPED_DREAM",t[t.SYRUPY_APPLE=29]="SYRUPY_APPLE",t[t.CHIPPED_POT=30]="CHIPPED_POT",t[t.GALARICA_CUFF=31]="GALARICA_CUFF",t[t.GALARICA_WREATH=32]="GALARICA_WREATH",t[t.AUSPICIOUS_ARMOR=33]="AUSPICIOUS_ARMOR",t[t.MALICIOUS_ARMOR=34]="MALICIOUS_ARMOR",t[t.MASTERPIECE_TEACUP=35]="MASTERPIECE_TEACUP",t[t.SUN_FLUTE=36]="SUN_FLUTE",t[t.MOON_FLUTE=37]="MOON_FLUTE",t[t.BLACK_AUGURITE=51]="BLACK_AUGURITE",t[t.PEAT_BLOCK=52]="PEAT_BLOCK",t[t.METAL_ALLOY=53]="METAL_ALLOY",t[t.SCROLL_OF_DARKNESS=54]="SCROLL_OF_DARKNESS",t[t.SCROLL_OF_WATERS=55]="SCROLL_OF_WATERS",t[t.LEADERS_CREST=56]="LEADERS_CREST",t))(WN||{});const Sw=class Sw{constructor(E,R,I,N,S,T,i){this.description="",D.isInitialized||VR(),this.speciesId=E,this.preFormKey=R,this.evoFormKey=I,this.level=N,this.item=S||0,this.condition=T,this.wildDelay=i??0;const o=[];if(this.level>1&&o.push(D.t("pokemonEvolutions:level")+` ${this.level}`),this.item){const C=D.t(`modifierType:EvolutionItem.${WN[this.item].toUpperCase()}`),U=this.item>50?D.t("pokemonEvolutions:ULTRA"):D.t("pokemonEvolutions:GREAT");o.push(D.t("pokemonEvolutions:using")+C+` (${U})`)}this.condition&&o.push(this.condition.description),this.description=o.filter(C=>C!=="").map((C,U)=>U>0?C[0].toLowerCase()+C.slice(1):C).join(D.t("pokemonEvolutions:connector"))}};r(Sw,"SpeciesFormEvolution");let UA=Sw;const Tw=class Tw extends UA{constructor(E,R,I,N,S){super(E,null,null,R,I,N,S)}};r(Tw,"SpeciesEvolution");let y=Tw;const nw=class nw extends UA{constructor(E,R){super(R.speciesId,R.preFormKey,R.evoFormKey,R.level,R.item,R.condition,R.wildDelay),this.primarySpeciesId=E}};r(nw,"FusionSpeciesFormEvolution");let yI=nw;const aw=class aw{constructor(E,R){this.predicate=E,this.enforceFunc=R,this.description=""}};r(aw,"SpeciesEvolutionCondition");let Mt=aw;const rw=class rw extends Mt{constructor(E){super(R=>R.gender===E,R=>R.gender=E),this.gender=E,this.description=D.t("pokemonEvolutions:gender",{gender:D.t(`pokemonEvolutions:${ye[E]}`)})}};r(rw,"GenderEvolutionCondition");let yt=rw;const iw=class iw extends Mt{constructor(E){E==="day"?(super(()=>s.arena.getTimeOfDay()===a.DAWN||s.arena.getTimeOfDay()===a.DAY),this.timesOfDay=[a.DAWN,a.DAY]):E==="night"?(super(()=>s.arena.getTimeOfDay()===a.DUSK||s.arena.getTimeOfDay()===a.NIGHT),this.timesOfDay=[a.DUSK,a.NIGHT]):(super(()=>!1),this.timesOfDay=[]),this.description=D.t("pokemonEvolutions:timeOfDay",{tod:D.t(`pokemonEvolutions:${E}`)})}};r(iw,"TimeOfDayEvolutionCondition");let sE=iw;const ow=class ow extends Mt{constructor(E){super(I=>I.moveset.filter(N=>N.moveId===E).length>0),this.move=E;const R=A[this.move].split("_").filter(I=>I).map((I,N)=>N?`${I[0]}${I.slice(1).toLowerCase()}`:I.toLowerCase()).join("");this.description=D.t("pokemonEvolutions:move",{move:D.t(`move:${R}.name`)})}};r(ow,"MoveEvolutionCondition");let jt=ow;const Cw=class Cw extends Mt{constructor(E){super(R=>R.friendship>=E),this.amount=E,this.description=D.t("pokemonEvolutions:friendship")}};r(Cw,"FriendshipEvolutionCondition");let eR=Cw;const lw=class lw extends Mt{constructor(E,R){R==="day"?(super(I=>I.friendship>=E&&(s.arena.getTimeOfDay()===a.DAWN||s.arena.getTimeOfDay()===a.DAY)),this.timesOfDay=[a.DAWN,a.DAY]):R==="night"?(super(I=>I.friendship>=E&&(s.arena.getTimeOfDay()===a.DUSK||s.arena.getTimeOfDay()===a.NIGHT)),this.timesOfDay=[a.DUSK,a.NIGHT]):(super(I=>!1),this.timesOfDay=[]),this.amount=E,this.description=D.t("pokemonEvolutions:friendshipTimeOfDay",{tod:D.t(`pokemonEvolutions:${R}`)})}};r(lw,"FriendshipTimeOfDayEvolutionCondition");let NI=lw;const Uw=class Uw extends Mt{constructor(E,R){super(I=>I.friendship>=E&&!!I.getMoveset().find(N=>(N==null?void 0:N.getMove().type)===R)),this.amount=E,this.type=R,this.description=D.t("pokemonEvolutions:friendshipMoveType",{type:D.t(`pokemonInfo:Type.${L[this.type]}`)})}};r(Uw,"FriendshipMoveTypeEvolutionCondition");let pD=Uw;const Dw=class Dw extends Mt{constructor(){super(()=>s.getPlayerParty().length<6&&s.pokeballCounts[Me.POKEBALL]>0),this.description=D.t("pokemonEvolutions:shedinja")}};r(Dw,"ShedinjaEvolutionCondition");let f1=Dw;const Mw=class Mw extends Mt{constructor(E){super(()=>!!s.getPlayerParty().find(R=>R.getTypes(!1,!1,!0).indexOf(E)>-1)),this.type=E,this.description=D.t("pokemonEvolutions:partyType",{type:D.t(`pokemonInfo:Type.${L[this.type]}`)})}};r(Mw,"PartyTypeEvolutionCondition");let d1=Mw;const Pw=class Pw extends Mt{constructor(E){super(()=>!!s.gameData.dexData[E].caughtAttr),this.species=E,this.description=D.t("pokemonEvolutions:caught",{species:D.t(`pokemon:${e[this.species].toLowerCase()}`)})}};r(Pw,"CaughtEvolutionCondition");let In=Pw;const Gw=class Gw extends Mt{constructor(E){super(()=>{var R;return E.indexOf(((R=s.arena.weather)==null?void 0:R.weatherType)||X.NONE)>-1}),this.weatherTypes=E,this.description=D.t("pokemonEvolutions:weather")}};r(Gw,"WeatherEvolutionCondition");let yD=Gw;const _w=class _w extends Mt{constructor(E){super(R=>R.moveset.filter(I=>(I==null?void 0:I.getMove().type)===E).length>0),this.type=E,this.description=D.t("pokemonEvolutions:moveType",{type:D.t(`pokemonInfo:Type.${L[this.type]}`)})}};r(_w,"MoveTypeEvolutionCondition");let wD=_w;const uw=class uw extends Mt{constructor(){super(E=>E.evoCounter+E.getHeldItems().filter(R=>R instanceof JL).length+s.findModifiers(R=>R instanceof CO||R instanceof qL||R instanceof zL).length>9),this.description=D.t("pokemonEvolutions:treasure")}};r(uw,"TreasureEvolutionCondition");let VD=uw;const Hw=class Hw extends Mt{constructor(E){super(I=>{var N;return((N=I.getMoveset(!0).find(S=>S&&[A.LOW_SWEEP,A.MACH_PUNCH,A.RAPID_SPIN].includes(S.moveId)))==null?void 0:N.moveId)===E}),this.move=E;const R=A[this.move].split("_").filter(I=>I).map((I,N)=>N?`${I[0]}${I.slice(1).toLowerCase()}`:I.toLowerCase()).join("");this.description=D.t("pokemonEvolutions:move",{move:D.t(`move:${R}.name`)})}};r(Hw,"TyrogueEvolutionCondition");let Ln=Hw;const cw=class cw extends Mt{constructor(E){super(R=>E.indexOf(R.getNature())>-1),this.natures=E,this.description=D.t("pokemonEvolutions:nature")}};r(cw,"NatureEvolutionCondition");let K1=cw;const Bw=class Bw extends Mt{constructor(E,R){R==="day"?(super(N=>N.moveset.filter(S=>S.moveId===E).length>0&&(s.arena.getTimeOfDay()===a.DAWN||s.arena.getTimeOfDay()===a.DAY)),this.move=E,this.timesOfDay=[a.DAWN,a.DAY]):R==="night"?(super(N=>N.moveset.filter(S=>S.moveId===E).length>0&&(s.arena.getTimeOfDay()===a.DUSK||s.arena.getTimeOfDay()===a.NIGHT)),this.move=E,this.timesOfDay=[a.DUSK,a.NIGHT]):(super(()=>!1),this.timesOfDay=[]);const I=A[this.move].split("_").filter(N=>N).map((N,S)=>S?`${N[0]}${N.slice(1).toLowerCase()}`:N.toLowerCase()).join("");this.description=D.t("pokemonEvolutions:moveTimeOfDay",{move:D.t(`move:${I}.name`),tod:D.t(`pokemonEvolutions:${R}`)})}};r(Bw,"MoveTimeOfDayEvolutionCondition");let vD=Bw;const hw=class hw extends Mt{constructor(E){super(()=>E.filter(R=>R===s.arena.biomeType).length>0),this.biomes=E,this.description=D.t("pokemonEvolutions:biome")}};r(hw,"BiomeEvolutionCondition");let KO=hw;const fw=class fw extends Mt{constructor(){super(R=>{let I=!1;return R.moveset.filter(N=>N.moveId===A.HYPER_DRILL).length>0&&s.executeWithSeedOffset(()=>I=!De(4),R.id),I});const E=A[A.HYPER_DRILL].split("_").filter(R=>R).map((R,I)=>I?`${R[0]}${R.slice(1).toLowerCase()}`:R.toLowerCase()).join("");this.description=D.t("pokemonEvolutions:move",{move:D.t(`move:${E}.name`)})}};r(fw,"DunsparceEvolutionCondition");let F1=fw;const dw=class dw extends Mt{constructor(){super(E=>{let R=!1;return s.executeWithSeedOffset(()=>R=!De(4),E.id),R})}};r(dw,"TandemausEvolutionCondition");let Y1=dw;const BA={[e.BULBASAUR]:[new y(e.IVYSAUR,16,null,null)],[e.IVYSAUR]:[new y(e.VENUSAUR,32,null,null)],[e.CHARMANDER]:[new y(e.CHARMELEON,16,null,null)],[e.CHARMELEON]:[new y(e.CHARIZARD,36,null,null)],[e.SQUIRTLE]:[new y(e.WARTORTLE,16,null,null)],[e.WARTORTLE]:[new y(e.BLASTOISE,36,null,null)],[e.CATERPIE]:[new y(e.METAPOD,7,null,null)],[e.METAPOD]:[new y(e.BUTTERFREE,10,null,null)],[e.WEEDLE]:[new y(e.KAKUNA,7,null,null)],[e.KAKUNA]:[new y(e.BEEDRILL,10,null,null)],[e.PIDGEY]:[new y(e.PIDGEOTTO,18,null,null)],[e.PIDGEOTTO]:[new y(e.PIDGEOT,36,null,null)],[e.RATTATA]:[new y(e.RATICATE,20,null,null)],[e.SPEAROW]:[new y(e.FEAROW,20,null,null)],[e.EKANS]:[new y(e.ARBOK,22,null,null)],[e.SANDSHREW]:[new y(e.SANDSLASH,22,null,null)],[e.NIDORAN_F]:[new y(e.NIDORINA,16,null,null)],[e.NIDORAN_M]:[new y(e.NIDORINO,16,null,null)],[e.ZUBAT]:[new y(e.GOLBAT,22,null,null)],[e.ODDISH]:[new y(e.GLOOM,21,null,null)],[e.PARAS]:[new y(e.PARASECT,24,null,null)],[e.VENONAT]:[new y(e.VENOMOTH,31,null,null)],[e.DIGLETT]:[new y(e.DUGTRIO,26,null,null)],[e.MEOWTH]:[new UA(e.PERSIAN,"","",28,null,null)],[e.PSYDUCK]:[new y(e.GOLDUCK,33,null,null)],[e.MANKEY]:[new y(e.PRIMEAPE,28,null,null)],[e.POLIWAG]:[new y(e.POLIWHIRL,25,null,null)],[e.ABRA]:[new y(e.KADABRA,16,null,null)],[e.MACHOP]:[new y(e.MACHOKE,28,null,null)],[e.BELLSPROUT]:[new y(e.WEEPINBELL,21,null,null)],[e.TENTACOOL]:[new y(e.TENTACRUEL,30,null,null)],[e.GEODUDE]:[new y(e.GRAVELER,25,null,null)],[e.PONYTA]:[new y(e.RAPIDASH,40,null,null)],[e.SLOWPOKE]:[new y(e.SLOWBRO,37,null,null),new y(e.SLOWKING,1,1,null,4)],[e.MAGNEMITE]:[new y(e.MAGNETON,30,null,null)],[e.DODUO]:[new y(e.DODRIO,31,null,null)],[e.SEEL]:[new y(e.DEWGONG,34,null,null)],[e.GRIMER]:[new y(e.MUK,38,null,null)],[e.GASTLY]:[new y(e.HAUNTER,25,null,null)],[e.DROWZEE]:[new y(e.HYPNO,26,null,null)],[e.KRABBY]:[new y(e.KINGLER,28,null,null)],[e.VOLTORB]:[new y(e.ELECTRODE,30,null,null)],[e.CUBONE]:[new y(e.ALOLA_MAROWAK,28,null,new sE("night")),new y(e.MAROWAK,28,null,new sE("day"))],[e.TYROGUE]:[new y(e.HITMONLEE,20,null,new Ln(A.LOW_SWEEP)),new y(e.HITMONCHAN,20,null,new Ln(A.MACH_PUNCH)),new y(e.HITMONTOP,20,null,new Ln(A.RAPID_SPIN))],[e.KOFFING]:[new y(e.GALAR_WEEZING,35,null,new sE("night")),new y(e.WEEZING,35,null,new sE("day"))],[e.RHYHORN]:[new y(e.RHYDON,42,null,null)],[e.HORSEA]:[new y(e.SEADRA,32,null,null)],[e.GOLDEEN]:[new y(e.SEAKING,33,null,null)],[e.SMOOCHUM]:[new y(e.JYNX,30,null,null)],[e.ELEKID]:[new y(e.ELECTABUZZ,30,null,null)],[e.MAGBY]:[new y(e.MAGMAR,30,null,null)],[e.MAGIKARP]:[new y(e.GYARADOS,20,null,null)],[e.OMANYTE]:[new y(e.OMASTAR,40,null,null)],[e.KABUTO]:[new y(e.KABUTOPS,40,null,null)],[e.DRATINI]:[new y(e.DRAGONAIR,30,null,null)],[e.DRAGONAIR]:[new y(e.DRAGONITE,55,null,null)],[e.CHIKORITA]:[new y(e.BAYLEEF,16,null,null)],[e.BAYLEEF]:[new y(e.MEGANIUM,32,null,null)],[e.CYNDAQUIL]:[new y(e.QUILAVA,14,null,null)],[e.QUILAVA]:[new y(e.HISUI_TYPHLOSION,36,null,new sE("night")),new y(e.TYPHLOSION,36,null,new sE("day"))],[e.TOTODILE]:[new y(e.CROCONAW,18,null,null)],[e.CROCONAW]:[new y(e.FERALIGATR,30,null,null)],[e.SENTRET]:[new y(e.FURRET,15,null,null)],[e.HOOTHOOT]:[new y(e.NOCTOWL,20,null,null)],[e.LEDYBA]:[new y(e.LEDIAN,18,null,null)],[e.SPINARAK]:[new y(e.ARIADOS,22,null,null)],[e.CHINCHOU]:[new y(e.LANTURN,27,null,null)],[e.NATU]:[new y(e.XATU,25,null,null)],[e.MAREEP]:[new y(e.FLAAFFY,15,null,null)],[e.FLAAFFY]:[new y(e.AMPHAROS,30,null,null)],[e.MARILL]:[new y(e.AZUMARILL,18,null,null)],[e.HOPPIP]:[new y(e.SKIPLOOM,18,null,null)],[e.SKIPLOOM]:[new y(e.JUMPLUFF,27,null,null)],[e.WOOPER]:[new y(e.QUAGSIRE,20,null,null)],[e.WYNAUT]:[new y(e.WOBBUFFET,15,null,null)],[e.PINECO]:[new y(e.FORRETRESS,31,null,null)],[e.SNUBBULL]:[new y(e.GRANBULL,23,null,null)],[e.TEDDIURSA]:[new y(e.URSARING,30,null,null)],[e.SLUGMA]:[new y(e.MAGCARGO,38,null,null)],[e.SWINUB]:[new y(e.PILOSWINE,33,null,null)],[e.REMORAID]:[new y(e.OCTILLERY,25,null,null)],[e.HOUNDOUR]:[new y(e.HOUNDOOM,24,null,null)],[e.PHANPY]:[new y(e.DONPHAN,25,null,null)],[e.LARVITAR]:[new y(e.PUPITAR,30,null,null)],[e.PUPITAR]:[new y(e.TYRANITAR,55,null,null)],[e.TREECKO]:[new y(e.GROVYLE,16,null,null)],[e.GROVYLE]:[new y(e.SCEPTILE,36,null,null)],[e.TORCHIC]:[new y(e.COMBUSKEN,16,null,null)],[e.COMBUSKEN]:[new y(e.BLAZIKEN,36,null,null)],[e.MUDKIP]:[new y(e.MARSHTOMP,16,null,null)],[e.MARSHTOMP]:[new y(e.SWAMPERT,36,null,null)],[e.POOCHYENA]:[new y(e.MIGHTYENA,18,null,null)],[e.ZIGZAGOON]:[new y(e.LINOONE,20,null,null)],[e.WURMPLE]:[new y(e.SILCOON,7,null,new sE("day")),new y(e.CASCOON,7,null,new sE("night"))],[e.SILCOON]:[new y(e.BEAUTIFLY,10,null,null)],[e.CASCOON]:[new y(e.DUSTOX,10,null,null)],[e.LOTAD]:[new y(e.LOMBRE,14,null,null)],[e.SEEDOT]:[new y(e.NUZLEAF,14,null,null)],[e.TAILLOW]:[new y(e.SWELLOW,22,null,null)],[e.WINGULL]:[new y(e.PELIPPER,25,null,null)],[e.RALTS]:[new y(e.KIRLIA,20,null,null)],[e.KIRLIA]:[new y(e.GARDEVOIR,30,null,new yt(ye.FEMALE)),new y(e.GALLADE,30,null,new yt(ye.MALE))],[e.SURSKIT]:[new y(e.MASQUERAIN,22,null,null)],[e.SHROOMISH]:[new y(e.BRELOOM,23,null,null)],[e.SLAKOTH]:[new y(e.VIGOROTH,18,null,null)],[e.VIGOROTH]:[new y(e.SLAKING,36,null,null)],[e.NINCADA]:[new y(e.NINJASK,20,null,null),new y(e.SHEDINJA,20,null,new f1)],[e.WHISMUR]:[new y(e.LOUDRED,20,null,null)],[e.LOUDRED]:[new y(e.EXPLOUD,40,null,null)],[e.MAKUHITA]:[new y(e.HARIYAMA,24,null,null)],[e.ARON]:[new y(e.LAIRON,32,null,null)],[e.LAIRON]:[new y(e.AGGRON,42,null,null)],[e.MEDITITE]:[new y(e.MEDICHAM,37,null,null)],[e.ELECTRIKE]:[new y(e.MANECTRIC,26,null,null)],[e.GULPIN]:[new y(e.SWALOT,26,null,null)],[e.CARVANHA]:[new y(e.SHARPEDO,30,null,null)],[e.WAILMER]:[new y(e.WAILORD,40,null,null)],[e.NUMEL]:[new y(e.CAMERUPT,33,null,null)],[e.SPOINK]:[new y(e.GRUMPIG,32,null,null)],[e.TRAPINCH]:[new y(e.VIBRAVA,35,null,null)],[e.VIBRAVA]:[new y(e.FLYGON,45,null,null)],[e.CACNEA]:[new y(e.CACTURNE,32,null,null)],[e.SWABLU]:[new y(e.ALTARIA,35,null,null)],[e.BARBOACH]:[new y(e.WHISCASH,30,null,null)],[e.CORPHISH]:[new y(e.CRAWDAUNT,30,null,null)],[e.BALTOY]:[new y(e.CLAYDOL,36,null,null)],[e.LILEEP]:[new y(e.CRADILY,40,null,null)],[e.ANORITH]:[new y(e.ARMALDO,40,null,null)],[e.SHUPPET]:[new y(e.BANETTE,37,null,null)],[e.DUSKULL]:[new y(e.DUSCLOPS,37,null,null)],[e.SNORUNT]:[new y(e.GLALIE,42,null,new yt(ye.MALE)),new y(e.FROSLASS,42,null,new yt(ye.FEMALE))],[e.SPHEAL]:[new y(e.SEALEO,32,null,null)],[e.SEALEO]:[new y(e.WALREIN,44,null,null)],[e.BAGON]:[new y(e.SHELGON,30,null,null)],[e.SHELGON]:[new y(e.SALAMENCE,50,null,null)],[e.BELDUM]:[new y(e.METANG,20,null,null)],[e.METANG]:[new y(e.METAGROSS,45,null,null)],[e.TURTWIG]:[new y(e.GROTLE,18,null,null)],[e.GROTLE]:[new y(e.TORTERRA,32,null,null)],[e.CHIMCHAR]:[new y(e.MONFERNO,14,null,null)],[e.MONFERNO]:[new y(e.INFERNAPE,36,null,null)],[e.PIPLUP]:[new y(e.PRINPLUP,16,null,null)],[e.PRINPLUP]:[new y(e.EMPOLEON,36,null,null)],[e.STARLY]:[new y(e.STARAVIA,14,null,null)],[e.STARAVIA]:[new y(e.STARAPTOR,34,null,null)],[e.BIDOOF]:[new y(e.BIBAREL,15,null,null)],[e.KRICKETOT]:[new y(e.KRICKETUNE,10,null,null)],[e.SHINX]:[new y(e.LUXIO,15,null,null)],[e.LUXIO]:[new y(e.LUXRAY,30,null,null)],[e.CRANIDOS]:[new y(e.RAMPARDOS,30,null,null)],[e.SHIELDON]:[new y(e.BASTIODON,30,null,null)],[e.BURMY]:[new y(e.MOTHIM,20,null,new yt(ye.MALE)),new y(e.WORMADAM,20,null,new yt(ye.FEMALE))],[e.COMBEE]:[new y(e.VESPIQUEN,21,null,new yt(ye.FEMALE))],[e.BUIZEL]:[new y(e.FLOATZEL,26,null,null)],[e.CHERUBI]:[new y(e.CHERRIM,25,null,null)],[e.SHELLOS]:[new y(e.GASTRODON,30,null,null)],[e.DRIFLOON]:[new y(e.DRIFBLIM,28,null,null)],[e.GLAMEOW]:[new y(e.PURUGLY,38,null,null)],[e.STUNKY]:[new y(e.SKUNTANK,34,null,null)],[e.BRONZOR]:[new y(e.BRONZONG,33,null,null)],[e.GIBLE]:[new y(e.GABITE,24,null,null)],[e.GABITE]:[new y(e.GARCHOMP,48,null,null)],[e.HIPPOPOTAS]:[new y(e.HIPPOWDON,34,null,null)],[e.SKORUPI]:[new y(e.DRAPION,40,null,null)],[e.CROAGUNK]:[new y(e.TOXICROAK,37,null,null)],[e.FINNEON]:[new y(e.LUMINEON,31,null,null)],[e.MANTYKE]:[new y(e.MANTINE,32,null,new In(e.REMORAID),2)],[e.SNOVER]:[new y(e.ABOMASNOW,40,null,null)],[e.SNIVY]:[new y(e.SERVINE,17,null,null)],[e.SERVINE]:[new y(e.SERPERIOR,36,null,null)],[e.TEPIG]:[new y(e.PIGNITE,17,null,null)],[e.PIGNITE]:[new y(e.EMBOAR,36,null,null)],[e.OSHAWOTT]:[new y(e.DEWOTT,17,null,null)],[e.DEWOTT]:[new y(e.HISUI_SAMUROTT,36,null,new sE("night")),new y(e.SAMUROTT,36,null,new sE("day"))],[e.PATRAT]:[new y(e.WATCHOG,20,null,null)],[e.LILLIPUP]:[new y(e.HERDIER,16,null,null)],[e.HERDIER]:[new y(e.STOUTLAND,32,null,null)],[e.PURRLOIN]:[new y(e.LIEPARD,20,null,null)],[e.PIDOVE]:[new y(e.TRANQUILL,21,null,null)],[e.TRANQUILL]:[new y(e.UNFEZANT,32,null,null)],[e.BLITZLE]:[new y(e.ZEBSTRIKA,27,null,null)],[e.ROGGENROLA]:[new y(e.BOLDORE,25,null,null)],[e.DRILBUR]:[new y(e.EXCADRILL,31,null,null)],[e.TIMBURR]:[new y(e.GURDURR,25,null,null)],[e.TYMPOLE]:[new y(e.PALPITOAD,25,null,null)],[e.PALPITOAD]:[new y(e.SEISMITOAD,36,null,null)],[e.SEWADDLE]:[new y(e.SWADLOON,20,null,null)],[e.VENIPEDE]:[new y(e.WHIRLIPEDE,22,null,null)],[e.WHIRLIPEDE]:[new y(e.SCOLIPEDE,30,null,null)],[e.SANDILE]:[new y(e.KROKOROK,29,null,null)],[e.KROKOROK]:[new y(e.KROOKODILE,40,null,null)],[e.DARUMAKA]:[new y(e.DARMANITAN,35,null,null)],[e.DWEBBLE]:[new y(e.CRUSTLE,34,null,null)],[e.SCRAGGY]:[new y(e.SCRAFTY,39,null,null)],[e.YAMASK]:[new y(e.COFAGRIGUS,34,null,null)],[e.TIRTOUGA]:[new y(e.CARRACOSTA,37,null,null)],[e.ARCHEN]:[new y(e.ARCHEOPS,37,null,null)],[e.TRUBBISH]:[new y(e.GARBODOR,36,null,null)],[e.ZORUA]:[new y(e.ZOROARK,30,null,null)],[e.GOTHITA]:[new y(e.GOTHORITA,32,null,null)],[e.GOTHORITA]:[new y(e.GOTHITELLE,41,null,null)],[e.SOLOSIS]:[new y(e.DUOSION,32,null,null)],[e.DUOSION]:[new y(e.REUNICLUS,41,null,null)],[e.DUCKLETT]:[new y(e.SWANNA,35,null,null)],[e.VANILLITE]:[new y(e.VANILLISH,35,null,null)],[e.VANILLISH]:[new y(e.VANILLUXE,47,null,null)],[e.DEERLING]:[new y(e.SAWSBUCK,34,null,null)],[e.FOONGUS]:[new y(e.AMOONGUSS,39,null,null)],[e.FRILLISH]:[new y(e.JELLICENT,40,null,null)],[e.JOLTIK]:[new y(e.GALVANTULA,36,null,null)],[e.FERROSEED]:[new y(e.FERROTHORN,40,null,null)],[e.KLINK]:[new y(e.KLANG,38,null,null)],[e.KLANG]:[new y(e.KLINKLANG,49,null,null)],[e.TYNAMO]:[new y(e.EELEKTRIK,39,null,null)],[e.ELGYEM]:[new y(e.BEHEEYEM,42,null,null)],[e.LITWICK]:[new y(e.LAMPENT,41,null,null)],[e.AXEW]:[new y(e.FRAXURE,38,null,null)],[e.FRAXURE]:[new y(e.HAXORUS,48,null,null)],[e.CUBCHOO]:[new y(e.BEARTIC,37,null,null)],[e.MIENFOO]:[new y(e.MIENSHAO,50,null,null)],[e.GOLETT]:[new y(e.GOLURK,43,null,null)],[e.PAWNIARD]:[new y(e.BISHARP,52,null,null)],[e.BISHARP]:[new y(e.KINGAMBIT,1,56,null,4)],[e.RUFFLET]:[new y(e.HISUI_BRAVIARY,54,null,new sE("night")),new y(e.BRAVIARY,54,null,new sE("day"))],[e.VULLABY]:[new y(e.MANDIBUZZ,54,null,null)],[e.DEINO]:[new y(e.ZWEILOUS,50,null,null)],[e.ZWEILOUS]:[new y(e.HYDREIGON,64,null,null)],[e.LARVESTA]:[new y(e.VOLCARONA,59,null,null)],[e.CHESPIN]:[new y(e.QUILLADIN,16,null,null)],[e.QUILLADIN]:[new y(e.CHESNAUGHT,36,null,null)],[e.FENNEKIN]:[new y(e.BRAIXEN,16,null,null)],[e.BRAIXEN]:[new y(e.DELPHOX,36,null,null)],[e.FROAKIE]:[new y(e.FROGADIER,16,null,null)],[e.FROGADIER]:[new y(e.GRENINJA,36,null,null)],[e.BUNNELBY]:[new y(e.DIGGERSBY,20,null,null)],[e.FLETCHLING]:[new y(e.FLETCHINDER,17,null,null)],[e.FLETCHINDER]:[new y(e.TALONFLAME,35,null,null)],[e.SCATTERBUG]:[new y(e.SPEWPA,9,null,null)],[e.SPEWPA]:[new y(e.VIVILLON,12,null,null)],[e.LITLEO]:[new y(e.PYROAR,35,null,null)],[e.FLABEBE]:[new y(e.FLOETTE,19,null,null)],[e.SKIDDO]:[new y(e.GOGOAT,32,null,null)],[e.PANCHAM]:[new y(e.PANGORO,32,null,new d1(L.DARK),2)],[e.ESPURR]:[new UA(e.MEOWSTIC,"","female",25,null,new yt(ye.FEMALE)),new UA(e.MEOWSTIC,"","",25,null,new yt(ye.MALE))],[e.HONEDGE]:[new y(e.DOUBLADE,35,null,null)],[e.INKAY]:[new y(e.MALAMAR,30,null,null)],[e.BINACLE]:[new y(e.BARBARACLE,39,null,null)],[e.SKRELP]:[new y(e.DRAGALGE,48,null,null)],[e.CLAUNCHER]:[new y(e.CLAWITZER,37,null,null)],[e.TYRUNT]:[new y(e.TYRANTRUM,39,null,new sE("day"))],[e.AMAURA]:[new y(e.AURORUS,39,null,new sE("night"))],[e.GOOMY]:[new y(e.HISUI_SLIGGOO,40,null,new sE("night")),new y(e.SLIGGOO,40,null,new sE("day"))],[e.SLIGGOO]:[new y(e.GOODRA,50,null,new yD([X.RAIN,X.FOG,X.HEAVY_RAIN]),3)],[e.BERGMITE]:[new y(e.HISUI_AVALUGG,37,null,new sE("night")),new y(e.AVALUGG,37,null,new sE("day"))],[e.NOIBAT]:[new y(e.NOIVERN,48,null,null)],[e.ROWLET]:[new y(e.DARTRIX,17,null,null)],[e.DARTRIX]:[new y(e.HISUI_DECIDUEYE,36,null,new sE("night")),new y(e.DECIDUEYE,34,null,new sE("day"))],[e.LITTEN]:[new y(e.TORRACAT,17,null,null)],[e.TORRACAT]:[new y(e.INCINEROAR,34,null,null)],[e.POPPLIO]:[new y(e.BRIONNE,17,null,null)],[e.BRIONNE]:[new y(e.PRIMARINA,34,null,null)],[e.PIKIPEK]:[new y(e.TRUMBEAK,14,null,null)],[e.TRUMBEAK]:[new y(e.TOUCANNON,28,null,null)],[e.YUNGOOS]:[new y(e.GUMSHOOS,20,null,new sE("day"))],[e.GRUBBIN]:[new y(e.CHARJABUG,20,null,null)],[e.CUTIEFLY]:[new y(e.RIBOMBEE,25,null,null)],[e.MAREANIE]:[new y(e.TOXAPEX,38,null,null)],[e.MUDBRAY]:[new y(e.MUDSDALE,30,null,null)],[e.DEWPIDER]:[new y(e.ARAQUANID,22,null,null)],[e.FOMANTIS]:[new y(e.LURANTIS,34,null,new sE("day"))],[e.MORELULL]:[new y(e.SHIINOTIC,24,null,null)],[e.SALANDIT]:[new y(e.SALAZZLE,33,null,new yt(ye.FEMALE))],[e.STUFFUL]:[new y(e.BEWEAR,27,null,null)],[e.BOUNSWEET]:[new y(e.STEENEE,18,null,null)],[e.WIMPOD]:[new y(e.GOLISOPOD,30,null,null)],[e.SANDYGAST]:[new y(e.PALOSSAND,42,null,null)],[e.JANGMO_O]:[new y(e.HAKAMO_O,35,null,null)],[e.HAKAMO_O]:[new y(e.KOMMO_O,45,null,null)],[e.COSMOG]:[new y(e.COSMOEM,23,null,null)],[e.COSMOEM]:[new y(e.SOLGALEO,1,36,null,4),new y(e.LUNALA,1,37,null,4)],[e.MELTAN]:[new y(e.MELMETAL,48,null,null)],[e.ALOLA_RATTATA]:[new y(e.ALOLA_RATICATE,20,null,new sE("night"))],[e.ALOLA_DIGLETT]:[new y(e.ALOLA_DUGTRIO,26,null,null)],[e.ALOLA_GEODUDE]:[new y(e.ALOLA_GRAVELER,25,null,null)],[e.ALOLA_GRIMER]:[new y(e.ALOLA_MUK,38,null,null)],[e.GROOKEY]:[new y(e.THWACKEY,16,null,null)],[e.THWACKEY]:[new y(e.RILLABOOM,35,null,null)],[e.SCORBUNNY]:[new y(e.RABOOT,16,null,null)],[e.RABOOT]:[new y(e.CINDERACE,35,null,null)],[e.SOBBLE]:[new y(e.DRIZZILE,16,null,null)],[e.DRIZZILE]:[new y(e.INTELEON,35,null,null)],[e.SKWOVET]:[new y(e.GREEDENT,24,null,null)],[e.ROOKIDEE]:[new y(e.CORVISQUIRE,18,null,null)],[e.CORVISQUIRE]:[new y(e.CORVIKNIGHT,38,null,null)],[e.BLIPBUG]:[new y(e.DOTTLER,10,null,null)],[e.DOTTLER]:[new y(e.ORBEETLE,30,null,null)],[e.NICKIT]:[new y(e.THIEVUL,18,null,null)],[e.GOSSIFLEUR]:[new y(e.ELDEGOSS,20,null,null)],[e.WOOLOO]:[new y(e.DUBWOOL,24,null,null)],[e.CHEWTLE]:[new y(e.DREDNAW,22,null,null)],[e.YAMPER]:[new y(e.BOLTUND,25,null,null)],[e.ROLYCOLY]:[new y(e.CARKOL,18,null,null)],[e.CARKOL]:[new y(e.COALOSSAL,34,null,null)],[e.SILICOBRA]:[new y(e.SANDACONDA,36,null,null)],[e.ARROKUDA]:[new y(e.BARRASKEWDA,26,null,null)],[e.TOXEL]:[new UA(e.TOXTRICITY,"","lowkey",30,null,new K1([be.LONELY,be.BOLD,be.RELAXED,be.TIMID,be.SERIOUS,be.MODEST,be.MILD,be.QUIET,be.BASHFUL,be.CALM,be.GENTLE,be.CAREFUL])),new UA(e.TOXTRICITY,"","amped",30,null,null)],[e.SIZZLIPEDE]:[new y(e.CENTISKORCH,28,null,null)],[e.HATENNA]:[new y(e.HATTREM,32,null,null)],[e.HATTREM]:[new y(e.HATTERENE,42,null,null)],[e.IMPIDIMP]:[new y(e.MORGREM,32,null,null)],[e.MORGREM]:[new y(e.GRIMMSNARL,42,null,null)],[e.CUFANT]:[new y(e.COPPERAJAH,34,null,null)],[e.DREEPY]:[new y(e.DRAKLOAK,50,null,null)],[e.DRAKLOAK]:[new y(e.DRAGAPULT,60,null,null)],[e.GALAR_MEOWTH]:[new y(e.PERRSERKER,28,null,null)],[e.GALAR_PONYTA]:[new y(e.GALAR_RAPIDASH,40,null,null)],[e.GALAR_FARFETCHD]:[new y(e.SIRFETCHD,30,null,null,3)],[e.GALAR_SLOWPOKE]:[new y(e.GALAR_SLOWBRO,1,31,null,4),new y(e.GALAR_SLOWKING,1,32,null,4)],[e.GALAR_MR_MIME]:[new y(e.MR_RIME,42,null,null)],[e.GALAR_CORSOLA]:[new y(e.CURSOLA,38,null,null)],[e.GALAR_ZIGZAGOON]:[new y(e.GALAR_LINOONE,20,null,null)],[e.GALAR_LINOONE]:[new y(e.OBSTAGOON,35,null,new sE("night"))],[e.GALAR_YAMASK]:[new y(e.RUNERIGUS,34,null,null)],[e.HISUI_ZORUA]:[new y(e.HISUI_ZOROARK,30,null,null)],[e.HISUI_SLIGGOO]:[new y(e.HISUI_GOODRA,50,null,new yD([X.RAIN,X.FOG,X.HEAVY_RAIN]),3)],[e.SPRIGATITO]:[new y(e.FLORAGATO,16,null,null)],[e.FLORAGATO]:[new y(e.MEOWSCARADA,36,null,null)],[e.FUECOCO]:[new y(e.CROCALOR,16,null,null)],[e.CROCALOR]:[new y(e.SKELEDIRGE,36,null,null)],[e.QUAXLY]:[new y(e.QUAXWELL,16,null,null)],[e.QUAXWELL]:[new y(e.QUAQUAVAL,36,null,null)],[e.LECHONK]:[new UA(e.OINKOLOGNE,"","female",18,null,new yt(ye.FEMALE)),new UA(e.OINKOLOGNE,"","",18,null,new yt(ye.MALE))],[e.TAROUNTULA]:[new y(e.SPIDOPS,15,null,null)],[e.NYMBLE]:[new y(e.LOKIX,24,null,null)],[e.PAWMI]:[new y(e.PAWMO,18,null,null)],[e.PAWMO]:[new y(e.PAWMOT,32,null,null)],[e.TANDEMAUS]:[new UA(e.MAUSHOLD,"","three",25,null,new Y1),new UA(e.MAUSHOLD,"","four",25,null,null)],[e.FIDOUGH]:[new y(e.DACHSBUN,26,null,null)],[e.SMOLIV]:[new y(e.DOLLIV,25,null,null)],[e.DOLLIV]:[new y(e.ARBOLIVA,35,null,null)],[e.NACLI]:[new y(e.NACLSTACK,24,null,null)],[e.NACLSTACK]:[new y(e.GARGANACL,38,null,null)],[e.WATTREL]:[new y(e.KILOWATTREL,25,null,null)],[e.MASCHIFF]:[new y(e.MABOSSTIFF,30,null,null)],[e.SHROODLE]:[new y(e.GRAFAIAI,28,null,null)],[e.BRAMBLIN]:[new y(e.BRAMBLEGHAST,30,null,null)],[e.TOEDSCOOL]:[new y(e.TOEDSCRUEL,30,null,null)],[e.RELLOR]:[new y(e.RABSCA,29,null,null)],[e.FLITTLE]:[new y(e.ESPATHRA,35,null,null)],[e.TINKATINK]:[new y(e.TINKATUFF,24,null,null)],[e.TINKATUFF]:[new y(e.TINKATON,38,null,null)],[e.WIGLETT]:[new y(e.WUGTRIO,26,null,null)],[e.FINIZEN]:[new y(e.PALAFIN,38,null,null)],[e.VAROOM]:[new y(e.REVAVROOM,40,null,null)],[e.GLIMMET]:[new y(e.GLIMMORA,35,null,null)],[e.GREAVARD]:[new y(e.HOUNDSTONE,30,null,new sE("night"))],[e.FRIGIBAX]:[new y(e.ARCTIBAX,35,null,null)],[e.ARCTIBAX]:[new y(e.BAXCALIBUR,54,null,null)],[e.PALDEA_WOOPER]:[new y(e.CLODSIRE,20,null,null)],[e.PIKACHU]:[new UA(e.ALOLA_RAICHU,"","",1,11,null,3),new UA(e.ALOLA_RAICHU,"partner","",1,11,null,3),new UA(e.RAICHU,"","",1,7,null,3),new UA(e.RAICHU,"partner","",1,7,null,3)],[e.NIDORINA]:[new y(e.NIDOQUEEN,1,3,null,3)],[e.NIDORINO]:[new y(e.NIDOKING,1,3,null,3)],[e.CLEFAIRY]:[new y(e.CLEFABLE,1,3,null,3)],[e.VULPIX]:[new y(e.NINETALES,1,5,null,3)],[e.JIGGLYPUFF]:[new y(e.WIGGLYTUFF,1,3,null,3)],[e.GLOOM]:[new y(e.VILEPLUME,1,4,null,3),new y(e.BELLOSSOM,1,2,null,3)],[e.GROWLITHE]:[new y(e.ARCANINE,1,5,null,3)],[e.POLIWHIRL]:[new y(e.POLIWRATH,1,6,null,3),new y(e.POLITOED,1,1,null,4)],[e.WEEPINBELL]:[new y(e.VICTREEBEL,1,4,null,3)],[e.MAGNETON]:[new y(e.MAGNEZONE,1,7,null,3)],[e.SHELLDER]:[new y(e.CLOYSTER,1,6,null,3)],[e.EXEGGCUTE]:[new y(e.ALOLA_EXEGGUTOR,1,2,null,3),new y(e.EXEGGUTOR,1,4,null,3)],[e.TANGELA]:[new y(e.TANGROWTH,34,null,new jt(A.ANCIENT_POWER),3)],[e.LICKITUNG]:[new y(e.LICKILICKY,32,null,new jt(A.ROLLOUT),3)],[e.STARYU]:[new y(e.STARMIE,1,6,null,3)],[e.EEVEE]:[new UA(e.SYLVEON,"","",1,null,new pD(120,L.FAIRY),3),new UA(e.SYLVEON,"partner","",1,null,new pD(120,L.FAIRY),3),new UA(e.ESPEON,"","",1,null,new NI(120,"day"),3),new UA(e.ESPEON,"partner","",1,null,new NI(120,"day"),3),new UA(e.UMBREON,"","",1,null,new NI(120,"night"),3),new UA(e.UMBREON,"partner","",1,null,new NI(120,"night"),3),new UA(e.VAPOREON,"","",1,6,null,3),new UA(e.VAPOREON,"partner","",1,6,null,3),new UA(e.JOLTEON,"","",1,7,null,3),new UA(e.JOLTEON,"partner","",1,7,null,3),new UA(e.FLAREON,"","",1,5,null,3),new UA(e.FLAREON,"partner","",1,5,null,3),new UA(e.LEAFEON,"","",1,4,null,3),new UA(e.LEAFEON,"partner","",1,4,null,3),new UA(e.GLACEON,"","",1,8,null,3),new UA(e.GLACEON,"partner","",1,8,null,3)],[e.TOGETIC]:[new y(e.TOGEKISS,1,11,null,4)],[e.AIPOM]:[new y(e.AMBIPOM,32,null,new jt(A.DOUBLE_HIT),3)],[e.SUNKERN]:[new y(e.SUNFLORA,1,2,null,3)],[e.YANMA]:[new y(e.YANMEGA,33,null,new jt(A.ANCIENT_POWER),3)],[e.MURKROW]:[new y(e.HONCHKROW,1,9,null,4)],[e.MISDREAVUS]:[new y(e.MISMAGIUS,1,9,null,4)],[e.GIRAFARIG]:[new y(e.FARIGIRAF,32,null,new jt(A.TWIN_BEAM),3)],[e.DUNSPARCE]:[new UA(e.DUDUNSPARCE,"","three-segment",32,null,new F1,3),new UA(e.DUDUNSPARCE,"","two-segment",32,null,new jt(A.HYPER_DRILL),3)],[e.GLIGAR]:[new y(e.GLISCOR,1,22,new sE("night"),4)],[e.SNEASEL]:[new y(e.WEAVILE,1,21,new sE("night"),4)],[e.URSARING]:[new y(e.URSALUNA,1,52,null,4)],[e.PILOSWINE]:[new y(e.MAMOSWINE,1,null,new jt(A.ANCIENT_POWER),4)],[e.STANTLER]:[new y(e.WYRDEER,25,null,new jt(A.PSYSHIELD_BASH),4)],[e.LOMBRE]:[new y(e.LUDICOLO,1,6,null,3)],[e.NUZLEAF]:[new y(e.SHIFTRY,1,4,null,3)],[e.NOSEPASS]:[new y(e.PROBOPASS,1,7,null,3)],[e.SKITTY]:[new y(e.DELCATTY,1,3,null,3)],[e.ROSELIA]:[new y(e.ROSERADE,1,11,null,4)],[e.BONSLY]:[new y(e.SUDOWOODO,1,null,new jt(A.MIMIC),2)],[e.MIME_JR]:[new y(e.GALAR_MR_MIME,1,null,new vD(A.MIMIC,"night"),2),new y(e.MR_MIME,1,null,new vD(A.MIMIC,"day"),2)],[e.PANSAGE]:[new y(e.SIMISAGE,1,4,null,3)],[e.PANSEAR]:[new y(e.SIMISEAR,1,5,null,3)],[e.PANPOUR]:[new y(e.SIMIPOUR,1,6,null,3)],[e.MUNNA]:[new y(e.MUSHARNA,1,3,null,3)],[e.COTTONEE]:[new y(e.WHIMSICOTT,1,2,null,3)],[e.PETILIL]:[new y(e.HISUI_LILLIGANT,1,11,null,3),new y(e.LILLIGANT,1,2,null,3)],[e.BASCULIN]:[new UA(e.BASCULEGION,"white-striped","female",40,null,new yt(ye.FEMALE),4),new UA(e.BASCULEGION,"white-striped","male",40,null,new yt(ye.MALE),4)],[e.MINCCINO]:[new y(e.CINCCINO,1,11,null,3)],[e.EELEKTRIK]:[new y(e.EELEKTROSS,1,7,null,4)],[e.LAMPENT]:[new y(e.CHANDELURE,1,9,null,4)],[e.FLOETTE]:[new y(e.FLORGES,1,11,null,3)],[e.DOUBLADE]:[new y(e.AEGISLASH,1,9,null,3)],[e.HELIOPTILE]:[new y(e.HELIOLISK,1,2,null,3)],[e.CHARJABUG]:[new y(e.VIKAVOLT,1,7,null,3)],[e.CRABRAWLER]:[new y(e.CRABOMINABLE,1,8,null,3)],[e.ROCKRUFF]:[new UA(e.LYCANROC,"own-tempo","dusk",25,null,null),new UA(e.LYCANROC,"","midday",25,null,new sE("day")),new UA(e.LYCANROC,"","midnight",25,null,new sE("night"))],[e.STEENEE]:[new y(e.TSAREENA,28,null,new jt(A.STOMP),3)],[e.POIPOLE]:[new y(e.NAGANADEL,1,null,new jt(A.DRAGON_PULSE),3)],[e.ALOLA_SANDSHREW]:[new y(e.ALOLA_SANDSLASH,1,8,null,3)],[e.ALOLA_VULPIX]:[new y(e.ALOLA_NINETALES,1,8,null,3)],[e.APPLIN]:[new y(e.DIPPLIN,1,29,null,3),new y(e.FLAPPLE,1,14,null,3),new y(e.APPLETUN,1,13,null,3)],[e.CLOBBOPUS]:[new y(e.GRAPPLOCT,35,null,new jt(A.TAUNT))],[e.SINISTEA]:[new UA(e.POLTEAGEIST,"phony","phony",1,12,null,3),new UA(e.POLTEAGEIST,"antique","antique",1,30,null,3)],[e.MILCERY]:[new UA(e.ALCREMIE,"","vanilla-cream",1,15,new KO([n.TOWN,n.PLAINS,n.GRASS,n.TALL_GRASS,n.METROPOLIS]),3),new UA(e.ALCREMIE,"","ruby-cream",1,15,new KO([n.BADLANDS,n.VOLCANO,n.GRAVEYARD,n.FACTORY,n.SLUM]),3),new UA(e.ALCREMIE,"","matcha-cream",1,15,new KO([n.FOREST,n.SWAMP,n.MEADOW,n.JUNGLE]),3),new UA(e.ALCREMIE,"","mint-cream",1,15,new KO([n.SEA,n.BEACH,n.LAKE,n.SEABED]),3),new UA(e.ALCREMIE,"","lemon-cream",1,15,new KO([n.DESERT,n.POWER_PLANT,n.DOJO,n.RUINS,n.CONSTRUCTION_SITE]),3),new UA(e.ALCREMIE,"","salted-cream",1,15,new KO([n.MOUNTAIN,n.CAVE,n.ICE_CAVE,n.FAIRY_CAVE,n.SNOWY_FOREST]),3),new UA(e.ALCREMIE,"","ruby-swirl",1,15,new KO([n.WASTELAND,n.LABORATORY]),3),new UA(e.ALCREMIE,"","caramel-swirl",1,15,new KO([n.TEMPLE,n.ISLAND]),3),new UA(e.ALCREMIE,"","rainbow-swirl",1,15,new KO([n.ABYSS,n.SPACE,n.END]),3)],[e.DURALUDON]:[new UA(e.ARCHALUDON,"","",1,53,null,4)],[e.KUBFU]:[new UA(e.URSHIFU,"","single-strike",1,54,null,4),new UA(e.URSHIFU,"","rapid-strike",1,55,null,4)],[e.GALAR_DARUMAKA]:[new y(e.GALAR_DARMANITAN,1,8,null,3)],[e.HISUI_GROWLITHE]:[new y(e.HISUI_ARCANINE,1,5,null,3)],[e.HISUI_VOLTORB]:[new y(e.HISUI_ELECTRODE,1,4,null,3)],[e.HISUI_QWILFISH]:[new y(e.OVERQWIL,28,null,new jt(A.BARB_BARRAGE),3)],[e.HISUI_SNEASEL]:[new y(e.SNEASLER,1,21,new sE("day"),4)],[e.CHARCADET]:[new y(e.ARMAROUGE,1,33,null,3),new y(e.CERULEDGE,1,34,null,3)],[e.TADBULB]:[new y(e.BELLIBOLT,1,7,null,3)],[e.CAPSAKID]:[new y(e.SCOVILLAIN,1,5,null,3)],[e.CETODDLE]:[new y(e.CETITAN,1,8,null,3)],[e.POLTCHAGEIST]:[new UA(e.SINISTCHA,"counterfeit","unremarkable",1,16,null,3),new UA(e.SINISTCHA,"artisan","masterpiece",1,35,null,3)],[e.DIPPLIN]:[new y(e.HYDRAPPLE,1,null,new jt(A.DRAGON_CHEER),4)],[e.KADABRA]:[new y(e.ALAKAZAM,1,1,null,4)],[e.MACHOKE]:[new y(e.MACHAMP,1,1,null,4)],[e.GRAVELER]:[new y(e.GOLEM,1,1,null,4)],[e.HAUNTER]:[new y(e.GENGAR,1,1,null,4)],[e.ONIX]:[new y(e.STEELIX,1,1,new wD(L.STEEL),4)],[e.RHYDON]:[new y(e.RHYPERIOR,1,26,null,4)],[e.SEADRA]:[new y(e.KINGDRA,1,19,null,4)],[e.SCYTHER]:[new y(e.SCIZOR,1,1,new wD(L.STEEL),4),new y(e.KLEAVOR,1,51,null,4)],[e.ELECTABUZZ]:[new y(e.ELECTIVIRE,1,24,null,4)],[e.MAGMAR]:[new y(e.MAGMORTAR,1,25,null,4)],[e.PORYGON]:[new y(e.PORYGON2,1,17,null,3)],[e.PORYGON2]:[new y(e.PORYGON_Z,1,18,null,4)],[e.FEEBAS]:[new y(e.MILOTIC,1,20,null,4)],[e.DUSCLOPS]:[new y(e.DUSKNOIR,1,23,null,4)],[e.CLAMPERL]:[new y(e.HUNTAIL,1,1,new yt(ye.MALE),4),new y(e.GOREBYSS,1,1,new yt(ye.FEMALE),4)],[e.BOLDORE]:[new y(e.GIGALITH,1,1,null,4)],[e.GURDURR]:[new y(e.CONKELDURR,1,1,null,4)],[e.KARRABLAST]:[new y(e.ESCAVALIER,1,1,new In(e.SHELMET),4)],[e.SHELMET]:[new y(e.ACCELGOR,1,1,new In(e.KARRABLAST),4)],[e.SPRITZEE]:[new y(e.AROMATISSE,1,27,null,4)],[e.SWIRLIX]:[new y(e.SLURPUFF,1,28,null,4)],[e.PHANTUMP]:[new y(e.TREVENANT,1,1,null,4)],[e.PUMPKABOO]:[new y(e.GOURGEIST,1,1,null,4)],[e.ALOLA_GRAVELER]:[new y(e.ALOLA_GOLEM,1,1,null,4)],[e.PRIMEAPE]:[new y(e.ANNIHILAPE,35,null,new jt(A.RAGE_FIST),4)],[e.GOLBAT]:[new y(e.CROBAT,1,null,new eR(120),4)],[e.CHANSEY]:[new y(e.BLISSEY,1,null,new eR(200),3)],[e.PICHU]:[new UA(e.PIKACHU,"spiky","partner",1,null,new eR(90),1),new UA(e.PIKACHU,"","",1,null,new eR(90),1)],[e.CLEFFA]:[new y(e.CLEFAIRY,1,null,new eR(160),1)],[e.IGGLYBUFF]:[new y(e.JIGGLYPUFF,1,null,new eR(70),1)],[e.TOGEPI]:[new y(e.TOGETIC,1,null,new eR(70),1)],[e.AZURILL]:[new y(e.MARILL,1,null,new eR(70),1)],[e.BUDEW]:[new y(e.ROSELIA,1,null,new NI(70,"day"),1)],[e.BUNEARY]:[new y(e.LOPUNNY,1,null,new eR(70),2)],[e.CHINGLING]:[new y(e.CHIMECHO,1,null,new NI(90,"night"),2)],[e.HAPPINY]:[new y(e.CHANSEY,1,null,new eR(160),1)],[e.MUNCHLAX]:[new y(e.SNORLAX,1,null,new eR(120),3)],[e.RIOLU]:[new y(e.LUCARIO,1,null,new NI(120,"day"),3)],[e.WOOBAT]:[new y(e.SWOOBAT,1,null,new eR(90),2)],[e.SWADLOON]:[new y(e.LEAVANNY,1,null,new eR(120),3)],[e.TYPE_NULL]:[new y(e.SILVALLY,1,null,new eR(100),3)],[e.ALOLA_MEOWTH]:[new y(e.ALOLA_PERSIAN,1,null,new eR(120),3)],[e.SNOM]:[new y(e.FROSMOTH,1,null,new NI(90,"night"),2)],[e.GIMMIGHOUL]:[new UA(e.GHOLDENGO,"chest","",1,null,new VD,4),new UA(e.GHOLDENGO,"roaming","",1,null,new VD,4)]},CE={};function HX(){const t=[te.MEGA,"",te.MEGA_X,"",te.MEGA_Y].map(R=>R);Object.keys(BA).forEach(R=>{const I=BA[R];for(const N of I)N.evoFormKey&&t.indexOf(N.evoFormKey)>-1||(CE[N.speciesId]=Number.parseInt(R))})}r(HX,"initPokemonPrevolutions");const Sv={};function cX(){Object.keys(CE).forEach(E=>{const R=CE[E];kE.hasOwnProperty(R)?Sv[E]=R:Sv[E]=CE[R]})}r(cX,"initPokemonStarters");function KM(t){if(t===-1)return D.t("biome:unknownLocation");switch(t){case n.GRASS:return D.t("biome:GRASS");case n.RUINS:return D.t("biome:RUINS");case n.END:return D.t("biome:END");default:return D.t(`biome:${n[t].toUpperCase()}`)}}r(KM,"getBiomeName");const _N={[n.TOWN]:n.PLAINS,[n.PLAINS]:[n.GRASS,n.METROPOLIS,n.LAKE],[n.GRASS]:n.TALL_GRASS,[n.TALL_GRASS]:[n.FOREST,n.CAVE],[n.SLUM]:[n.CONSTRUCTION_SITE,[n.SWAMP,2]],[n.FOREST]:[n.JUNGLE,n.MEADOW],[n.SEA]:[n.SEABED,n.ICE_CAVE],[n.SWAMP]:[n.GRAVEYARD,n.TALL_GRASS],[n.BEACH]:[n.SEA,[n.ISLAND,2]],[n.LAKE]:[n.BEACH,n.SWAMP,n.CONSTRUCTION_SITE],[n.SEABED]:[n.CAVE,[n.VOLCANO,3]],[n.MOUNTAIN]:[n.VOLCANO,[n.WASTELAND,2],[n.SPACE,3]],[n.BADLANDS]:[n.DESERT,n.MOUNTAIN],[n.CAVE]:[n.BADLANDS,n.LAKE,[n.LABORATORY,2]],[n.DESERT]:[n.RUINS,[n.CONSTRUCTION_SITE,2]],[n.ICE_CAVE]:n.SNOWY_FOREST,[n.MEADOW]:[n.PLAINS,n.FAIRY_CAVE],[n.POWER_PLANT]:n.FACTORY,[n.VOLCANO]:[n.BEACH,[n.ICE_CAVE,3]],[n.GRAVEYARD]:n.ABYSS,[n.DOJO]:[n.PLAINS,[n.JUNGLE,2],[n.TEMPLE,2]],[n.FACTORY]:[n.PLAINS,[n.LABORATORY,2]],[n.RUINS]:[n.MOUNTAIN,[n.FOREST,2]],[n.WASTELAND]:n.BADLANDS,[n.ABYSS]:[n.CAVE,[n.SPACE,2],[n.WASTELAND,2]],[n.SPACE]:n.RUINS,[n.CONSTRUCTION_SITE]:[n.POWER_PLANT,[n.DOJO,2]],[n.JUNGLE]:[n.TEMPLE],[n.FAIRY_CAVE]:[n.ICE_CAVE,[n.SPACE,2]],[n.TEMPLE]:[n.DESERT,[n.SWAMP,2],[n.RUINS,2]],[n.METROPOLIS]:n.SLUM,[n.SNOWY_FOREST]:[n.FOREST,[n.MOUNTAIN,2],[n.LAKE,2]],[n.ISLAND]:n.SEA,[n.LABORATORY]:n.CONSTRUCTION_SITE},IL={};var BE=(t=>(t[t.COMMON=0]="COMMON",t[t.UNCOMMON=1]="UNCOMMON",t[t.RARE=2]="RARE",t[t.SUPER_RARE=3]="SUPER_RARE",t[t.ULTRA_RARE=4]="ULTRA_RARE",t[t.BOSS=5]="BOSS",t[t.BOSS_RARE=6]="BOSS_RARE",t[t.BOSS_SUPER_RARE=7]="BOSS_SUPER_RARE",t[t.BOSS_ULTRA_RARE=8]="BOSS_ULTRA_RARE",t))(BE||{});const _6=[],Tv={},bR={[n.TOWN]:{0:{[a.DAWN]:[{1:[e.CATERPIE],7:[e.METAPOD]},e.SENTRET,e.LEDYBA,e.HOPPIP,e.SUNKERN,e.STARLY,e.PIDOVE,e.COTTONEE,{1:[e.SCATTERBUG],9:[e.SPEWPA]},e.YUNGOOS,e.SKWOVET],[a.DAY]:[{1:[e.CATERPIE],7:[e.METAPOD]},e.SENTRET,e.HOPPIP,e.SUNKERN,e.SILCOON,e.STARLY,e.PIDOVE,e.COTTONEE,{1:[e.SCATTERBUG],9:[e.SPEWPA]},e.YUNGOOS,e.SKWOVET],[a.DUSK]:[{1:[e.WEEDLE],7:[e.KAKUNA]},e.POOCHYENA,e.PATRAT,e.PURRLOIN,e.BLIPBUG],[a.NIGHT]:[{1:[e.WEEDLE],7:[e.KAKUNA]},e.HOOTHOOT,e.SPINARAK,e.POOCHYENA,e.CASCOON,e.PATRAT,e.PURRLOIN,e.BLIPBUG],[a.ALL]:[e.PIDGEY,e.RATTATA,e.SPEAROW,e.ZIGZAGOON,e.WURMPLE,e.TAILLOW,e.BIDOOF,e.LILLIPUP,e.FLETCHLING,e.WOOLOO,e.LECHONK]},1:{[a.DAWN]:[e.BELLSPROUT,e.POOCHYENA,e.LOTAD,e.SKITTY,e.COMBEE,e.CHERUBI,e.PATRAT,e.MINCCINO,e.PAWMI],[a.DAY]:[e.NIDORAN_F,e.NIDORAN_M,e.BELLSPROUT,e.POOCHYENA,e.LOTAD,e.SKITTY,e.COMBEE,e.CHERUBI,e.PATRAT,e.MINCCINO,e.PAWMI],[a.DUSK]:[e.EKANS,e.ODDISH,e.MEOWTH,e.SPINARAK,e.SEEDOT,e.SHROOMISH,e.KRICKETOT,e.VENIPEDE],[a.NIGHT]:[e.EKANS,e.ODDISH,e.PARAS,e.VENONAT,e.MEOWTH,e.SEEDOT,e.SHROOMISH,e.KRICKETOT,e.VENIPEDE],[a.ALL]:[e.NINCADA,e.WHISMUR,e.FIDOUGH]},2:{[a.DAWN]:[e.TANDEMAUS],[a.DAY]:[e.TANDEMAUS],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.ABRA,e.SURSKIT,e.ROOKIDEE]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.EEVEE,e.RALTS]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.DITTO]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]}},[n.PLAINS]:{0:{[a.DAWN]:[{1:[e.SENTRET],15:[e.FURRET]},{1:[e.YUNGOOS],30:[e.GUMSHOOS]},{1:[e.SKWOVET],24:[e.GREEDENT]}],[a.DAY]:[{1:[e.SENTRET],15:[e.FURRET]},{1:[e.YUNGOOS],30:[e.GUMSHOOS]},{1:[e.SKWOVET],24:[e.GREEDENT]}],[a.DUSK]:[{1:[e.MEOWTH],28:[e.PERSIAN]},{1:[e.POOCHYENA],18:[e.MIGHTYENA]}],[a.NIGHT]:[{1:[e.ZUBAT],22:[e.GOLBAT]},{1:[e.MEOWTH],28:[e.PERSIAN]},{1:[e.POOCHYENA],18:[e.MIGHTYENA]}],[a.ALL]:[{1:[e.ZIGZAGOON],20:[e.LINOONE]},{1:[e.BIDOOF],15:[e.BIBAREL]},{1:[e.LECHONK],18:[e.OINKOLOGNE]}]},1:{[a.DAWN]:[{1:[e.DODUO],31:[e.DODRIO]},{1:[e.POOCHYENA],18:[e.MIGHTYENA]},{1:[e.STARLY],14:[e.STARAVIA],34:[e.STARAPTOR]},{1:[e.PIDOVE],21:[e.TRANQUILL],32:[e.UNFEZANT]},{1:[e.PAWMI],18:[e.PAWMO],32:[e.PAWMOT]}],[a.DAY]:[{1:[e.DODUO],31:[e.DODRIO]},{1:[e.POOCHYENA],18:[e.MIGHTYENA]},{1:[e.STARLY],14:[e.STARAVIA],34:[e.STARAPTOR]},{1:[e.PIDOVE],21:[e.TRANQUILL],32:[e.UNFEZANT]},{1:[e.ROCKRUFF],25:[e.LYCANROC]},{1:[e.PAWMI],18:[e.PAWMO],32:[e.PAWMOT]}],[a.DUSK]:[{1:[e.MANKEY],28:[e.PRIMEAPE],75:[e.ANNIHILAPE]}],[a.NIGHT]:[{1:[e.MANKEY],28:[e.PRIMEAPE],75:[e.ANNIHILAPE]}],[a.ALL]:[{1:[e.PIDGEY],18:[e.PIDGEOTTO],36:[e.PIDGEOT]},{1:[e.SPEAROW],20:[e.FEAROW]},e.PIKACHU,{1:[e.FLETCHLING],17:[e.FLETCHINDER],35:[e.TALONFLAME]}]},2:{[a.DAWN]:[e.PALDEA_TAUROS],[a.DAY]:[e.PALDEA_TAUROS],[a.DUSK]:[{1:[e.SHINX],15:[e.LUXIO],30:[e.LUXRAY]}],[a.NIGHT]:[{1:[e.SHINX],15:[e.LUXIO],30:[e.LUXRAY]}],[a.ALL]:[{1:[e.ABRA],16:[e.KADABRA]},{1:[e.BUNEARY],20:[e.LOPUNNY]},{1:[e.ROOKIDEE],18:[e.CORVISQUIRE],38:[e.CORVIKNIGHT]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.FARFETCHD,e.LICKITUNG,e.CHANSEY,e.EEVEE,e.SNORLAX,{1:[e.DUNSPARCE],62:[e.DUDUNSPARCE]}]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.DITTO,e.LATIAS,e.LATIOS]},5:{[a.DAWN]:[e.DODRIO,e.FURRET,e.GUMSHOOS,e.GREEDENT],[a.DAY]:[e.DODRIO,e.FURRET,e.GUMSHOOS,e.GREEDENT],[a.DUSK]:[e.PERSIAN,e.MIGHTYENA],[a.NIGHT]:[e.PERSIAN,e.MIGHTYENA],[a.ALL]:[e.LINOONE,e.BIBAREL,e.LOPUNNY,e.OINKOLOGNE]},6:{[a.DAWN]:[e.PAWMOT,e.PALDEA_TAUROS],[a.DAY]:[e.LYCANROC,e.PAWMOT,e.PALDEA_TAUROS],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.FARFETCHD,e.SNORLAX,e.LICKILICKY,e.DUDUNSPARCE]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.LATIAS,e.LATIOS]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]}},[n.GRASS]:{0:{[a.DAWN]:[{1:[e.HOPPIP],18:[e.SKIPLOOM]},e.SUNKERN,e.COTTONEE,e.PETILIL],[a.DAY]:[{1:[e.HOPPIP],18:[e.SKIPLOOM]},e.SUNKERN,e.COTTONEE,e.PETILIL],[a.DUSK]:[{1:[e.SEEDOT],14:[e.NUZLEAF]},{1:[e.SHROOMISH],23:[e.BRELOOM]}],[a.NIGHT]:[{1:[e.SEEDOT],14:[e.NUZLEAF]},{1:[e.SHROOMISH],23:[e.BRELOOM]}],[a.ALL]:[]},1:{[a.DAWN]:[{1:[e.COMBEE],21:[e.VESPIQUEN]},{1:[e.CHERUBI],25:[e.CHERRIM]}],[a.DAY]:[{1:[e.COMBEE],21:[e.VESPIQUEN]},{1:[e.CHERUBI],25:[e.CHERRIM]}],[a.DUSK]:[{1:[e.FOONGUS],39:[e.AMOONGUSS]}],[a.NIGHT]:[{1:[e.FOONGUS],39:[e.AMOONGUSS]}],[a.ALL]:[]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.BULBASAUR],16:[e.IVYSAUR],32:[e.VENUSAUR]},e.GROWLITHE,{1:[e.TURTWIG],18:[e.GROTLE],32:[e.TORTERRA]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.SUDOWOODO]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.VIRIZION]},5:{[a.DAWN]:[e.JUMPLUFF,e.SUNFLORA,e.WHIMSICOTT],[a.DAY]:[e.JUMPLUFF,e.SUNFLORA,e.WHIMSICOTT],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.VENUSAUR,e.SUDOWOODO,e.TORTERRA]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.VIRIZION]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]}},[n.TALL_GRASS]:{0:{[a.DAWN]:[{1:[e.BOUNSWEET],18:[e.STEENEE],58:[e.TSAREENA]}],[a.DAY]:[{1:[e.NIDORAN_F],16:[e.NIDORINA]},{1:[e.NIDORAN_M],16:[e.NIDORINO]},{1:[e.BOUNSWEET],18:[e.STEENEE],58:[e.TSAREENA]}],[a.DUSK]:[{1:[e.ODDISH],21:[e.GLOOM]},{1:[e.KRICKETOT],10:[e.KRICKETUNE]}],[a.NIGHT]:[{1:[e.ODDISH],21:[e.GLOOM]},{1:[e.KRICKETOT],10:[e.KRICKETUNE]}],[a.ALL]:[{1:[e.NINCADA],20:[e.NINJASK]},{1:[e.FOMANTIS],44:[e.LURANTIS]},{1:[e.NYMBLE],24:[e.LOKIX]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[{1:[e.PARAS],24:[e.PARASECT]},{1:[e.VENONAT],31:[e.VENOMOTH]},{1:[e.SPINARAK],22:[e.ARIADOS]}],[a.ALL]:[e.VULPIX]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.PINSIR,{1:[e.CHIKORITA],16:[e.BAYLEEF],32:[e.MEGANIUM]},{1:[e.GIRAFARIG],62:[e.FARIGIRAF]},e.ZANGOOSE,e.KECLEON,e.TROPIUS]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.SCYTHER,e.SHEDINJA,e.ROTOM]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},5:{[a.DAWN]:[e.TSAREENA],[a.DAY]:[e.NIDOQUEEN,e.NIDOKING,e.TSAREENA],[a.DUSK]:[e.VILEPLUME,e.KRICKETUNE],[a.NIGHT]:[e.VILEPLUME,e.KRICKETUNE],[a.ALL]:[e.NINJASK,e.ZANGOOSE,e.KECLEON,e.LURANTIS,e.LOKIX]},6:{[a.DAWN]:[e.BELLOSSOM],[a.DAY]:[e.BELLOSSOM],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.PINSIR,e.MEGANIUM,e.FARIGIRAF]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.ROTOM]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]}},[n.METROPOLIS]:{0:{[a.DAWN]:[{1:[e.YAMPER],25:[e.BOLTUND]}],[a.DAY]:[{1:[e.YAMPER],25:[e.BOLTUND]}],[a.DUSK]:[{1:[e.PATRAT],20:[e.WATCHOG]}],[a.NIGHT]:[{1:[e.HOUNDOUR],24:[e.HOUNDOOM]},{1:[e.PATRAT],20:[e.WATCHOG]}],[a.ALL]:[{1:[e.RATTATA],20:[e.RATICATE]},{1:[e.ZIGZAGOON],20:[e.LINOONE]},{1:[e.LILLIPUP],16:[e.HERDIER],32:[e.STOUTLAND]}]},1:{[a.DAWN]:[{1:[e.PATRAT],20:[e.WATCHOG]},e.INDEEDEE],[a.DAY]:[{1:[e.PATRAT],20:[e.WATCHOG]},e.INDEEDEE],[a.DUSK]:[{1:[e.ESPURR],25:[e.MEOWSTIC]}],[a.NIGHT]:[{1:[e.ESPURR],25:[e.MEOWSTIC]}],[a.ALL]:[e.PIKACHU,{1:[e.GLAMEOW],38:[e.PURUGLY]},e.FURFROU,{1:[e.FIDOUGH],26:[e.DACHSBUN]},e.SQUAWKABILLY]},2:{[a.DAWN]:[{1:[e.TANDEMAUS],25:[e.MAUSHOLD]}],[a.DAY]:[{1:[e.TANDEMAUS],25:[e.MAUSHOLD]}],[a.DUSK]:[e.MORPEKO],[a.NIGHT]:[e.MORPEKO],[a.ALL]:[{1:[e.VAROOM],40:[e.REVAVROOM]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.DITTO,e.EEVEE,e.SMEARGLE]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.CASTFORM]},5:{[a.DAWN]:[e.BOLTUND],[a.DAY]:[e.BOLTUND],[a.DUSK]:[e.MEOWSTIC],[a.NIGHT]:[e.MEOWSTIC],[a.ALL]:[e.STOUTLAND,e.FURFROU,e.DACHSBUN]},6:{[a.DAWN]:[e.MAUSHOLD],[a.DAY]:[e.MAUSHOLD],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.CASTFORM,e.REVAVROOM]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]}},[n.FOREST]:{0:{[a.DAWN]:[e.BUTTERFREE,{1:[e.BELLSPROUT],21:[e.WEEPINBELL]},{1:[e.COMBEE],21:[e.VESPIQUEN]},e.PETILIL,{1:[e.DEERLING],34:[e.SAWSBUCK]},e.VIVILLON],[a.DAY]:[e.BUTTERFREE,{1:[e.BELLSPROUT],21:[e.WEEPINBELL]},e.BEAUTIFLY,{1:[e.COMBEE],21:[e.VESPIQUEN]},e.PETILIL,{1:[e.DEERLING],34:[e.SAWSBUCK]},e.VIVILLON],[a.DUSK]:[e.BEEDRILL,{1:[e.PINECO],31:[e.FORRETRESS]},{1:[e.SEEDOT],14:[e.NUZLEAF]},{1:[e.SHROOMISH],23:[e.BRELOOM]},{1:[e.VENIPEDE],22:[e.WHIRLIPEDE],30:[e.SCOLIPEDE]}],[a.NIGHT]:[e.BEEDRILL,{1:[e.VENONAT],31:[e.VENOMOTH]},{1:[e.SPINARAK],22:[e.ARIADOS]},{1:[e.PINECO],31:[e.FORRETRESS]},e.DUSTOX,{1:[e.SEEDOT],14:[e.NUZLEAF]},{1:[e.SHROOMISH],23:[e.BRELOOM]},{1:[e.VENIPEDE],22:[e.WHIRLIPEDE],30:[e.SCOLIPEDE]}],[a.ALL]:[{1:[e.TAROUNTULA],15:[e.SPIDOPS]},{1:[e.NYMBLE],24:[e.LOKIX]},{1:[e.SHROODLE],28:[e.GRAFAIAI]}]},1:{[a.DAWN]:[e.ROSELIA,e.MOTHIM,{1:[e.SEWADDLE],20:[e.SWADLOON],30:[e.LEAVANNY]}],[a.DAY]:[e.ROSELIA,e.MOTHIM,{1:[e.SEWADDLE],20:[e.SWADLOON],30:[e.LEAVANNY]}],[a.DUSK]:[{1:[e.SPINARAK],22:[e.ARIADOS]},{1:[e.DOTTLER],30:[e.ORBEETLE]}],[a.NIGHT]:[{1:[e.HOOTHOOT],20:[e.NOCTOWL]},{1:[e.ROCKRUFF],25:[e.LYCANROC]},{1:[e.DOTTLER],30:[e.ORBEETLE]}],[a.ALL]:[{1:[e.EKANS],22:[e.ARBOK]},{1:[e.TEDDIURSA],30:[e.URSARING]},{1:[e.BURMY],20:[e.WORMADAM]},{1:[e.PANSAGE],30:[e.SIMISAGE]}]},2:{[a.DAWN]:[e.EXEGGCUTE,e.STANTLER],[a.DAY]:[e.EXEGGCUTE,e.STANTLER],[a.DUSK]:[e.SCYTHER],[a.NIGHT]:[e.SCYTHER],[a.ALL]:[e.HERACROSS,{1:[e.TREECKO],16:[e.GROVYLE],36:[e.SCEPTILE]},e.TROPIUS,e.KARRABLAST,e.SHELMET,{1:[e.CHESPIN],16:[e.QUILLADIN],36:[e.CHESNAUGHT]},{1:[e.ROWLET],17:[e.DARTRIX],34:[e.DECIDUEYE]},e.SQUAWKABILLY,{1:[e.TOEDSCOOL],30:[e.TOEDSCRUEL]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[e.BLOODMOON_URSALUNA],[a.ALL]:[e.DURANT]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.KARTANA,e.WO_CHIEN]},5:{[a.DAWN]:[e.VICTREEBEL,e.MOTHIM,e.VESPIQUEN,e.LILLIGANT,e.SAWSBUCK],[a.DAY]:[e.VICTREEBEL,e.BEAUTIFLY,e.MOTHIM,e.VESPIQUEN,e.LILLIGANT,e.SAWSBUCK],[a.DUSK]:[e.ARIADOS,e.FORRETRESS,e.SHIFTRY,e.BRELOOM,e.SCOLIPEDE,e.ORBEETLE],[a.NIGHT]:[e.VENOMOTH,e.NOCTOWL,e.ARIADOS,e.FORRETRESS,e.DUSTOX,e.SHIFTRY,e.BRELOOM,e.SCOLIPEDE,e.ORBEETLE],[a.ALL]:[e.WORMADAM,e.SIMISAGE,e.SPIDOPS,e.LOKIX,e.GRAFAIAI]},6:{[a.DAWN]:[e.STANTLER],[a.DAY]:[e.STANTLER],[a.DUSK]:[],[a.NIGHT]:[e.LYCANROC,e.BLOODMOON_URSALUNA],[a.ALL]:[e.HERACROSS,e.SCEPTILE,e.ESCAVALIER,e.ACCELGOR,e.DURANT,e.CHESNAUGHT,e.DECIDUEYE,e.TOEDSCRUEL]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.KARTANA,e.WO_CHIEN]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.CALYREX]}},[n.SEA]:{0:{[a.DAWN]:[{1:[e.SLOWPOKE],37:[e.SLOWBRO]},{1:[e.WINGULL],25:[e.PELIPPER]},e.CRAMORANT,{1:[e.FINIZEN],38:[e.PALAFIN]}],[a.DAY]:[{1:[e.SLOWPOKE],37:[e.SLOWBRO]},{1:[e.WINGULL],25:[e.PELIPPER]},e.CRAMORANT,{1:[e.FINIZEN],38:[e.PALAFIN]}],[a.DUSK]:[{1:[e.INKAY],30:[e.MALAMAR]}],[a.NIGHT]:[{1:[e.FINNEON],31:[e.LUMINEON]},{1:[e.INKAY],30:[e.MALAMAR]}],[a.ALL]:[{1:[e.TENTACOOL],30:[e.TENTACRUEL]},{1:[e.MAGIKARP],20:[e.GYARADOS]},{1:[e.BUIZEL],26:[e.FLOATZEL]}]},1:{[a.DAWN]:[{1:[e.STARYU],30:[e.STARMIE]}],[a.DAY]:[{1:[e.STARYU],30:[e.STARMIE]}],[a.DUSK]:[{1:[e.SLOWPOKE],37:[e.SLOWBRO]},e.SHELLDER,{1:[e.CARVANHA],30:[e.SHARPEDO]}],[a.NIGHT]:[{1:[e.SLOWPOKE],37:[e.SLOWBRO]},e.SHELLDER,{1:[e.CHINCHOU],27:[e.LANTURN]},{1:[e.CARVANHA],30:[e.SHARPEDO]}],[a.ALL]:[{1:[e.POLIWAG],25:[e.POLIWHIRL]},{1:[e.HORSEA],32:[e.SEADRA]},{1:[e.GOLDEEN],33:[e.SEAKING]},{1:[e.WAILMER],40:[e.WAILORD]},{1:[e.PANPOUR],30:[e.SIMIPOUR]},{1:[e.WATTREL],25:[e.KILOWATTREL]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.LAPRAS,{1:[e.PIPLUP],16:[e.PRINPLUP],36:[e.EMPOLEON]},{1:[e.POPPLIO],17:[e.BRIONNE],34:[e.PRIMARINA]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.KINGDRA,e.ROTOM,{1:[e.TIRTOUGA],37:[e.CARRACOSTA]}]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},5:{[a.DAWN]:[e.PELIPPER,e.CRAMORANT,e.PALAFIN],[a.DAY]:[e.PELIPPER,e.CRAMORANT,e.PALAFIN],[a.DUSK]:[e.SHARPEDO,e.MALAMAR],[a.NIGHT]:[e.SHARPEDO,e.LUMINEON,e.MALAMAR],[a.ALL]:[e.TENTACRUEL,e.FLOATZEL,e.SIMIPOUR,e.KILOWATTREL]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.KINGDRA,e.EMPOLEON,e.PRIMARINA]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.ROTOM]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.LUGIA]}},[n.SWAMP]:{0:{[a.DAWN]:[{1:[e.WOOPER],20:[e.QUAGSIRE]},{1:[e.LOTAD],14:[e.LOMBRE]}],[a.DAY]:[{1:[e.WOOPER],20:[e.QUAGSIRE]},{1:[e.LOTAD],14:[e.LOMBRE]}],[a.DUSK]:[{1:[e.EKANS],22:[e.ARBOK]},{1:[e.PALDEA_WOOPER],20:[e.CLODSIRE]}],[a.NIGHT]:[{1:[e.EKANS],22:[e.ARBOK]},{1:[e.PALDEA_WOOPER],20:[e.CLODSIRE]}],[a.ALL]:[{1:[e.POLIWAG],25:[e.POLIWHIRL]},{1:[e.GULPIN],26:[e.SWALOT]},{1:[e.SHELLOS],30:[e.GASTRODON]},{1:[e.TYMPOLE],25:[e.PALPITOAD],36:[e.SEISMITOAD]}]},1:{[a.DAWN]:[{1:[e.EKANS],22:[e.ARBOK]}],[a.DAY]:[{1:[e.EKANS],22:[e.ARBOK]}],[a.DUSK]:[{1:[e.CROAGUNK],37:[e.TOXICROAK]}],[a.NIGHT]:[{1:[e.CROAGUNK],37:[e.TOXICROAK]}],[a.ALL]:[{1:[e.PSYDUCK],33:[e.GOLDUCK]},{1:[e.BARBOACH],30:[e.WHISCASH]},{1:[e.SKORUPI],40:[e.DRAPION]},e.STUNFISK,{1:[e.MAREANIE],38:[e.TOXAPEX]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.TOTODILE],18:[e.CROCONAW],30:[e.FERALIGATR]},{1:[e.MUDKIP],16:[e.MARSHTOMP],36:[e.SWAMPERT]}]},3:{[a.DAWN]:[{1:[e.GALAR_SLOWPOKE],40:[e.GALAR_SLOWBRO]},{1:[e.HISUI_SLIGGOO],80:[e.HISUI_GOODRA]}],[a.DAY]:[{1:[e.GALAR_SLOWPOKE],40:[e.GALAR_SLOWBRO]},{1:[e.HISUI_SLIGGOO],80:[e.HISUI_GOODRA]}],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.POLITOED,e.GALAR_STUNFISK]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.AZELF,e.POIPOLE]},5:{[a.DAWN]:[e.QUAGSIRE,e.LUDICOLO],[a.DAY]:[e.QUAGSIRE,e.LUDICOLO],[a.DUSK]:[e.ARBOK,e.CLODSIRE],[a.NIGHT]:[e.ARBOK,e.CLODSIRE],[a.ALL]:[e.POLIWRATH,e.SWALOT,e.WHISCASH,e.GASTRODON,e.SEISMITOAD,e.STUNFISK,e.TOXAPEX]},6:{[a.DAWN]:[e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.HISUI_GOODRA],[a.DAY]:[e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.HISUI_GOODRA],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.FERALIGATR,e.POLITOED,e.SWAMPERT,e.GALAR_STUNFISK]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.AZELF,e.NAGANADEL]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]}},[n.BEACH]:{0:{[a.DAWN]:[{1:[e.STARYU],30:[e.STARMIE]}],[a.DAY]:[{1:[e.STARYU],30:[e.STARMIE]}],[a.DUSK]:[e.SHELLDER],[a.NIGHT]:[e.SHELLDER],[a.ALL]:[{1:[e.KRABBY],28:[e.KINGLER]},{1:[e.CORPHISH],30:[e.CRAWDAUNT]},{1:[e.DWEBBLE],34:[e.CRUSTLE]},{1:[e.BINACLE],39:[e.BARBARACLE]},{1:[e.MAREANIE],38:[e.TOXAPEX]},{1:[e.WIGLETT],26:[e.WUGTRIO]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.BURMY],20:[e.WORMADAM]},{1:[e.CLAUNCHER],37:[e.CLAWITZER]},{1:[e.SANDYGAST],42:[e.PALOSSAND]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.QUAXLY],16:[e.QUAXWELL],36:[e.QUAQUAVAL]},e.TATSUGIRI]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.TIRTOUGA],37:[e.CARRACOSTA]}]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.CRESSELIA,e.KELDEO,e.TAPU_FINI]},5:{[a.DAWN]:[e.STARMIE],[a.DAY]:[e.STARMIE],[a.DUSK]:[e.CLOYSTER],[a.NIGHT]:[e.CLOYSTER],[a.ALL]:[e.KINGLER,e.CRAWDAUNT,e.WORMADAM,e.CRUSTLE,e.BARBARACLE,e.CLAWITZER,e.TOXAPEX,e.PALOSSAND]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.CARRACOSTA,e.QUAQUAVAL]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.CRESSELIA,e.KELDEO,e.TAPU_FINI]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]}},[n.LAKE]:{0:{[a.DAWN]:[{1:[e.LOTAD],14:[e.LOMBRE]},{1:[e.DUCKLETT],35:[e.SWANNA]}],[a.DAY]:[{1:[e.LOTAD],14:[e.LOMBRE]},{1:[e.DUCKLETT],35:[e.SWANNA]}],[a.DUSK]:[{1:[e.MARILL],18:[e.AZUMARILL]}],[a.NIGHT]:[{1:[e.MARILL],18:[e.AZUMARILL]}],[a.ALL]:[{1:[e.PSYDUCK],33:[e.GOLDUCK]},{1:[e.GOLDEEN],33:[e.SEAKING]},{1:[e.MAGIKARP],20:[e.GYARADOS]},{1:[e.CHEWTLE],22:[e.DREDNAW]}]},1:{[a.DAWN]:[{1:[e.DEWPIDER],22:[e.ARAQUANID]}],[a.DAY]:[{1:[e.DEWPIDER],22:[e.ARAQUANID]}],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.SLOWPOKE],37:[e.SLOWBRO]},{1:[e.WOOPER],20:[e.QUAGSIRE]},{1:[e.SURSKIT],22:[e.MASQUERAIN]},e.WISHIWASHI,e.FLAMIGO]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.SQUIRTLE],16:[e.WARTORTLE],36:[e.BLASTOISE]},{1:[e.OSHAWOTT],17:[e.DEWOTT],36:[e.SAMUROTT]},{1:[e.FROAKIE],16:[e.FROGADIER],36:[e.GRENINJA]},{1:[e.SOBBLE],16:[e.DRIZZILE],35:[e.INTELEON]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.VAPOREON,e.SLOWKING]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.SUICUNE,e.MESPRIT]},5:{[a.DAWN]:[e.SWANNA,e.ARAQUANID],[a.DAY]:[e.SWANNA,e.ARAQUANID],[a.DUSK]:[e.AZUMARILL],[a.NIGHT]:[e.AZUMARILL],[a.ALL]:[e.GOLDUCK,e.SLOWBRO,e.SEAKING,e.GYARADOS,e.MASQUERAIN,e.WISHIWASHI,e.DREDNAW]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.BLASTOISE,e.VAPOREON,e.SLOWKING,e.SAMUROTT,e.GRENINJA,e.INTELEON]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.SUICUNE,e.MESPRIT]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]}},[n.SEABED]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.CHINCHOU],27:[e.LANTURN]},e.REMORAID,e.CLAMPERL,e.BASCULIN,{1:[e.FRILLISH],40:[e.JELLICENT]},{1:[e.ARROKUDA],26:[e.BARRASKEWDA]},e.VELUZA]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.TENTACOOL],30:[e.TENTACRUEL]},e.SHELLDER,{1:[e.WAILMER],40:[e.WAILORD]},e.LUVDISC,{1:[e.SHELLOS],30:[e.GASTRODON]},{1:[e.SKRELP],48:[e.DRAGALGE]},e.PINCURCHIN,e.DONDOZO]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.QWILFISH,e.CORSOLA,e.OCTILLERY,{1:[e.MANTYKE],52:[e.MANTINE]},e.ALOMOMOLA,{1:[e.TYNAMO],39:[e.EELEKTRIK]},e.DHELMISE]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.OMANYTE],40:[e.OMASTAR]},{1:[e.KABUTO],40:[e.KABUTOPS]},e.RELICANTH,e.PYUKUMUKU,{1:[e.GALAR_CORSOLA],38:[e.CURSOLA]},e.ARCTOVISH,e.HISUI_QWILFISH]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.FEEBAS,e.NIHILEGO]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.LANTURN,e.QWILFISH,e.CORSOLA,e.OCTILLERY,e.MANTINE,e.WAILORD,e.HUNTAIL,e.GOREBYSS,e.LUVDISC,e.JELLICENT,e.ALOMOMOLA,e.DRAGALGE,e.BARRASKEWDA,e.DONDOZO]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.OMASTAR,e.KABUTOPS,e.RELICANTH,e.EELEKTROSS,e.PYUKUMUKU,e.DHELMISE,e.CURSOLA,e.ARCTOVISH,e.BASCULEGION,e.OVERQWIL]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.MILOTIC,e.NIHILEGO]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.KYOGRE]}},[n.MOUNTAIN]:{0:{[a.DAWN]:[{1:[e.TAILLOW],22:[e.SWELLOW]},{1:[e.SWABLU],35:[e.ALTARIA]},{1:[e.STARLY],14:[e.STARAVIA],34:[e.STARAPTOR]},{1:[e.PIDOVE],21:[e.TRANQUILL],32:[e.UNFEZANT]},{1:[e.FLETCHLING],17:[e.FLETCHINDER],35:[e.TALONFLAME]}],[a.DAY]:[{1:[e.TAILLOW],22:[e.SWELLOW]},{1:[e.SWABLU],35:[e.ALTARIA]},{1:[e.STARLY],14:[e.STARAVIA],34:[e.STARAPTOR]},{1:[e.PIDOVE],21:[e.TRANQUILL],32:[e.UNFEZANT]},{1:[e.FLETCHLING],17:[e.FLETCHINDER],35:[e.TALONFLAME]}],[a.DUSK]:[{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.ARON],32:[e.LAIRON],42:[e.AGGRON]},{1:[e.ROGGENROLA],25:[e.BOLDORE]}],[a.NIGHT]:[{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.ARON],32:[e.LAIRON],42:[e.AGGRON]},{1:[e.ROGGENROLA],25:[e.BOLDORE]}],[a.ALL]:[{1:[e.PIDGEY],18:[e.PIDGEOTTO],36:[e.PIDGEOT]},{1:[e.SPEAROW],20:[e.FEAROW]},{1:[e.SKIDDO],32:[e.GOGOAT]}]},1:{[a.DAWN]:[{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.ARON],32:[e.LAIRON],42:[e.AGGRON]},{1:[e.ROGGENROLA],25:[e.BOLDORE]},{1:[e.RUFFLET],54:[e.BRAVIARY]},{1:[e.ROOKIDEE],18:[e.CORVISQUIRE],38:[e.CORVIKNIGHT]},{1:[e.FLITTLE],35:[e.ESPATHRA]},e.BOMBIRDIER],[a.DAY]:[{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.ARON],32:[e.LAIRON],42:[e.AGGRON]},{1:[e.ROGGENROLA],25:[e.BOLDORE]},{1:[e.RUFFLET],54:[e.BRAVIARY]},{1:[e.ROOKIDEE],18:[e.CORVISQUIRE],38:[e.CORVIKNIGHT]},{1:[e.FLITTLE],35:[e.ESPATHRA]},e.BOMBIRDIER],[a.DUSK]:[{1:[e.VULLABY],54:[e.MANDIBUZZ]}],[a.NIGHT]:[{1:[e.VULLABY],54:[e.MANDIBUZZ]}],[a.ALL]:[{1:[e.MACHOP],28:[e.MACHOKE]},{1:[e.GEODUDE],25:[e.GRAVELER]},{1:[e.NATU],25:[e.XATU]},{1:[e.SLUGMA],38:[e.MAGCARGO]},{1:[e.NACLI],24:[e.NACLSTACK],38:[e.GARGANACL]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[e.MURKROW],[a.ALL]:[e.SKARMORY,{1:[e.TORCHIC],16:[e.COMBUSKEN],36:[e.BLAZIKEN]},{1:[e.SPOINK],32:[e.GRUMPIG]},e.HAWLUCHA,e.KLAWF]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.LARVITAR],30:[e.PUPITAR]},{1:[e.CRANIDOS],30:[e.RAMPARDOS]},{1:[e.SHIELDON],30:[e.BASTIODON]},{1:[e.GIBLE],24:[e.GABITE],48:[e.GARCHOMP]},e.ROTOM,e.ARCHEOPS,{1:[e.AXEW],38:[e.FRAXURE]}]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.TORNADUS,e.TING_LU,e.OGERPON]},5:{[a.DAWN]:[e.SWELLOW,e.ALTARIA,e.STARAPTOR,e.UNFEZANT,e.BRAVIARY,e.TALONFLAME,e.CORVIKNIGHT,e.ESPATHRA],[a.DAY]:[e.SWELLOW,e.ALTARIA,e.STARAPTOR,e.UNFEZANT,e.BRAVIARY,e.TALONFLAME,e.CORVIKNIGHT,e.ESPATHRA],[a.DUSK]:[e.MANDIBUZZ],[a.NIGHT]:[e.MANDIBUZZ],[a.ALL]:[e.PIDGEOT,e.FEAROW,e.SKARMORY,e.AGGRON,e.GOGOAT,e.GARGANACL]},6:{[a.DAWN]:[e.HISUI_BRAVIARY],[a.DAY]:[e.HISUI_BRAVIARY],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.BLAZIKEN,e.RAMPARDOS,e.BASTIODON,e.HAWLUCHA]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.ROTOM,e.TORNADUS,e.TING_LU,e.OGERPON]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.HO_OH]}},[n.BADLANDS]:{0:{[a.DAWN]:[{1:[e.PHANPY],25:[e.DONPHAN]}],[a.DAY]:[{1:[e.PHANPY],25:[e.DONPHAN]}],[a.DUSK]:[],[a.NIGHT]:[{1:[e.CUBONE],28:[e.MAROWAK]}],[a.ALL]:[{1:[e.DIGLETT],26:[e.DUGTRIO]},{1:[e.GEODUDE],25:[e.GRAVELER]},{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.DRILBUR],31:[e.EXCADRILL]},{1:[e.MUDBRAY],30:[e.MUDSDALE]}]},1:{[a.DAWN]:[{1:[e.SIZZLIPEDE],28:[e.CENTISKORCH]},{1:[e.CAPSAKID],30:[e.SCOVILLAIN]}],[a.DAY]:[{1:[e.SIZZLIPEDE],28:[e.CENTISKORCH]},{1:[e.CAPSAKID],30:[e.SCOVILLAIN]}],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.SANDSHREW],22:[e.SANDSLASH]},{1:[e.NUMEL],33:[e.CAMERUPT]},{1:[e.ROGGENROLA],25:[e.BOLDORE]},{1:[e.CUFANT],34:[e.COPPERAJAH]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.ONIX,e.GLIGAR,{1:[e.POLTCHAGEIST],30:[e.SINISTCHA]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.LANDORUS,e.OKIDOGI]},5:{[a.DAWN]:[e.DONPHAN,e.CENTISKORCH,e.SCOVILLAIN],[a.DAY]:[e.DONPHAN,e.CENTISKORCH,e.SCOVILLAIN],[a.DUSK]:[],[a.NIGHT]:[e.MAROWAK],[a.ALL]:[e.DUGTRIO,e.GOLEM,e.RHYPERIOR,e.GLISCOR,e.EXCADRILL,e.MUDSDALE,e.COPPERAJAH]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.STEELIX,e.SINISTCHA]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.LANDORUS,e.OKIDOGI]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.GROUDON]}},[n.CAVE]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.ZUBAT],22:[e.GOLBAT]},{1:[e.PARAS],24:[e.PARASECT]},{1:[e.TEDDIURSA],30:[e.URSARING]},{1:[e.WHISMUR],20:[e.LOUDRED],40:[e.EXPLOUD]},{1:[e.ROGGENROLA],25:[e.BOLDORE]},{1:[e.WOOBAT],20:[e.SWOOBAT]},{1:[e.BUNNELBY],20:[e.DIGGERSBY]},{1:[e.NACLI],24:[e.NACLSTACK],38:[e.GARGANACL]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[{1:[e.ROCKRUFF],25:[e.LYCANROC]}],[a.NIGHT]:[],[a.ALL]:[{1:[e.GEODUDE],25:[e.GRAVELER]},{1:[e.MAKUHITA],24:[e.HARIYAMA]},e.NOSEPASS,{1:[e.NOIBAT],48:[e.NOIVERN]},{1:[e.WIMPOD],30:[e.GOLISOPOD]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.ONIX,{1:[e.FERROSEED],40:[e.FERROTHORN]},e.CARBINK,{1:[e.GLIMMET],35:[e.GLIMMORA]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.SHUCKLE]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.UXIE]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.PARASECT,e.ONIX,e.CROBAT,e.URSARING,e.EXPLOUD,e.PROBOPASS,e.GIGALITH,e.SWOOBAT,e.DIGGERSBY,e.NOIVERN,e.GOLISOPOD,e.GARGANACL]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[e.LYCANROC],[a.NIGHT]:[],[a.ALL]:[e.SHUCKLE,e.FERROTHORN,e.GLIMMORA]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.UXIE]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.TERAPAGOS]}},[n.DESERT]:{0:{[a.DAWN]:[e.TRAPINCH,{1:[e.HIPPOPOTAS],34:[e.HIPPOWDON]},{1:[e.RELLOR],29:[e.RABSCA]}],[a.DAY]:[e.TRAPINCH,{1:[e.HIPPOPOTAS],34:[e.HIPPOWDON]},{1:[e.RELLOR],29:[e.RABSCA]}],[a.DUSK]:[{1:[e.CACNEA],32:[e.CACTURNE]},{1:[e.SANDILE],29:[e.KROKOROK],40:[e.KROOKODILE]}],[a.NIGHT]:[{1:[e.CACNEA],32:[e.CACTURNE]},{1:[e.SANDILE],29:[e.KROKOROK],40:[e.KROOKODILE]}],[a.ALL]:[{1:[e.SANDSHREW],22:[e.SANDSLASH]},{1:[e.SKORUPI],40:[e.DRAPION]},{1:[e.SILICOBRA],36:[e.SANDACONDA]}]},1:{[a.DAWN]:[{1:[e.SANDILE],29:[e.KROKOROK],40:[e.KROOKODILE]},e.HELIOPTILE],[a.DAY]:[{1:[e.SANDILE],29:[e.KROKOROK],40:[e.KROOKODILE]},e.HELIOPTILE],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.MARACTUS,{1:[e.BRAMBLIN],30:[e.BRAMBLEGHAST]},e.ORTHWORM]},2:{[a.DAWN]:[{1:[e.VIBRAVA],45:[e.FLYGON]}],[a.DAY]:[{1:[e.VIBRAVA],45:[e.FLYGON]}],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.DARUMAKA],35:[e.DARMANITAN]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.LILEEP],40:[e.CRADILY]},{1:[e.ANORITH],40:[e.ARMALDO]}]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.REGIROCK,e.TAPU_BULU,e.PHEROMOSA]},5:{[a.DAWN]:[e.HIPPOWDON,e.HELIOLISK,e.RABSCA],[a.DAY]:[e.HIPPOWDON,e.HELIOLISK,e.RABSCA],[a.DUSK]:[e.CACTURNE,e.KROOKODILE],[a.NIGHT]:[e.CACTURNE,e.KROOKODILE],[a.ALL]:[e.SANDSLASH,e.DRAPION,e.DARMANITAN,e.MARACTUS,e.SANDACONDA,e.BRAMBLEGHAST]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.CRADILY,e.ARMALDO]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.REGIROCK,e.TAPU_BULU,e.PHEROMOSA]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]}},[n.ICE_CAVE]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.SEEL],34:[e.DEWGONG]},{1:[e.SWINUB],33:[e.PILOSWINE]},{1:[e.SNOVER],40:[e.ABOMASNOW]},{1:[e.VANILLITE],35:[e.VANILLISH],47:[e.VANILLUXE]},{1:[e.CUBCHOO],37:[e.BEARTIC]},{1:[e.BERGMITE],37:[e.AVALUGG]},e.CRABRAWLER,{1:[e.SNOM],20:[e.FROSMOTH]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.SNEASEL,{1:[e.SNORUNT],42:[e.GLALIE]},{1:[e.SPHEAL],32:[e.SEALEO],44:[e.WALREIN]},e.EISCUE,{1:[e.CETODDLE],30:[e.CETITAN]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.JYNX,e.LAPRAS,e.FROSLASS,e.CRYOGONAL]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.DELIBIRD,e.ROTOM,{1:[e.AMAURA],59:[e.AURORUS]}]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.ARTICUNO,e.REGICE]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.DEWGONG,e.GLALIE,e.WALREIN,e.WEAVILE,e.MAMOSWINE,e.FROSLASS,e.VANILLUXE,e.BEARTIC,e.CRYOGONAL,e.AVALUGG,e.CRABOMINABLE,e.CETITAN]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.JYNX,e.LAPRAS,e.GLACEON,e.AURORUS]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.ARTICUNO,e.REGICE,e.ROTOM]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.KYUREM]}},[n.MEADOW]:{0:{[a.DAWN]:[{1:[e.LEDYBA],18:[e.LEDIAN]},e.ROSELIA,e.COTTONEE,e.MINCCINO],[a.DAY]:[e.ROSELIA,e.COTTONEE,e.MINCCINO],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.BLITZLE],27:[e.ZEBSTRIKA]},{1:[e.FLABEBE],19:[e.FLOETTE]},{1:[e.CUTIEFLY],25:[e.RIBOMBEE]},{1:[e.GOSSIFLEUR],20:[e.ELDEGOSS]},{1:[e.WOOLOO],24:[e.DUBWOOL]}]},1:{[a.DAWN]:[{1:[e.PONYTA],40:[e.RAPIDASH]},{1:[e.SNUBBULL],23:[e.GRANBULL]},{1:[e.SKITTY],30:[e.DELCATTY]},e.BOUFFALANT,{1:[e.SMOLIV],25:[e.DOLLIV],35:[e.ARBOLIVA]}],[a.DAY]:[{1:[e.PONYTA],40:[e.RAPIDASH]},{1:[e.SNUBBULL],23:[e.GRANBULL]},{1:[e.SKITTY],30:[e.DELCATTY]},e.BOUFFALANT,{1:[e.SMOLIV],25:[e.DOLLIV],35:[e.ARBOLIVA]}],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.JIGGLYPUFF],30:[e.WIGGLYTUFF]},{1:[e.MAREEP],15:[e.FLAAFFY],30:[e.AMPHAROS]},{1:[e.RALTS],20:[e.KIRLIA],30:[e.GARDEVOIR]},{1:[e.GLAMEOW],38:[e.PURUGLY]},e.ORICORIO]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[e.VOLBEAT,e.ILLUMISE],[a.ALL]:[e.TAUROS,e.EEVEE,e.MILTANK,e.SPINDA,{1:[e.APPLIN],30:[e.DIPPLIN]},{1:[e.SPRIGATITO],16:[e.FLORAGATO],36:[e.MEOWSCARADA]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.CHANSEY,e.SYLVEON]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.MELOETTA]},5:{[a.DAWN]:[e.LEDIAN,e.GRANBULL,e.DELCATTY,e.ROSERADE,e.CINCCINO,e.BOUFFALANT,e.ARBOLIVA],[a.DAY]:[e.GRANBULL,e.DELCATTY,e.ROSERADE,e.CINCCINO,e.BOUFFALANT,e.ARBOLIVA],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.TAUROS,e.MILTANK,e.GARDEVOIR,e.PURUGLY,e.ZEBSTRIKA,e.FLORGES,e.RIBOMBEE,e.DUBWOOL]},6:{[a.DAWN]:[e.HISUI_LILLIGANT],[a.DAY]:[e.HISUI_LILLIGANT],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.BLISSEY,e.SYLVEON,e.FLAPPLE,e.APPLETUN,e.MEOWSCARADA,e.HYDRAPPLE]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.MELOETTA]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.SHAYMIN]}},[n.POWER_PLANT]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.PIKACHU,{1:[e.MAGNEMITE],30:[e.MAGNETON]},{1:[e.VOLTORB],30:[e.ELECTRODE]},{1:[e.ELECTRIKE],26:[e.MANECTRIC]},{1:[e.SHINX],15:[e.LUXIO],30:[e.LUXRAY]},e.DEDENNE,{1:[e.GRUBBIN],20:[e.CHARJABUG]},{1:[e.PAWMI],18:[e.PAWMO],32:[e.PAWMOT]},{1:[e.TADBULB],30:[e.BELLIBOLT]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.ELECTABUZZ,e.PLUSLE,e.MINUN,e.PACHIRISU,e.EMOLGA,e.TOGEDEMARU]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.MAREEP],15:[e.FLAAFFY]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.JOLTEON,e.HISUI_VOLTORB]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.RAIKOU,e.THUNDURUS,e.XURKITREE,e.ZERAORA,e.REGIELEKI]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.RAICHU,e.MANECTRIC,e.LUXRAY,e.MAGNEZONE,e.ELECTIVIRE,e.DEDENNE,e.VIKAVOLT,e.TOGEDEMARU,e.PAWMOT,e.BELLIBOLT]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.JOLTEON,e.AMPHAROS,e.HISUI_ELECTRODE]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.ZAPDOS,e.RAIKOU,e.THUNDURUS,e.XURKITREE,e.ZERAORA,e.REGIELEKI]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.ZEKROM]}},[n.VOLCANO]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.VULPIX,e.GROWLITHE,{1:[e.PONYTA],40:[e.RAPIDASH]},{1:[e.SLUGMA],38:[e.MAGCARGO]},{1:[e.NUMEL],33:[e.CAMERUPT]},{1:[e.SALANDIT],33:[e.SALAZZLE]},{1:[e.ROLYCOLY],18:[e.CARKOL],34:[e.COALOSSAL]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.MAGMAR,e.TORKOAL,{1:[e.PANSEAR],30:[e.SIMISEAR]},e.HEATMOR,e.TURTONATOR]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.CHARMANDER],16:[e.CHARMELEON],36:[e.CHARIZARD]},{1:[e.CYNDAQUIL],14:[e.QUILAVA],36:[e.TYPHLOSION]},{1:[e.CHIMCHAR],14:[e.MONFERNO],36:[e.INFERNAPE]},{1:[e.TEPIG],17:[e.PIGNITE],36:[e.EMBOAR]},{1:[e.FENNEKIN],16:[e.BRAIXEN],36:[e.DELPHOX]},{1:[e.LITTEN],17:[e.TORRACAT],34:[e.INCINEROAR]},{1:[e.SCORBUNNY],16:[e.RABOOT],35:[e.CINDERACE]},{1:[e.CHARCADET],30:[e.ARMAROUGE]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.FLAREON,e.ROTOM,{1:[e.LARVESTA],59:[e.VOLCARONA]},e.HISUI_GROWLITHE]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.ENTEI,e.HEATRAN,e.VOLCANION,e.CHI_YU]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.NINETALES,e.ARCANINE,e.RAPIDASH,e.MAGCARGO,e.CAMERUPT,e.TORKOAL,e.MAGMORTAR,e.SIMISEAR,e.HEATMOR,e.SALAZZLE,e.TURTONATOR,e.COALOSSAL]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.CHARIZARD,e.FLAREON,e.TYPHLOSION,e.INFERNAPE,e.EMBOAR,e.VOLCARONA,e.DELPHOX,e.INCINEROAR,e.CINDERACE,e.ARMAROUGE,e.HISUI_ARCANINE]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.MOLTRES,e.ENTEI,e.ROTOM,e.HEATRAN,e.VOLCANION,e.CHI_YU]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.RESHIRAM]}},[n.GRAVEYARD]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.GASTLY],25:[e.HAUNTER]},{1:[e.SHUPPET],37:[e.BANETTE]},{1:[e.DUSKULL],37:[e.DUSCLOPS]},{1:[e.DRIFLOON],28:[e.DRIFBLIM]},{1:[e.LITWICK],41:[e.LAMPENT]},e.PHANTUMP,e.PUMPKABOO,{1:[e.GREAVARD],60:[e.HOUNDSTONE]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.CUBONE],28:[e.MAROWAK]},{1:[e.YAMASK],34:[e.COFAGRIGUS]},{1:[e.SINISTEA],30:[e.POLTEAGEIST]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.MISDREAVUS,e.MIMIKYU,{1:[e.FUECOCO],16:[e.CROCALOR],36:[e.SKELEDIRGE]},e.CERULEDGE]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.SPIRITOMB]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.MARSHADOW,e.SPECTRIER]},5:{[a.DAWN]:[e.MAROWAK],[a.DAY]:[e.MAROWAK],[a.DUSK]:[e.MAROWAK],[a.NIGHT]:[],[a.ALL]:[e.GENGAR,e.BANETTE,e.DRIFBLIM,e.MISMAGIUS,e.DUSKNOIR,e.CHANDELURE,e.TREVENANT,e.GOURGEIST,e.MIMIKYU,e.POLTEAGEIST,e.HOUNDSTONE]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.SKELEDIRGE,e.CERULEDGE,e.HISUI_TYPHLOSION]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.MARSHADOW,e.SPECTRIER]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.GIRATINA]}},[n.DOJO]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.MANKEY],28:[e.PRIMEAPE],75:[e.ANNIHILAPE]},{1:[e.MAKUHITA],24:[e.HARIYAMA]},{1:[e.MEDITITE],37:[e.MEDICHAM]},{1:[e.STUFFUL],27:[e.BEWEAR]},{1:[e.CLOBBOPUS],55:[e.GRAPPLOCT]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.CROAGUNK],37:[e.TOXICROAK]},{1:[e.SCRAGGY],39:[e.SCRAFTY]},{1:[e.MIENFOO],50:[e.MIENSHAO]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.HITMONLEE,e.HITMONCHAN,e.LUCARIO,e.THROH,e.SAWK,{1:[e.PANCHAM],52:[e.PANGORO]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.HITMONTOP,e.GALLADE,e.GALAR_FARFETCHD]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.TERRAKION,e.KUBFU,e.GALAR_ZAPDOS]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.HITMONLEE,e.HITMONCHAN,e.HARIYAMA,e.MEDICHAM,e.LUCARIO,e.TOXICROAK,e.THROH,e.SAWK,e.SCRAFTY,e.MIENSHAO,e.BEWEAR,e.GRAPPLOCT,e.ANNIHILAPE]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.HITMONTOP,e.GALLADE,e.PANGORO,e.SIRFETCHD,e.HISUI_DECIDUEYE]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.TERRAKION,e.URSHIFU]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.ZAMAZENTA,e.GALAR_ZAPDOS]}},[n.FACTORY]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.MACHOP],28:[e.MACHOKE]},{1:[e.MAGNEMITE],30:[e.MAGNETON]},{1:[e.VOLTORB],30:[e.ELECTRODE]},{1:[e.TIMBURR],25:[e.GURDURR]},{1:[e.KLINK],38:[e.KLANG],49:[e.KLINKLANG]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.BRONZOR],33:[e.BRONZONG]},e.KLEFKI]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.PORYGON],30:[e.PORYGON2]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.BELDUM],20:[e.METANG],45:[e.METAGROSS]}]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.GENESECT,e.MAGEARNA]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.KLINKLANG,e.KLEFKI]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.GENESECT,e.MAGEARNA]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]}},[n.RUINS]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.DROWZEE],26:[e.HYPNO]},{1:[e.NATU],25:[e.XATU]},e.UNOWN,{1:[e.SPOINK],32:[e.GRUMPIG]},{1:[e.BALTOY],36:[e.CLAYDOL]},{1:[e.ELGYEM],42:[e.BEHEEYEM]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.ABRA],16:[e.KADABRA]},e.SIGILYPH,{1:[e.TINKATINK],24:[e.TINKATUFF],38:[e.TINKATON]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.MR_MIME,e.WOBBUFFET,{1:[e.GOTHITA],32:[e.GOTHORITA],41:[e.GOTHITELLE]},e.STONJOURNER]},3:{[a.DAWN]:[],[a.DAY]:[e.ESPEON],[a.DUSK]:[{1:[e.GALAR_YAMASK],34:[e.RUNERIGUS]}],[a.NIGHT]:[{1:[e.GALAR_YAMASK],34:[e.RUNERIGUS]}],[a.ALL]:[{1:[e.ARCHEN],37:[e.ARCHEOPS]}]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.REGISTEEL,e.FEZANDIPITI]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.ALAKAZAM,e.HYPNO,e.XATU,e.GRUMPIG,e.CLAYDOL,e.SIGILYPH,e.GOTHITELLE,e.BEHEEYEM,e.TINKATON]},6:{[a.DAWN]:[],[a.DAY]:[e.ESPEON],[a.DUSK]:[e.RUNERIGUS],[a.NIGHT]:[e.RUNERIGUS],[a.ALL]:[e.MR_MIME,e.WOBBUFFET,e.ARCHEOPS]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.REGISTEEL,e.FEZANDIPITI]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.KORAIDON]}},[n.WASTELAND]:{0:{[a.DAWN]:[{1:[e.BAGON],30:[e.SHELGON],50:[e.SALAMENCE]},{1:[e.GOOMY],40:[e.SLIGGOO],80:[e.GOODRA]},{1:[e.JANGMO_O],35:[e.HAKAMO_O],45:[e.KOMMO_O]}],[a.DAY]:[{1:[e.BAGON],30:[e.SHELGON],50:[e.SALAMENCE]},{1:[e.GOOMY],40:[e.SLIGGOO],80:[e.GOODRA]},{1:[e.JANGMO_O],35:[e.HAKAMO_O],45:[e.KOMMO_O]}],[a.DUSK]:[{1:[e.LARVITAR],30:[e.PUPITAR],55:[e.TYRANITAR]}],[a.NIGHT]:[{1:[e.LARVITAR],30:[e.PUPITAR],55:[e.TYRANITAR]}],[a.ALL]:[{1:[e.VIBRAVA],45:[e.FLYGON]},{1:[e.GIBLE],24:[e.GABITE],48:[e.GARCHOMP]},{1:[e.AXEW],38:[e.FRAXURE],48:[e.HAXORUS]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[{1:[e.DEINO],50:[e.ZWEILOUS],64:[e.HYDREIGON]}],[a.NIGHT]:[{1:[e.DEINO],50:[e.ZWEILOUS],64:[e.HYDREIGON]}],[a.ALL]:[{1:[e.SWABLU],35:[e.ALTARIA]},e.DRAMPA,e.CYCLIZAR]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[{1:[e.DREEPY],50:[e.DRAKLOAK],60:[e.DRAGAPULT]}],[a.NIGHT]:[{1:[e.DREEPY],50:[e.DRAKLOAK],60:[e.DRAGAPULT]}],[a.ALL]:[{1:[e.DRATINI],30:[e.DRAGONAIR],55:[e.DRAGONITE]},{1:[e.FRIGIBAX],35:[e.ARCTIBAX],54:[e.BAXCALIBUR]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.AERODACTYL,e.DRUDDIGON,{1:[e.TYRUNT],59:[e.TYRANTRUM]},e.DRACOZOLT,e.DRACOVISH]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.REGIDRAGO]},5:{[a.DAWN]:[e.SALAMENCE,e.GOODRA,e.KOMMO_O],[a.DAY]:[e.SALAMENCE,e.GOODRA,e.KOMMO_O],[a.DUSK]:[e.TYRANITAR,e.DRAGAPULT],[a.NIGHT]:[e.TYRANITAR,e.DRAGAPULT],[a.ALL]:[e.DRAGONITE,e.FLYGON,e.GARCHOMP,e.HAXORUS,e.DRAMPA,e.BAXCALIBUR]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.AERODACTYL,e.DRUDDIGON,e.TYRANTRUM,e.DRACOZOLT,e.DRACOVISH]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.REGIDRAGO]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.DIALGA]}},[n.ABYSS]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.MURKROW,{1:[e.HOUNDOUR],24:[e.HOUNDOOM]},e.SABLEYE,{1:[e.PURRLOIN],20:[e.LIEPARD]},{1:[e.PAWNIARD],52:[e.BISHARP],64:[e.KINGAMBIT]},{1:[e.NICKIT],18:[e.THIEVUL]},{1:[e.IMPIDIMP],32:[e.MORGREM],42:[e.GRIMMSNARL]},{1:[e.MASCHIFF],30:[e.MABOSSTIFF]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.ABSOL,e.SPIRITOMB,{1:[e.ZORUA],30:[e.ZOROARK]},{1:[e.DEINO],50:[e.ZWEILOUS],64:[e.HYDREIGON]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.UMBREON]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.DARKRAI,e.GALAR_MOLTRES]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.HOUNDOOM,e.SABLEYE,e.ABSOL,e.HONCHKROW,e.SPIRITOMB,e.LIEPARD,e.ZOROARK,e.HYDREIGON,e.THIEVUL,e.GRIMMSNARL,e.MABOSSTIFF,e.KINGAMBIT]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.UMBREON,e.HISUI_SAMUROTT]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.DARKRAI]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.PALKIA,e.YVELTAL,e.GALAR_MOLTRES]}},[n.SPACE]:{0:{[a.DAWN]:[],[a.DAY]:[e.SOLROCK],[a.DUSK]:[],[a.NIGHT]:[e.LUNATONE],[a.ALL]:[e.CLEFAIRY,{1:[e.BRONZOR],33:[e.BRONZONG]},{1:[e.MUNNA],30:[e.MUSHARNA]},e.MINIOR]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.BALTOY],36:[e.CLAYDOL]},{1:[e.ELGYEM],42:[e.BEHEEYEM]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.BELDUM],20:[e.METANG],45:[e.METAGROSS]},e.SIGILYPH,{1:[e.SOLOSIS],32:[e.DUOSION],41:[e.REUNICLUS]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.PORYGON],30:[e.PORYGON2]}]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.COSMOG],43:[e.COSMOEM]},e.CELESTEELA]},5:{[a.DAWN]:[],[a.DAY]:[e.SOLROCK],[a.DUSK]:[],[a.NIGHT]:[e.LUNATONE],[a.ALL]:[e.CLEFABLE,e.BRONZONG,e.MUSHARNA,e.REUNICLUS,e.MINIOR]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.METAGROSS,e.PORYGON_Z]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.CELESTEELA]},8:{[a.DAWN]:[],[a.DAY]:[e.SOLGALEO],[a.DUSK]:[],[a.NIGHT]:[e.LUNALA],[a.ALL]:[e.RAYQUAZA,e.NECROZMA]}},[n.CONSTRUCTION_SITE]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.MACHOP],28:[e.MACHOKE]},{1:[e.MAGNEMITE],30:[e.MAGNETON]},{1:[e.DRILBUR],31:[e.EXCADRILL]},{1:[e.TIMBURR],25:[e.GURDURR]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.GRIMER],38:[e.MUK]},{1:[e.KOFFING],35:[e.WEEZING]},{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.SCRAGGY],39:[e.SCRAFTY]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[{1:[e.GALAR_MEOWTH],28:[e.PERRSERKER]}],[a.NIGHT]:[],[a.ALL]:[e.ONIX,e.HITMONLEE,e.HITMONCHAN,e.DURALUDON]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.DITTO,e.HITMONTOP]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.COBALION,e.STAKATAKA]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.MACHAMP,e.CONKELDURR]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[e.PERRSERKER],[a.NIGHT]:[],[a.ALL]:[e.ARCHALUDON]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.COBALION,e.STAKATAKA]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]}},[n.JUNGLE]:{0:{[a.DAWN]:[e.VESPIQUEN,{1:[e.CHERUBI],25:[e.CHERRIM]},{1:[e.SEWADDLE],20:[e.SWADLOON],30:[e.LEAVANNY]}],[a.DAY]:[e.VESPIQUEN,{1:[e.CHERUBI],25:[e.CHERRIM]},{1:[e.SEWADDLE],20:[e.SWADLOON],30:[e.LEAVANNY]}],[a.DUSK]:[e.SHROOMISH,{1:[e.PURRLOIN],20:[e.LIEPARD]},{1:[e.FOONGUS],39:[e.AMOONGUSS]}],[a.NIGHT]:[{1:[e.SPINARAK],22:[e.ARIADOS]},e.SHROOMISH,{1:[e.PURRLOIN],20:[e.LIEPARD]},{1:[e.FOONGUS],39:[e.AMOONGUSS]}],[a.ALL]:[e.AIPOM,{1:[e.BLITZLE],27:[e.ZEBSTRIKA]},{1:[e.PIKIPEK],14:[e.TRUMBEAK],28:[e.TOUCANNON]}]},1:{[a.DAWN]:[e.EXEGGCUTE,e.TROPIUS,e.COMBEE,e.KOMALA],[a.DAY]:[e.EXEGGCUTE,e.TROPIUS,e.COMBEE,e.KOMALA],[a.DUSK]:[e.TANGELA,{1:[e.SPINARAK],22:[e.ARIADOS]},{1:[e.PANCHAM],52:[e.PANGORO]}],[a.NIGHT]:[e.TANGELA,{1:[e.PANCHAM],52:[e.PANGORO]}],[a.ALL]:[{1:[e.PANSAGE],30:[e.SIMISAGE]},{1:[e.PANSEAR],30:[e.SIMISEAR]},{1:[e.PANPOUR],30:[e.SIMIPOUR]},{1:[e.JOLTIK],36:[e.GALVANTULA]},{1:[e.LITLEO],35:[e.PYROAR]},{1:[e.FOMANTIS],44:[e.LURANTIS]},e.FALINKS]},2:{[a.DAWN]:[{1:[e.FOONGUS],39:[e.AMOONGUSS]},e.PASSIMIAN,{1:[e.GALAR_PONYTA],40:[e.GALAR_RAPIDASH]}],[a.DAY]:[{1:[e.FOONGUS],39:[e.AMOONGUSS]},e.PASSIMIAN],[a.DUSK]:[e.ORANGURU],[a.NIGHT]:[e.ORANGURU],[a.ALL]:[e.SCYTHER,e.YANMA,{1:[e.SLAKOTH],18:[e.VIGOROTH],36:[e.SLAKING]},e.SEVIPER,e.CARNIVINE,{1:[e.SNIVY],17:[e.SERVINE],36:[e.SERPERIOR]},{1:[e.GROOKEY],16:[e.THWACKEY],35:[e.RILLABOOM]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.KANGASKHAN,e.CHATOT,e.KLEAVOR]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.TAPU_LELE,e.BUZZWOLE,e.ZARUDE,e.MUNKIDORI]},5:{[a.DAWN]:[e.EXEGGUTOR,e.TROPIUS,e.CHERRIM,e.LEAVANNY,e.KOMALA],[a.DAY]:[e.EXEGGUTOR,e.TROPIUS,e.CHERRIM,e.LEAVANNY,e.KOMALA],[a.DUSK]:[e.BRELOOM,e.TANGROWTH,e.AMOONGUSS,e.PANGORO],[a.NIGHT]:[e.BRELOOM,e.TANGROWTH,e.AMOONGUSS,e.PANGORO],[a.ALL]:[e.SEVIPER,e.AMBIPOM,e.CARNIVINE,e.YANMEGA,e.GALVANTULA,e.PYROAR,e.TOUCANNON,e.LURANTIS,e.FALINKS]},6:{[a.DAWN]:[e.AMOONGUSS,e.GALAR_RAPIDASH],[a.DAY]:[e.AMOONGUSS],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.KANGASKHAN,e.SCIZOR,e.SLAKING,e.LEAFEON,e.SERPERIOR,e.RILLABOOM]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.TAPU_LELE,e.BUZZWOLE,e.ZARUDE,e.MUNKIDORI]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.KLEAVOR]}},[n.FAIRY_CAVE]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.JIGGLYPUFF],30:[e.WIGGLYTUFF]},{1:[e.MARILL],18:[e.AZUMARILL]},e.MAWILE,{1:[e.SPRITZEE],40:[e.AROMATISSE]},{1:[e.SWIRLIX],40:[e.SLURPUFF]},{1:[e.CUTIEFLY],25:[e.RIBOMBEE]},{1:[e.MORELULL],24:[e.SHIINOTIC]},{1:[e.MILCERY],30:[e.ALCREMIE]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.CLEFAIRY,e.TOGETIC,{1:[e.RALTS],20:[e.KIRLIA],30:[e.GARDEVOIR]},e.CARBINK,e.COMFEY,{1:[e.HATENNA],32:[e.HATTREM],42:[e.HATTERENE]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.AUDINO,e.ETERNAL_FLOETTE]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.DIANCIE,e.ENAMORUS]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.WIGGLYTUFF,e.MAWILE,e.TOGEKISS,e.AUDINO,e.AROMATISSE,e.SLURPUFF,e.CARBINK,e.RIBOMBEE,e.SHIINOTIC,e.COMFEY,e.HATTERENE,e.ALCREMIE]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.ETERNAL_FLOETTE]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.DIANCIE,e.ENAMORUS]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.XERNEAS]}},[n.TEMPLE]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.GASTLY],25:[e.HAUNTER]},{1:[e.NATU],25:[e.XATU]},{1:[e.DUSKULL],37:[e.DUSCLOPS]},{1:[e.YAMASK],34:[e.COFAGRIGUS]},{1:[e.GOLETT],43:[e.GOLURK]},{1:[e.HONEDGE],35:[e.DOUBLADE]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.CUBONE],28:[e.MAROWAK]},{1:[e.BALTOY],36:[e.CLAYDOL]},{1:[e.CHINGLING],20:[e.CHIMECHO]},{1:[e.SKORUPI],40:[e.DRAPION]},{1:[e.LITWICK],41:[e.LAMPENT]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.GIMMIGHOUL],40:[e.GHOLDENGO]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.HOOPA,e.TAPU_KOKO]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.CHIMECHO,e.COFAGRIGUS,e.GOLURK,e.AEGISLASH]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.GHOLDENGO]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.HOOPA,e.TAPU_KOKO]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.REGIGIGAS]}},[n.SLUM]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[{1:[e.PATRAT],20:[e.WATCHOG]}],[a.NIGHT]:[{1:[e.PATRAT],20:[e.WATCHOG]}],[a.ALL]:[{1:[e.RATTATA],20:[e.RATICATE]},{1:[e.GRIMER],38:[e.MUK]},{1:[e.KOFFING],35:[e.WEEZING]},{1:[e.TRUBBISH],36:[e.GARBODOR]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[{1:[e.STUNKY],34:[e.SKUNTANK]}],[a.NIGHT]:[{1:[e.STUNKY],34:[e.SKUNTANK]}],[a.ALL]:[{1:[e.BURMY],20:[e.WORMADAM]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[e.TOXTRICITY,{1:[e.GALAR_LINOONE],65:[e.OBSTAGOON]},e.GALAR_ZIGZAGOON],[a.NIGHT]:[e.TOXTRICITY,{1:[e.GALAR_LINOONE],65:[e.OBSTAGOON]},e.GALAR_ZIGZAGOON],[a.ALL]:[{1:[e.VAROOM],40:[e.REVAVROOM]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.GUZZLORD]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[e.SKUNTANK,e.WATCHOG],[a.NIGHT]:[e.SKUNTANK,e.WATCHOG],[a.ALL]:[e.MUK,e.WEEZING,e.WORMADAM,e.GARBODOR]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[e.TOXTRICITY,e.OBSTAGOON],[a.NIGHT]:[e.TOXTRICITY,e.OBSTAGOON],[a.ALL]:[e.REVAVROOM,e.GALAR_WEEZING]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.GUZZLORD]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]}},[n.SNOWY_FOREST]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[e.SNEASEL,{1:[e.TEDDIURSA],30:[e.URSARING]},{1:[e.SNOM],20:[e.FROSMOTH]}],[a.NIGHT]:[e.SNEASEL,{1:[e.TEDDIURSA],30:[e.URSARING]},{1:[e.SNOM],20:[e.FROSMOTH]}],[a.ALL]:[{1:[e.SWINUB],33:[e.PILOSWINE]},{1:[e.SNOVER],40:[e.ABOMASNOW]},e.EISCUE]},1:{[a.DAWN]:[e.SNEASEL,{1:[e.TEDDIURSA],30:[e.URSARING]},e.STANTLER],[a.DAY]:[e.SNEASEL,{1:[e.TEDDIURSA],30:[e.URSARING]},e.STANTLER],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},2:{[a.DAWN]:[{1:[e.GALAR_DARUMAKA],30:[e.GALAR_DARMANITAN]}],[a.DAY]:[{1:[e.GALAR_DARUMAKA],30:[e.GALAR_DARMANITAN]}],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.DELIBIRD,{1:[e.ALOLA_SANDSHREW],30:[e.ALOLA_SANDSLASH]},{1:[e.ALOLA_VULPIX],30:[e.ALOLA_NINETALES]}]},3:{[a.DAWN]:[e.HISUI_SNEASEL],[a.DAY]:[e.HISUI_SNEASEL],[a.DUSK]:[{1:[e.HISUI_ZORUA],30:[e.HISUI_ZOROARK]}],[a.NIGHT]:[{1:[e.HISUI_ZORUA],30:[e.HISUI_ZOROARK]}],[a.ALL]:[{1:[e.GALAR_MR_MIME],42:[e.MR_RIME]},e.ARCTOZOLT,e.HISUI_AVALUGG]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.GLASTRIER,e.CHIEN_PAO,e.GALAR_ARTICUNO]},5:{[a.DAWN]:[e.WYRDEER],[a.DAY]:[e.WYRDEER],[a.DUSK]:[e.FROSMOTH],[a.NIGHT]:[e.FROSMOTH],[a.ALL]:[e.ABOMASNOW,e.URSALUNA]},6:{[a.DAWN]:[e.SNEASLER,e.GALAR_DARMANITAN],[a.DAY]:[e.SNEASLER,e.GALAR_DARMANITAN],[a.DUSK]:[e.HISUI_ZOROARK],[a.NIGHT]:[e.HISUI_ZOROARK],[a.ALL]:[e.MR_RIME,e.ARCTOZOLT,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.GLASTRIER,e.CHIEN_PAO]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.ZACIAN,e.GALAR_ARTICUNO]}},[n.ISLAND]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[{1:[e.ALOLA_RATTATA],30:[e.ALOLA_RATICATE]},{1:[e.ALOLA_MEOWTH],30:[e.ALOLA_PERSIAN]}],[a.NIGHT]:[{1:[e.ALOLA_RATTATA],30:[e.ALOLA_RATICATE]},{1:[e.ALOLA_MEOWTH],30:[e.ALOLA_PERSIAN]}],[a.ALL]:[e.ORICORIO,{1:[e.ALOLA_SANDSHREW],30:[e.ALOLA_SANDSLASH]},{1:[e.ALOLA_VULPIX],30:[e.ALOLA_NINETALES]},{1:[e.ALOLA_DIGLETT],26:[e.ALOLA_DUGTRIO]},{1:[e.ALOLA_GEODUDE],25:[e.ALOLA_GRAVELER],40:[e.ALOLA_GOLEM]},{1:[e.ALOLA_GRIMER],38:[e.ALOLA_MUK]}]},1:{[a.DAWN]:[e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR],[a.DAY]:[e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR],[a.DUSK]:[e.ALOLA_MAROWAK],[a.NIGHT]:[e.ALOLA_MAROWAK],[a.ALL]:[e.BRUXISH]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.BLACEPHALON]},5:{[a.DAWN]:[e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR],[a.DAY]:[e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR],[a.DUSK]:[e.ALOLA_RATICATE,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK],[a.NIGHT]:[e.ALOLA_RATICATE,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK],[a.ALL]:[e.ORICORIO,e.BRUXISH,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES,e.ALOLA_DUGTRIO,e.ALOLA_GOLEM,e.ALOLA_MUK]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.BLACEPHALON]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]}},[n.LABORATORY]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.MAGNEMITE],30:[e.MAGNETON]},{1:[e.GRIMER],38:[e.MUK]},{1:[e.VOLTORB],30:[e.ELECTRODE]},{1:[e.BRONZOR],33:[e.BRONZONG]},{1:[e.KLINK],38:[e.KLANG],49:[e.KLINKLANG]}]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[{1:[e.SOLOSIS],32:[e.DUOSION],41:[e.REUNICLUS]}]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.DITTO,{1:[e.PORYGON],30:[e.PORYGON2]}]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.ROTOM]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.TYPE_NULL]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.MUK,e.ELECTRODE,e.BRONZONG,e.MAGNEZONE,e.PORYGON_Z,e.REUNICLUS,e.KLINKLANG]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.ROTOM,e.ZYGARDE,e.SILVALLY]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.MEWTWO,e.MIRAIDON]}},[n.END]:{0:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS]},1:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.ROARING_MOON,e.IRON_VALIANT]},2:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.WALKING_WAKE,e.IRON_LEAVES,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN]},3:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},4:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},5:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[e.ETERNATUS]},6:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},7:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]},8:{[a.DAWN]:[],[a.DAY]:[],[a.DUSK]:[],[a.NIGHT]:[],[a.ALL]:[]}}},fs={[n.TOWN]:{0:[l.YOUNGSTER],1:[],2:[],3:[],4:[],5:[],6:[],7:[],8:[]},[n.PLAINS]:{0:[l.BREEDER,l.TWINS],1:[l.ACE_TRAINER,l.CYCLIST],2:[l.BLACK_BELT],3:[],4:[],5:[l.CILAN,l.CHILI,l.CRESS,l.CHEREN],6:[],7:[],8:[]},[n.GRASS]:{0:[l.BREEDER,l.SCHOOL_KID],1:[l.ACE_TRAINER,l.POKEFAN],2:[l.BLACK_BELT],3:[],4:[],5:[l.ERIKA],6:[],7:[],8:[]},[n.TALL_GRASS]:{0:[],1:[l.ACE_TRAINER,l.BREEDER,l.RANGER],2:[],3:[],4:[],5:[l.GARDENIA,l.VIOLA,l.BRASSIUS],6:[],7:[],8:[]},[n.METROPOLIS]:{0:[l.BEAUTY,l.CLERK,l.CYCLIST,l.OFFICER,l.WAITER],1:[l.BREEDER,l.DEPOT_AGENT,l.GUITARIST],2:[l.ARTIST,l.RICH_KID],3:[],4:[],5:[l.WHITNEY,l.NORMAN,l.IONO,l.LARRY],6:[],7:[],8:[]},[n.FOREST]:{0:[l.RANGER],1:[],2:[],3:[],4:[],5:[l.BUGSY,l.BURGH,l.KATY],6:[],7:[],8:[]},[n.SEA]:{0:[l.SAILOR,l.SWIMMER],1:[],2:[],3:[],4:[],5:[l.MARLON],6:[],7:[],8:[]},[n.SWAMP]:{0:[l.PARASOL_LADY],1:[l.ACE_TRAINER],2:[l.BLACK_BELT],3:[],4:[],5:[l.JANINE,l.ROXIE],6:[],7:[],8:[]},[n.BEACH]:{0:[l.FISHERMAN,l.SAILOR],1:[l.ACE_TRAINER,l.BREEDER],2:[l.BLACK_BELT],3:[],4:[],5:[l.MISTY,l.KOFU],6:[],7:[],8:[]},[n.LAKE]:{0:[l.BREEDER,l.FISHERMAN,l.PARASOL_LADY],1:[l.ACE_TRAINER],2:[l.BLACK_BELT],3:[],4:[],5:[l.CRASHER_WAKE],6:[],7:[],8:[]},[n.SEABED]:{0:[],1:[],2:[],3:[],4:[],5:[l.JUAN],6:[],7:[],8:[]},[n.MOUNTAIN]:{0:[l.BACKPACKER,l.BLACK_BELT,l.HIKER],1:[l.ACE_TRAINER,l.PILOT],2:[],3:[],4:[],5:[l.FALKNER,l.WINONA,l.SKYLA],6:[],7:[],8:[]},[n.BADLANDS]:{0:[l.BACKPACKER,l.HIKER],1:[l.ACE_TRAINER],2:[],3:[],4:[],5:[l.CLAY,l.GRANT],6:[],7:[],8:[]},[n.CAVE]:{0:[l.BACKPACKER,l.HIKER],1:[l.ACE_TRAINER,l.BLACK_BELT],2:[],3:[],4:[],5:[l.BROCK,l.ROXANNE,l.ROARK],6:[],7:[],8:[]},[n.DESERT]:{0:[l.BACKPACKER,l.SCIENTIST],1:[],2:[],3:[],4:[],5:[l.GORDIE],6:[],7:[],8:[]},[n.ICE_CAVE]:{0:[l.SNOW_WORKER],1:[],2:[],3:[],4:[],5:[l.PRYCE,l.BRYCEN,l.WULFRIC,l.GRUSHA],6:[],7:[],8:[]},[n.MEADOW]:{0:[l.BEAUTY,l.MUSICIAN,l.PARASOL_LADY],1:[l.ACE_TRAINER,l.BAKER,l.BREEDER,l.POKEFAN],2:[],3:[],4:[],5:[l.LENORA,l.MILO],6:[],7:[],8:[]},[n.POWER_PLANT]:{0:[l.GUITARIST,l.WORKER],1:[],2:[],3:[],4:[],5:[l.VOLKNER,l.ELESA,l.CLEMONT],6:[],7:[],8:[]},[n.VOLCANO]:{0:[l.FIREBREATHER],1:[],2:[],3:[],4:[],5:[l.BLAINE,l.FLANNERY,l.KABU],6:[],7:[],8:[]},[n.GRAVEYARD]:{0:[l.PSYCHIC],1:[l.HEX_MANIAC],2:[],3:[],4:[],5:[l.MORTY,l.ALLISTER,l.RYME],6:[],7:[],8:[]},[n.DOJO]:{0:[l.BLACK_BELT],1:[],2:[],3:[],4:[],5:[l.BRAWLY,l.MAYLENE,l.KORRINA,l.BEA],6:[],7:[],8:[]},[n.FACTORY]:{0:[l.WORKER],1:[],2:[],3:[],4:[],5:[l.JASMINE,l.BYRON],6:[],7:[],8:[]},[n.RUINS]:{0:[l.PSYCHIC,l.SCIENTIST],1:[l.ACE_TRAINER,l.BLACK_BELT,l.HEX_MANIAC],2:[],3:[],4:[],5:[l.SABRINA,l.TATE,l.LIZA,l.TULIP],6:[],7:[],8:[]},[n.WASTELAND]:{0:[l.VETERAN],1:[],2:[],3:[],4:[],5:[l.CLAIR,l.DRAYDEN,l.RAIHAN],6:[],7:[],8:[]},[n.ABYSS]:{0:[],1:[l.ACE_TRAINER],2:[],3:[],4:[],5:[l.MARNIE],6:[],7:[],8:[]},[n.SPACE]:{0:[],1:[],2:[],3:[],4:[],5:[l.OLYMPIA],6:[],7:[],8:[]},[n.CONSTRUCTION_SITE]:{0:[l.OFFICER,l.WORKER],1:[],2:[],3:[],4:[],5:[l.LT_SURGE,l.CHUCK,l.WATTSON],6:[],7:[],8:[]},[n.JUNGLE]:{0:[l.BACKPACKER,l.RANGER],1:[],2:[],3:[],4:[],5:[l.RAMOS],6:[],7:[],8:[]},[n.FAIRY_CAVE]:{0:[l.BEAUTY],1:[l.ACE_TRAINER,l.BREEDER],2:[],3:[],4:[],5:[l.VALERIE,l.OPAL,l.BEDE],6:[],7:[],8:[]},[n.TEMPLE]:{0:[],1:[l.ACE_TRAINER],2:[],3:[],4:[],5:[l.FANTINA],6:[],7:[],8:[]},[n.SLUM]:{0:[l.BIKER,l.OFFICER,l.ROUGHNECK],1:[l.BAKER,l.HOOLIGANS],2:[],3:[],4:[],5:[l.PIERS],6:[],7:[],8:[]},[n.SNOWY_FOREST]:{0:[l.SNOW_WORKER],1:[],2:[],3:[],4:[],5:[l.CANDICE,l.MELONY],6:[],7:[],8:[]},[n.ISLAND]:{0:[l.RICH_KID],1:[l.RICH],2:[],3:[],4:[],5:[l.NESSA],6:[],7:[],8:[]},[n.LABORATORY]:{0:[],1:[],2:[],3:[],4:[],5:[l.GIOVANNI],6:[],7:[],8:[]},[n.END]:{0:[],1:[],2:[],3:[],4:[],5:[],6:[],7:[],8:[]}};function BX(){const t=[[e.BULBASAUR,L.GRASS,L.POISON,[[n.GRASS,2]]],[e.IVYSAUR,L.GRASS,L.POISON,[[n.GRASS,2]]],[e.VENUSAUR,L.GRASS,L.POISON,[[n.GRASS,2],[n.GRASS,6]]],[e.CHARMANDER,L.FIRE,-1,[[n.VOLCANO,2]]],[e.CHARMELEON,L.FIRE,-1,[[n.VOLCANO,2]]],[e.CHARIZARD,L.FIRE,L.FLYING,[[n.VOLCANO,2],[n.VOLCANO,6]]],[e.SQUIRTLE,L.WATER,-1,[[n.LAKE,2]]],[e.WARTORTLE,L.WATER,-1,[[n.LAKE,2]]],[e.BLASTOISE,L.WATER,-1,[[n.LAKE,2],[n.LAKE,6]]],[e.CATERPIE,L.BUG,-1,[[n.TOWN,0,[a.DAWN,a.DAY]]]],[e.METAPOD,L.BUG,-1,[[n.TOWN,0,[a.DAWN,a.DAY]]]],[e.BUTTERFREE,L.BUG,L.FLYING,[[n.FOREST,0,[a.DAWN,a.DAY]]]],[e.WEEDLE,L.BUG,L.POISON,[[n.TOWN,0,[a.DUSK,a.NIGHT]]]],[e.KAKUNA,L.BUG,L.POISON,[[n.TOWN,0,[a.DUSK,a.NIGHT]]]],[e.BEEDRILL,L.BUG,L.POISON,[[n.FOREST,0,[a.DUSK,a.NIGHT]]]],[e.PIDGEY,L.NORMAL,L.FLYING,[[n.TOWN,0],[n.PLAINS,1],[n.MOUNTAIN,0]]],[e.PIDGEOTTO,L.NORMAL,L.FLYING,[[n.PLAINS,1],[n.MOUNTAIN,0]]],[e.PIDGEOT,L.NORMAL,L.FLYING,[[n.PLAINS,1],[n.MOUNTAIN,0],[n.MOUNTAIN,5]]],[e.RATTATA,L.NORMAL,-1,[[n.TOWN,0],[n.METROPOLIS,0],[n.SLUM,0]]],[e.RATICATE,L.NORMAL,-1,[[n.METROPOLIS,0],[n.SLUM,0]]],[e.SPEAROW,L.NORMAL,L.FLYING,[[n.TOWN,0],[n.PLAINS,1],[n.MOUNTAIN,0]]],[e.FEAROW,L.NORMAL,L.FLYING,[[n.PLAINS,1],[n.MOUNTAIN,0],[n.MOUNTAIN,5]]],[e.EKANS,L.POISON,-1,[[n.TOWN,1,[a.DUSK,a.NIGHT]],[n.FOREST,1],[n.SWAMP,1,[a.DAWN,a.DAY]],[n.SWAMP,0,[a.DUSK,a.NIGHT]]]],[e.ARBOK,L.POISON,-1,[[n.FOREST,1],[n.SWAMP,1,[a.DAWN,a.DAY]],[n.SWAMP,0,[a.DUSK,a.NIGHT]],[n.SWAMP,5,[a.DUSK,a.NIGHT]]]],[e.PIKACHU,L.ELECTRIC,-1,[[n.PLAINS,1],[n.METROPOLIS,1],[n.POWER_PLANT,0]]],[e.RAICHU,L.ELECTRIC,-1,[[n.POWER_PLANT,5]]],[e.SANDSHREW,L.GROUND,-1,[[n.BADLANDS,1],[n.DESERT,0]]],[e.SANDSLASH,L.GROUND,-1,[[n.BADLANDS,1],[n.DESERT,0],[n.DESERT,5]]],[e.NIDORAN_F,L.POISON,-1,[[n.TOWN,1,a.DAY],[n.TALL_GRASS,0,a.DAY]]],[e.NIDORINA,L.POISON,-1,[[n.TALL_GRASS,0,a.DAY]]],[e.NIDOQUEEN,L.POISON,L.GROUND,[[n.TALL_GRASS,5,a.DAY]]],[e.NIDORAN_M,L.POISON,-1,[[n.TOWN,1,a.DAY],[n.TALL_GRASS,0,a.DAY]]],[e.NIDORINO,L.POISON,-1,[[n.TALL_GRASS,0,a.DAY]]],[e.NIDOKING,L.POISON,L.GROUND,[[n.TALL_GRASS,5,a.DAY]]],[e.CLEFAIRY,L.FAIRY,-1,[[n.FAIRY_CAVE,1],[n.SPACE,0]]],[e.CLEFABLE,L.FAIRY,-1,[[n.SPACE,5]]],[e.VULPIX,L.FIRE,-1,[[n.TALL_GRASS,1],[n.VOLCANO,0]]],[e.NINETALES,L.FIRE,-1,[[n.VOLCANO,5]]],[e.JIGGLYPUFF,L.NORMAL,L.FAIRY,[[n.MEADOW,1],[n.FAIRY_CAVE,0]]],[e.WIGGLYTUFF,L.NORMAL,L.FAIRY,[[n.MEADOW,1],[n.FAIRY_CAVE,0],[n.FAIRY_CAVE,5]]],[e.ZUBAT,L.POISON,L.FLYING,[[n.PLAINS,0,a.NIGHT],[n.CAVE,0]]],[e.GOLBAT,L.POISON,L.FLYING,[[n.PLAINS,0,a.NIGHT],[n.CAVE,0]]],[e.ODDISH,L.GRASS,L.POISON,[[n.TOWN,1,[a.DUSK,a.NIGHT]],[n.TALL_GRASS,0,[a.DUSK,a.NIGHT]]]],[e.GLOOM,L.GRASS,L.POISON,[[n.TALL_GRASS,0,[a.DUSK,a.NIGHT]]]],[e.VILEPLUME,L.GRASS,L.POISON,[[n.TALL_GRASS,5,[a.DUSK,a.NIGHT]]]],[e.PARAS,L.BUG,L.GRASS,[[n.TOWN,1,a.NIGHT],[n.TALL_GRASS,1,a.NIGHT],[n.CAVE,0]]],[e.PARASECT,L.BUG,L.GRASS,[[n.TALL_GRASS,1,a.NIGHT],[n.CAVE,0],[n.CAVE,5]]],[e.VENONAT,L.BUG,L.POISON,[[n.TOWN,1,a.NIGHT],[n.TALL_GRASS,1,a.NIGHT],[n.FOREST,0,a.NIGHT]]],[e.VENOMOTH,L.BUG,L.POISON,[[n.TALL_GRASS,1,a.NIGHT],[n.FOREST,0,a.NIGHT],[n.FOREST,5,a.NIGHT]]],[e.DIGLETT,L.GROUND,-1,[[n.BADLANDS,0]]],[e.DUGTRIO,L.GROUND,-1,[[n.BADLANDS,0],[n.BADLANDS,5]]],[e.MEOWTH,L.NORMAL,-1,[[n.TOWN,1,[a.DUSK,a.NIGHT]],[n.PLAINS,0,[a.DUSK,a.NIGHT]]]],[e.PERSIAN,L.NORMAL,-1,[[n.PLAINS,0,[a.DUSK,a.NIGHT]],[n.PLAINS,5,[a.DUSK,a.NIGHT]]]],[e.PSYDUCK,L.WATER,-1,[[n.SWAMP,1],[n.LAKE,0]]],[e.GOLDUCK,L.WATER,-1,[[n.SWAMP,1],[n.LAKE,0],[n.LAKE,5]]],[e.MANKEY,L.FIGHTING,-1,[[n.PLAINS,1,[a.DUSK,a.NIGHT]],[n.DOJO,0]]],[e.PRIMEAPE,L.FIGHTING,-1,[[n.PLAINS,1,[a.DUSK,a.NIGHT]],[n.DOJO,0]]],[e.GROWLITHE,L.FIRE,-1,[[n.GRASS,2],[n.VOLCANO,0]]],[e.ARCANINE,L.FIRE,-1,[[n.VOLCANO,5]]],[e.POLIWAG,L.WATER,-1,[[n.SEA,1],[n.SWAMP,0]]],[e.POLIWHIRL,L.WATER,-1,[[n.SEA,1],[n.SWAMP,0]]],[e.POLIWRATH,L.WATER,L.FIGHTING,[[n.SWAMP,5]]],[e.ABRA,L.PSYCHIC,-1,[[n.TOWN,2],[n.PLAINS,2],[n.RUINS,1]]],[e.KADABRA,L.PSYCHIC,-1,[[n.PLAINS,2],[n.RUINS,1]]],[e.ALAKAZAM,L.PSYCHIC,-1,[[n.RUINS,5]]],[e.MACHOP,L.FIGHTING,-1,[[n.MOUNTAIN,1],[n.FACTORY,0],[n.CONSTRUCTION_SITE,0]]],[e.MACHOKE,L.FIGHTING,-1,[[n.MOUNTAIN,1],[n.FACTORY,0],[n.CONSTRUCTION_SITE,0]]],[e.MACHAMP,L.FIGHTING,-1,[[n.CONSTRUCTION_SITE,5]]],[e.BELLSPROUT,L.GRASS,L.POISON,[[n.TOWN,1,[a.DAWN,a.DAY]],[n.FOREST,0,[a.DAWN,a.DAY]]]],[e.WEEPINBELL,L.GRASS,L.POISON,[[n.FOREST,0,[a.DAWN,a.DAY]]]],[e.VICTREEBEL,L.GRASS,L.POISON,[[n.FOREST,5,[a.DAWN,a.DAY]]]],[e.TENTACOOL,L.WATER,L.POISON,[[n.SEA,0],[n.SEABED,1]]],[e.TENTACRUEL,L.WATER,L.POISON,[[n.SEA,0],[n.SEA,5],[n.SEABED,1]]],[e.GEODUDE,L.ROCK,L.GROUND,[[n.MOUNTAIN,1],[n.BADLANDS,0],[n.CAVE,1]]],[e.GRAVELER,L.ROCK,L.GROUND,[[n.MOUNTAIN,1],[n.BADLANDS,0],[n.CAVE,1]]],[e.GOLEM,L.ROCK,L.GROUND,[[n.BADLANDS,5]]],[e.PONYTA,L.FIRE,-1,[[n.MEADOW,1,[a.DAWN,a.DAY]],[n.VOLCANO,0]]],[e.RAPIDASH,L.FIRE,-1,[[n.MEADOW,1,[a.DAWN,a.DAY]],[n.VOLCANO,0],[n.VOLCANO,5]]],[e.SLOWPOKE,L.WATER,L.PSYCHIC,[[n.SEA,0,[a.DAWN,a.DAY]],[n.SEA,1,[a.DUSK,a.NIGHT]],[n.LAKE,1]]],[e.SLOWBRO,L.WATER,L.PSYCHIC,[[n.SEA,0,[a.DAWN,a.DAY]],[n.SEA,1,[a.DUSK,a.NIGHT]],[n.LAKE,1],[n.LAKE,5]]],[e.MAGNEMITE,L.ELECTRIC,L.STEEL,[[n.POWER_PLANT,0],[n.FACTORY,0],[n.CONSTRUCTION_SITE,0],[n.LABORATORY,0]]],[e.MAGNETON,L.ELECTRIC,L.STEEL,[[n.POWER_PLANT,0],[n.FACTORY,0],[n.CONSTRUCTION_SITE,0],[n.LABORATORY,0]]],[e.FARFETCHD,L.NORMAL,L.FLYING,[[n.PLAINS,3],[n.PLAINS,6]]],[e.DODUO,L.NORMAL,L.FLYING,[[n.PLAINS,1,[a.DAWN,a.DAY]]]],[e.DODRIO,L.NORMAL,L.FLYING,[[n.PLAINS,1,[a.DAWN,a.DAY]],[n.PLAINS,5,[a.DAWN,a.DAY]]]],[e.SEEL,L.WATER,-1,[[n.ICE_CAVE,0]]],[e.DEWGONG,L.WATER,L.ICE,[[n.ICE_CAVE,0],[n.ICE_CAVE,5]]],[e.GRIMER,L.POISON,-1,[[n.SLUM,0],[n.CONSTRUCTION_SITE,1],[n.LABORATORY,0]]],[e.MUK,L.POISON,-1,[[n.CONSTRUCTION_SITE,1],[n.SLUM,0],[n.SLUM,5],[n.LABORATORY,0],[n.LABORATORY,5]]],[e.SHELLDER,L.WATER,-1,[[n.SEA,1,[a.DUSK,a.NIGHT]],[n.BEACH,0,[a.DUSK,a.NIGHT]],[n.SEABED,1]]],[e.CLOYSTER,L.WATER,L.ICE,[[n.BEACH,5,[a.DUSK,a.NIGHT]]]],[e.GASTLY,L.GHOST,L.POISON,[[n.GRAVEYARD,0],[n.TEMPLE,0]]],[e.HAUNTER,L.GHOST,L.POISON,[[n.GRAVEYARD,0],[n.TEMPLE,0]]],[e.GENGAR,L.GHOST,L.POISON,[[n.GRAVEYARD,5]]],[e.ONIX,L.ROCK,L.GROUND,[[n.BADLANDS,2],[n.CAVE,2],[n.CAVE,5],[n.CONSTRUCTION_SITE,2]]],[e.DROWZEE,L.PSYCHIC,-1,[[n.RUINS,0]]],[e.HYPNO,L.PSYCHIC,-1,[[n.RUINS,0],[n.RUINS,5]]],[e.KRABBY,L.WATER,-1,[[n.BEACH,0]]],[e.KINGLER,L.WATER,-1,[[n.BEACH,0],[n.BEACH,5]]],[e.VOLTORB,L.ELECTRIC,-1,[[n.POWER_PLANT,0],[n.FACTORY,0],[n.LABORATORY,0]]],[e.ELECTRODE,L.ELECTRIC,-1,[[n.POWER_PLANT,0],[n.FACTORY,0],[n.LABORATORY,0],[n.LABORATORY,5]]],[e.EXEGGCUTE,L.GRASS,L.PSYCHIC,[[n.FOREST,2,[a.DAWN,a.DAY]],[n.JUNGLE,1,[a.DAWN,a.DAY]]]],[e.EXEGGUTOR,L.GRASS,L.PSYCHIC,[[n.JUNGLE,5,[a.DAWN,a.DAY]]]],[e.CUBONE,L.GROUND,-1,[[n.BADLANDS,0,a.NIGHT],[n.GRAVEYARD,1],[n.TEMPLE,1]]],[e.MAROWAK,L.GROUND,-1,[[n.BADLANDS,0,a.NIGHT],[n.GRAVEYARD,1],[n.TEMPLE,1],[n.BADLANDS,5,a.NIGHT],[n.GRAVEYARD,5,[a.DAWN,a.DAY,a.DUSK]]]],[e.HITMONLEE,L.FIGHTING,-1,[[n.DOJO,2],[n.DOJO,5],[n.CONSTRUCTION_SITE,2]]],[e.HITMONCHAN,L.FIGHTING,-1,[[n.DOJO,2],[n.DOJO,5],[n.CONSTRUCTION_SITE,2]]],[e.LICKITUNG,L.NORMAL,-1,[[n.PLAINS,3]]],[e.KOFFING,L.POISON,-1,[[n.SLUM,0],[n.CONSTRUCTION_SITE,1]]],[e.WEEZING,L.POISON,-1,[[n.SLUM,0],[n.SLUM,5],[n.CONSTRUCTION_SITE,1]]],[e.RHYHORN,L.GROUND,L.ROCK,[[n.MOUNTAIN,0,[a.DUSK,a.NIGHT]],[n.MOUNTAIN,1,[a.DAWN,a.DAY]],[n.BADLANDS,0],[n.CONSTRUCTION_SITE,1]]],[e.RHYDON,L.GROUND,L.ROCK,[[n.MOUNTAIN,0,[a.DUSK,a.NIGHT]],[n.MOUNTAIN,1,[a.DAWN,a.DAY]],[n.BADLANDS,0],[n.CONSTRUCTION_SITE,1]]],[e.CHANSEY,L.NORMAL,-1,[[n.PLAINS,3],[n.MEADOW,3]]],[e.TANGELA,L.GRASS,-1,[[n.JUNGLE,1,[a.DUSK,a.NIGHT]]]],[e.KANGASKHAN,L.NORMAL,-1,[[n.JUNGLE,3],[n.JUNGLE,6]]],[e.HORSEA,L.WATER,-1,[[n.SEA,1]]],[e.SEADRA,L.WATER,-1,[[n.SEA,1]]],[e.GOLDEEN,L.WATER,-1,[[n.LAKE,0],[n.SEA,1]]],[e.SEAKING,L.WATER,-1,[[n.LAKE,0],[n.LAKE,5],[n.SEA,1]]],[e.STARYU,L.WATER,-1,[[n.BEACH,0,[a.DAWN,a.DAY]],[n.SEA,1,[a.DAWN,a.DAY]]]],[e.STARMIE,L.WATER,L.PSYCHIC,[[n.BEACH,0,[a.DAWN,a.DAY]],[n.BEACH,5,[a.DAWN,a.DAY]],[n.SEA,1,[a.DAWN,a.DAY]]]],[e.MR_MIME,L.PSYCHIC,L.FAIRY,[[n.RUINS,2],[n.RUINS,6]]],[e.SCYTHER,L.BUG,L.FLYING,[[n.TALL_GRASS,3],[n.FOREST,2,[a.DUSK,a.NIGHT]],[n.JUNGLE,2]]],[e.JYNX,L.ICE,L.PSYCHIC,[[n.ICE_CAVE,2],[n.ICE_CAVE,6]]],[e.ELECTABUZZ,L.ELECTRIC,-1,[[n.POWER_PLANT,1]]],[e.MAGMAR,L.FIRE,-1,[[n.VOLCANO,1]]],[e.PINSIR,L.BUG,-1,[[n.TALL_GRASS,2],[n.TALL_GRASS,6]]],[e.TAUROS,L.NORMAL,-1,[[n.MEADOW,2],[n.MEADOW,5]]],[e.MAGIKARP,L.WATER,-1,[[n.SEA,0],[n.LAKE,0]]],[e.GYARADOS,L.WATER,L.FLYING,[[n.SEA,0],[n.LAKE,0],[n.LAKE,5]]],[e.LAPRAS,L.WATER,L.ICE,[[n.SEA,2],[n.ICE_CAVE,2],[n.ICE_CAVE,6]]],[e.DITTO,L.NORMAL,-1,[[n.TOWN,4],[n.PLAINS,4],[n.METROPOLIS,3],[n.CONSTRUCTION_SITE,3],[n.LABORATORY,2]]],[e.EEVEE,L.NORMAL,-1,[[n.TOWN,3],[n.PLAINS,3],[n.METROPOLIS,3],[n.MEADOW,2]]],[e.VAPOREON,L.WATER,-1,[[n.LAKE,3],[n.LAKE,6]]],[e.JOLTEON,L.ELECTRIC,-1,[[n.POWER_PLANT,3],[n.POWER_PLANT,6]]],[e.FLAREON,L.FIRE,-1,[[n.VOLCANO,3],[n.VOLCANO,6]]],[e.PORYGON,L.NORMAL,-1,[[n.FACTORY,2],[n.SPACE,3],[n.LABORATORY,2]]],[e.OMANYTE,L.ROCK,L.WATER,[[n.SEABED,3]]],[e.OMASTAR,L.ROCK,L.WATER,[[n.SEABED,3],[n.SEABED,6]]],[e.KABUTO,L.ROCK,L.WATER,[[n.SEABED,3]]],[e.KABUTOPS,L.ROCK,L.WATER,[[n.SEABED,3],[n.SEABED,6]]],[e.AERODACTYL,L.ROCK,L.FLYING,[[n.WASTELAND,3],[n.WASTELAND,6]]],[e.SNORLAX,L.NORMAL,-1,[[n.PLAINS,3],[n.PLAINS,6]]],[e.ARTICUNO,L.ICE,L.FLYING,[[n.ICE_CAVE,4],[n.ICE_CAVE,7]]],[e.ZAPDOS,L.ELECTRIC,L.FLYING,[[n.POWER_PLANT,7]]],[e.MOLTRES,L.FIRE,L.FLYING,[[n.VOLCANO,7]]],[e.DRATINI,L.DRAGON,-1,[[n.WASTELAND,2]]],[e.DRAGONAIR,L.DRAGON,-1,[[n.WASTELAND,2]]],[e.DRAGONITE,L.DRAGON,L.FLYING,[[n.WASTELAND,2],[n.WASTELAND,5]]],[e.MEWTWO,L.PSYCHIC,-1,[[n.LABORATORY,8]]],[e.MEW,L.PSYCHIC,-1,[]],[e.CHIKORITA,L.GRASS,-1,[[n.TALL_GRASS,2]]],[e.BAYLEEF,L.GRASS,-1,[[n.TALL_GRASS,2]]],[e.MEGANIUM,L.GRASS,-1,[[n.TALL_GRASS,2],[n.TALL_GRASS,6]]],[e.CYNDAQUIL,L.FIRE,-1,[[n.VOLCANO,2]]],[e.QUILAVA,L.FIRE,-1,[[n.VOLCANO,2]]],[e.TYPHLOSION,L.FIRE,-1,[[n.VOLCANO,2],[n.VOLCANO,6]]],[e.TOTODILE,L.WATER,-1,[[n.SWAMP,2]]],[e.CROCONAW,L.WATER,-1,[[n.SWAMP,2]]],[e.FERALIGATR,L.WATER,-1,[[n.SWAMP,2],[n.SWAMP,6]]],[e.SENTRET,L.NORMAL,-1,[[n.TOWN,0,[a.DAWN,a.DAY]],[n.PLAINS,0,[a.DAWN,a.DAY]]]],[e.FURRET,L.NORMAL,-1,[[n.PLAINS,0,[a.DAWN,a.DAY]],[n.PLAINS,5,[a.DAWN,a.DAY]]]],[e.HOOTHOOT,L.NORMAL,L.FLYING,[[n.TOWN,0,a.NIGHT],[n.FOREST,1,a.NIGHT]]],[e.NOCTOWL,L.NORMAL,L.FLYING,[[n.FOREST,1,a.NIGHT],[n.FOREST,5,a.NIGHT]]],[e.LEDYBA,L.BUG,L.FLYING,[[n.TOWN,0,a.DAWN],[n.MEADOW,0,a.DAWN]]],[e.LEDIAN,L.BUG,L.FLYING,[[n.MEADOW,0,a.DAWN],[n.MEADOW,5,a.DAWN]]],[e.SPINARAK,L.BUG,L.POISON,[[n.TOWN,1,a.DUSK],[n.TOWN,0,a.NIGHT],[n.TALL_GRASS,1,a.NIGHT],[n.FOREST,1,a.DUSK],[n.FOREST,0,a.NIGHT],[n.JUNGLE,1,a.DUSK],[n.JUNGLE,0,a.NIGHT]]],[e.ARIADOS,L.BUG,L.POISON,[[n.TALL_GRASS,1,a.NIGHT],[n.FOREST,1,a.DUSK],[n.FOREST,0,a.NIGHT],[n.FOREST,5,[a.DUSK,a.NIGHT]],[n.JUNGLE,1,a.DUSK],[n.JUNGLE,0,a.NIGHT]]],[e.CROBAT,L.POISON,L.FLYING,[[n.CAVE,5]]],[e.CHINCHOU,L.WATER,L.ELECTRIC,[[n.SEA,1,a.NIGHT],[n.SEABED,0]]],[e.LANTURN,L.WATER,L.ELECTRIC,[[n.SEA,1,a.NIGHT],[n.SEABED,0],[n.SEABED,5]]],[e.PICHU,L.ELECTRIC,-1,[]],[e.CLEFFA,L.FAIRY,-1,[]],[e.IGGLYBUFF,L.NORMAL,L.FAIRY,[]],[e.TOGEPI,L.FAIRY,-1,[]],[e.TOGETIC,L.FAIRY,L.FLYING,[[n.FAIRY_CAVE,1]]],[e.NATU,L.PSYCHIC,L.FLYING,[[n.MOUNTAIN,1],[n.RUINS,0],[n.TEMPLE,0]]],[e.XATU,L.PSYCHIC,L.FLYING,[[n.MOUNTAIN,1],[n.RUINS,0],[n.RUINS,5],[n.TEMPLE,0]]],[e.MAREEP,L.ELECTRIC,-1,[[n.MEADOW,1],[n.POWER_PLANT,2]]],[e.FLAAFFY,L.ELECTRIC,-1,[[n.MEADOW,1],[n.POWER_PLANT,2]]],[e.AMPHAROS,L.ELECTRIC,-1,[[n.MEADOW,1],[n.POWER_PLANT,6]]],[e.BELLOSSOM,L.GRASS,-1,[[n.TALL_GRASS,6,[a.DAWN,a.DAY]]]],[e.MARILL,L.WATER,L.FAIRY,[[n.LAKE,0,[a.DUSK,a.NIGHT]],[n.FAIRY_CAVE,0]]],[e.AZUMARILL,L.WATER,L.FAIRY,[[n.LAKE,0,[a.DUSK,a.NIGHT]],[n.LAKE,5,[a.DUSK,a.NIGHT]],[n.FAIRY_CAVE,0]]],[e.SUDOWOODO,L.ROCK,-1,[[n.GRASS,3],[n.GRASS,6]]],[e.POLITOED,L.WATER,-1,[[n.SWAMP,3],[n.SWAMP,6]]],[e.HOPPIP,L.GRASS,L.FLYING,[[n.TOWN,0,[a.DAWN,a.DAY]],[n.GRASS,0,[a.DAWN,a.DAY]]]],[e.SKIPLOOM,L.GRASS,L.FLYING,[[n.GRASS,0,[a.DAWN,a.DAY]]]],[e.JUMPLUFF,L.GRASS,L.FLYING,[[n.GRASS,5,[a.DAWN,a.DAY]]]],[e.AIPOM,L.NORMAL,-1,[[n.JUNGLE,0]]],[e.SUNKERN,L.GRASS,-1,[[n.TOWN,0,[a.DAWN,a.DAY]],[n.GRASS,0,[a.DAWN,a.DAY]]]],[e.SUNFLORA,L.GRASS,-1,[[n.GRASS,5,[a.DAWN,a.DAY]]]],[e.YANMA,L.BUG,L.FLYING,[[n.JUNGLE,2]]],[e.WOOPER,L.WATER,L.GROUND,[[n.LAKE,1],[n.SWAMP,0,[a.DAWN,a.DAY]]]],[e.QUAGSIRE,L.WATER,L.GROUND,[[n.LAKE,1],[n.SWAMP,0,[a.DAWN,a.DAY]],[n.SWAMP,5,[a.DAWN,a.DAY]]]],[e.ESPEON,L.PSYCHIC,-1,[[n.RUINS,3,a.DAY],[n.RUINS,6,a.DAY]]],[e.UMBREON,L.DARK,-1,[[n.ABYSS,3],[n.ABYSS,6]]],[e.MURKROW,L.DARK,L.FLYING,[[n.MOUNTAIN,2,a.NIGHT],[n.ABYSS,0]]],[e.SLOWKING,L.WATER,L.PSYCHIC,[[n.LAKE,3],[n.LAKE,6]]],[e.MISDREAVUS,L.GHOST,-1,[[n.GRAVEYARD,2]]],[e.UNOWN,L.PSYCHIC,-1,[[n.RUINS,0]]],[e.WOBBUFFET,L.PSYCHIC,-1,[[n.RUINS,2],[n.RUINS,6]]],[e.GIRAFARIG,L.NORMAL,L.PSYCHIC,[[n.TALL_GRASS,2]]],[e.PINECO,L.BUG,-1,[[n.FOREST,0,[a.DUSK,a.NIGHT]]]],[e.FORRETRESS,L.BUG,L.STEEL,[[n.FOREST,0,[a.DUSK,a.NIGHT]],[n.FOREST,5,[a.DUSK,a.NIGHT]]]],[e.DUNSPARCE,L.NORMAL,-1,[[n.PLAINS,3]]],[e.GLIGAR,L.GROUND,L.FLYING,[[n.BADLANDS,2]]],[e.STEELIX,L.STEEL,L.GROUND,[[n.BADLANDS,6]]],[e.SNUBBULL,L.FAIRY,-1,[[n.MEADOW,1,[a.DAWN,a.DAY]]]],[e.GRANBULL,L.FAIRY,-1,[[n.MEADOW,1,[a.DAWN,a.DAY]],[n.MEADOW,5,[a.DAWN,a.DAY]]]],[e.QWILFISH,L.WATER,L.POISON,[[n.SEABED,2],[n.SEABED,5]]],[e.SCIZOR,L.BUG,L.STEEL,[[n.JUNGLE,6]]],[e.SHUCKLE,L.BUG,L.ROCK,[[n.CAVE,3],[n.CAVE,6]]],[e.HERACROSS,L.BUG,L.FIGHTING,[[n.FOREST,2],[n.FOREST,6]]],[e.SNEASEL,L.DARK,L.ICE,[[n.ICE_CAVE,1],[n.SNOWY_FOREST,0,[a.DUSK,a.NIGHT]],[n.SNOWY_FOREST,1,[a.DAWN,a.DAY]]]],[e.TEDDIURSA,L.NORMAL,-1,[[n.FOREST,1],[n.CAVE,0],[n.SNOWY_FOREST,0,[a.DUSK,a.NIGHT]],[n.SNOWY_FOREST,1,[a.DAWN,a.DAY]]]],[e.URSARING,L.NORMAL,-1,[[n.FOREST,1],[n.CAVE,0],[n.CAVE,5],[n.SNOWY_FOREST,0,[a.DUSK,a.NIGHT]],[n.SNOWY_FOREST,1,[a.DAWN,a.DAY]]]],[e.SLUGMA,L.FIRE,-1,[[n.MOUNTAIN,1],[n.VOLCANO,0]]],[e.MAGCARGO,L.FIRE,L.ROCK,[[n.MOUNTAIN,1],[n.VOLCANO,0],[n.VOLCANO,5]]],[e.SWINUB,L.ICE,L.GROUND,[[n.ICE_CAVE,0],[n.SNOWY_FOREST,0]]],[e.PILOSWINE,L.ICE,L.GROUND,[[n.ICE_CAVE,0],[n.SNOWY_FOREST,0]]],[e.CORSOLA,L.WATER,L.ROCK,[[n.SEABED,2],[n.SEABED,5]]],[e.REMORAID,L.WATER,-1,[[n.SEABED,0]]],[e.OCTILLERY,L.WATER,-1,[[n.SEABED,2],[n.SEABED,5]]],[e.DELIBIRD,L.ICE,L.FLYING,[[n.ICE_CAVE,3],[n.SNOWY_FOREST,2]]],[e.MANTINE,L.WATER,L.FLYING,[[n.SEABED,2],[n.SEABED,5]]],[e.SKARMORY,L.STEEL,L.FLYING,[[n.MOUNTAIN,2],[n.MOUNTAIN,5]]],[e.HOUNDOUR,L.DARK,L.FIRE,[[n.METROPOLIS,0,a.NIGHT],[n.ABYSS,0]]],[e.HOUNDOOM,L.DARK,L.FIRE,[[n.METROPOLIS,0,a.NIGHT],[n.ABYSS,0],[n.ABYSS,5]]],[e.KINGDRA,L.WATER,L.DRAGON,[[n.SEA,3],[n.SEA,6]]],[e.PHANPY,L.GROUND,-1,[[n.BADLANDS,0,[a.DAWN,a.DAY]]]],[e.DONPHAN,L.GROUND,-1,[[n.BADLANDS,0,[a.DAWN,a.DAY]],[n.BADLANDS,5,[a.DAWN,a.DAY]]]],[e.PORYGON2,L.NORMAL,-1,[[n.FACTORY,2],[n.SPACE,3],[n.LABORATORY,2]]],[e.STANTLER,L.NORMAL,-1,[[n.FOREST,2,[a.DAWN,a.DAY]],[n.FOREST,6,[a.DAWN,a.DAY]],[n.SNOWY_FOREST,1,[a.DAWN,a.DAY]]]],[e.SMEARGLE,L.NORMAL,-1,[[n.METROPOLIS,3]]],[e.TYROGUE,L.FIGHTING,-1,[]],[e.HITMONTOP,L.FIGHTING,-1,[[n.DOJO,3],[n.DOJO,6],[n.CONSTRUCTION_SITE,3]]],[e.SMOOCHUM,L.ICE,L.PSYCHIC,[]],[e.ELEKID,L.ELECTRIC,-1,[]],[e.MAGBY,L.FIRE,-1,[]],[e.MILTANK,L.NORMAL,-1,[[n.MEADOW,2],[n.MEADOW,5]]],[e.BLISSEY,L.NORMAL,-1,[[n.MEADOW,6]]],[e.RAIKOU,L.ELECTRIC,-1,[[n.POWER_PLANT,4],[n.POWER_PLANT,7]]],[e.ENTEI,L.FIRE,-1,[[n.VOLCANO,4],[n.VOLCANO,7]]],[e.SUICUNE,L.WATER,-1,[[n.LAKE,4],[n.LAKE,7]]],[e.LARVITAR,L.ROCK,L.GROUND,[[n.MOUNTAIN,3],[n.WASTELAND,0,[a.DUSK,a.NIGHT]]]],[e.PUPITAR,L.ROCK,L.GROUND,[[n.MOUNTAIN,3],[n.WASTELAND,0,[a.DUSK,a.NIGHT]]]],[e.TYRANITAR,L.ROCK,L.DARK,[[n.WASTELAND,0,[a.DUSK,a.NIGHT]],[n.WASTELAND,5,[a.DUSK,a.NIGHT]]]],[e.LUGIA,L.PSYCHIC,L.FLYING,[[n.SEA,8]]],[e.HO_OH,L.FIRE,L.FLYING,[[n.MOUNTAIN,8]]],[e.CELEBI,L.PSYCHIC,L.GRASS,[]],[e.TREECKO,L.GRASS,-1,[[n.FOREST,2]]],[e.GROVYLE,L.GRASS,-1,[[n.FOREST,2]]],[e.SCEPTILE,L.GRASS,-1,[[n.FOREST,2],[n.FOREST,6]]],[e.TORCHIC,L.FIRE,-1,[[n.MOUNTAIN,2]]],[e.COMBUSKEN,L.FIRE,L.FIGHTING,[[n.MOUNTAIN,2]]],[e.BLAZIKEN,L.FIRE,L.FIGHTING,[[n.MOUNTAIN,2],[n.MOUNTAIN,6]]],[e.MUDKIP,L.WATER,-1,[[n.SWAMP,2]]],[e.MARSHTOMP,L.WATER,L.GROUND,[[n.SWAMP,2]]],[e.SWAMPERT,L.WATER,L.GROUND,[[n.SWAMP,2],[n.SWAMP,6]]],[e.POOCHYENA,L.DARK,-1,[[n.TOWN,1,[a.DAWN,a.DAY]],[n.TOWN,0,[a.DUSK,a.NIGHT]],[n.PLAINS,1,[a.DAWN,a.DAY]],[n.PLAINS,0,[a.DUSK,a.NIGHT]]]],[e.MIGHTYENA,L.DARK,-1,[[n.PLAINS,1,[a.DAWN,a.DAY]],[n.PLAINS,0,[a.DUSK,a.NIGHT]],[n.PLAINS,5,[a.DUSK,a.NIGHT]]]],[e.ZIGZAGOON,L.NORMAL,-1,[[n.TOWN,0],[n.PLAINS,0],[n.METROPOLIS,0]]],[e.LINOONE,L.NORMAL,-1,[[n.PLAINS,0],[n.PLAINS,5],[n.METROPOLIS,0]]],[e.WURMPLE,L.BUG,-1,[[n.TOWN,0]]],[e.SILCOON,L.BUG,-1,[[n.TOWN,0,a.DAY]]],[e.BEAUTIFLY,L.BUG,L.FLYING,[[n.FOREST,0,a.DAY],[n.FOREST,5,a.DAY]]],[e.CASCOON,L.BUG,-1,[[n.TOWN,0,a.NIGHT]]],[e.DUSTOX,L.BUG,L.POISON,[[n.FOREST,0,a.NIGHT],[n.FOREST,5,a.NIGHT]]],[e.LOTAD,L.WATER,L.GRASS,[[n.TOWN,1,[a.DAWN,a.DAY]],[n.LAKE,0,[a.DAWN,a.DAY]],[n.SWAMP,0,[a.DAWN,a.DAY]]]],[e.LOMBRE,L.WATER,L.GRASS,[[n.LAKE,0,[a.DAWN,a.DAY]],[n.SWAMP,0,[a.DAWN,a.DAY]]]],[e.LUDICOLO,L.WATER,L.GRASS,[[n.SWAMP,5,[a.DAWN,a.DAY]]]],[e.SEEDOT,L.GRASS,-1,[[n.TOWN,1,[a.DUSK,a.NIGHT]],[n.GRASS,0,[a.DUSK,a.NIGHT]],[n.FOREST,0,[a.DUSK,a.NIGHT]]]],[e.NUZLEAF,L.GRASS,L.DARK,[[n.GRASS,0,[a.DUSK,a.NIGHT]],[n.FOREST,0,[a.DUSK,a.NIGHT]]]],[e.SHIFTRY,L.GRASS,L.DARK,[[n.FOREST,5,[a.DUSK,a.NIGHT]]]],[e.TAILLOW,L.NORMAL,L.FLYING,[[n.TOWN,0],[n.MOUNTAIN,0,[a.DAWN,a.DAY]]]],[e.SWELLOW,L.NORMAL,L.FLYING,[[n.MOUNTAIN,0,[a.DAWN,a.DAY]],[n.MOUNTAIN,5,[a.DAWN,a.DAY]]]],[e.WINGULL,L.WATER,L.FLYING,[[n.SEA,0,[a.DAWN,a.DAY]]]],[e.PELIPPER,L.WATER,L.FLYING,[[n.SEA,0,[a.DAWN,a.DAY]],[n.SEA,5,[a.DAWN,a.DAY]]]],[e.RALTS,L.PSYCHIC,L.FAIRY,[[n.TOWN,3],[n.MEADOW,1],[n.FAIRY_CAVE,1]]],[e.KIRLIA,L.PSYCHIC,L.FAIRY,[[n.MEADOW,1],[n.FAIRY_CAVE,1]]],[e.GARDEVOIR,L.PSYCHIC,L.FAIRY,[[n.MEADOW,1],[n.MEADOW,5],[n.FAIRY_CAVE,1]]],[e.SURSKIT,L.BUG,L.WATER,[[n.TOWN,2],[n.LAKE,1]]],[e.MASQUERAIN,L.BUG,L.FLYING,[[n.LAKE,1],[n.LAKE,5]]],[e.SHROOMISH,L.GRASS,-1,[[n.TOWN,1,[a.DUSK,a.NIGHT]],[n.GRASS,0,[a.DUSK,a.NIGHT]],[n.FOREST,0,[a.DUSK,a.NIGHT]],[n.JUNGLE,0,[a.DUSK,a.NIGHT]]]],[e.BRELOOM,L.GRASS,L.FIGHTING,[[n.GRASS,0,[a.DUSK,a.NIGHT]],[n.FOREST,0,[a.DUSK,a.NIGHT]],[n.FOREST,5,[a.DUSK,a.NIGHT]],[n.JUNGLE,5,[a.DUSK,a.NIGHT]]]],[e.SLAKOTH,L.NORMAL,-1,[[n.JUNGLE,2]]],[e.VIGOROTH,L.NORMAL,-1,[[n.JUNGLE,2]]],[e.SLAKING,L.NORMAL,-1,[[n.JUNGLE,2],[n.JUNGLE,6]]],[e.NINCADA,L.BUG,L.GROUND,[[n.TOWN,1],[n.TALL_GRASS,0]]],[e.NINJASK,L.BUG,L.FLYING,[[n.TALL_GRASS,0],[n.TALL_GRASS,5]]],[e.SHEDINJA,L.BUG,L.GHOST,[[n.TALL_GRASS,3]]],[e.WHISMUR,L.NORMAL,-1,[[n.TOWN,1],[n.CAVE,0]]],[e.LOUDRED,L.NORMAL,-1,[[n.CAVE,0]]],[e.EXPLOUD,L.NORMAL,-1,[[n.CAVE,0],[n.CAVE,5]]],[e.MAKUHITA,L.FIGHTING,-1,[[n.CAVE,1],[n.DOJO,0]]],[e.HARIYAMA,L.FIGHTING,-1,[[n.CAVE,1],[n.DOJO,0],[n.DOJO,5]]],[e.AZURILL,L.NORMAL,L.FAIRY,[]],[e.NOSEPASS,L.ROCK,-1,[[n.CAVE,1]]],[e.SKITTY,L.NORMAL,-1,[[n.TOWN,1,[a.DAWN,a.DAY]],[n.MEADOW,1,[a.DAWN,a.DAY]]]],[e.DELCATTY,L.NORMAL,-1,[[n.MEADOW,1,[a.DAWN,a.DAY]],[n.MEADOW,5,[a.DAWN,a.DAY]]]],[e.SABLEYE,L.DARK,L.GHOST,[[n.ABYSS,0],[n.ABYSS,5]]],[e.MAWILE,L.STEEL,L.FAIRY,[[n.FAIRY_CAVE,0],[n.FAIRY_CAVE,5]]],[e.ARON,L.STEEL,L.ROCK,[[n.MOUNTAIN,1,[a.DAWN,a.DAY]],[n.MOUNTAIN,0,[a.DUSK,a.NIGHT]]]],[e.LAIRON,L.STEEL,L.ROCK,[[n.MOUNTAIN,1,[a.DAWN,a.DAY]],[n.MOUNTAIN,0,[a.DUSK,a.NIGHT]]]],[e.AGGRON,L.STEEL,L.ROCK,[[n.MOUNTAIN,1,[a.DAWN,a.DAY]],[n.MOUNTAIN,0,[a.DUSK,a.NIGHT]],[n.MOUNTAIN,5]]],[e.MEDITITE,L.FIGHTING,L.PSYCHIC,[[n.DOJO,0]]],[e.MEDICHAM,L.FIGHTING,L.PSYCHIC,[[n.DOJO,0],[n.DOJO,5]]],[e.ELECTRIKE,L.ELECTRIC,-1,[[n.POWER_PLANT,0]]],[e.MANECTRIC,L.ELECTRIC,-1,[[n.POWER_PLANT,0],[n.POWER_PLANT,5]]],[e.PLUSLE,L.ELECTRIC,-1,[[n.POWER_PLANT,1]]],[e.MINUN,L.ELECTRIC,-1,[[n.POWER_PLANT,1]]],[e.VOLBEAT,L.BUG,-1,[[n.MEADOW,2,a.NIGHT]]],[e.ILLUMISE,L.BUG,-1,[[n.MEADOW,2,a.NIGHT]]],[e.ROSELIA,L.GRASS,L.POISON,[[n.FOREST,1,[a.DAWN,a.DAY]],[n.MEADOW,0,[a.DAWN,a.DAY]]]],[e.GULPIN,L.POISON,-1,[[n.SWAMP,0]]],[e.SWALOT,L.POISON,-1,[[n.SWAMP,0],[n.SWAMP,5]]],[e.CARVANHA,L.WATER,L.DARK,[[n.SEA,1,[a.DUSK,a.NIGHT]]]],[e.SHARPEDO,L.WATER,L.DARK,[[n.SEA,1,[a.DUSK,a.NIGHT]],[n.SEA,5,[a.DUSK,a.NIGHT]]]],[e.WAILMER,L.WATER,-1,[[n.SEA,1],[n.SEABED,1]]],[e.WAILORD,L.WATER,-1,[[n.SEA,1],[n.SEABED,1],[n.SEABED,5]]],[e.NUMEL,L.FIRE,L.GROUND,[[n.BADLANDS,1],[n.VOLCANO,0]]],[e.CAMERUPT,L.FIRE,L.GROUND,[[n.BADLANDS,1],[n.VOLCANO,0],[n.VOLCANO,5]]],[e.TORKOAL,L.FIRE,-1,[[n.VOLCANO,1],[n.VOLCANO,5]]],[e.SPOINK,L.PSYCHIC,-1,[[n.MOUNTAIN,2],[n.RUINS,0]]],[e.GRUMPIG,L.PSYCHIC,-1,[[n.MOUNTAIN,2],[n.RUINS,0],[n.RUINS,5]]],[e.SPINDA,L.NORMAL,-1,[[n.MEADOW,2]]],[e.TRAPINCH,L.GROUND,-1,[[n.DESERT,0,[a.DAWN,a.DAY]]]],[e.VIBRAVA,L.GROUND,L.DRAGON,[[n.DESERT,2,[a.DAWN,a.DAY]],[n.WASTELAND,0]]],[e.FLYGON,L.GROUND,L.DRAGON,[[n.DESERT,2,[a.DAWN,a.DAY]],[n.WASTELAND,0],[n.WASTELAND,5]]],[e.CACNEA,L.GRASS,-1,[[n.DESERT,0,[a.DUSK,a.NIGHT]]]],[e.CACTURNE,L.GRASS,L.DARK,[[n.DESERT,0,[a.DUSK,a.NIGHT]],[n.DESERT,5,[a.DUSK,a.NIGHT]]]],[e.SWABLU,L.NORMAL,L.FLYING,[[n.MOUNTAIN,0,[a.DAWN,a.DAY]],[n.WASTELAND,1]]],[e.ALTARIA,L.DRAGON,L.FLYING,[[n.MOUNTAIN,0,[a.DAWN,a.DAY]],[n.MOUNTAIN,5,[a.DAWN,a.DAY]],[n.WASTELAND,1]]],[e.ZANGOOSE,L.NORMAL,-1,[[n.TALL_GRASS,2],[n.TALL_GRASS,5]]],[e.SEVIPER,L.POISON,-1,[[n.JUNGLE,2],[n.JUNGLE,5]]],[e.LUNATONE,L.ROCK,L.PSYCHIC,[[n.SPACE,0,a.NIGHT],[n.SPACE,5,a.NIGHT]]],[e.SOLROCK,L.ROCK,L.PSYCHIC,[[n.SPACE,0,a.DAY],[n.SPACE,5,a.DAY]]],[e.BARBOACH,L.WATER,L.GROUND,[[n.SWAMP,1]]],[e.WHISCASH,L.WATER,L.GROUND,[[n.SWAMP,1],[n.SWAMP,5]]],[e.CORPHISH,L.WATER,-1,[[n.BEACH,0]]],[e.CRAWDAUNT,L.WATER,L.DARK,[[n.BEACH,0],[n.BEACH,5]]],[e.BALTOY,L.GROUND,L.PSYCHIC,[[n.RUINS,0],[n.SPACE,1],[n.TEMPLE,1]]],[e.CLAYDOL,L.GROUND,L.PSYCHIC,[[n.RUINS,0],[n.RUINS,5],[n.SPACE,1],[n.TEMPLE,1]]],[e.LILEEP,L.ROCK,L.GRASS,[[n.DESERT,3]]],[e.CRADILY,L.ROCK,L.GRASS,[[n.DESERT,3],[n.DESERT,6]]],[e.ANORITH,L.ROCK,L.BUG,[[n.DESERT,3]]],[e.ARMALDO,L.ROCK,L.BUG,[[n.DESERT,3],[n.DESERT,6]]],[e.FEEBAS,L.WATER,-1,[[n.SEABED,4]]],[e.MILOTIC,L.WATER,-1,[[n.SEABED,7]]],[e.CASTFORM,L.NORMAL,-1,[[n.METROPOLIS,4],[n.METROPOLIS,6]]],[e.KECLEON,L.NORMAL,-1,[[n.TALL_GRASS,2],[n.TALL_GRASS,5]]],[e.SHUPPET,L.GHOST,-1,[[n.GRAVEYARD,0]]],[e.BANETTE,L.GHOST,-1,[[n.GRAVEYARD,0],[n.GRAVEYARD,5]]],[e.DUSKULL,L.GHOST,-1,[[n.GRAVEYARD,0],[n.TEMPLE,0]]],[e.DUSCLOPS,L.GHOST,-1,[[n.GRAVEYARD,0],[n.TEMPLE,0]]],[e.TROPIUS,L.GRASS,L.FLYING,[[n.TALL_GRASS,2],[n.FOREST,2],[n.JUNGLE,1,[a.DAWN,a.DAY]],[n.JUNGLE,5,[a.DAWN,a.DAY]]]],[e.CHIMECHO,L.PSYCHIC,-1,[[n.TEMPLE,1],[n.TEMPLE,5]]],[e.ABSOL,L.DARK,-1,[[n.ABYSS,2],[n.ABYSS,5]]],[e.WYNAUT,L.PSYCHIC,-1,[]],[e.SNORUNT,L.ICE,-1,[[n.ICE_CAVE,1]]],[e.GLALIE,L.ICE,-1,[[n.ICE_CAVE,1],[n.ICE_CAVE,5]]],[e.SPHEAL,L.ICE,L.WATER,[[n.ICE_CAVE,1]]],[e.SEALEO,L.ICE,L.WATER,[[n.ICE_CAVE,1]]],[e.WALREIN,L.ICE,L.WATER,[[n.ICE_CAVE,1],[n.ICE_CAVE,5]]],[e.CLAMPERL,L.WATER,-1,[[n.SEABED,0]]],[e.HUNTAIL,L.WATER,-1,[[n.SEABED,5]]],[e.GOREBYSS,L.WATER,-1,[[n.SEABED,5]]],[e.RELICANTH,L.WATER,L.ROCK,[[n.SEABED,3],[n.SEABED,6]]],[e.LUVDISC,L.WATER,-1,[[n.SEABED,1],[n.SEABED,5]]],[e.BAGON,L.DRAGON,-1,[[n.WASTELAND,0,[a.DAWN,a.DAY]]]],[e.SHELGON,L.DRAGON,-1,[[n.WASTELAND,0,[a.DAWN,a.DAY]]]],[e.SALAMENCE,L.DRAGON,L.FLYING,[[n.WASTELAND,0,[a.DAWN,a.DAY]],[n.WASTELAND,5,[a.DAWN,a.DAY]]]],[e.BELDUM,L.STEEL,L.PSYCHIC,[[n.FACTORY,3],[n.SPACE,2]]],[e.METANG,L.STEEL,L.PSYCHIC,[[n.FACTORY,3],[n.SPACE,2]]],[e.METAGROSS,L.STEEL,L.PSYCHIC,[[n.FACTORY,3],[n.SPACE,2],[n.SPACE,6]]],[e.REGIROCK,L.ROCK,-1,[[n.DESERT,4],[n.DESERT,7]]],[e.REGICE,L.ICE,-1,[[n.ICE_CAVE,4],[n.ICE_CAVE,7]]],[e.REGISTEEL,L.STEEL,-1,[[n.RUINS,4],[n.RUINS,7]]],[e.LATIAS,L.DRAGON,L.PSYCHIC,[[n.PLAINS,4],[n.PLAINS,7]]],[e.LATIOS,L.DRAGON,L.PSYCHIC,[[n.PLAINS,4],[n.PLAINS,7]]],[e.KYOGRE,L.WATER,-1,[[n.SEABED,8]]],[e.GROUDON,L.GROUND,-1,[[n.BADLANDS,8]]],[e.RAYQUAZA,L.DRAGON,L.FLYING,[[n.SPACE,8]]],[e.JIRACHI,L.STEEL,L.PSYCHIC,[]],[e.DEOXYS,L.PSYCHIC,-1,[]],[e.TURTWIG,L.GRASS,-1,[[n.GRASS,2]]],[e.GROTLE,L.GRASS,-1,[[n.GRASS,2]]],[e.TORTERRA,L.GRASS,L.GROUND,[[n.GRASS,2],[n.GRASS,6]]],[e.CHIMCHAR,L.FIRE,-1,[[n.VOLCANO,2]]],[e.MONFERNO,L.FIRE,L.FIGHTING,[[n.VOLCANO,2]]],[e.INFERNAPE,L.FIRE,L.FIGHTING,[[n.VOLCANO,2],[n.VOLCANO,6]]],[e.PIPLUP,L.WATER,-1,[[n.SEA,2]]],[e.PRINPLUP,L.WATER,-1,[[n.SEA,2]]],[e.EMPOLEON,L.WATER,L.STEEL,[[n.SEA,2],[n.SEA,6]]],[e.STARLY,L.NORMAL,L.FLYING,[[n.TOWN,0,[a.DAWN,a.DAY]],[n.PLAINS,1,[a.DAWN,a.DAY]],[n.MOUNTAIN,0,[a.DAWN,a.DAY]]]],[e.STARAVIA,L.NORMAL,L.FLYING,[[n.PLAINS,1,[a.DAWN,a.DAY]],[n.MOUNTAIN,0,[a.DAWN,a.DAY]]]],[e.STARAPTOR,L.NORMAL,L.FLYING,[[n.PLAINS,1,[a.DAWN,a.DAY]],[n.MOUNTAIN,0,[a.DAWN,a.DAY]],[n.MOUNTAIN,5,[a.DAWN,a.DAY]]]],[e.BIDOOF,L.NORMAL,-1,[[n.TOWN,0],[n.PLAINS,0]]],[e.BIBAREL,L.NORMAL,L.WATER,[[n.PLAINS,0],[n.PLAINS,5]]],[e.KRICKETOT,L.BUG,-1,[[n.TOWN,1,[a.DUSK,a.NIGHT]],[n.TALL_GRASS,0,[a.DUSK,a.NIGHT]]]],[e.KRICKETUNE,L.BUG,-1,[[n.TALL_GRASS,0,[a.DUSK,a.NIGHT]],[n.TALL_GRASS,5,[a.DUSK,a.NIGHT]]]],[e.SHINX,L.ELECTRIC,-1,[[n.PLAINS,2,[a.DUSK,a.NIGHT]],[n.POWER_PLANT,0]]],[e.LUXIO,L.ELECTRIC,-1,[[n.PLAINS,2,[a.DUSK,a.NIGHT]],[n.POWER_PLANT,0]]],[e.LUXRAY,L.ELECTRIC,-1,[[n.PLAINS,2,[a.DUSK,a.NIGHT]],[n.POWER_PLANT,0],[n.POWER_PLANT,5]]],[e.BUDEW,L.GRASS,L.POISON,[]],[e.ROSERADE,L.GRASS,L.POISON,[[n.MEADOW,5,[a.DAWN,a.DAY]]]],[e.CRANIDOS,L.ROCK,-1,[[n.MOUNTAIN,3]]],[e.RAMPARDOS,L.ROCK,-1,[[n.MOUNTAIN,3],[n.MOUNTAIN,6]]],[e.SHIELDON,L.ROCK,L.STEEL,[[n.MOUNTAIN,3]]],[e.BASTIODON,L.ROCK,L.STEEL,[[n.MOUNTAIN,3],[n.MOUNTAIN,6]]],[e.BURMY,L.BUG,-1,[[n.FOREST,1],[n.BEACH,1],[n.SLUM,1]]],[e.WORMADAM,L.BUG,L.GRASS,[[n.FOREST,1],[n.FOREST,5],[n.BEACH,1],[n.BEACH,5],[n.SLUM,1],[n.SLUM,5]]],[e.MOTHIM,L.BUG,L.FLYING,[[n.FOREST,1,[a.DAWN,a.DAY]],[n.FOREST,5,[a.DAWN,a.DAY]]]],[e.COMBEE,L.BUG,L.FLYING,[[n.TOWN,1,[a.DAWN,a.DAY]],[n.GRASS,1,[a.DAWN,a.DAY]],[n.FOREST,0,[a.DAWN,a.DAY]],[n.JUNGLE,1,[a.DAWN,a.DAY]]]],[e.VESPIQUEN,L.BUG,L.FLYING,[[n.GRASS,1,[a.DAWN,a.DAY]],[n.FOREST,0,[a.DAWN,a.DAY]],[n.FOREST,5,[a.DAWN,a.DAY]],[n.JUNGLE,0,[a.DAWN,a.DAY]]]],[e.PACHIRISU,L.ELECTRIC,-1,[[n.POWER_PLANT,1]]],[e.BUIZEL,L.WATER,-1,[[n.SEA,0]]],[e.FLOATZEL,L.WATER,-1,[[n.SEA,0],[n.SEA,5]]],[e.CHERUBI,L.GRASS,-1,[[n.TOWN,1,[a.DAWN,a.DAY]],[n.GRASS,1,[a.DAWN,a.DAY]],[n.JUNGLE,0,[a.DAWN,a.DAY]]]],[e.CHERRIM,L.GRASS,-1,[[n.GRASS,1,[a.DAWN,a.DAY]],[n.JUNGLE,0,[a.DAWN,a.DAY]],[n.JUNGLE,5,[a.DAWN,a.DAY]]]],[e.SHELLOS,L.WATER,-1,[[n.SWAMP,0],[n.SEABED,1]]],[e.GASTRODON,L.WATER,L.GROUND,[[n.SWAMP,0],[n.SWAMP,5],[n.SEABED,1]]],[e.AMBIPOM,L.NORMAL,-1,[[n.JUNGLE,5]]],[e.DRIFLOON,L.GHOST,L.FLYING,[[n.GRAVEYARD,0]]],[e.DRIFBLIM,L.GHOST,L.FLYING,[[n.GRAVEYARD,0],[n.GRAVEYARD,5]]],[e.BUNEARY,L.NORMAL,-1,[[n.PLAINS,2]]],[e.LOPUNNY,L.NORMAL,-1,[[n.PLAINS,2],[n.PLAINS,5]]],[e.MISMAGIUS,L.GHOST,-1,[[n.GRAVEYARD,5]]],[e.HONCHKROW,L.DARK,L.FLYING,[[n.ABYSS,5]]],[e.GLAMEOW,L.NORMAL,-1,[[n.METROPOLIS,1],[n.MEADOW,1]]],[e.PURUGLY,L.NORMAL,-1,[[n.METROPOLIS,1],[n.MEADOW,1],[n.MEADOW,5]]],[e.CHINGLING,L.PSYCHIC,-1,[[n.TEMPLE,1]]],[e.STUNKY,L.POISON,L.DARK,[[n.SLUM,1,[a.DUSK,a.NIGHT]]]],[e.SKUNTANK,L.POISON,L.DARK,[[n.SLUM,1,[a.DUSK,a.NIGHT]],[n.SLUM,5,[a.DUSK,a.NIGHT]]]],[e.BRONZOR,L.STEEL,L.PSYCHIC,[[n.FACTORY,1],[n.SPACE,0],[n.LABORATORY,0]]],[e.BRONZONG,L.STEEL,L.PSYCHIC,[[n.FACTORY,1],[n.SPACE,0],[n.SPACE,5],[n.LABORATORY,0],[n.LABORATORY,5]]],[e.BONSLY,L.ROCK,-1,[]],[e.MIME_JR,L.PSYCHIC,L.FAIRY,[]],[e.HAPPINY,L.NORMAL,-1,[]],[e.CHATOT,L.NORMAL,L.FLYING,[[n.JUNGLE,3]]],[e.SPIRITOMB,L.GHOST,L.DARK,[[n.GRAVEYARD,3],[n.ABYSS,2],[n.ABYSS,5]]],[e.GIBLE,L.DRAGON,L.GROUND,[[n.MOUNTAIN,3],[n.WASTELAND,0]]],[e.GABITE,L.DRAGON,L.GROUND,[[n.MOUNTAIN,3],[n.WASTELAND,0]]],[e.GARCHOMP,L.DRAGON,L.GROUND,[[n.MOUNTAIN,3],[n.WASTELAND,0],[n.WASTELAND,5]]],[e.MUNCHLAX,L.NORMAL,-1,[]],[e.RIOLU,L.FIGHTING,-1,[]],[e.LUCARIO,L.FIGHTING,L.STEEL,[[n.DOJO,2],[n.DOJO,5]]],[e.HIPPOPOTAS,L.GROUND,-1,[[n.DESERT,0,[a.DAWN,a.DAY]]]],[e.HIPPOWDON,L.GROUND,-1,[[n.DESERT,0,[a.DAWN,a.DAY]],[n.DESERT,5,[a.DAWN,a.DAY]]]],[e.SKORUPI,L.POISON,L.BUG,[[n.SWAMP,1],[n.DESERT,0],[n.TEMPLE,1]]],[e.DRAPION,L.POISON,L.DARK,[[n.SWAMP,1],[n.DESERT,0],[n.DESERT,5],[n.TEMPLE,1]]],[e.CROAGUNK,L.POISON,L.FIGHTING,[[n.SWAMP,1,[a.DUSK,a.NIGHT]],[n.DOJO,1]]],[e.TOXICROAK,L.POISON,L.FIGHTING,[[n.SWAMP,1,[a.DUSK,a.NIGHT]],[n.DOJO,1],[n.DOJO,5]]],[e.CARNIVINE,L.GRASS,-1,[[n.JUNGLE,2],[n.JUNGLE,5]]],[e.FINNEON,L.WATER,-1,[[n.SEA,0,a.NIGHT]]],[e.LUMINEON,L.WATER,-1,[[n.SEA,0,a.NIGHT],[n.SEA,5,a.NIGHT]]],[e.MANTYKE,L.WATER,L.FLYING,[[n.SEABED,2]]],[e.SNOVER,L.GRASS,L.ICE,[[n.ICE_CAVE,0],[n.SNOWY_FOREST,0]]],[e.ABOMASNOW,L.GRASS,L.ICE,[[n.ICE_CAVE,0],[n.SNOWY_FOREST,0],[n.SNOWY_FOREST,5]]],[e.WEAVILE,L.DARK,L.ICE,[[n.ICE_CAVE,5]]],[e.MAGNEZONE,L.ELECTRIC,L.STEEL,[[n.POWER_PLANT,5],[n.LABORATORY,5]]],[e.LICKILICKY,L.NORMAL,-1,[[n.PLAINS,6]]],[e.RHYPERIOR,L.GROUND,L.ROCK,[[n.BADLANDS,5]]],[e.TANGROWTH,L.GRASS,-1,[[n.JUNGLE,5,[a.DUSK,a.NIGHT]]]],[e.ELECTIVIRE,L.ELECTRIC,-1,[[n.POWER_PLANT,5]]],[e.MAGMORTAR,L.FIRE,-1,[[n.VOLCANO,5]]],[e.TOGEKISS,L.FAIRY,L.FLYING,[[n.FAIRY_CAVE,5]]],[e.YANMEGA,L.BUG,L.FLYING,[[n.JUNGLE,5]]],[e.LEAFEON,L.GRASS,-1,[[n.JUNGLE,6]]],[e.GLACEON,L.ICE,-1,[[n.ICE_CAVE,6]]],[e.GLISCOR,L.GROUND,L.FLYING,[[n.BADLANDS,5]]],[e.MAMOSWINE,L.ICE,L.GROUND,[[n.ICE_CAVE,5]]],[e.PORYGON_Z,L.NORMAL,-1,[[n.SPACE,6],[n.LABORATORY,5]]],[e.GALLADE,L.PSYCHIC,L.FIGHTING,[[n.DOJO,3],[n.DOJO,6]]],[e.PROBOPASS,L.ROCK,L.STEEL,[[n.CAVE,5]]],[e.DUSKNOIR,L.GHOST,-1,[[n.GRAVEYARD,5]]],[e.FROSLASS,L.ICE,L.GHOST,[[n.ICE_CAVE,2],[n.ICE_CAVE,5]]],[e.ROTOM,L.ELECTRIC,L.GHOST,[[n.LABORATORY,3],[n.LABORATORY,7],[n.VOLCANO,3],[n.VOLCANO,7],[n.SEA,3],[n.SEA,7],[n.ICE_CAVE,3],[n.ICE_CAVE,7],[n.MOUNTAIN,3],[n.MOUNTAIN,7],[n.TALL_GRASS,3],[n.TALL_GRASS,7]]],[e.UXIE,L.PSYCHIC,-1,[[n.CAVE,4],[n.CAVE,7]]],[e.MESPRIT,L.PSYCHIC,-1,[[n.LAKE,4],[n.LAKE,7]]],[e.AZELF,L.PSYCHIC,-1,[[n.SWAMP,4],[n.SWAMP,7]]],[e.DIALGA,L.STEEL,L.DRAGON,[[n.WASTELAND,8]]],[e.PALKIA,L.WATER,L.DRAGON,[[n.ABYSS,8]]],[e.HEATRAN,L.FIRE,L.STEEL,[[n.VOLCANO,4],[n.VOLCANO,7]]],[e.REGIGIGAS,L.NORMAL,-1,[[n.TEMPLE,8]]],[e.GIRATINA,L.GHOST,L.DRAGON,[[n.GRAVEYARD,8]]],[e.CRESSELIA,L.PSYCHIC,-1,[[n.BEACH,4],[n.BEACH,7]]],[e.PHIONE,L.WATER,-1,[]],[e.MANAPHY,L.WATER,-1,[]],[e.DARKRAI,L.DARK,-1,[[n.ABYSS,4],[n.ABYSS,7]]],[e.SHAYMIN,L.GRASS,-1,[[n.MEADOW,8]]],[e.ARCEUS,L.NORMAL,-1,[]],[e.VICTINI,L.PSYCHIC,L.FIRE,[]],[e.SNIVY,L.GRASS,-1,[[n.JUNGLE,2]]],[e.SERVINE,L.GRASS,-1,[[n.JUNGLE,2]]],[e.SERPERIOR,L.GRASS,-1,[[n.JUNGLE,2],[n.JUNGLE,6]]],[e.TEPIG,L.FIRE,-1,[[n.VOLCANO,2]]],[e.PIGNITE,L.FIRE,L.FIGHTING,[[n.VOLCANO,2]]],[e.EMBOAR,L.FIRE,L.FIGHTING,[[n.VOLCANO,2],[n.VOLCANO,6]]],[e.OSHAWOTT,L.WATER,-1,[[n.LAKE,2]]],[e.DEWOTT,L.WATER,-1,[[n.LAKE,2]]],[e.SAMUROTT,L.WATER,-1,[[n.LAKE,2],[n.LAKE,6]]],[e.PATRAT,L.NORMAL,-1,[[n.TOWN,1,[a.DAWN,a.DAY]],[n.TOWN,0,[a.DUSK,a.NIGHT]],[n.METROPOLIS,1,[a.DAWN,a.DAY]],[n.METROPOLIS,0,[a.DUSK,a.NIGHT]],[n.SLUM,0,[a.DUSK,a.NIGHT]]]],[e.WATCHOG,L.NORMAL,-1,[[n.METROPOLIS,1,[a.DAWN,a.DAY]],[n.METROPOLIS,0,[a.DUSK,a.NIGHT]],[n.SLUM,0,[a.DUSK,a.NIGHT]],[n.SLUM,5,[a.DUSK,a.NIGHT]]]],[e.LILLIPUP,L.NORMAL,-1,[[n.TOWN,0],[n.METROPOLIS,0]]],[e.HERDIER,L.NORMAL,-1,[[n.METROPOLIS,0]]],[e.STOUTLAND,L.NORMAL,-1,[[n.METROPOLIS,0],[n.METROPOLIS,5]]],[e.PURRLOIN,L.DARK,-1,[[n.TOWN,0,[a.DUSK,a.NIGHT]],[n.ABYSS,0],[n.JUNGLE,0,[a.DUSK,a.NIGHT]]]],[e.LIEPARD,L.DARK,-1,[[n.ABYSS,0],[n.ABYSS,5],[n.JUNGLE,0,[a.DUSK,a.NIGHT]]]],[e.PANSAGE,L.GRASS,-1,[[n.FOREST,1],[n.JUNGLE,1]]],[e.SIMISAGE,L.GRASS,-1,[[n.FOREST,1],[n.FOREST,5],[n.JUNGLE,1]]],[e.PANSEAR,L.FIRE,-1,[[n.VOLCANO,1],[n.JUNGLE,1]]],[e.SIMISEAR,L.FIRE,-1,[[n.VOLCANO,1],[n.VOLCANO,5],[n.JUNGLE,1]]],[e.PANPOUR,L.WATER,-1,[[n.SEA,1],[n.JUNGLE,1]]],[e.SIMIPOUR,L.WATER,-1,[[n.SEA,1],[n.SEA,5],[n.JUNGLE,1]]],[e.MUNNA,L.PSYCHIC,-1,[[n.SPACE,0]]],[e.MUSHARNA,L.PSYCHIC,-1,[[n.SPACE,0],[n.SPACE,5]]],[e.PIDOVE,L.NORMAL,L.FLYING,[[n.TOWN,0,[a.DAWN,a.DAY]],[n.PLAINS,1,[a.DAWN,a.DAY]],[n.MOUNTAIN,0,[a.DAWN,a.DAY]]]],[e.TRANQUILL,L.NORMAL,L.FLYING,[[n.PLAINS,1,[a.DAWN,a.DAY]],[n.MOUNTAIN,0,[a.DAWN,a.DAY]]]],[e.UNFEZANT,L.NORMAL,L.FLYING,[[n.PLAINS,1,[a.DAWN,a.DAY]],[n.MOUNTAIN,0,[a.DAWN,a.DAY]],[n.MOUNTAIN,5,[a.DAWN,a.DAY]]]],[e.BLITZLE,L.ELECTRIC,-1,[[n.MEADOW,0],[n.JUNGLE,0]]],[e.ZEBSTRIKA,L.ELECTRIC,-1,[[n.MEADOW,0],[n.MEADOW,5],[n.JUNGLE,0]]],[e.ROGGENROLA,L.ROCK,-1,[[n.MOUNTAIN,1,[a.DAWN,a.DAY]],[n.MOUNTAIN,0,[a.DUSK,a.NIGHT]],[n.BADLANDS,1],[n.CAVE,0]]],[e.BOLDORE,L.ROCK,-1,[[n.MOUNTAIN,1,[a.DAWN,a.DAY]],[n.MOUNTAIN,0,[a.DUSK,a.NIGHT]],[n.BADLANDS,1],[n.CAVE,0]]],[e.GIGALITH,L.ROCK,-1,[[n.CAVE,5]]],[e.WOOBAT,L.PSYCHIC,L.FLYING,[[n.CAVE,0]]],[e.SWOOBAT,L.PSYCHIC,L.FLYING,[[n.CAVE,0],[n.CAVE,5]]],[e.DRILBUR,L.GROUND,-1,[[n.BADLANDS,0],[n.CONSTRUCTION_SITE,0]]],[e.EXCADRILL,L.GROUND,L.STEEL,[[n.BADLANDS,0],[n.BADLANDS,5],[n.CONSTRUCTION_SITE,0]]],[e.AUDINO,L.NORMAL,-1,[[n.FAIRY_CAVE,2],[n.FAIRY_CAVE,5]]],[e.TIMBURR,L.FIGHTING,-1,[[n.FACTORY,0],[n.CONSTRUCTION_SITE,0]]],[e.GURDURR,L.FIGHTING,-1,[[n.FACTORY,0],[n.CONSTRUCTION_SITE,0]]],[e.CONKELDURR,L.FIGHTING,-1,[[n.CONSTRUCTION_SITE,5]]],[e.TYMPOLE,L.WATER,-1,[[n.SWAMP,0]]],[e.PALPITOAD,L.WATER,L.GROUND,[[n.SWAMP,0]]],[e.SEISMITOAD,L.WATER,L.GROUND,[[n.SWAMP,0],[n.SWAMP,5]]],[e.THROH,L.FIGHTING,-1,[[n.DOJO,2],[n.DOJO,5]]],[e.SAWK,L.FIGHTING,-1,[[n.DOJO,2],[n.DOJO,5]]],[e.SEWADDLE,L.BUG,L.GRASS,[[n.FOREST,1,[a.DAWN,a.DAY]],[n.JUNGLE,0,[a.DAWN,a.DAY]]]],[e.SWADLOON,L.BUG,L.GRASS,[[n.FOREST,1,[a.DAWN,a.DAY]],[n.JUNGLE,0,[a.DAWN,a.DAY]]]],[e.LEAVANNY,L.BUG,L.GRASS,[[n.FOREST,1,[a.DAWN,a.DAY]],[n.JUNGLE,0,[a.DAWN,a.DAY]],[n.JUNGLE,5,[a.DAWN,a.DAY]]]],[e.VENIPEDE,L.BUG,L.POISON,[[n.TOWN,1,[a.DUSK,a.NIGHT]],[n.FOREST,0,[a.DUSK,a.NIGHT]]]],[e.WHIRLIPEDE,L.BUG,L.POISON,[[n.FOREST,0,[a.DUSK,a.NIGHT]]]],[e.SCOLIPEDE,L.BUG,L.POISON,[[n.FOREST,0,[a.DUSK,a.NIGHT]],[n.FOREST,5,[a.DUSK,a.NIGHT]]]],[e.COTTONEE,L.GRASS,L.FAIRY,[[n.TOWN,0,[a.DAWN,a.DAY]],[n.GRASS,0,[a.DAWN,a.DAY]],[n.MEADOW,0,[a.DAWN,a.DAY]]]],[e.WHIMSICOTT,L.GRASS,L.FAIRY,[[n.GRASS,5,[a.DAWN,a.DAY]]]],[e.PETILIL,L.GRASS,-1,[[n.GRASS,0,[a.DAWN,a.DAY]],[n.FOREST,0,[a.DAWN,a.DAY]]]],[e.LILLIGANT,L.GRASS,-1,[[n.FOREST,5,[a.DAWN,a.DAY]]]],[e.BASCULIN,L.WATER,-1,[[n.SEABED,0]]],[e.SANDILE,L.GROUND,L.DARK,[[n.DESERT,1,[a.DAWN,a.DAY]],[n.DESERT,0,[a.DUSK,a.NIGHT]]]],[e.KROKOROK,L.GROUND,L.DARK,[[n.DESERT,1,[a.DAWN,a.DAY]],[n.DESERT,0,[a.DUSK,a.NIGHT]]]],[e.KROOKODILE,L.GROUND,L.DARK,[[n.DESERT,1,[a.DAWN,a.DAY]],[n.DESERT,0,[a.DUSK,a.NIGHT]],[n.DESERT,5,[a.DUSK,a.NIGHT]]]],[e.DARUMAKA,L.FIRE,-1,[[n.DESERT,2]]],[e.DARMANITAN,L.FIRE,-1,[[n.DESERT,2],[n.DESERT,5]]],[e.MARACTUS,L.GRASS,-1,[[n.DESERT,1],[n.DESERT,5]]],[e.DWEBBLE,L.BUG,L.ROCK,[[n.BEACH,0]]],[e.CRUSTLE,L.BUG,L.ROCK,[[n.BEACH,0],[n.BEACH,5]]],[e.SCRAGGY,L.DARK,L.FIGHTING,[[n.DOJO,1],[n.CONSTRUCTION_SITE,1]]],[e.SCRAFTY,L.DARK,L.FIGHTING,[[n.DOJO,1],[n.DOJO,5],[n.CONSTRUCTION_SITE,1]]],[e.SIGILYPH,L.PSYCHIC,L.FLYING,[[n.RUINS,1],[n.RUINS,5],[n.SPACE,2]]],[e.YAMASK,L.GHOST,-1,[[n.GRAVEYARD,1],[n.TEMPLE,0]]],[e.COFAGRIGUS,L.GHOST,-1,[[n.GRAVEYARD,1],[n.TEMPLE,0],[n.TEMPLE,5]]],[e.TIRTOUGA,L.WATER,L.ROCK,[[n.SEA,3],[n.BEACH,3]]],[e.CARRACOSTA,L.WATER,L.ROCK,[[n.SEA,3],[n.BEACH,3],[n.BEACH,6]]],[e.ARCHEN,L.ROCK,L.FLYING,[[n.RUINS,3]]],[e.ARCHEOPS,L.ROCK,L.FLYING,[[n.MOUNTAIN,3],[n.RUINS,3],[n.RUINS,6]]],[e.TRUBBISH,L.POISON,-1,[[n.SLUM,0]]],[e.GARBODOR,L.POISON,-1,[[n.SLUM,0],[n.SLUM,5]]],[e.ZORUA,L.DARK,-1,[[n.ABYSS,2]]],[e.ZOROARK,L.DARK,-1,[[n.ABYSS,2],[n.ABYSS,5]]],[e.MINCCINO,L.NORMAL,-1,[[n.TOWN,1,[a.DAWN,a.DAY]],[n.MEADOW,0,[a.DAWN,a.DAY]]]],[e.CINCCINO,L.NORMAL,-1,[[n.MEADOW,5,[a.DAWN,a.DAY]]]],[e.GOTHITA,L.PSYCHIC,-1,[[n.RUINS,2]]],[e.GOTHORITA,L.PSYCHIC,-1,[[n.RUINS,2]]],[e.GOTHITELLE,L.PSYCHIC,-1,[[n.RUINS,2],[n.RUINS,5]]],[e.SOLOSIS,L.PSYCHIC,-1,[[n.SPACE,2],[n.LABORATORY,1]]],[e.DUOSION,L.PSYCHIC,-1,[[n.SPACE,2],[n.LABORATORY,1]]],[e.REUNICLUS,L.PSYCHIC,-1,[[n.SPACE,2],[n.SPACE,5],[n.LABORATORY,1],[n.LABORATORY,5]]],[e.DUCKLETT,L.WATER,L.FLYING,[[n.LAKE,0,[a.DAWN,a.DAY]]]],[e.SWANNA,L.WATER,L.FLYING,[[n.LAKE,0,[a.DAWN,a.DAY]],[n.LAKE,5,[a.DAWN,a.DAY]]]],[e.VANILLITE,L.ICE,-1,[[n.ICE_CAVE,0]]],[e.VANILLISH,L.ICE,-1,[[n.ICE_CAVE,0]]],[e.VANILLUXE,L.ICE,-1,[[n.ICE_CAVE,0],[n.ICE_CAVE,5]]],[e.DEERLING,L.NORMAL,L.GRASS,[[n.FOREST,0,[a.DAWN,a.DAY]]]],[e.SAWSBUCK,L.NORMAL,L.GRASS,[[n.FOREST,0,[a.DAWN,a.DAY]],[n.FOREST,5,[a.DAWN,a.DAY]]]],[e.EMOLGA,L.ELECTRIC,L.FLYING,[[n.POWER_PLANT,1]]],[e.KARRABLAST,L.BUG,-1,[[n.FOREST,2]]],[e.ESCAVALIER,L.BUG,L.STEEL,[[n.FOREST,6]]],[e.FOONGUS,L.GRASS,L.POISON,[[n.GRASS,1,[a.DUSK,a.NIGHT]],[n.JUNGLE,2,[a.DAWN,a.DAY]],[n.JUNGLE,0,[a.DUSK,a.NIGHT]]]],[e.AMOONGUSS,L.GRASS,L.POISON,[[n.GRASS,1,[a.DUSK,a.NIGHT]],[n.JUNGLE,2,[a.DAWN,a.DAY]],[n.JUNGLE,0,[a.DUSK,a.NIGHT]],[n.JUNGLE,6,[a.DAWN,a.DAY]],[n.JUNGLE,5,[a.DUSK,a.NIGHT]]]],[e.FRILLISH,L.WATER,L.GHOST,[[n.SEABED,0]]],[e.JELLICENT,L.WATER,L.GHOST,[[n.SEABED,0],[n.SEABED,5]]],[e.ALOMOMOLA,L.WATER,-1,[[n.SEABED,2],[n.SEABED,5]]],[e.JOLTIK,L.BUG,L.ELECTRIC,[[n.JUNGLE,1]]],[e.GALVANTULA,L.BUG,L.ELECTRIC,[[n.JUNGLE,1],[n.JUNGLE,5]]],[e.FERROSEED,L.GRASS,L.STEEL,[[n.CAVE,2]]],[e.FERROTHORN,L.GRASS,L.STEEL,[[n.CAVE,2],[n.CAVE,6]]],[e.KLINK,L.STEEL,-1,[[n.FACTORY,0],[n.LABORATORY,0]]],[e.KLANG,L.STEEL,-1,[[n.FACTORY,0],[n.LABORATORY,0]]],[e.KLINKLANG,L.STEEL,-1,[[n.FACTORY,0],[n.FACTORY,5],[n.LABORATORY,0],[n.LABORATORY,5]]],[e.TYNAMO,L.ELECTRIC,-1,[[n.SEABED,2]]],[e.EELEKTRIK,L.ELECTRIC,-1,[[n.SEABED,2]]],[e.EELEKTROSS,L.ELECTRIC,-1,[[n.SEABED,6]]],[e.ELGYEM,L.PSYCHIC,-1,[[n.RUINS,0],[n.SPACE,1]]],[e.BEHEEYEM,L.PSYCHIC,-1,[[n.RUINS,0],[n.RUINS,5],[n.SPACE,1]]],[e.LITWICK,L.GHOST,L.FIRE,[[n.GRAVEYARD,0],[n.TEMPLE,1]]],[e.LAMPENT,L.GHOST,L.FIRE,[[n.GRAVEYARD,0],[n.TEMPLE,1]]],[e.CHANDELURE,L.GHOST,L.FIRE,[[n.GRAVEYARD,5]]],[e.AXEW,L.DRAGON,-1,[[n.MOUNTAIN,3],[n.WASTELAND,0]]],[e.FRAXURE,L.DRAGON,-1,[[n.MOUNTAIN,3],[n.WASTELAND,0]]],[e.HAXORUS,L.DRAGON,-1,[[n.WASTELAND,0],[n.WASTELAND,5]]],[e.CUBCHOO,L.ICE,-1,[[n.ICE_CAVE,0]]],[e.BEARTIC,L.ICE,-1,[[n.ICE_CAVE,0],[n.ICE_CAVE,5]]],[e.CRYOGONAL,L.ICE,-1,[[n.ICE_CAVE,2],[n.ICE_CAVE,5]]],[e.SHELMET,L.BUG,-1,[[n.FOREST,2]]],[e.ACCELGOR,L.BUG,-1,[[n.FOREST,6]]],[e.STUNFISK,L.GROUND,L.ELECTRIC,[[n.SWAMP,1],[n.SWAMP,5]]],[e.MIENFOO,L.FIGHTING,-1,[[n.DOJO,1]]],[e.MIENSHAO,L.FIGHTING,-1,[[n.DOJO,1],[n.DOJO,5]]],[e.DRUDDIGON,L.DRAGON,-1,[[n.WASTELAND,3],[n.WASTELAND,6]]],[e.GOLETT,L.GROUND,L.GHOST,[[n.TEMPLE,0]]],[e.GOLURK,L.GROUND,L.GHOST,[[n.TEMPLE,0],[n.TEMPLE,5]]],[e.PAWNIARD,L.DARK,L.STEEL,[[n.ABYSS,0]]],[e.BISHARP,L.DARK,L.STEEL,[[n.ABYSS,0]]],[e.BOUFFALANT,L.NORMAL,-1,[[n.MEADOW,1,[a.DAWN,a.DAY]],[n.MEADOW,5,[a.DAWN,a.DAY]]]],[e.RUFFLET,L.NORMAL,L.FLYING,[[n.MOUNTAIN,1,[a.DAWN,a.DAY]]]],[e.BRAVIARY,L.NORMAL,L.FLYING,[[n.MOUNTAIN,1,[a.DAWN,a.DAY]],[n.MOUNTAIN,5,[a.DAWN,a.DAY]]]],[e.VULLABY,L.DARK,L.FLYING,[[n.MOUNTAIN,1,[a.DUSK,a.NIGHT]]]],[e.MANDIBUZZ,L.DARK,L.FLYING,[[n.MOUNTAIN,1,[a.DUSK,a.NIGHT]],[n.MOUNTAIN,5,[a.DUSK,a.NIGHT]]]],[e.HEATMOR,L.FIRE,-1,[[n.VOLCANO,1],[n.VOLCANO,5]]],[e.DURANT,L.BUG,L.STEEL,[[n.FOREST,3],[n.FOREST,6]]],[e.DEINO,L.DARK,L.DRAGON,[[n.WASTELAND,1,[a.DUSK,a.NIGHT]],[n.ABYSS,2]]],[e.ZWEILOUS,L.DARK,L.DRAGON,[[n.WASTELAND,1,[a.DUSK,a.NIGHT]],[n.ABYSS,2]]],[e.HYDREIGON,L.DARK,L.DRAGON,[[n.WASTELAND,1,[a.DUSK,a.NIGHT]],[n.ABYSS,2],[n.ABYSS,5]]],[e.LARVESTA,L.BUG,L.FIRE,[[n.VOLCANO,3]]],[e.VOLCARONA,L.BUG,L.FIRE,[[n.VOLCANO,3],[n.VOLCANO,6]]],[e.COBALION,L.STEEL,L.FIGHTING,[[n.CONSTRUCTION_SITE,4],[n.CONSTRUCTION_SITE,7]]],[e.TERRAKION,L.ROCK,L.FIGHTING,[[n.DOJO,4],[n.DOJO,7]]],[e.VIRIZION,L.GRASS,L.FIGHTING,[[n.GRASS,4],[n.GRASS,7]]],[e.TORNADUS,L.FLYING,-1,[[n.MOUNTAIN,4],[n.MOUNTAIN,7]]],[e.THUNDURUS,L.ELECTRIC,L.FLYING,[[n.POWER_PLANT,4],[n.POWER_PLANT,7]]],[e.RESHIRAM,L.DRAGON,L.FIRE,[[n.VOLCANO,8]]],[e.ZEKROM,L.DRAGON,L.ELECTRIC,[[n.POWER_PLANT,8]]],[e.LANDORUS,L.GROUND,L.FLYING,[[n.BADLANDS,4],[n.BADLANDS,7]]],[e.KYUREM,L.DRAGON,L.ICE,[[n.ICE_CAVE,8]]],[e.KELDEO,L.WATER,L.FIGHTING,[[n.BEACH,4],[n.BEACH,7]]],[e.MELOETTA,L.NORMAL,L.PSYCHIC,[[n.MEADOW,4],[n.MEADOW,7]]],[e.GENESECT,L.BUG,L.STEEL,[[n.FACTORY,4],[n.FACTORY,7]]],[e.CHESPIN,L.GRASS,-1,[[n.FOREST,2]]],[e.QUILLADIN,L.GRASS,-1,[[n.FOREST,2]]],[e.CHESNAUGHT,L.GRASS,L.FIGHTING,[[n.FOREST,2],[n.FOREST,6]]],[e.FENNEKIN,L.FIRE,-1,[[n.VOLCANO,2]]],[e.BRAIXEN,L.FIRE,-1,[[n.VOLCANO,2]]],[e.DELPHOX,L.FIRE,L.PSYCHIC,[[n.VOLCANO,2],[n.VOLCANO,6]]],[e.FROAKIE,L.WATER,-1,[[n.LAKE,2]]],[e.FROGADIER,L.WATER,-1,[[n.LAKE,2]]],[e.GRENINJA,L.WATER,L.DARK,[[n.LAKE,2],[n.LAKE,6]]],[e.BUNNELBY,L.NORMAL,-1,[[n.CAVE,0]]],[e.DIGGERSBY,L.NORMAL,L.GROUND,[[n.CAVE,0],[n.CAVE,5]]],[e.FLETCHLING,L.NORMAL,L.FLYING,[[n.TOWN,0],[n.PLAINS,1],[n.MOUNTAIN,0,[a.DAWN,a.DAY]]]],[e.FLETCHINDER,L.FIRE,L.FLYING,[[n.PLAINS,1],[n.MOUNTAIN,0,[a.DAWN,a.DAY]]]],[e.TALONFLAME,L.FIRE,L.FLYING,[[n.PLAINS,1],[n.MOUNTAIN,0,[a.DAWN,a.DAY]],[n.MOUNTAIN,5,[a.DAWN,a.DAY]]]],[e.SCATTERBUG,L.BUG,-1,[[n.TOWN,0,[a.DAWN,a.DAY]]]],[e.SPEWPA,L.BUG,-1,[[n.TOWN,0,[a.DAWN,a.DAY]]]],[e.VIVILLON,L.BUG,L.FLYING,[[n.FOREST,0,[a.DAWN,a.DAY]]]],[e.LITLEO,L.FIRE,L.NORMAL,[[n.JUNGLE,1]]],[e.PYROAR,L.FIRE,L.NORMAL,[[n.JUNGLE,1],[n.JUNGLE,5]]],[e.FLABEBE,L.FAIRY,-1,[[n.MEADOW,0]]],[e.FLOETTE,L.FAIRY,-1,[[n.MEADOW,0]]],[e.FLORGES,L.FAIRY,-1,[[n.MEADOW,5]]],[e.SKIDDO,L.GRASS,-1,[[n.MOUNTAIN,0]]],[e.GOGOAT,L.GRASS,-1,[[n.MOUNTAIN,0],[n.MOUNTAIN,5]]],[e.PANCHAM,L.FIGHTING,-1,[[n.DOJO,2],[n.JUNGLE,1,[a.DUSK,a.NIGHT]]]],[e.PANGORO,L.FIGHTING,L.DARK,[[n.DOJO,2],[n.DOJO,6],[n.JUNGLE,1,[a.DUSK,a.NIGHT]],[n.JUNGLE,5,[a.DUSK,a.NIGHT]]]],[e.FURFROU,L.NORMAL,-1,[[n.METROPOLIS,1],[n.METROPOLIS,5]]],[e.ESPURR,L.PSYCHIC,-1,[[n.METROPOLIS,1,[a.DUSK,a.NIGHT]]]],[e.MEOWSTIC,L.PSYCHIC,-1,[[n.METROPOLIS,1,[a.DUSK,a.NIGHT]],[n.METROPOLIS,5,[a.DUSK,a.NIGHT]]]],[e.HONEDGE,L.STEEL,L.GHOST,[[n.TEMPLE,0]]],[e.DOUBLADE,L.STEEL,L.GHOST,[[n.TEMPLE,0]]],[e.AEGISLASH,L.STEEL,L.GHOST,[[n.TEMPLE,5]]],[e.SPRITZEE,L.FAIRY,-1,[[n.FAIRY_CAVE,0]]],[e.AROMATISSE,L.FAIRY,-1,[[n.FAIRY_CAVE,0],[n.FAIRY_CAVE,5]]],[e.SWIRLIX,L.FAIRY,-1,[[n.FAIRY_CAVE,0]]],[e.SLURPUFF,L.FAIRY,-1,[[n.FAIRY_CAVE,0],[n.FAIRY_CAVE,5]]],[e.INKAY,L.DARK,L.PSYCHIC,[[n.SEA,0,[a.DUSK,a.NIGHT]]]],[e.MALAMAR,L.DARK,L.PSYCHIC,[[n.SEA,0,[a.DUSK,a.NIGHT]],[n.SEA,5,[a.DUSK,a.NIGHT]]]],[e.BINACLE,L.ROCK,L.WATER,[[n.BEACH,0]]],[e.BARBARACLE,L.ROCK,L.WATER,[[n.BEACH,0],[n.BEACH,5]]],[e.SKRELP,L.POISON,L.WATER,[[n.SEABED,1]]],[e.DRAGALGE,L.POISON,L.DRAGON,[[n.SEABED,1],[n.SEABED,5]]],[e.CLAUNCHER,L.WATER,-1,[[n.BEACH,1]]],[e.CLAWITZER,L.WATER,-1,[[n.BEACH,1],[n.BEACH,5]]],[e.HELIOPTILE,L.ELECTRIC,L.NORMAL,[[n.DESERT,1,[a.DAWN,a.DAY]]]],[e.HELIOLISK,L.ELECTRIC,L.NORMAL,[[n.DESERT,5,[a.DAWN,a.DAY]]]],[e.TYRUNT,L.ROCK,L.DRAGON,[[n.WASTELAND,3]]],[e.TYRANTRUM,L.ROCK,L.DRAGON,[[n.WASTELAND,3],[n.WASTELAND,6]]],[e.AMAURA,L.ROCK,L.ICE,[[n.ICE_CAVE,3]]],[e.AURORUS,L.ROCK,L.ICE,[[n.ICE_CAVE,3],[n.ICE_CAVE,6]]],[e.SYLVEON,L.FAIRY,-1,[[n.MEADOW,3],[n.MEADOW,6]]],[e.HAWLUCHA,L.FIGHTING,L.FLYING,[[n.MOUNTAIN,2],[n.MOUNTAIN,6]]],[e.DEDENNE,L.ELECTRIC,L.FAIRY,[[n.POWER_PLANT,0],[n.POWER_PLANT,5]]],[e.CARBINK,L.ROCK,L.FAIRY,[[n.CAVE,2],[n.FAIRY_CAVE,1],[n.FAIRY_CAVE,5]]],[e.GOOMY,L.DRAGON,-1,[[n.WASTELAND,0,[a.DAWN,a.DAY]]]],[e.SLIGGOO,L.DRAGON,-1,[[n.WASTELAND,0,[a.DAWN,a.DAY]]]],[e.GOODRA,L.DRAGON,-1,[[n.WASTELAND,0,[a.DAWN,a.DAY]],[n.WASTELAND,5,[a.DAWN,a.DAY]]]],[e.KLEFKI,L.STEEL,L.FAIRY,[[n.FACTORY,1],[n.FACTORY,5]]],[e.PHANTUMP,L.GHOST,L.GRASS,[[n.GRAVEYARD,0]]],[e.TREVENANT,L.GHOST,L.GRASS,[[n.GRAVEYARD,5]]],[e.PUMPKABOO,L.GHOST,L.GRASS,[[n.GRAVEYARD,0]]],[e.GOURGEIST,L.GHOST,L.GRASS,[[n.GRAVEYARD,5]]],[e.BERGMITE,L.ICE,-1,[[n.ICE_CAVE,0]]],[e.AVALUGG,L.ICE,-1,[[n.ICE_CAVE,0],[n.ICE_CAVE,5]]],[e.NOIBAT,L.FLYING,L.DRAGON,[[n.CAVE,1]]],[e.NOIVERN,L.FLYING,L.DRAGON,[[n.CAVE,1],[n.CAVE,5]]],[e.XERNEAS,L.FAIRY,-1,[[n.FAIRY_CAVE,8]]],[e.YVELTAL,L.DARK,L.FLYING,[[n.ABYSS,8]]],[e.ZYGARDE,L.DRAGON,L.GROUND,[[n.LABORATORY,7]]],[e.DIANCIE,L.ROCK,L.FAIRY,[[n.FAIRY_CAVE,4],[n.FAIRY_CAVE,7]]],[e.HOOPA,L.PSYCHIC,L.GHOST,[[n.TEMPLE,4],[n.TEMPLE,7]]],[e.VOLCANION,L.FIRE,L.WATER,[[n.VOLCANO,4],[n.VOLCANO,7]]],[e.ROWLET,L.GRASS,L.FLYING,[[n.FOREST,2]]],[e.DARTRIX,L.GRASS,L.FLYING,[[n.FOREST,2]]],[e.DECIDUEYE,L.GRASS,L.GHOST,[[n.FOREST,2],[n.FOREST,6]]],[e.LITTEN,L.FIRE,-1,[[n.VOLCANO,2]]],[e.TORRACAT,L.FIRE,-1,[[n.VOLCANO,2]]],[e.INCINEROAR,L.FIRE,L.DARK,[[n.VOLCANO,2],[n.VOLCANO,6]]],[e.POPPLIO,L.WATER,-1,[[n.SEA,2]]],[e.BRIONNE,L.WATER,-1,[[n.SEA,2]]],[e.PRIMARINA,L.WATER,L.FAIRY,[[n.SEA,2],[n.SEA,6]]],[e.PIKIPEK,L.NORMAL,L.FLYING,[[n.JUNGLE,0]]],[e.TRUMBEAK,L.NORMAL,L.FLYING,[[n.JUNGLE,0]]],[e.TOUCANNON,L.NORMAL,L.FLYING,[[n.JUNGLE,0],[n.JUNGLE,5]]],[e.YUNGOOS,L.NORMAL,-1,[[n.TOWN,0,[a.DAWN,a.DAY]],[n.PLAINS,0,[a.DAWN,a.DAY]]]],[e.GUMSHOOS,L.NORMAL,-1,[[n.PLAINS,0,[a.DAWN,a.DAY]],[n.PLAINS,5,[a.DAWN,a.DAY]]]],[e.GRUBBIN,L.BUG,-1,[[n.POWER_PLANT,0]]],[e.CHARJABUG,L.BUG,L.ELECTRIC,[[n.POWER_PLANT,0]]],[e.VIKAVOLT,L.BUG,L.ELECTRIC,[[n.POWER_PLANT,5]]],[e.CRABRAWLER,L.FIGHTING,-1,[[n.ICE_CAVE,0]]],[e.CRABOMINABLE,L.FIGHTING,L.ICE,[[n.ICE_CAVE,5]]],[e.ORICORIO,L.FIRE,L.FLYING,[[n.MEADOW,1],[n.ISLAND,0],[n.ISLAND,5]]],[e.CUTIEFLY,L.BUG,L.FAIRY,[[n.MEADOW,0],[n.FAIRY_CAVE,0]]],[e.RIBOMBEE,L.BUG,L.FAIRY,[[n.MEADOW,0],[n.MEADOW,5],[n.FAIRY_CAVE,0],[n.FAIRY_CAVE,5]]],[e.ROCKRUFF,L.ROCK,-1,[[n.PLAINS,1,a.DAY],[n.FOREST,1,a.NIGHT],[n.CAVE,1,a.DUSK]]],[e.LYCANROC,L.ROCK,-1,[[n.PLAINS,1,a.DAY],[n.PLAINS,6,a.DAY],[n.FOREST,1,a.NIGHT],[n.FOREST,6,a.NIGHT],[n.CAVE,1,a.DUSK],[n.CAVE,6,a.DUSK]]],[e.WISHIWASHI,L.WATER,-1,[[n.LAKE,1],[n.LAKE,5]]],[e.MAREANIE,L.POISON,L.WATER,[[n.BEACH,0],[n.SWAMP,1]]],[e.TOXAPEX,L.POISON,L.WATER,[[n.BEACH,0],[n.BEACH,5],[n.SWAMP,1],[n.SWAMP,5]]],[e.MUDBRAY,L.GROUND,-1,[[n.BADLANDS,0]]],[e.MUDSDALE,L.GROUND,-1,[[n.BADLANDS,0],[n.BADLANDS,5]]],[e.DEWPIDER,L.WATER,L.BUG,[[n.LAKE,1,[a.DAWN,a.DAY]]]],[e.ARAQUANID,L.WATER,L.BUG,[[n.LAKE,1,[a.DAWN,a.DAY]],[n.LAKE,5,[a.DAWN,a.DAY]]]],[e.FOMANTIS,L.GRASS,-1,[[n.TALL_GRASS,0],[n.JUNGLE,1]]],[e.LURANTIS,L.GRASS,-1,[[n.TALL_GRASS,0],[n.TALL_GRASS,5],[n.JUNGLE,1],[n.JUNGLE,5]]],[e.MORELULL,L.GRASS,L.FAIRY,[[n.FAIRY_CAVE,0]]],[e.SHIINOTIC,L.GRASS,L.FAIRY,[[n.FAIRY_CAVE,0],[n.FAIRY_CAVE,5]]],[e.SALANDIT,L.POISON,L.FIRE,[[n.VOLCANO,0]]],[e.SALAZZLE,L.POISON,L.FIRE,[[n.VOLCANO,0],[n.VOLCANO,5]]],[e.STUFFUL,L.NORMAL,L.FIGHTING,[[n.DOJO,0]]],[e.BEWEAR,L.NORMAL,L.FIGHTING,[[n.DOJO,0],[n.DOJO,5]]],[e.BOUNSWEET,L.GRASS,-1,[[n.TALL_GRASS,0,[a.DAWN,a.DAY]]]],[e.STEENEE,L.GRASS,-1,[[n.TALL_GRASS,0,[a.DAWN,a.DAY]]]],[e.TSAREENA,L.GRASS,-1,[[n.TALL_GRASS,0,[a.DAWN,a.DAY]],[n.TALL_GRASS,5,[a.DAWN,a.DAY]]]],[e.COMFEY,L.FAIRY,-1,[[n.FAIRY_CAVE,1],[n.FAIRY_CAVE,5]]],[e.ORANGURU,L.NORMAL,L.PSYCHIC,[[n.JUNGLE,2,[a.DUSK,a.NIGHT]]]],[e.PASSIMIAN,L.FIGHTING,-1,[[n.JUNGLE,2,[a.DAWN,a.DAY]]]],[e.WIMPOD,L.BUG,L.WATER,[[n.CAVE,1]]],[e.GOLISOPOD,L.BUG,L.WATER,[[n.CAVE,1],[n.CAVE,5]]],[e.SANDYGAST,L.GHOST,L.GROUND,[[n.BEACH,1]]],[e.PALOSSAND,L.GHOST,L.GROUND,[[n.BEACH,1],[n.BEACH,5]]],[e.PYUKUMUKU,L.WATER,-1,[[n.SEABED,3],[n.SEABED,6]]],[e.TYPE_NULL,L.NORMAL,-1,[[n.LABORATORY,4]]],[e.SILVALLY,L.NORMAL,-1,[[n.LABORATORY,7]]],[e.MINIOR,L.ROCK,L.FLYING,[[n.SPACE,0],[n.SPACE,5]]],[e.KOMALA,L.NORMAL,-1,[[n.JUNGLE,1,[a.DAWN,a.DAY]],[n.JUNGLE,5,[a.DAWN,a.DAY]]]],[e.TURTONATOR,L.FIRE,L.DRAGON,[[n.VOLCANO,1],[n.VOLCANO,5]]],[e.TOGEDEMARU,L.ELECTRIC,L.STEEL,[[n.POWER_PLANT,1],[n.POWER_PLANT,5]]],[e.MIMIKYU,L.GHOST,L.FAIRY,[[n.GRAVEYARD,2],[n.GRAVEYARD,5]]],[e.BRUXISH,L.WATER,L.PSYCHIC,[[n.ISLAND,1],[n.ISLAND,5]]],[e.DRAMPA,L.NORMAL,L.DRAGON,[[n.WASTELAND,1],[n.WASTELAND,5]]],[e.DHELMISE,L.GHOST,L.GRASS,[[n.SEABED,2],[n.SEABED,6]]],[e.JANGMO_O,L.DRAGON,-1,[[n.WASTELAND,0,[a.DAWN,a.DAY]]]],[e.HAKAMO_O,L.DRAGON,L.FIGHTING,[[n.WASTELAND,0,[a.DAWN,a.DAY]]]],[e.KOMMO_O,L.DRAGON,L.FIGHTING,[[n.WASTELAND,0,[a.DAWN,a.DAY]],[n.WASTELAND,5,[a.DAWN,a.DAY]]]],[e.TAPU_KOKO,L.ELECTRIC,L.FAIRY,[[n.TEMPLE,4],[n.TEMPLE,7]]],[e.TAPU_LELE,L.PSYCHIC,L.FAIRY,[[n.JUNGLE,4],[n.JUNGLE,7]]],[e.TAPU_BULU,L.GRASS,L.FAIRY,[[n.DESERT,4],[n.DESERT,7]]],[e.TAPU_FINI,L.WATER,L.FAIRY,[[n.BEACH,4],[n.BEACH,7]]],[e.COSMOG,L.PSYCHIC,-1,[[n.SPACE,4]]],[e.COSMOEM,L.PSYCHIC,-1,[[n.SPACE,4]]],[e.SOLGALEO,L.PSYCHIC,L.STEEL,[[n.SPACE,8,a.DAY]]],[e.LUNALA,L.PSYCHIC,L.GHOST,[[n.SPACE,8,a.NIGHT]]],[e.NIHILEGO,L.ROCK,L.POISON,[[n.SEABED,4],[n.SEABED,7]]],[e.BUZZWOLE,L.BUG,L.FIGHTING,[[n.JUNGLE,4],[n.JUNGLE,7]]],[e.PHEROMOSA,L.BUG,L.FIGHTING,[[n.DESERT,4],[n.DESERT,7]]],[e.XURKITREE,L.ELECTRIC,-1,[[n.POWER_PLANT,4],[n.POWER_PLANT,7]]],[e.CELESTEELA,L.STEEL,L.FLYING,[[n.SPACE,4],[n.SPACE,7]]],[e.KARTANA,L.GRASS,L.STEEL,[[n.FOREST,4],[n.FOREST,7]]],[e.GUZZLORD,L.DARK,L.DRAGON,[[n.SLUM,4],[n.SLUM,7]]],[e.NECROZMA,L.PSYCHIC,-1,[[n.SPACE,8]]],[e.MAGEARNA,L.STEEL,L.FAIRY,[[n.FACTORY,4],[n.FACTORY,7]]],[e.MARSHADOW,L.FIGHTING,L.GHOST,[[n.GRAVEYARD,4],[n.GRAVEYARD,7]]],[e.POIPOLE,L.POISON,-1,[[n.SWAMP,4]]],[e.NAGANADEL,L.POISON,L.DRAGON,[[n.SWAMP,7]]],[e.STAKATAKA,L.ROCK,L.STEEL,[[n.CONSTRUCTION_SITE,4],[n.CONSTRUCTION_SITE,7]]],[e.BLACEPHALON,L.FIRE,L.GHOST,[[n.ISLAND,4],[n.ISLAND,7]]],[e.ZERAORA,L.ELECTRIC,-1,[[n.POWER_PLANT,4],[n.POWER_PLANT,7]]],[e.MELTAN,L.STEEL,-1,[]],[e.MELMETAL,L.STEEL,-1,[]],[e.GROOKEY,L.GRASS,-1,[[n.JUNGLE,2]]],[e.THWACKEY,L.GRASS,-1,[[n.JUNGLE,2]]],[e.RILLABOOM,L.GRASS,-1,[[n.JUNGLE,2],[n.JUNGLE,6]]],[e.SCORBUNNY,L.FIRE,-1,[[n.VOLCANO,2]]],[e.RABOOT,L.FIRE,-1,[[n.VOLCANO,2]]],[e.CINDERACE,L.FIRE,-1,[[n.VOLCANO,2],[n.VOLCANO,6]]],[e.SOBBLE,L.WATER,-1,[[n.LAKE,2]]],[e.DRIZZILE,L.WATER,-1,[[n.LAKE,2]]],[e.INTELEON,L.WATER,-1,[[n.LAKE,2],[n.LAKE,6]]],[e.SKWOVET,L.NORMAL,-1,[[n.TOWN,0,[a.DAWN,a.DAY]],[n.PLAINS,0,[a.DAWN,a.DAY]]]],[e.GREEDENT,L.NORMAL,-1,[[n.PLAINS,0,[a.DAWN,a.DAY]],[n.PLAINS,5,[a.DAWN,a.DAY]]]],[e.ROOKIDEE,L.FLYING,-1,[[n.TOWN,2],[n.PLAINS,2],[n.MOUNTAIN,1,[a.DAWN,a.DAY]]]],[e.CORVISQUIRE,L.FLYING,-1,[[n.PLAINS,2],[n.MOUNTAIN,1,[a.DAWN,a.DAY]]]],[e.CORVIKNIGHT,L.FLYING,L.STEEL,[[n.PLAINS,2],[n.MOUNTAIN,1,[a.DAWN,a.DAY]],[n.MOUNTAIN,5,[a.DAWN,a.DAY]]]],[e.BLIPBUG,L.BUG,-1,[[n.TOWN,0,[a.DUSK,a.NIGHT]]]],[e.DOTTLER,L.BUG,L.PSYCHIC,[[n.FOREST,1,[a.DUSK,a.NIGHT]]]],[e.ORBEETLE,L.BUG,L.PSYCHIC,[[n.FOREST,1,[a.DUSK,a.NIGHT]],[n.FOREST,5,[a.DUSK,a.NIGHT]]]],[e.NICKIT,L.DARK,-1,[[n.ABYSS,0]]],[e.THIEVUL,L.DARK,-1,[[n.ABYSS,0],[n.ABYSS,5]]],[e.GOSSIFLEUR,L.GRASS,-1,[[n.MEADOW,0]]],[e.ELDEGOSS,L.GRASS,-1,[[n.MEADOW,0]]],[e.WOOLOO,L.NORMAL,-1,[[n.TOWN,0],[n.MEADOW,0]]],[e.DUBWOOL,L.NORMAL,-1,[[n.MEADOW,0],[n.MEADOW,5]]],[e.CHEWTLE,L.WATER,-1,[[n.LAKE,0]]],[e.DREDNAW,L.WATER,L.ROCK,[[n.LAKE,0],[n.LAKE,5]]],[e.YAMPER,L.ELECTRIC,-1,[[n.METROPOLIS,0,[a.DAWN,a.DAY]]]],[e.BOLTUND,L.ELECTRIC,-1,[[n.METROPOLIS,0,[a.DAWN,a.DAY]],[n.METROPOLIS,5,[a.DAWN,a.DAY]]]],[e.ROLYCOLY,L.ROCK,-1,[[n.VOLCANO,0]]],[e.CARKOL,L.ROCK,L.FIRE,[[n.VOLCANO,0]]],[e.COALOSSAL,L.ROCK,L.FIRE,[[n.VOLCANO,0],[n.VOLCANO,5]]],[e.APPLIN,L.GRASS,L.DRAGON,[[n.MEADOW,2]]],[e.FLAPPLE,L.GRASS,L.DRAGON,[[n.MEADOW,6]]],[e.APPLETUN,L.GRASS,L.DRAGON,[[n.MEADOW,6]]],[e.SILICOBRA,L.GROUND,-1,[[n.DESERT,0]]],[e.SANDACONDA,L.GROUND,-1,[[n.DESERT,0],[n.DESERT,5]]],[e.CRAMORANT,L.FLYING,L.WATER,[[n.SEA,0,[a.DAWN,a.DAY]],[n.SEA,5,[a.DAWN,a.DAY]]]],[e.ARROKUDA,L.WATER,-1,[[n.SEABED,0]]],[e.BARRASKEWDA,L.WATER,-1,[[n.SEABED,0],[n.SEABED,5]]],[e.TOXEL,L.ELECTRIC,L.POISON,[]],[e.TOXTRICITY,L.ELECTRIC,L.POISON,[[n.SLUM,2,[a.DUSK,a.NIGHT]],[n.SLUM,6,[a.DUSK,a.NIGHT]]]],[e.SIZZLIPEDE,L.FIRE,L.BUG,[[n.BADLANDS,1,[a.DAWN,a.DAY]]]],[e.CENTISKORCH,L.FIRE,L.BUG,[[n.BADLANDS,1,[a.DAWN,a.DAY]],[n.BADLANDS,5,[a.DAWN,a.DAY]]]],[e.CLOBBOPUS,L.FIGHTING,-1,[[n.DOJO,0]]],[e.GRAPPLOCT,L.FIGHTING,-1,[[n.DOJO,0],[n.DOJO,5]]],[e.SINISTEA,L.GHOST,-1,[[n.GRAVEYARD,1]]],[e.POLTEAGEIST,L.GHOST,-1,[[n.GRAVEYARD,1],[n.GRAVEYARD,5]]],[e.HATENNA,L.PSYCHIC,-1,[[n.FAIRY_CAVE,1]]],[e.HATTREM,L.PSYCHIC,-1,[[n.FAIRY_CAVE,1]]],[e.HATTERENE,L.PSYCHIC,L.FAIRY,[[n.FAIRY_CAVE,1],[n.FAIRY_CAVE,5]]],[e.IMPIDIMP,L.DARK,L.FAIRY,[[n.ABYSS,0]]],[e.MORGREM,L.DARK,L.FAIRY,[[n.ABYSS,0]]],[e.GRIMMSNARL,L.DARK,L.FAIRY,[[n.ABYSS,0],[n.ABYSS,5]]],[e.OBSTAGOON,L.DARK,L.NORMAL,[[n.SLUM,2,[a.DUSK,a.NIGHT]],[n.SLUM,6,[a.DUSK,a.NIGHT]]]],[e.PERRSERKER,L.STEEL,-1,[[n.CONSTRUCTION_SITE,2,a.DUSK],[n.CONSTRUCTION_SITE,6,a.DUSK]]],[e.CURSOLA,L.GHOST,-1,[[n.SEABED,3],[n.SEABED,6]]],[e.SIRFETCHD,L.FIGHTING,-1,[[n.DOJO,6]]],[e.MR_RIME,L.ICE,L.PSYCHIC,[[n.SNOWY_FOREST,3],[n.SNOWY_FOREST,6]]],[e.RUNERIGUS,L.GROUND,L.GHOST,[[n.RUINS,3,[a.DUSK,a.NIGHT]],[n.RUINS,6,[a.DUSK,a.NIGHT]]]],[e.MILCERY,L.FAIRY,-1,[[n.FAIRY_CAVE,0]]],[e.ALCREMIE,L.FAIRY,-1,[[n.FAIRY_CAVE,0],[n.FAIRY_CAVE,5]]],[e.FALINKS,L.FIGHTING,-1,[[n.JUNGLE,1],[n.JUNGLE,5]]],[e.PINCURCHIN,L.ELECTRIC,-1,[[n.SEABED,1]]],[e.SNOM,L.ICE,L.BUG,[[n.ICE_CAVE,0],[n.SNOWY_FOREST,0,[a.DUSK,a.NIGHT]]]],[e.FROSMOTH,L.ICE,L.BUG,[[n.ICE_CAVE,0],[n.SNOWY_FOREST,0,[a.DUSK,a.NIGHT]],[n.SNOWY_FOREST,5,[a.DUSK,a.NIGHT]]]],[e.STONJOURNER,L.ROCK,-1,[[n.RUINS,2]]],[e.EISCUE,L.ICE,-1,[[n.ICE_CAVE,1],[n.SNOWY_FOREST,0]]],[e.INDEEDEE,L.PSYCHIC,L.NORMAL,[[n.METROPOLIS,1,[a.DAWN,a.DAY]]]],[e.MORPEKO,L.ELECTRIC,L.DARK,[[n.METROPOLIS,2,[a.DUSK,a.NIGHT]]]],[e.CUFANT,L.STEEL,-1,[[n.BADLANDS,1]]],[e.COPPERAJAH,L.STEEL,-1,[[n.BADLANDS,1],[n.BADLANDS,5]]],[e.DRACOZOLT,L.ELECTRIC,L.DRAGON,[[n.WASTELAND,3],[n.WASTELAND,6]]],[e.ARCTOZOLT,L.ELECTRIC,L.ICE,[[n.SNOWY_FOREST,3],[n.SNOWY_FOREST,6]]],[e.DRACOVISH,L.WATER,L.DRAGON,[[n.WASTELAND,3],[n.WASTELAND,6]]],[e.ARCTOVISH,L.WATER,L.ICE,[[n.SEABED,3],[n.SEABED,6]]],[e.DURALUDON,L.STEEL,L.DRAGON,[[n.CONSTRUCTION_SITE,2]]],[e.DREEPY,L.DRAGON,L.GHOST,[[n.WASTELAND,2,[a.DUSK,a.NIGHT]]]],[e.DRAKLOAK,L.DRAGON,L.GHOST,[[n.WASTELAND,2,[a.DUSK,a.NIGHT]]]],[e.DRAGAPULT,L.DRAGON,L.GHOST,[[n.WASTELAND,2,[a.DUSK,a.NIGHT]],[n.WASTELAND,5,[a.DUSK,a.NIGHT]]]],[e.ZACIAN,L.FAIRY,-1,[[n.SNOWY_FOREST,8]]],[e.ZAMAZENTA,L.FIGHTING,-1,[[n.DOJO,8]]],[e.ETERNATUS,L.POISON,L.DRAGON,[[n.END,5]]],[e.KUBFU,L.FIGHTING,-1,[[n.DOJO,4]]],[e.URSHIFU,L.FIGHTING,L.DARK,[[n.DOJO,7]]],[e.ZARUDE,L.DARK,L.GRASS,[[n.JUNGLE,4],[n.JUNGLE,7]]],[e.REGIELEKI,L.ELECTRIC,-1,[[n.POWER_PLANT,4],[n.POWER_PLANT,7]]],[e.REGIDRAGO,L.DRAGON,-1,[[n.WASTELAND,4],[n.WASTELAND,7]]],[e.GLASTRIER,L.ICE,-1,[[n.SNOWY_FOREST,4],[n.SNOWY_FOREST,7]]],[e.SPECTRIER,L.GHOST,-1,[[n.GRAVEYARD,4],[n.GRAVEYARD,7]]],[e.CALYREX,L.PSYCHIC,L.GRASS,[[n.FOREST,8]]],[e.WYRDEER,L.NORMAL,L.PSYCHIC,[[n.SNOWY_FOREST,5,[a.DAWN,a.DAY]]]],[e.KLEAVOR,L.BUG,L.ROCK,[[n.JUNGLE,3],[n.JUNGLE,8]]],[e.URSALUNA,L.GROUND,L.NORMAL,[[n.SNOWY_FOREST,5]]],[e.BASCULEGION,L.WATER,L.GHOST,[[n.SEABED,6]]],[e.SNEASLER,L.FIGHTING,L.POISON,[[n.SNOWY_FOREST,6,[a.DAWN,a.DAY]]]],[e.OVERQWIL,L.DARK,L.POISON,[[n.SEABED,6]]],[e.ENAMORUS,L.FAIRY,L.FLYING,[[n.FAIRY_CAVE,4],[n.FAIRY_CAVE,7]]],[e.SPRIGATITO,L.GRASS,-1,[[n.MEADOW,2]]],[e.FLORAGATO,L.GRASS,-1,[[n.MEADOW,2]]],[e.MEOWSCARADA,L.GRASS,L.DARK,[[n.MEADOW,2],[n.MEADOW,6]]],[e.FUECOCO,L.FIRE,-1,[[n.GRAVEYARD,2]]],[e.CROCALOR,L.FIRE,-1,[[n.GRAVEYARD,2]]],[e.SKELEDIRGE,L.FIRE,L.GHOST,[[n.GRAVEYARD,2],[n.GRAVEYARD,6]]],[e.QUAXLY,L.WATER,-1,[[n.BEACH,2]]],[e.QUAXWELL,L.WATER,-1,[[n.BEACH,2]]],[e.QUAQUAVAL,L.WATER,L.FIGHTING,[[n.BEACH,2],[n.BEACH,6]]],[e.LECHONK,L.NORMAL,-1,[[n.TOWN,0],[n.PLAINS,0]]],[e.OINKOLOGNE,L.NORMAL,-1,[[n.PLAINS,0],[n.PLAINS,5]]],[e.TAROUNTULA,L.BUG,-1,[[n.FOREST,0]]],[e.SPIDOPS,L.BUG,-1,[[n.FOREST,0],[n.FOREST,5]]],[e.NYMBLE,L.BUG,-1,[[n.TALL_GRASS,0],[n.FOREST,0]]],[e.LOKIX,L.BUG,L.DARK,[[n.TALL_GRASS,0],[n.TALL_GRASS,5],[n.FOREST,0],[n.FOREST,5]]],[e.PAWMI,L.ELECTRIC,-1,[[n.TOWN,1,[a.DAWN,a.DAY]],[n.PLAINS,1,[a.DAWN,a.DAY]],[n.POWER_PLANT,0]]],[e.PAWMO,L.ELECTRIC,L.FIGHTING,[[n.PLAINS,1,[a.DAWN,a.DAY]],[n.POWER_PLANT,0]]],[e.PAWMOT,L.ELECTRIC,L.FIGHTING,[[n.PLAINS,1,[a.DAWN,a.DAY]],[n.PLAINS,6,[a.DAWN,a.DAY]],[n.POWER_PLANT,0],[n.POWER_PLANT,5]]],[e.TANDEMAUS,L.NORMAL,-1,[[n.TOWN,2,[a.DAWN,a.DAY]],[n.METROPOLIS,2,[a.DAWN,a.DAY]]]],[e.MAUSHOLD,L.NORMAL,-1,[[n.METROPOLIS,2,[a.DAWN,a.DAY]],[n.METROPOLIS,6,[a.DAWN,a.DAY]]]],[e.FIDOUGH,L.FAIRY,-1,[[n.TOWN,1],[n.METROPOLIS,1]]],[e.DACHSBUN,L.FAIRY,-1,[[n.METROPOLIS,1],[n.METROPOLIS,5]]],[e.SMOLIV,L.GRASS,L.NORMAL,[[n.MEADOW,1,[a.DAWN,a.DAY]]]],[e.DOLLIV,L.GRASS,L.NORMAL,[[n.MEADOW,1,[a.DAWN,a.DAY]]]],[e.ARBOLIVA,L.GRASS,L.NORMAL,[[n.MEADOW,1,[a.DAWN,a.DAY]],[n.MEADOW,5,[a.DAWN,a.DAY]]]],[e.SQUAWKABILLY,L.NORMAL,L.FLYING,[[n.METROPOLIS,1],[n.FOREST,2]]],[e.NACLI,L.ROCK,-1,[[n.MOUNTAIN,1],[n.CAVE,0]]],[e.NACLSTACK,L.ROCK,-1,[[n.MOUNTAIN,1],[n.CAVE,0]]],[e.GARGANACL,L.ROCK,-1,[[n.MOUNTAIN,1],[n.MOUNTAIN,5],[n.CAVE,0],[n.CAVE,5]]],[e.CHARCADET,L.FIRE,-1,[[n.VOLCANO,2]]],[e.ARMAROUGE,L.FIRE,L.PSYCHIC,[[n.VOLCANO,2],[n.VOLCANO,6]]],[e.CERULEDGE,L.FIRE,L.GHOST,[[n.GRAVEYARD,2],[n.GRAVEYARD,6]]],[e.TADBULB,L.ELECTRIC,-1,[[n.POWER_PLANT,0]]],[e.BELLIBOLT,L.ELECTRIC,-1,[[n.POWER_PLANT,0],[n.POWER_PLANT,5]]],[e.WATTREL,L.ELECTRIC,L.FLYING,[[n.SEA,1]]],[e.KILOWATTREL,L.ELECTRIC,L.FLYING,[[n.SEA,1],[n.SEA,5]]],[e.MASCHIFF,L.DARK,-1,[[n.ABYSS,0]]],[e.MABOSSTIFF,L.DARK,-1,[[n.ABYSS,0],[n.ABYSS,5]]],[e.SHROODLE,L.POISON,L.NORMAL,[[n.FOREST,0]]],[e.GRAFAIAI,L.POISON,L.NORMAL,[[n.FOREST,0],[n.FOREST,5]]],[e.BRAMBLIN,L.GRASS,L.GHOST,[[n.DESERT,1]]],[e.BRAMBLEGHAST,L.GRASS,L.GHOST,[[n.DESERT,1],[n.DESERT,5]]],[e.TOEDSCOOL,L.GROUND,L.GRASS,[[n.FOREST,2]]],[e.TOEDSCRUEL,L.GROUND,L.GRASS,[[n.FOREST,2],[n.FOREST,6]]],[e.KLAWF,L.ROCK,-1,[[n.MOUNTAIN,2]]],[e.CAPSAKID,L.GRASS,-1,[[n.BADLANDS,1,[a.DAWN,a.DAY]]]],[e.SCOVILLAIN,L.GRASS,L.FIRE,[[n.BADLANDS,1,[a.DAWN,a.DAY]],[n.BADLANDS,5,[a.DAWN,a.DAY]]]],[e.RELLOR,L.BUG,-1,[[n.DESERT,0,[a.DAWN,a.DAY]]]],[e.RABSCA,L.BUG,L.PSYCHIC,[[n.DESERT,0,[a.DAWN,a.DAY]],[n.DESERT,5,[a.DAWN,a.DAY]]]],[e.FLITTLE,L.PSYCHIC,-1,[[n.MOUNTAIN,1,[a.DAWN,a.DAY]]]],[e.ESPATHRA,L.PSYCHIC,-1,[[n.MOUNTAIN,1,[a.DAWN,a.DAY]],[n.MOUNTAIN,5,[a.DAWN,a.DAY]]]],[e.TINKATINK,L.FAIRY,L.STEEL,[[n.RUINS,1]]],[e.TINKATUFF,L.FAIRY,L.STEEL,[[n.RUINS,1]]],[e.TINKATON,L.FAIRY,L.STEEL,[[n.RUINS,1],[n.RUINS,5]]],[e.WIGLETT,L.WATER,-1,[[n.BEACH,0]]],[e.WUGTRIO,L.WATER,-1,[[n.BEACH,0]]],[e.BOMBIRDIER,L.FLYING,L.DARK,[[n.MOUNTAIN,1,[a.DAWN,a.DAY]]]],[e.FINIZEN,L.WATER,-1,[[n.SEA,0,[a.DAWN,a.DAY]]]],[e.PALAFIN,L.WATER,-1,[[n.SEA,0,[a.DAWN,a.DAY]],[n.SEA,5,[a.DAWN,a.DAY]]]],[e.VAROOM,L.STEEL,L.POISON,[[n.METROPOLIS,2],[n.SLUM,2]]],[e.REVAVROOM,L.STEEL,L.POISON,[[n.METROPOLIS,2],[n.METROPOLIS,6],[n.SLUM,2],[n.SLUM,6]]],[e.CYCLIZAR,L.DRAGON,L.NORMAL,[[n.WASTELAND,1]]],[e.ORTHWORM,L.STEEL,-1,[[n.DESERT,1]]],[e.GLIMMET,L.ROCK,L.POISON,[[n.CAVE,2]]],[e.GLIMMORA,L.ROCK,L.POISON,[[n.CAVE,2],[n.CAVE,6]]],[e.GREAVARD,L.GHOST,-1,[[n.GRAVEYARD,0]]],[e.HOUNDSTONE,L.GHOST,-1,[[n.GRAVEYARD,0],[n.GRAVEYARD,5]]],[e.FLAMIGO,L.FLYING,L.FIGHTING,[[n.LAKE,1]]],[e.CETODDLE,L.ICE,-1,[[n.ICE_CAVE,1]]],[e.CETITAN,L.ICE,-1,[[n.ICE_CAVE,1],[n.ICE_CAVE,5]]],[e.VELUZA,L.WATER,L.PSYCHIC,[[n.SEABED,0]]],[e.DONDOZO,L.WATER,-1,[[n.SEABED,1],[n.SEABED,5]]],[e.TATSUGIRI,L.DRAGON,L.WATER,[[n.BEACH,2]]],[e.ANNIHILAPE,L.FIGHTING,L.GHOST,[[n.PLAINS,1,[a.DUSK,a.NIGHT]],[n.DOJO,0],[n.DOJO,5]]],[e.CLODSIRE,L.POISON,L.GROUND,[[n.SWAMP,0,[a.DUSK,a.NIGHT]],[n.SWAMP,5,[a.DUSK,a.NIGHT]]]],[e.FARIGIRAF,L.NORMAL,L.PSYCHIC,[[n.TALL_GRASS,2],[n.TALL_GRASS,6]]],[e.DUDUNSPARCE,L.NORMAL,-1,[[n.PLAINS,3],[n.PLAINS,6]]],[e.KINGAMBIT,L.DARK,L.STEEL,[[n.ABYSS,0],[n.ABYSS,5]]],[e.GREAT_TUSK,L.GROUND,L.FIGHTING,[[n.END,0]]],[e.SCREAM_TAIL,L.FAIRY,L.PSYCHIC,[[n.END,0]]],[e.BRUTE_BONNET,L.GRASS,L.DARK,[[n.END,0]]],[e.FLUTTER_MANE,L.GHOST,L.FAIRY,[[n.END,0]]],[e.SLITHER_WING,L.BUG,L.FIGHTING,[[n.END,0]]],[e.SANDY_SHOCKS,L.ELECTRIC,L.GROUND,[[n.END,0]]],[e.IRON_TREADS,L.GROUND,L.STEEL,[[n.END,0]]],[e.IRON_BUNDLE,L.ICE,L.WATER,[[n.END,0]]],[e.IRON_HANDS,L.FIGHTING,L.ELECTRIC,[[n.END,0]]],[e.IRON_JUGULIS,L.DARK,L.FLYING,[[n.END,0]]],[e.IRON_MOTH,L.FIRE,L.POISON,[[n.END,0]]],[e.IRON_THORNS,L.ROCK,L.ELECTRIC,[[n.END,0]]],[e.FRIGIBAX,L.DRAGON,L.ICE,[[n.WASTELAND,2]]],[e.ARCTIBAX,L.DRAGON,L.ICE,[[n.WASTELAND,2]]],[e.BAXCALIBUR,L.DRAGON,L.ICE,[[n.WASTELAND,2],[n.WASTELAND,5]]],[e.GIMMIGHOUL,L.GHOST,-1,[[n.TEMPLE,2]]],[e.GHOLDENGO,L.STEEL,L.GHOST,[[n.TEMPLE,2],[n.TEMPLE,6]]],[e.WO_CHIEN,L.DARK,L.GRASS,[[n.FOREST,4],[n.FOREST,7]]],[e.CHIEN_PAO,L.DARK,L.ICE,[[n.SNOWY_FOREST,4],[n.SNOWY_FOREST,7]]],[e.TING_LU,L.DARK,L.GROUND,[[n.MOUNTAIN,4],[n.MOUNTAIN,7]]],[e.CHI_YU,L.DARK,L.FIRE,[[n.VOLCANO,4],[n.VOLCANO,7]]],[e.ROARING_MOON,L.DRAGON,L.DARK,[[n.END,1]]],[e.IRON_VALIANT,L.FAIRY,L.FIGHTING,[[n.END,1]]],[e.KORAIDON,L.FIGHTING,L.DRAGON,[[n.RUINS,8]]],[e.MIRAIDON,L.ELECTRIC,L.DRAGON,[[n.LABORATORY,8]]],[e.WALKING_WAKE,L.WATER,L.DRAGON,[[n.END,2]]],[e.IRON_LEAVES,L.GRASS,L.PSYCHIC,[[n.END,2]]],[e.DIPPLIN,L.GRASS,L.DRAGON,[[n.MEADOW,2]]],[e.POLTCHAGEIST,L.GRASS,L.GHOST,[[n.BADLANDS,2]]],[e.SINISTCHA,L.GRASS,L.GHOST,[[n.BADLANDS,2],[n.BADLANDS,6]]],[e.OKIDOGI,L.POISON,L.FIGHTING,[[n.BADLANDS,4],[n.BADLANDS,7]]],[e.MUNKIDORI,L.POISON,L.PSYCHIC,[[n.JUNGLE,4],[n.JUNGLE,7]]],[e.FEZANDIPITI,L.POISON,L.FAIRY,[[n.RUINS,4],[n.RUINS,7]]],[e.OGERPON,L.GRASS,-1,[[n.MOUNTAIN,4],[n.MOUNTAIN,7]]],[e.ARCHALUDON,L.STEEL,L.DRAGON,[[n.CONSTRUCTION_SITE,6]]],[e.HYDRAPPLE,L.GRASS,L.DRAGON,[[n.MEADOW,6]]],[e.GOUGING_FIRE,L.FIRE,L.DRAGON,[[n.END,2]]],[e.RAGING_BOLT,L.ELECTRIC,L.DRAGON,[[n.END,2]]],[e.IRON_BOULDER,L.ROCK,L.PSYCHIC,[[n.END,2]]],[e.IRON_CROWN,L.STEEL,L.PSYCHIC,[[n.END,2]]],[e.TERAPAGOS,L.NORMAL,-1,[[n.CAVE,8]]],[e.PECHARUNT,L.POISON,L.GHOST,[]],[e.ALOLA_RATTATA,L.DARK,L.NORMAL,[[n.ISLAND,0,[a.DUSK,a.NIGHT]]]],[e.ALOLA_RATICATE,L.DARK,L.NORMAL,[[n.ISLAND,0,[a.DUSK,a.NIGHT]],[n.ISLAND,5,[a.DUSK,a.NIGHT]]]],[e.ALOLA_RAICHU,L.ELECTRIC,L.PSYCHIC,[[n.ISLAND,1,[a.DAWN,a.DAY]],[n.ISLAND,5,[a.DAWN,a.DAY]]]],[e.ALOLA_SANDSHREW,L.ICE,L.STEEL,[[n.ISLAND,0],[n.SNOWY_FOREST,2]]],[e.ALOLA_SANDSLASH,L.ICE,L.STEEL,[[n.ISLAND,0],[n.ISLAND,5],[n.SNOWY_FOREST,2],[n.SNOWY_FOREST,6]]],[e.ALOLA_VULPIX,L.ICE,-1,[[n.ISLAND,0],[n.SNOWY_FOREST,2]]],[e.ALOLA_NINETALES,L.ICE,L.FAIRY,[[n.ISLAND,0],[n.ISLAND,5],[n.SNOWY_FOREST,2],[n.SNOWY_FOREST,6]]],[e.ALOLA_DIGLETT,L.GROUND,L.STEEL,[[n.ISLAND,0]]],[e.ALOLA_DUGTRIO,L.GROUND,L.STEEL,[[n.ISLAND,0],[n.ISLAND,5]]],[e.ALOLA_MEOWTH,L.DARK,-1,[[n.ISLAND,0,[a.DUSK,a.NIGHT]]]],[e.ALOLA_PERSIAN,L.DARK,-1,[[n.ISLAND,0,[a.DUSK,a.NIGHT]],[n.ISLAND,5,[a.DUSK,a.NIGHT]]]],[e.ALOLA_GEODUDE,L.ROCK,L.ELECTRIC,[[n.ISLAND,0]]],[e.ALOLA_GRAVELER,L.ROCK,L.ELECTRIC,[[n.ISLAND,0]]],[e.ALOLA_GOLEM,L.ROCK,L.ELECTRIC,[[n.ISLAND,0],[n.ISLAND,5]]],[e.ALOLA_GRIMER,L.POISON,L.DARK,[[n.ISLAND,0]]],[e.ALOLA_MUK,L.POISON,L.DARK,[[n.ISLAND,0],[n.ISLAND,5]]],[e.ALOLA_EXEGGUTOR,L.GRASS,L.DRAGON,[[n.ISLAND,1,[a.DAWN,a.DAY]],[n.ISLAND,5,[a.DAWN,a.DAY]]]],[e.ALOLA_MAROWAK,L.FIRE,L.GHOST,[[n.ISLAND,1,[a.DUSK,a.NIGHT]],[n.ISLAND,5,[a.DUSK,a.NIGHT]]]],[e.ETERNAL_FLOETTE,L.FAIRY,-1,[[n.FAIRY_CAVE,2],[n.FAIRY_CAVE,6]]],[e.GALAR_MEOWTH,L.STEEL,-1,[[n.CONSTRUCTION_SITE,2,a.DUSK]]],[e.GALAR_PONYTA,L.PSYCHIC,-1,[[n.JUNGLE,2,a.DAWN]]],[e.GALAR_RAPIDASH,L.PSYCHIC,L.FAIRY,[[n.JUNGLE,2,a.DAWN],[n.JUNGLE,6,a.DAWN]]],[e.GALAR_SLOWPOKE,L.PSYCHIC,-1,[[n.SWAMP,3,[a.DAWN,a.DAY]]]],[e.GALAR_SLOWBRO,L.POISON,L.PSYCHIC,[[n.SWAMP,3,[a.DAWN,a.DAY]],[n.SWAMP,6,[a.DAWN,a.DAY]]]],[e.GALAR_FARFETCHD,L.FIGHTING,-1,[[n.DOJO,3]]],[e.GALAR_WEEZING,L.POISON,L.FAIRY,[[n.SLUM,6]]],[e.GALAR_MR_MIME,L.ICE,L.PSYCHIC,[[n.SNOWY_FOREST,3]]],[e.GALAR_ARTICUNO,L.PSYCHIC,L.FLYING,[[n.SNOWY_FOREST,4],[n.SNOWY_FOREST,8]]],[e.GALAR_ZAPDOS,L.FIGHTING,L.FLYING,[[n.DOJO,4],[n.DOJO,8]]],[e.GALAR_MOLTRES,L.DARK,L.FLYING,[[n.ABYSS,4],[n.ABYSS,8]]],[e.GALAR_SLOWKING,L.POISON,L.PSYCHIC,[[n.SWAMP,6,[a.DAWN,a.DAY]]]],[e.GALAR_CORSOLA,L.GHOST,-1,[[n.SEABED,3]]],[e.GALAR_ZIGZAGOON,L.DARK,L.NORMAL,[[n.SLUM,2,[a.DUSK,a.NIGHT]]]],[e.GALAR_LINOONE,L.DARK,L.NORMAL,[[n.SLUM,2,[a.DUSK,a.NIGHT]]]],[e.GALAR_DARUMAKA,L.ICE,-1,[[n.SNOWY_FOREST,2,[a.DAWN,a.DAY]]]],[e.GALAR_DARMANITAN,L.ICE,-1,[[n.SNOWY_FOREST,2,[a.DAWN,a.DAY]],[n.SNOWY_FOREST,6,[a.DAWN,a.DAY]]]],[e.GALAR_YAMASK,L.GROUND,L.GHOST,[[n.RUINS,3,[a.DUSK,a.NIGHT]]]],[e.GALAR_STUNFISK,L.GROUND,L.STEEL,[[n.SWAMP,3],[n.SWAMP,6]]],[e.HISUI_GROWLITHE,L.FIRE,L.ROCK,[[n.VOLCANO,3]]],[e.HISUI_ARCANINE,L.FIRE,L.ROCK,[[n.VOLCANO,6]]],[e.HISUI_VOLTORB,L.ELECTRIC,L.GRASS,[[n.POWER_PLANT,3]]],[e.HISUI_ELECTRODE,L.ELECTRIC,L.GRASS,[[n.POWER_PLANT,6]]],[e.HISUI_TYPHLOSION,L.FIRE,L.GHOST,[[n.GRAVEYARD,6]]],[e.HISUI_QWILFISH,L.DARK,L.POISON,[[n.SEABED,3]]],[e.HISUI_SNEASEL,L.FIGHTING,L.POISON,[[n.SNOWY_FOREST,3,[a.DAWN,a.DAY]]]],[e.HISUI_SAMUROTT,L.WATER,L.DARK,[[n.ABYSS,6]]],[e.HISUI_LILLIGANT,L.GRASS,L.FIGHTING,[[n.MEADOW,6,[a.DAWN,a.DAY]]]],[e.HISUI_ZORUA,L.NORMAL,L.GHOST,[[n.SNOWY_FOREST,3,[a.DUSK,a.NIGHT]]]],[e.HISUI_ZOROARK,L.NORMAL,L.GHOST,[[n.SNOWY_FOREST,3,[a.DUSK,a.NIGHT]],[n.SNOWY_FOREST,6,[a.DUSK,a.NIGHT]]]],[e.HISUI_BRAVIARY,L.PSYCHIC,L.FLYING,[[n.MOUNTAIN,6,[a.DAWN,a.DAY]]]],[e.HISUI_SLIGGOO,L.STEEL,L.DRAGON,[[n.SWAMP,3,[a.DAWN,a.DAY]]]],[e.HISUI_GOODRA,L.STEEL,L.DRAGON,[[n.SWAMP,3,[a.DAWN,a.DAY]],[n.SWAMP,6,[a.DAWN,a.DAY]]]],[e.HISUI_AVALUGG,L.ICE,L.ROCK,[[n.SNOWY_FOREST,3]]],[e.HISUI_DECIDUEYE,L.GRASS,L.FIGHTING,[[n.DOJO,6]]],[e.PALDEA_TAUROS,L.FIGHTING,-1,[[n.PLAINS,2,[a.DAWN,a.DAY]],[n.PLAINS,6,[a.DAWN,a.DAY]]]],[e.PALDEA_WOOPER,L.POISON,L.GROUND,[[n.SWAMP,0,[a.DUSK,a.NIGHT]]]],[e.BLOODMOON_URSALUNA,L.GROUND,L.NORMAL,[[n.FOREST,3,a.NIGHT],[n.FOREST,6,a.NIGHT]]]],E=[[l.ACE_TRAINER,[[n.PLAINS,1],[n.GRASS,1],[n.TALL_GRASS,1],[n.SWAMP,1],[n.BEACH,1],[n.LAKE,1],[n.MOUNTAIN,1],[n.BADLANDS,1],[n.CAVE,1],[n.MEADOW,1],[n.RUINS,1],[n.ABYSS,1],[n.FAIRY_CAVE,1],[n.TEMPLE,1]]],[l.ARTIST,[[n.METROPOLIS,2]]],[l.BACKERS,[]],[l.BACKPACKER,[[n.MOUNTAIN,0],[n.CAVE,0],[n.BADLANDS,0],[n.JUNGLE,0],[n.DESERT,0]]],[l.BAKER,[[n.SLUM,1],[n.MEADOW,1]]],[l.BEAUTY,[[n.METROPOLIS,0],[n.MEADOW,0],[n.FAIRY_CAVE,0]]],[l.BIKER,[[n.SLUM,0]]],[l.BLACK_BELT,[[n.DOJO,0],[n.PLAINS,2],[n.GRASS,2],[n.SWAMP,2],[n.BEACH,2],[n.LAKE,2],[n.MOUNTAIN,0],[n.CAVE,1],[n.RUINS,1]]],[l.BREEDER,[[n.PLAINS,0],[n.GRASS,0],[n.TALL_GRASS,1],[n.METROPOLIS,1],[n.BEACH,1],[n.LAKE,0],[n.MEADOW,1],[n.FAIRY_CAVE,1]]],[l.CLERK,[[n.METROPOLIS,0]]],[l.CYCLIST,[[n.PLAINS,1],[n.METROPOLIS,0]]],[l.DANCER,[]],[l.DEPOT_AGENT,[[n.METROPOLIS,1]]],[l.DOCTOR,[]],[l.FIREBREATHER,[[n.VOLCANO,0]]],[l.FISHERMAN,[[n.LAKE,0],[n.BEACH,0]]],[l.GUITARIST,[[n.METROPOLIS,1],[n.POWER_PLANT,0]]],[l.HARLEQUIN,[]],[l.HIKER,[[n.MOUNTAIN,0],[n.CAVE,0],[n.BADLANDS,0]]],[l.HOOLIGANS,[[n.SLUM,1]]],[l.HOOPSTER,[]],[l.INFIELDER,[]],[l.JANITOR,[]],[l.LINEBACKER,[]],[l.MAID,[]],[l.MUSICIAN,[[n.MEADOW,0]]],[l.HEX_MANIAC,[[n.RUINS,1],[n.GRAVEYARD,1]]],[l.NURSERY_AIDE,[]],[l.OFFICER,[[n.METROPOLIS,0],[n.CONSTRUCTION_SITE,0],[n.SLUM,0]]],[l.PARASOL_LADY,[[n.SWAMP,0],[n.LAKE,0],[n.MEADOW,0]]],[l.PILOT,[[n.MOUNTAIN,1]]],[l.POKEFAN,[[n.GRASS,1],[n.MEADOW,1]]],[l.PRESCHOOLER,[]],[l.PSYCHIC,[[n.GRAVEYARD,0],[n.RUINS,0]]],[l.RANGER,[[n.TALL_GRASS,1],[n.FOREST,0],[n.JUNGLE,0]]],[l.RICH,[[n.ISLAND,1]]],[l.RICH_KID,[[n.METROPOLIS,2],[n.ISLAND,0]]],[l.ROUGHNECK,[[n.SLUM,0]]],[l.SAILOR,[[n.SEA,0],[n.BEACH,0]]],[l.SCIENTIST,[[n.DESERT,0],[n.RUINS,0]]],[l.SMASHER,[]],[l.SNOW_WORKER,[[n.ICE_CAVE,0],[n.SNOWY_FOREST,0]]],[l.STRIKER,[]],[l.SCHOOL_KID,[[n.GRASS,0]]],[l.SWIMMER,[[n.SEA,0]]],[l.TWINS,[[n.PLAINS,0]]],[l.VETERAN,[[n.WASTELAND,0]]],[l.WAITER,[[n.METROPOLIS,0]]],[l.WORKER,[[n.POWER_PLANT,0],[n.FACTORY,0],[n.CONSTRUCTION_SITE,0]]],[l.YOUNGSTER,[[n.TOWN,0]]],[l.BROCK,[[n.CAVE,5]]],[l.MISTY,[[n.BEACH,5]]],[l.LT_SURGE,[[n.CONSTRUCTION_SITE,5]]],[l.ERIKA,[[n.GRASS,5]]],[l.JANINE,[[n.SWAMP,5]]],[l.SABRINA,[[n.RUINS,5]]],[l.GIOVANNI,[[n.LABORATORY,5]]],[l.BLAINE,[[n.VOLCANO,5]]],[l.FALKNER,[[n.MOUNTAIN,5]]],[l.BUGSY,[[n.FOREST,5]]],[l.WHITNEY,[[n.METROPOLIS,5]]],[l.MORTY,[[n.GRAVEYARD,5]]],[l.CHUCK,[[n.CONSTRUCTION_SITE,5]]],[l.JASMINE,[[n.FACTORY,5]]],[l.PRYCE,[[n.ICE_CAVE,5]]],[l.CLAIR,[[n.WASTELAND,5]]],[l.ROXANNE,[[n.CAVE,5]]],[l.BRAWLY,[[n.DOJO,5]]],[l.WATTSON,[[n.CONSTRUCTION_SITE,5]]],[l.FLANNERY,[[n.VOLCANO,5]]],[l.NORMAN,[[n.METROPOLIS,5]]],[l.WINONA,[[n.MOUNTAIN,5]]],[l.TATE,[[n.RUINS,5]]],[l.LIZA,[[n.RUINS,5]]],[l.JUAN,[[n.SEABED,5]]],[l.ROARK,[[n.CAVE,5]]],[l.GARDENIA,[[n.TALL_GRASS,5]]],[l.CRASHER_WAKE,[[n.LAKE,5]]],[l.MAYLENE,[[n.DOJO,5]]],[l.FANTINA,[[n.TEMPLE,5]]],[l.BYRON,[[n.FACTORY,5]]],[l.CANDICE,[[n.SNOWY_FOREST,5]]],[l.VOLKNER,[[n.POWER_PLANT,5]]],[l.CILAN,[[n.PLAINS,5]]],[l.CHILI,[[n.PLAINS,5]]],[l.CRESS,[[n.PLAINS,5]]],[l.CHEREN,[[n.PLAINS,5]]],[l.LENORA,[[n.MEADOW,5]]],[l.ROXIE,[[n.SWAMP,5]]],[l.BURGH,[[n.FOREST,5]]],[l.ELESA,[[n.POWER_PLANT,5]]],[l.CLAY,[[n.BADLANDS,5]]],[l.SKYLA,[[n.MOUNTAIN,5]]],[l.BRYCEN,[[n.ICE_CAVE,5]]],[l.DRAYDEN,[[n.WASTELAND,5]]],[l.MARLON,[[n.SEA,5]]],[l.VIOLA,[[n.TALL_GRASS,5]]],[l.GRANT,[[n.BADLANDS,5]]],[l.KORRINA,[[n.DOJO,5]]],[l.RAMOS,[[n.JUNGLE,5]]],[l.CLEMONT,[[n.POWER_PLANT,5]]],[l.VALERIE,[[n.FAIRY_CAVE,5]]],[l.OLYMPIA,[[n.SPACE,5]]],[l.WULFRIC,[[n.ICE_CAVE,5]]],[l.MILO,[[n.MEADOW,5]]],[l.NESSA,[[n.ISLAND,5]]],[l.KABU,[[n.VOLCANO,5]]],[l.BEA,[[n.DOJO,5]]],[l.ALLISTER,[[n.GRAVEYARD,5]]],[l.OPAL,[[n.FAIRY_CAVE,5]]],[l.BEDE,[[n.FAIRY_CAVE,5]]],[l.GORDIE,[[n.DESERT,5]]],[l.MELONY,[[n.SNOWY_FOREST,5]]],[l.PIERS,[[n.SLUM,5]]],[l.MARNIE,[[n.ABYSS,5]]],[l.RAIHAN,[[n.WASTELAND,5]]],[l.KATY,[[n.FOREST,5]]],[l.BRASSIUS,[[n.TALL_GRASS,5]]],[l.IONO,[[n.METROPOLIS,5]]],[l.KOFU,[[n.BEACH,5]]],[l.LARRY,[[n.METROPOLIS,5]]],[l.RYME,[[n.GRAVEYARD,5]]],[l.TULIP,[[n.RUINS,5]]],[l.GRUSHA,[[n.ICE_CAVE,5]]],[l.LORELEI,[]],[l.BRUNO,[]],[l.AGATHA,[]],[l.LANCE,[]],[l.WILL,[]],[l.KOGA,[]],[l.KAREN,[]],[l.SIDNEY,[]],[l.PHOEBE,[]],[l.GLACIA,[]],[l.DRAKE,[]],[l.AARON,[]],[l.BERTHA,[]],[l.FLINT,[]],[l.LUCIAN,[]],[l.SHAUNTAL,[]],[l.MARSHAL,[]],[l.GRIMSLEY,[]],[l.CAITLIN,[]],[l.MALVA,[]],[l.SIEBOLD,[]],[l.WIKSTROM,[]],[l.DRASNA,[]],[l.HALA,[]],[l.MOLAYNE,[]],[l.OLIVIA,[]],[l.ACEROLA,[]],[l.KAHILI,[]],[l.RIKA,[]],[l.POPPY,[]],[l.LARRY_ELITE,[]],[l.HASSEL,[]],[l.CRISPIN,[]],[l.AMARYS,[]],[l.LACEY,[]],[l.DRAYTON,[]],[l.BLUE,[]],[l.RED,[]],[l.LANCE_CHAMPION,[]],[l.STEVEN,[]],[l.WALLACE,[]],[l.CYNTHIA,[]],[l.ALDER,[]],[l.IRIS,[]],[l.DIANTHA,[]],[l.HAU,[]],[l.GEETA,[]],[l.NEMONA,[]],[l.KIERAN,[]],[l.LEON,[]],[l.RIVAL,[]]];IL[n.TOWN]=[0,1];const R=r((I,N)=>{if(I===n.END){const T=Object.keys(n).filter(o=>!Number.isNaN(Number(o)));T.pop();const i=De(T.length,1);I=n[T[i]]}const S=Array.isArray(_N[I])?_N[I]:[_N[I]];for(const T of S){const i=Array.isArray(T)?T[0]:T,o=Array.isArray(T)?T[1]:1;(!IL.hasOwnProperty(i)||o<IL[i][1]||N<IL[i][0]&&o===IL[i][1])&&(IL[i]=[N+1,o],R(i,N+1))}},"traverseBiome");R(n.TOWN,0),IL[n.END]=[Object.values(IL).map(I=>I[0]).reduce((I,N)=>Math.max(I,N),0)+1,1];for(const I of Ct(n)){bR[I]={},fs[I]={};for(const N of Ct(BE)){bR[I][N]={},fs[I][N]=[];for(const S of Ct(a))bR[I][N][S]=[]}}for(const I of t){const N=I[0],S=I[3],T=BA.hasOwnProperty(N)?BA[N]:[];!S.filter(i=>i[0]!==n.END).length&&!T.filter(i=>!!t.find(o=>o[0]===i.speciesId)[3].filter(o=>o[0]!==n.END).length).length&&_6.push(N),Tv[N]=[];for(const i of S){const o=i[0],C=i[1],U=i.length>2?Array.isArray(i[2])?i[2]:[i[2]]:[a.ALL];Tv[N].push({biome:o,tier:C,tod:U});for(const _ of U){if(!bR.hasOwnProperty(o)||!bR[o].hasOwnProperty(C)||!bR[o][C].hasOwnProperty(_))continue;const G=bR[o][C][_];let H=-1,c=0;for(let f=0;f<G.length;f++){const d=G[f];for(let w=0;w<d.length;w++){const m=d[w];if(BA.hasOwnProperty(m)&&BA[m].find(W=>W.speciesId===N)){H=f,c=w+1;break}if(T!=null&&T.find(W=>W.speciesId===m)){H=f,c=w;break}}if(H>-1)break}H>-1?G[H].splice(c,0,N):G.push([N])}}}for(const I of Object.keys(bR))for(const N of Object.keys(bR[I])){const S=Number.parseInt(N);for(const T of Object.keys(bR[I][N])){const i=bR[I][N][T];for(let o=0;o<i.length;o++){const C=i[o];if(C.length===1)i[o]=C[0];else{const U={1:[C[0]]};for(let _=1;_<C.length;_++){const G=C[_],H=C.flatMap(f=>BA[f]).find(f=>f&&f.speciesId===G),c=H.level-(H.level===1?1:0)+H.wildDelay*10-(S>=5?10:0);U.hasOwnProperty(c)?U[c].push(G):U[c]=[G]}i[o]=U}}}}for(const I of E){const N=I[0],S=I[1];for(const T of S){const i=T[0],o=T[1];if(!fs.hasOwnProperty(i)||!fs[i].hasOwnProperty(o))continue;fs[i][o].push(N)}}}r(BX,"initBiomes");const Kw=class Kw{constructor(E,R,I=0){this.eventTarget=new EventTarget,this.biomeType=E,this.tags=[],this.bgm=R,this.trainerPool=fs[E],this.updatePoolsForTimeOfDay(),this.playerTerasUsed=0,this.playerFaints=I}init(){const E=ni(this.biomeType);s.arenaPlayer.setBiome(this.biomeType),s.arenaPlayerTransition.setBiome(this.biomeType),s.arenaEnemy.setBiome(this.biomeType),s.arenaNextEnemy.setBiome(this.biomeType),s.arenaBg.setTexture(`${E}_bg`),s.arenaBgTransition.setTexture(`${E}_bg`),this.updatePoolsForTimeOfDay()}updatePoolsForTimeOfDay(){const E=this.getTimeOfDay();if(E!==this.lastTimeOfDay){this.pokemonPool={};for(const R of Object.keys(bR[this.biomeType]))this.pokemonPool[R]=Object.assign([],bR[this.biomeType][R][a.ALL]).concat(bR[this.biomeType][R][E]);this.lastTimeOfDay=E}}randomSpecies(E,R,I,N,S){const T=s.gameMode.getOverrideSpecies(E);if(T)return T;const i=!!s.getEncounterBossSegments(E,R)&&!!this.pokemonPool[BE.BOSS].length&&(this.biomeType!==n.END||s.gameMode.isClassic||s.gameMode.isWaveFinal(E)),o=i?64:512;let C=0;typeof N<"u"&&(C=N*(i?.5:2));const U=De(o-C);let _=i?U>=20?BE.BOSS:U>=6?BE.BOSS_RARE:U>=1?BE.BOSS_SUPER_RARE:BE.BOSS_ULTRA_RARE:U>=156?BE.COMMON:U>=32?BE.UNCOMMON:U>=6?BE.RARE:U>=1?BE.SUPER_RARE:BE.ULTRA_RARE;for(console.log(BE[_]);!this.pokemonPool[_].length;)console.log(`Downgraded rarity tier from ${BE[_]} to ${BE[_-1]}`),_--;const G=this.pokemonPool[_];let H,c=!1;if(!G.length)H=s.randomSpecies(E,R);else{const d=G[De(G.length)];let w;if(typeof d=="number")w=d;else{const m=Object.keys(d);for(let W=m.length-1;W>=0;W--){const v=Number.parseInt(m[W]);if(R>=v){const $=d[v];$.length>1?w=$[De($.length)]:w=$[0];break}}}if(H=de(w),H.subLegendary||H.legendary||H.mythical)switch(!0){case H.baseTotal>=720:c=R<90;break;case H.baseTotal>=670:c=R<70;break;case H.baseTotal>=580:c=R<50;break;default:c=R<30;break}}if(c&&(I||0)<10)return console.log("Incompatible level: regenerating..."),this.randomSpecies(E,R,(I||0)+1);const f=H.getWildSpeciesForLevel(R,!0,S??i,s.gameMode);return f!==H.speciesId&&(console.log("Replaced",e[H.speciesId],"with",e[f]),H=de(f)),H}randomTrainerType(E,R=!1){const I=!!this.trainerPool[BE.BOSS].length&&(s.gameMode.isTrainerBoss(E,this.biomeType,s.offsetGym)||R);console.log(R,this.trainerPool);const N=De(I?64:512);let S=I?N>=20?BE.BOSS:N>=6?BE.BOSS_RARE:N>=1?BE.BOSS_SUPER_RARE:BE.BOSS_ULTRA_RARE:N>=156?BE.COMMON:N>=32?BE.UNCOMMON:N>=6?BE.RARE:N>=1?BE.SUPER_RARE:BE.ULTRA_RARE;for(console.log(BE[S]);S&&!this.trainerPool[S].length;)console.log(`Downgraded trainer rarity tier from ${BE[S]} to ${BE[S-1]}`),S--;const T=this.trainerPool[S]||[];return T.length?T[De(T.length)]:l.BREEDER}getSpeciesFormIndex(E){switch(E.speciesId){case e.BURMY:case e.WORMADAM:switch(this.biomeType){case n.BEACH:return 1;case n.SLUM:return 2}break;case e.ROTOM:switch(this.biomeType){case n.VOLCANO:return 1;case n.SEA:return 2;case n.ICE_CAVE:return 3;case n.MOUNTAIN:return 4;case n.TALL_GRASS:return 5}break;case e.LYCANROC:switch(this.getTimeOfDay()){case a.DAY:case a.DAWN:return 0;case a.DUSK:return 2;case a.NIGHT:return 1}break}return 0}getBgTerrainColorRatioForBiome(){switch(this.biomeType){case n.SPACE:return 1;case n.END:return 0}return 131/180}trySetWeatherOverride(E){return this.weather=new ya(E,0),s.unshiftPhase(new Wt(void 0,void 0,XA.SUNNY+(E-1))),s.queueMessage(oV(E)),!0}canSetWeather(E){var R;return((R=this.weather)==null?void 0:R.weatherType)!==(E||void 0)}trySetWeather(E,R){var S,T,i,o;if(Ze.WEATHER_OVERRIDE)return this.trySetWeatherOverride(Ze.WEATHER_OVERRIDE);if(!this.canSetWeather(E))return!1;const I=((S=this.weather)==null?void 0:S.weatherType)||X.NONE;if((T=this.weather)!=null&&T.isImmutable()&&![X.HARSH_SUN,X.HEAVY_RAIN,X.STRONG_WINDS,X.NONE].includes(E))return s.unshiftPhase(new Wt(void 0,void 0,XA.SUNNY+(I-1),!0)),s.queueMessage(fx(I)),!1;const N=new me(0);return Ne(R)||(N.value=5,s.applyModifier(AT,R.isPlayer(),R,N)),this.weather=E?new ya(E,N.value):null,this.eventTarget.dispatchEvent(new tC(I,(i=this.weather)==null?void 0:i.weatherType,(o=this.weather)==null?void 0:o.turnsLeft)),this.weather?(s.unshiftPhase(new Wt(void 0,void 0,XA.SUNNY+(E-1),!0)),s.queueMessage(oV(E))):s.queueMessage(hx(I)),s.getField(!0).filter(C=>C.isOnField()).map(C=>{C.findAndRemoveTags(U=>"weatherTypes"in U&&!U.weatherTypes.find(_=>_===E)),j9(sr,C,E)}),!0}triggerWeatherBasedFormChanges(){s.getField(!0).forEach(E=>{const R=E.hasAbility(O.FORECAST)&&E.species.speciesId===e.CASTFORM,I=E.hasAbility(O.FLOWER_GIFT)&&E.species.speciesId===e.CHERRIM;(R||I)&&s.triggerPokemonFormChange(E,ZR)})}triggerWeatherBasedFormChangesToNormal(){s.getField(!0).forEach(E=>{const R=E.hasAbility(O.FORECAST,!1,!0)&&E.species.speciesId===e.CASTFORM,I=E.hasAbility(O.FLOWER_GIFT,!1,!0)&&E.species.speciesId===e.CHERRIM;if(R||I)return s.triggerPokemonFormChange(E,CI)})}canSetTerrain(E){var R;return((R=this.terrain)==null?void 0:R.terrainType)!==(E||void 0)}trySetTerrain(E,R=!1,I){var T,i,o;if(!this.canSetTerrain(E))return!1;const N=((T=this.terrain)==null?void 0:T.terrainType)||$e.NONE,S=new me(0);return Ne(I)||(S.value=5,s.applyModifier(AT,I.isPlayer(),I,S)),this.terrain=E?new eC(E,S.value):null,this.eventTarget.dispatchEvent(new RC(N,(i=this.terrain)==null?void 0:i.terrainType,(o=this.terrain)==null?void 0:o.turnsLeft)),this.terrain?(R||s.unshiftPhase(new Wt(void 0,void 0,XA.MISTY_TERRAIN+(E-1))),s.queueMessage(Kx(E))):s.queueMessage(Fx(N)),s.getField(!0).filter(C=>C.isOnField()).map(C=>{C.findAndRemoveTags(U=>"terrainTypes"in U&&!U.terrainTypes.find(_=>_===E)),eX(rl,C,E),sA(Fl,C,null,!1)}),!0}isMoveWeatherCancelled(E,R){return!!this.weather&&!this.weather.isEffectSuppressed()&&this.weather.isMoveWeatherCancelled(E,R)}isMoveTerrainCancelled(E,R,I){return!!this.terrain&&this.terrain.isMoveTerrainCancelled(E,R,I)}getWeatherType(){var E;return((E=this.weather)==null?void 0:E.weatherType)??X.NONE}getTerrainType(){var E;return((E=this.terrain)==null?void 0:E.terrainType)??$e.NONE}getAttackTypeMultiplier(E,R){let I=1;this.weather&&!this.weather.isEffectSuppressed()&&(I=this.weather.getAttackTypeMultiplier(E));let N=1;return this.terrain&&R&&(N=this.terrain.getAttackTypeMultiplier(E)),I*N}getTrainerChance(){switch(this.biomeType){case n.METROPOLIS:return 2;case n.SLUM:case n.BEACH:case n.DOJO:case n.CONSTRUCTION_SITE:return 4;case n.PLAINS:case n.GRASS:case n.LAKE:case n.CAVE:return 6;case n.TALL_GRASS:case n.FOREST:case n.SEA:case n.SWAMP:case n.MOUNTAIN:case n.BADLANDS:case n.DESERT:case n.MEADOW:case n.POWER_PLANT:case n.GRAVEYARD:case n.FACTORY:case n.SNOWY_FOREST:return 8;case n.ICE_CAVE:case n.VOLCANO:case n.RUINS:case n.WASTELAND:case n.JUNGLE:case n.FAIRY_CAVE:return 12;case n.SEABED:case n.ABYSS:case n.SPACE:case n.TEMPLE:return 16;default:return 0}}getTimeOfDay(){var R;switch(this.biomeType){case n.ABYSS:return a.NIGHT}const E=((((R=s.currentBattle)==null?void 0:R.waveIndex)||0)+s.waveCycleOffset)%40;return E<15?a.DAY:E<20?a.DUSK:E<35?a.NIGHT:a.DAWN}isOutside(){switch(this.biomeType){case n.SEABED:case n.CAVE:case n.ICE_CAVE:case n.POWER_PLANT:case n.DOJO:case n.FACTORY:case n.ABYSS:case n.FAIRY_CAVE:case n.TEMPLE:case n.LABORATORY:return!1;default:return!0}}overrideTint(){switch(Ze.ARENA_TINT_OVERRIDE){case a.DUSK:return[98,48,73].map(E=>Math.round((E+128)/2));case a.NIGHT:return[64,64,64];case a.DAWN:case a.DAY:default:return[128,128,128]}}getDayTint(){if(Ze.ARENA_TINT_OVERRIDE!==null)return this.overrideTint();switch(this.biomeType){case n.ABYSS:return[64,64,64];default:return[128,128,128]}}getDuskTint(){if(Ze.ARENA_TINT_OVERRIDE)return this.overrideTint();if(!this.isOutside())return[0,0,0];switch(this.biomeType){default:return[98,48,73].map(E=>Math.round((E+128)/2))}}getNightTint(){if(Ze.ARENA_TINT_OVERRIDE)return this.overrideTint();switch(this.biomeType){case n.ABYSS:case n.SPACE:case n.END:return this.getDayTint()}if(!this.isOutside())return[64,64,64];switch(this.biomeType){default:return[48,48,98]}}setIgnoreAbilities(E,R=null){this.ignoreAbilities=E,this.ignoringEffectSource=E?R:null}applyTagsForSide(E,R,I,...N){let S=typeof E=="string"?this.tags.filter(T=>T.tagType===E):this.tags.filter(T=>T instanceof E);R!==qe.BOTH&&(S=S.filter(T=>T.side===R)),S.forEach(T=>T.apply(this,I,...N))}applyTags(E,R,...I){this.applyTagsForSide(E,qe.BOTH,R,...I)}addTag(E,R,I,N,S=qe.BOTH,T=!1,i){const o=this.getTagOnSide(E,S);if(o){if(o.onOverlap(this,s.getPokemonById(N)),o instanceof _O){const{tagType:U,side:_,turnCount:G,layers:H,maxLayers:c}=o;this.eventTarget.dispatchEvent(new CS(U,_,G,H,c))}return!1}const C=n6(E,R||0,I,N,i,S);if(C){C.onAdd(this,T),this.tags.push(C);const{layers:U=0,maxLayers:_=0}=C instanceof _O?C:{};this.eventTarget.dispatchEvent(new CS(C.tagType,C.side,C.turnCount,U,_))}return!0}getTag(E){return this.getTagOnSide(E,qe.BOTH)}hasTag(E){return!!this.getTag(E)}getTagOnSide(E,R){return typeof E=="string"?this.tags.find(I=>I.tagType===E&&(R===qe.BOTH||I.side===qe.BOTH||I.side===R)):this.tags.find(I=>I instanceof E&&(R===qe.BOTH||I.side===qe.BOTH||I.side===R))}findTags(E){return this.findTagsOnSide(E,qe.BOTH)}findTagsOnSide(E,R){return this.tags.filter(I=>E(I)&&(R===qe.BOTH||I.side===qe.BOTH||I.side===R))}lapseTags(){this.tags.filter(E=>!E.lapse(this)).forEach(E=>{E.onRemove(this),this.tags.splice(this.tags.indexOf(E),1),this.eventTarget.dispatchEvent(new ms(E.tagType,E.side,E.turnCount))})}removeTag(E){const R=this.tags,I=R.find(N=>N.tagType===E);return I&&(I.onRemove(this),R.splice(R.indexOf(I),1),this.eventTarget.dispatchEvent(new ms(I.tagType,I.side,I.turnCount))),!!I}removeTagOnSide(E,R,I=!1){const N=this.getTagOnSide(E,R);return N&&(N.onRemove(this,I),this.tags.splice(this.tags.indexOf(N),1),this.eventTarget.dispatchEvent(new ms(N.tagType,N.side,N.turnCount))),!!N}removeAllTags(){for(;this.tags.length;)this.tags[0].onRemove(this),this.eventTarget.dispatchEvent(new ms(this.tags[0].tagType,this.tags[0].side,this.tags[0].turnCount)),this.tags.splice(0,1)}resetArenaEffects(){var E;((E=this.weather)==null?void 0:E.turnsLeft)!==0&&this.trySetWeather(X.NONE),this.trySetTerrain($e.NONE,!0),this.resetPlayerFaintCount(),this.removeAllTags()}preloadBgm(){s.loadBgm(this.bgm)}getBgmLoopPoint(){switch(this.biomeType){case n.TOWN:return 7.288;case n.PLAINS:return 17.485;case n.GRASS:return 1.995;case n.TALL_GRASS:return 9.608;case n.METROPOLIS:return 141.47;case n.FOREST:return .341;case n.SEA:return .024;case n.SWAMP:return 4.461;case n.BEACH:return 3.462;case n.LAKE:return 7.215;case n.SEABED:return 2.6;case n.MOUNTAIN:return 4.018;case n.BADLANDS:return 17.79;case n.CAVE:return 14.24;case n.DESERT:return 1.143;case n.ICE_CAVE:return 0;case n.MEADOW:return 3.891;case n.POWER_PLANT:return 9.447;case n.VOLCANO:return 17.637;case n.GRAVEYARD:return 13.711;case n.DOJO:return 6.205;case n.FACTORY:return 4.985;case n.RUINS:return 0;case n.WASTELAND:return 6.336;case n.ABYSS:return 5.13;case n.SPACE:return 20.036;case n.CONSTRUCTION_SITE:return 1.222;case n.JUNGLE:return 0;case n.FAIRY_CAVE:return 4.542;case n.TEMPLE:return 2.547;case n.ISLAND:return 2.751;case n.LABORATORY:return 114.862;case n.SLUM:return 0;case n.SNOWY_FOREST:return 3.047;case n.END:return 17.153;default:return console.warn(`missing bgm loop-point for biome "${n[this.biomeType]}" (=${this.biomeType})`),0}}resetPlayerFaintCount(){this.playerFaints=0}};r(Kw,"Arena");let W1=Kw;function ni(t){return n[t].toLowerCase()}r(ni,"getBiomeKey");function u6(t){switch(t){case n.METROPOLIS:case n.BEACH:case n.LAKE:case n.SEABED:case n.MOUNTAIN:case n.BADLANDS:case n.CAVE:case n.DESERT:case n.ICE_CAVE:case n.MEADOW:case n.POWER_PLANT:case n.VOLCANO:case n.GRAVEYARD:case n.FACTORY:case n.RUINS:case n.WASTELAND:case n.ABYSS:case n.CONSTRUCTION_SITE:case n.JUNGLE:case n.FAIRY_CAVE:case n.TEMPLE:case n.SNOWY_FOREST:case n.ISLAND:case n.LABORATORY:case n.END:return!0}return!1}r(u6,"getBiomeHasProps");const Fw=class Fw extends Phaser.GameObjects.Container{constructor(E){super(s,0,0),this.player=E,this.base=s.addFieldSprite(0,0,"plains_a",void 0,1),this.base.setOrigin(0,0),this.props=E?[]:new Array(3).fill(null).map(()=>{const R=s.addFieldSprite(0,0,"plains_b",void 0,1);return R.setOrigin(0,0),R.setVisible(!1),R})}setBiome(E,R){var T;const I=u6(E),N=ni(E),S=`${N}_${this.player?"a":"b"}`;if(E!==this.biome){if(this.base.setTexture(S),this.base.texture.frameTotal>1){const i=s.anims.generateFrameNames(S,{zeroPad:4,suffix:".png",start:1,end:this.base.texture.frameTotal-1});s.anims.exists(S)||s.anims.create({key:S,frames:i,frameRate:12,repeat:-1}),this.base.play(S)}else this.base.stop();this.add(this.base)}this.player||s.executeWithSeedOffset(()=>{this.propValue=R===void 0?I?De(8):0:R,this.props.forEach((i,o)=>{const C=`${N}_b${I?`_${o+1}`:""}`;if(i.setTexture(C),I&&i.texture.frameTotal>1){const U=s.anims.generateFrameNames(C,{zeroPad:4,suffix:".png",start:1,end:i.texture.frameTotal-1});s.anims.exists(C)||s.anims.create({key:C,frames:U,frameRate:12,repeat:-1}),i.play(C)}else i.stop();i.setVisible(I&&!!(this.propValue&1<<o)),this.add(i)})},((T=s.currentBattle)==null?void 0:T.waveIndex)||0,s.waveSeed)}};r(Fw,"ArenaBase");let nv=Fw,Yi;const Yw=class Yw extends Phaser.Loader.LoaderPlugin{constructor(E){super(E)}get manifest(){return Yi}set manifest(E){Yi=E}addFile(E){Array.isArray(E)||(E=[E]),E.forEach(R=>{if(Yi){const I=Yi[`/${R.url.replace(/\/\//g,"/")}`];I&&(R.url+=`?t=${I}`)}}),super.addFile(E)}};r(Yw,"CacheBustedLoaderPlugin");let m1=Yw;const DO={playTime:{label_key:"playTime",sourceFunc:r(t=>w1(t.gameStats.playTime),"sourceFunc")},battles:{label_key:"totalBattles",sourceFunc:r(t=>t.gameStats.battles.toString(),"sourceFunc")},startersUnlocked:{label_key:"starters",sourceFunc:r(t=>{const E=t.getStarterCount(R=>!!R.caughtAttr);return`${E} (${Math.floor(E/Object.keys(kE).length*1e3)/10}%)`},"sourceFunc")},shinyStartersUnlocked:{label_key:"shinyStarters",sourceFunc:r(t=>{const E=t.getStarterCount(R=>!!(R.caughtAttr&LA.SHINY));return`${E} (${Math.floor(E/Object.keys(kE).length*1e3)/10}%)`},"sourceFunc")},dexSeen:{label_key:"speciesSeen",sourceFunc:r(t=>{const E=t.getSpeciesCount(R=>!!R.seenAttr);return`${E} (${Math.floor(E/Object.keys(t.dexData).length*1e3)/10}%)`},"sourceFunc")},dexCaught:{label_key:"speciesCaught",sourceFunc:r(t=>{const E=t.getSpeciesCount(R=>!!R.caughtAttr);return`${E} (${Math.floor(E/Object.keys(t.dexData).length*1e3)/10}%)`},"sourceFunc")},ribbonsOwned:{label_key:"ribbonsOwned",sourceFunc:r(t=>t.gameStats.ribbonsOwned.toString(),"sourceFunc")},classicSessionsPlayed:{label_key:"classicRuns",sourceFunc:r(t=>t.gameStats.classicSessionsPlayed.toString(),"sourceFunc")},sessionsWon:{label_key:"classicWins",sourceFunc:r(t=>t.gameStats.sessionsWon.toString(),"sourceFunc")},dailyRunSessionsPlayed:{label_key:"dailyRunAttempts",sourceFunc:r(t=>t.gameStats.dailyRunSessionsPlayed.toString(),"sourceFunc")},dailyRunSessionsWon:{label_key:"dailyRunWins",sourceFunc:r(t=>t.gameStats.dailyRunSessionsWon.toString(),"sourceFunc")},endlessSessionsPlayed:{label_key:"endlessRuns",sourceFunc:r(t=>t.gameStats.endlessSessionsPlayed.toString(),"sourceFunc"),hidden:!0},highestEndlessWave:{label_key:"highestWaveEndless",sourceFunc:r(t=>t.gameStats.highestEndlessWave.toString(),"sourceFunc"),hidden:!0},highestMoney:{label_key:"highestMoney",sourceFunc:r(t=>aP(t.gameStats.highestMoney),"sourceFunc")},highestDamage:{label_key:"highestDamage",sourceFunc:r(t=>t.gameStats.highestDamage.toString(),"sourceFunc")},highestHeal:{label_key:"highestHPHealed",sourceFunc:r(t=>t.gameStats.highestHeal.toString(),"sourceFunc")},pokemonSeen:{label_key:"pokemonEncountered",sourceFunc:r(t=>t.gameStats.pokemonSeen.toString(),"sourceFunc")},pokemonDefeated:{label_key:"pokemonDefeated",sourceFunc:r(t=>t.gameStats.pokemonDefeated.toString(),"sourceFunc")},pokemonCaught:{label_key:"pokemonCaught",sourceFunc:r(t=>t.gameStats.pokemonCaught.toString(),"sourceFunc")},pokemonHatched:{label_key:"eggsHatched",sourceFunc:r(t=>t.gameStats.pokemonHatched.toString(),"sourceFunc")},subLegendaryPokemonSeen:{label_key:"subLegendsSeen",sourceFunc:r(t=>t.gameStats.subLegendaryPokemonSeen.toString(),"sourceFunc"),hidden:!0},subLegendaryPokemonCaught:{label_key:"subLegendsCaught",sourceFunc:r(t=>t.gameStats.subLegendaryPokemonCaught.toString(),"sourceFunc"),hidden:!0},subLegendaryPokemonHatched:{label_key:"subLegendsHatched",sourceFunc:r(t=>t.gameStats.subLegendaryPokemonHatched.toString(),"sourceFunc"),hidden:!0},legendaryPokemonSeen:{label_key:"legendsSeen",sourceFunc:r(t=>t.gameStats.legendaryPokemonSeen.toString(),"sourceFunc"),hidden:!0},legendaryPokemonCaught:{label_key:"legendsCaught",sourceFunc:r(t=>t.gameStats.legendaryPokemonCaught.toString(),"sourceFunc"),hidden:!0},legendaryPokemonHatched:{label_key:"legendsHatched",sourceFunc:r(t=>t.gameStats.legendaryPokemonHatched.toString(),"sourceFunc"),hidden:!0},mythicalPokemonSeen:{label_key:"mythicalsSeen",sourceFunc:r(t=>t.gameStats.mythicalPokemonSeen.toString(),"sourceFunc"),hidden:!0},mythicalPokemonCaught:{label_key:"mythicalsCaught",sourceFunc:r(t=>t.gameStats.mythicalPokemonCaught.toString(),"sourceFunc"),hidden:!0},mythicalPokemonHatched:{label_key:"mythicalsHatched",sourceFunc:r(t=>t.gameStats.mythicalPokemonHatched.toString(),"sourceFunc"),hidden:!0},shinyPokemonSeen:{label_key:"shiniesSeen",sourceFunc:r(t=>t.gameStats.shinyPokemonSeen.toString(),"sourceFunc"),hidden:!0},shinyPokemonCaught:{label_key:"shiniesCaught",sourceFunc:r(t=>t.gameStats.shinyPokemonCaught.toString(),"sourceFunc"),hidden:!0},shinyPokemonHatched:{label_key:"shiniesHatched",sourceFunc:r(t=>t.gameStats.shinyPokemonHatched.toString(),"sourceFunc"),hidden:!0},pokemonFused:{label_key:"pokemonFused",sourceFunc:r(t=>t.gameStats.pokemonFused.toString(),"sourceFunc"),hidden:!0},trainersDefeated:{label_key:"trainersDefeated",sourceFunc:r(t=>t.gameStats.trainersDefeated.toString(),"sourceFunc")},eggsPulled:{label_key:"eggsPulled",sourceFunc:r(t=>t.gameStats.eggsPulled.toString(),"sourceFunc"),hidden:!0},rareEggsPulled:{label_key:"rareEggsPulled",sourceFunc:r(t=>t.gameStats.rareEggsPulled.toString(),"sourceFunc"),hidden:!0},epicEggsPulled:{label_key:"epicEggsPulled",sourceFunc:r(t=>t.gameStats.epicEggsPulled.toString(),"sourceFunc"),hidden:!0},legendaryEggsPulled:{label_key:"legendaryEggsPulled",sourceFunc:r(t=>t.gameStats.legendaryEggsPulled.toString(),"sourceFunc"),hidden:!0},manaphyEggsPulled:{label_key:"manaphyEggsPulled",sourceFunc:r(t=>t.gameStats.manaphyEggsPulled.toString(),"sourceFunc"),hidden:!0}},Ww=class Ww extends gL{constructor(E=null){super(E),this.statLabels=[],this.statValues=[]}setup(){const E=this.getUi();this.gameStatsContainer=s.add.container(1,-(s.game.canvas.height/6)+1),this.gameStatsContainer.setInteractive(new Kt.Geom.Rectangle(0,0,s.game.canvas.width/6,s.game.canvas.height/6),Kt.Geom.Rectangle.Contains);const R=bt(0,0,s.game.canvas.width/6-2,24);R.setOrigin(0,0);const I=We(0,0,D.t("gameStatsUiHandler:stats"),Se.SETTINGS_LABEL);I.setOrigin(0,0),I.setPositionRelative(R,8,4);const N=(s.game.canvas.width/6-2)/2,[S,T]=new Array(2).fill(null).map((o,C)=>{const U=N+2,_=Math.floor(s.game.canvas.height/6-R.height-2),G=bt((N-2)*C,R.height,U,_,!1,!1,C>0?-3:0,1);return G.setOrigin(0,0),G});this.statsContainer=s.add.container(0,0),new Array(18).fill(null).map((o,C)=>{const U=We(8+(C%2===1?N:0),28+Math.floor(C/2)*16,"",Se.STATS_LABEL);U.setOrigin(0,0),this.statsContainer.add(U),this.statLabels.push(U);const _=We(N*(C%2+1)-8,U.y,"",Se.STATS_VALUE);_.setOrigin(1,0),this.statsContainer.add(_),this.statValues.push(_)}),this.gameStatsContainer.add(R),this.gameStatsContainer.add(I),this.gameStatsContainer.add(S),this.gameStatsContainer.add(T),this.gameStatsContainer.add(this.statsContainer);const i=s.uiTheme===XO.LEGACY;this.arrowDown=s.add.sprite(N,s.game.canvas.height/6-(i?9:5),"prompt"),this.gameStatsContainer.add(this.arrowDown),this.arrowUp=s.add.sprite(N,R.height+(i?7:3),"prompt"),this.arrowUp.flipY=!0,this.gameStatsContainer.add(this.arrowUp),E.add(this.gameStatsContainer),this.setCursor(0),this.gameStatsContainer.setVisible(!1)}show(E){return super.show(E),this.setCursor(0),this.updateStats(),this.arrowUp.play("prompt"),this.arrowDown.play("prompt"),s.uiTheme===XO.LEGACY&&(this.arrowUp.setTint(4737096),this.arrowDown.setTint(4737096)),this.updateArrows(),this.gameStatsContainer.setVisible(!0),this.getUi().moveTo(this.gameStatsContainer,this.getUi().length-1),this.getUi().hideTooltip(),!0}updateStats(){const E=Object.keys(DO).slice(this.cursor*2,this.cursor*2+18);if(E.forEach((R,I)=>{const N=DO[R],S=N.sourceFunc(s.gameData);this.statLabels[I].setText(!N.hidden||Number.isNaN(Number.parseInt(S))||Number.parseInt(S)?D.t(`gameStatsUiHandler:${N.label_key}`):"???"),this.statValues[I].setText(S)}),E.length<18)for(let R=E.length;R<18;R++)this.statLabels[R].setText(""),this.statValues[R].setText("")}updateArrows(){const E=this.cursor>0;this.arrowUp.setVisible(E);const R=this.cursor<Math.ceil((Object.keys(DO).length-18)/2);this.arrowDown.setVisible(R)}processInput(E){const R=this.getUi();let I=!1;if(E===he.CANCEL)I=!0,s.ui.revertMode();else switch(E){case he.UP:this.cursor&&(I=this.setCursor(this.cursor-1));break;case he.DOWN:this.cursor<Math.ceil((Object.keys(DO).length-18)/2)&&(I=this.setCursor(this.cursor+1));break}return I&&R.playSelect(),I}setCursor(E){const R=super.setCursor(E);return R&&(this.updateStats(),this.updateArrows()),R}clear(){super.clear(),this.gameStatsContainer.setVisible(!1)}};r(Ww,"GameStatsUiHandler");let av=Ww;function hX(){const t=Object.keys(DO);for(const E of t){if(typeof DO[E]=="string"){let R=DO[E],I=!1;R.endsWith("?")&&(R=R.slice(0,-1),I=!0),DO[E]={label_key:R,sourceFunc:r(N=>N.gameStats[E].toString(),"sourceFunc"),hidden:I}}else DO[E]===null&&(DO[E]={sourceFunc:r(R=>R.gameStats[E].toString(),"sourceFunc")});if(!DO[E].label_key){const R=E.replace(/([a-z]{2,})([A-Z]{1}(?:[^A-Z]|$))/g,"$1_$2");DO[E].label_key=mN(`${R[0].toUpperCase()}${R.slice(1)}`)}}}r(hX,"initStatsKeys");const TN=class TN extends DP{constructor(){super(TN.KEY),this.LOAD_EVENTS=Phaser.Loader.Events,Phaser.Plugins.PluginCache.register("Loader",m1,"load")}preload(){E8(),this.load.manifest=this.game.manifest,this.loadImage("loading_bg","arenas"),this.loadImage("logo",""),this.loadAtlas("bg","ui"),this.loadAtlas("prompt","ui"),this.loadImage("candy","ui"),this.loadImage("candy_overlay","ui"),this.loadImage("friendship","ui"),this.loadImage("friendship_overlay","ui"),this.loadImage("cursor","ui"),this.loadImage("cursor_reverse","ui");for(const R of Ct(x1))for(let I=1;I<=5;I++)this.loadImage(`window_${I}${GT(R)}`,"ui/windows");this.loadAtlas("namebox","ui"),this.loadImage("pbinfo_player","ui"),this.loadImage("pbinfo_player_stats","ui"),this.loadImage("pbinfo_player_mini","ui"),this.loadImage("pbinfo_player_mini_stats","ui"),this.loadAtlas("pbinfo_player_type","ui"),this.loadAtlas("pbinfo_player_type1","ui"),this.loadAtlas("pbinfo_player_type2","ui"),this.loadImage("pbinfo_enemy_mini","ui"),this.loadImage("pbinfo_enemy_mini_stats","ui"),this.loadImage("pbinfo_enemy_boss","ui"),this.loadImage("pbinfo_enemy_boss_stats","ui"),this.loadAtlas("pbinfo_enemy_type","ui"),this.loadAtlas("pbinfo_enemy_type1","ui"),this.loadAtlas("pbinfo_enemy_type2","ui"),this.loadAtlas("pbinfo_stat","ui"),this.loadAtlas("pbinfo_stat_numbers","ui"),this.loadImage("overlay_lv","ui"),this.loadAtlas("numbers","ui"),this.loadAtlas("numbers_red","ui"),this.loadAtlas("overlay_hp","ui"),this.loadAtlas("overlay_hp_boss","ui"),this.loadImage("overlay_exp","ui"),this.loadImage("icon_owned","ui"),this.loadImage("icon_egg_move","ui"),this.loadImage("ability_bar_left","ui"),this.loadImage("ability_bar_right","ui"),this.loadImage("bgm_bar","ui"),this.loadImage("party_exp_bar","ui"),this.loadImage("achv_bar","ui"),this.loadImage("achv_bar_2","ui"),this.loadImage("achv_bar_3","ui"),this.loadImage("achv_bar_4","ui"),this.loadImage("achv_bar_5","ui"),this.loadImage("shiny_star","ui","shiny.png"),this.loadImage("shiny_star_1","ui","shiny_1.png"),this.loadImage("shiny_star_2","ui","shiny_2.png"),this.loadImage("shiny_star_small","ui","shiny_small.png"),this.loadImage("shiny_star_small_1","ui","shiny_small_1.png"),this.loadImage("shiny_star_small_2","ui","shiny_small_2.png"),this.loadImage("favorite","ui","favorite.png"),this.loadImage("passive_bg","ui","passive_bg.png"),this.loadAtlas("shiny_icons","ui"),this.loadImage("ha_capsule","ui","ha_capsule.png"),this.loadImage("champion_ribbon","ui","champion_ribbon.png"),this.loadImage("icon_spliced","ui"),this.loadImage("icon_lock","ui","icon_lock.png"),this.loadImage("icon_stop","ui","icon_stop.png"),this.loadImage("icon_tera","ui"),this.loadImage("cursor_tera","ui"),this.loadImage("type_tera","ui"),this.loadAtlas("type_bgs","ui"),this.loadAtlas("button_tera","ui"),this.loadImage("mystery_egg","ui"),this.loadImage("normal_memory","ui"),this.loadImage("dawn_icon_fg","ui"),this.loadImage("dawn_icon_mg","ui"),this.loadImage("dawn_icon_bg","ui"),this.loadImage("day_icon_fg","ui"),this.loadImage("day_icon_mg","ui"),this.loadImage("day_icon_bg","ui"),this.loadImage("dusk_icon_fg","ui"),this.loadImage("dusk_icon_mg","ui"),this.loadImage("dusk_icon_bg","ui"),this.loadImage("night_icon_fg","ui"),this.loadImage("night_icon_mg","ui"),this.loadImage("night_icon_bg","ui"),this.loadImage("pb_tray_overlay_player","ui"),this.loadImage("pb_tray_overlay_enemy","ui"),this.loadAtlas("pb_tray_ball","ui"),this.loadImage("party_bg","ui"),this.loadImage("party_bg_double","ui"),this.loadAtlas("party_slot_main","ui"),this.loadAtlas("party_slot","ui"),this.loadImage("party_slot_overlay_lv","ui"),this.loadImage("party_slot_hp_bar","ui"),this.loadAtlas("party_slot_hp_overlay","ui"),this.loadAtlas("party_pb","ui"),this.loadAtlas("party_cancel","ui"),this.loadImage("summary_bg","ui"),this.loadImage("summary_overlay_shiny","ui"),this.loadImage("summary_profile","ui"),this.loadImage("summary_profile_prompt_z","ui"),this.loadImage("summary_profile_prompt_a","ui"),this.loadImage("summary_profile_ability","ui"),this.loadImage("summary_profile_passive","ui"),this.loadImage("summary_status","ui"),this.loadImage("summary_stats","ui"),this.loadImage("summary_stats_overlay_exp","ui"),this.loadImage("summary_moves","ui"),this.loadImage("summary_moves_effect","ui"),this.loadImage("summary_moves_overlay_row","ui"),this.loadImage("summary_moves_overlay_pp","ui"),this.loadAtlas("summary_moves_cursor","ui");for(let R=1;R<=3;R++)this.loadImage(`summary_tabs_${R}`,"ui");this.loadImage("scroll_bar","ui"),this.loadImage("scroll_bar_handle","ui"),this.loadImage("starter_container_bg","ui"),this.loadImage("starter_select_bg","ui"),this.loadImage("pokedex_summary_bg","ui"),this.loadImage("select_cursor","ui"),this.loadImage("select_cursor_highlight","ui"),this.loadImage("select_cursor_highlight_thick","ui"),this.loadImage("select_cursor_pokerus","ui"),this.loadImage("select_gen_cursor","ui"),this.loadImage("select_gen_cursor_highlight","ui"),this.loadImage("saving_icon","ui"),this.loadImage("discord","ui"),this.loadImage("google","ui"),this.loadImage("settings_icon","ui"),this.loadImage("link_icon","ui"),this.loadImage("unlink_icon","ui"),this.loadImage("default_bg","arenas"),Ct(n).map(R=>{const I=n[R].toLowerCase(),N=I==="end",S=`${I}_a`,T=`${I}_b`;if(this.loadImage(`${I}_bg`,"arenas"),N?this.loadAtlas(S,"arenas"):this.loadImage(S,"arenas"),N?this.loadAtlas(T,"arenas"):this.loadImage(T,"arenas"),u6(R))for(let i=1;i<=3;i++){const o=i===3&&["power_plant","end"].find(U=>U===I),C=`${I}_b_${i}`;o?this.loadAtlas(C,"arenas"):this.loadImage(C,"arenas")}}),this.load.bitmapFont("item-count","fonts/item-count.png","fonts/item-count.xml"),this.loadAtlas("trainer_m_back","trainer"),this.loadAtlas("trainer_m_back_pb","trainer"),this.loadAtlas("trainer_f_back","trainer"),this.loadAtlas("trainer_f_back_pb","trainer"),this.loadAtlas("c_rival_m","character","rival_m"),this.loadAtlas("c_rival_f","character","rival_f"),this.loadImage("pkmn__back__sub","pokemon/back","sub.png"),this.loadImage("pkmn__sub","pokemon","sub.png"),this.loadAtlas("battle_stats","effects"),this.loadAtlas("shiny","effects"),this.loadAtlas("shiny_2","effects"),this.loadAtlas("shiny_3","effects"),this.loadImage("tera","effects"),this.loadAtlas("pb_particles","effects"),this.loadImage("evo_sparkle","effects"),this.loadAtlas("tera_sparkle","effects"),this.load.video("evo_bg","images/effects/evo_bg.mp4",!0),this.loadAtlas("pb",""),this.loadAtlas("items",""),this.loadAtlas("types","");const E=D.resolvedLanguage;if(E!=="en"?t8(E)?(this.loadAtlas(`statuses_${E}`,""),this.loadAtlas(`types_${E}`,"")):(this.loadAtlas("statuses",""),this.loadAtlas("types","")):(this.loadAtlas("statuses",""),this.loadAtlas("types","")),vE.activeEventHasBanner()){const R=vE.getEventBannerLangs();E&&R.includes(E)?this.loadImage(`${vE.getEventBannerFilename()}-${E}`,"events"):this.loadImage(`${vE.getEventBannerFilename()}-en`,"events")}this.loadAtlas("statuses",""),this.loadAtlas("categories",""),this.loadAtlas("egg","egg"),this.loadAtlas("egg_crack","egg"),this.loadAtlas("egg_icons","egg"),this.loadAtlas("egg_shard","egg"),this.loadAtlas("egg_lightrays","egg");for(const R of gN(Uv)){const I=R.toLowerCase();this.loadImage(`gacha_${I}`,"egg"),this.loadAtlas(`gacha_underlay_${I}`,"egg")}this.loadImage("gacha_glass","egg"),this.loadImage("gacha_eggs","egg"),this.loadAtlas("gacha_hatch","egg"),this.loadImage("gacha_knob","egg"),this.loadImage("egg_list_bg","ui"),this.loadImage("egg_summary_bg","ui"),this.loadImage("end_m","cg"),this.loadImage("end_f","cg");for(let R=0;R<10;R++)this.loadAtlas(`pokemon_icons_${R}`,""),R&&this.loadAtlas(`pokemon_icons_${R}v`,"");this.loadImage("encounter_radar","mystery-encounters"),this.loadAtlas("dualshock","inputs"),this.loadAtlas("xbox","inputs"),this.loadAtlas("keyboard","inputs"),this.loadSe("select","ui"),this.loadSe("menu_open","ui"),this.loadSe("error","ui"),this.loadSe("hit"),this.loadSe("hit_strong"),this.loadSe("hit_weak"),this.loadSe("stat_up"),this.loadSe("stat_down"),this.loadSe("faint"),this.loadSe("flee"),this.loadSe("low_hp"),this.loadSe("exp"),this.loadSe("level_up"),this.loadSe("sparkle"),this.loadSe("restore"),this.loadSe("shine"),this.loadSe("shing"),this.loadSe("charge"),this.loadSe("beam"),this.loadSe("upgrade"),this.loadSe("buy"),this.loadSe("achv"),this.loadSe("pb_rel"),this.loadSe("pb_throw"),this.loadSe("pb_bounce_1"),this.loadSe("pb_bounce_2"),this.loadSe("pb_move"),this.loadSe("pb_catch"),this.loadSe("pb_lock"),this.loadSe("crit_throw"),this.loadSe("pb_tray_enter"),this.loadSe("pb_tray_ball"),this.loadSe("pb_tray_empty"),this.loadSe("egg_crack"),this.loadSe("egg_hatch"),this.loadSe("gacha_dial"),this.loadSe("gacha_running"),this.loadSe("gacha_dispense"),this.loadSe("PRSFX- Transform","battle_anims"),this.loadBgm("menu"),this.loadBgm("level_up_fanfare","bw/level_up_fanfare.mp3"),this.loadBgm("item_fanfare","bw/item_fanfare.mp3"),this.loadBgm("minor_fanfare","bw/minor_fanfare.mp3"),this.loadBgm("heal","bw/heal.mp3"),this.loadBgm("victory_trainer","bw/victory_trainer.mp3"),this.loadBgm("victory_team_plasma","bw/victory_team_plasma.mp3"),this.loadBgm("victory_gym","bw/victory_gym.mp3"),this.loadBgm("victory_champion","bw/victory_champion.mp3"),this.loadBgm("evolution","bw/evolution.mp3"),this.loadBgm("evolution_fanfare","bw/evolution_fanfare.mp3"),this.load.plugin("rextexteditplugin","https://raw.githubusercontent.com/rexrainbow/phaser3-rex-notes/master/dist/rextexteditplugin.min.js",!0),this.loadLoadingScreen(),Z8(),ax(),hX(),HX(),cX(),BX(),Y8(),X8(),B9(),PX(),tX(),g8(),H9()}loadLoadingScreen(){const E=R8(),R=[],I=this.add.image(0,0,"");I.setOrigin(0,0),I.setScale(6),I.setVisible(!1);const N=this.add.graphics();N.lineStyle(4,16711935,1).setDepth(10);const S=this.add.graphics(),T=this.add.graphics();T.lineStyle(5,16711935,1),T.fillStyle(2236962,.8);const i=this.cameras.main.width,o=this.cameras.main.height,C=i/2,U=o/2,_=this.add.image(C,240,"");_.setVisible(!1),_.setOrigin(.5,.5),_.setScale(4);const G=this.make.text({x:C,y:U-24,text:"0%",style:{font:"72px emerald",color:"#ffffff"}});G.setOrigin(.5,.5);const H=this.make.text({x:C,y:U+48,text:"",style:{font:"48px emerald",color:"#ffffff"}});H.setOrigin(.5,.5);const c=this.make.text({x:C,y:H.y+152,text:D.t("menu:disclaimer"),style:{font:"72px emerald",color:"#DA3838"}});c.setOrigin(.5,.5);const f=this.make.text({x:C,y:c.y+120,text:D.t("menu:disclaimerDescription"),style:{font:"48px emerald",color:"#ffffff",align:"center"}});f.setOrigin(.5,.5),R.push(I,N,S,T,_,G,H,c,f),E||R.map(w=>w.setVisible(!1));const d=this.add.video(0,0);d.once(Phaser.GameObjects.Events.VIDEO_COMPLETE,w=>{this.tweens.add({targets:d,duration:500,alpha:0,ease:"Sine.easeIn",onComplete:r(()=>w.destroy(),"onComplete")});for(const m of R)m.setVisible(!0)}),d.setOrigin(0,0),d.setScale(3),this.load.once(this.LOAD_EVENTS.START,()=>{var w,m;d.loadURL("images/intro_dark.mp4",!0),E&&((w=d.video)==null||w.setAttribute("webkit-playsinline","webkit-playsinline"),(m=d.video)==null||m.setAttribute("playsinline","playsinline")),d.play()}),this.load.on(this.LOAD_EVENTS.PROGRESS,w=>{G.setText(`${Math.floor(w*100)}%`),S.clear(),S.fillStyle(16777215,.8),S.fillRect(C-320,360,640*w,64)}),this.load.on(this.LOAD_EVENTS.FILE_COMPLETE,w=>{switch(H.setText(D.t("menu:loadingAsset",{assetName:w})),w){case"loading_bg":I.setTexture("loading_bg"),E&&I.setVisible(!0);break;case"logo":_.setTexture("logo"),E&&_.setVisible(!0);break}}),this.load.on(this.LOAD_EVENTS.COMPLETE,()=>{for(const w of R)w.destroy();d.destroy()})}get gameHeight(){return this.game.config.height}get gameWidth(){return this.game.config.width}async create(){this.events.once(Phaser.Scenes.Events.DESTROY,()=>this.handleDestroy()),this.scene.start("battle")}handleDestroy(){console.debug(`Destroying ${TN.KEY} scene`),this.load.off(this.LOAD_EVENTS.PROGRESS),this.load.off(this.LOAD_EVENTS.FILE_COMPLETE),this.load.off(this.LOAD_EVENTS.COMPLETE),this.children.removeAll(!0),console.debug(`Destroyed ${TN.KEY} scene`)}};r(TN,"LoadingScene"),TN.KEY="loading";let g1=TN;const UQ=Object.freeze(Object.defineProperty({__proto__:null,LoadingScene:g1},Symbol.toStringTag,{value:"Module"}));export{jX as $,O as A,AA as B,GE as C,LA as D,nQ as E,$1 as F,AE as G,VX as H,vX as I,xX as J,XN as K,CE as L,aS as M,qE as N,Bs as O,uN as P,_L as Q,iG as R,BG as S,Se as T,Ce as U,JR as V,x1 as W,Bv as X,P as Y,YX as Z,e as _,bt as a,eQ as a$,PI as a0,oA as a1,ye as a2,SS as a3,WL as a4,QO as a5,j2 as a6,Ke as a7,gG as a8,sC as a9,mX as aA,tO as aB,JO as aC,vt as aD,t2 as aE,bO as aF,YA as aG,QP as aH,Kv as aI,HG as aJ,fG as aK,Uv as aL,SI as aM,K as aN,gX as aO,de as aP,DV as aQ,bX as aR,n as aS,Tv as aT,Sv as aU,TQ as aV,s7 as aW,vE as aX,sV as aY,Mb as aZ,AQ as a_,nC as aa,SQ as ab,PL as ac,Ze as ad,js as ae,ot as af,PO as ag,JI as ah,FA as ai,OR as aj,WX as ak,aE as al,Xe as am,wx as an,Ac as ao,yM as ap,Gb as aq,Pb as ar,tQ as as,fv as at,dv as au,Je as av,pG as aw,PE as ax,b8 as ay,fo as az,We as b,ys as b$,EQ as b0,hG as b1,dG as b2,CR as b3,MA as b4,xE as b5,mI as b6,QA as b7,xI as b8,BA as b9,Y as bA,CA as bB,W8 as bC,Vx as bD,aG as bE,_b as bF,RC as bG,tC as bH,X as bI,ms as bJ,CS as bK,_O as bL,qe as bM,oe as bN,Fa as bO,bE as bP,sA as bQ,Wx as bR,il as bS,Nt as bT,cL as bU,Es as bV,tt as bW,pR as bX,Dt as bY,lE as bZ,tN as b_,lT as ba,a as bb,BE as bc,TV as bd,rV as be,r2 as bf,st as bg,i2 as bh,jG as bi,cG as bj,av as bk,O2 as bl,R2 as bm,pL as bn,uL as bo,$X as bp,$e as bq,bS as br,FR as bs,bG as bt,hL as bu,iD as bv,Z as bw,rD as bx,te as by,kX as bz,MO as c,lC as c$,F0 as c0,Y0 as c1,iO as c2,kt as c3,mP as c4,r8 as c5,ZX as c6,bI as c7,Ic as c8,F8 as c9,rQ as cA,ss as cB,tT as cC,AI as cD,aQ as cE,dS as cF,qX as cG,iQ as cH,nl as cI,U_ as cJ,zX as cK,$E as cL,IC as cM,Rs as cN,P0 as cO,v_ as cP,x_ as cQ,zS as cR,ZA as cS,jR as cT,Ye as cU,$O as cV,_I as cW,eV as cX,RQ as cY,OQ as cZ,Fo as c_,J as ca,DA as cb,Nc as cc,aC as cd,$b as ce,K_ as cf,q9 as cg,bN as ch,MS as ci,US as cj,h as ck,BS as cl,XE as cm,Wt as cn,XA as co,CP as cp,u_ as cq,wT as cr,Dl as cs,LE as ct,RU as cu,AV as cv,Yt as cw,jS as cx,mD as cy,gD as cz,pA as d,BD as d$,fD as d0,B1 as d1,c1 as d2,Wi as d3,DP as d4,GL as d5,XO as d6,FT as d7,Zv as d8,DC as d9,i9 as dA,xN as dB,ev as dC,ba as dD,x9 as dE,A0 as dF,IV as dG,W1 as dH,EV as dI,be as dJ,KM as dK,pa as dL,Hx as dM,cx as dN,IL as dO,VG as dP,O0 as dQ,GC as dR,Fs as dS,ZP as dT,WE as dU,EI as dV,JX as dW,Ls as dX,AO as dY,ns as dZ,ET as d_,kP as da,V1 as db,lQ as dc,g1 as dd,z2 as de,yX as df,h1 as dg,Q8 as dh,nv as di,oQ as dj,CQ as dk,fM as dl,dM as dm,O8 as dn,FX as dp,QR as dq,m8 as dr,Rt as ds,bP as dt,Me as du,jo as dv,Kr as dw,yE as dx,l as dy,xA as dz,gL as e,HD as e0,eE as e1,QX as e2,lt as e3,TO as e4,k8 as e5,q1 as e6,gP as e7,Ft as e8,KD as e9,FD as ea,hD as eb,JE as ec,wX as ed,JS as ee,dD as ef,nE as eg,zG as eh,CT as ei,ge as ej,BM as ek,LQ as el,IQ as em,qN as en,x as eo,NQ as ep,ps as eq,fC as er,$a as es,UQ as et,yL as f,et as g,L as h,u as i,pX as j,OT as k,WP as l,XX as m,fI as n,nO as o,OZ as p,fL as q,KX as r,NO as s,JP as t,B8 as u,uI as v,kE as w,pi as x,DT as y,sQ as z};
